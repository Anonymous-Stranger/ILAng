branches:
  only:
    - master
    - travis
    - coverity_scan

git:
  depth: 1
  submodules: false

sudo: required

language: cpp

env:
  global:
   - secure: "RwHto3MzZ2KTsGK2LiCKCxdN/xzuWiCTO+2+zhfPjVujGMx84QdMHC5fRu94VoJ5PdZ5QHwoWy3jqQ0f2PJE7oRQe28w/ENY32yDl/ziRjY1U6k4p2pcfgYQtsyyof60mL+yG6Yzz4hlJ74uQ+arhdvyAYYvliyvUiHkLgp4XvJhmsqpogkL89pERAeZ32Xg22ajzXZD5tcWQ7CbCDVKOE0KrwktU3UG08VxMmgfjKG+rU1MKj5R8rXtwZrMzqEAzosTEK0miZYJcgO0pVStCeAC2UAZllEpWXaR2EW5plb/hXRmFjRSlWflasGzJ7VB6mZ95w4xm2DICKYgcrwPWgiMnwoEByrJBh0M7xBzU1MTFmbiqB5wSSsWfVA7zv+SLmD4mCww4HKxAkE2cDJ3MOAvK8bp1vCULBCMMmbVFNGQgBprZKoxUlpQLNn+y9C6pQoaCej9/KVdkyiSQ8SM2vXDoS4/CGnoeaOAoNpu5mkPmDk7RRjIPjdS7by9xycYXAoUVVty/EZideCrYswe1KvH87GK6Fd91XITHuhuc/Aw4Jg0zXjxx6dcHbjZKuYN5MgNMx4IWK+lNiKPyLGO1/AnFG1UP+CpOC6QE8XZNhcnvn3q4r6c+v/QbeoEE7O/XOXqJDSEumJ5b2psBuoktl52azKgUqMtDzuTWjv6BvY="


cache:
  directories:
    - $HOME/_cache

matrix:
  include:
    - name: "linux-gcc"
      os: linux
      dist: xenial
      compiler: gcc
      before_install:
        - gem install coveralls-lcov
      before_script:
        - mkdir -p $TRAVIS_BUILD_DIR/build 
        - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then source $TRAVIS_BUILD_DIR/scripts/travis/clean-coverage.sh $TRAVIS_BUILD_DIR/build; fi
      after_success:
        - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then source $TRAVIS_BUILD_DIR/scripts/travis/submit-coverage.sh $TRAVIS_BUILD_DIR/build; fi

    - name: "linux-clang"
      os: linux
      dist: xenial
      compiler: clang
      before_install:
        - export LD_LIBRARY_PATH=/usr/local/clang/lib:$LD_LIBRARY_PATH

    - name: "gcc49"
      os: linux
      dist: xenial
      addons:
        apt: 
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
            - flex
            - bison
            - libboost-all-dev
            - z3
            - libz3-dev
      env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
      before_install:
        - eval "${MATRIX_EVAL}"

    - name: "osx"
      os: osx
      before_install:
        - brew install bison
        - export PATH="/usr/local/opt/bison/bin:$PATH"
        - export LDFLAGS="-L/usr/local/opt/bison/lib"

    - name: "coverity"
      os: linux
      dist: xenial
      compiler: gcc
      addons:
        coverity_scan:
          project:
            name: "Bo-Yuan-Huang/ILAng"
            description: "A modeling and verification platform for SoCs"
          notification_email: byhuang1992@gmail.com
          build_command_prepend: "cd $TRAVIS_BUILD_DIR && mkdir -p build && cd build && cmake .. -DILANG_BUILD_TEST=OFF"
          build_command: "make"
          branch_pattern: coverity_scan
      before_install:
        - if [ ${COVERITY_SCAN_BRANCH} = 1 ]; then echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca- ; fi
      before_script:
        - if [ ${COVERITY_SCAN_BRANCH} = 1 ]; then source $TRAVIS_BUILD_DIR/scripts/travis/install-externs.sh $TRAVIS_BUILD_DIR; fi

addons:
  apt:
    update: true
    packages:
      - lcov
      - flex
      - bison
      - libboost-all-dev
      - z3
      - libz3-dev
  homebrew:
    update: true
    packages:
      - flex
      - python
      - boost
      - boost-python
      - z3

script:
  - if [ ${COVERITY_SCAN_BRANCH} != 1 ]; then source $TRAVIS_BUILD_DIR/scripts/travis/build.sh $TRAVIS_BUILD_DIR; fi

notifications:
    email: false
