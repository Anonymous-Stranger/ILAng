[]
['cvta.to.global.u64', '%rd3', '%rd2']
['mov.u32', '%r4', '%tid.x']
['shr.u32', '%r5', '%r4', '31']
['add.s32', '%r6', '%r4', '%r5']
['and.b32', '%r7', '%r6', '-2']
['sub.s32', '%r8', '%r4', '%r7']
['setp.eq.s32', '%p1', '%r8', '1']
['mul.wide.s32', '%rd4', '%r4', '4']
['add.s64', '%rd1', '%rd3', '%rd4']
['@', '%p1', 'bra', 'BB0_2']
['bra.uni', 'BB0_1']
[]
['BB0_2:']
['ld.global.u32', '%r11', '%rd1']
['ld.global.u32', '%r12', '%rd1+-4']
['add.s32', '%r13', '%r11', '%r12']
['bra.uni', 'BB0_3']
[]
['BB0_1:']
['ld.global.u32', '%r9', '%rd1']
['ld.global.u32', '%r10', '%rd1+4']
['add.s32', '%r13', '%r9', '%r10']
[]
['BB0_3:']
['st.global.u32', '%rd1', '%r13']
['ret']
['}']
[]
[]
[]
['cvta.to.global.u64', '%rd3', '%rd2']
['mov.u32', '%r4', '%tid.x']
['shr.u32', '%r5', '%r4', '31']
['add.s32', '%r6', '%r4', '%r5']
['and.b32', '%r7', '%r6', '-2']
['sub.s32', '%r8', '%r4', '%r7']
['setp.eq.s32', '%p1', '%r8', '1']
['mul.wide.s32', '%rd4', '%r4', '4']
['add.s64', '%rd1', '%rd3', '%rd4']
['@', '%p1', 'bra', 'BB0_2']
['bra.uni', 'BB0_1']
[]
['BB0_2:']
['ld.global.u32', '%r11', '%rd1']
['ld.global.u32', '%r12', '%rd1+-4']
['add.s32', '%r13', '%r11', '%r12']
['bra.uni', 'BB0_3']
[]
['BB0_1:']
['ld.global.u32', '%r9', '%rd1']
['ld.global.u32', '%r10', '%rd1+4']
['add.s32', '%r13', '%r9', '%r10']
[]
['BB0_3:']
['st.global.u32', '%rd1', '%r13']
['ret']
['}']
[]
[]
(if false 0x0 (if (and (and (eq pc 0x48) (eq (apply_fun arb_fun_0) 0x1)) true) 0x1 (if (and (and (eq pc 0x40) (eq (apply_fun arb_fun_0) 0x1)) (and true (eq %p1_0 0x0))) 0x1 (if (and (and (eq pc 0x3C) (eq (apply_fun arb_fun_0) 0x1)) (and true (eq %p1_0 0x0))) 0x1 (if (and (and (eq pc 0x2C) (eq (apply_fun arb_fun_0) 0x1)) (and true (eq %p1_0 0x1))) 0x1 (if (and (and (eq pc 0x30) (eq (apply_fun arb_fun_0) 0x1)) (and true (eq %p1_0 0x1))) 0x1 en_log_register))))))
True
0.95
