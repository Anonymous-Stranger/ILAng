[Z3ExprAdapter.operator()] x
[Z3ExprAdapter._populateExprMap] entering: x
[Z3ExprAdapter._populateExprMap] x --> x
[Z3ExprAdapter.operator()] y
[Z3ExprAdapter._populateExprMap] entering: y
[Z3ExprAdapter._populateExprMap] y --> y
[Z3ExprAdapter.operator()] (eq x y)
[Z3ExprAdapter._populateExprMap] entering: (eq x y)
[Z3ExprAdapter.getBoolOpExpr] boolop: (eq x y)
[Z3ExprAdapter._populateExprMap] (eq x y) --> (= x y)
[Z3ExprAdapter.operator()] (and x y)
[Z3ExprAdapter._populateExprMap] entering: (and x y)
[Z3ExprAdapter.getBoolOpExpr] boolop: (and x y)
[Z3ExprAdapter._populateExprMap] (and x y) --> (and x y)
[Z3ExprAdapter.operator()] (not x)
[Z3ExprAdapter._populateExprMap] entering: (not x)
[Z3ExprAdapter.getBoolOpExpr] boolop: (not x)
[Z3ExprAdapter._populateExprMap] (not x) --> (not x)
[Z3ExprAdapter.operator()] (not y)
[Z3ExprAdapter._populateExprMap] entering: (not y)
[Z3ExprAdapter.getBoolOpExpr] boolop: (not y)
[Z3ExprAdapter._populateExprMap] (not y) --> (not y)
[Z3ExprAdapter.operator()] (and (not x) (not y))
[Z3ExprAdapter._populateExprMap] entering: (and (not x) (not y))
[Z3ExprAdapter.getBoolOpExpr] boolop: (and (not x) (not y))
[Z3ExprAdapter._populateExprMap] (and (not x) (not y)) --> (and (not x) (not y))
[Z3ExprAdapter.operator()] (or (and x y) (and (not x) (not y)))
[Z3ExprAdapter._populateExprMap] entering: (or (and x y) (and (not x) (not y)))
[Z3ExprAdapter.getBoolOpExpr] boolop: (or (and x y) (and (not x) (not y)))
[Z3ExprAdapter._populateExprMap] (or (and x y) (and (not x) (not y))) --> (or (and x y) (and (not x) (not y)))
[Z3ExprAdapter.operator()] x
[Z3ExprAdapter._populateExprMap] entering: x
[Z3ExprAdapter._populateExprMap] x --> x
[Z3ExprAdapter.operator()] y
[Z3ExprAdapter._populateExprMap] entering: y
[Z3ExprAdapter._populateExprMap] y --> y
[Z3ExprAdapter.operator()] (eq x y)
[Z3ExprAdapter._populateExprMap] entering: (eq x y)
[Z3ExprAdapter.getBoolOpExpr] boolop: (eq x y)
[Z3ExprAdapter._populateExprMap] (eq x y) --> (= x y)
[Z3ExprAdapter.operator()] (not (eq x y))
[Z3ExprAdapter._populateExprMap] entering: (not (eq x y))
[Z3ExprAdapter.getBoolOpExpr] boolop: (not (eq x y))
[Z3ExprAdapter._populateExprMap] (not (eq x y)) --> (not (= x y))
[Z3ExprAdapter.operator()] (and x y)
[Z3ExprAdapter._populateExprMap] entering: (and x y)
[Z3ExprAdapter.getBoolOpExpr] boolop: (and x y)
[Z3ExprAdapter._populateExprMap] (and x y) --> (and x y)
[Z3ExprAdapter.operator()] (not x)
[Z3ExprAdapter._populateExprMap] entering: (not x)
[Z3ExprAdapter.getBoolOpExpr] boolop: (not x)
[Z3ExprAdapter._populateExprMap] (not x) --> (not x)
[Z3ExprAdapter.operator()] (not y)
[Z3ExprAdapter._populateExprMap] entering: (not y)
[Z3ExprAdapter.getBoolOpExpr] boolop: (not y)
[Z3ExprAdapter._populateExprMap] (not y) --> (not y)
[Z3ExprAdapter.operator()] (and (not x) (not y))
[Z3ExprAdapter._populateExprMap] entering: (and (not x) (not y))
[Z3ExprAdapter.getBoolOpExpr] boolop: (and (not x) (not y))
[Z3ExprAdapter._populateExprMap] (and (not x) (not y)) --> (and (not x) (not y))
[Z3ExprAdapter.operator()] (or (and x y) (and (not x) (not y)))
[Z3ExprAdapter._populateExprMap] entering: (or (and x y) (and (not x) (not y)))
[Z3ExprAdapter.getBoolOpExpr] boolop: (or (and x y) (and (not x) (not y)))
[Z3ExprAdapter._populateExprMap] (or (and x y) (and (not x) (not y))) --> (or (and x y) (and (not x) (not y)))
[Z3ExprAdapter.operator()] (not (or (and x y) (and (not x) (not y))))
[Z3ExprAdapter._populateExprMap] entering: (not (or (and x y) (and (not x) (not y))))
[Z3ExprAdapter.getBoolOpExpr] boolop: (not (or (and x y) (and (not x) (not y))))
[Z3ExprAdapter._populateExprMap] (not (or (and x y) (and (not x) (not y)))) --> (not (or (and x y) (and (not x) (not y))))
[Z3ExprAdapter.operator()] x
[Z3ExprAdapter._populateExprMap] entering: x
[Z3ExprAdapter._populateExprMap] x --> x
[Z3ExprAdapter.operator()] y
[Z3ExprAdapter._populateExprMap] entering: y
[Z3ExprAdapter._populateExprMap] y --> y
[Z3ExprAdapter.operator()] (eq x y)
[Z3ExprAdapter._populateExprMap] entering: (eq x y)
[Z3ExprAdapter.getBoolOpExpr] boolop: (eq x y)
[Z3ExprAdapter._populateExprMap] (eq x y) --> (= x y)
[Z3ExprAdapter.operator()] (not (eq x y))
[Z3ExprAdapter._populateExprMap] entering: (not (eq x y))
[Z3ExprAdapter.getBoolOpExpr] boolop: (not (eq x y))
[Z3ExprAdapter._populateExprMap] (not (eq x y)) --> (not (= x y))
[Z3ExprAdapter.operator()] (and x y)
[Z3ExprAdapter._populateExprMap] entering: (and x y)
[Z3ExprAdapter.getBoolOpExpr] boolop: (and x y)
[Z3ExprAdapter._populateExprMap] (and x y) --> (and x y)
[Z3ExprAdapter.operator()] (not x)
[Z3ExprAdapter._populateExprMap] entering: (not x)
[Z3ExprAdapter.getBoolOpExpr] boolop: (not x)
[Z3ExprAdapter._populateExprMap] (not x) --> (not x)
[Z3ExprAdapter.operator()] (not y)
[Z3ExprAdapter._populateExprMap] entering: (not y)
[Z3ExprAdapter.getBoolOpExpr] boolop: (not y)
[Z3ExprAdapter._populateExprMap] (not y) --> (not y)
[Z3ExprAdapter.operator()] (and (not x) (not y))
[Z3ExprAdapter._populateExprMap] entering: (and (not x) (not y))
[Z3ExprAdapter.getBoolOpExpr] boolop: (and (not x) (not y))
[Z3ExprAdapter._populateExprMap] (and (not x) (not y)) --> (and (not x) (not y))
[Z3ExprAdapter.operator()] (or (and x y) (and (not x) (not y)))
[Z3ExprAdapter._populateExprMap] entering: (or (and x y) (and (not x) (not y)))
[Z3ExprAdapter.getBoolOpExpr] boolop: (or (and x y) (and (not x) (not y)))
[Z3ExprAdapter._populateExprMap] (or (and x y) (and (not x) (not y))) --> (or (and x y) (and (not x) (not y)))
(define-fun y () Bool
  true)
(define-fun x () Bool
  false)
true
false
[Z3ExprAdapter.operator()] x
[Z3ExprAdapter._populateExprMap] entering: x
[Z3ExprAdapter._populateExprMap] x --> x
[Z3ExprAdapter.operator()] y
[Z3ExprAdapter._populateExprMap] entering: y
[Z3ExprAdapter._populateExprMap] y --> y
[Z3ExprAdapter.operator()] (eq x y)
[Z3ExprAdapter._populateExprMap] entering: (eq x y)
[Z3ExprAdapter.getBoolOpExpr] boolop: (eq x y)
[Z3ExprAdapter._populateExprMap] (eq x y) --> (= x y)
[Z3ExprAdapter.operator()] (and x y)
[Z3ExprAdapter._populateExprMap] entering: (and x y)
[Z3ExprAdapter.getBoolOpExpr] boolop: (and x y)
[Z3ExprAdapter._populateExprMap] (and x y) --> (and x y)
[Z3ExprAdapter.operator()] (not x)
[Z3ExprAdapter._populateExprMap] entering: (not x)
[Z3ExprAdapter.getBoolOpExpr] boolop: (not x)
[Z3ExprAdapter._populateExprMap] (not x) --> (not x)
[Z3ExprAdapter.operator()] (not y)
[Z3ExprAdapter._populateExprMap] entering: (not y)
[Z3ExprAdapter.getBoolOpExpr] boolop: (not y)
[Z3ExprAdapter._populateExprMap] (not y) --> (not y)
[Z3ExprAdapter.operator()] (and (not x) (not y))
[Z3ExprAdapter._populateExprMap] entering: (and (not x) (not y))
[Z3ExprAdapter.getBoolOpExpr] boolop: (and (not x) (not y))
[Z3ExprAdapter._populateExprMap] (and (not x) (not y)) --> (and (not x) (not y))
[Z3ExprAdapter.operator()] (or (and x y) (and (not x) (not y)))
[Z3ExprAdapter._populateExprMap] entering: (or (and x y) (and (not x) (not y)))
[Z3ExprAdapter.getBoolOpExpr] boolop: (or (and x y) (and (not x) (not y)))
[Z3ExprAdapter._populateExprMap] (or (and x y) (and (not x) (not y))) --> (or (and x y) (and (not x) (not y)))
[Z3ExprAdapter.operator()] (not (or (and x y) (and (not x) (not y))))
[Z3ExprAdapter._populateExprMap] entering: (not (or (and x y) (and (not x) (not y))))
[Z3ExprAdapter.getBoolOpExpr] boolop: (not (or (and x y) (and (not x) (not y))))
[Z3ExprAdapter._populateExprMap] (not (or (and x y) (and (not x) (not y)))) --> (not (or (and x y) (and (not x) (not y))))
(define-fun y () Bool
  false)
(define-fun x () Bool
  false)
true
false
[Z3ExprAdapter.operator()] x
[Z3ExprAdapter._populateExprMap] entering: x
[Z3ExprAdapter._populateExprMap] x --> x
[Z3ExprAdapter.operator()] y
[Z3ExprAdapter._populateExprMap] entering: y
[Z3ExprAdapter._populateExprMap] y --> y
[Z3ExprAdapter.operator()] (and x y)
[Z3ExprAdapter._populateExprMap] entering: (and x y)
[Z3ExprAdapter.getBoolOpExpr] boolop: (and x y)
[Z3ExprAdapter._populateExprMap] (and x y) --> (and x y)
[Z3ExprAdapter.operator()] (not x)
[Z3ExprAdapter._populateExprMap] entering: (not x)
[Z3ExprAdapter.getBoolOpExpr] boolop: (not x)
[Z3ExprAdapter._populateExprMap] (not x) --> (not x)
[Z3ExprAdapter.operator()] (not y)
[Z3ExprAdapter._populateExprMap] entering: (not y)
[Z3ExprAdapter.getBoolOpExpr] boolop: (not y)
[Z3ExprAdapter._populateExprMap] (not y) --> (not y)
[Z3ExprAdapter.operator()] (or (not x) (not y))
[Z3ExprAdapter._populateExprMap] entering: (or (not x) (not y))
[Z3ExprAdapter.getBoolOpExpr] boolop: (or (not x) (not y))
[Z3ExprAdapter._populateExprMap] (or (not x) (not y)) --> (or (not x) (not y))
[Z3ExprAdapter.operator()] (not (or (not x) (not y)))
[Z3ExprAdapter._populateExprMap] entering: (not (or (not x) (not y)))
[Z3ExprAdapter.getBoolOpExpr] boolop: (not (or (not x) (not y)))
[Z3ExprAdapter._populateExprMap] (not (or (not x) (not y))) --> (not (or (not x) (not y)))
[Z3ExprAdapter.operator()] x
[Z3ExprAdapter._populateExprMap] entering: x
[Z3ExprAdapter._populateExprMap] x --> x
[Z3ExprAdapter.operator()] y
[Z3ExprAdapter._populateExprMap] entering: y
[Z3ExprAdapter._populateExprMap] y --> y
[Z3ExprAdapter.operator()] (and x y)
[Z3ExprAdapter._populateExprMap] entering: (and x y)
[Z3ExprAdapter.getBoolOpExpr] boolop: (and x y)
[Z3ExprAdapter._populateExprMap] (and x y) --> (and x y)
[Z3ExprAdapter.operator()] (eq x y)
[Z3ExprAdapter._populateExprMap] entering: (eq x y)
[Z3ExprAdapter.getBoolOpExpr] boolop: (eq x y)
[Z3ExprAdapter._populateExprMap] (eq x y) --> (= x y)
[Z3ExprAdapter.operator()] (not (eq x y))
[Z3ExprAdapter._populateExprMap] entering: (not (eq x y))
[Z3ExprAdapter.getBoolOpExpr] boolop: (not (eq x y))
[Z3ExprAdapter._populateExprMap] (not (eq x y)) --> (not (= x y))
(define-fun y () Bool
  true)
(define-fun x () Bool
  true)
true
false
[Z3ExprAdapter.operator()] a
[Z3ExprAdapter._populateExprMap] entering: a
[Z3ExprAdapter._populateExprMap] a --> a
[Z3ExprAdapter.operator()] (neg a)
[Z3ExprAdapter._populateExprMap] entering: (neg a)
[Z3ExprAdapter.getBvOpExpr] bvop: (neg a)
[Z3ExprAdapter._populateExprMap] (neg a) --> (bvneg a)
[Z3ExprAdapter.operator()] (~ a)
[Z3ExprAdapter._populateExprMap] entering: (~ a)
[Z3ExprAdapter.getBvOpExpr] bvop: (~ a)
[Z3ExprAdapter._populateExprMap] (~ a) --> (bvnot a)
[Z3ExprAdapter.operator()] 0x1
[Z3ExprAdapter._populateExprMap] entering: 0x1
[Z3ExprAdapter._populateExprMap] 0x1 --> #x01
[Z3ExprAdapter.operator()] (+ (~ a) 0x1)
[Z3ExprAdapter._populateExprMap] entering: (+ (~ a) 0x1)
[Z3ExprAdapter.getBvOpExpr] bvop: (+ (~ a) 0x1)
[Z3ExprAdapter._populateExprMap] (+ (~ a) 0x1) --> (bvadd (bvnot a) #x01)
[Z3ExprAdapter.operator()] a
[Z3ExprAdapter._populateExprMap] entering: a
[Z3ExprAdapter._populateExprMap] a --> a
[Z3ExprAdapter.operator()] (neg a)
[Z3ExprAdapter._populateExprMap] entering: (neg a)
[Z3ExprAdapter.getBvOpExpr] bvop: (neg a)
[Z3ExprAdapter._populateExprMap] (neg a) --> (bvneg a)
[Z3ExprAdapter.operator()] (~ a)
[Z3ExprAdapter._populateExprMap] entering: (~ a)
[Z3ExprAdapter.getBvOpExpr] bvop: (~ a)
[Z3ExprAdapter._populateExprMap] (~ a) --> (bvnot a)
[Z3ExprAdapter.operator()] 0x1
[Z3ExprAdapter._populateExprMap] entering: 0x1
[Z3ExprAdapter._populateExprMap] 0x1 --> #x01
[Z3ExprAdapter.operator()] (+ (~ a) 0x1)
[Z3ExprAdapter._populateExprMap] entering: (+ (~ a) 0x1)
[Z3ExprAdapter.getBvOpExpr] bvop: (+ (~ a) 0x1)
[Z3ExprAdapter._populateExprMap] (+ (~ a) 0x1) --> (bvadd (bvnot a) #x01)
[Z3ExprAdapter.operator()] (choice (+ (~ a) 0x1) (neg a))
[Z3ExprAdapter._populateExprMap] entering: (choice (+ (~ a) 0x1) (neg a))
[Z3ExprAdapter._populateExprMap] (choice (+ (~ a) 0x1) (neg a)) --> (ite choice.dummy.1 (bvneg a) (bvadd (bvnot a) #x01))
[Z3ExprAdapter.operator()] a
[Z3ExprAdapter._populateExprMap] entering: a
[Z3ExprAdapter._populateExprMap] a --> a
[Z3ExprAdapter.operator()] (~ a)
[Z3ExprAdapter._populateExprMap] entering: (~ a)
[Z3ExprAdapter.getBvOpExpr] bvop: (~ a)
[Z3ExprAdapter._populateExprMap] (~ a) --> (bvnot a)
[Z3ExprAdapter.operator()] 0x1
[Z3ExprAdapter._populateExprMap] entering: 0x1
[Z3ExprAdapter._populateExprMap] 0x1 --> #x01
[Z3ExprAdapter.operator()] (+ (~ a) 0x1)
[Z3ExprAdapter._populateExprMap] entering: (+ (~ a) 0x1)
[Z3ExprAdapter.getBvOpExpr] bvop: (+ (~ a) 0x1)
[Z3ExprAdapter._populateExprMap] (+ (~ a) 0x1) --> (bvadd (bvnot a) #x01)
[Z3ExprAdapter.operator()] (neg a)
[Z3ExprAdapter._populateExprMap] entering: (neg a)
[Z3ExprAdapter.getBvOpExpr] bvop: (neg a)
[Z3ExprAdapter._populateExprMap] (neg a) --> (bvneg a)
[Z3ExprAdapter.operator()] (choice (+ (~ a) 0x1) (neg a))
[Z3ExprAdapter._populateExprMap] entering: (choice (+ (~ a) 0x1) (neg a))
[Z3ExprAdapter._populateExprMap] (choice (+ (~ a) 0x1) (neg a)) --> (ite choice.dummy.1 (bvneg a) (bvadd (bvnot a) #x01))
[Z3ExprAdapter.operator()] a
[Z3ExprAdapter._populateExprMap] entering: a
[Z3ExprAdapter._populateExprMap] a --> a
[Z3ExprAdapter.operator()] (neg a)
[Z3ExprAdapter._populateExprMap] entering: (neg a)
[Z3ExprAdapter.getBvOpExpr] bvop: (neg a)
[Z3ExprAdapter._populateExprMap] (neg a) --> (bvneg a)
[Z3ExprAdapter.operator()] (~ a)
[Z3ExprAdapter._populateExprMap] entering: (~ a)
[Z3ExprAdapter.getBvOpExpr] bvop: (~ a)
[Z3ExprAdapter._populateExprMap] (~ a) --> (bvnot a)
[Z3ExprAdapter.operator()] 0x2
[Z3ExprAdapter._populateExprMap] entering: 0x2
[Z3ExprAdapter._populateExprMap] 0x2 --> #x02
[Z3ExprAdapter.operator()] (+ (~ a) 0x2)
[Z3ExprAdapter._populateExprMap] entering: (+ (~ a) 0x2)
[Z3ExprAdapter.getBvOpExpr] bvop: (+ (~ a) 0x2)
[Z3ExprAdapter._populateExprMap] (+ (~ a) 0x2) --> (bvadd (bvnot a) #x02)
(define-fun a () (_ BitVec 8)
  #x00)
#x00
#x01
[Z3ExprAdapter.operator()] a
[Z3ExprAdapter._populateExprMap] entering: a
[Z3ExprAdapter._populateExprMap] a --> a
[Z3ExprAdapter.operator()] (~ a)
[Z3ExprAdapter._populateExprMap] entering: (~ a)
[Z3ExprAdapter.getBvOpExpr] bvop: (~ a)
[Z3ExprAdapter._populateExprMap] (~ a) --> (bvnot a)
[Z3ExprAdapter.operator()] 0x1
[Z3ExprAdapter._populateExprMap] entering: 0x1
[Z3ExprAdapter._populateExprMap] 0x1 --> #x01
[Z3ExprAdapter.operator()] (+ (~ a) 0x1)
[Z3ExprAdapter._populateExprMap] entering: (+ (~ a) 0x1)
[Z3ExprAdapter.getBvOpExpr] bvop: (+ (~ a) 0x1)
[Z3ExprAdapter._populateExprMap] (+ (~ a) 0x1) --> (bvadd (bvnot a) #x01)
[Z3ExprAdapter.operator()] (neg a)
[Z3ExprAdapter._populateExprMap] entering: (neg a)
[Z3ExprAdapter.getBvOpExpr] bvop: (neg a)
[Z3ExprAdapter._populateExprMap] (neg a) --> (bvneg a)
[Z3ExprAdapter.operator()] (choice (+ (~ a) 0x1) (neg a))
[Z3ExprAdapter._populateExprMap] entering: (choice (+ (~ a) 0x1) (neg a))
[Z3ExprAdapter._populateExprMap] (choice (+ (~ a) 0x1) (neg a)) --> (ite choice.dummy.1 (bvneg a) (bvadd (bvnot a) #x01))
[Z3ExprAdapter.operator()] 0x2
[Z3ExprAdapter._populateExprMap] entering: 0x2
[Z3ExprAdapter._populateExprMap] 0x2 --> #x02
[Z3ExprAdapter.operator()] (+ (~ a) 0x2)
[Z3ExprAdapter._populateExprMap] entering: (+ (~ a) 0x2)
[Z3ExprAdapter.getBvOpExpr] bvop: (+ (~ a) 0x2)
[Z3ExprAdapter._populateExprMap] (+ (~ a) 0x2) --> (bvadd (bvnot a) #x02)
(define-fun a () (_ BitVec 8)
  #x00)
#x00
#x01
[Z3ExprAdapter.operator()] bv1
[Z3ExprAdapter._populateExprMap] entering: bv1
[Z3ExprAdapter._populateExprMap] bv1 --> bv1
[Z3ExprAdapter.operator()] bv2
[Z3ExprAdapter._populateExprMap] entering: bv2
[Z3ExprAdapter._populateExprMap] bv2 --> bv2
[Z3ExprAdapter.operator()] (+ bv1 bv2)
[Z3ExprAdapter._populateExprMap] entering: (+ bv1 bv2)
[Z3ExprAdapter.getBvOpExpr] bvop: (+ bv1 bv2)
[Z3ExprAdapter._populateExprMap] (+ bv1 bv2) --> (bvadd bv1 bv2)
[Z3ExprAdapter.operator()] (+ bv2 bv1)
[Z3ExprAdapter._populateExprMap] entering: (+ bv2 bv1)
[Z3ExprAdapter.getBvOpExpr] bvop: (+ bv2 bv1)
[Z3ExprAdapter._populateExprMap] (+ bv2 bv1) --> (bvadd bv2 bv1)

EXIT STATUS: 0
