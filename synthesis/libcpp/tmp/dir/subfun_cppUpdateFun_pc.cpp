#include "common.hpp"
#include "model_alu_class.hpp"

BIT_VEC model_alu::cppUpdateFun_pc()
{
	BIT_VEC cppVar_57;
	BIT_VEC cppVar_58;
	bool cppVar_59;
	BIT_VEC cppVar_60;
	bool cppVar_61;
	BIT_VEC cppVar_62;
	bool cppVar_63;
	BIT_VEC cppVar_64;
	bool cppVar_65;
	BIT_VEC cppVar_66;
	bool cppVar_67;
	BIT_VEC cppVar_68;
	bool cppVar_69;
	BIT_VEC cppVar_70;
	bool cppVar_71;
	BIT_VEC cppVar_72;
	bool cppVar_73;
	BIT_VEC cppVar_74;
	bool cppVar_75;
	BIT_VEC cppVar_76;
	bool cppVar_77;
	BIT_VEC cppVar_78;
	bool cppVar_79;
	BIT_VEC cppVar_80;
	bool cppVar_81;
	BIT_VEC cppVar_82;
	bool cppVar_83;
	BIT_VEC cppVar_84;
	bool cppVar_85;
	BIT_VEC cppVar_86;
	bool cppVar_87;
	BIT_VEC cppVar_88;
	bool cppVar_89;
	bool cppVar_90;
	bool cppVar_91;
	bool cppVar_92;
	BIT_VEC cppVar_39;
	bool cppVar_93;
	bool cppVar_94;
	bool cppVar_95;
	bool cppVar_96;
	bool cppVar_97;
	bool cppVar_98;
	bool cppVar_99;
	bool cppVar_100;
	bool cppVar_101;
	bool cppVar_102;
	bool cppVar_40;
	bool cppVar_103;
	bool cppVar_104;
	BIT_VEC cppVar_105;
	BIT_VEC cppVar_56;
	bool cppVar_41;
	bool cppVar_42;
	bool cppVar_43;
	bool cppVar_44;
	bool cppVar_45;
	bool cppVar_46;
	BIT_VEC cppVar_37;
	bool cppVar_47;
	bool cppVar_48;
	bool cppVar_49;
	bool cppVar_50;
	bool cppVar_51;
	bool cppVar_52;
	bool cppVar_53;
	bool cppVar_54;
	bool cppVar_55;
	BIT_VEC cppVar_7;
	bool cppVar_38;
	BIT_VEC cppVar_35;
	bool cppVar_36;
	BIT_VEC cppVar_33;
	bool cppVar_34;
	BIT_VEC cppVar_31;
	bool cppVar_32;
	BIT_VEC cppVar_29;
	bool cppVar_30;
	BIT_VEC cppVar_27;
	bool cppVar_28;
	BIT_VEC cppVar_25;
	bool cppVar_26;
	BIT_VEC cppVar_8;
	BIT_VEC cppVar_23;
	bool cppVar_24;
	BIT_VEC cppVar_21;
	bool cppVar_22;
	BIT_VEC cppVar_19;
	bool cppVar_20;
	BIT_VEC cppVar_17;
	bool cppVar_18;
	BIT_VEC cppVar_15;
	bool cppVar_16;
	BIT_VEC cppVar_13;
	bool cppVar_14;
	BIT_VEC cppVar_11;
	bool cppVar_12;
	BIT_VEC cppVar_9;
	bool cppVar_10;
	cppVar_8 = rom.rd(pc);
	cppVar_10 = (cppVar_8 == 15);
	cppVar_12 = (cppVar_8 == 14);
	cppVar_14 = (cppVar_8 == 13);
	cppVar_16 = (cppVar_8 == 12);
	cppVar_18 = (cppVar_8 == 11);
	cppVar_20 = (cppVar_8 == 10);
	cppVar_22 = (cppVar_8 == 9);
	cppVar_24 = (cppVar_8 == 8);
	cppVar_26 = (cppVar_8 == 7);
	cppVar_28 = (cppVar_8 == 6);
	cppVar_30 = (cppVar_8 == 5);
	cppVar_32 = (cppVar_8 == 4);
	cppVar_34 = (cppVar_8 == 3);
	cppVar_36 = (cppVar_8 == 2);
	cppVar_38 = (cppVar_8 == 1);
	cppVar_40 = (cppVar_8 == 0);
	cppVar_41 = cppVar_38 || cppVar_40;
	cppVar_42 = cppVar_36 || cppVar_41;
	cppVar_43 = cppVar_34 || cppVar_42;
	cppVar_44 = cppVar_32 || cppVar_43;
	cppVar_45 = cppVar_30 || cppVar_44;
	cppVar_46 = cppVar_28 || cppVar_45;
	cppVar_47 = cppVar_26 || cppVar_46;
	cppVar_48 = cppVar_24 || cppVar_47;
	cppVar_49 = cppVar_22 || cppVar_48;
	cppVar_50 = cppVar_20 || cppVar_49;
	cppVar_51 = cppVar_18 || cppVar_50;
	cppVar_52 = cppVar_16 || cppVar_51;
	cppVar_53 = cppVar_14 || cppVar_52;
	cppVar_54 = cppVar_12 || cppVar_53;
	cppVar_55 = cppVar_10 || cppVar_54;
	if (cppVar_55) {
	cppVar_57 = rom.rd(pc);
	cppVar_59 = (cppVar_57 == 15);
	cppVar_61 = (cppVar_57 == 14);
	cppVar_63 = (cppVar_57 == 13);
	cppVar_65 = (cppVar_57 == 12);
	cppVar_67 = (cppVar_57 == 11);
	cppVar_69 = (cppVar_57 == 10);
	cppVar_71 = (cppVar_57 == 9);
	cppVar_73 = (cppVar_57 == 8);
	cppVar_75 = (cppVar_57 == 7);
	cppVar_77 = (cppVar_57 == 6);
	cppVar_79 = (cppVar_57 == 5);
	cppVar_81 = (cppVar_57 == 4);
	cppVar_83 = (cppVar_57 == 3);
	cppVar_85 = (cppVar_57 == 2);
	cppVar_87 = (cppVar_57 == 1);
	cppVar_89 = (cppVar_57 == 0);
	cppVar_90 = cppVar_87 || cppVar_89;
	cppVar_91 = cppVar_85 || cppVar_90;
	cppVar_92 = cppVar_83 || cppVar_91;
	cppVar_93 = cppVar_81 || cppVar_92;
	cppVar_94 = cppVar_79 || cppVar_93;
	cppVar_95 = cppVar_77 || cppVar_94;
	cppVar_96 = cppVar_75 || cppVar_95;
	cppVar_97 = cppVar_73 || cppVar_96;
	cppVar_98 = cppVar_71 || cppVar_97;
	cppVar_99 = cppVar_69 || cppVar_98;
	cppVar_100 = cppVar_67 || cppVar_99;
	cppVar_101 = cppVar_65 || cppVar_100;
	cppVar_102 = cppVar_63 || cppVar_101;
	cppVar_103 = cppVar_61 || cppVar_102;
	cppVar_104 = cppVar_59 || cppVar_103;
	if (cppVar_104) {
	cppVar_105 = pc + 1;
	cppVar_105 = (cppVar_105 & cppMask_un_4_);
	cppVar_56 = cppVar_105;
	} else {
	cppVar_56 = pc;
	}
	cppVar_7 = cppVar_56;
	} else {
	cppVar_7 = pc;
	}
	return cppVar_7;
}
