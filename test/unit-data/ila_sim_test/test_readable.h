#include "systemc.h"
#include <map>
SC_MODULE(TEST) {
  sc_in< sc_biguint<2> > TEST_cmd_in;
  sc_biguint<2> TEST_cmd;
  sc_in< sc_biguint<16> > TEST_cmdaddr_in;
  sc_biguint<16> TEST_cmdaddr;
  sc_in< sc_biguint<8> > TEST_cmddata_in;
  sc_biguint<8> TEST_cmddata;
  sc_in<bool> TEST_cmdflag_in;
  bool TEST_cmdflag;
  sc_out< sc_biguint<2> > TEST_status_out;
  sc_biguint<2> TEST_status;
  sc_out< sc_biguint<16> > TEST_address_out;
  sc_biguint<16> TEST_address;
  sc_out< sc_biguint<16> > TEST_length_out;
  sc_biguint<16> TEST_length;
  sc_out< sc_biguint<128> > TEST_counter_out;
  sc_biguint<128> TEST_counter;
  sc_biguint<8> TEST_XRAM[65536];
  sc_out<bool> TEST_flag_out;
  bool TEST_flag;
  std::map< sc_biguint<32>, sc_biguint<32> > TEST_big_ram;
  sc_biguint<128> ENCRYPT_rd_data;
  sc_biguint<128> ENCRYPT_enc_data;
  sc_biguint<4> ENCRYPT_byte_cnt;
  sc_biguint<16> ENCRYPT_blk_cnt;
  bool decode_TEST_WRITE_ADDRESS();
  bool c_97776;
  bool c_97772;
  bool c_97778;
  bool c_97801;
  bool c_97794;
  bool c_97796;
  bool c_97798;
  bool c_97803;
  bool c_97790;
  bool c_97804;
  bool decode_TEST_START_ENCRYPT();
  bool c_97838;
  bool c_97834;
  bool c_97840;
  bool c_97830;
  bool c_97841;
  bool decode_ENCRYPT_LOAD();
  bool c_97855;
  bool c_97857;
  bool c_97877;
  bool decode_ENCRYPT_STORE();
  bool c_98148;
  sc_biguint<16> decode_TEST_WRITE_ADDRESS_update_TEST_address();
  bool c_97781;
  bool c_97816;
  sc_biguint<8> c_97812;
  sc_biguint<8> c_97818;
  bool c_97809;
  sc_biguint<8> c_97805;
  sc_biguint<8> c_97811;
  sc_biguint<16> c_97823;
  sc_biguint<16> c_97825;
  bool decode_TEST_WRITE_ADDRESS_update_TEST_flag();
  bool c_97826;
  sc_biguint<2> decode_TEST_START_ENCRYPT_update_TEST_status();
  sc_biguint<2> unknown0();
  sc_biguint<2> c_97844;
  sc_biguint<2> c_97847;
  sc_biguint<4> decode_ENCRYPT_LOAD_update_ENCRYPT_byte_cnt();
  sc_biguint<4> c_97881;
  sc_biguint<128> decode_ENCRYPT_LOAD_update_ENCRYPT_rd_data();
  sc_biguint<4> c_98126;
  bool c_98129;
  sc_biguint<16> c_97884;
  sc_biguint<16> c_97882;
  sc_biguint<16> c_97885;
  sc_biguint<8> c_97886;
  sc_biguint<8> c_98122;
  sc_biguint<8> c_98131;
  sc_biguint<4> c_98110;
  bool c_98113;
  sc_biguint<8> c_98106;
  sc_biguint<8> c_98115;
  sc_biguint<4> c_98094;
  bool c_98097;
  sc_biguint<8> c_98090;
  sc_biguint<8> c_98099;
  sc_biguint<4> c_98078;
  bool c_98081;
  sc_biguint<8> c_98074;
  sc_biguint<8> c_98083;
  sc_biguint<4> c_98062;
  bool c_98065;
  sc_biguint<8> c_98058;
  sc_biguint<8> c_98067;
  sc_biguint<4> c_98046;
  bool c_98049;
  sc_biguint<8> c_98042;
  sc_biguint<8> c_98051;
  sc_biguint<4> c_98030;
  bool c_98033;
  sc_biguint<8> c_98026;
  sc_biguint<8> c_98035;
  sc_biguint<4> c_98014;
  bool c_98017;
  sc_biguint<8> c_98010;
  sc_biguint<8> c_98019;
  sc_biguint<4> c_97998;
  bool c_98001;
  sc_biguint<8> c_97994;
  sc_biguint<8> c_98003;
  sc_biguint<4> c_97982;
  bool c_97985;
  sc_biguint<8> c_97978;
  sc_biguint<8> c_97987;
  sc_biguint<4> c_97966;
  bool c_97969;
  sc_biguint<8> c_97962;
  sc_biguint<8> c_97971;
  sc_biguint<4> c_97950;
  bool c_97953;
  sc_biguint<8> c_97946;
  sc_biguint<8> c_97955;
  sc_biguint<4> c_97934;
  bool c_97937;
  sc_biguint<8> c_97930;
  sc_biguint<8> c_97939;
  sc_biguint<4> c_97918;
  bool c_97921;
  sc_biguint<8> c_97914;
  sc_biguint<8> c_97923;
  sc_biguint<4> c_97902;
  bool c_97905;
  sc_biguint<8> c_97898;
  sc_biguint<8> c_97907;
  sc_biguint<4> c_97892;
  bool c_97895;
  sc_biguint<8> c_97888;
  sc_biguint<8> c_97897;
  sc_biguint<16> c_97912;
  sc_biguint<24> c_97928;
  sc_biguint<32> c_97944;
  sc_biguint<40> c_97960;
  sc_biguint<48> c_97976;
  sc_biguint<56> c_97992;
  sc_biguint<64> c_98008;
  sc_biguint<72> c_98024;
  sc_biguint<80> c_98040;
  sc_biguint<88> c_98056;
  sc_biguint<96> c_98072;
  sc_biguint<104> c_98088;
  sc_biguint<112> c_98104;
  sc_biguint<120> c_98120;
  sc_biguint<128> c_98136;
  sc_biguint<2> decode_ENCRYPT_LOAD_update_TEST_status();
  bool c_98142;
  sc_biguint<2> c_98144;
  void ite_98310(std::map<int, int>& mem_update_map);
  sc_biguint<16> c_98152;
  sc_biguint<16> c_98150;
  sc_biguint<16> c_98153;
  sc_biguint<4> c_98303;
  bool c_98306;
  sc_biguint<8> c_98299;
  sc_biguint<4> c_98293;
  bool c_98296;
  sc_biguint<8> c_98289;
  sc_biguint<4> c_98283;
  bool c_98286;
  sc_biguint<8> c_98279;
  sc_biguint<4> c_98273;
  bool c_98276;
  sc_biguint<8> c_98269;
  sc_biguint<4> c_98263;
  bool c_98266;
  sc_biguint<8> c_98259;
  sc_biguint<4> c_98253;
  bool c_98256;
  sc_biguint<8> c_98249;
  sc_biguint<4> c_98243;
  bool c_98246;
  sc_biguint<8> c_98239;
  sc_biguint<4> c_98233;
  bool c_98236;
  sc_biguint<8> c_98229;
  sc_biguint<4> c_98223;
  bool c_98226;
  sc_biguint<8> c_98219;
  sc_biguint<4> c_98213;
  bool c_98216;
  sc_biguint<8> c_98209;
  sc_biguint<4> c_98203;
  bool c_98206;
  sc_biguint<8> c_98199;
  sc_biguint<4> c_98193;
  bool c_98196;
  sc_biguint<8> c_98189;
  sc_biguint<4> c_98183;
  bool c_98186;
  sc_biguint<8> c_98179;
  sc_biguint<4> c_98173;
  bool c_98176;
  sc_biguint<8> c_98169;
  sc_biguint<4> c_98163;
  bool c_98166;
  sc_biguint<8> c_98159;
  sc_biguint<8> c_98157;
  sc_biguint<8> c_98168;
  sc_biguint<8> c_98178;
  sc_biguint<8> c_98188;
  sc_biguint<8> c_98198;
  sc_biguint<8> c_98208;
  sc_biguint<8> c_98218;
  sc_biguint<8> c_98228;
  sc_biguint<8> c_98238;
  sc_biguint<8> c_98248;
  sc_biguint<8> c_98258;
  sc_biguint<8> c_98268;
  sc_biguint<8> c_98278;
  sc_biguint<8> c_98288;
  sc_biguint<8> c_98298;
  sc_biguint<8> c_98308;
  std::map<int, int> decode_ENCRYPT_STORE_update_TEST_XRAM_map;
  void decode_ENCRYPT_STORE_update_TEST_XRAM(std::map<int, int>& mem_update_map);
  sc_biguint<16> decode_ENCRYPT_STORE_update_ENCRYPT_blk_cnt();
  bool c_98322;
  sc_biguint<16> c_98316;
  bool c_98317;
  sc_biguint<16> c_98313;
  sc_biguint<16> c_98319;
  sc_biguint<16> c_98324;
  sc_biguint<4> decode_ENCRYPT_STORE_update_ENCRYPT_byte_cnt();
  sc_biguint<4> c_98156;
  sc_biguint<2> decode_ENCRYPT_STORE_update_TEST_status();
  bool c_98337;
  sc_biguint<16> c_98331;
  bool c_98332;
  sc_biguint<2> c_98334;
  sc_biguint<2> c_98339;
  void compute();
  SC_HAS_PROCESS(TEST);
  TEST(sc_module_name name_) : sc_module(name_) {
    SC_METHOD(compute);
    sensitive << TEST_cmd_in << TEST_cmdaddr_in << TEST_cmddata_in << TEST_cmdflag_in;
  }
};
