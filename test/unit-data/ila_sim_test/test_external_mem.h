#include "systemc.h"
#include <map>
SC_MODULE(TEST) {
  sc_in< sc_biguint<2> > TEST_cmd_in;
  sc_biguint<2> TEST_cmd;
  sc_in< sc_biguint<16> > TEST_cmdaddr_in;
  sc_biguint<16> TEST_cmdaddr;
  sc_in< sc_biguint<8> > TEST_cmddata_in;
  sc_biguint<8> TEST_cmddata;
  sc_out< sc_biguint<2> > TEST_status_out;
  sc_biguint<2> TEST_status;
  sc_out< sc_biguint<16> > TEST_address_out;
  sc_biguint<16> TEST_address;
  sc_out< sc_biguint<16> > TEST_length_out;
  sc_biguint<16> TEST_length;
  sc_out< sc_biguint<128> > TEST_counter_out;
  sc_biguint<128> TEST_counter;
  sc_in< sc_biguint<1> > TEST_XRAM_read_valid;
  sc_in< sc_biguint<8> > TEST_XRAM_read_data;
  sc_out< sc_biguint<1> >TEST_XRAM_read_ready;
  sc_out< sc_biguint<16> > TEST_XRAM_read_address;
  sc_in< sc_biguint<1> > TEST_XRAM_write_ready;
  sc_out< sc_biguint<16> > TEST_XRAM_write_address;
  sc_out< sc_biguint<1> > TEST_XRAM_write_valid;
  sc_out< sc_biguint<8> > TEST_XRAM_write_data;
  sc_biguint<128> ENCRYPT_rd_data;
  sc_biguint<128> ENCRYPT_enc_data;
  sc_biguint<4> ENCRYPT_byte_cnt;
  sc_biguint<16> ENCRYPT_blk_cnt;
  bool decode_98415();
  bool c_98391;
  bool c_98387;
  bool c_98393;
  bool c_98412;
  bool c_98405;
  bool c_98407;
  bool c_98409;
  bool c_98414;
  bool c_98401;
  bool c_98415;
  bool decode_98451();
  bool c_98448;
  bool c_98444;
  bool c_98450;
  bool c_98440;
  bool c_98451;
  bool decode_98487();
  bool c_98465;
  bool c_98467;
  bool c_98487;
  bool decode_98758();
  bool c_98758;
  sc_biguint<16> decode_98415_update_TEST_address();
  bool c_98396;
  bool c_98427;
  sc_biguint<8> c_98423;
  sc_biguint<8> c_98429;
  bool c_98420;
  sc_biguint<8> c_98416;
  sc_biguint<8> c_98422;
  sc_biguint<16> c_98434;
  sc_biguint<16> c_98436;
  sc_biguint<2> decode_98451_update_TEST_status();
  sc_biguint<2> unknown0();
  sc_biguint<2> c_98454;
  sc_biguint<2> c_98457;
  sc_biguint<4> decode_98487_update_ENCRYPT_byte_cnt();
  sc_biguint<4> c_98491;
  sc_biguint<128> decode_98487_update_ENCRYPT_rd_data();
  sc_biguint<4> c_98736;
  bool c_98739;
  sc_biguint<16> c_98494;
  sc_biguint<16> c_98492;
  sc_biguint<16> c_98495;
  sc_biguint<8> c_98496;
  int c_98496_ctrl;
  sc_biguint<8> c_98732;
  sc_biguint<8> c_98741;
  sc_biguint<4> c_98720;
  bool c_98723;
  sc_biguint<8> c_98716;
  sc_biguint<8> c_98725;
  sc_biguint<4> c_98704;
  bool c_98707;
  sc_biguint<8> c_98700;
  sc_biguint<8> c_98709;
  sc_biguint<4> c_98688;
  bool c_98691;
  sc_biguint<8> c_98684;
  sc_biguint<8> c_98693;
  sc_biguint<4> c_98672;
  bool c_98675;
  sc_biguint<8> c_98668;
  sc_biguint<8> c_98677;
  sc_biguint<4> c_98656;
  bool c_98659;
  sc_biguint<8> c_98652;
  sc_biguint<8> c_98661;
  sc_biguint<4> c_98640;
  bool c_98643;
  sc_biguint<8> c_98636;
  sc_biguint<8> c_98645;
  sc_biguint<4> c_98624;
  bool c_98627;
  sc_biguint<8> c_98620;
  sc_biguint<8> c_98629;
  sc_biguint<4> c_98608;
  bool c_98611;
  sc_biguint<8> c_98604;
  sc_biguint<8> c_98613;
  sc_biguint<4> c_98592;
  bool c_98595;
  sc_biguint<8> c_98588;
  sc_biguint<8> c_98597;
  sc_biguint<4> c_98576;
  bool c_98579;
  sc_biguint<8> c_98572;
  sc_biguint<8> c_98581;
  sc_biguint<4> c_98560;
  bool c_98563;
  sc_biguint<8> c_98556;
  sc_biguint<8> c_98565;
  sc_biguint<4> c_98544;
  bool c_98547;
  sc_biguint<8> c_98540;
  sc_biguint<8> c_98549;
  sc_biguint<4> c_98528;
  bool c_98531;
  sc_biguint<8> c_98524;
  sc_biguint<8> c_98533;
  sc_biguint<4> c_98512;
  bool c_98515;
  sc_biguint<8> c_98508;
  sc_biguint<8> c_98517;
  sc_biguint<4> c_98502;
  bool c_98505;
  sc_biguint<8> c_98498;
  sc_biguint<8> c_98507;
  sc_biguint<16> c_98522;
  sc_biguint<24> c_98538;
  sc_biguint<32> c_98554;
  sc_biguint<40> c_98570;
  sc_biguint<48> c_98586;
  sc_biguint<56> c_98602;
  sc_biguint<64> c_98618;
  sc_biguint<72> c_98634;
  sc_biguint<80> c_98650;
  sc_biguint<88> c_98666;
  sc_biguint<96> c_98682;
  sc_biguint<104> c_98698;
  sc_biguint<112> c_98714;
  sc_biguint<120> c_98730;
  sc_biguint<128> c_98746;
  sc_biguint<2> decode_98487_update_TEST_status();
  bool c_98752;
  sc_biguint<2> c_98754;
  std::map<int, int> decode_98758_update_TEST_XRAM_map;
  void decode_98758_update_TEST_XRAM(std::map<int, int>& mem_update_map);
  int decode_98758_update_TEST_XRAM_iter
  sc_biguint<16> c_98762;
  sc_biguint<16> c_98760;
  sc_biguint<16> c_98763;
  sc_biguint<4> c_98913;
  bool c_98916;
  sc_biguint<8> c_98909;
  sc_biguint<4> c_98903;
  bool c_98906;
  sc_biguint<8> c_98899;
  sc_biguint<4> c_98893;
  bool c_98896;
  sc_biguint<8> c_98889;
  sc_biguint<4> c_98883;
  bool c_98886;
  sc_biguint<8> c_98879;
  sc_biguint<4> c_98873;
  bool c_98876;
  sc_biguint<8> c_98869;
  sc_biguint<4> c_98863;
  bool c_98866;
  sc_biguint<8> c_98859;
  sc_biguint<4> c_98853;
  bool c_98856;
  sc_biguint<8> c_98849;
  sc_biguint<4> c_98843;
  bool c_98846;
  sc_biguint<8> c_98839;
  sc_biguint<4> c_98833;
  bool c_98836;
  sc_biguint<8> c_98829;
  sc_biguint<4> c_98823;
  bool c_98826;
  sc_biguint<8> c_98819;
  sc_biguint<4> c_98813;
  bool c_98816;
  sc_biguint<8> c_98809;
  sc_biguint<4> c_98803;
  bool c_98806;
  sc_biguint<8> c_98799;
  sc_biguint<4> c_98793;
  bool c_98796;
  sc_biguint<8> c_98789;
  sc_biguint<4> c_98783;
  bool c_98786;
  sc_biguint<8> c_98779;
  sc_biguint<4> c_98773;
  bool c_98776;
  sc_biguint<8> c_98769;
  sc_biguint<8> c_98767;
  sc_biguint<8> c_98778;
  sc_biguint<8> c_98788;
  sc_biguint<8> c_98798;
  sc_biguint<8> c_98808;
  sc_biguint<8> c_98818;
  sc_biguint<8> c_98828;
  sc_biguint<8> c_98838;
  sc_biguint<8> c_98848;
  sc_biguint<8> c_98858;
  sc_biguint<8> c_98868;
  sc_biguint<8> c_98878;
  sc_biguint<8> c_98888;
  sc_biguint<8> c_98898;
  sc_biguint<8> c_98908;
  sc_biguint<8> c_98918;
  sc_biguint<16> decode_98758_update_ENCRYPT_blk_cnt();
  bool c_98931;
  sc_biguint<16> c_98925;
  bool c_98926;
  sc_biguint<16> c_98922;
  sc_biguint<16> c_98928;
  sc_biguint<16> c_98933;
  sc_biguint<4> decode_98758_update_ENCRYPT_byte_cnt();
  sc_biguint<4> c_98766;
  sc_biguint<2> decode_98758_update_TEST_status();
  bool c_98946;
  sc_biguint<16> c_98940;
  bool c_98941;
  sc_biguint<2> c_98943;
  sc_biguint<2> c_98948;
  void compute();
  SC_HAS_PROCESS(TEST);
  TEST(sc_module_name name_) : sc_module(name_) {
    SC_METHOD(compute);
    sensitive << TEST_cmd_in << TEST_cmdaddr_in << TEST_cmddata_in;
  }
};
