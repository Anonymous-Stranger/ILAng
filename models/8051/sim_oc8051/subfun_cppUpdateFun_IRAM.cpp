#include "common.hpp"
#include "model_oc8051_class.hpp"

type_mem model_oc8051::cppUpdateFun_IRAM()
{
	BIT_VEC cppVar_86605 = ROM.rd(PC);
	bool cppVar_86607 = (cppVar_86605 == 215);
	BIT_VEC cppVar_86609 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_86611 = (cppVar_86609 << 3) | 1;
	cppVar_86611 = (cppVar_86611 & cppMask_un_5_);
	BIT_VEC cppVar_86612 = (0 << 5) | cppVar_86611;
	cppVar_86612 = (cppVar_86612 & cppMask_un_8_);
	BIT_VEC cppVar_86613 = IRAM.rd(cppVar_86612);
	BIT_VEC cppVar_86614 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_86615 = (cppVar_86614 << 3) | 1;
	cppVar_86615 = (cppVar_86615 & cppMask_un_5_);
	BIT_VEC cppVar_86616 = (0 << 5) | cppVar_86615;
	cppVar_86616 = (cppVar_86616 & cppMask_un_8_);
	BIT_VEC cppVar_86617 = IRAM.rd(cppVar_86616);
	BIT_VEC cppVar_86618 = IRAM.rd(cppVar_86617);
	BIT_VEC cppVar_86619 = (cppVar_86618 >> 4) & cppMask_un_4_;
	BIT_VEC cppVar_86620 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_86621 = (cppVar_86619 << 4) | cppVar_86620;
	cppVar_86621 = (cppVar_86621 & cppMask_un_8_);
	type_mem cppVar_86622 = IRAM;
	cppVar_86622.wr(cppVar_86613, cppVar_86621);
	BIT_VEC cppVar_86623 = ROM.rd(PC);
	bool cppVar_86625 = (cppVar_86623 == 214);
	BIT_VEC cppVar_86627 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_86629 = (cppVar_86627 << 3) | 0;
	cppVar_86629 = (cppVar_86629 & cppMask_un_5_);
	BIT_VEC cppVar_86630 = (0 << 5) | cppVar_86629;
	cppVar_86630 = (cppVar_86630 & cppMask_un_8_);
	BIT_VEC cppVar_86631 = IRAM.rd(cppVar_86630);
	BIT_VEC cppVar_86632 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_86633 = (cppVar_86632 << 3) | 0;
	cppVar_86633 = (cppVar_86633 & cppMask_un_5_);
	BIT_VEC cppVar_86634 = (0 << 5) | cppVar_86633;
	cppVar_86634 = (cppVar_86634 & cppMask_un_8_);
	BIT_VEC cppVar_86635 = IRAM.rd(cppVar_86634);
	BIT_VEC cppVar_86636 = IRAM.rd(cppVar_86635);
	BIT_VEC cppVar_86637 = (cppVar_86636 >> 4) & cppMask_un_4_;
	BIT_VEC cppVar_86638 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_86639 = (cppVar_86637 << 4) | cppVar_86638;
	cppVar_86639 = (cppVar_86639 & cppMask_un_8_);
	type_mem cppVar_86640 = IRAM;
	cppVar_86640.wr(cppVar_86631, cppVar_86639);
	BIT_VEC cppVar_86641 = ROM.rd(PC);
	bool cppVar_86643 = (cppVar_86641 == 210);
	BIT_VEC cppVar_86645 = PC + 1;
	cppVar_86645 = (cppVar_86645 & cppMask_un_16_);
	BIT_VEC cppVar_86646 = ROM.rd(cppVar_86645);
	BIT_VEC cppVar_86647 = (cppVar_86646 >> 7) & cppMask_un_1_;
	bool cppVar_86649 = (cppVar_86647 == 1);
	BIT_VEC cppVar_86650 = PC + 1;
	cppVar_86650 = (cppVar_86650 & cppMask_un_16_);
	BIT_VEC cppVar_86651 = ROM.rd(cppVar_86650);
	BIT_VEC cppVar_86652 = (cppVar_86651 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86654 = (cppVar_86652 << 3) | 0;
	cppVar_86654 = (cppVar_86654 & cppMask_un_8_);
	BIT_VEC cppVar_86655 = PC + 1;
	cppVar_86655 = (cppVar_86655 & cppMask_un_16_);
	BIT_VEC cppVar_86656 = ROM.rd(cppVar_86655);
	BIT_VEC cppVar_86657 = (cppVar_86656 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86658 = (cppVar_86657 & cppMask_un_5_);
	BIT_VEC cppVar_86660 = cppVar_86658 + 32;
	cppVar_86660 = (cppVar_86660 & cppMask_un_8_);
	BIT_VEC cppVar_86661 = (cppVar_86649) ? cppVar_86654 : cppVar_86660;
	BIT_VEC cppVar_86662 = (cppVar_86661 >> 7) & cppMask_un_1_;
	bool cppVar_86664 = (cppVar_86662 == 0);
	BIT_VEC cppVar_86665 = PC + 1;
	cppVar_86665 = (cppVar_86665 & cppMask_un_16_);
	BIT_VEC cppVar_86666 = ROM.rd(cppVar_86665);
	BIT_VEC cppVar_86667 = (cppVar_86666 >> 7) & cppMask_un_1_;
	bool cppVar_86668 = (cppVar_86667 == 1);
	BIT_VEC cppVar_86669 = PC + 1;
	cppVar_86669 = (cppVar_86669 & cppMask_un_16_);
	BIT_VEC cppVar_86670 = ROM.rd(cppVar_86669);
	BIT_VEC cppVar_86671 = (cppVar_86670 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86672 = (cppVar_86671 << 3) | 0;
	cppVar_86672 = (cppVar_86672 & cppMask_un_8_);
	BIT_VEC cppVar_86673 = PC + 1;
	cppVar_86673 = (cppVar_86673 & cppMask_un_16_);
	BIT_VEC cppVar_86674 = ROM.rd(cppVar_86673);
	BIT_VEC cppVar_86675 = (cppVar_86674 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86676 = (cppVar_86675 & cppMask_un_5_);
	BIT_VEC cppVar_86677 = cppVar_86676 + 32;
	cppVar_86677 = (cppVar_86677 & cppMask_un_8_);
	BIT_VEC cppVar_86678 = (cppVar_86668) ? cppVar_86672 : cppVar_86677;
	BIT_VEC cppVar_86680 = PC + 1;
	cppVar_86680 = (cppVar_86680 & cppMask_un_16_);
	BIT_VEC cppVar_86681 = ROM.rd(cppVar_86680);
	BIT_VEC cppVar_86682 = (cppVar_86681 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_86683 = (cppVar_86682 & cppMask_un_3_);
	BIT_VEC cppVar_86684 = 1 << static_cast<unsigned>(cppVar_86683);
	cppVar_86684 = (cppVar_86684 & cppMask_un_8_);
	BIT_VEC cppVar_86685 = ~cppVar_86684;
	BIT_VEC cppVar_86686 = PC + 1;
	cppVar_86686 = (cppVar_86686 & cppMask_un_16_);
	BIT_VEC cppVar_86687 = ROM.rd(cppVar_86686);
	BIT_VEC cppVar_86688 = (cppVar_86687 >> 7) & cppMask_un_1_;
	bool cppVar_86689 = (cppVar_86688 == 1);
	BIT_VEC cppVar_86690 = PC + 1;
	cppVar_86690 = (cppVar_86690 & cppMask_un_16_);
	BIT_VEC cppVar_86691 = ROM.rd(cppVar_86690);
	BIT_VEC cppVar_86692 = (cppVar_86691 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86693 = (cppVar_86692 << 3) | 0;
	cppVar_86693 = (cppVar_86693 & cppMask_un_8_);
	BIT_VEC cppVar_86694 = PC + 1;
	cppVar_86694 = (cppVar_86694 & cppMask_un_16_);
	BIT_VEC cppVar_86695 = ROM.rd(cppVar_86694);
	BIT_VEC cppVar_86696 = (cppVar_86695 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86697 = (cppVar_86696 & cppMask_un_5_);
	BIT_VEC cppVar_86698 = cppVar_86697 + 32;
	cppVar_86698 = (cppVar_86698 & cppMask_un_8_);
	BIT_VEC cppVar_86699 = (cppVar_86689) ? cppVar_86693 : cppVar_86698;
	BIT_VEC cppVar_86700 = (cppVar_86699 >> 7) & cppMask_un_1_;
	bool cppVar_86702 = (cppVar_86700 == 0);
	BIT_VEC cppVar_86703 = PC + 1;
	cppVar_86703 = (cppVar_86703 & cppMask_un_16_);
	BIT_VEC cppVar_86704 = ROM.rd(cppVar_86703);
	BIT_VEC cppVar_86705 = (cppVar_86704 >> 7) & cppMask_un_1_;
	bool cppVar_86706 = (cppVar_86705 == 1);
	BIT_VEC cppVar_86707 = PC + 1;
	cppVar_86707 = (cppVar_86707 & cppMask_un_16_);
	BIT_VEC cppVar_86708 = ROM.rd(cppVar_86707);
	BIT_VEC cppVar_86709 = (cppVar_86708 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86710 = (cppVar_86709 << 3) | 0;
	cppVar_86710 = (cppVar_86710 & cppMask_un_8_);
	BIT_VEC cppVar_86711 = PC + 1;
	cppVar_86711 = (cppVar_86711 & cppMask_un_16_);
	BIT_VEC cppVar_86712 = ROM.rd(cppVar_86711);
	BIT_VEC cppVar_86713 = (cppVar_86712 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86714 = (cppVar_86713 & cppMask_un_5_);
	BIT_VEC cppVar_86715 = cppVar_86714 + 32;
	cppVar_86715 = (cppVar_86715 & cppMask_un_8_);
	BIT_VEC cppVar_86716 = (cppVar_86706) ? cppVar_86710 : cppVar_86715;
	BIT_VEC cppVar_86717 = IRAM.rd(cppVar_86716);
	BIT_VEC cppVar_86718 = PC + 1;
	cppVar_86718 = (cppVar_86718 & cppMask_un_16_);
	BIT_VEC cppVar_86719 = ROM.rd(cppVar_86718);
	BIT_VEC cppVar_86720 = (cppVar_86719 >> 7) & cppMask_un_1_;
	bool cppVar_86721 = (cppVar_86720 == 1);
	BIT_VEC cppVar_86722 = PC + 1;
	cppVar_86722 = (cppVar_86722 & cppMask_un_16_);
	BIT_VEC cppVar_86723 = ROM.rd(cppVar_86722);
	BIT_VEC cppVar_86724 = (cppVar_86723 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86725 = (cppVar_86724 << 3) | 0;
	cppVar_86725 = (cppVar_86725 & cppMask_un_8_);
	BIT_VEC cppVar_86726 = PC + 1;
	cppVar_86726 = (cppVar_86726 & cppMask_un_16_);
	BIT_VEC cppVar_86727 = ROM.rd(cppVar_86726);
	BIT_VEC cppVar_86728 = (cppVar_86727 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86729 = (cppVar_86728 & cppMask_un_5_);
	BIT_VEC cppVar_86730 = cppVar_86729 + 32;
	cppVar_86730 = (cppVar_86730 & cppMask_un_8_);
	BIT_VEC cppVar_86731 = (cppVar_86721) ? cppVar_86725 : cppVar_86730;
	bool cppVar_86733 = (cppVar_86731 == 128);
	BIT_VEC cppVar_86734 = PC + 1;
	cppVar_86734 = (cppVar_86734 & cppMask_un_16_);
	BIT_VEC cppVar_86735 = ROM.rd(cppVar_86734);
	BIT_VEC cppVar_86736 = (cppVar_86735 >> 7) & cppMask_un_1_;
	bool cppVar_86737 = (cppVar_86736 == 1);
	BIT_VEC cppVar_86738 = PC + 1;
	cppVar_86738 = (cppVar_86738 & cppMask_un_16_);
	BIT_VEC cppVar_86739 = ROM.rd(cppVar_86738);
	BIT_VEC cppVar_86740 = (cppVar_86739 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86741 = (cppVar_86740 << 3) | 0;
	cppVar_86741 = (cppVar_86741 & cppMask_un_8_);
	BIT_VEC cppVar_86742 = PC + 1;
	cppVar_86742 = (cppVar_86742 & cppMask_un_16_);
	BIT_VEC cppVar_86743 = ROM.rd(cppVar_86742);
	BIT_VEC cppVar_86744 = (cppVar_86743 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86745 = (cppVar_86744 & cppMask_un_5_);
	BIT_VEC cppVar_86746 = cppVar_86745 + 32;
	cppVar_86746 = (cppVar_86746 & cppMask_un_8_);
	BIT_VEC cppVar_86747 = (cppVar_86737) ? cppVar_86741 : cppVar_86746;
	bool cppVar_86749 = (cppVar_86747 == 129);
	BIT_VEC cppVar_86750 = PC + 1;
	cppVar_86750 = (cppVar_86750 & cppMask_un_16_);
	BIT_VEC cppVar_86751 = ROM.rd(cppVar_86750);
	BIT_VEC cppVar_86752 = (cppVar_86751 >> 7) & cppMask_un_1_;
	bool cppVar_86753 = (cppVar_86752 == 1);
	BIT_VEC cppVar_86754 = PC + 1;
	cppVar_86754 = (cppVar_86754 & cppMask_un_16_);
	BIT_VEC cppVar_86755 = ROM.rd(cppVar_86754);
	BIT_VEC cppVar_86756 = (cppVar_86755 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86757 = (cppVar_86756 << 3) | 0;
	cppVar_86757 = (cppVar_86757 & cppMask_un_8_);
	BIT_VEC cppVar_86758 = PC + 1;
	cppVar_86758 = (cppVar_86758 & cppMask_un_16_);
	BIT_VEC cppVar_86759 = ROM.rd(cppVar_86758);
	BIT_VEC cppVar_86760 = (cppVar_86759 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86761 = (cppVar_86760 & cppMask_un_5_);
	BIT_VEC cppVar_86762 = cppVar_86761 + 32;
	cppVar_86762 = (cppVar_86762 & cppMask_un_8_);
	BIT_VEC cppVar_86763 = (cppVar_86753) ? cppVar_86757 : cppVar_86762;
	bool cppVar_86765 = (cppVar_86763 == 130);
	BIT_VEC cppVar_86766 = PC + 1;
	cppVar_86766 = (cppVar_86766 & cppMask_un_16_);
	BIT_VEC cppVar_86767 = ROM.rd(cppVar_86766);
	BIT_VEC cppVar_86768 = (cppVar_86767 >> 7) & cppMask_un_1_;
	bool cppVar_86769 = (cppVar_86768 == 1);
	BIT_VEC cppVar_86770 = PC + 1;
	cppVar_86770 = (cppVar_86770 & cppMask_un_16_);
	BIT_VEC cppVar_86771 = ROM.rd(cppVar_86770);
	BIT_VEC cppVar_86772 = (cppVar_86771 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86773 = (cppVar_86772 << 3) | 0;
	cppVar_86773 = (cppVar_86773 & cppMask_un_8_);
	BIT_VEC cppVar_86774 = PC + 1;
	cppVar_86774 = (cppVar_86774 & cppMask_un_16_);
	BIT_VEC cppVar_86775 = ROM.rd(cppVar_86774);
	BIT_VEC cppVar_86776 = (cppVar_86775 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86777 = (cppVar_86776 & cppMask_un_5_);
	BIT_VEC cppVar_86778 = cppVar_86777 + 32;
	cppVar_86778 = (cppVar_86778 & cppMask_un_8_);
	BIT_VEC cppVar_86779 = (cppVar_86769) ? cppVar_86773 : cppVar_86778;
	bool cppVar_86781 = (cppVar_86779 == 131);
	BIT_VEC cppVar_86782 = PC + 1;
	cppVar_86782 = (cppVar_86782 & cppMask_un_16_);
	BIT_VEC cppVar_86783 = ROM.rd(cppVar_86782);
	BIT_VEC cppVar_86784 = (cppVar_86783 >> 7) & cppMask_un_1_;
	bool cppVar_86785 = (cppVar_86784 == 1);
	BIT_VEC cppVar_86786 = PC + 1;
	cppVar_86786 = (cppVar_86786 & cppMask_un_16_);
	BIT_VEC cppVar_86787 = ROM.rd(cppVar_86786);
	BIT_VEC cppVar_86788 = (cppVar_86787 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86789 = (cppVar_86788 << 3) | 0;
	cppVar_86789 = (cppVar_86789 & cppMask_un_8_);
	BIT_VEC cppVar_86790 = PC + 1;
	cppVar_86790 = (cppVar_86790 & cppMask_un_16_);
	BIT_VEC cppVar_86791 = ROM.rd(cppVar_86790);
	BIT_VEC cppVar_86792 = (cppVar_86791 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86793 = (cppVar_86792 & cppMask_un_5_);
	BIT_VEC cppVar_86794 = cppVar_86793 + 32;
	cppVar_86794 = (cppVar_86794 & cppMask_un_8_);
	BIT_VEC cppVar_86795 = (cppVar_86785) ? cppVar_86789 : cppVar_86794;
	bool cppVar_86797 = (cppVar_86795 == 135);
	BIT_VEC cppVar_86798 = PC + 1;
	cppVar_86798 = (cppVar_86798 & cppMask_un_16_);
	BIT_VEC cppVar_86799 = ROM.rd(cppVar_86798);
	BIT_VEC cppVar_86800 = (cppVar_86799 >> 7) & cppMask_un_1_;
	bool cppVar_86801 = (cppVar_86800 == 1);
	BIT_VEC cppVar_86802 = PC + 1;
	cppVar_86802 = (cppVar_86802 & cppMask_un_16_);
	BIT_VEC cppVar_86803 = ROM.rd(cppVar_86802);
	BIT_VEC cppVar_86804 = (cppVar_86803 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86805 = (cppVar_86804 << 3) | 0;
	cppVar_86805 = (cppVar_86805 & cppMask_un_8_);
	BIT_VEC cppVar_86806 = PC + 1;
	cppVar_86806 = (cppVar_86806 & cppMask_un_16_);
	BIT_VEC cppVar_86807 = ROM.rd(cppVar_86806);
	BIT_VEC cppVar_86808 = (cppVar_86807 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86809 = (cppVar_86808 & cppMask_un_5_);
	BIT_VEC cppVar_86810 = cppVar_86809 + 32;
	cppVar_86810 = (cppVar_86810 & cppMask_un_8_);
	BIT_VEC cppVar_86811 = (cppVar_86801) ? cppVar_86805 : cppVar_86810;
	bool cppVar_86813 = (cppVar_86811 == 136);
	BIT_VEC cppVar_86814 = PC + 1;
	cppVar_86814 = (cppVar_86814 & cppMask_un_16_);
	BIT_VEC cppVar_86815 = ROM.rd(cppVar_86814);
	BIT_VEC cppVar_86816 = (cppVar_86815 >> 7) & cppMask_un_1_;
	bool cppVar_86817 = (cppVar_86816 == 1);
	BIT_VEC cppVar_86818 = PC + 1;
	cppVar_86818 = (cppVar_86818 & cppMask_un_16_);
	BIT_VEC cppVar_86819 = ROM.rd(cppVar_86818);
	BIT_VEC cppVar_86820 = (cppVar_86819 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86821 = (cppVar_86820 << 3) | 0;
	cppVar_86821 = (cppVar_86821 & cppMask_un_8_);
	BIT_VEC cppVar_86822 = PC + 1;
	cppVar_86822 = (cppVar_86822 & cppMask_un_16_);
	BIT_VEC cppVar_86823 = ROM.rd(cppVar_86822);
	BIT_VEC cppVar_86824 = (cppVar_86823 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86825 = (cppVar_86824 & cppMask_un_5_);
	BIT_VEC cppVar_86826 = cppVar_86825 + 32;
	cppVar_86826 = (cppVar_86826 & cppMask_un_8_);
	BIT_VEC cppVar_86827 = (cppVar_86817) ? cppVar_86821 : cppVar_86826;
	bool cppVar_86829 = (cppVar_86827 == 137);
	BIT_VEC cppVar_86830 = PC + 1;
	cppVar_86830 = (cppVar_86830 & cppMask_un_16_);
	BIT_VEC cppVar_86831 = ROM.rd(cppVar_86830);
	BIT_VEC cppVar_86832 = (cppVar_86831 >> 7) & cppMask_un_1_;
	bool cppVar_86833 = (cppVar_86832 == 1);
	BIT_VEC cppVar_86834 = PC + 1;
	cppVar_86834 = (cppVar_86834 & cppMask_un_16_);
	BIT_VEC cppVar_86835 = ROM.rd(cppVar_86834);
	BIT_VEC cppVar_86836 = (cppVar_86835 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86837 = (cppVar_86836 << 3) | 0;
	cppVar_86837 = (cppVar_86837 & cppMask_un_8_);
	BIT_VEC cppVar_86838 = PC + 1;
	cppVar_86838 = (cppVar_86838 & cppMask_un_16_);
	BIT_VEC cppVar_86839 = ROM.rd(cppVar_86838);
	BIT_VEC cppVar_86840 = (cppVar_86839 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86841 = (cppVar_86840 & cppMask_un_5_);
	BIT_VEC cppVar_86842 = cppVar_86841 + 32;
	cppVar_86842 = (cppVar_86842 & cppMask_un_8_);
	BIT_VEC cppVar_86843 = (cppVar_86833) ? cppVar_86837 : cppVar_86842;
	bool cppVar_86845 = (cppVar_86843 == 138);
	BIT_VEC cppVar_86846 = PC + 1;
	cppVar_86846 = (cppVar_86846 & cppMask_un_16_);
	BIT_VEC cppVar_86847 = ROM.rd(cppVar_86846);
	BIT_VEC cppVar_86848 = (cppVar_86847 >> 7) & cppMask_un_1_;
	bool cppVar_86849 = (cppVar_86848 == 1);
	BIT_VEC cppVar_86850 = PC + 1;
	cppVar_86850 = (cppVar_86850 & cppMask_un_16_);
	BIT_VEC cppVar_86851 = ROM.rd(cppVar_86850);
	BIT_VEC cppVar_86852 = (cppVar_86851 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86853 = (cppVar_86852 << 3) | 0;
	cppVar_86853 = (cppVar_86853 & cppMask_un_8_);
	BIT_VEC cppVar_86854 = PC + 1;
	cppVar_86854 = (cppVar_86854 & cppMask_un_16_);
	BIT_VEC cppVar_86855 = ROM.rd(cppVar_86854);
	BIT_VEC cppVar_86856 = (cppVar_86855 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86857 = (cppVar_86856 & cppMask_un_5_);
	BIT_VEC cppVar_86858 = cppVar_86857 + 32;
	cppVar_86858 = (cppVar_86858 & cppMask_un_8_);
	BIT_VEC cppVar_86859 = (cppVar_86849) ? cppVar_86853 : cppVar_86858;
	bool cppVar_86861 = (cppVar_86859 == 140);
	BIT_VEC cppVar_86862 = PC + 1;
	cppVar_86862 = (cppVar_86862 & cppMask_un_16_);
	BIT_VEC cppVar_86863 = ROM.rd(cppVar_86862);
	BIT_VEC cppVar_86864 = (cppVar_86863 >> 7) & cppMask_un_1_;
	bool cppVar_86865 = (cppVar_86864 == 1);
	BIT_VEC cppVar_86866 = PC + 1;
	cppVar_86866 = (cppVar_86866 & cppMask_un_16_);
	BIT_VEC cppVar_86867 = ROM.rd(cppVar_86866);
	BIT_VEC cppVar_86868 = (cppVar_86867 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86869 = (cppVar_86868 << 3) | 0;
	cppVar_86869 = (cppVar_86869 & cppMask_un_8_);
	BIT_VEC cppVar_86870 = PC + 1;
	cppVar_86870 = (cppVar_86870 & cppMask_un_16_);
	BIT_VEC cppVar_86871 = ROM.rd(cppVar_86870);
	BIT_VEC cppVar_86872 = (cppVar_86871 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86873 = (cppVar_86872 & cppMask_un_5_);
	BIT_VEC cppVar_86874 = cppVar_86873 + 32;
	cppVar_86874 = (cppVar_86874 & cppMask_un_8_);
	BIT_VEC cppVar_86875 = (cppVar_86865) ? cppVar_86869 : cppVar_86874;
	bool cppVar_86877 = (cppVar_86875 == 139);
	BIT_VEC cppVar_86878 = PC + 1;
	cppVar_86878 = (cppVar_86878 & cppMask_un_16_);
	BIT_VEC cppVar_86879 = ROM.rd(cppVar_86878);
	BIT_VEC cppVar_86880 = (cppVar_86879 >> 7) & cppMask_un_1_;
	bool cppVar_86881 = (cppVar_86880 == 1);
	BIT_VEC cppVar_86882 = PC + 1;
	cppVar_86882 = (cppVar_86882 & cppMask_un_16_);
	BIT_VEC cppVar_86883 = ROM.rd(cppVar_86882);
	BIT_VEC cppVar_86884 = (cppVar_86883 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86885 = (cppVar_86884 << 3) | 0;
	cppVar_86885 = (cppVar_86885 & cppMask_un_8_);
	BIT_VEC cppVar_86886 = PC + 1;
	cppVar_86886 = (cppVar_86886 & cppMask_un_16_);
	BIT_VEC cppVar_86887 = ROM.rd(cppVar_86886);
	BIT_VEC cppVar_86888 = (cppVar_86887 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86889 = (cppVar_86888 & cppMask_un_5_);
	BIT_VEC cppVar_86890 = cppVar_86889 + 32;
	cppVar_86890 = (cppVar_86890 & cppMask_un_8_);
	BIT_VEC cppVar_86891 = (cppVar_86881) ? cppVar_86885 : cppVar_86890;
	bool cppVar_86893 = (cppVar_86891 == 141);
	BIT_VEC cppVar_86894 = PC + 1;
	cppVar_86894 = (cppVar_86894 & cppMask_un_16_);
	BIT_VEC cppVar_86895 = ROM.rd(cppVar_86894);
	BIT_VEC cppVar_86896 = (cppVar_86895 >> 7) & cppMask_un_1_;
	bool cppVar_86897 = (cppVar_86896 == 1);
	BIT_VEC cppVar_86898 = PC + 1;
	cppVar_86898 = (cppVar_86898 & cppMask_un_16_);
	BIT_VEC cppVar_86899 = ROM.rd(cppVar_86898);
	BIT_VEC cppVar_86900 = (cppVar_86899 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86901 = (cppVar_86900 << 3) | 0;
	cppVar_86901 = (cppVar_86901 & cppMask_un_8_);
	BIT_VEC cppVar_86902 = PC + 1;
	cppVar_86902 = (cppVar_86902 & cppMask_un_16_);
	BIT_VEC cppVar_86903 = ROM.rd(cppVar_86902);
	BIT_VEC cppVar_86904 = (cppVar_86903 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86905 = (cppVar_86904 & cppMask_un_5_);
	BIT_VEC cppVar_86906 = cppVar_86905 + 32;
	cppVar_86906 = (cppVar_86906 & cppMask_un_8_);
	BIT_VEC cppVar_86907 = (cppVar_86897) ? cppVar_86901 : cppVar_86906;
	bool cppVar_86909 = (cppVar_86907 == 144);
	BIT_VEC cppVar_86910 = PC + 1;
	cppVar_86910 = (cppVar_86910 & cppMask_un_16_);
	BIT_VEC cppVar_86911 = ROM.rd(cppVar_86910);
	BIT_VEC cppVar_86912 = (cppVar_86911 >> 7) & cppMask_un_1_;
	bool cppVar_86913 = (cppVar_86912 == 1);
	BIT_VEC cppVar_86914 = PC + 1;
	cppVar_86914 = (cppVar_86914 & cppMask_un_16_);
	BIT_VEC cppVar_86915 = ROM.rd(cppVar_86914);
	BIT_VEC cppVar_86916 = (cppVar_86915 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86917 = (cppVar_86916 << 3) | 0;
	cppVar_86917 = (cppVar_86917 & cppMask_un_8_);
	BIT_VEC cppVar_86918 = PC + 1;
	cppVar_86918 = (cppVar_86918 & cppMask_un_16_);
	BIT_VEC cppVar_86919 = ROM.rd(cppVar_86918);
	BIT_VEC cppVar_86920 = (cppVar_86919 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86921 = (cppVar_86920 & cppMask_un_5_);
	BIT_VEC cppVar_86922 = cppVar_86921 + 32;
	cppVar_86922 = (cppVar_86922 & cppMask_un_8_);
	BIT_VEC cppVar_86923 = (cppVar_86913) ? cppVar_86917 : cppVar_86922;
	bool cppVar_86925 = (cppVar_86923 == 152);
	BIT_VEC cppVar_86926 = PC + 1;
	cppVar_86926 = (cppVar_86926 & cppMask_un_16_);
	BIT_VEC cppVar_86927 = ROM.rd(cppVar_86926);
	BIT_VEC cppVar_86928 = (cppVar_86927 >> 7) & cppMask_un_1_;
	bool cppVar_86929 = (cppVar_86928 == 1);
	BIT_VEC cppVar_86930 = PC + 1;
	cppVar_86930 = (cppVar_86930 & cppMask_un_16_);
	BIT_VEC cppVar_86931 = ROM.rd(cppVar_86930);
	BIT_VEC cppVar_86932 = (cppVar_86931 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86933 = (cppVar_86932 << 3) | 0;
	cppVar_86933 = (cppVar_86933 & cppMask_un_8_);
	BIT_VEC cppVar_86934 = PC + 1;
	cppVar_86934 = (cppVar_86934 & cppMask_un_16_);
	BIT_VEC cppVar_86935 = ROM.rd(cppVar_86934);
	BIT_VEC cppVar_86936 = (cppVar_86935 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86937 = (cppVar_86936 & cppMask_un_5_);
	BIT_VEC cppVar_86938 = cppVar_86937 + 32;
	cppVar_86938 = (cppVar_86938 & cppMask_un_8_);
	BIT_VEC cppVar_86939 = (cppVar_86929) ? cppVar_86933 : cppVar_86938;
	bool cppVar_86941 = (cppVar_86939 == 153);
	BIT_VEC cppVar_86942 = PC + 1;
	cppVar_86942 = (cppVar_86942 & cppMask_un_16_);
	BIT_VEC cppVar_86943 = ROM.rd(cppVar_86942);
	BIT_VEC cppVar_86944 = (cppVar_86943 >> 7) & cppMask_un_1_;
	bool cppVar_86945 = (cppVar_86944 == 1);
	BIT_VEC cppVar_86946 = PC + 1;
	cppVar_86946 = (cppVar_86946 & cppMask_un_16_);
	BIT_VEC cppVar_86947 = ROM.rd(cppVar_86946);
	BIT_VEC cppVar_86948 = (cppVar_86947 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86949 = (cppVar_86948 << 3) | 0;
	cppVar_86949 = (cppVar_86949 & cppMask_un_8_);
	BIT_VEC cppVar_86950 = PC + 1;
	cppVar_86950 = (cppVar_86950 & cppMask_un_16_);
	BIT_VEC cppVar_86951 = ROM.rd(cppVar_86950);
	BIT_VEC cppVar_86952 = (cppVar_86951 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86953 = (cppVar_86952 & cppMask_un_5_);
	BIT_VEC cppVar_86954 = cppVar_86953 + 32;
	cppVar_86954 = (cppVar_86954 & cppMask_un_8_);
	BIT_VEC cppVar_86955 = (cppVar_86945) ? cppVar_86949 : cppVar_86954;
	bool cppVar_86957 = (cppVar_86955 == 160);
	BIT_VEC cppVar_86958 = PC + 1;
	cppVar_86958 = (cppVar_86958 & cppMask_un_16_);
	BIT_VEC cppVar_86959 = ROM.rd(cppVar_86958);
	BIT_VEC cppVar_86960 = (cppVar_86959 >> 7) & cppMask_un_1_;
	bool cppVar_86961 = (cppVar_86960 == 1);
	BIT_VEC cppVar_86962 = PC + 1;
	cppVar_86962 = (cppVar_86962 & cppMask_un_16_);
	BIT_VEC cppVar_86963 = ROM.rd(cppVar_86962);
	BIT_VEC cppVar_86964 = (cppVar_86963 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86965 = (cppVar_86964 << 3) | 0;
	cppVar_86965 = (cppVar_86965 & cppMask_un_8_);
	BIT_VEC cppVar_86966 = PC + 1;
	cppVar_86966 = (cppVar_86966 & cppMask_un_16_);
	BIT_VEC cppVar_86967 = ROM.rd(cppVar_86966);
	BIT_VEC cppVar_86968 = (cppVar_86967 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86969 = (cppVar_86968 & cppMask_un_5_);
	BIT_VEC cppVar_86970 = cppVar_86969 + 32;
	cppVar_86970 = (cppVar_86970 & cppMask_un_8_);
	BIT_VEC cppVar_86971 = (cppVar_86961) ? cppVar_86965 : cppVar_86970;
	bool cppVar_86973 = (cppVar_86971 == 168);
	BIT_VEC cppVar_86974 = PC + 1;
	cppVar_86974 = (cppVar_86974 & cppMask_un_16_);
	BIT_VEC cppVar_86975 = ROM.rd(cppVar_86974);
	BIT_VEC cppVar_86976 = (cppVar_86975 >> 7) & cppMask_un_1_;
	bool cppVar_86977 = (cppVar_86976 == 1);
	BIT_VEC cppVar_86978 = PC + 1;
	cppVar_86978 = (cppVar_86978 & cppMask_un_16_);
	BIT_VEC cppVar_86979 = ROM.rd(cppVar_86978);
	BIT_VEC cppVar_86980 = (cppVar_86979 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86981 = (cppVar_86980 << 3) | 0;
	cppVar_86981 = (cppVar_86981 & cppMask_un_8_);
	BIT_VEC cppVar_86982 = PC + 1;
	cppVar_86982 = (cppVar_86982 & cppMask_un_16_);
	BIT_VEC cppVar_86983 = ROM.rd(cppVar_86982);
	BIT_VEC cppVar_86984 = (cppVar_86983 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86985 = (cppVar_86984 & cppMask_un_5_);
	BIT_VEC cppVar_86986 = cppVar_86985 + 32;
	cppVar_86986 = (cppVar_86986 & cppMask_un_8_);
	BIT_VEC cppVar_86987 = (cppVar_86977) ? cppVar_86981 : cppVar_86986;
	bool cppVar_86989 = (cppVar_86987 == 176);
	BIT_VEC cppVar_86990 = PC + 1;
	cppVar_86990 = (cppVar_86990 & cppMask_un_16_);
	BIT_VEC cppVar_86991 = ROM.rd(cppVar_86990);
	BIT_VEC cppVar_86992 = (cppVar_86991 >> 7) & cppMask_un_1_;
	bool cppVar_86993 = (cppVar_86992 == 1);
	BIT_VEC cppVar_86994 = PC + 1;
	cppVar_86994 = (cppVar_86994 & cppMask_un_16_);
	BIT_VEC cppVar_86995 = ROM.rd(cppVar_86994);
	BIT_VEC cppVar_86996 = (cppVar_86995 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_86997 = (cppVar_86996 << 3) | 0;
	cppVar_86997 = (cppVar_86997 & cppMask_un_8_);
	BIT_VEC cppVar_86998 = PC + 1;
	cppVar_86998 = (cppVar_86998 & cppMask_un_16_);
	BIT_VEC cppVar_86999 = ROM.rd(cppVar_86998);
	BIT_VEC cppVar_87000 = (cppVar_86999 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87001 = (cppVar_87000 & cppMask_un_5_);
	BIT_VEC cppVar_87002 = cppVar_87001 + 32;
	cppVar_87002 = (cppVar_87002 & cppMask_un_8_);
	BIT_VEC cppVar_87003 = (cppVar_86993) ? cppVar_86997 : cppVar_87002;
	bool cppVar_87005 = (cppVar_87003 == 184);
	BIT_VEC cppVar_87006 = PC + 1;
	cppVar_87006 = (cppVar_87006 & cppMask_un_16_);
	BIT_VEC cppVar_87007 = ROM.rd(cppVar_87006);
	BIT_VEC cppVar_87008 = (cppVar_87007 >> 7) & cppMask_un_1_;
	bool cppVar_87009 = (cppVar_87008 == 1);
	BIT_VEC cppVar_87010 = PC + 1;
	cppVar_87010 = (cppVar_87010 & cppMask_un_16_);
	BIT_VEC cppVar_87011 = ROM.rd(cppVar_87010);
	BIT_VEC cppVar_87012 = (cppVar_87011 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87013 = (cppVar_87012 << 3) | 0;
	cppVar_87013 = (cppVar_87013 & cppMask_un_8_);
	BIT_VEC cppVar_87014 = PC + 1;
	cppVar_87014 = (cppVar_87014 & cppMask_un_16_);
	BIT_VEC cppVar_87015 = ROM.rd(cppVar_87014);
	BIT_VEC cppVar_87016 = (cppVar_87015 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87017 = (cppVar_87016 & cppMask_un_5_);
	BIT_VEC cppVar_87018 = cppVar_87017 + 32;
	cppVar_87018 = (cppVar_87018 & cppMask_un_8_);
	BIT_VEC cppVar_87019 = (cppVar_87009) ? cppVar_87013 : cppVar_87018;
	bool cppVar_87021 = (cppVar_87019 == 208);
	BIT_VEC cppVar_87022 = PC + 1;
	cppVar_87022 = (cppVar_87022 & cppMask_un_16_);
	BIT_VEC cppVar_87023 = ROM.rd(cppVar_87022);
	BIT_VEC cppVar_87024 = (cppVar_87023 >> 7) & cppMask_un_1_;
	bool cppVar_87025 = (cppVar_87024 == 1);
	BIT_VEC cppVar_87026 = PC + 1;
	cppVar_87026 = (cppVar_87026 & cppMask_un_16_);
	BIT_VEC cppVar_87027 = ROM.rd(cppVar_87026);
	BIT_VEC cppVar_87028 = (cppVar_87027 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87029 = (cppVar_87028 << 3) | 0;
	cppVar_87029 = (cppVar_87029 & cppMask_un_8_);
	BIT_VEC cppVar_87030 = PC + 1;
	cppVar_87030 = (cppVar_87030 & cppMask_un_16_);
	BIT_VEC cppVar_87031 = ROM.rd(cppVar_87030);
	BIT_VEC cppVar_87032 = (cppVar_87031 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87033 = (cppVar_87032 & cppMask_un_5_);
	BIT_VEC cppVar_87034 = cppVar_87033 + 32;
	cppVar_87034 = (cppVar_87034 & cppMask_un_8_);
	BIT_VEC cppVar_87035 = (cppVar_87025) ? cppVar_87029 : cppVar_87034;
	bool cppVar_87037 = (cppVar_87035 == 224);
	BIT_VEC cppVar_87038 = PC + 1;
	cppVar_87038 = (cppVar_87038 & cppMask_un_16_);
	BIT_VEC cppVar_87039 = ROM.rd(cppVar_87038);
	BIT_VEC cppVar_87040 = (cppVar_87039 >> 7) & cppMask_un_1_;
	bool cppVar_87041 = (cppVar_87040 == 1);
	BIT_VEC cppVar_87042 = PC + 1;
	cppVar_87042 = (cppVar_87042 & cppMask_un_16_);
	BIT_VEC cppVar_87043 = ROM.rd(cppVar_87042);
	BIT_VEC cppVar_87044 = (cppVar_87043 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87045 = (cppVar_87044 << 3) | 0;
	cppVar_87045 = (cppVar_87045 & cppMask_un_8_);
	BIT_VEC cppVar_87046 = PC + 1;
	cppVar_87046 = (cppVar_87046 & cppMask_un_16_);
	BIT_VEC cppVar_87047 = ROM.rd(cppVar_87046);
	BIT_VEC cppVar_87048 = (cppVar_87047 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87049 = (cppVar_87048 & cppMask_un_5_);
	BIT_VEC cppVar_87050 = cppVar_87049 + 32;
	cppVar_87050 = (cppVar_87050 & cppMask_un_8_);
	BIT_VEC cppVar_87051 = (cppVar_87041) ? cppVar_87045 : cppVar_87050;
	bool cppVar_87053 = (cppVar_87051 == 240);
	BIT_VEC cppVar_87055 = (cppVar_87053) ? B : 0;
	BIT_VEC cppVar_87056 = (cppVar_87037) ? ACC : cppVar_87055;
	BIT_VEC cppVar_87057 = (cppVar_87021) ? PSW : cppVar_87056;
	BIT_VEC cppVar_87058 = (cppVar_87005) ? IP : cppVar_87057;
	BIT_VEC cppVar_87059 = (cppVar_86989) ? P3 : cppVar_87058;
	BIT_VEC cppVar_87060 = (cppVar_86973) ? IE : cppVar_87059;
	BIT_VEC cppVar_87061 = (cppVar_86957) ? P2 : cppVar_87060;
	BIT_VEC cppVar_87062 = (cppVar_86941) ? SBUF : cppVar_87061;
	BIT_VEC cppVar_87063 = (cppVar_86925) ? SCON : cppVar_87062;
	BIT_VEC cppVar_87064 = (cppVar_86909) ? P1 : cppVar_87063;
	BIT_VEC cppVar_87065 = (cppVar_86893) ? TH1 : cppVar_87064;
	BIT_VEC cppVar_87066 = (cppVar_86877) ? TL1 : cppVar_87065;
	BIT_VEC cppVar_87067 = (cppVar_86861) ? TH0 : cppVar_87066;
	BIT_VEC cppVar_87068 = (cppVar_86845) ? TL0 : cppVar_87067;
	BIT_VEC cppVar_87069 = (cppVar_86829) ? TMOD : cppVar_87068;
	BIT_VEC cppVar_87070 = (cppVar_86813) ? TCON : cppVar_87069;
	BIT_VEC cppVar_87071 = (cppVar_86797) ? PCON : cppVar_87070;
	BIT_VEC cppVar_87072 = (cppVar_86781) ? DPH : cppVar_87071;
	BIT_VEC cppVar_87073 = (cppVar_86765) ? DPL : cppVar_87072;
	BIT_VEC cppVar_87074 = (cppVar_86749) ? SP : cppVar_87073;
	BIT_VEC cppVar_87075 = (cppVar_86733) ? P0 : cppVar_87074;
	BIT_VEC cppVar_87076 = (cppVar_86702) ? cppVar_86717 : cppVar_87075;
	BIT_VEC cppVar_87077 = cppVar_86685 & cppVar_87076;
	BIT_VEC cppVar_87079 = 1;
	BIT_VEC cppVar_87080 = PC + 1;
	cppVar_87080 = (cppVar_87080 & cppMask_un_16_);
	BIT_VEC cppVar_87081 = ROM.rd(cppVar_87080);
	BIT_VEC cppVar_87082 = (cppVar_87081 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_87083 = (cppVar_87082 & cppMask_un_3_);
	BIT_VEC cppVar_87084 = cppVar_87079 << static_cast<unsigned>(cppVar_87083);
	cppVar_87084 = (cppVar_87084 & cppMask_un_8_);
	BIT_VEC cppVar_87085 = cppVar_87077 | cppVar_87084;
	type_mem cppVar_87086 = IRAM;
	cppVar_87086.wr(cppVar_86678, cppVar_87085);
	type_mem& cppVar_87087 = (cppVar_86664) ? cppVar_87086 : IRAM;
	BIT_VEC cppVar_87088 = ROM.rd(PC);
	bool cppVar_87090 = (cppVar_87088 == 208);
	BIT_VEC cppVar_87092 = PC + 1;
	cppVar_87092 = (cppVar_87092 & cppMask_un_16_);
	BIT_VEC cppVar_87093 = ROM.rd(cppVar_87092);
	BIT_VEC cppVar_87094 = (cppVar_87093 >> 7) & cppMask_un_1_;
	bool cppVar_87096 = (cppVar_87094 == 0);
	BIT_VEC cppVar_87097 = PC + 1;
	cppVar_87097 = (cppVar_87097 & cppMask_un_16_);
	BIT_VEC cppVar_87098 = ROM.rd(cppVar_87097);
	BIT_VEC cppVar_87099 = IRAM.rd(SP);
	type_mem cppVar_87100 = IRAM;
	cppVar_87100.wr(cppVar_87098, cppVar_87099);
	type_mem& cppVar_87101 = (cppVar_87096) ? cppVar_87100 : IRAM;
	BIT_VEC cppVar_87102 = ROM.rd(PC);
	bool cppVar_87104 = (cppVar_87102 == 255);
	BIT_VEC cppVar_87105 = ROM.rd(PC);
	bool cppVar_87107 = (cppVar_87105 == 207);
	bool cppVar_87108 = cppVar_87104 || cppVar_87107;
	BIT_VEC cppVar_87110 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87112 = (cppVar_87110 << 3) | 7;
	cppVar_87112 = (cppVar_87112 & cppMask_un_5_);
	BIT_VEC cppVar_87113 = (0 << 5) | cppVar_87112;
	cppVar_87113 = (cppVar_87113 & cppMask_un_8_);
	BIT_VEC cppVar_87114 = (cppVar_87113 >> 7) & cppMask_un_1_;
	bool cppVar_87116 = (cppVar_87114 == 0);
	BIT_VEC cppVar_87117 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87118 = (cppVar_87117 << 3) | 7;
	cppVar_87118 = (cppVar_87118 & cppMask_un_5_);
	BIT_VEC cppVar_87119 = (0 << 5) | cppVar_87118;
	cppVar_87119 = (cppVar_87119 & cppMask_un_8_);
	type_mem cppVar_87120 = IRAM;
	cppVar_87120.wr(cppVar_87119, ACC);
	type_mem& cppVar_87121 = (cppVar_87116) ? cppVar_87120 : IRAM;
	BIT_VEC cppVar_87122 = ROM.rd(PC);
	bool cppVar_87124 = (cppVar_87122 == 254);
	BIT_VEC cppVar_87125 = ROM.rd(PC);
	bool cppVar_87127 = (cppVar_87125 == 206);
	bool cppVar_87128 = cppVar_87124 || cppVar_87127;
	BIT_VEC cppVar_87130 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87132 = (cppVar_87130 << 3) | 6;
	cppVar_87132 = (cppVar_87132 & cppMask_un_5_);
	BIT_VEC cppVar_87133 = (0 << 5) | cppVar_87132;
	cppVar_87133 = (cppVar_87133 & cppMask_un_8_);
	BIT_VEC cppVar_87134 = (cppVar_87133 >> 7) & cppMask_un_1_;
	bool cppVar_87136 = (cppVar_87134 == 0);
	BIT_VEC cppVar_87137 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87138 = (cppVar_87137 << 3) | 6;
	cppVar_87138 = (cppVar_87138 & cppMask_un_5_);
	BIT_VEC cppVar_87139 = (0 << 5) | cppVar_87138;
	cppVar_87139 = (cppVar_87139 & cppMask_un_8_);
	type_mem cppVar_87140 = IRAM;
	cppVar_87140.wr(cppVar_87139, ACC);
	type_mem& cppVar_87141 = (cppVar_87136) ? cppVar_87140 : IRAM;
	BIT_VEC cppVar_87142 = ROM.rd(PC);
	bool cppVar_87144 = (cppVar_87142 == 253);
	BIT_VEC cppVar_87145 = ROM.rd(PC);
	bool cppVar_87147 = (cppVar_87145 == 205);
	bool cppVar_87148 = cppVar_87144 || cppVar_87147;
	BIT_VEC cppVar_87150 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87152 = (cppVar_87150 << 3) | 5;
	cppVar_87152 = (cppVar_87152 & cppMask_un_5_);
	BIT_VEC cppVar_87153 = (0 << 5) | cppVar_87152;
	cppVar_87153 = (cppVar_87153 & cppMask_un_8_);
	BIT_VEC cppVar_87154 = (cppVar_87153 >> 7) & cppMask_un_1_;
	bool cppVar_87156 = (cppVar_87154 == 0);
	BIT_VEC cppVar_87157 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87158 = (cppVar_87157 << 3) | 5;
	cppVar_87158 = (cppVar_87158 & cppMask_un_5_);
	BIT_VEC cppVar_87159 = (0 << 5) | cppVar_87158;
	cppVar_87159 = (cppVar_87159 & cppMask_un_8_);
	type_mem cppVar_87160 = IRAM;
	cppVar_87160.wr(cppVar_87159, ACC);
	type_mem& cppVar_87161 = (cppVar_87156) ? cppVar_87160 : IRAM;
	BIT_VEC cppVar_87162 = ROM.rd(PC);
	bool cppVar_87164 = (cppVar_87162 == 252);
	BIT_VEC cppVar_87165 = ROM.rd(PC);
	bool cppVar_87167 = (cppVar_87165 == 204);
	bool cppVar_87168 = cppVar_87164 || cppVar_87167;
	BIT_VEC cppVar_87170 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87172 = (cppVar_87170 << 3) | 4;
	cppVar_87172 = (cppVar_87172 & cppMask_un_5_);
	BIT_VEC cppVar_87173 = (0 << 5) | cppVar_87172;
	cppVar_87173 = (cppVar_87173 & cppMask_un_8_);
	BIT_VEC cppVar_87174 = (cppVar_87173 >> 7) & cppMask_un_1_;
	bool cppVar_87176 = (cppVar_87174 == 0);
	BIT_VEC cppVar_87177 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87178 = (cppVar_87177 << 3) | 4;
	cppVar_87178 = (cppVar_87178 & cppMask_un_5_);
	BIT_VEC cppVar_87179 = (0 << 5) | cppVar_87178;
	cppVar_87179 = (cppVar_87179 & cppMask_un_8_);
	type_mem cppVar_87180 = IRAM;
	cppVar_87180.wr(cppVar_87179, ACC);
	type_mem& cppVar_87181 = (cppVar_87176) ? cppVar_87180 : IRAM;
	BIT_VEC cppVar_87182 = ROM.rd(PC);
	bool cppVar_87184 = (cppVar_87182 == 251);
	BIT_VEC cppVar_87185 = ROM.rd(PC);
	bool cppVar_87187 = (cppVar_87185 == 203);
	bool cppVar_87188 = cppVar_87184 || cppVar_87187;
	BIT_VEC cppVar_87190 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87192 = (cppVar_87190 << 3) | 3;
	cppVar_87192 = (cppVar_87192 & cppMask_un_5_);
	BIT_VEC cppVar_87193 = (0 << 5) | cppVar_87192;
	cppVar_87193 = (cppVar_87193 & cppMask_un_8_);
	BIT_VEC cppVar_87194 = (cppVar_87193 >> 7) & cppMask_un_1_;
	bool cppVar_87196 = (cppVar_87194 == 0);
	BIT_VEC cppVar_87197 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87198 = (cppVar_87197 << 3) | 3;
	cppVar_87198 = (cppVar_87198 & cppMask_un_5_);
	BIT_VEC cppVar_87199 = (0 << 5) | cppVar_87198;
	cppVar_87199 = (cppVar_87199 & cppMask_un_8_);
	type_mem cppVar_87200 = IRAM;
	cppVar_87200.wr(cppVar_87199, ACC);
	type_mem& cppVar_87201 = (cppVar_87196) ? cppVar_87200 : IRAM;
	BIT_VEC cppVar_87202 = ROM.rd(PC);
	bool cppVar_87204 = (cppVar_87202 == 250);
	BIT_VEC cppVar_87205 = ROM.rd(PC);
	bool cppVar_87207 = (cppVar_87205 == 202);
	bool cppVar_87208 = cppVar_87204 || cppVar_87207;
	BIT_VEC cppVar_87210 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87212 = (cppVar_87210 << 3) | 2;
	cppVar_87212 = (cppVar_87212 & cppMask_un_5_);
	BIT_VEC cppVar_87213 = (0 << 5) | cppVar_87212;
	cppVar_87213 = (cppVar_87213 & cppMask_un_8_);
	BIT_VEC cppVar_87214 = (cppVar_87213 >> 7) & cppMask_un_1_;
	bool cppVar_87216 = (cppVar_87214 == 0);
	BIT_VEC cppVar_87217 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87218 = (cppVar_87217 << 3) | 2;
	cppVar_87218 = (cppVar_87218 & cppMask_un_5_);
	BIT_VEC cppVar_87219 = (0 << 5) | cppVar_87218;
	cppVar_87219 = (cppVar_87219 & cppMask_un_8_);
	type_mem cppVar_87220 = IRAM;
	cppVar_87220.wr(cppVar_87219, ACC);
	type_mem& cppVar_87221 = (cppVar_87216) ? cppVar_87220 : IRAM;
	BIT_VEC cppVar_87222 = ROM.rd(PC);
	bool cppVar_87224 = (cppVar_87222 == 249);
	BIT_VEC cppVar_87225 = ROM.rd(PC);
	bool cppVar_87227 = (cppVar_87225 == 201);
	bool cppVar_87228 = cppVar_87224 || cppVar_87227;
	BIT_VEC cppVar_87230 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87232 = (cppVar_87230 << 3) | 1;
	cppVar_87232 = (cppVar_87232 & cppMask_un_5_);
	BIT_VEC cppVar_87233 = (0 << 5) | cppVar_87232;
	cppVar_87233 = (cppVar_87233 & cppMask_un_8_);
	BIT_VEC cppVar_87234 = (cppVar_87233 >> 7) & cppMask_un_1_;
	bool cppVar_87236 = (cppVar_87234 == 0);
	BIT_VEC cppVar_87237 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87238 = (cppVar_87237 << 3) | 1;
	cppVar_87238 = (cppVar_87238 & cppMask_un_5_);
	BIT_VEC cppVar_87239 = (0 << 5) | cppVar_87238;
	cppVar_87239 = (cppVar_87239 & cppMask_un_8_);
	type_mem cppVar_87240 = IRAM;
	cppVar_87240.wr(cppVar_87239, ACC);
	type_mem& cppVar_87241 = (cppVar_87236) ? cppVar_87240 : IRAM;
	BIT_VEC cppVar_87242 = ROM.rd(PC);
	bool cppVar_87244 = (cppVar_87242 == 248);
	BIT_VEC cppVar_87245 = ROM.rd(PC);
	bool cppVar_87247 = (cppVar_87245 == 200);
	bool cppVar_87248 = cppVar_87244 || cppVar_87247;
	BIT_VEC cppVar_87250 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87252 = (cppVar_87250 << 3) | 0;
	cppVar_87252 = (cppVar_87252 & cppMask_un_5_);
	BIT_VEC cppVar_87253 = (0 << 5) | cppVar_87252;
	cppVar_87253 = (cppVar_87253 & cppMask_un_8_);
	BIT_VEC cppVar_87254 = (cppVar_87253 >> 7) & cppMask_un_1_;
	bool cppVar_87256 = (cppVar_87254 == 0);
	BIT_VEC cppVar_87257 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87258 = (cppVar_87257 << 3) | 0;
	cppVar_87258 = (cppVar_87258 & cppMask_un_5_);
	BIT_VEC cppVar_87259 = (0 << 5) | cppVar_87258;
	cppVar_87259 = (cppVar_87259 & cppMask_un_8_);
	type_mem cppVar_87260 = IRAM;
	cppVar_87260.wr(cppVar_87259, ACC);
	type_mem& cppVar_87261 = (cppVar_87256) ? cppVar_87260 : IRAM;
	BIT_VEC cppVar_87262 = ROM.rd(PC);
	bool cppVar_87264 = (cppVar_87262 == 247);
	BIT_VEC cppVar_87265 = ROM.rd(PC);
	bool cppVar_87267 = (cppVar_87265 == 199);
	bool cppVar_87268 = cppVar_87264 || cppVar_87267;
	BIT_VEC cppVar_87270 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87272 = (cppVar_87270 << 3) | 1;
	cppVar_87272 = (cppVar_87272 & cppMask_un_5_);
	BIT_VEC cppVar_87273 = (0 << 5) | cppVar_87272;
	cppVar_87273 = (cppVar_87273 & cppMask_un_8_);
	BIT_VEC cppVar_87274 = IRAM.rd(cppVar_87273);
	type_mem cppVar_87275 = IRAM;
	cppVar_87275.wr(cppVar_87274, ACC);
	BIT_VEC cppVar_87276 = ROM.rd(PC);
	bool cppVar_87278 = (cppVar_87276 == 246);
	BIT_VEC cppVar_87279 = ROM.rd(PC);
	bool cppVar_87281 = (cppVar_87279 == 198);
	bool cppVar_87282 = cppVar_87278 || cppVar_87281;
	BIT_VEC cppVar_87284 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_87286 = (cppVar_87284 << 3) | 0;
	cppVar_87286 = (cppVar_87286 & cppMask_un_5_);
	BIT_VEC cppVar_87287 = (0 << 5) | cppVar_87286;
	cppVar_87287 = (cppVar_87287 & cppMask_un_8_);
	BIT_VEC cppVar_87288 = IRAM.rd(cppVar_87287);
	type_mem cppVar_87289 = IRAM;
	cppVar_87289.wr(cppVar_87288, ACC);
	BIT_VEC cppVar_87290 = ROM.rd(PC);
	bool cppVar_87292 = (cppVar_87290 == 245);
	BIT_VEC cppVar_87293 = ROM.rd(PC);
	bool cppVar_87295 = (cppVar_87293 == 197);
	bool cppVar_87296 = cppVar_87292 || cppVar_87295;
	BIT_VEC cppVar_87298 = PC + 1;
	cppVar_87298 = (cppVar_87298 & cppMask_un_16_);
	BIT_VEC cppVar_87299 = ROM.rd(cppVar_87298);
	BIT_VEC cppVar_87300 = (cppVar_87299 >> 7) & cppMask_un_1_;
	bool cppVar_87302 = (cppVar_87300 == 0);
	BIT_VEC cppVar_87303 = PC + 1;
	cppVar_87303 = (cppVar_87303 & cppMask_un_16_);
	BIT_VEC cppVar_87304 = ROM.rd(cppVar_87303);
	type_mem cppVar_87305 = IRAM;
	cppVar_87305.wr(cppVar_87304, ACC);
	type_mem& cppVar_87306 = (cppVar_87302) ? cppVar_87305 : IRAM;
	BIT_VEC cppVar_87307 = ROM.rd(PC);
	bool cppVar_87309 = (cppVar_87307 == 192);
	BIT_VEC cppVar_87311 = SP + 1;
	cppVar_87311 = (cppVar_87311 & cppMask_un_8_);
	BIT_VEC cppVar_87313 = PC + 1;
	cppVar_87313 = (cppVar_87313 & cppMask_un_16_);
	BIT_VEC cppVar_87314 = ROM.rd(cppVar_87313);
	BIT_VEC cppVar_87315 = (cppVar_87314 >> 7) & cppMask_un_1_;
	bool cppVar_87317 = (cppVar_87315 == 0);
	BIT_VEC cppVar_87318 = PC + 1;
	cppVar_87318 = (cppVar_87318 & cppMask_un_16_);
	BIT_VEC cppVar_87319 = ROM.rd(cppVar_87318);
	BIT_VEC cppVar_87320 = IRAM.rd(cppVar_87319);
	BIT_VEC cppVar_87321 = PC + 1;
	cppVar_87321 = (cppVar_87321 & cppMask_un_16_);
	BIT_VEC cppVar_87322 = ROM.rd(cppVar_87321);
	bool cppVar_87324 = (cppVar_87322 == 128);
	BIT_VEC cppVar_87325 = PC + 1;
	cppVar_87325 = (cppVar_87325 & cppMask_un_16_);
	BIT_VEC cppVar_87326 = ROM.rd(cppVar_87325);
	bool cppVar_87328 = (cppVar_87326 == 129);
	BIT_VEC cppVar_87329 = PC + 1;
	cppVar_87329 = (cppVar_87329 & cppMask_un_16_);
	BIT_VEC cppVar_87330 = ROM.rd(cppVar_87329);
	bool cppVar_87332 = (cppVar_87330 == 130);
	BIT_VEC cppVar_87333 = PC + 1;
	cppVar_87333 = (cppVar_87333 & cppMask_un_16_);
	BIT_VEC cppVar_87334 = ROM.rd(cppVar_87333);
	bool cppVar_87336 = (cppVar_87334 == 131);
	BIT_VEC cppVar_87337 = PC + 1;
	cppVar_87337 = (cppVar_87337 & cppMask_un_16_);
	BIT_VEC cppVar_87338 = ROM.rd(cppVar_87337);
	bool cppVar_87340 = (cppVar_87338 == 135);
	BIT_VEC cppVar_87341 = PC + 1;
	cppVar_87341 = (cppVar_87341 & cppMask_un_16_);
	BIT_VEC cppVar_87342 = ROM.rd(cppVar_87341);
	bool cppVar_87344 = (cppVar_87342 == 136);
	BIT_VEC cppVar_87345 = PC + 1;
	cppVar_87345 = (cppVar_87345 & cppMask_un_16_);
	BIT_VEC cppVar_87346 = ROM.rd(cppVar_87345);
	bool cppVar_87348 = (cppVar_87346 == 137);
	BIT_VEC cppVar_87349 = PC + 1;
	cppVar_87349 = (cppVar_87349 & cppMask_un_16_);
	BIT_VEC cppVar_87350 = ROM.rd(cppVar_87349);
	bool cppVar_87352 = (cppVar_87350 == 138);
	BIT_VEC cppVar_87353 = PC + 1;
	cppVar_87353 = (cppVar_87353 & cppMask_un_16_);
	BIT_VEC cppVar_87354 = ROM.rd(cppVar_87353);
	bool cppVar_87356 = (cppVar_87354 == 140);
	BIT_VEC cppVar_87357 = PC + 1;
	cppVar_87357 = (cppVar_87357 & cppMask_un_16_);
	BIT_VEC cppVar_87358 = ROM.rd(cppVar_87357);
	bool cppVar_87360 = (cppVar_87358 == 139);
	BIT_VEC cppVar_87361 = PC + 1;
	cppVar_87361 = (cppVar_87361 & cppMask_un_16_);
	BIT_VEC cppVar_87362 = ROM.rd(cppVar_87361);
	bool cppVar_87364 = (cppVar_87362 == 141);
	BIT_VEC cppVar_87365 = PC + 1;
	cppVar_87365 = (cppVar_87365 & cppMask_un_16_);
	BIT_VEC cppVar_87366 = ROM.rd(cppVar_87365);
	bool cppVar_87368 = (cppVar_87366 == 144);
	BIT_VEC cppVar_87369 = PC + 1;
	cppVar_87369 = (cppVar_87369 & cppMask_un_16_);
	BIT_VEC cppVar_87370 = ROM.rd(cppVar_87369);
	bool cppVar_87372 = (cppVar_87370 == 152);
	BIT_VEC cppVar_87373 = PC + 1;
	cppVar_87373 = (cppVar_87373 & cppMask_un_16_);
	BIT_VEC cppVar_87374 = ROM.rd(cppVar_87373);
	bool cppVar_87376 = (cppVar_87374 == 153);
	BIT_VEC cppVar_87377 = PC + 1;
	cppVar_87377 = (cppVar_87377 & cppMask_un_16_);
	BIT_VEC cppVar_87378 = ROM.rd(cppVar_87377);
	bool cppVar_87380 = (cppVar_87378 == 160);
	BIT_VEC cppVar_87381 = PC + 1;
	cppVar_87381 = (cppVar_87381 & cppMask_un_16_);
	BIT_VEC cppVar_87382 = ROM.rd(cppVar_87381);
	bool cppVar_87384 = (cppVar_87382 == 168);
	BIT_VEC cppVar_87385 = PC + 1;
	cppVar_87385 = (cppVar_87385 & cppMask_un_16_);
	BIT_VEC cppVar_87386 = ROM.rd(cppVar_87385);
	bool cppVar_87388 = (cppVar_87386 == 176);
	BIT_VEC cppVar_87389 = PC + 1;
	cppVar_87389 = (cppVar_87389 & cppMask_un_16_);
	BIT_VEC cppVar_87390 = ROM.rd(cppVar_87389);
	bool cppVar_87392 = (cppVar_87390 == 184);
	BIT_VEC cppVar_87393 = PC + 1;
	cppVar_87393 = (cppVar_87393 & cppMask_un_16_);
	BIT_VEC cppVar_87394 = ROM.rd(cppVar_87393);
	bool cppVar_87396 = (cppVar_87394 == 208);
	BIT_VEC cppVar_87397 = PC + 1;
	cppVar_87397 = (cppVar_87397 & cppMask_un_16_);
	BIT_VEC cppVar_87398 = ROM.rd(cppVar_87397);
	bool cppVar_87400 = (cppVar_87398 == 224);
	BIT_VEC cppVar_87401 = PC + 1;
	cppVar_87401 = (cppVar_87401 & cppMask_un_16_);
	BIT_VEC cppVar_87402 = ROM.rd(cppVar_87401);
	bool cppVar_87404 = (cppVar_87402 == 240);
	BIT_VEC cppVar_87406 = (cppVar_87404) ? B : 0;
	BIT_VEC cppVar_87407 = (cppVar_87400) ? ACC : cppVar_87406;
	BIT_VEC cppVar_87408 = (cppVar_87396) ? PSW : cppVar_87407;
	BIT_VEC cppVar_87409 = (cppVar_87392) ? IP : cppVar_87408;
	BIT_VEC cppVar_87410 = (cppVar_87388) ? P3 : cppVar_87409;
	BIT_VEC cppVar_87411 = (cppVar_87384) ? IE : cppVar_87410;
	BIT_VEC cppVar_87412 = (cppVar_87380) ? P2 : cppVar_87411;
	BIT_VEC cppVar_87413 = (cppVar_87376) ? SBUF : cppVar_87412;
	BIT_VEC cppVar_87414 = (cppVar_87372) ? SCON : cppVar_87413;
	BIT_VEC cppVar_87415 = (cppVar_87368) ? P1 : cppVar_87414;
	BIT_VEC cppVar_87416 = (cppVar_87364) ? TH1 : cppVar_87415;
	BIT_VEC cppVar_87417 = (cppVar_87360) ? TL1 : cppVar_87416;
	BIT_VEC cppVar_87418 = (cppVar_87356) ? TH0 : cppVar_87417;
	BIT_VEC cppVar_87419 = (cppVar_87352) ? TL0 : cppVar_87418;
	BIT_VEC cppVar_87420 = (cppVar_87348) ? TMOD : cppVar_87419;
	BIT_VEC cppVar_87421 = (cppVar_87344) ? TCON : cppVar_87420;
	BIT_VEC cppVar_87422 = (cppVar_87340) ? PCON : cppVar_87421;
	BIT_VEC cppVar_87423 = (cppVar_87336) ? DPH : cppVar_87422;
	BIT_VEC cppVar_87424 = (cppVar_87332) ? DPL : cppVar_87423;
	BIT_VEC cppVar_87425 = (cppVar_87328) ? SP : cppVar_87424;
	BIT_VEC cppVar_87426 = (cppVar_87324) ? P0 : cppVar_87425;
	BIT_VEC cppVar_87427 = (cppVar_87317) ? cppVar_87320 : cppVar_87426;
	type_mem cppVar_87428 = IRAM;
	cppVar_87428.wr(cppVar_87311, cppVar_87427);
	BIT_VEC cppVar_87429 = ROM.rd(PC);
	bool cppVar_87431 = (cppVar_87429 == 178);
	BIT_VEC cppVar_87433 = PC + 1;
	cppVar_87433 = (cppVar_87433 & cppMask_un_16_);
	BIT_VEC cppVar_87434 = ROM.rd(cppVar_87433);
	BIT_VEC cppVar_87435 = (cppVar_87434 >> 7) & cppMask_un_1_;
	bool cppVar_87437 = (cppVar_87435 == 1);
	BIT_VEC cppVar_87438 = PC + 1;
	cppVar_87438 = (cppVar_87438 & cppMask_un_16_);
	BIT_VEC cppVar_87439 = ROM.rd(cppVar_87438);
	BIT_VEC cppVar_87440 = (cppVar_87439 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87442 = (cppVar_87440 << 3) | 0;
	cppVar_87442 = (cppVar_87442 & cppMask_un_8_);
	BIT_VEC cppVar_87443 = PC + 1;
	cppVar_87443 = (cppVar_87443 & cppMask_un_16_);
	BIT_VEC cppVar_87444 = ROM.rd(cppVar_87443);
	BIT_VEC cppVar_87445 = (cppVar_87444 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87446 = (cppVar_87445 & cppMask_un_5_);
	BIT_VEC cppVar_87448 = cppVar_87446 + 32;
	cppVar_87448 = (cppVar_87448 & cppMask_un_8_);
	BIT_VEC cppVar_87449 = (cppVar_87437) ? cppVar_87442 : cppVar_87448;
	BIT_VEC cppVar_87450 = (cppVar_87449 >> 7) & cppMask_un_1_;
	bool cppVar_87452 = (cppVar_87450 == 0);
	BIT_VEC cppVar_87453 = PC + 1;
	cppVar_87453 = (cppVar_87453 & cppMask_un_16_);
	BIT_VEC cppVar_87454 = ROM.rd(cppVar_87453);
	BIT_VEC cppVar_87455 = (cppVar_87454 >> 7) & cppMask_un_1_;
	bool cppVar_87456 = (cppVar_87455 == 1);
	BIT_VEC cppVar_87457 = PC + 1;
	cppVar_87457 = (cppVar_87457 & cppMask_un_16_);
	BIT_VEC cppVar_87458 = ROM.rd(cppVar_87457);
	BIT_VEC cppVar_87459 = (cppVar_87458 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87460 = (cppVar_87459 << 3) | 0;
	cppVar_87460 = (cppVar_87460 & cppMask_un_8_);
	BIT_VEC cppVar_87461 = PC + 1;
	cppVar_87461 = (cppVar_87461 & cppMask_un_16_);
	BIT_VEC cppVar_87462 = ROM.rd(cppVar_87461);
	BIT_VEC cppVar_87463 = (cppVar_87462 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87464 = (cppVar_87463 & cppMask_un_5_);
	BIT_VEC cppVar_87465 = cppVar_87464 + 32;
	cppVar_87465 = (cppVar_87465 & cppMask_un_8_);
	BIT_VEC cppVar_87466 = (cppVar_87456) ? cppVar_87460 : cppVar_87465;
	BIT_VEC cppVar_87468 = PC + 1;
	cppVar_87468 = (cppVar_87468 & cppMask_un_16_);
	BIT_VEC cppVar_87469 = ROM.rd(cppVar_87468);
	BIT_VEC cppVar_87470 = (cppVar_87469 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_87471 = (cppVar_87470 & cppMask_un_3_);
	BIT_VEC cppVar_87472 = 1 << static_cast<unsigned>(cppVar_87471);
	cppVar_87472 = (cppVar_87472 & cppMask_un_8_);
	BIT_VEC cppVar_87473 = ~cppVar_87472;
	BIT_VEC cppVar_87474 = PC + 1;
	cppVar_87474 = (cppVar_87474 & cppMask_un_16_);
	BIT_VEC cppVar_87475 = ROM.rd(cppVar_87474);
	BIT_VEC cppVar_87476 = (cppVar_87475 >> 7) & cppMask_un_1_;
	bool cppVar_87477 = (cppVar_87476 == 1);
	BIT_VEC cppVar_87478 = PC + 1;
	cppVar_87478 = (cppVar_87478 & cppMask_un_16_);
	BIT_VEC cppVar_87479 = ROM.rd(cppVar_87478);
	BIT_VEC cppVar_87480 = (cppVar_87479 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87481 = (cppVar_87480 << 3) | 0;
	cppVar_87481 = (cppVar_87481 & cppMask_un_8_);
	BIT_VEC cppVar_87482 = PC + 1;
	cppVar_87482 = (cppVar_87482 & cppMask_un_16_);
	BIT_VEC cppVar_87483 = ROM.rd(cppVar_87482);
	BIT_VEC cppVar_87484 = (cppVar_87483 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87485 = (cppVar_87484 & cppMask_un_5_);
	BIT_VEC cppVar_87486 = cppVar_87485 + 32;
	cppVar_87486 = (cppVar_87486 & cppMask_un_8_);
	BIT_VEC cppVar_87487 = (cppVar_87477) ? cppVar_87481 : cppVar_87486;
	BIT_VEC cppVar_87488 = (cppVar_87487 >> 7) & cppMask_un_1_;
	bool cppVar_87490 = (cppVar_87488 == 0);
	BIT_VEC cppVar_87491 = PC + 1;
	cppVar_87491 = (cppVar_87491 & cppMask_un_16_);
	BIT_VEC cppVar_87492 = ROM.rd(cppVar_87491);
	BIT_VEC cppVar_87493 = (cppVar_87492 >> 7) & cppMask_un_1_;
	bool cppVar_87494 = (cppVar_87493 == 1);
	BIT_VEC cppVar_87495 = PC + 1;
	cppVar_87495 = (cppVar_87495 & cppMask_un_16_);
	BIT_VEC cppVar_87496 = ROM.rd(cppVar_87495);
	BIT_VEC cppVar_87497 = (cppVar_87496 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87498 = (cppVar_87497 << 3) | 0;
	cppVar_87498 = (cppVar_87498 & cppMask_un_8_);
	BIT_VEC cppVar_87499 = PC + 1;
	cppVar_87499 = (cppVar_87499 & cppMask_un_16_);
	BIT_VEC cppVar_87500 = ROM.rd(cppVar_87499);
	BIT_VEC cppVar_87501 = (cppVar_87500 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87502 = (cppVar_87501 & cppMask_un_5_);
	BIT_VEC cppVar_87503 = cppVar_87502 + 32;
	cppVar_87503 = (cppVar_87503 & cppMask_un_8_);
	BIT_VEC cppVar_87504 = (cppVar_87494) ? cppVar_87498 : cppVar_87503;
	BIT_VEC cppVar_87505 = IRAM.rd(cppVar_87504);
	BIT_VEC cppVar_87506 = PC + 1;
	cppVar_87506 = (cppVar_87506 & cppMask_un_16_);
	BIT_VEC cppVar_87507 = ROM.rd(cppVar_87506);
	BIT_VEC cppVar_87508 = (cppVar_87507 >> 7) & cppMask_un_1_;
	bool cppVar_87509 = (cppVar_87508 == 1);
	BIT_VEC cppVar_87510 = PC + 1;
	cppVar_87510 = (cppVar_87510 & cppMask_un_16_);
	BIT_VEC cppVar_87511 = ROM.rd(cppVar_87510);
	BIT_VEC cppVar_87512 = (cppVar_87511 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87513 = (cppVar_87512 << 3) | 0;
	cppVar_87513 = (cppVar_87513 & cppMask_un_8_);
	BIT_VEC cppVar_87514 = PC + 1;
	cppVar_87514 = (cppVar_87514 & cppMask_un_16_);
	BIT_VEC cppVar_87515 = ROM.rd(cppVar_87514);
	BIT_VEC cppVar_87516 = (cppVar_87515 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87517 = (cppVar_87516 & cppMask_un_5_);
	BIT_VEC cppVar_87518 = cppVar_87517 + 32;
	cppVar_87518 = (cppVar_87518 & cppMask_un_8_);
	BIT_VEC cppVar_87519 = (cppVar_87509) ? cppVar_87513 : cppVar_87518;
	bool cppVar_87521 = (cppVar_87519 == 128);
	BIT_VEC cppVar_87522 = PC + 1;
	cppVar_87522 = (cppVar_87522 & cppMask_un_16_);
	BIT_VEC cppVar_87523 = ROM.rd(cppVar_87522);
	BIT_VEC cppVar_87524 = (cppVar_87523 >> 7) & cppMask_un_1_;
	bool cppVar_87525 = (cppVar_87524 == 1);
	BIT_VEC cppVar_87526 = PC + 1;
	cppVar_87526 = (cppVar_87526 & cppMask_un_16_);
	BIT_VEC cppVar_87527 = ROM.rd(cppVar_87526);
	BIT_VEC cppVar_87528 = (cppVar_87527 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87529 = (cppVar_87528 << 3) | 0;
	cppVar_87529 = (cppVar_87529 & cppMask_un_8_);
	BIT_VEC cppVar_87530 = PC + 1;
	cppVar_87530 = (cppVar_87530 & cppMask_un_16_);
	BIT_VEC cppVar_87531 = ROM.rd(cppVar_87530);
	BIT_VEC cppVar_87532 = (cppVar_87531 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87533 = (cppVar_87532 & cppMask_un_5_);
	BIT_VEC cppVar_87534 = cppVar_87533 + 32;
	cppVar_87534 = (cppVar_87534 & cppMask_un_8_);
	BIT_VEC cppVar_87535 = (cppVar_87525) ? cppVar_87529 : cppVar_87534;
	bool cppVar_87537 = (cppVar_87535 == 129);
	BIT_VEC cppVar_87538 = PC + 1;
	cppVar_87538 = (cppVar_87538 & cppMask_un_16_);
	BIT_VEC cppVar_87539 = ROM.rd(cppVar_87538);
	BIT_VEC cppVar_87540 = (cppVar_87539 >> 7) & cppMask_un_1_;
	bool cppVar_87541 = (cppVar_87540 == 1);
	BIT_VEC cppVar_87542 = PC + 1;
	cppVar_87542 = (cppVar_87542 & cppMask_un_16_);
	BIT_VEC cppVar_87543 = ROM.rd(cppVar_87542);
	BIT_VEC cppVar_87544 = (cppVar_87543 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87545 = (cppVar_87544 << 3) | 0;
	cppVar_87545 = (cppVar_87545 & cppMask_un_8_);
	BIT_VEC cppVar_87546 = PC + 1;
	cppVar_87546 = (cppVar_87546 & cppMask_un_16_);
	BIT_VEC cppVar_87547 = ROM.rd(cppVar_87546);
	BIT_VEC cppVar_87548 = (cppVar_87547 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87549 = (cppVar_87548 & cppMask_un_5_);
	BIT_VEC cppVar_87550 = cppVar_87549 + 32;
	cppVar_87550 = (cppVar_87550 & cppMask_un_8_);
	BIT_VEC cppVar_87551 = (cppVar_87541) ? cppVar_87545 : cppVar_87550;
	bool cppVar_87553 = (cppVar_87551 == 130);
	BIT_VEC cppVar_87554 = PC + 1;
	cppVar_87554 = (cppVar_87554 & cppMask_un_16_);
	BIT_VEC cppVar_87555 = ROM.rd(cppVar_87554);
	BIT_VEC cppVar_87556 = (cppVar_87555 >> 7) & cppMask_un_1_;
	bool cppVar_87557 = (cppVar_87556 == 1);
	BIT_VEC cppVar_87558 = PC + 1;
	cppVar_87558 = (cppVar_87558 & cppMask_un_16_);
	BIT_VEC cppVar_87559 = ROM.rd(cppVar_87558);
	BIT_VEC cppVar_87560 = (cppVar_87559 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87561 = (cppVar_87560 << 3) | 0;
	cppVar_87561 = (cppVar_87561 & cppMask_un_8_);
	BIT_VEC cppVar_87562 = PC + 1;
	cppVar_87562 = (cppVar_87562 & cppMask_un_16_);
	BIT_VEC cppVar_87563 = ROM.rd(cppVar_87562);
	BIT_VEC cppVar_87564 = (cppVar_87563 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87565 = (cppVar_87564 & cppMask_un_5_);
	BIT_VEC cppVar_87566 = cppVar_87565 + 32;
	cppVar_87566 = (cppVar_87566 & cppMask_un_8_);
	BIT_VEC cppVar_87567 = (cppVar_87557) ? cppVar_87561 : cppVar_87566;
	bool cppVar_87569 = (cppVar_87567 == 131);
	BIT_VEC cppVar_87570 = PC + 1;
	cppVar_87570 = (cppVar_87570 & cppMask_un_16_);
	BIT_VEC cppVar_87571 = ROM.rd(cppVar_87570);
	BIT_VEC cppVar_87572 = (cppVar_87571 >> 7) & cppMask_un_1_;
	bool cppVar_87573 = (cppVar_87572 == 1);
	BIT_VEC cppVar_87574 = PC + 1;
	cppVar_87574 = (cppVar_87574 & cppMask_un_16_);
	BIT_VEC cppVar_87575 = ROM.rd(cppVar_87574);
	BIT_VEC cppVar_87576 = (cppVar_87575 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87577 = (cppVar_87576 << 3) | 0;
	cppVar_87577 = (cppVar_87577 & cppMask_un_8_);
	BIT_VEC cppVar_87578 = PC + 1;
	cppVar_87578 = (cppVar_87578 & cppMask_un_16_);
	BIT_VEC cppVar_87579 = ROM.rd(cppVar_87578);
	BIT_VEC cppVar_87580 = (cppVar_87579 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87581 = (cppVar_87580 & cppMask_un_5_);
	BIT_VEC cppVar_87582 = cppVar_87581 + 32;
	cppVar_87582 = (cppVar_87582 & cppMask_un_8_);
	BIT_VEC cppVar_87583 = (cppVar_87573) ? cppVar_87577 : cppVar_87582;
	bool cppVar_87585 = (cppVar_87583 == 135);
	BIT_VEC cppVar_87586 = PC + 1;
	cppVar_87586 = (cppVar_87586 & cppMask_un_16_);
	BIT_VEC cppVar_87587 = ROM.rd(cppVar_87586);
	BIT_VEC cppVar_87588 = (cppVar_87587 >> 7) & cppMask_un_1_;
	bool cppVar_87589 = (cppVar_87588 == 1);
	BIT_VEC cppVar_87590 = PC + 1;
	cppVar_87590 = (cppVar_87590 & cppMask_un_16_);
	BIT_VEC cppVar_87591 = ROM.rd(cppVar_87590);
	BIT_VEC cppVar_87592 = (cppVar_87591 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87593 = (cppVar_87592 << 3) | 0;
	cppVar_87593 = (cppVar_87593 & cppMask_un_8_);
	BIT_VEC cppVar_87594 = PC + 1;
	cppVar_87594 = (cppVar_87594 & cppMask_un_16_);
	BIT_VEC cppVar_87595 = ROM.rd(cppVar_87594);
	BIT_VEC cppVar_87596 = (cppVar_87595 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87597 = (cppVar_87596 & cppMask_un_5_);
	BIT_VEC cppVar_87598 = cppVar_87597 + 32;
	cppVar_87598 = (cppVar_87598 & cppMask_un_8_);
	BIT_VEC cppVar_87599 = (cppVar_87589) ? cppVar_87593 : cppVar_87598;
	bool cppVar_87601 = (cppVar_87599 == 136);
	BIT_VEC cppVar_87602 = PC + 1;
	cppVar_87602 = (cppVar_87602 & cppMask_un_16_);
	BIT_VEC cppVar_87603 = ROM.rd(cppVar_87602);
	BIT_VEC cppVar_87604 = (cppVar_87603 >> 7) & cppMask_un_1_;
	bool cppVar_87605 = (cppVar_87604 == 1);
	BIT_VEC cppVar_87606 = PC + 1;
	cppVar_87606 = (cppVar_87606 & cppMask_un_16_);
	BIT_VEC cppVar_87607 = ROM.rd(cppVar_87606);
	BIT_VEC cppVar_87608 = (cppVar_87607 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87609 = (cppVar_87608 << 3) | 0;
	cppVar_87609 = (cppVar_87609 & cppMask_un_8_);
	BIT_VEC cppVar_87610 = PC + 1;
	cppVar_87610 = (cppVar_87610 & cppMask_un_16_);
	BIT_VEC cppVar_87611 = ROM.rd(cppVar_87610);
	BIT_VEC cppVar_87612 = (cppVar_87611 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87613 = (cppVar_87612 & cppMask_un_5_);
	BIT_VEC cppVar_87614 = cppVar_87613 + 32;
	cppVar_87614 = (cppVar_87614 & cppMask_un_8_);
	BIT_VEC cppVar_87615 = (cppVar_87605) ? cppVar_87609 : cppVar_87614;
	bool cppVar_87617 = (cppVar_87615 == 137);
	BIT_VEC cppVar_87618 = PC + 1;
	cppVar_87618 = (cppVar_87618 & cppMask_un_16_);
	BIT_VEC cppVar_87619 = ROM.rd(cppVar_87618);
	BIT_VEC cppVar_87620 = (cppVar_87619 >> 7) & cppMask_un_1_;
	bool cppVar_87621 = (cppVar_87620 == 1);
	BIT_VEC cppVar_87622 = PC + 1;
	cppVar_87622 = (cppVar_87622 & cppMask_un_16_);
	BIT_VEC cppVar_87623 = ROM.rd(cppVar_87622);
	BIT_VEC cppVar_87624 = (cppVar_87623 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87625 = (cppVar_87624 << 3) | 0;
	cppVar_87625 = (cppVar_87625 & cppMask_un_8_);
	BIT_VEC cppVar_87626 = PC + 1;
	cppVar_87626 = (cppVar_87626 & cppMask_un_16_);
	BIT_VEC cppVar_87627 = ROM.rd(cppVar_87626);
	BIT_VEC cppVar_87628 = (cppVar_87627 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87629 = (cppVar_87628 & cppMask_un_5_);
	BIT_VEC cppVar_87630 = cppVar_87629 + 32;
	cppVar_87630 = (cppVar_87630 & cppMask_un_8_);
	BIT_VEC cppVar_87631 = (cppVar_87621) ? cppVar_87625 : cppVar_87630;
	bool cppVar_87633 = (cppVar_87631 == 138);
	BIT_VEC cppVar_87634 = PC + 1;
	cppVar_87634 = (cppVar_87634 & cppMask_un_16_);
	BIT_VEC cppVar_87635 = ROM.rd(cppVar_87634);
	BIT_VEC cppVar_87636 = (cppVar_87635 >> 7) & cppMask_un_1_;
	bool cppVar_87637 = (cppVar_87636 == 1);
	BIT_VEC cppVar_87638 = PC + 1;
	cppVar_87638 = (cppVar_87638 & cppMask_un_16_);
	BIT_VEC cppVar_87639 = ROM.rd(cppVar_87638);
	BIT_VEC cppVar_87640 = (cppVar_87639 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87641 = (cppVar_87640 << 3) | 0;
	cppVar_87641 = (cppVar_87641 & cppMask_un_8_);
	BIT_VEC cppVar_87642 = PC + 1;
	cppVar_87642 = (cppVar_87642 & cppMask_un_16_);
	BIT_VEC cppVar_87643 = ROM.rd(cppVar_87642);
	BIT_VEC cppVar_87644 = (cppVar_87643 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87645 = (cppVar_87644 & cppMask_un_5_);
	BIT_VEC cppVar_87646 = cppVar_87645 + 32;
	cppVar_87646 = (cppVar_87646 & cppMask_un_8_);
	BIT_VEC cppVar_87647 = (cppVar_87637) ? cppVar_87641 : cppVar_87646;
	bool cppVar_87649 = (cppVar_87647 == 140);
	BIT_VEC cppVar_87650 = PC + 1;
	cppVar_87650 = (cppVar_87650 & cppMask_un_16_);
	BIT_VEC cppVar_87651 = ROM.rd(cppVar_87650);
	BIT_VEC cppVar_87652 = (cppVar_87651 >> 7) & cppMask_un_1_;
	bool cppVar_87653 = (cppVar_87652 == 1);
	BIT_VEC cppVar_87654 = PC + 1;
	cppVar_87654 = (cppVar_87654 & cppMask_un_16_);
	BIT_VEC cppVar_87655 = ROM.rd(cppVar_87654);
	BIT_VEC cppVar_87656 = (cppVar_87655 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87657 = (cppVar_87656 << 3) | 0;
	cppVar_87657 = (cppVar_87657 & cppMask_un_8_);
	BIT_VEC cppVar_87658 = PC + 1;
	cppVar_87658 = (cppVar_87658 & cppMask_un_16_);
	BIT_VEC cppVar_87659 = ROM.rd(cppVar_87658);
	BIT_VEC cppVar_87660 = (cppVar_87659 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87661 = (cppVar_87660 & cppMask_un_5_);
	BIT_VEC cppVar_87662 = cppVar_87661 + 32;
	cppVar_87662 = (cppVar_87662 & cppMask_un_8_);
	BIT_VEC cppVar_87663 = (cppVar_87653) ? cppVar_87657 : cppVar_87662;
	bool cppVar_87665 = (cppVar_87663 == 139);
	BIT_VEC cppVar_87666 = PC + 1;
	cppVar_87666 = (cppVar_87666 & cppMask_un_16_);
	BIT_VEC cppVar_87667 = ROM.rd(cppVar_87666);
	BIT_VEC cppVar_87668 = (cppVar_87667 >> 7) & cppMask_un_1_;
	bool cppVar_87669 = (cppVar_87668 == 1);
	BIT_VEC cppVar_87670 = PC + 1;
	cppVar_87670 = (cppVar_87670 & cppMask_un_16_);
	BIT_VEC cppVar_87671 = ROM.rd(cppVar_87670);
	BIT_VEC cppVar_87672 = (cppVar_87671 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87673 = (cppVar_87672 << 3) | 0;
	cppVar_87673 = (cppVar_87673 & cppMask_un_8_);
	BIT_VEC cppVar_87674 = PC + 1;
	cppVar_87674 = (cppVar_87674 & cppMask_un_16_);
	BIT_VEC cppVar_87675 = ROM.rd(cppVar_87674);
	BIT_VEC cppVar_87676 = (cppVar_87675 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87677 = (cppVar_87676 & cppMask_un_5_);
	BIT_VEC cppVar_87678 = cppVar_87677 + 32;
	cppVar_87678 = (cppVar_87678 & cppMask_un_8_);
	BIT_VEC cppVar_87679 = (cppVar_87669) ? cppVar_87673 : cppVar_87678;
	bool cppVar_87681 = (cppVar_87679 == 141);
	BIT_VEC cppVar_87682 = PC + 1;
	cppVar_87682 = (cppVar_87682 & cppMask_un_16_);
	BIT_VEC cppVar_87683 = ROM.rd(cppVar_87682);
	BIT_VEC cppVar_87684 = (cppVar_87683 >> 7) & cppMask_un_1_;
	bool cppVar_87685 = (cppVar_87684 == 1);
	BIT_VEC cppVar_87686 = PC + 1;
	cppVar_87686 = (cppVar_87686 & cppMask_un_16_);
	BIT_VEC cppVar_87687 = ROM.rd(cppVar_87686);
	BIT_VEC cppVar_87688 = (cppVar_87687 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87689 = (cppVar_87688 << 3) | 0;
	cppVar_87689 = (cppVar_87689 & cppMask_un_8_);
	BIT_VEC cppVar_87690 = PC + 1;
	cppVar_87690 = (cppVar_87690 & cppMask_un_16_);
	BIT_VEC cppVar_87691 = ROM.rd(cppVar_87690);
	BIT_VEC cppVar_87692 = (cppVar_87691 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87693 = (cppVar_87692 & cppMask_un_5_);
	BIT_VEC cppVar_87694 = cppVar_87693 + 32;
	cppVar_87694 = (cppVar_87694 & cppMask_un_8_);
	BIT_VEC cppVar_87695 = (cppVar_87685) ? cppVar_87689 : cppVar_87694;
	bool cppVar_87697 = (cppVar_87695 == 144);
	BIT_VEC cppVar_87698 = PC + 1;
	cppVar_87698 = (cppVar_87698 & cppMask_un_16_);
	BIT_VEC cppVar_87699 = ROM.rd(cppVar_87698);
	BIT_VEC cppVar_87700 = (cppVar_87699 >> 7) & cppMask_un_1_;
	bool cppVar_87701 = (cppVar_87700 == 1);
	BIT_VEC cppVar_87702 = PC + 1;
	cppVar_87702 = (cppVar_87702 & cppMask_un_16_);
	BIT_VEC cppVar_87703 = ROM.rd(cppVar_87702);
	BIT_VEC cppVar_87704 = (cppVar_87703 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87705 = (cppVar_87704 << 3) | 0;
	cppVar_87705 = (cppVar_87705 & cppMask_un_8_);
	BIT_VEC cppVar_87706 = PC + 1;
	cppVar_87706 = (cppVar_87706 & cppMask_un_16_);
	BIT_VEC cppVar_87707 = ROM.rd(cppVar_87706);
	BIT_VEC cppVar_87708 = (cppVar_87707 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87709 = (cppVar_87708 & cppMask_un_5_);
	BIT_VEC cppVar_87710 = cppVar_87709 + 32;
	cppVar_87710 = (cppVar_87710 & cppMask_un_8_);
	BIT_VEC cppVar_87711 = (cppVar_87701) ? cppVar_87705 : cppVar_87710;
	bool cppVar_87713 = (cppVar_87711 == 152);
	BIT_VEC cppVar_87714 = PC + 1;
	cppVar_87714 = (cppVar_87714 & cppMask_un_16_);
	BIT_VEC cppVar_87715 = ROM.rd(cppVar_87714);
	BIT_VEC cppVar_87716 = (cppVar_87715 >> 7) & cppMask_un_1_;
	bool cppVar_87717 = (cppVar_87716 == 1);
	BIT_VEC cppVar_87718 = PC + 1;
	cppVar_87718 = (cppVar_87718 & cppMask_un_16_);
	BIT_VEC cppVar_87719 = ROM.rd(cppVar_87718);
	BIT_VEC cppVar_87720 = (cppVar_87719 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87721 = (cppVar_87720 << 3) | 0;
	cppVar_87721 = (cppVar_87721 & cppMask_un_8_);
	BIT_VEC cppVar_87722 = PC + 1;
	cppVar_87722 = (cppVar_87722 & cppMask_un_16_);
	BIT_VEC cppVar_87723 = ROM.rd(cppVar_87722);
	BIT_VEC cppVar_87724 = (cppVar_87723 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87725 = (cppVar_87724 & cppMask_un_5_);
	BIT_VEC cppVar_87726 = cppVar_87725 + 32;
	cppVar_87726 = (cppVar_87726 & cppMask_un_8_);
	BIT_VEC cppVar_87727 = (cppVar_87717) ? cppVar_87721 : cppVar_87726;
	bool cppVar_87729 = (cppVar_87727 == 153);
	BIT_VEC cppVar_87730 = PC + 1;
	cppVar_87730 = (cppVar_87730 & cppMask_un_16_);
	BIT_VEC cppVar_87731 = ROM.rd(cppVar_87730);
	BIT_VEC cppVar_87732 = (cppVar_87731 >> 7) & cppMask_un_1_;
	bool cppVar_87733 = (cppVar_87732 == 1);
	BIT_VEC cppVar_87734 = PC + 1;
	cppVar_87734 = (cppVar_87734 & cppMask_un_16_);
	BIT_VEC cppVar_87735 = ROM.rd(cppVar_87734);
	BIT_VEC cppVar_87736 = (cppVar_87735 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87737 = (cppVar_87736 << 3) | 0;
	cppVar_87737 = (cppVar_87737 & cppMask_un_8_);
	BIT_VEC cppVar_87738 = PC + 1;
	cppVar_87738 = (cppVar_87738 & cppMask_un_16_);
	BIT_VEC cppVar_87739 = ROM.rd(cppVar_87738);
	BIT_VEC cppVar_87740 = (cppVar_87739 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87741 = (cppVar_87740 & cppMask_un_5_);
	BIT_VEC cppVar_87742 = cppVar_87741 + 32;
	cppVar_87742 = (cppVar_87742 & cppMask_un_8_);
	BIT_VEC cppVar_87743 = (cppVar_87733) ? cppVar_87737 : cppVar_87742;
	bool cppVar_87745 = (cppVar_87743 == 160);
	BIT_VEC cppVar_87746 = PC + 1;
	cppVar_87746 = (cppVar_87746 & cppMask_un_16_);
	BIT_VEC cppVar_87747 = ROM.rd(cppVar_87746);
	BIT_VEC cppVar_87748 = (cppVar_87747 >> 7) & cppMask_un_1_;
	bool cppVar_87749 = (cppVar_87748 == 1);
	BIT_VEC cppVar_87750 = PC + 1;
	cppVar_87750 = (cppVar_87750 & cppMask_un_16_);
	BIT_VEC cppVar_87751 = ROM.rd(cppVar_87750);
	BIT_VEC cppVar_87752 = (cppVar_87751 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87753 = (cppVar_87752 << 3) | 0;
	cppVar_87753 = (cppVar_87753 & cppMask_un_8_);
	BIT_VEC cppVar_87754 = PC + 1;
	cppVar_87754 = (cppVar_87754 & cppMask_un_16_);
	BIT_VEC cppVar_87755 = ROM.rd(cppVar_87754);
	BIT_VEC cppVar_87756 = (cppVar_87755 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87757 = (cppVar_87756 & cppMask_un_5_);
	BIT_VEC cppVar_87758 = cppVar_87757 + 32;
	cppVar_87758 = (cppVar_87758 & cppMask_un_8_);
	BIT_VEC cppVar_87759 = (cppVar_87749) ? cppVar_87753 : cppVar_87758;
	bool cppVar_87761 = (cppVar_87759 == 168);
	BIT_VEC cppVar_87762 = PC + 1;
	cppVar_87762 = (cppVar_87762 & cppMask_un_16_);
	BIT_VEC cppVar_87763 = ROM.rd(cppVar_87762);
	BIT_VEC cppVar_87764 = (cppVar_87763 >> 7) & cppMask_un_1_;
	bool cppVar_87765 = (cppVar_87764 == 1);
	BIT_VEC cppVar_87766 = PC + 1;
	cppVar_87766 = (cppVar_87766 & cppMask_un_16_);
	BIT_VEC cppVar_87767 = ROM.rd(cppVar_87766);
	BIT_VEC cppVar_87768 = (cppVar_87767 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87769 = (cppVar_87768 << 3) | 0;
	cppVar_87769 = (cppVar_87769 & cppMask_un_8_);
	BIT_VEC cppVar_87770 = PC + 1;
	cppVar_87770 = (cppVar_87770 & cppMask_un_16_);
	BIT_VEC cppVar_87771 = ROM.rd(cppVar_87770);
	BIT_VEC cppVar_87772 = (cppVar_87771 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87773 = (cppVar_87772 & cppMask_un_5_);
	BIT_VEC cppVar_87774 = cppVar_87773 + 32;
	cppVar_87774 = (cppVar_87774 & cppMask_un_8_);
	BIT_VEC cppVar_87775 = (cppVar_87765) ? cppVar_87769 : cppVar_87774;
	bool cppVar_87777 = (cppVar_87775 == 176);
	BIT_VEC cppVar_87778 = PC + 1;
	cppVar_87778 = (cppVar_87778 & cppMask_un_16_);
	BIT_VEC cppVar_87779 = ROM.rd(cppVar_87778);
	BIT_VEC cppVar_87780 = (cppVar_87779 >> 7) & cppMask_un_1_;
	bool cppVar_87781 = (cppVar_87780 == 1);
	BIT_VEC cppVar_87782 = PC + 1;
	cppVar_87782 = (cppVar_87782 & cppMask_un_16_);
	BIT_VEC cppVar_87783 = ROM.rd(cppVar_87782);
	BIT_VEC cppVar_87784 = (cppVar_87783 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87785 = (cppVar_87784 << 3) | 0;
	cppVar_87785 = (cppVar_87785 & cppMask_un_8_);
	BIT_VEC cppVar_87786 = PC + 1;
	cppVar_87786 = (cppVar_87786 & cppMask_un_16_);
	BIT_VEC cppVar_87787 = ROM.rd(cppVar_87786);
	BIT_VEC cppVar_87788 = (cppVar_87787 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87789 = (cppVar_87788 & cppMask_un_5_);
	BIT_VEC cppVar_87790 = cppVar_87789 + 32;
	cppVar_87790 = (cppVar_87790 & cppMask_un_8_);
	BIT_VEC cppVar_87791 = (cppVar_87781) ? cppVar_87785 : cppVar_87790;
	bool cppVar_87793 = (cppVar_87791 == 184);
	BIT_VEC cppVar_87794 = PC + 1;
	cppVar_87794 = (cppVar_87794 & cppMask_un_16_);
	BIT_VEC cppVar_87795 = ROM.rd(cppVar_87794);
	BIT_VEC cppVar_87796 = (cppVar_87795 >> 7) & cppMask_un_1_;
	bool cppVar_87797 = (cppVar_87796 == 1);
	BIT_VEC cppVar_87798 = PC + 1;
	cppVar_87798 = (cppVar_87798 & cppMask_un_16_);
	BIT_VEC cppVar_87799 = ROM.rd(cppVar_87798);
	BIT_VEC cppVar_87800 = (cppVar_87799 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87801 = (cppVar_87800 << 3) | 0;
	cppVar_87801 = (cppVar_87801 & cppMask_un_8_);
	BIT_VEC cppVar_87802 = PC + 1;
	cppVar_87802 = (cppVar_87802 & cppMask_un_16_);
	BIT_VEC cppVar_87803 = ROM.rd(cppVar_87802);
	BIT_VEC cppVar_87804 = (cppVar_87803 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87805 = (cppVar_87804 & cppMask_un_5_);
	BIT_VEC cppVar_87806 = cppVar_87805 + 32;
	cppVar_87806 = (cppVar_87806 & cppMask_un_8_);
	BIT_VEC cppVar_87807 = (cppVar_87797) ? cppVar_87801 : cppVar_87806;
	bool cppVar_87809 = (cppVar_87807 == 208);
	BIT_VEC cppVar_87810 = PC + 1;
	cppVar_87810 = (cppVar_87810 & cppMask_un_16_);
	BIT_VEC cppVar_87811 = ROM.rd(cppVar_87810);
	BIT_VEC cppVar_87812 = (cppVar_87811 >> 7) & cppMask_un_1_;
	bool cppVar_87813 = (cppVar_87812 == 1);
	BIT_VEC cppVar_87814 = PC + 1;
	cppVar_87814 = (cppVar_87814 & cppMask_un_16_);
	BIT_VEC cppVar_87815 = ROM.rd(cppVar_87814);
	BIT_VEC cppVar_87816 = (cppVar_87815 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87817 = (cppVar_87816 << 3) | 0;
	cppVar_87817 = (cppVar_87817 & cppMask_un_8_);
	BIT_VEC cppVar_87818 = PC + 1;
	cppVar_87818 = (cppVar_87818 & cppMask_un_16_);
	BIT_VEC cppVar_87819 = ROM.rd(cppVar_87818);
	BIT_VEC cppVar_87820 = (cppVar_87819 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87821 = (cppVar_87820 & cppMask_un_5_);
	BIT_VEC cppVar_87822 = cppVar_87821 + 32;
	cppVar_87822 = (cppVar_87822 & cppMask_un_8_);
	BIT_VEC cppVar_87823 = (cppVar_87813) ? cppVar_87817 : cppVar_87822;
	bool cppVar_87825 = (cppVar_87823 == 224);
	BIT_VEC cppVar_87826 = PC + 1;
	cppVar_87826 = (cppVar_87826 & cppMask_un_16_);
	BIT_VEC cppVar_87827 = ROM.rd(cppVar_87826);
	BIT_VEC cppVar_87828 = (cppVar_87827 >> 7) & cppMask_un_1_;
	bool cppVar_87829 = (cppVar_87828 == 1);
	BIT_VEC cppVar_87830 = PC + 1;
	cppVar_87830 = (cppVar_87830 & cppMask_un_16_);
	BIT_VEC cppVar_87831 = ROM.rd(cppVar_87830);
	BIT_VEC cppVar_87832 = (cppVar_87831 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87833 = (cppVar_87832 << 3) | 0;
	cppVar_87833 = (cppVar_87833 & cppMask_un_8_);
	BIT_VEC cppVar_87834 = PC + 1;
	cppVar_87834 = (cppVar_87834 & cppMask_un_16_);
	BIT_VEC cppVar_87835 = ROM.rd(cppVar_87834);
	BIT_VEC cppVar_87836 = (cppVar_87835 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87837 = (cppVar_87836 & cppMask_un_5_);
	BIT_VEC cppVar_87838 = cppVar_87837 + 32;
	cppVar_87838 = (cppVar_87838 & cppMask_un_8_);
	BIT_VEC cppVar_87839 = (cppVar_87829) ? cppVar_87833 : cppVar_87838;
	bool cppVar_87841 = (cppVar_87839 == 240);
	BIT_VEC cppVar_87843 = (cppVar_87841) ? B : 0;
	BIT_VEC cppVar_87844 = (cppVar_87825) ? ACC : cppVar_87843;
	BIT_VEC cppVar_87845 = (cppVar_87809) ? PSW : cppVar_87844;
	BIT_VEC cppVar_87846 = (cppVar_87793) ? IP : cppVar_87845;
	BIT_VEC cppVar_87847 = (cppVar_87777) ? P3 : cppVar_87846;
	BIT_VEC cppVar_87848 = (cppVar_87761) ? IE : cppVar_87847;
	BIT_VEC cppVar_87849 = (cppVar_87745) ? P2 : cppVar_87848;
	BIT_VEC cppVar_87850 = (cppVar_87729) ? SBUF : cppVar_87849;
	BIT_VEC cppVar_87851 = (cppVar_87713) ? SCON : cppVar_87850;
	BIT_VEC cppVar_87852 = (cppVar_87697) ? P1 : cppVar_87851;
	BIT_VEC cppVar_87853 = (cppVar_87681) ? TH1 : cppVar_87852;
	BIT_VEC cppVar_87854 = (cppVar_87665) ? TL1 : cppVar_87853;
	BIT_VEC cppVar_87855 = (cppVar_87649) ? TH0 : cppVar_87854;
	BIT_VEC cppVar_87856 = (cppVar_87633) ? TL0 : cppVar_87855;
	BIT_VEC cppVar_87857 = (cppVar_87617) ? TMOD : cppVar_87856;
	BIT_VEC cppVar_87858 = (cppVar_87601) ? TCON : cppVar_87857;
	BIT_VEC cppVar_87859 = (cppVar_87585) ? PCON : cppVar_87858;
	BIT_VEC cppVar_87860 = (cppVar_87569) ? DPH : cppVar_87859;
	BIT_VEC cppVar_87861 = (cppVar_87553) ? DPL : cppVar_87860;
	BIT_VEC cppVar_87862 = (cppVar_87537) ? SP : cppVar_87861;
	BIT_VEC cppVar_87863 = (cppVar_87521) ? P0 : cppVar_87862;
	BIT_VEC cppVar_87864 = (cppVar_87490) ? cppVar_87505 : cppVar_87863;
	BIT_VEC cppVar_87865 = cppVar_87473 & cppVar_87864;
	BIT_VEC cppVar_87866 = PC + 1;
	cppVar_87866 = (cppVar_87866 & cppMask_un_16_);
	BIT_VEC cppVar_87867 = ROM.rd(cppVar_87866);
	BIT_VEC cppVar_87868 = (cppVar_87867 >> 7) & cppMask_un_1_;
	bool cppVar_87870 = (cppVar_87868 == 1);
	BIT_VEC cppVar_87871 = PC + 1;
	cppVar_87871 = (cppVar_87871 & cppMask_un_16_);
	BIT_VEC cppVar_87872 = ROM.rd(cppVar_87871);
	BIT_VEC cppVar_87873 = (cppVar_87872 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87875 = (cppVar_87873 << 3) | 0;
	cppVar_87875 = (cppVar_87875 & cppMask_un_8_);
	BIT_VEC cppVar_87876 = PC + 1;
	cppVar_87876 = (cppVar_87876 & cppMask_un_16_);
	BIT_VEC cppVar_87877 = ROM.rd(cppVar_87876);
	BIT_VEC cppVar_87878 = (cppVar_87877 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87879 = (cppVar_87878 & cppMask_un_5_);
	BIT_VEC cppVar_87881 = cppVar_87879 + 32;
	cppVar_87881 = (cppVar_87881 & cppMask_un_8_);
	BIT_VEC cppVar_87882 = (cppVar_87870) ? cppVar_87875 : cppVar_87881;
	BIT_VEC cppVar_87883 = (cppVar_87882 >> 7) & cppMask_un_1_;
	bool cppVar_87885 = (cppVar_87883 == 0);
	BIT_VEC cppVar_87886 = PC + 1;
	cppVar_87886 = (cppVar_87886 & cppMask_un_16_);
	BIT_VEC cppVar_87887 = ROM.rd(cppVar_87886);
	BIT_VEC cppVar_87888 = (cppVar_87887 >> 7) & cppMask_un_1_;
	bool cppVar_87889 = (cppVar_87888 == 1);
	BIT_VEC cppVar_87890 = PC + 1;
	cppVar_87890 = (cppVar_87890 & cppMask_un_16_);
	BIT_VEC cppVar_87891 = ROM.rd(cppVar_87890);
	BIT_VEC cppVar_87892 = (cppVar_87891 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87893 = (cppVar_87892 << 3) | 0;
	cppVar_87893 = (cppVar_87893 & cppMask_un_8_);
	BIT_VEC cppVar_87894 = PC + 1;
	cppVar_87894 = (cppVar_87894 & cppMask_un_16_);
	BIT_VEC cppVar_87895 = ROM.rd(cppVar_87894);
	BIT_VEC cppVar_87896 = (cppVar_87895 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87897 = (cppVar_87896 & cppMask_un_5_);
	BIT_VEC cppVar_87898 = cppVar_87897 + 32;
	cppVar_87898 = (cppVar_87898 & cppMask_un_8_);
	BIT_VEC cppVar_87899 = (cppVar_87889) ? cppVar_87893 : cppVar_87898;
	BIT_VEC cppVar_87900 = IRAM.rd(cppVar_87899);
	BIT_VEC cppVar_87901 = PC + 1;
	cppVar_87901 = (cppVar_87901 & cppMask_un_16_);
	BIT_VEC cppVar_87902 = ROM.rd(cppVar_87901);
	BIT_VEC cppVar_87903 = (cppVar_87902 >> 7) & cppMask_un_1_;
	bool cppVar_87904 = (cppVar_87903 == 1);
	BIT_VEC cppVar_87905 = PC + 1;
	cppVar_87905 = (cppVar_87905 & cppMask_un_16_);
	BIT_VEC cppVar_87906 = ROM.rd(cppVar_87905);
	BIT_VEC cppVar_87907 = (cppVar_87906 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87908 = (cppVar_87907 << 3) | 0;
	cppVar_87908 = (cppVar_87908 & cppMask_un_8_);
	BIT_VEC cppVar_87909 = PC + 1;
	cppVar_87909 = (cppVar_87909 & cppMask_un_16_);
	BIT_VEC cppVar_87910 = ROM.rd(cppVar_87909);
	BIT_VEC cppVar_87911 = (cppVar_87910 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87912 = (cppVar_87911 & cppMask_un_5_);
	BIT_VEC cppVar_87913 = cppVar_87912 + 32;
	cppVar_87913 = (cppVar_87913 & cppMask_un_8_);
	BIT_VEC cppVar_87914 = (cppVar_87904) ? cppVar_87908 : cppVar_87913;
	bool cppVar_87916 = (cppVar_87914 == 128);
	BIT_VEC cppVar_87917 = PC + 1;
	cppVar_87917 = (cppVar_87917 & cppMask_un_16_);
	BIT_VEC cppVar_87918 = ROM.rd(cppVar_87917);
	BIT_VEC cppVar_87919 = (cppVar_87918 >> 7) & cppMask_un_1_;
	bool cppVar_87920 = (cppVar_87919 == 1);
	BIT_VEC cppVar_87921 = PC + 1;
	cppVar_87921 = (cppVar_87921 & cppMask_un_16_);
	BIT_VEC cppVar_87922 = ROM.rd(cppVar_87921);
	BIT_VEC cppVar_87923 = (cppVar_87922 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87924 = (cppVar_87923 << 3) | 0;
	cppVar_87924 = (cppVar_87924 & cppMask_un_8_);
	BIT_VEC cppVar_87925 = PC + 1;
	cppVar_87925 = (cppVar_87925 & cppMask_un_16_);
	BIT_VEC cppVar_87926 = ROM.rd(cppVar_87925);
	BIT_VEC cppVar_87927 = (cppVar_87926 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87928 = (cppVar_87927 & cppMask_un_5_);
	BIT_VEC cppVar_87929 = cppVar_87928 + 32;
	cppVar_87929 = (cppVar_87929 & cppMask_un_8_);
	BIT_VEC cppVar_87930 = (cppVar_87920) ? cppVar_87924 : cppVar_87929;
	bool cppVar_87932 = (cppVar_87930 == 129);
	BIT_VEC cppVar_87933 = PC + 1;
	cppVar_87933 = (cppVar_87933 & cppMask_un_16_);
	BIT_VEC cppVar_87934 = ROM.rd(cppVar_87933);
	BIT_VEC cppVar_87935 = (cppVar_87934 >> 7) & cppMask_un_1_;
	bool cppVar_87936 = (cppVar_87935 == 1);
	BIT_VEC cppVar_87937 = PC + 1;
	cppVar_87937 = (cppVar_87937 & cppMask_un_16_);
	BIT_VEC cppVar_87938 = ROM.rd(cppVar_87937);
	BIT_VEC cppVar_87939 = (cppVar_87938 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87940 = (cppVar_87939 << 3) | 0;
	cppVar_87940 = (cppVar_87940 & cppMask_un_8_);
	BIT_VEC cppVar_87941 = PC + 1;
	cppVar_87941 = (cppVar_87941 & cppMask_un_16_);
	BIT_VEC cppVar_87942 = ROM.rd(cppVar_87941);
	BIT_VEC cppVar_87943 = (cppVar_87942 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87944 = (cppVar_87943 & cppMask_un_5_);
	BIT_VEC cppVar_87945 = cppVar_87944 + 32;
	cppVar_87945 = (cppVar_87945 & cppMask_un_8_);
	BIT_VEC cppVar_87946 = (cppVar_87936) ? cppVar_87940 : cppVar_87945;
	bool cppVar_87948 = (cppVar_87946 == 130);
	BIT_VEC cppVar_87949 = PC + 1;
	cppVar_87949 = (cppVar_87949 & cppMask_un_16_);
	BIT_VEC cppVar_87950 = ROM.rd(cppVar_87949);
	BIT_VEC cppVar_87951 = (cppVar_87950 >> 7) & cppMask_un_1_;
	bool cppVar_87952 = (cppVar_87951 == 1);
	BIT_VEC cppVar_87953 = PC + 1;
	cppVar_87953 = (cppVar_87953 & cppMask_un_16_);
	BIT_VEC cppVar_87954 = ROM.rd(cppVar_87953);
	BIT_VEC cppVar_87955 = (cppVar_87954 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87956 = (cppVar_87955 << 3) | 0;
	cppVar_87956 = (cppVar_87956 & cppMask_un_8_);
	BIT_VEC cppVar_87957 = PC + 1;
	cppVar_87957 = (cppVar_87957 & cppMask_un_16_);
	BIT_VEC cppVar_87958 = ROM.rd(cppVar_87957);
	BIT_VEC cppVar_87959 = (cppVar_87958 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87960 = (cppVar_87959 & cppMask_un_5_);
	BIT_VEC cppVar_87961 = cppVar_87960 + 32;
	cppVar_87961 = (cppVar_87961 & cppMask_un_8_);
	BIT_VEC cppVar_87962 = (cppVar_87952) ? cppVar_87956 : cppVar_87961;
	bool cppVar_87964 = (cppVar_87962 == 131);
	BIT_VEC cppVar_87965 = PC + 1;
	cppVar_87965 = (cppVar_87965 & cppMask_un_16_);
	BIT_VEC cppVar_87966 = ROM.rd(cppVar_87965);
	BIT_VEC cppVar_87967 = (cppVar_87966 >> 7) & cppMask_un_1_;
	bool cppVar_87968 = (cppVar_87967 == 1);
	BIT_VEC cppVar_87969 = PC + 1;
	cppVar_87969 = (cppVar_87969 & cppMask_un_16_);
	BIT_VEC cppVar_87970 = ROM.rd(cppVar_87969);
	BIT_VEC cppVar_87971 = (cppVar_87970 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87972 = (cppVar_87971 << 3) | 0;
	cppVar_87972 = (cppVar_87972 & cppMask_un_8_);
	BIT_VEC cppVar_87973 = PC + 1;
	cppVar_87973 = (cppVar_87973 & cppMask_un_16_);
	BIT_VEC cppVar_87974 = ROM.rd(cppVar_87973);
	BIT_VEC cppVar_87975 = (cppVar_87974 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87976 = (cppVar_87975 & cppMask_un_5_);
	BIT_VEC cppVar_87977 = cppVar_87976 + 32;
	cppVar_87977 = (cppVar_87977 & cppMask_un_8_);
	BIT_VEC cppVar_87978 = (cppVar_87968) ? cppVar_87972 : cppVar_87977;
	bool cppVar_87980 = (cppVar_87978 == 135);
	BIT_VEC cppVar_87981 = PC + 1;
	cppVar_87981 = (cppVar_87981 & cppMask_un_16_);
	BIT_VEC cppVar_87982 = ROM.rd(cppVar_87981);
	BIT_VEC cppVar_87983 = (cppVar_87982 >> 7) & cppMask_un_1_;
	bool cppVar_87984 = (cppVar_87983 == 1);
	BIT_VEC cppVar_87985 = PC + 1;
	cppVar_87985 = (cppVar_87985 & cppMask_un_16_);
	BIT_VEC cppVar_87986 = ROM.rd(cppVar_87985);
	BIT_VEC cppVar_87987 = (cppVar_87986 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87988 = (cppVar_87987 << 3) | 0;
	cppVar_87988 = (cppVar_87988 & cppMask_un_8_);
	BIT_VEC cppVar_87989 = PC + 1;
	cppVar_87989 = (cppVar_87989 & cppMask_un_16_);
	BIT_VEC cppVar_87990 = ROM.rd(cppVar_87989);
	BIT_VEC cppVar_87991 = (cppVar_87990 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_87992 = (cppVar_87991 & cppMask_un_5_);
	BIT_VEC cppVar_87993 = cppVar_87992 + 32;
	cppVar_87993 = (cppVar_87993 & cppMask_un_8_);
	BIT_VEC cppVar_87994 = (cppVar_87984) ? cppVar_87988 : cppVar_87993;
	bool cppVar_87996 = (cppVar_87994 == 136);
	BIT_VEC cppVar_87997 = PC + 1;
	cppVar_87997 = (cppVar_87997 & cppMask_un_16_);
	BIT_VEC cppVar_87998 = ROM.rd(cppVar_87997);
	BIT_VEC cppVar_87999 = (cppVar_87998 >> 7) & cppMask_un_1_;
	bool cppVar_88000 = (cppVar_87999 == 1);
	BIT_VEC cppVar_88001 = PC + 1;
	cppVar_88001 = (cppVar_88001 & cppMask_un_16_);
	BIT_VEC cppVar_88002 = ROM.rd(cppVar_88001);
	BIT_VEC cppVar_88003 = (cppVar_88002 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88004 = (cppVar_88003 << 3) | 0;
	cppVar_88004 = (cppVar_88004 & cppMask_un_8_);
	BIT_VEC cppVar_88005 = PC + 1;
	cppVar_88005 = (cppVar_88005 & cppMask_un_16_);
	BIT_VEC cppVar_88006 = ROM.rd(cppVar_88005);
	BIT_VEC cppVar_88007 = (cppVar_88006 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88008 = (cppVar_88007 & cppMask_un_5_);
	BIT_VEC cppVar_88009 = cppVar_88008 + 32;
	cppVar_88009 = (cppVar_88009 & cppMask_un_8_);
	BIT_VEC cppVar_88010 = (cppVar_88000) ? cppVar_88004 : cppVar_88009;
	bool cppVar_88012 = (cppVar_88010 == 137);
	BIT_VEC cppVar_88013 = PC + 1;
	cppVar_88013 = (cppVar_88013 & cppMask_un_16_);
	BIT_VEC cppVar_88014 = ROM.rd(cppVar_88013);
	BIT_VEC cppVar_88015 = (cppVar_88014 >> 7) & cppMask_un_1_;
	bool cppVar_88016 = (cppVar_88015 == 1);
	BIT_VEC cppVar_88017 = PC + 1;
	cppVar_88017 = (cppVar_88017 & cppMask_un_16_);
	BIT_VEC cppVar_88018 = ROM.rd(cppVar_88017);
	BIT_VEC cppVar_88019 = (cppVar_88018 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88020 = (cppVar_88019 << 3) | 0;
	cppVar_88020 = (cppVar_88020 & cppMask_un_8_);
	BIT_VEC cppVar_88021 = PC + 1;
	cppVar_88021 = (cppVar_88021 & cppMask_un_16_);
	BIT_VEC cppVar_88022 = ROM.rd(cppVar_88021);
	BIT_VEC cppVar_88023 = (cppVar_88022 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88024 = (cppVar_88023 & cppMask_un_5_);
	BIT_VEC cppVar_88025 = cppVar_88024 + 32;
	cppVar_88025 = (cppVar_88025 & cppMask_un_8_);
	BIT_VEC cppVar_88026 = (cppVar_88016) ? cppVar_88020 : cppVar_88025;
	bool cppVar_88028 = (cppVar_88026 == 138);
	BIT_VEC cppVar_88029 = PC + 1;
	cppVar_88029 = (cppVar_88029 & cppMask_un_16_);
	BIT_VEC cppVar_88030 = ROM.rd(cppVar_88029);
	BIT_VEC cppVar_88031 = (cppVar_88030 >> 7) & cppMask_un_1_;
	bool cppVar_88032 = (cppVar_88031 == 1);
	BIT_VEC cppVar_88033 = PC + 1;
	cppVar_88033 = (cppVar_88033 & cppMask_un_16_);
	BIT_VEC cppVar_88034 = ROM.rd(cppVar_88033);
	BIT_VEC cppVar_88035 = (cppVar_88034 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88036 = (cppVar_88035 << 3) | 0;
	cppVar_88036 = (cppVar_88036 & cppMask_un_8_);
	BIT_VEC cppVar_88037 = PC + 1;
	cppVar_88037 = (cppVar_88037 & cppMask_un_16_);
	BIT_VEC cppVar_88038 = ROM.rd(cppVar_88037);
	BIT_VEC cppVar_88039 = (cppVar_88038 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88040 = (cppVar_88039 & cppMask_un_5_);
	BIT_VEC cppVar_88041 = cppVar_88040 + 32;
	cppVar_88041 = (cppVar_88041 & cppMask_un_8_);
	BIT_VEC cppVar_88042 = (cppVar_88032) ? cppVar_88036 : cppVar_88041;
	bool cppVar_88044 = (cppVar_88042 == 140);
	BIT_VEC cppVar_88045 = PC + 1;
	cppVar_88045 = (cppVar_88045 & cppMask_un_16_);
	BIT_VEC cppVar_88046 = ROM.rd(cppVar_88045);
	BIT_VEC cppVar_88047 = (cppVar_88046 >> 7) & cppMask_un_1_;
	bool cppVar_88048 = (cppVar_88047 == 1);
	BIT_VEC cppVar_88049 = PC + 1;
	cppVar_88049 = (cppVar_88049 & cppMask_un_16_);
	BIT_VEC cppVar_88050 = ROM.rd(cppVar_88049);
	BIT_VEC cppVar_88051 = (cppVar_88050 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88052 = (cppVar_88051 << 3) | 0;
	cppVar_88052 = (cppVar_88052 & cppMask_un_8_);
	BIT_VEC cppVar_88053 = PC + 1;
	cppVar_88053 = (cppVar_88053 & cppMask_un_16_);
	BIT_VEC cppVar_88054 = ROM.rd(cppVar_88053);
	BIT_VEC cppVar_88055 = (cppVar_88054 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88056 = (cppVar_88055 & cppMask_un_5_);
	BIT_VEC cppVar_88057 = cppVar_88056 + 32;
	cppVar_88057 = (cppVar_88057 & cppMask_un_8_);
	BIT_VEC cppVar_88058 = (cppVar_88048) ? cppVar_88052 : cppVar_88057;
	bool cppVar_88060 = (cppVar_88058 == 139);
	BIT_VEC cppVar_88061 = PC + 1;
	cppVar_88061 = (cppVar_88061 & cppMask_un_16_);
	BIT_VEC cppVar_88062 = ROM.rd(cppVar_88061);
	BIT_VEC cppVar_88063 = (cppVar_88062 >> 7) & cppMask_un_1_;
	bool cppVar_88064 = (cppVar_88063 == 1);
	BIT_VEC cppVar_88065 = PC + 1;
	cppVar_88065 = (cppVar_88065 & cppMask_un_16_);
	BIT_VEC cppVar_88066 = ROM.rd(cppVar_88065);
	BIT_VEC cppVar_88067 = (cppVar_88066 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88068 = (cppVar_88067 << 3) | 0;
	cppVar_88068 = (cppVar_88068 & cppMask_un_8_);
	BIT_VEC cppVar_88069 = PC + 1;
	cppVar_88069 = (cppVar_88069 & cppMask_un_16_);
	BIT_VEC cppVar_88070 = ROM.rd(cppVar_88069);
	BIT_VEC cppVar_88071 = (cppVar_88070 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88072 = (cppVar_88071 & cppMask_un_5_);
	BIT_VEC cppVar_88073 = cppVar_88072 + 32;
	cppVar_88073 = (cppVar_88073 & cppMask_un_8_);
	BIT_VEC cppVar_88074 = (cppVar_88064) ? cppVar_88068 : cppVar_88073;
	bool cppVar_88076 = (cppVar_88074 == 141);
	BIT_VEC cppVar_88077 = PC + 1;
	cppVar_88077 = (cppVar_88077 & cppMask_un_16_);
	BIT_VEC cppVar_88078 = ROM.rd(cppVar_88077);
	BIT_VEC cppVar_88079 = (cppVar_88078 >> 7) & cppMask_un_1_;
	bool cppVar_88080 = (cppVar_88079 == 1);
	BIT_VEC cppVar_88081 = PC + 1;
	cppVar_88081 = (cppVar_88081 & cppMask_un_16_);
	BIT_VEC cppVar_88082 = ROM.rd(cppVar_88081);
	BIT_VEC cppVar_88083 = (cppVar_88082 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88084 = (cppVar_88083 << 3) | 0;
	cppVar_88084 = (cppVar_88084 & cppMask_un_8_);
	BIT_VEC cppVar_88085 = PC + 1;
	cppVar_88085 = (cppVar_88085 & cppMask_un_16_);
	BIT_VEC cppVar_88086 = ROM.rd(cppVar_88085);
	BIT_VEC cppVar_88087 = (cppVar_88086 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88088 = (cppVar_88087 & cppMask_un_5_);
	BIT_VEC cppVar_88089 = cppVar_88088 + 32;
	cppVar_88089 = (cppVar_88089 & cppMask_un_8_);
	BIT_VEC cppVar_88090 = (cppVar_88080) ? cppVar_88084 : cppVar_88089;
	bool cppVar_88092 = (cppVar_88090 == 144);
	BIT_VEC cppVar_88093 = PC + 1;
	cppVar_88093 = (cppVar_88093 & cppMask_un_16_);
	BIT_VEC cppVar_88094 = ROM.rd(cppVar_88093);
	BIT_VEC cppVar_88095 = (cppVar_88094 >> 7) & cppMask_un_1_;
	bool cppVar_88096 = (cppVar_88095 == 1);
	BIT_VEC cppVar_88097 = PC + 1;
	cppVar_88097 = (cppVar_88097 & cppMask_un_16_);
	BIT_VEC cppVar_88098 = ROM.rd(cppVar_88097);
	BIT_VEC cppVar_88099 = (cppVar_88098 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88100 = (cppVar_88099 << 3) | 0;
	cppVar_88100 = (cppVar_88100 & cppMask_un_8_);
	BIT_VEC cppVar_88101 = PC + 1;
	cppVar_88101 = (cppVar_88101 & cppMask_un_16_);
	BIT_VEC cppVar_88102 = ROM.rd(cppVar_88101);
	BIT_VEC cppVar_88103 = (cppVar_88102 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88104 = (cppVar_88103 & cppMask_un_5_);
	BIT_VEC cppVar_88105 = cppVar_88104 + 32;
	cppVar_88105 = (cppVar_88105 & cppMask_un_8_);
	BIT_VEC cppVar_88106 = (cppVar_88096) ? cppVar_88100 : cppVar_88105;
	bool cppVar_88108 = (cppVar_88106 == 152);
	BIT_VEC cppVar_88109 = PC + 1;
	cppVar_88109 = (cppVar_88109 & cppMask_un_16_);
	BIT_VEC cppVar_88110 = ROM.rd(cppVar_88109);
	BIT_VEC cppVar_88111 = (cppVar_88110 >> 7) & cppMask_un_1_;
	bool cppVar_88112 = (cppVar_88111 == 1);
	BIT_VEC cppVar_88113 = PC + 1;
	cppVar_88113 = (cppVar_88113 & cppMask_un_16_);
	BIT_VEC cppVar_88114 = ROM.rd(cppVar_88113);
	BIT_VEC cppVar_88115 = (cppVar_88114 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88116 = (cppVar_88115 << 3) | 0;
	cppVar_88116 = (cppVar_88116 & cppMask_un_8_);
	BIT_VEC cppVar_88117 = PC + 1;
	cppVar_88117 = (cppVar_88117 & cppMask_un_16_);
	BIT_VEC cppVar_88118 = ROM.rd(cppVar_88117);
	BIT_VEC cppVar_88119 = (cppVar_88118 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88120 = (cppVar_88119 & cppMask_un_5_);
	BIT_VEC cppVar_88121 = cppVar_88120 + 32;
	cppVar_88121 = (cppVar_88121 & cppMask_un_8_);
	BIT_VEC cppVar_88122 = (cppVar_88112) ? cppVar_88116 : cppVar_88121;
	bool cppVar_88124 = (cppVar_88122 == 153);
	BIT_VEC cppVar_88125 = PC + 1;
	cppVar_88125 = (cppVar_88125 & cppMask_un_16_);
	BIT_VEC cppVar_88126 = ROM.rd(cppVar_88125);
	BIT_VEC cppVar_88127 = (cppVar_88126 >> 7) & cppMask_un_1_;
	bool cppVar_88128 = (cppVar_88127 == 1);
	BIT_VEC cppVar_88129 = PC + 1;
	cppVar_88129 = (cppVar_88129 & cppMask_un_16_);
	BIT_VEC cppVar_88130 = ROM.rd(cppVar_88129);
	BIT_VEC cppVar_88131 = (cppVar_88130 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88132 = (cppVar_88131 << 3) | 0;
	cppVar_88132 = (cppVar_88132 & cppMask_un_8_);
	BIT_VEC cppVar_88133 = PC + 1;
	cppVar_88133 = (cppVar_88133 & cppMask_un_16_);
	BIT_VEC cppVar_88134 = ROM.rd(cppVar_88133);
	BIT_VEC cppVar_88135 = (cppVar_88134 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88136 = (cppVar_88135 & cppMask_un_5_);
	BIT_VEC cppVar_88137 = cppVar_88136 + 32;
	cppVar_88137 = (cppVar_88137 & cppMask_un_8_);
	BIT_VEC cppVar_88138 = (cppVar_88128) ? cppVar_88132 : cppVar_88137;
	bool cppVar_88140 = (cppVar_88138 == 160);
	BIT_VEC cppVar_88141 = PC + 1;
	cppVar_88141 = (cppVar_88141 & cppMask_un_16_);
	BIT_VEC cppVar_88142 = ROM.rd(cppVar_88141);
	BIT_VEC cppVar_88143 = (cppVar_88142 >> 7) & cppMask_un_1_;
	bool cppVar_88144 = (cppVar_88143 == 1);
	BIT_VEC cppVar_88145 = PC + 1;
	cppVar_88145 = (cppVar_88145 & cppMask_un_16_);
	BIT_VEC cppVar_88146 = ROM.rd(cppVar_88145);
	BIT_VEC cppVar_88147 = (cppVar_88146 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88148 = (cppVar_88147 << 3) | 0;
	cppVar_88148 = (cppVar_88148 & cppMask_un_8_);
	BIT_VEC cppVar_88149 = PC + 1;
	cppVar_88149 = (cppVar_88149 & cppMask_un_16_);
	BIT_VEC cppVar_88150 = ROM.rd(cppVar_88149);
	BIT_VEC cppVar_88151 = (cppVar_88150 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88152 = (cppVar_88151 & cppMask_un_5_);
	BIT_VEC cppVar_88153 = cppVar_88152 + 32;
	cppVar_88153 = (cppVar_88153 & cppMask_un_8_);
	BIT_VEC cppVar_88154 = (cppVar_88144) ? cppVar_88148 : cppVar_88153;
	bool cppVar_88156 = (cppVar_88154 == 168);
	BIT_VEC cppVar_88157 = PC + 1;
	cppVar_88157 = (cppVar_88157 & cppMask_un_16_);
	BIT_VEC cppVar_88158 = ROM.rd(cppVar_88157);
	BIT_VEC cppVar_88159 = (cppVar_88158 >> 7) & cppMask_un_1_;
	bool cppVar_88160 = (cppVar_88159 == 1);
	BIT_VEC cppVar_88161 = PC + 1;
	cppVar_88161 = (cppVar_88161 & cppMask_un_16_);
	BIT_VEC cppVar_88162 = ROM.rd(cppVar_88161);
	BIT_VEC cppVar_88163 = (cppVar_88162 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88164 = (cppVar_88163 << 3) | 0;
	cppVar_88164 = (cppVar_88164 & cppMask_un_8_);
	BIT_VEC cppVar_88165 = PC + 1;
	cppVar_88165 = (cppVar_88165 & cppMask_un_16_);
	BIT_VEC cppVar_88166 = ROM.rd(cppVar_88165);
	BIT_VEC cppVar_88167 = (cppVar_88166 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88168 = (cppVar_88167 & cppMask_un_5_);
	BIT_VEC cppVar_88169 = cppVar_88168 + 32;
	cppVar_88169 = (cppVar_88169 & cppMask_un_8_);
	BIT_VEC cppVar_88170 = (cppVar_88160) ? cppVar_88164 : cppVar_88169;
	bool cppVar_88172 = (cppVar_88170 == 176);
	BIT_VEC cppVar_88173 = PC + 1;
	cppVar_88173 = (cppVar_88173 & cppMask_un_16_);
	BIT_VEC cppVar_88174 = ROM.rd(cppVar_88173);
	BIT_VEC cppVar_88175 = (cppVar_88174 >> 7) & cppMask_un_1_;
	bool cppVar_88176 = (cppVar_88175 == 1);
	BIT_VEC cppVar_88177 = PC + 1;
	cppVar_88177 = (cppVar_88177 & cppMask_un_16_);
	BIT_VEC cppVar_88178 = ROM.rd(cppVar_88177);
	BIT_VEC cppVar_88179 = (cppVar_88178 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88180 = (cppVar_88179 << 3) | 0;
	cppVar_88180 = (cppVar_88180 & cppMask_un_8_);
	BIT_VEC cppVar_88181 = PC + 1;
	cppVar_88181 = (cppVar_88181 & cppMask_un_16_);
	BIT_VEC cppVar_88182 = ROM.rd(cppVar_88181);
	BIT_VEC cppVar_88183 = (cppVar_88182 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88184 = (cppVar_88183 & cppMask_un_5_);
	BIT_VEC cppVar_88185 = cppVar_88184 + 32;
	cppVar_88185 = (cppVar_88185 & cppMask_un_8_);
	BIT_VEC cppVar_88186 = (cppVar_88176) ? cppVar_88180 : cppVar_88185;
	bool cppVar_88188 = (cppVar_88186 == 184);
	BIT_VEC cppVar_88189 = PC + 1;
	cppVar_88189 = (cppVar_88189 & cppMask_un_16_);
	BIT_VEC cppVar_88190 = ROM.rd(cppVar_88189);
	BIT_VEC cppVar_88191 = (cppVar_88190 >> 7) & cppMask_un_1_;
	bool cppVar_88192 = (cppVar_88191 == 1);
	BIT_VEC cppVar_88193 = PC + 1;
	cppVar_88193 = (cppVar_88193 & cppMask_un_16_);
	BIT_VEC cppVar_88194 = ROM.rd(cppVar_88193);
	BIT_VEC cppVar_88195 = (cppVar_88194 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88196 = (cppVar_88195 << 3) | 0;
	cppVar_88196 = (cppVar_88196 & cppMask_un_8_);
	BIT_VEC cppVar_88197 = PC + 1;
	cppVar_88197 = (cppVar_88197 & cppMask_un_16_);
	BIT_VEC cppVar_88198 = ROM.rd(cppVar_88197);
	BIT_VEC cppVar_88199 = (cppVar_88198 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88200 = (cppVar_88199 & cppMask_un_5_);
	BIT_VEC cppVar_88201 = cppVar_88200 + 32;
	cppVar_88201 = (cppVar_88201 & cppMask_un_8_);
	BIT_VEC cppVar_88202 = (cppVar_88192) ? cppVar_88196 : cppVar_88201;
	bool cppVar_88204 = (cppVar_88202 == 208);
	BIT_VEC cppVar_88205 = PC + 1;
	cppVar_88205 = (cppVar_88205 & cppMask_un_16_);
	BIT_VEC cppVar_88206 = ROM.rd(cppVar_88205);
	BIT_VEC cppVar_88207 = (cppVar_88206 >> 7) & cppMask_un_1_;
	bool cppVar_88208 = (cppVar_88207 == 1);
	BIT_VEC cppVar_88209 = PC + 1;
	cppVar_88209 = (cppVar_88209 & cppMask_un_16_);
	BIT_VEC cppVar_88210 = ROM.rd(cppVar_88209);
	BIT_VEC cppVar_88211 = (cppVar_88210 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88212 = (cppVar_88211 << 3) | 0;
	cppVar_88212 = (cppVar_88212 & cppMask_un_8_);
	BIT_VEC cppVar_88213 = PC + 1;
	cppVar_88213 = (cppVar_88213 & cppMask_un_16_);
	BIT_VEC cppVar_88214 = ROM.rd(cppVar_88213);
	BIT_VEC cppVar_88215 = (cppVar_88214 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88216 = (cppVar_88215 & cppMask_un_5_);
	BIT_VEC cppVar_88217 = cppVar_88216 + 32;
	cppVar_88217 = (cppVar_88217 & cppMask_un_8_);
	BIT_VEC cppVar_88218 = (cppVar_88208) ? cppVar_88212 : cppVar_88217;
	bool cppVar_88220 = (cppVar_88218 == 224);
	BIT_VEC cppVar_88221 = PC + 1;
	cppVar_88221 = (cppVar_88221 & cppMask_un_16_);
	BIT_VEC cppVar_88222 = ROM.rd(cppVar_88221);
	BIT_VEC cppVar_88223 = (cppVar_88222 >> 7) & cppMask_un_1_;
	bool cppVar_88224 = (cppVar_88223 == 1);
	BIT_VEC cppVar_88225 = PC + 1;
	cppVar_88225 = (cppVar_88225 & cppMask_un_16_);
	BIT_VEC cppVar_88226 = ROM.rd(cppVar_88225);
	BIT_VEC cppVar_88227 = (cppVar_88226 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88228 = (cppVar_88227 << 3) | 0;
	cppVar_88228 = (cppVar_88228 & cppMask_un_8_);
	BIT_VEC cppVar_88229 = PC + 1;
	cppVar_88229 = (cppVar_88229 & cppMask_un_16_);
	BIT_VEC cppVar_88230 = ROM.rd(cppVar_88229);
	BIT_VEC cppVar_88231 = (cppVar_88230 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_88232 = (cppVar_88231 & cppMask_un_5_);
	BIT_VEC cppVar_88233 = cppVar_88232 + 32;
	cppVar_88233 = (cppVar_88233 & cppMask_un_8_);
	BIT_VEC cppVar_88234 = (cppVar_88224) ? cppVar_88228 : cppVar_88233;
	bool cppVar_88236 = (cppVar_88234 == 240);
	BIT_VEC cppVar_88238 = (cppVar_88236) ? B : 0;
	BIT_VEC cppVar_88239 = (cppVar_88220) ? ACC : cppVar_88238;
	BIT_VEC cppVar_88240 = (cppVar_88204) ? PSW : cppVar_88239;
	BIT_VEC cppVar_88241 = (cppVar_88188) ? IP : cppVar_88240;
	BIT_VEC cppVar_88242 = (cppVar_88172) ? P3 : cppVar_88241;
	BIT_VEC cppVar_88243 = (cppVar_88156) ? IE : cppVar_88242;
	BIT_VEC cppVar_88244 = (cppVar_88140) ? P2 : cppVar_88243;
	BIT_VEC cppVar_88245 = (cppVar_88124) ? SBUF : cppVar_88244;
	BIT_VEC cppVar_88246 = (cppVar_88108) ? SCON : cppVar_88245;
	BIT_VEC cppVar_88247 = (cppVar_88092) ? P1 : cppVar_88246;
	BIT_VEC cppVar_88248 = (cppVar_88076) ? TH1 : cppVar_88247;
	BIT_VEC cppVar_88249 = (cppVar_88060) ? TL1 : cppVar_88248;
	BIT_VEC cppVar_88250 = (cppVar_88044) ? TH0 : cppVar_88249;
	BIT_VEC cppVar_88251 = (cppVar_88028) ? TL0 : cppVar_88250;
	BIT_VEC cppVar_88252 = (cppVar_88012) ? TMOD : cppVar_88251;
	BIT_VEC cppVar_88253 = (cppVar_87996) ? TCON : cppVar_88252;
	BIT_VEC cppVar_88254 = (cppVar_87980) ? PCON : cppVar_88253;
	BIT_VEC cppVar_88255 = (cppVar_87964) ? DPH : cppVar_88254;
	BIT_VEC cppVar_88256 = (cppVar_87948) ? DPL : cppVar_88255;
	BIT_VEC cppVar_88257 = (cppVar_87932) ? SP : cppVar_88256;
	BIT_VEC cppVar_88258 = (cppVar_87916) ? P0 : cppVar_88257;
	BIT_VEC cppVar_88259 = (cppVar_87885) ? cppVar_87900 : cppVar_88258;
	BIT_VEC cppVar_88260 = PC + 1;
	cppVar_88260 = (cppVar_88260 & cppMask_un_16_);
	BIT_VEC cppVar_88261 = ROM.rd(cppVar_88260);
	BIT_VEC cppVar_88262 = (cppVar_88261 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_88263 = (cppVar_88259 >> static_cast<unsigned>(cppVar_88262)) & 0x1;
	BIT_VEC cppVar_88264 = ~cppVar_88263;
	BIT_VEC cppVar_88265 = (cppVar_88264 & cppMask_un_1_);
	BIT_VEC cppVar_88266 = PC + 1;
	cppVar_88266 = (cppVar_88266 & cppMask_un_16_);
	BIT_VEC cppVar_88267 = ROM.rd(cppVar_88266);
	BIT_VEC cppVar_88268 = (cppVar_88267 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_88269 = (cppVar_88268 & cppMask_un_3_);
	BIT_VEC cppVar_88270 = cppVar_88265 << static_cast<unsigned>(cppVar_88269);
	cppVar_88270 = (cppVar_88270 & cppMask_un_8_);
	BIT_VEC cppVar_88271 = cppVar_87865 | cppVar_88270;
	type_mem cppVar_88272 = IRAM;
	cppVar_88272.wr(cppVar_87466, cppVar_88271);
	type_mem& cppVar_88273 = (cppVar_87452) ? cppVar_88272 : IRAM;
	BIT_VEC cppVar_88274 = ROM.rd(PC);
	bool cppVar_88276 = (cppVar_88274 == 175);
	BIT_VEC cppVar_88278 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_88280 = (cppVar_88278 << 3) | 7;
	cppVar_88280 = (cppVar_88280 & cppMask_un_5_);
	BIT_VEC cppVar_88281 = (0 << 5) | cppVar_88280;
	cppVar_88281 = (cppVar_88281 & cppMask_un_8_);
	BIT_VEC cppVar_88282 = (cppVar_88281 >> 7) & cppMask_un_1_;
	bool cppVar_88284 = (cppVar_88282 == 0);
	BIT_VEC cppVar_88285 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_88286 = (cppVar_88285 << 3) | 7;
	cppVar_88286 = (cppVar_88286 & cppMask_un_5_);
	BIT_VEC cppVar_88287 = (0 << 5) | cppVar_88286;
	cppVar_88287 = (cppVar_88287 & cppMask_un_8_);
	BIT_VEC cppVar_88289 = PC + 1;
	cppVar_88289 = (cppVar_88289 & cppMask_un_16_);
	BIT_VEC cppVar_88290 = ROM.rd(cppVar_88289);
	BIT_VEC cppVar_88291 = (cppVar_88290 >> 7) & cppMask_un_1_;
	bool cppVar_88293 = (cppVar_88291 == 0);
	BIT_VEC cppVar_88294 = PC + 1;
	cppVar_88294 = (cppVar_88294 & cppMask_un_16_);
	BIT_VEC cppVar_88295 = ROM.rd(cppVar_88294);
	BIT_VEC cppVar_88296 = IRAM.rd(cppVar_88295);
	BIT_VEC cppVar_88297 = PC + 1;
	cppVar_88297 = (cppVar_88297 & cppMask_un_16_);
	BIT_VEC cppVar_88298 = ROM.rd(cppVar_88297);
	bool cppVar_88300 = (cppVar_88298 == 128);
	BIT_VEC cppVar_88301 = PC + 1;
	cppVar_88301 = (cppVar_88301 & cppMask_un_16_);
	BIT_VEC cppVar_88302 = ROM.rd(cppVar_88301);
	bool cppVar_88304 = (cppVar_88302 == 129);
	BIT_VEC cppVar_88305 = PC + 1;
	cppVar_88305 = (cppVar_88305 & cppMask_un_16_);
	BIT_VEC cppVar_88306 = ROM.rd(cppVar_88305);
	bool cppVar_88308 = (cppVar_88306 == 130);
	BIT_VEC cppVar_88309 = PC + 1;
	cppVar_88309 = (cppVar_88309 & cppMask_un_16_);
	BIT_VEC cppVar_88310 = ROM.rd(cppVar_88309);
	bool cppVar_88312 = (cppVar_88310 == 131);
	BIT_VEC cppVar_88313 = PC + 1;
	cppVar_88313 = (cppVar_88313 & cppMask_un_16_);
	BIT_VEC cppVar_88314 = ROM.rd(cppVar_88313);
	bool cppVar_88316 = (cppVar_88314 == 135);
	BIT_VEC cppVar_88317 = PC + 1;
	cppVar_88317 = (cppVar_88317 & cppMask_un_16_);
	BIT_VEC cppVar_88318 = ROM.rd(cppVar_88317);
	bool cppVar_88320 = (cppVar_88318 == 136);
	BIT_VEC cppVar_88321 = PC + 1;
	cppVar_88321 = (cppVar_88321 & cppMask_un_16_);
	BIT_VEC cppVar_88322 = ROM.rd(cppVar_88321);
	bool cppVar_88324 = (cppVar_88322 == 137);
	BIT_VEC cppVar_88325 = PC + 1;
	cppVar_88325 = (cppVar_88325 & cppMask_un_16_);
	BIT_VEC cppVar_88326 = ROM.rd(cppVar_88325);
	bool cppVar_88328 = (cppVar_88326 == 138);
	BIT_VEC cppVar_88329 = PC + 1;
	cppVar_88329 = (cppVar_88329 & cppMask_un_16_);
	BIT_VEC cppVar_88330 = ROM.rd(cppVar_88329);
	bool cppVar_88332 = (cppVar_88330 == 140);
	BIT_VEC cppVar_88333 = PC + 1;
	cppVar_88333 = (cppVar_88333 & cppMask_un_16_);
	BIT_VEC cppVar_88334 = ROM.rd(cppVar_88333);
	bool cppVar_88336 = (cppVar_88334 == 139);
	BIT_VEC cppVar_88337 = PC + 1;
	cppVar_88337 = (cppVar_88337 & cppMask_un_16_);
	BIT_VEC cppVar_88338 = ROM.rd(cppVar_88337);
	bool cppVar_88340 = (cppVar_88338 == 141);
	BIT_VEC cppVar_88341 = PC + 1;
	cppVar_88341 = (cppVar_88341 & cppMask_un_16_);
	BIT_VEC cppVar_88342 = ROM.rd(cppVar_88341);
	bool cppVar_88344 = (cppVar_88342 == 144);
	BIT_VEC cppVar_88345 = PC + 1;
	cppVar_88345 = (cppVar_88345 & cppMask_un_16_);
	BIT_VEC cppVar_88346 = ROM.rd(cppVar_88345);
	bool cppVar_88348 = (cppVar_88346 == 152);
	BIT_VEC cppVar_88349 = PC + 1;
	cppVar_88349 = (cppVar_88349 & cppMask_un_16_);
	BIT_VEC cppVar_88350 = ROM.rd(cppVar_88349);
	bool cppVar_88352 = (cppVar_88350 == 153);
	BIT_VEC cppVar_88353 = PC + 1;
	cppVar_88353 = (cppVar_88353 & cppMask_un_16_);
	BIT_VEC cppVar_88354 = ROM.rd(cppVar_88353);
	bool cppVar_88356 = (cppVar_88354 == 160);
	BIT_VEC cppVar_88357 = PC + 1;
	cppVar_88357 = (cppVar_88357 & cppMask_un_16_);
	BIT_VEC cppVar_88358 = ROM.rd(cppVar_88357);
	bool cppVar_88360 = (cppVar_88358 == 168);
	BIT_VEC cppVar_88361 = PC + 1;
	cppVar_88361 = (cppVar_88361 & cppMask_un_16_);
	BIT_VEC cppVar_88362 = ROM.rd(cppVar_88361);
	bool cppVar_88364 = (cppVar_88362 == 176);
	BIT_VEC cppVar_88365 = PC + 1;
	cppVar_88365 = (cppVar_88365 & cppMask_un_16_);
	BIT_VEC cppVar_88366 = ROM.rd(cppVar_88365);
	bool cppVar_88368 = (cppVar_88366 == 184);
	BIT_VEC cppVar_88369 = PC + 1;
	cppVar_88369 = (cppVar_88369 & cppMask_un_16_);
	BIT_VEC cppVar_88370 = ROM.rd(cppVar_88369);
	bool cppVar_88372 = (cppVar_88370 == 208);
	BIT_VEC cppVar_88373 = PC + 1;
	cppVar_88373 = (cppVar_88373 & cppMask_un_16_);
	BIT_VEC cppVar_88374 = ROM.rd(cppVar_88373);
	bool cppVar_88376 = (cppVar_88374 == 224);
	BIT_VEC cppVar_88377 = PC + 1;
	cppVar_88377 = (cppVar_88377 & cppMask_un_16_);
	BIT_VEC cppVar_88378 = ROM.rd(cppVar_88377);
	bool cppVar_88380 = (cppVar_88378 == 240);
	BIT_VEC cppVar_88382 = (cppVar_88380) ? B : 0;
	BIT_VEC cppVar_88383 = (cppVar_88376) ? ACC : cppVar_88382;
	BIT_VEC cppVar_88384 = (cppVar_88372) ? PSW : cppVar_88383;
	BIT_VEC cppVar_88385 = (cppVar_88368) ? IP : cppVar_88384;
	BIT_VEC cppVar_88386 = (cppVar_88364) ? P3 : cppVar_88385;
	BIT_VEC cppVar_88387 = (cppVar_88360) ? IE : cppVar_88386;
	BIT_VEC cppVar_88388 = (cppVar_88356) ? P2 : cppVar_88387;
	BIT_VEC cppVar_88389 = (cppVar_88352) ? SBUF : cppVar_88388;
	BIT_VEC cppVar_88390 = (cppVar_88348) ? SCON : cppVar_88389;
	BIT_VEC cppVar_88391 = (cppVar_88344) ? P1 : cppVar_88390;
	BIT_VEC cppVar_88392 = (cppVar_88340) ? TH1 : cppVar_88391;
	BIT_VEC cppVar_88393 = (cppVar_88336) ? TL1 : cppVar_88392;
	BIT_VEC cppVar_88394 = (cppVar_88332) ? TH0 : cppVar_88393;
	BIT_VEC cppVar_88395 = (cppVar_88328) ? TL0 : cppVar_88394;
	BIT_VEC cppVar_88396 = (cppVar_88324) ? TMOD : cppVar_88395;
	BIT_VEC cppVar_88397 = (cppVar_88320) ? TCON : cppVar_88396;
	BIT_VEC cppVar_88398 = (cppVar_88316) ? PCON : cppVar_88397;
	BIT_VEC cppVar_88399 = (cppVar_88312) ? DPH : cppVar_88398;
	BIT_VEC cppVar_88400 = (cppVar_88308) ? DPL : cppVar_88399;
	BIT_VEC cppVar_88401 = (cppVar_88304) ? SP : cppVar_88400;
	BIT_VEC cppVar_88402 = (cppVar_88300) ? P0 : cppVar_88401;
	BIT_VEC cppVar_88403 = (cppVar_88293) ? cppVar_88296 : cppVar_88402;
	type_mem cppVar_88404 = IRAM;
	cppVar_88404.wr(cppVar_88287, cppVar_88403);
	type_mem& cppVar_88405 = (cppVar_88284) ? cppVar_88404 : IRAM;
	BIT_VEC cppVar_88406 = ROM.rd(PC);
	bool cppVar_88408 = (cppVar_88406 == 174);
	BIT_VEC cppVar_88410 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_88412 = (cppVar_88410 << 3) | 6;
	cppVar_88412 = (cppVar_88412 & cppMask_un_5_);
	BIT_VEC cppVar_88413 = (0 << 5) | cppVar_88412;
	cppVar_88413 = (cppVar_88413 & cppMask_un_8_);
	BIT_VEC cppVar_88414 = (cppVar_88413 >> 7) & cppMask_un_1_;
	bool cppVar_88416 = (cppVar_88414 == 0);
	BIT_VEC cppVar_88417 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_88418 = (cppVar_88417 << 3) | 6;
	cppVar_88418 = (cppVar_88418 & cppMask_un_5_);
	BIT_VEC cppVar_88419 = (0 << 5) | cppVar_88418;
	cppVar_88419 = (cppVar_88419 & cppMask_un_8_);
	BIT_VEC cppVar_88421 = PC + 1;
	cppVar_88421 = (cppVar_88421 & cppMask_un_16_);
	BIT_VEC cppVar_88422 = ROM.rd(cppVar_88421);
	BIT_VEC cppVar_88423 = (cppVar_88422 >> 7) & cppMask_un_1_;
	bool cppVar_88425 = (cppVar_88423 == 0);
	BIT_VEC cppVar_88426 = PC + 1;
	cppVar_88426 = (cppVar_88426 & cppMask_un_16_);
	BIT_VEC cppVar_88427 = ROM.rd(cppVar_88426);
	BIT_VEC cppVar_88428 = IRAM.rd(cppVar_88427);
	BIT_VEC cppVar_88429 = PC + 1;
	cppVar_88429 = (cppVar_88429 & cppMask_un_16_);
	BIT_VEC cppVar_88430 = ROM.rd(cppVar_88429);
	bool cppVar_88432 = (cppVar_88430 == 128);
	BIT_VEC cppVar_88433 = PC + 1;
	cppVar_88433 = (cppVar_88433 & cppMask_un_16_);
	BIT_VEC cppVar_88434 = ROM.rd(cppVar_88433);
	bool cppVar_88436 = (cppVar_88434 == 129);
	BIT_VEC cppVar_88437 = PC + 1;
	cppVar_88437 = (cppVar_88437 & cppMask_un_16_);
	BIT_VEC cppVar_88438 = ROM.rd(cppVar_88437);
	bool cppVar_88440 = (cppVar_88438 == 130);
	BIT_VEC cppVar_88441 = PC + 1;
	cppVar_88441 = (cppVar_88441 & cppMask_un_16_);
	BIT_VEC cppVar_88442 = ROM.rd(cppVar_88441);
	bool cppVar_88444 = (cppVar_88442 == 131);
	BIT_VEC cppVar_88445 = PC + 1;
	cppVar_88445 = (cppVar_88445 & cppMask_un_16_);
	BIT_VEC cppVar_88446 = ROM.rd(cppVar_88445);
	bool cppVar_88448 = (cppVar_88446 == 135);
	BIT_VEC cppVar_88449 = PC + 1;
	cppVar_88449 = (cppVar_88449 & cppMask_un_16_);
	BIT_VEC cppVar_88450 = ROM.rd(cppVar_88449);
	bool cppVar_88452 = (cppVar_88450 == 136);
	BIT_VEC cppVar_88453 = PC + 1;
	cppVar_88453 = (cppVar_88453 & cppMask_un_16_);
	BIT_VEC cppVar_88454 = ROM.rd(cppVar_88453);
	bool cppVar_88456 = (cppVar_88454 == 137);
	BIT_VEC cppVar_88457 = PC + 1;
	cppVar_88457 = (cppVar_88457 & cppMask_un_16_);
	BIT_VEC cppVar_88458 = ROM.rd(cppVar_88457);
	bool cppVar_88460 = (cppVar_88458 == 138);
	BIT_VEC cppVar_88461 = PC + 1;
	cppVar_88461 = (cppVar_88461 & cppMask_un_16_);
	BIT_VEC cppVar_88462 = ROM.rd(cppVar_88461);
	bool cppVar_88464 = (cppVar_88462 == 140);
	BIT_VEC cppVar_88465 = PC + 1;
	cppVar_88465 = (cppVar_88465 & cppMask_un_16_);
	BIT_VEC cppVar_88466 = ROM.rd(cppVar_88465);
	bool cppVar_88468 = (cppVar_88466 == 139);
	BIT_VEC cppVar_88469 = PC + 1;
	cppVar_88469 = (cppVar_88469 & cppMask_un_16_);
	BIT_VEC cppVar_88470 = ROM.rd(cppVar_88469);
	bool cppVar_88472 = (cppVar_88470 == 141);
	BIT_VEC cppVar_88473 = PC + 1;
	cppVar_88473 = (cppVar_88473 & cppMask_un_16_);
	BIT_VEC cppVar_88474 = ROM.rd(cppVar_88473);
	bool cppVar_88476 = (cppVar_88474 == 144);
	BIT_VEC cppVar_88477 = PC + 1;
	cppVar_88477 = (cppVar_88477 & cppMask_un_16_);
	BIT_VEC cppVar_88478 = ROM.rd(cppVar_88477);
	bool cppVar_88480 = (cppVar_88478 == 152);
	BIT_VEC cppVar_88481 = PC + 1;
	cppVar_88481 = (cppVar_88481 & cppMask_un_16_);
	BIT_VEC cppVar_88482 = ROM.rd(cppVar_88481);
	bool cppVar_88484 = (cppVar_88482 == 153);
	BIT_VEC cppVar_88485 = PC + 1;
	cppVar_88485 = (cppVar_88485 & cppMask_un_16_);
	BIT_VEC cppVar_88486 = ROM.rd(cppVar_88485);
	bool cppVar_88488 = (cppVar_88486 == 160);
	BIT_VEC cppVar_88489 = PC + 1;
	cppVar_88489 = (cppVar_88489 & cppMask_un_16_);
	BIT_VEC cppVar_88490 = ROM.rd(cppVar_88489);
	bool cppVar_88492 = (cppVar_88490 == 168);
	BIT_VEC cppVar_88493 = PC + 1;
	cppVar_88493 = (cppVar_88493 & cppMask_un_16_);
	BIT_VEC cppVar_88494 = ROM.rd(cppVar_88493);
	bool cppVar_88496 = (cppVar_88494 == 176);
	BIT_VEC cppVar_88497 = PC + 1;
	cppVar_88497 = (cppVar_88497 & cppMask_un_16_);
	BIT_VEC cppVar_88498 = ROM.rd(cppVar_88497);
	bool cppVar_88500 = (cppVar_88498 == 184);
	BIT_VEC cppVar_88501 = PC + 1;
	cppVar_88501 = (cppVar_88501 & cppMask_un_16_);
	BIT_VEC cppVar_88502 = ROM.rd(cppVar_88501);
	bool cppVar_88504 = (cppVar_88502 == 208);
	BIT_VEC cppVar_88505 = PC + 1;
	cppVar_88505 = (cppVar_88505 & cppMask_un_16_);
	BIT_VEC cppVar_88506 = ROM.rd(cppVar_88505);
	bool cppVar_88508 = (cppVar_88506 == 224);
	BIT_VEC cppVar_88509 = PC + 1;
	cppVar_88509 = (cppVar_88509 & cppMask_un_16_);
	BIT_VEC cppVar_88510 = ROM.rd(cppVar_88509);
	bool cppVar_88512 = (cppVar_88510 == 240);
	BIT_VEC cppVar_88514 = (cppVar_88512) ? B : 0;
	BIT_VEC cppVar_88515 = (cppVar_88508) ? ACC : cppVar_88514;
	BIT_VEC cppVar_88516 = (cppVar_88504) ? PSW : cppVar_88515;
	BIT_VEC cppVar_88517 = (cppVar_88500) ? IP : cppVar_88516;
	BIT_VEC cppVar_88518 = (cppVar_88496) ? P3 : cppVar_88517;
	BIT_VEC cppVar_88519 = (cppVar_88492) ? IE : cppVar_88518;
	BIT_VEC cppVar_88520 = (cppVar_88488) ? P2 : cppVar_88519;
	BIT_VEC cppVar_88521 = (cppVar_88484) ? SBUF : cppVar_88520;
	BIT_VEC cppVar_88522 = (cppVar_88480) ? SCON : cppVar_88521;
	BIT_VEC cppVar_88523 = (cppVar_88476) ? P1 : cppVar_88522;
	BIT_VEC cppVar_88524 = (cppVar_88472) ? TH1 : cppVar_88523;
	BIT_VEC cppVar_88525 = (cppVar_88468) ? TL1 : cppVar_88524;
	BIT_VEC cppVar_88526 = (cppVar_88464) ? TH0 : cppVar_88525;
	BIT_VEC cppVar_88527 = (cppVar_88460) ? TL0 : cppVar_88526;
	BIT_VEC cppVar_88528 = (cppVar_88456) ? TMOD : cppVar_88527;
	BIT_VEC cppVar_88529 = (cppVar_88452) ? TCON : cppVar_88528;
	BIT_VEC cppVar_88530 = (cppVar_88448) ? PCON : cppVar_88529;
	BIT_VEC cppVar_88531 = (cppVar_88444) ? DPH : cppVar_88530;
	BIT_VEC cppVar_88532 = (cppVar_88440) ? DPL : cppVar_88531;
	BIT_VEC cppVar_88533 = (cppVar_88436) ? SP : cppVar_88532;
	BIT_VEC cppVar_88534 = (cppVar_88432) ? P0 : cppVar_88533;
	BIT_VEC cppVar_88535 = (cppVar_88425) ? cppVar_88428 : cppVar_88534;
	type_mem cppVar_88536 = IRAM;
	cppVar_88536.wr(cppVar_88419, cppVar_88535);
	type_mem& cppVar_88537 = (cppVar_88416) ? cppVar_88536 : IRAM;
	BIT_VEC cppVar_88538 = ROM.rd(PC);
	bool cppVar_88540 = (cppVar_88538 == 173);
	BIT_VEC cppVar_88542 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_88544 = (cppVar_88542 << 3) | 5;
	cppVar_88544 = (cppVar_88544 & cppMask_un_5_);
	BIT_VEC cppVar_88545 = (0 << 5) | cppVar_88544;
	cppVar_88545 = (cppVar_88545 & cppMask_un_8_);
	BIT_VEC cppVar_88546 = (cppVar_88545 >> 7) & cppMask_un_1_;
	bool cppVar_88548 = (cppVar_88546 == 0);
	BIT_VEC cppVar_88549 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_88550 = (cppVar_88549 << 3) | 5;
	cppVar_88550 = (cppVar_88550 & cppMask_un_5_);
	BIT_VEC cppVar_88551 = (0 << 5) | cppVar_88550;
	cppVar_88551 = (cppVar_88551 & cppMask_un_8_);
	BIT_VEC cppVar_88553 = PC + 1;
	cppVar_88553 = (cppVar_88553 & cppMask_un_16_);
	BIT_VEC cppVar_88554 = ROM.rd(cppVar_88553);
	BIT_VEC cppVar_88555 = (cppVar_88554 >> 7) & cppMask_un_1_;
	bool cppVar_88557 = (cppVar_88555 == 0);
	BIT_VEC cppVar_88558 = PC + 1;
	cppVar_88558 = (cppVar_88558 & cppMask_un_16_);
	BIT_VEC cppVar_88559 = ROM.rd(cppVar_88558);
	BIT_VEC cppVar_88560 = IRAM.rd(cppVar_88559);
	BIT_VEC cppVar_88561 = PC + 1;
	cppVar_88561 = (cppVar_88561 & cppMask_un_16_);
	BIT_VEC cppVar_88562 = ROM.rd(cppVar_88561);
	bool cppVar_88564 = (cppVar_88562 == 128);
	BIT_VEC cppVar_88565 = PC + 1;
	cppVar_88565 = (cppVar_88565 & cppMask_un_16_);
	BIT_VEC cppVar_88566 = ROM.rd(cppVar_88565);
	bool cppVar_88568 = (cppVar_88566 == 129);
	BIT_VEC cppVar_88569 = PC + 1;
	cppVar_88569 = (cppVar_88569 & cppMask_un_16_);
	BIT_VEC cppVar_88570 = ROM.rd(cppVar_88569);
	bool cppVar_88572 = (cppVar_88570 == 130);
	BIT_VEC cppVar_88573 = PC + 1;
	cppVar_88573 = (cppVar_88573 & cppMask_un_16_);
	BIT_VEC cppVar_88574 = ROM.rd(cppVar_88573);
	bool cppVar_88576 = (cppVar_88574 == 131);
	BIT_VEC cppVar_88577 = PC + 1;
	cppVar_88577 = (cppVar_88577 & cppMask_un_16_);
	BIT_VEC cppVar_88578 = ROM.rd(cppVar_88577);
	bool cppVar_88580 = (cppVar_88578 == 135);
	BIT_VEC cppVar_88581 = PC + 1;
	cppVar_88581 = (cppVar_88581 & cppMask_un_16_);
	BIT_VEC cppVar_88582 = ROM.rd(cppVar_88581);
	bool cppVar_88584 = (cppVar_88582 == 136);
	BIT_VEC cppVar_88585 = PC + 1;
	cppVar_88585 = (cppVar_88585 & cppMask_un_16_);
	BIT_VEC cppVar_88586 = ROM.rd(cppVar_88585);
	bool cppVar_88588 = (cppVar_88586 == 137);
	BIT_VEC cppVar_88589 = PC + 1;
	cppVar_88589 = (cppVar_88589 & cppMask_un_16_);
	BIT_VEC cppVar_88590 = ROM.rd(cppVar_88589);
	bool cppVar_88592 = (cppVar_88590 == 138);
	BIT_VEC cppVar_88593 = PC + 1;
	cppVar_88593 = (cppVar_88593 & cppMask_un_16_);
	BIT_VEC cppVar_88594 = ROM.rd(cppVar_88593);
	bool cppVar_88596 = (cppVar_88594 == 140);
	BIT_VEC cppVar_88597 = PC + 1;
	cppVar_88597 = (cppVar_88597 & cppMask_un_16_);
	BIT_VEC cppVar_88598 = ROM.rd(cppVar_88597);
	bool cppVar_88600 = (cppVar_88598 == 139);
	BIT_VEC cppVar_88601 = PC + 1;
	cppVar_88601 = (cppVar_88601 & cppMask_un_16_);
	BIT_VEC cppVar_88602 = ROM.rd(cppVar_88601);
	bool cppVar_88604 = (cppVar_88602 == 141);
	BIT_VEC cppVar_88605 = PC + 1;
	cppVar_88605 = (cppVar_88605 & cppMask_un_16_);
	BIT_VEC cppVar_88606 = ROM.rd(cppVar_88605);
	bool cppVar_88608 = (cppVar_88606 == 144);
	BIT_VEC cppVar_88609 = PC + 1;
	cppVar_88609 = (cppVar_88609 & cppMask_un_16_);
	BIT_VEC cppVar_88610 = ROM.rd(cppVar_88609);
	bool cppVar_88612 = (cppVar_88610 == 152);
	BIT_VEC cppVar_88613 = PC + 1;
	cppVar_88613 = (cppVar_88613 & cppMask_un_16_);
	BIT_VEC cppVar_88614 = ROM.rd(cppVar_88613);
	bool cppVar_88616 = (cppVar_88614 == 153);
	BIT_VEC cppVar_88617 = PC + 1;
	cppVar_88617 = (cppVar_88617 & cppMask_un_16_);
	BIT_VEC cppVar_88618 = ROM.rd(cppVar_88617);
	bool cppVar_88620 = (cppVar_88618 == 160);
	BIT_VEC cppVar_88621 = PC + 1;
	cppVar_88621 = (cppVar_88621 & cppMask_un_16_);
	BIT_VEC cppVar_88622 = ROM.rd(cppVar_88621);
	bool cppVar_88624 = (cppVar_88622 == 168);
	BIT_VEC cppVar_88625 = PC + 1;
	cppVar_88625 = (cppVar_88625 & cppMask_un_16_);
	BIT_VEC cppVar_88626 = ROM.rd(cppVar_88625);
	bool cppVar_88628 = (cppVar_88626 == 176);
	BIT_VEC cppVar_88629 = PC + 1;
	cppVar_88629 = (cppVar_88629 & cppMask_un_16_);
	BIT_VEC cppVar_88630 = ROM.rd(cppVar_88629);
	bool cppVar_88632 = (cppVar_88630 == 184);
	BIT_VEC cppVar_88633 = PC + 1;
	cppVar_88633 = (cppVar_88633 & cppMask_un_16_);
	BIT_VEC cppVar_88634 = ROM.rd(cppVar_88633);
	bool cppVar_88636 = (cppVar_88634 == 208);
	BIT_VEC cppVar_88637 = PC + 1;
	cppVar_88637 = (cppVar_88637 & cppMask_un_16_);
	BIT_VEC cppVar_88638 = ROM.rd(cppVar_88637);
	bool cppVar_88640 = (cppVar_88638 == 224);
	BIT_VEC cppVar_88641 = PC + 1;
	cppVar_88641 = (cppVar_88641 & cppMask_un_16_);
	BIT_VEC cppVar_88642 = ROM.rd(cppVar_88641);
	bool cppVar_88644 = (cppVar_88642 == 240);
	BIT_VEC cppVar_88646 = (cppVar_88644) ? B : 0;
	BIT_VEC cppVar_88647 = (cppVar_88640) ? ACC : cppVar_88646;
	BIT_VEC cppVar_88648 = (cppVar_88636) ? PSW : cppVar_88647;
	BIT_VEC cppVar_88649 = (cppVar_88632) ? IP : cppVar_88648;
	BIT_VEC cppVar_88650 = (cppVar_88628) ? P3 : cppVar_88649;
	BIT_VEC cppVar_88651 = (cppVar_88624) ? IE : cppVar_88650;
	BIT_VEC cppVar_88652 = (cppVar_88620) ? P2 : cppVar_88651;
	BIT_VEC cppVar_88653 = (cppVar_88616) ? SBUF : cppVar_88652;
	BIT_VEC cppVar_88654 = (cppVar_88612) ? SCON : cppVar_88653;
	BIT_VEC cppVar_88655 = (cppVar_88608) ? P1 : cppVar_88654;
	BIT_VEC cppVar_88656 = (cppVar_88604) ? TH1 : cppVar_88655;
	BIT_VEC cppVar_88657 = (cppVar_88600) ? TL1 : cppVar_88656;
	BIT_VEC cppVar_88658 = (cppVar_88596) ? TH0 : cppVar_88657;
	BIT_VEC cppVar_88659 = (cppVar_88592) ? TL0 : cppVar_88658;
	BIT_VEC cppVar_88660 = (cppVar_88588) ? TMOD : cppVar_88659;
	BIT_VEC cppVar_88661 = (cppVar_88584) ? TCON : cppVar_88660;
	BIT_VEC cppVar_88662 = (cppVar_88580) ? PCON : cppVar_88661;
	BIT_VEC cppVar_88663 = (cppVar_88576) ? DPH : cppVar_88662;
	BIT_VEC cppVar_88664 = (cppVar_88572) ? DPL : cppVar_88663;
	BIT_VEC cppVar_88665 = (cppVar_88568) ? SP : cppVar_88664;
	BIT_VEC cppVar_88666 = (cppVar_88564) ? P0 : cppVar_88665;
	BIT_VEC cppVar_88667 = (cppVar_88557) ? cppVar_88560 : cppVar_88666;
	type_mem cppVar_88668 = IRAM;
	cppVar_88668.wr(cppVar_88551, cppVar_88667);
	type_mem& cppVar_88669 = (cppVar_88548) ? cppVar_88668 : IRAM;
	BIT_VEC cppVar_88670 = ROM.rd(PC);
	bool cppVar_88672 = (cppVar_88670 == 172);
	BIT_VEC cppVar_88674 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_88676 = (cppVar_88674 << 3) | 4;
	cppVar_88676 = (cppVar_88676 & cppMask_un_5_);
	BIT_VEC cppVar_88677 = (0 << 5) | cppVar_88676;
	cppVar_88677 = (cppVar_88677 & cppMask_un_8_);
	BIT_VEC cppVar_88678 = (cppVar_88677 >> 7) & cppMask_un_1_;
	bool cppVar_88680 = (cppVar_88678 == 0);
	BIT_VEC cppVar_88681 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_88682 = (cppVar_88681 << 3) | 4;
	cppVar_88682 = (cppVar_88682 & cppMask_un_5_);
	BIT_VEC cppVar_88683 = (0 << 5) | cppVar_88682;
	cppVar_88683 = (cppVar_88683 & cppMask_un_8_);
	BIT_VEC cppVar_88685 = PC + 1;
	cppVar_88685 = (cppVar_88685 & cppMask_un_16_);
	BIT_VEC cppVar_88686 = ROM.rd(cppVar_88685);
	BIT_VEC cppVar_88687 = (cppVar_88686 >> 7) & cppMask_un_1_;
	bool cppVar_88689 = (cppVar_88687 == 0);
	BIT_VEC cppVar_88690 = PC + 1;
	cppVar_88690 = (cppVar_88690 & cppMask_un_16_);
	BIT_VEC cppVar_88691 = ROM.rd(cppVar_88690);
	BIT_VEC cppVar_88692 = IRAM.rd(cppVar_88691);
	BIT_VEC cppVar_88693 = PC + 1;
	cppVar_88693 = (cppVar_88693 & cppMask_un_16_);
	BIT_VEC cppVar_88694 = ROM.rd(cppVar_88693);
	bool cppVar_88696 = (cppVar_88694 == 128);
	BIT_VEC cppVar_88697 = PC + 1;
	cppVar_88697 = (cppVar_88697 & cppMask_un_16_);
	BIT_VEC cppVar_88698 = ROM.rd(cppVar_88697);
	bool cppVar_88700 = (cppVar_88698 == 129);
	BIT_VEC cppVar_88701 = PC + 1;
	cppVar_88701 = (cppVar_88701 & cppMask_un_16_);
	BIT_VEC cppVar_88702 = ROM.rd(cppVar_88701);
	bool cppVar_88704 = (cppVar_88702 == 130);
	BIT_VEC cppVar_88705 = PC + 1;
	cppVar_88705 = (cppVar_88705 & cppMask_un_16_);
	BIT_VEC cppVar_88706 = ROM.rd(cppVar_88705);
	bool cppVar_88708 = (cppVar_88706 == 131);
	BIT_VEC cppVar_88709 = PC + 1;
	cppVar_88709 = (cppVar_88709 & cppMask_un_16_);
	BIT_VEC cppVar_88710 = ROM.rd(cppVar_88709);
	bool cppVar_88712 = (cppVar_88710 == 135);
	BIT_VEC cppVar_88713 = PC + 1;
	cppVar_88713 = (cppVar_88713 & cppMask_un_16_);
	BIT_VEC cppVar_88714 = ROM.rd(cppVar_88713);
	bool cppVar_88716 = (cppVar_88714 == 136);
	BIT_VEC cppVar_88717 = PC + 1;
	cppVar_88717 = (cppVar_88717 & cppMask_un_16_);
	BIT_VEC cppVar_88718 = ROM.rd(cppVar_88717);
	bool cppVar_88720 = (cppVar_88718 == 137);
	BIT_VEC cppVar_88721 = PC + 1;
	cppVar_88721 = (cppVar_88721 & cppMask_un_16_);
	BIT_VEC cppVar_88722 = ROM.rd(cppVar_88721);
	bool cppVar_88724 = (cppVar_88722 == 138);
	BIT_VEC cppVar_88725 = PC + 1;
	cppVar_88725 = (cppVar_88725 & cppMask_un_16_);
	BIT_VEC cppVar_88726 = ROM.rd(cppVar_88725);
	bool cppVar_88728 = (cppVar_88726 == 140);
	BIT_VEC cppVar_88729 = PC + 1;
	cppVar_88729 = (cppVar_88729 & cppMask_un_16_);
	BIT_VEC cppVar_88730 = ROM.rd(cppVar_88729);
	bool cppVar_88732 = (cppVar_88730 == 139);
	BIT_VEC cppVar_88733 = PC + 1;
	cppVar_88733 = (cppVar_88733 & cppMask_un_16_);
	BIT_VEC cppVar_88734 = ROM.rd(cppVar_88733);
	bool cppVar_88736 = (cppVar_88734 == 141);
	BIT_VEC cppVar_88737 = PC + 1;
	cppVar_88737 = (cppVar_88737 & cppMask_un_16_);
	BIT_VEC cppVar_88738 = ROM.rd(cppVar_88737);
	bool cppVar_88740 = (cppVar_88738 == 144);
	BIT_VEC cppVar_88741 = PC + 1;
	cppVar_88741 = (cppVar_88741 & cppMask_un_16_);
	BIT_VEC cppVar_88742 = ROM.rd(cppVar_88741);
	bool cppVar_88744 = (cppVar_88742 == 152);
	BIT_VEC cppVar_88745 = PC + 1;
	cppVar_88745 = (cppVar_88745 & cppMask_un_16_);
	BIT_VEC cppVar_88746 = ROM.rd(cppVar_88745);
	bool cppVar_88748 = (cppVar_88746 == 153);
	BIT_VEC cppVar_88749 = PC + 1;
	cppVar_88749 = (cppVar_88749 & cppMask_un_16_);
	BIT_VEC cppVar_88750 = ROM.rd(cppVar_88749);
	bool cppVar_88752 = (cppVar_88750 == 160);
	BIT_VEC cppVar_88753 = PC + 1;
	cppVar_88753 = (cppVar_88753 & cppMask_un_16_);
	BIT_VEC cppVar_88754 = ROM.rd(cppVar_88753);
	bool cppVar_88756 = (cppVar_88754 == 168);
	BIT_VEC cppVar_88757 = PC + 1;
	cppVar_88757 = (cppVar_88757 & cppMask_un_16_);
	BIT_VEC cppVar_88758 = ROM.rd(cppVar_88757);
	bool cppVar_88760 = (cppVar_88758 == 176);
	BIT_VEC cppVar_88761 = PC + 1;
	cppVar_88761 = (cppVar_88761 & cppMask_un_16_);
	BIT_VEC cppVar_88762 = ROM.rd(cppVar_88761);
	bool cppVar_88764 = (cppVar_88762 == 184);
	BIT_VEC cppVar_88765 = PC + 1;
	cppVar_88765 = (cppVar_88765 & cppMask_un_16_);
	BIT_VEC cppVar_88766 = ROM.rd(cppVar_88765);
	bool cppVar_88768 = (cppVar_88766 == 208);
	BIT_VEC cppVar_88769 = PC + 1;
	cppVar_88769 = (cppVar_88769 & cppMask_un_16_);
	BIT_VEC cppVar_88770 = ROM.rd(cppVar_88769);
	bool cppVar_88772 = (cppVar_88770 == 224);
	BIT_VEC cppVar_88773 = PC + 1;
	cppVar_88773 = (cppVar_88773 & cppMask_un_16_);
	BIT_VEC cppVar_88774 = ROM.rd(cppVar_88773);
	bool cppVar_88776 = (cppVar_88774 == 240);
	BIT_VEC cppVar_88778 = (cppVar_88776) ? B : 0;
	BIT_VEC cppVar_88779 = (cppVar_88772) ? ACC : cppVar_88778;
	BIT_VEC cppVar_88780 = (cppVar_88768) ? PSW : cppVar_88779;
	BIT_VEC cppVar_88781 = (cppVar_88764) ? IP : cppVar_88780;
	BIT_VEC cppVar_88782 = (cppVar_88760) ? P3 : cppVar_88781;
	BIT_VEC cppVar_88783 = (cppVar_88756) ? IE : cppVar_88782;
	BIT_VEC cppVar_88784 = (cppVar_88752) ? P2 : cppVar_88783;
	BIT_VEC cppVar_88785 = (cppVar_88748) ? SBUF : cppVar_88784;
	BIT_VEC cppVar_88786 = (cppVar_88744) ? SCON : cppVar_88785;
	BIT_VEC cppVar_88787 = (cppVar_88740) ? P1 : cppVar_88786;
	BIT_VEC cppVar_88788 = (cppVar_88736) ? TH1 : cppVar_88787;
	BIT_VEC cppVar_88789 = (cppVar_88732) ? TL1 : cppVar_88788;
	BIT_VEC cppVar_88790 = (cppVar_88728) ? TH0 : cppVar_88789;
	BIT_VEC cppVar_88791 = (cppVar_88724) ? TL0 : cppVar_88790;
	BIT_VEC cppVar_88792 = (cppVar_88720) ? TMOD : cppVar_88791;
	BIT_VEC cppVar_88793 = (cppVar_88716) ? TCON : cppVar_88792;
	BIT_VEC cppVar_88794 = (cppVar_88712) ? PCON : cppVar_88793;
	BIT_VEC cppVar_88795 = (cppVar_88708) ? DPH : cppVar_88794;
	BIT_VEC cppVar_88796 = (cppVar_88704) ? DPL : cppVar_88795;
	BIT_VEC cppVar_88797 = (cppVar_88700) ? SP : cppVar_88796;
	BIT_VEC cppVar_88798 = (cppVar_88696) ? P0 : cppVar_88797;
	BIT_VEC cppVar_88799 = (cppVar_88689) ? cppVar_88692 : cppVar_88798;
	type_mem cppVar_88800 = IRAM;
	cppVar_88800.wr(cppVar_88683, cppVar_88799);
	type_mem& cppVar_88801 = (cppVar_88680) ? cppVar_88800 : IRAM;
	BIT_VEC cppVar_88802 = ROM.rd(PC);
	bool cppVar_88804 = (cppVar_88802 == 171);
	BIT_VEC cppVar_88806 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_88808 = (cppVar_88806 << 3) | 3;
	cppVar_88808 = (cppVar_88808 & cppMask_un_5_);
	BIT_VEC cppVar_88809 = (0 << 5) | cppVar_88808;
	cppVar_88809 = (cppVar_88809 & cppMask_un_8_);
	BIT_VEC cppVar_88810 = (cppVar_88809 >> 7) & cppMask_un_1_;
	bool cppVar_88812 = (cppVar_88810 == 0);
	BIT_VEC cppVar_88813 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_88814 = (cppVar_88813 << 3) | 3;
	cppVar_88814 = (cppVar_88814 & cppMask_un_5_);
	BIT_VEC cppVar_88815 = (0 << 5) | cppVar_88814;
	cppVar_88815 = (cppVar_88815 & cppMask_un_8_);
	BIT_VEC cppVar_88817 = PC + 1;
	cppVar_88817 = (cppVar_88817 & cppMask_un_16_);
	BIT_VEC cppVar_88818 = ROM.rd(cppVar_88817);
	BIT_VEC cppVar_88819 = (cppVar_88818 >> 7) & cppMask_un_1_;
	bool cppVar_88821 = (cppVar_88819 == 0);
	BIT_VEC cppVar_88822 = PC + 1;
	cppVar_88822 = (cppVar_88822 & cppMask_un_16_);
	BIT_VEC cppVar_88823 = ROM.rd(cppVar_88822);
	BIT_VEC cppVar_88824 = IRAM.rd(cppVar_88823);
	BIT_VEC cppVar_88825 = PC + 1;
	cppVar_88825 = (cppVar_88825 & cppMask_un_16_);
	BIT_VEC cppVar_88826 = ROM.rd(cppVar_88825);
	bool cppVar_88828 = (cppVar_88826 == 128);
	BIT_VEC cppVar_88829 = PC + 1;
	cppVar_88829 = (cppVar_88829 & cppMask_un_16_);
	BIT_VEC cppVar_88830 = ROM.rd(cppVar_88829);
	bool cppVar_88832 = (cppVar_88830 == 129);
	BIT_VEC cppVar_88833 = PC + 1;
	cppVar_88833 = (cppVar_88833 & cppMask_un_16_);
	BIT_VEC cppVar_88834 = ROM.rd(cppVar_88833);
	bool cppVar_88836 = (cppVar_88834 == 130);
	BIT_VEC cppVar_88837 = PC + 1;
	cppVar_88837 = (cppVar_88837 & cppMask_un_16_);
	BIT_VEC cppVar_88838 = ROM.rd(cppVar_88837);
	bool cppVar_88840 = (cppVar_88838 == 131);
	BIT_VEC cppVar_88841 = PC + 1;
	cppVar_88841 = (cppVar_88841 & cppMask_un_16_);
	BIT_VEC cppVar_88842 = ROM.rd(cppVar_88841);
	bool cppVar_88844 = (cppVar_88842 == 135);
	BIT_VEC cppVar_88845 = PC + 1;
	cppVar_88845 = (cppVar_88845 & cppMask_un_16_);
	BIT_VEC cppVar_88846 = ROM.rd(cppVar_88845);
	bool cppVar_88848 = (cppVar_88846 == 136);
	BIT_VEC cppVar_88849 = PC + 1;
	cppVar_88849 = (cppVar_88849 & cppMask_un_16_);
	BIT_VEC cppVar_88850 = ROM.rd(cppVar_88849);
	bool cppVar_88852 = (cppVar_88850 == 137);
	BIT_VEC cppVar_88853 = PC + 1;
	cppVar_88853 = (cppVar_88853 & cppMask_un_16_);
	BIT_VEC cppVar_88854 = ROM.rd(cppVar_88853);
	bool cppVar_88856 = (cppVar_88854 == 138);
	BIT_VEC cppVar_88857 = PC + 1;
	cppVar_88857 = (cppVar_88857 & cppMask_un_16_);
	BIT_VEC cppVar_88858 = ROM.rd(cppVar_88857);
	bool cppVar_88860 = (cppVar_88858 == 140);
	BIT_VEC cppVar_88861 = PC + 1;
	cppVar_88861 = (cppVar_88861 & cppMask_un_16_);
	BIT_VEC cppVar_88862 = ROM.rd(cppVar_88861);
	bool cppVar_88864 = (cppVar_88862 == 139);
	BIT_VEC cppVar_88865 = PC + 1;
	cppVar_88865 = (cppVar_88865 & cppMask_un_16_);
	BIT_VEC cppVar_88866 = ROM.rd(cppVar_88865);
	bool cppVar_88868 = (cppVar_88866 == 141);
	BIT_VEC cppVar_88869 = PC + 1;
	cppVar_88869 = (cppVar_88869 & cppMask_un_16_);
	BIT_VEC cppVar_88870 = ROM.rd(cppVar_88869);
	bool cppVar_88872 = (cppVar_88870 == 144);
	BIT_VEC cppVar_88873 = PC + 1;
	cppVar_88873 = (cppVar_88873 & cppMask_un_16_);
	BIT_VEC cppVar_88874 = ROM.rd(cppVar_88873);
	bool cppVar_88876 = (cppVar_88874 == 152);
	BIT_VEC cppVar_88877 = PC + 1;
	cppVar_88877 = (cppVar_88877 & cppMask_un_16_);
	BIT_VEC cppVar_88878 = ROM.rd(cppVar_88877);
	bool cppVar_88880 = (cppVar_88878 == 153);
	BIT_VEC cppVar_88881 = PC + 1;
	cppVar_88881 = (cppVar_88881 & cppMask_un_16_);
	BIT_VEC cppVar_88882 = ROM.rd(cppVar_88881);
	bool cppVar_88884 = (cppVar_88882 == 160);
	BIT_VEC cppVar_88885 = PC + 1;
	cppVar_88885 = (cppVar_88885 & cppMask_un_16_);
	BIT_VEC cppVar_88886 = ROM.rd(cppVar_88885);
	bool cppVar_88888 = (cppVar_88886 == 168);
	BIT_VEC cppVar_88889 = PC + 1;
	cppVar_88889 = (cppVar_88889 & cppMask_un_16_);
	BIT_VEC cppVar_88890 = ROM.rd(cppVar_88889);
	bool cppVar_88892 = (cppVar_88890 == 176);
	BIT_VEC cppVar_88893 = PC + 1;
	cppVar_88893 = (cppVar_88893 & cppMask_un_16_);
	BIT_VEC cppVar_88894 = ROM.rd(cppVar_88893);
	bool cppVar_88896 = (cppVar_88894 == 184);
	BIT_VEC cppVar_88897 = PC + 1;
	cppVar_88897 = (cppVar_88897 & cppMask_un_16_);
	BIT_VEC cppVar_88898 = ROM.rd(cppVar_88897);
	bool cppVar_88900 = (cppVar_88898 == 208);
	BIT_VEC cppVar_88901 = PC + 1;
	cppVar_88901 = (cppVar_88901 & cppMask_un_16_);
	BIT_VEC cppVar_88902 = ROM.rd(cppVar_88901);
	bool cppVar_88904 = (cppVar_88902 == 224);
	BIT_VEC cppVar_88905 = PC + 1;
	cppVar_88905 = (cppVar_88905 & cppMask_un_16_);
	BIT_VEC cppVar_88906 = ROM.rd(cppVar_88905);
	bool cppVar_88908 = (cppVar_88906 == 240);
	BIT_VEC cppVar_88910 = (cppVar_88908) ? B : 0;
	BIT_VEC cppVar_88911 = (cppVar_88904) ? ACC : cppVar_88910;
	BIT_VEC cppVar_88912 = (cppVar_88900) ? PSW : cppVar_88911;
	BIT_VEC cppVar_88913 = (cppVar_88896) ? IP : cppVar_88912;
	BIT_VEC cppVar_88914 = (cppVar_88892) ? P3 : cppVar_88913;
	BIT_VEC cppVar_88915 = (cppVar_88888) ? IE : cppVar_88914;
	BIT_VEC cppVar_88916 = (cppVar_88884) ? P2 : cppVar_88915;
	BIT_VEC cppVar_88917 = (cppVar_88880) ? SBUF : cppVar_88916;
	BIT_VEC cppVar_88918 = (cppVar_88876) ? SCON : cppVar_88917;
	BIT_VEC cppVar_88919 = (cppVar_88872) ? P1 : cppVar_88918;
	BIT_VEC cppVar_88920 = (cppVar_88868) ? TH1 : cppVar_88919;
	BIT_VEC cppVar_88921 = (cppVar_88864) ? TL1 : cppVar_88920;
	BIT_VEC cppVar_88922 = (cppVar_88860) ? TH0 : cppVar_88921;
	BIT_VEC cppVar_88923 = (cppVar_88856) ? TL0 : cppVar_88922;
	BIT_VEC cppVar_88924 = (cppVar_88852) ? TMOD : cppVar_88923;
	BIT_VEC cppVar_88925 = (cppVar_88848) ? TCON : cppVar_88924;
	BIT_VEC cppVar_88926 = (cppVar_88844) ? PCON : cppVar_88925;
	BIT_VEC cppVar_88927 = (cppVar_88840) ? DPH : cppVar_88926;
	BIT_VEC cppVar_88928 = (cppVar_88836) ? DPL : cppVar_88927;
	BIT_VEC cppVar_88929 = (cppVar_88832) ? SP : cppVar_88928;
	BIT_VEC cppVar_88930 = (cppVar_88828) ? P0 : cppVar_88929;
	BIT_VEC cppVar_88931 = (cppVar_88821) ? cppVar_88824 : cppVar_88930;
	type_mem cppVar_88932 = IRAM;
	cppVar_88932.wr(cppVar_88815, cppVar_88931);
	type_mem& cppVar_88933 = (cppVar_88812) ? cppVar_88932 : IRAM;
	BIT_VEC cppVar_88934 = ROM.rd(PC);
	bool cppVar_88936 = (cppVar_88934 == 170);
	BIT_VEC cppVar_88938 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_88940 = (cppVar_88938 << 3) | 2;
	cppVar_88940 = (cppVar_88940 & cppMask_un_5_);
	BIT_VEC cppVar_88941 = (0 << 5) | cppVar_88940;
	cppVar_88941 = (cppVar_88941 & cppMask_un_8_);
	BIT_VEC cppVar_88942 = (cppVar_88941 >> 7) & cppMask_un_1_;
	bool cppVar_88944 = (cppVar_88942 == 0);
	BIT_VEC cppVar_88945 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_88946 = (cppVar_88945 << 3) | 2;
	cppVar_88946 = (cppVar_88946 & cppMask_un_5_);
	BIT_VEC cppVar_88947 = (0 << 5) | cppVar_88946;
	cppVar_88947 = (cppVar_88947 & cppMask_un_8_);
	BIT_VEC cppVar_88949 = PC + 1;
	cppVar_88949 = (cppVar_88949 & cppMask_un_16_);
	BIT_VEC cppVar_88950 = ROM.rd(cppVar_88949);
	BIT_VEC cppVar_88951 = (cppVar_88950 >> 7) & cppMask_un_1_;
	bool cppVar_88953 = (cppVar_88951 == 0);
	BIT_VEC cppVar_88954 = PC + 1;
	cppVar_88954 = (cppVar_88954 & cppMask_un_16_);
	BIT_VEC cppVar_88955 = ROM.rd(cppVar_88954);
	BIT_VEC cppVar_88956 = IRAM.rd(cppVar_88955);
	BIT_VEC cppVar_88957 = PC + 1;
	cppVar_88957 = (cppVar_88957 & cppMask_un_16_);
	BIT_VEC cppVar_88958 = ROM.rd(cppVar_88957);
	bool cppVar_88960 = (cppVar_88958 == 128);
	BIT_VEC cppVar_88961 = PC + 1;
	cppVar_88961 = (cppVar_88961 & cppMask_un_16_);
	BIT_VEC cppVar_88962 = ROM.rd(cppVar_88961);
	bool cppVar_88964 = (cppVar_88962 == 129);
	BIT_VEC cppVar_88965 = PC + 1;
	cppVar_88965 = (cppVar_88965 & cppMask_un_16_);
	BIT_VEC cppVar_88966 = ROM.rd(cppVar_88965);
	bool cppVar_88968 = (cppVar_88966 == 130);
	BIT_VEC cppVar_88969 = PC + 1;
	cppVar_88969 = (cppVar_88969 & cppMask_un_16_);
	BIT_VEC cppVar_88970 = ROM.rd(cppVar_88969);
	bool cppVar_88972 = (cppVar_88970 == 131);
	BIT_VEC cppVar_88973 = PC + 1;
	cppVar_88973 = (cppVar_88973 & cppMask_un_16_);
	BIT_VEC cppVar_88974 = ROM.rd(cppVar_88973);
	bool cppVar_88976 = (cppVar_88974 == 135);
	BIT_VEC cppVar_88977 = PC + 1;
	cppVar_88977 = (cppVar_88977 & cppMask_un_16_);
	BIT_VEC cppVar_88978 = ROM.rd(cppVar_88977);
	bool cppVar_88980 = (cppVar_88978 == 136);
	BIT_VEC cppVar_88981 = PC + 1;
	cppVar_88981 = (cppVar_88981 & cppMask_un_16_);
	BIT_VEC cppVar_88982 = ROM.rd(cppVar_88981);
	bool cppVar_88984 = (cppVar_88982 == 137);
	BIT_VEC cppVar_88985 = PC + 1;
	cppVar_88985 = (cppVar_88985 & cppMask_un_16_);
	BIT_VEC cppVar_88986 = ROM.rd(cppVar_88985);
	bool cppVar_88988 = (cppVar_88986 == 138);
	BIT_VEC cppVar_88989 = PC + 1;
	cppVar_88989 = (cppVar_88989 & cppMask_un_16_);
	BIT_VEC cppVar_88990 = ROM.rd(cppVar_88989);
	bool cppVar_88992 = (cppVar_88990 == 140);
	BIT_VEC cppVar_88993 = PC + 1;
	cppVar_88993 = (cppVar_88993 & cppMask_un_16_);
	BIT_VEC cppVar_88994 = ROM.rd(cppVar_88993);
	bool cppVar_88996 = (cppVar_88994 == 139);
	BIT_VEC cppVar_88997 = PC + 1;
	cppVar_88997 = (cppVar_88997 & cppMask_un_16_);
	BIT_VEC cppVar_88998 = ROM.rd(cppVar_88997);
	bool cppVar_89000 = (cppVar_88998 == 141);
	BIT_VEC cppVar_89001 = PC + 1;
	cppVar_89001 = (cppVar_89001 & cppMask_un_16_);
	BIT_VEC cppVar_89002 = ROM.rd(cppVar_89001);
	bool cppVar_89004 = (cppVar_89002 == 144);
	BIT_VEC cppVar_89005 = PC + 1;
	cppVar_89005 = (cppVar_89005 & cppMask_un_16_);
	BIT_VEC cppVar_89006 = ROM.rd(cppVar_89005);
	bool cppVar_89008 = (cppVar_89006 == 152);
	BIT_VEC cppVar_89009 = PC + 1;
	cppVar_89009 = (cppVar_89009 & cppMask_un_16_);
	BIT_VEC cppVar_89010 = ROM.rd(cppVar_89009);
	bool cppVar_89012 = (cppVar_89010 == 153);
	BIT_VEC cppVar_89013 = PC + 1;
	cppVar_89013 = (cppVar_89013 & cppMask_un_16_);
	BIT_VEC cppVar_89014 = ROM.rd(cppVar_89013);
	bool cppVar_89016 = (cppVar_89014 == 160);
	BIT_VEC cppVar_89017 = PC + 1;
	cppVar_89017 = (cppVar_89017 & cppMask_un_16_);
	BIT_VEC cppVar_89018 = ROM.rd(cppVar_89017);
	bool cppVar_89020 = (cppVar_89018 == 168);
	BIT_VEC cppVar_89021 = PC + 1;
	cppVar_89021 = (cppVar_89021 & cppMask_un_16_);
	BIT_VEC cppVar_89022 = ROM.rd(cppVar_89021);
	bool cppVar_89024 = (cppVar_89022 == 176);
	BIT_VEC cppVar_89025 = PC + 1;
	cppVar_89025 = (cppVar_89025 & cppMask_un_16_);
	BIT_VEC cppVar_89026 = ROM.rd(cppVar_89025);
	bool cppVar_89028 = (cppVar_89026 == 184);
	BIT_VEC cppVar_89029 = PC + 1;
	cppVar_89029 = (cppVar_89029 & cppMask_un_16_);
	BIT_VEC cppVar_89030 = ROM.rd(cppVar_89029);
	bool cppVar_89032 = (cppVar_89030 == 208);
	BIT_VEC cppVar_89033 = PC + 1;
	cppVar_89033 = (cppVar_89033 & cppMask_un_16_);
	BIT_VEC cppVar_89034 = ROM.rd(cppVar_89033);
	bool cppVar_89036 = (cppVar_89034 == 224);
	BIT_VEC cppVar_89037 = PC + 1;
	cppVar_89037 = (cppVar_89037 & cppMask_un_16_);
	BIT_VEC cppVar_89038 = ROM.rd(cppVar_89037);
	bool cppVar_89040 = (cppVar_89038 == 240);
	BIT_VEC cppVar_89042 = (cppVar_89040) ? B : 0;
	BIT_VEC cppVar_89043 = (cppVar_89036) ? ACC : cppVar_89042;
	BIT_VEC cppVar_89044 = (cppVar_89032) ? PSW : cppVar_89043;
	BIT_VEC cppVar_89045 = (cppVar_89028) ? IP : cppVar_89044;
	BIT_VEC cppVar_89046 = (cppVar_89024) ? P3 : cppVar_89045;
	BIT_VEC cppVar_89047 = (cppVar_89020) ? IE : cppVar_89046;
	BIT_VEC cppVar_89048 = (cppVar_89016) ? P2 : cppVar_89047;
	BIT_VEC cppVar_89049 = (cppVar_89012) ? SBUF : cppVar_89048;
	BIT_VEC cppVar_89050 = (cppVar_89008) ? SCON : cppVar_89049;
	BIT_VEC cppVar_89051 = (cppVar_89004) ? P1 : cppVar_89050;
	BIT_VEC cppVar_89052 = (cppVar_89000) ? TH1 : cppVar_89051;
	BIT_VEC cppVar_89053 = (cppVar_88996) ? TL1 : cppVar_89052;
	BIT_VEC cppVar_89054 = (cppVar_88992) ? TH0 : cppVar_89053;
	BIT_VEC cppVar_89055 = (cppVar_88988) ? TL0 : cppVar_89054;
	BIT_VEC cppVar_89056 = (cppVar_88984) ? TMOD : cppVar_89055;
	BIT_VEC cppVar_89057 = (cppVar_88980) ? TCON : cppVar_89056;
	BIT_VEC cppVar_89058 = (cppVar_88976) ? PCON : cppVar_89057;
	BIT_VEC cppVar_89059 = (cppVar_88972) ? DPH : cppVar_89058;
	BIT_VEC cppVar_89060 = (cppVar_88968) ? DPL : cppVar_89059;
	BIT_VEC cppVar_89061 = (cppVar_88964) ? SP : cppVar_89060;
	BIT_VEC cppVar_89062 = (cppVar_88960) ? P0 : cppVar_89061;
	BIT_VEC cppVar_89063 = (cppVar_88953) ? cppVar_88956 : cppVar_89062;
	type_mem cppVar_89064 = IRAM;
	cppVar_89064.wr(cppVar_88947, cppVar_89063);
	type_mem& cppVar_89065 = (cppVar_88944) ? cppVar_89064 : IRAM;
	BIT_VEC cppVar_89066 = ROM.rd(PC);
	bool cppVar_89068 = (cppVar_89066 == 169);
	BIT_VEC cppVar_89070 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_89072 = (cppVar_89070 << 3) | 1;
	cppVar_89072 = (cppVar_89072 & cppMask_un_5_);
	BIT_VEC cppVar_89073 = (0 << 5) | cppVar_89072;
	cppVar_89073 = (cppVar_89073 & cppMask_un_8_);
	BIT_VEC cppVar_89074 = (cppVar_89073 >> 7) & cppMask_un_1_;
	bool cppVar_89076 = (cppVar_89074 == 0);
	BIT_VEC cppVar_89077 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_89078 = (cppVar_89077 << 3) | 1;
	cppVar_89078 = (cppVar_89078 & cppMask_un_5_);
	BIT_VEC cppVar_89079 = (0 << 5) | cppVar_89078;
	cppVar_89079 = (cppVar_89079 & cppMask_un_8_);
	BIT_VEC cppVar_89081 = PC + 1;
	cppVar_89081 = (cppVar_89081 & cppMask_un_16_);
	BIT_VEC cppVar_89082 = ROM.rd(cppVar_89081);
	BIT_VEC cppVar_89083 = (cppVar_89082 >> 7) & cppMask_un_1_;
	bool cppVar_89085 = (cppVar_89083 == 0);
	BIT_VEC cppVar_89086 = PC + 1;
	cppVar_89086 = (cppVar_89086 & cppMask_un_16_);
	BIT_VEC cppVar_89087 = ROM.rd(cppVar_89086);
	BIT_VEC cppVar_89088 = IRAM.rd(cppVar_89087);
	BIT_VEC cppVar_89089 = PC + 1;
	cppVar_89089 = (cppVar_89089 & cppMask_un_16_);
	BIT_VEC cppVar_89090 = ROM.rd(cppVar_89089);
	bool cppVar_89092 = (cppVar_89090 == 128);
	BIT_VEC cppVar_89093 = PC + 1;
	cppVar_89093 = (cppVar_89093 & cppMask_un_16_);
	BIT_VEC cppVar_89094 = ROM.rd(cppVar_89093);
	bool cppVar_89096 = (cppVar_89094 == 129);
	BIT_VEC cppVar_89097 = PC + 1;
	cppVar_89097 = (cppVar_89097 & cppMask_un_16_);
	BIT_VEC cppVar_89098 = ROM.rd(cppVar_89097);
	bool cppVar_89100 = (cppVar_89098 == 130);
	BIT_VEC cppVar_89101 = PC + 1;
	cppVar_89101 = (cppVar_89101 & cppMask_un_16_);
	BIT_VEC cppVar_89102 = ROM.rd(cppVar_89101);
	bool cppVar_89104 = (cppVar_89102 == 131);
	BIT_VEC cppVar_89105 = PC + 1;
	cppVar_89105 = (cppVar_89105 & cppMask_un_16_);
	BIT_VEC cppVar_89106 = ROM.rd(cppVar_89105);
	bool cppVar_89108 = (cppVar_89106 == 135);
	BIT_VEC cppVar_89109 = PC + 1;
	cppVar_89109 = (cppVar_89109 & cppMask_un_16_);
	BIT_VEC cppVar_89110 = ROM.rd(cppVar_89109);
	bool cppVar_89112 = (cppVar_89110 == 136);
	BIT_VEC cppVar_89113 = PC + 1;
	cppVar_89113 = (cppVar_89113 & cppMask_un_16_);
	BIT_VEC cppVar_89114 = ROM.rd(cppVar_89113);
	bool cppVar_89116 = (cppVar_89114 == 137);
	BIT_VEC cppVar_89117 = PC + 1;
	cppVar_89117 = (cppVar_89117 & cppMask_un_16_);
	BIT_VEC cppVar_89118 = ROM.rd(cppVar_89117);
	bool cppVar_89120 = (cppVar_89118 == 138);
	BIT_VEC cppVar_89121 = PC + 1;
	cppVar_89121 = (cppVar_89121 & cppMask_un_16_);
	BIT_VEC cppVar_89122 = ROM.rd(cppVar_89121);
	bool cppVar_89124 = (cppVar_89122 == 140);
	BIT_VEC cppVar_89125 = PC + 1;
	cppVar_89125 = (cppVar_89125 & cppMask_un_16_);
	BIT_VEC cppVar_89126 = ROM.rd(cppVar_89125);
	bool cppVar_89128 = (cppVar_89126 == 139);
	BIT_VEC cppVar_89129 = PC + 1;
	cppVar_89129 = (cppVar_89129 & cppMask_un_16_);
	BIT_VEC cppVar_89130 = ROM.rd(cppVar_89129);
	bool cppVar_89132 = (cppVar_89130 == 141);
	BIT_VEC cppVar_89133 = PC + 1;
	cppVar_89133 = (cppVar_89133 & cppMask_un_16_);
	BIT_VEC cppVar_89134 = ROM.rd(cppVar_89133);
	bool cppVar_89136 = (cppVar_89134 == 144);
	BIT_VEC cppVar_89137 = PC + 1;
	cppVar_89137 = (cppVar_89137 & cppMask_un_16_);
	BIT_VEC cppVar_89138 = ROM.rd(cppVar_89137);
	bool cppVar_89140 = (cppVar_89138 == 152);
	BIT_VEC cppVar_89141 = PC + 1;
	cppVar_89141 = (cppVar_89141 & cppMask_un_16_);
	BIT_VEC cppVar_89142 = ROM.rd(cppVar_89141);
	bool cppVar_89144 = (cppVar_89142 == 153);
	BIT_VEC cppVar_89145 = PC + 1;
	cppVar_89145 = (cppVar_89145 & cppMask_un_16_);
	BIT_VEC cppVar_89146 = ROM.rd(cppVar_89145);
	bool cppVar_89148 = (cppVar_89146 == 160);
	BIT_VEC cppVar_89149 = PC + 1;
	cppVar_89149 = (cppVar_89149 & cppMask_un_16_);
	BIT_VEC cppVar_89150 = ROM.rd(cppVar_89149);
	bool cppVar_89152 = (cppVar_89150 == 168);
	BIT_VEC cppVar_89153 = PC + 1;
	cppVar_89153 = (cppVar_89153 & cppMask_un_16_);
	BIT_VEC cppVar_89154 = ROM.rd(cppVar_89153);
	bool cppVar_89156 = (cppVar_89154 == 176);
	BIT_VEC cppVar_89157 = PC + 1;
	cppVar_89157 = (cppVar_89157 & cppMask_un_16_);
	BIT_VEC cppVar_89158 = ROM.rd(cppVar_89157);
	bool cppVar_89160 = (cppVar_89158 == 184);
	BIT_VEC cppVar_89161 = PC + 1;
	cppVar_89161 = (cppVar_89161 & cppMask_un_16_);
	BIT_VEC cppVar_89162 = ROM.rd(cppVar_89161);
	bool cppVar_89164 = (cppVar_89162 == 208);
	BIT_VEC cppVar_89165 = PC + 1;
	cppVar_89165 = (cppVar_89165 & cppMask_un_16_);
	BIT_VEC cppVar_89166 = ROM.rd(cppVar_89165);
	bool cppVar_89168 = (cppVar_89166 == 224);
	BIT_VEC cppVar_89169 = PC + 1;
	cppVar_89169 = (cppVar_89169 & cppMask_un_16_);
	BIT_VEC cppVar_89170 = ROM.rd(cppVar_89169);
	bool cppVar_89172 = (cppVar_89170 == 240);
	BIT_VEC cppVar_89174 = (cppVar_89172) ? B : 0;
	BIT_VEC cppVar_89175 = (cppVar_89168) ? ACC : cppVar_89174;
	BIT_VEC cppVar_89176 = (cppVar_89164) ? PSW : cppVar_89175;
	BIT_VEC cppVar_89177 = (cppVar_89160) ? IP : cppVar_89176;
	BIT_VEC cppVar_89178 = (cppVar_89156) ? P3 : cppVar_89177;
	BIT_VEC cppVar_89179 = (cppVar_89152) ? IE : cppVar_89178;
	BIT_VEC cppVar_89180 = (cppVar_89148) ? P2 : cppVar_89179;
	BIT_VEC cppVar_89181 = (cppVar_89144) ? SBUF : cppVar_89180;
	BIT_VEC cppVar_89182 = (cppVar_89140) ? SCON : cppVar_89181;
	BIT_VEC cppVar_89183 = (cppVar_89136) ? P1 : cppVar_89182;
	BIT_VEC cppVar_89184 = (cppVar_89132) ? TH1 : cppVar_89183;
	BIT_VEC cppVar_89185 = (cppVar_89128) ? TL1 : cppVar_89184;
	BIT_VEC cppVar_89186 = (cppVar_89124) ? TH0 : cppVar_89185;
	BIT_VEC cppVar_89187 = (cppVar_89120) ? TL0 : cppVar_89186;
	BIT_VEC cppVar_89188 = (cppVar_89116) ? TMOD : cppVar_89187;
	BIT_VEC cppVar_89189 = (cppVar_89112) ? TCON : cppVar_89188;
	BIT_VEC cppVar_89190 = (cppVar_89108) ? PCON : cppVar_89189;
	BIT_VEC cppVar_89191 = (cppVar_89104) ? DPH : cppVar_89190;
	BIT_VEC cppVar_89192 = (cppVar_89100) ? DPL : cppVar_89191;
	BIT_VEC cppVar_89193 = (cppVar_89096) ? SP : cppVar_89192;
	BIT_VEC cppVar_89194 = (cppVar_89092) ? P0 : cppVar_89193;
	BIT_VEC cppVar_89195 = (cppVar_89085) ? cppVar_89088 : cppVar_89194;
	type_mem cppVar_89196 = IRAM;
	cppVar_89196.wr(cppVar_89079, cppVar_89195);
	type_mem& cppVar_89197 = (cppVar_89076) ? cppVar_89196 : IRAM;
	BIT_VEC cppVar_89198 = ROM.rd(PC);
	bool cppVar_89200 = (cppVar_89198 == 168);
	BIT_VEC cppVar_89202 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_89204 = (cppVar_89202 << 3) | 0;
	cppVar_89204 = (cppVar_89204 & cppMask_un_5_);
	BIT_VEC cppVar_89205 = (0 << 5) | cppVar_89204;
	cppVar_89205 = (cppVar_89205 & cppMask_un_8_);
	BIT_VEC cppVar_89206 = (cppVar_89205 >> 7) & cppMask_un_1_;
	bool cppVar_89208 = (cppVar_89206 == 0);
	BIT_VEC cppVar_89209 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_89210 = (cppVar_89209 << 3) | 0;
	cppVar_89210 = (cppVar_89210 & cppMask_un_5_);
	BIT_VEC cppVar_89211 = (0 << 5) | cppVar_89210;
	cppVar_89211 = (cppVar_89211 & cppMask_un_8_);
	BIT_VEC cppVar_89213 = PC + 1;
	cppVar_89213 = (cppVar_89213 & cppMask_un_16_);
	BIT_VEC cppVar_89214 = ROM.rd(cppVar_89213);
	BIT_VEC cppVar_89215 = (cppVar_89214 >> 7) & cppMask_un_1_;
	bool cppVar_89217 = (cppVar_89215 == 0);
	BIT_VEC cppVar_89218 = PC + 1;
	cppVar_89218 = (cppVar_89218 & cppMask_un_16_);
	BIT_VEC cppVar_89219 = ROM.rd(cppVar_89218);
	BIT_VEC cppVar_89220 = IRAM.rd(cppVar_89219);
	BIT_VEC cppVar_89221 = PC + 1;
	cppVar_89221 = (cppVar_89221 & cppMask_un_16_);
	BIT_VEC cppVar_89222 = ROM.rd(cppVar_89221);
	bool cppVar_89224 = (cppVar_89222 == 128);
	BIT_VEC cppVar_89225 = PC + 1;
	cppVar_89225 = (cppVar_89225 & cppMask_un_16_);
	BIT_VEC cppVar_89226 = ROM.rd(cppVar_89225);
	bool cppVar_89228 = (cppVar_89226 == 129);
	BIT_VEC cppVar_89229 = PC + 1;
	cppVar_89229 = (cppVar_89229 & cppMask_un_16_);
	BIT_VEC cppVar_89230 = ROM.rd(cppVar_89229);
	bool cppVar_89232 = (cppVar_89230 == 130);
	BIT_VEC cppVar_89233 = PC + 1;
	cppVar_89233 = (cppVar_89233 & cppMask_un_16_);
	BIT_VEC cppVar_89234 = ROM.rd(cppVar_89233);
	bool cppVar_89236 = (cppVar_89234 == 131);
	BIT_VEC cppVar_89237 = PC + 1;
	cppVar_89237 = (cppVar_89237 & cppMask_un_16_);
	BIT_VEC cppVar_89238 = ROM.rd(cppVar_89237);
	bool cppVar_89240 = (cppVar_89238 == 135);
	BIT_VEC cppVar_89241 = PC + 1;
	cppVar_89241 = (cppVar_89241 & cppMask_un_16_);
	BIT_VEC cppVar_89242 = ROM.rd(cppVar_89241);
	bool cppVar_89244 = (cppVar_89242 == 136);
	BIT_VEC cppVar_89245 = PC + 1;
	cppVar_89245 = (cppVar_89245 & cppMask_un_16_);
	BIT_VEC cppVar_89246 = ROM.rd(cppVar_89245);
	bool cppVar_89248 = (cppVar_89246 == 137);
	BIT_VEC cppVar_89249 = PC + 1;
	cppVar_89249 = (cppVar_89249 & cppMask_un_16_);
	BIT_VEC cppVar_89250 = ROM.rd(cppVar_89249);
	bool cppVar_89252 = (cppVar_89250 == 138);
	BIT_VEC cppVar_89253 = PC + 1;
	cppVar_89253 = (cppVar_89253 & cppMask_un_16_);
	BIT_VEC cppVar_89254 = ROM.rd(cppVar_89253);
	bool cppVar_89256 = (cppVar_89254 == 140);
	BIT_VEC cppVar_89257 = PC + 1;
	cppVar_89257 = (cppVar_89257 & cppMask_un_16_);
	BIT_VEC cppVar_89258 = ROM.rd(cppVar_89257);
	bool cppVar_89260 = (cppVar_89258 == 139);
	BIT_VEC cppVar_89261 = PC + 1;
	cppVar_89261 = (cppVar_89261 & cppMask_un_16_);
	BIT_VEC cppVar_89262 = ROM.rd(cppVar_89261);
	bool cppVar_89264 = (cppVar_89262 == 141);
	BIT_VEC cppVar_89265 = PC + 1;
	cppVar_89265 = (cppVar_89265 & cppMask_un_16_);
	BIT_VEC cppVar_89266 = ROM.rd(cppVar_89265);
	bool cppVar_89268 = (cppVar_89266 == 144);
	BIT_VEC cppVar_89269 = PC + 1;
	cppVar_89269 = (cppVar_89269 & cppMask_un_16_);
	BIT_VEC cppVar_89270 = ROM.rd(cppVar_89269);
	bool cppVar_89272 = (cppVar_89270 == 152);
	BIT_VEC cppVar_89273 = PC + 1;
	cppVar_89273 = (cppVar_89273 & cppMask_un_16_);
	BIT_VEC cppVar_89274 = ROM.rd(cppVar_89273);
	bool cppVar_89276 = (cppVar_89274 == 153);
	BIT_VEC cppVar_89277 = PC + 1;
	cppVar_89277 = (cppVar_89277 & cppMask_un_16_);
	BIT_VEC cppVar_89278 = ROM.rd(cppVar_89277);
	bool cppVar_89280 = (cppVar_89278 == 160);
	BIT_VEC cppVar_89281 = PC + 1;
	cppVar_89281 = (cppVar_89281 & cppMask_un_16_);
	BIT_VEC cppVar_89282 = ROM.rd(cppVar_89281);
	bool cppVar_89284 = (cppVar_89282 == 168);
	BIT_VEC cppVar_89285 = PC + 1;
	cppVar_89285 = (cppVar_89285 & cppMask_un_16_);
	BIT_VEC cppVar_89286 = ROM.rd(cppVar_89285);
	bool cppVar_89288 = (cppVar_89286 == 176);
	BIT_VEC cppVar_89289 = PC + 1;
	cppVar_89289 = (cppVar_89289 & cppMask_un_16_);
	BIT_VEC cppVar_89290 = ROM.rd(cppVar_89289);
	bool cppVar_89292 = (cppVar_89290 == 184);
	BIT_VEC cppVar_89293 = PC + 1;
	cppVar_89293 = (cppVar_89293 & cppMask_un_16_);
	BIT_VEC cppVar_89294 = ROM.rd(cppVar_89293);
	bool cppVar_89296 = (cppVar_89294 == 208);
	BIT_VEC cppVar_89297 = PC + 1;
	cppVar_89297 = (cppVar_89297 & cppMask_un_16_);
	BIT_VEC cppVar_89298 = ROM.rd(cppVar_89297);
	bool cppVar_89300 = (cppVar_89298 == 224);
	BIT_VEC cppVar_89301 = PC + 1;
	cppVar_89301 = (cppVar_89301 & cppMask_un_16_);
	BIT_VEC cppVar_89302 = ROM.rd(cppVar_89301);
	bool cppVar_89304 = (cppVar_89302 == 240);
	BIT_VEC cppVar_89306 = (cppVar_89304) ? B : 0;
	BIT_VEC cppVar_89307 = (cppVar_89300) ? ACC : cppVar_89306;
	BIT_VEC cppVar_89308 = (cppVar_89296) ? PSW : cppVar_89307;
	BIT_VEC cppVar_89309 = (cppVar_89292) ? IP : cppVar_89308;
	BIT_VEC cppVar_89310 = (cppVar_89288) ? P3 : cppVar_89309;
	BIT_VEC cppVar_89311 = (cppVar_89284) ? IE : cppVar_89310;
	BIT_VEC cppVar_89312 = (cppVar_89280) ? P2 : cppVar_89311;
	BIT_VEC cppVar_89313 = (cppVar_89276) ? SBUF : cppVar_89312;
	BIT_VEC cppVar_89314 = (cppVar_89272) ? SCON : cppVar_89313;
	BIT_VEC cppVar_89315 = (cppVar_89268) ? P1 : cppVar_89314;
	BIT_VEC cppVar_89316 = (cppVar_89264) ? TH1 : cppVar_89315;
	BIT_VEC cppVar_89317 = (cppVar_89260) ? TL1 : cppVar_89316;
	BIT_VEC cppVar_89318 = (cppVar_89256) ? TH0 : cppVar_89317;
	BIT_VEC cppVar_89319 = (cppVar_89252) ? TL0 : cppVar_89318;
	BIT_VEC cppVar_89320 = (cppVar_89248) ? TMOD : cppVar_89319;
	BIT_VEC cppVar_89321 = (cppVar_89244) ? TCON : cppVar_89320;
	BIT_VEC cppVar_89322 = (cppVar_89240) ? PCON : cppVar_89321;
	BIT_VEC cppVar_89323 = (cppVar_89236) ? DPH : cppVar_89322;
	BIT_VEC cppVar_89324 = (cppVar_89232) ? DPL : cppVar_89323;
	BIT_VEC cppVar_89325 = (cppVar_89228) ? SP : cppVar_89324;
	BIT_VEC cppVar_89326 = (cppVar_89224) ? P0 : cppVar_89325;
	BIT_VEC cppVar_89327 = (cppVar_89217) ? cppVar_89220 : cppVar_89326;
	type_mem cppVar_89328 = IRAM;
	cppVar_89328.wr(cppVar_89211, cppVar_89327);
	type_mem& cppVar_89329 = (cppVar_89208) ? cppVar_89328 : IRAM;
	BIT_VEC cppVar_89330 = ROM.rd(PC);
	bool cppVar_89332 = (cppVar_89330 == 167);
	BIT_VEC cppVar_89334 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_89336 = (cppVar_89334 << 3) | 1;
	cppVar_89336 = (cppVar_89336 & cppMask_un_5_);
	BIT_VEC cppVar_89337 = (0 << 5) | cppVar_89336;
	cppVar_89337 = (cppVar_89337 & cppMask_un_8_);
	BIT_VEC cppVar_89338 = IRAM.rd(cppVar_89337);
	BIT_VEC cppVar_89340 = PC + 1;
	cppVar_89340 = (cppVar_89340 & cppMask_un_16_);
	BIT_VEC cppVar_89341 = ROM.rd(cppVar_89340);
	BIT_VEC cppVar_89342 = (cppVar_89341 >> 7) & cppMask_un_1_;
	bool cppVar_89344 = (cppVar_89342 == 0);
	BIT_VEC cppVar_89345 = PC + 1;
	cppVar_89345 = (cppVar_89345 & cppMask_un_16_);
	BIT_VEC cppVar_89346 = ROM.rd(cppVar_89345);
	BIT_VEC cppVar_89347 = IRAM.rd(cppVar_89346);
	BIT_VEC cppVar_89348 = PC + 1;
	cppVar_89348 = (cppVar_89348 & cppMask_un_16_);
	BIT_VEC cppVar_89349 = ROM.rd(cppVar_89348);
	bool cppVar_89351 = (cppVar_89349 == 128);
	BIT_VEC cppVar_89352 = PC + 1;
	cppVar_89352 = (cppVar_89352 & cppMask_un_16_);
	BIT_VEC cppVar_89353 = ROM.rd(cppVar_89352);
	bool cppVar_89355 = (cppVar_89353 == 129);
	BIT_VEC cppVar_89356 = PC + 1;
	cppVar_89356 = (cppVar_89356 & cppMask_un_16_);
	BIT_VEC cppVar_89357 = ROM.rd(cppVar_89356);
	bool cppVar_89359 = (cppVar_89357 == 130);
	BIT_VEC cppVar_89360 = PC + 1;
	cppVar_89360 = (cppVar_89360 & cppMask_un_16_);
	BIT_VEC cppVar_89361 = ROM.rd(cppVar_89360);
	bool cppVar_89363 = (cppVar_89361 == 131);
	BIT_VEC cppVar_89364 = PC + 1;
	cppVar_89364 = (cppVar_89364 & cppMask_un_16_);
	BIT_VEC cppVar_89365 = ROM.rd(cppVar_89364);
	bool cppVar_89367 = (cppVar_89365 == 135);
	BIT_VEC cppVar_89368 = PC + 1;
	cppVar_89368 = (cppVar_89368 & cppMask_un_16_);
	BIT_VEC cppVar_89369 = ROM.rd(cppVar_89368);
	bool cppVar_89371 = (cppVar_89369 == 136);
	BIT_VEC cppVar_89372 = PC + 1;
	cppVar_89372 = (cppVar_89372 & cppMask_un_16_);
	BIT_VEC cppVar_89373 = ROM.rd(cppVar_89372);
	bool cppVar_89375 = (cppVar_89373 == 137);
	BIT_VEC cppVar_89376 = PC + 1;
	cppVar_89376 = (cppVar_89376 & cppMask_un_16_);
	BIT_VEC cppVar_89377 = ROM.rd(cppVar_89376);
	bool cppVar_89379 = (cppVar_89377 == 138);
	BIT_VEC cppVar_89380 = PC + 1;
	cppVar_89380 = (cppVar_89380 & cppMask_un_16_);
	BIT_VEC cppVar_89381 = ROM.rd(cppVar_89380);
	bool cppVar_89383 = (cppVar_89381 == 140);
	BIT_VEC cppVar_89384 = PC + 1;
	cppVar_89384 = (cppVar_89384 & cppMask_un_16_);
	BIT_VEC cppVar_89385 = ROM.rd(cppVar_89384);
	bool cppVar_89387 = (cppVar_89385 == 139);
	BIT_VEC cppVar_89388 = PC + 1;
	cppVar_89388 = (cppVar_89388 & cppMask_un_16_);
	BIT_VEC cppVar_89389 = ROM.rd(cppVar_89388);
	bool cppVar_89391 = (cppVar_89389 == 141);
	BIT_VEC cppVar_89392 = PC + 1;
	cppVar_89392 = (cppVar_89392 & cppMask_un_16_);
	BIT_VEC cppVar_89393 = ROM.rd(cppVar_89392);
	bool cppVar_89395 = (cppVar_89393 == 144);
	BIT_VEC cppVar_89396 = PC + 1;
	cppVar_89396 = (cppVar_89396 & cppMask_un_16_);
	BIT_VEC cppVar_89397 = ROM.rd(cppVar_89396);
	bool cppVar_89399 = (cppVar_89397 == 152);
	BIT_VEC cppVar_89400 = PC + 1;
	cppVar_89400 = (cppVar_89400 & cppMask_un_16_);
	BIT_VEC cppVar_89401 = ROM.rd(cppVar_89400);
	bool cppVar_89403 = (cppVar_89401 == 153);
	BIT_VEC cppVar_89404 = PC + 1;
	cppVar_89404 = (cppVar_89404 & cppMask_un_16_);
	BIT_VEC cppVar_89405 = ROM.rd(cppVar_89404);
	bool cppVar_89407 = (cppVar_89405 == 160);
	BIT_VEC cppVar_89408 = PC + 1;
	cppVar_89408 = (cppVar_89408 & cppMask_un_16_);
	BIT_VEC cppVar_89409 = ROM.rd(cppVar_89408);
	bool cppVar_89411 = (cppVar_89409 == 168);
	BIT_VEC cppVar_89412 = PC + 1;
	cppVar_89412 = (cppVar_89412 & cppMask_un_16_);
	BIT_VEC cppVar_89413 = ROM.rd(cppVar_89412);
	bool cppVar_89415 = (cppVar_89413 == 176);
	BIT_VEC cppVar_89416 = PC + 1;
	cppVar_89416 = (cppVar_89416 & cppMask_un_16_);
	BIT_VEC cppVar_89417 = ROM.rd(cppVar_89416);
	bool cppVar_89419 = (cppVar_89417 == 184);
	BIT_VEC cppVar_89420 = PC + 1;
	cppVar_89420 = (cppVar_89420 & cppMask_un_16_);
	BIT_VEC cppVar_89421 = ROM.rd(cppVar_89420);
	bool cppVar_89423 = (cppVar_89421 == 208);
	BIT_VEC cppVar_89424 = PC + 1;
	cppVar_89424 = (cppVar_89424 & cppMask_un_16_);
	BIT_VEC cppVar_89425 = ROM.rd(cppVar_89424);
	bool cppVar_89427 = (cppVar_89425 == 224);
	BIT_VEC cppVar_89428 = PC + 1;
	cppVar_89428 = (cppVar_89428 & cppMask_un_16_);
	BIT_VEC cppVar_89429 = ROM.rd(cppVar_89428);
	bool cppVar_89431 = (cppVar_89429 == 240);
	BIT_VEC cppVar_89433 = (cppVar_89431) ? B : 0;
	BIT_VEC cppVar_89434 = (cppVar_89427) ? ACC : cppVar_89433;
	BIT_VEC cppVar_89435 = (cppVar_89423) ? PSW : cppVar_89434;
	BIT_VEC cppVar_89436 = (cppVar_89419) ? IP : cppVar_89435;
	BIT_VEC cppVar_89437 = (cppVar_89415) ? P3 : cppVar_89436;
	BIT_VEC cppVar_89438 = (cppVar_89411) ? IE : cppVar_89437;
	BIT_VEC cppVar_89439 = (cppVar_89407) ? P2 : cppVar_89438;
	BIT_VEC cppVar_89440 = (cppVar_89403) ? SBUF : cppVar_89439;
	BIT_VEC cppVar_89441 = (cppVar_89399) ? SCON : cppVar_89440;
	BIT_VEC cppVar_89442 = (cppVar_89395) ? P1 : cppVar_89441;
	BIT_VEC cppVar_89443 = (cppVar_89391) ? TH1 : cppVar_89442;
	BIT_VEC cppVar_89444 = (cppVar_89387) ? TL1 : cppVar_89443;
	BIT_VEC cppVar_89445 = (cppVar_89383) ? TH0 : cppVar_89444;
	BIT_VEC cppVar_89446 = (cppVar_89379) ? TL0 : cppVar_89445;
	BIT_VEC cppVar_89447 = (cppVar_89375) ? TMOD : cppVar_89446;
	BIT_VEC cppVar_89448 = (cppVar_89371) ? TCON : cppVar_89447;
	BIT_VEC cppVar_89449 = (cppVar_89367) ? PCON : cppVar_89448;
	BIT_VEC cppVar_89450 = (cppVar_89363) ? DPH : cppVar_89449;
	BIT_VEC cppVar_89451 = (cppVar_89359) ? DPL : cppVar_89450;
	BIT_VEC cppVar_89452 = (cppVar_89355) ? SP : cppVar_89451;
	BIT_VEC cppVar_89453 = (cppVar_89351) ? P0 : cppVar_89452;
	BIT_VEC cppVar_89454 = (cppVar_89344) ? cppVar_89347 : cppVar_89453;
	type_mem cppVar_89455 = IRAM;
	cppVar_89455.wr(cppVar_89338, cppVar_89454);
	BIT_VEC cppVar_89456 = ROM.rd(PC);
	bool cppVar_89458 = (cppVar_89456 == 166);
	BIT_VEC cppVar_89460 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_89462 = (cppVar_89460 << 3) | 0;
	cppVar_89462 = (cppVar_89462 & cppMask_un_5_);
	BIT_VEC cppVar_89463 = (0 << 5) | cppVar_89462;
	cppVar_89463 = (cppVar_89463 & cppMask_un_8_);
	BIT_VEC cppVar_89464 = IRAM.rd(cppVar_89463);
	BIT_VEC cppVar_89466 = PC + 1;
	cppVar_89466 = (cppVar_89466 & cppMask_un_16_);
	BIT_VEC cppVar_89467 = ROM.rd(cppVar_89466);
	BIT_VEC cppVar_89468 = (cppVar_89467 >> 7) & cppMask_un_1_;
	bool cppVar_89470 = (cppVar_89468 == 0);
	BIT_VEC cppVar_89471 = PC + 1;
	cppVar_89471 = (cppVar_89471 & cppMask_un_16_);
	BIT_VEC cppVar_89472 = ROM.rd(cppVar_89471);
	BIT_VEC cppVar_89473 = IRAM.rd(cppVar_89472);
	BIT_VEC cppVar_89474 = PC + 1;
	cppVar_89474 = (cppVar_89474 & cppMask_un_16_);
	BIT_VEC cppVar_89475 = ROM.rd(cppVar_89474);
	bool cppVar_89477 = (cppVar_89475 == 128);
	BIT_VEC cppVar_89478 = PC + 1;
	cppVar_89478 = (cppVar_89478 & cppMask_un_16_);
	BIT_VEC cppVar_89479 = ROM.rd(cppVar_89478);
	bool cppVar_89481 = (cppVar_89479 == 129);
	BIT_VEC cppVar_89482 = PC + 1;
	cppVar_89482 = (cppVar_89482 & cppMask_un_16_);
	BIT_VEC cppVar_89483 = ROM.rd(cppVar_89482);
	bool cppVar_89485 = (cppVar_89483 == 130);
	BIT_VEC cppVar_89486 = PC + 1;
	cppVar_89486 = (cppVar_89486 & cppMask_un_16_);
	BIT_VEC cppVar_89487 = ROM.rd(cppVar_89486);
	bool cppVar_89489 = (cppVar_89487 == 131);
	BIT_VEC cppVar_89490 = PC + 1;
	cppVar_89490 = (cppVar_89490 & cppMask_un_16_);
	BIT_VEC cppVar_89491 = ROM.rd(cppVar_89490);
	bool cppVar_89493 = (cppVar_89491 == 135);
	BIT_VEC cppVar_89494 = PC + 1;
	cppVar_89494 = (cppVar_89494 & cppMask_un_16_);
	BIT_VEC cppVar_89495 = ROM.rd(cppVar_89494);
	bool cppVar_89497 = (cppVar_89495 == 136);
	BIT_VEC cppVar_89498 = PC + 1;
	cppVar_89498 = (cppVar_89498 & cppMask_un_16_);
	BIT_VEC cppVar_89499 = ROM.rd(cppVar_89498);
	bool cppVar_89501 = (cppVar_89499 == 137);
	BIT_VEC cppVar_89502 = PC + 1;
	cppVar_89502 = (cppVar_89502 & cppMask_un_16_);
	BIT_VEC cppVar_89503 = ROM.rd(cppVar_89502);
	bool cppVar_89505 = (cppVar_89503 == 138);
	BIT_VEC cppVar_89506 = PC + 1;
	cppVar_89506 = (cppVar_89506 & cppMask_un_16_);
	BIT_VEC cppVar_89507 = ROM.rd(cppVar_89506);
	bool cppVar_89509 = (cppVar_89507 == 140);
	BIT_VEC cppVar_89510 = PC + 1;
	cppVar_89510 = (cppVar_89510 & cppMask_un_16_);
	BIT_VEC cppVar_89511 = ROM.rd(cppVar_89510);
	bool cppVar_89513 = (cppVar_89511 == 139);
	BIT_VEC cppVar_89514 = PC + 1;
	cppVar_89514 = (cppVar_89514 & cppMask_un_16_);
	BIT_VEC cppVar_89515 = ROM.rd(cppVar_89514);
	bool cppVar_89517 = (cppVar_89515 == 141);
	BIT_VEC cppVar_89518 = PC + 1;
	cppVar_89518 = (cppVar_89518 & cppMask_un_16_);
	BIT_VEC cppVar_89519 = ROM.rd(cppVar_89518);
	bool cppVar_89521 = (cppVar_89519 == 144);
	BIT_VEC cppVar_89522 = PC + 1;
	cppVar_89522 = (cppVar_89522 & cppMask_un_16_);
	BIT_VEC cppVar_89523 = ROM.rd(cppVar_89522);
	bool cppVar_89525 = (cppVar_89523 == 152);
	BIT_VEC cppVar_89526 = PC + 1;
	cppVar_89526 = (cppVar_89526 & cppMask_un_16_);
	BIT_VEC cppVar_89527 = ROM.rd(cppVar_89526);
	bool cppVar_89529 = (cppVar_89527 == 153);
	BIT_VEC cppVar_89530 = PC + 1;
	cppVar_89530 = (cppVar_89530 & cppMask_un_16_);
	BIT_VEC cppVar_89531 = ROM.rd(cppVar_89530);
	bool cppVar_89533 = (cppVar_89531 == 160);
	BIT_VEC cppVar_89534 = PC + 1;
	cppVar_89534 = (cppVar_89534 & cppMask_un_16_);
	BIT_VEC cppVar_89535 = ROM.rd(cppVar_89534);
	bool cppVar_89537 = (cppVar_89535 == 168);
	BIT_VEC cppVar_89538 = PC + 1;
	cppVar_89538 = (cppVar_89538 & cppMask_un_16_);
	BIT_VEC cppVar_89539 = ROM.rd(cppVar_89538);
	bool cppVar_89541 = (cppVar_89539 == 176);
	BIT_VEC cppVar_89542 = PC + 1;
	cppVar_89542 = (cppVar_89542 & cppMask_un_16_);
	BIT_VEC cppVar_89543 = ROM.rd(cppVar_89542);
	bool cppVar_89545 = (cppVar_89543 == 184);
	BIT_VEC cppVar_89546 = PC + 1;
	cppVar_89546 = (cppVar_89546 & cppMask_un_16_);
	BIT_VEC cppVar_89547 = ROM.rd(cppVar_89546);
	bool cppVar_89549 = (cppVar_89547 == 208);
	BIT_VEC cppVar_89550 = PC + 1;
	cppVar_89550 = (cppVar_89550 & cppMask_un_16_);
	BIT_VEC cppVar_89551 = ROM.rd(cppVar_89550);
	bool cppVar_89553 = (cppVar_89551 == 224);
	BIT_VEC cppVar_89554 = PC + 1;
	cppVar_89554 = (cppVar_89554 & cppMask_un_16_);
	BIT_VEC cppVar_89555 = ROM.rd(cppVar_89554);
	bool cppVar_89557 = (cppVar_89555 == 240);
	BIT_VEC cppVar_89559 = (cppVar_89557) ? B : 0;
	BIT_VEC cppVar_89560 = (cppVar_89553) ? ACC : cppVar_89559;
	BIT_VEC cppVar_89561 = (cppVar_89549) ? PSW : cppVar_89560;
	BIT_VEC cppVar_89562 = (cppVar_89545) ? IP : cppVar_89561;
	BIT_VEC cppVar_89563 = (cppVar_89541) ? P3 : cppVar_89562;
	BIT_VEC cppVar_89564 = (cppVar_89537) ? IE : cppVar_89563;
	BIT_VEC cppVar_89565 = (cppVar_89533) ? P2 : cppVar_89564;
	BIT_VEC cppVar_89566 = (cppVar_89529) ? SBUF : cppVar_89565;
	BIT_VEC cppVar_89567 = (cppVar_89525) ? SCON : cppVar_89566;
	BIT_VEC cppVar_89568 = (cppVar_89521) ? P1 : cppVar_89567;
	BIT_VEC cppVar_89569 = (cppVar_89517) ? TH1 : cppVar_89568;
	BIT_VEC cppVar_89570 = (cppVar_89513) ? TL1 : cppVar_89569;
	BIT_VEC cppVar_89571 = (cppVar_89509) ? TH0 : cppVar_89570;
	BIT_VEC cppVar_89572 = (cppVar_89505) ? TL0 : cppVar_89571;
	BIT_VEC cppVar_89573 = (cppVar_89501) ? TMOD : cppVar_89572;
	BIT_VEC cppVar_89574 = (cppVar_89497) ? TCON : cppVar_89573;
	BIT_VEC cppVar_89575 = (cppVar_89493) ? PCON : cppVar_89574;
	BIT_VEC cppVar_89576 = (cppVar_89489) ? DPH : cppVar_89575;
	BIT_VEC cppVar_89577 = (cppVar_89485) ? DPL : cppVar_89576;
	BIT_VEC cppVar_89578 = (cppVar_89481) ? SP : cppVar_89577;
	BIT_VEC cppVar_89579 = (cppVar_89477) ? P0 : cppVar_89578;
	BIT_VEC cppVar_89580 = (cppVar_89470) ? cppVar_89473 : cppVar_89579;
	type_mem cppVar_89581 = IRAM;
	cppVar_89581.wr(cppVar_89464, cppVar_89580);
	BIT_VEC cppVar_89582 = ROM.rd(PC);
	bool cppVar_89584 = (cppVar_89582 == 146);
	BIT_VEC cppVar_89586 = PC + 1;
	cppVar_89586 = (cppVar_89586 & cppMask_un_16_);
	BIT_VEC cppVar_89587 = ROM.rd(cppVar_89586);
	BIT_VEC cppVar_89588 = (cppVar_89587 >> 7) & cppMask_un_1_;
	bool cppVar_89590 = (cppVar_89588 == 1);
	BIT_VEC cppVar_89591 = PC + 1;
	cppVar_89591 = (cppVar_89591 & cppMask_un_16_);
	BIT_VEC cppVar_89592 = ROM.rd(cppVar_89591);
	BIT_VEC cppVar_89593 = (cppVar_89592 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89595 = (cppVar_89593 << 3) | 0;
	cppVar_89595 = (cppVar_89595 & cppMask_un_8_);
	BIT_VEC cppVar_89596 = PC + 1;
	cppVar_89596 = (cppVar_89596 & cppMask_un_16_);
	BIT_VEC cppVar_89597 = ROM.rd(cppVar_89596);
	BIT_VEC cppVar_89598 = (cppVar_89597 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89599 = (cppVar_89598 & cppMask_un_5_);
	BIT_VEC cppVar_89601 = cppVar_89599 + 32;
	cppVar_89601 = (cppVar_89601 & cppMask_un_8_);
	BIT_VEC cppVar_89602 = (cppVar_89590) ? cppVar_89595 : cppVar_89601;
	BIT_VEC cppVar_89603 = (cppVar_89602 >> 7) & cppMask_un_1_;
	bool cppVar_89605 = (cppVar_89603 == 0);
	BIT_VEC cppVar_89606 = PC + 1;
	cppVar_89606 = (cppVar_89606 & cppMask_un_16_);
	BIT_VEC cppVar_89607 = ROM.rd(cppVar_89606);
	BIT_VEC cppVar_89608 = (cppVar_89607 >> 7) & cppMask_un_1_;
	bool cppVar_89609 = (cppVar_89608 == 1);
	BIT_VEC cppVar_89610 = PC + 1;
	cppVar_89610 = (cppVar_89610 & cppMask_un_16_);
	BIT_VEC cppVar_89611 = ROM.rd(cppVar_89610);
	BIT_VEC cppVar_89612 = (cppVar_89611 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89613 = (cppVar_89612 << 3) | 0;
	cppVar_89613 = (cppVar_89613 & cppMask_un_8_);
	BIT_VEC cppVar_89614 = PC + 1;
	cppVar_89614 = (cppVar_89614 & cppMask_un_16_);
	BIT_VEC cppVar_89615 = ROM.rd(cppVar_89614);
	BIT_VEC cppVar_89616 = (cppVar_89615 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89617 = (cppVar_89616 & cppMask_un_5_);
	BIT_VEC cppVar_89618 = cppVar_89617 + 32;
	cppVar_89618 = (cppVar_89618 & cppMask_un_8_);
	BIT_VEC cppVar_89619 = (cppVar_89609) ? cppVar_89613 : cppVar_89618;
	BIT_VEC cppVar_89621 = PC + 1;
	cppVar_89621 = (cppVar_89621 & cppMask_un_16_);
	BIT_VEC cppVar_89622 = ROM.rd(cppVar_89621);
	BIT_VEC cppVar_89623 = (cppVar_89622 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_89624 = (cppVar_89623 & cppMask_un_3_);
	BIT_VEC cppVar_89625 = 1 << static_cast<unsigned>(cppVar_89624);
	cppVar_89625 = (cppVar_89625 & cppMask_un_8_);
	BIT_VEC cppVar_89626 = ~cppVar_89625;
	BIT_VEC cppVar_89627 = PC + 1;
	cppVar_89627 = (cppVar_89627 & cppMask_un_16_);
	BIT_VEC cppVar_89628 = ROM.rd(cppVar_89627);
	BIT_VEC cppVar_89629 = (cppVar_89628 >> 7) & cppMask_un_1_;
	bool cppVar_89630 = (cppVar_89629 == 1);
	BIT_VEC cppVar_89631 = PC + 1;
	cppVar_89631 = (cppVar_89631 & cppMask_un_16_);
	BIT_VEC cppVar_89632 = ROM.rd(cppVar_89631);
	BIT_VEC cppVar_89633 = (cppVar_89632 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89634 = (cppVar_89633 << 3) | 0;
	cppVar_89634 = (cppVar_89634 & cppMask_un_8_);
	BIT_VEC cppVar_89635 = PC + 1;
	cppVar_89635 = (cppVar_89635 & cppMask_un_16_);
	BIT_VEC cppVar_89636 = ROM.rd(cppVar_89635);
	BIT_VEC cppVar_89637 = (cppVar_89636 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89638 = (cppVar_89637 & cppMask_un_5_);
	BIT_VEC cppVar_89639 = cppVar_89638 + 32;
	cppVar_89639 = (cppVar_89639 & cppMask_un_8_);
	BIT_VEC cppVar_89640 = (cppVar_89630) ? cppVar_89634 : cppVar_89639;
	BIT_VEC cppVar_89641 = (cppVar_89640 >> 7) & cppMask_un_1_;
	bool cppVar_89643 = (cppVar_89641 == 0);
	BIT_VEC cppVar_89644 = PC + 1;
	cppVar_89644 = (cppVar_89644 & cppMask_un_16_);
	BIT_VEC cppVar_89645 = ROM.rd(cppVar_89644);
	BIT_VEC cppVar_89646 = (cppVar_89645 >> 7) & cppMask_un_1_;
	bool cppVar_89647 = (cppVar_89646 == 1);
	BIT_VEC cppVar_89648 = PC + 1;
	cppVar_89648 = (cppVar_89648 & cppMask_un_16_);
	BIT_VEC cppVar_89649 = ROM.rd(cppVar_89648);
	BIT_VEC cppVar_89650 = (cppVar_89649 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89651 = (cppVar_89650 << 3) | 0;
	cppVar_89651 = (cppVar_89651 & cppMask_un_8_);
	BIT_VEC cppVar_89652 = PC + 1;
	cppVar_89652 = (cppVar_89652 & cppMask_un_16_);
	BIT_VEC cppVar_89653 = ROM.rd(cppVar_89652);
	BIT_VEC cppVar_89654 = (cppVar_89653 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89655 = (cppVar_89654 & cppMask_un_5_);
	BIT_VEC cppVar_89656 = cppVar_89655 + 32;
	cppVar_89656 = (cppVar_89656 & cppMask_un_8_);
	BIT_VEC cppVar_89657 = (cppVar_89647) ? cppVar_89651 : cppVar_89656;
	BIT_VEC cppVar_89658 = IRAM.rd(cppVar_89657);
	BIT_VEC cppVar_89659 = PC + 1;
	cppVar_89659 = (cppVar_89659 & cppMask_un_16_);
	BIT_VEC cppVar_89660 = ROM.rd(cppVar_89659);
	BIT_VEC cppVar_89661 = (cppVar_89660 >> 7) & cppMask_un_1_;
	bool cppVar_89662 = (cppVar_89661 == 1);
	BIT_VEC cppVar_89663 = PC + 1;
	cppVar_89663 = (cppVar_89663 & cppMask_un_16_);
	BIT_VEC cppVar_89664 = ROM.rd(cppVar_89663);
	BIT_VEC cppVar_89665 = (cppVar_89664 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89666 = (cppVar_89665 << 3) | 0;
	cppVar_89666 = (cppVar_89666 & cppMask_un_8_);
	BIT_VEC cppVar_89667 = PC + 1;
	cppVar_89667 = (cppVar_89667 & cppMask_un_16_);
	BIT_VEC cppVar_89668 = ROM.rd(cppVar_89667);
	BIT_VEC cppVar_89669 = (cppVar_89668 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89670 = (cppVar_89669 & cppMask_un_5_);
	BIT_VEC cppVar_89671 = cppVar_89670 + 32;
	cppVar_89671 = (cppVar_89671 & cppMask_un_8_);
	BIT_VEC cppVar_89672 = (cppVar_89662) ? cppVar_89666 : cppVar_89671;
	bool cppVar_89674 = (cppVar_89672 == 128);
	BIT_VEC cppVar_89675 = PC + 1;
	cppVar_89675 = (cppVar_89675 & cppMask_un_16_);
	BIT_VEC cppVar_89676 = ROM.rd(cppVar_89675);
	BIT_VEC cppVar_89677 = (cppVar_89676 >> 7) & cppMask_un_1_;
	bool cppVar_89678 = (cppVar_89677 == 1);
	BIT_VEC cppVar_89679 = PC + 1;
	cppVar_89679 = (cppVar_89679 & cppMask_un_16_);
	BIT_VEC cppVar_89680 = ROM.rd(cppVar_89679);
	BIT_VEC cppVar_89681 = (cppVar_89680 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89682 = (cppVar_89681 << 3) | 0;
	cppVar_89682 = (cppVar_89682 & cppMask_un_8_);
	BIT_VEC cppVar_89683 = PC + 1;
	cppVar_89683 = (cppVar_89683 & cppMask_un_16_);
	BIT_VEC cppVar_89684 = ROM.rd(cppVar_89683);
	BIT_VEC cppVar_89685 = (cppVar_89684 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89686 = (cppVar_89685 & cppMask_un_5_);
	BIT_VEC cppVar_89687 = cppVar_89686 + 32;
	cppVar_89687 = (cppVar_89687 & cppMask_un_8_);
	BIT_VEC cppVar_89688 = (cppVar_89678) ? cppVar_89682 : cppVar_89687;
	bool cppVar_89690 = (cppVar_89688 == 129);
	BIT_VEC cppVar_89691 = PC + 1;
	cppVar_89691 = (cppVar_89691 & cppMask_un_16_);
	BIT_VEC cppVar_89692 = ROM.rd(cppVar_89691);
	BIT_VEC cppVar_89693 = (cppVar_89692 >> 7) & cppMask_un_1_;
	bool cppVar_89694 = (cppVar_89693 == 1);
	BIT_VEC cppVar_89695 = PC + 1;
	cppVar_89695 = (cppVar_89695 & cppMask_un_16_);
	BIT_VEC cppVar_89696 = ROM.rd(cppVar_89695);
	BIT_VEC cppVar_89697 = (cppVar_89696 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89698 = (cppVar_89697 << 3) | 0;
	cppVar_89698 = (cppVar_89698 & cppMask_un_8_);
	BIT_VEC cppVar_89699 = PC + 1;
	cppVar_89699 = (cppVar_89699 & cppMask_un_16_);
	BIT_VEC cppVar_89700 = ROM.rd(cppVar_89699);
	BIT_VEC cppVar_89701 = (cppVar_89700 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89702 = (cppVar_89701 & cppMask_un_5_);
	BIT_VEC cppVar_89703 = cppVar_89702 + 32;
	cppVar_89703 = (cppVar_89703 & cppMask_un_8_);
	BIT_VEC cppVar_89704 = (cppVar_89694) ? cppVar_89698 : cppVar_89703;
	bool cppVar_89706 = (cppVar_89704 == 130);
	BIT_VEC cppVar_89707 = PC + 1;
	cppVar_89707 = (cppVar_89707 & cppMask_un_16_);
	BIT_VEC cppVar_89708 = ROM.rd(cppVar_89707);
	BIT_VEC cppVar_89709 = (cppVar_89708 >> 7) & cppMask_un_1_;
	bool cppVar_89710 = (cppVar_89709 == 1);
	BIT_VEC cppVar_89711 = PC + 1;
	cppVar_89711 = (cppVar_89711 & cppMask_un_16_);
	BIT_VEC cppVar_89712 = ROM.rd(cppVar_89711);
	BIT_VEC cppVar_89713 = (cppVar_89712 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89714 = (cppVar_89713 << 3) | 0;
	cppVar_89714 = (cppVar_89714 & cppMask_un_8_);
	BIT_VEC cppVar_89715 = PC + 1;
	cppVar_89715 = (cppVar_89715 & cppMask_un_16_);
	BIT_VEC cppVar_89716 = ROM.rd(cppVar_89715);
	BIT_VEC cppVar_89717 = (cppVar_89716 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89718 = (cppVar_89717 & cppMask_un_5_);
	BIT_VEC cppVar_89719 = cppVar_89718 + 32;
	cppVar_89719 = (cppVar_89719 & cppMask_un_8_);
	BIT_VEC cppVar_89720 = (cppVar_89710) ? cppVar_89714 : cppVar_89719;
	bool cppVar_89722 = (cppVar_89720 == 131);
	BIT_VEC cppVar_89723 = PC + 1;
	cppVar_89723 = (cppVar_89723 & cppMask_un_16_);
	BIT_VEC cppVar_89724 = ROM.rd(cppVar_89723);
	BIT_VEC cppVar_89725 = (cppVar_89724 >> 7) & cppMask_un_1_;
	bool cppVar_89726 = (cppVar_89725 == 1);
	BIT_VEC cppVar_89727 = PC + 1;
	cppVar_89727 = (cppVar_89727 & cppMask_un_16_);
	BIT_VEC cppVar_89728 = ROM.rd(cppVar_89727);
	BIT_VEC cppVar_89729 = (cppVar_89728 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89730 = (cppVar_89729 << 3) | 0;
	cppVar_89730 = (cppVar_89730 & cppMask_un_8_);
	BIT_VEC cppVar_89731 = PC + 1;
	cppVar_89731 = (cppVar_89731 & cppMask_un_16_);
	BIT_VEC cppVar_89732 = ROM.rd(cppVar_89731);
	BIT_VEC cppVar_89733 = (cppVar_89732 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89734 = (cppVar_89733 & cppMask_un_5_);
	BIT_VEC cppVar_89735 = cppVar_89734 + 32;
	cppVar_89735 = (cppVar_89735 & cppMask_un_8_);
	BIT_VEC cppVar_89736 = (cppVar_89726) ? cppVar_89730 : cppVar_89735;
	bool cppVar_89738 = (cppVar_89736 == 135);
	BIT_VEC cppVar_89739 = PC + 1;
	cppVar_89739 = (cppVar_89739 & cppMask_un_16_);
	BIT_VEC cppVar_89740 = ROM.rd(cppVar_89739);
	BIT_VEC cppVar_89741 = (cppVar_89740 >> 7) & cppMask_un_1_;
	bool cppVar_89742 = (cppVar_89741 == 1);
	BIT_VEC cppVar_89743 = PC + 1;
	cppVar_89743 = (cppVar_89743 & cppMask_un_16_);
	BIT_VEC cppVar_89744 = ROM.rd(cppVar_89743);
	BIT_VEC cppVar_89745 = (cppVar_89744 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89746 = (cppVar_89745 << 3) | 0;
	cppVar_89746 = (cppVar_89746 & cppMask_un_8_);
	BIT_VEC cppVar_89747 = PC + 1;
	cppVar_89747 = (cppVar_89747 & cppMask_un_16_);
	BIT_VEC cppVar_89748 = ROM.rd(cppVar_89747);
	BIT_VEC cppVar_89749 = (cppVar_89748 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89750 = (cppVar_89749 & cppMask_un_5_);
	BIT_VEC cppVar_89751 = cppVar_89750 + 32;
	cppVar_89751 = (cppVar_89751 & cppMask_un_8_);
	BIT_VEC cppVar_89752 = (cppVar_89742) ? cppVar_89746 : cppVar_89751;
	bool cppVar_89754 = (cppVar_89752 == 136);
	BIT_VEC cppVar_89755 = PC + 1;
	cppVar_89755 = (cppVar_89755 & cppMask_un_16_);
	BIT_VEC cppVar_89756 = ROM.rd(cppVar_89755);
	BIT_VEC cppVar_89757 = (cppVar_89756 >> 7) & cppMask_un_1_;
	bool cppVar_89758 = (cppVar_89757 == 1);
	BIT_VEC cppVar_89759 = PC + 1;
	cppVar_89759 = (cppVar_89759 & cppMask_un_16_);
	BIT_VEC cppVar_89760 = ROM.rd(cppVar_89759);
	BIT_VEC cppVar_89761 = (cppVar_89760 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89762 = (cppVar_89761 << 3) | 0;
	cppVar_89762 = (cppVar_89762 & cppMask_un_8_);
	BIT_VEC cppVar_89763 = PC + 1;
	cppVar_89763 = (cppVar_89763 & cppMask_un_16_);
	BIT_VEC cppVar_89764 = ROM.rd(cppVar_89763);
	BIT_VEC cppVar_89765 = (cppVar_89764 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89766 = (cppVar_89765 & cppMask_un_5_);
	BIT_VEC cppVar_89767 = cppVar_89766 + 32;
	cppVar_89767 = (cppVar_89767 & cppMask_un_8_);
	BIT_VEC cppVar_89768 = (cppVar_89758) ? cppVar_89762 : cppVar_89767;
	bool cppVar_89770 = (cppVar_89768 == 137);
	BIT_VEC cppVar_89771 = PC + 1;
	cppVar_89771 = (cppVar_89771 & cppMask_un_16_);
	BIT_VEC cppVar_89772 = ROM.rd(cppVar_89771);
	BIT_VEC cppVar_89773 = (cppVar_89772 >> 7) & cppMask_un_1_;
	bool cppVar_89774 = (cppVar_89773 == 1);
	BIT_VEC cppVar_89775 = PC + 1;
	cppVar_89775 = (cppVar_89775 & cppMask_un_16_);
	BIT_VEC cppVar_89776 = ROM.rd(cppVar_89775);
	BIT_VEC cppVar_89777 = (cppVar_89776 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89778 = (cppVar_89777 << 3) | 0;
	cppVar_89778 = (cppVar_89778 & cppMask_un_8_);
	BIT_VEC cppVar_89779 = PC + 1;
	cppVar_89779 = (cppVar_89779 & cppMask_un_16_);
	BIT_VEC cppVar_89780 = ROM.rd(cppVar_89779);
	BIT_VEC cppVar_89781 = (cppVar_89780 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89782 = (cppVar_89781 & cppMask_un_5_);
	BIT_VEC cppVar_89783 = cppVar_89782 + 32;
	cppVar_89783 = (cppVar_89783 & cppMask_un_8_);
	BIT_VEC cppVar_89784 = (cppVar_89774) ? cppVar_89778 : cppVar_89783;
	bool cppVar_89786 = (cppVar_89784 == 138);
	BIT_VEC cppVar_89787 = PC + 1;
	cppVar_89787 = (cppVar_89787 & cppMask_un_16_);
	BIT_VEC cppVar_89788 = ROM.rd(cppVar_89787);
	BIT_VEC cppVar_89789 = (cppVar_89788 >> 7) & cppMask_un_1_;
	bool cppVar_89790 = (cppVar_89789 == 1);
	BIT_VEC cppVar_89791 = PC + 1;
	cppVar_89791 = (cppVar_89791 & cppMask_un_16_);
	BIT_VEC cppVar_89792 = ROM.rd(cppVar_89791);
	BIT_VEC cppVar_89793 = (cppVar_89792 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89794 = (cppVar_89793 << 3) | 0;
	cppVar_89794 = (cppVar_89794 & cppMask_un_8_);
	BIT_VEC cppVar_89795 = PC + 1;
	cppVar_89795 = (cppVar_89795 & cppMask_un_16_);
	BIT_VEC cppVar_89796 = ROM.rd(cppVar_89795);
	BIT_VEC cppVar_89797 = (cppVar_89796 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89798 = (cppVar_89797 & cppMask_un_5_);
	BIT_VEC cppVar_89799 = cppVar_89798 + 32;
	cppVar_89799 = (cppVar_89799 & cppMask_un_8_);
	BIT_VEC cppVar_89800 = (cppVar_89790) ? cppVar_89794 : cppVar_89799;
	bool cppVar_89802 = (cppVar_89800 == 140);
	BIT_VEC cppVar_89803 = PC + 1;
	cppVar_89803 = (cppVar_89803 & cppMask_un_16_);
	BIT_VEC cppVar_89804 = ROM.rd(cppVar_89803);
	BIT_VEC cppVar_89805 = (cppVar_89804 >> 7) & cppMask_un_1_;
	bool cppVar_89806 = (cppVar_89805 == 1);
	BIT_VEC cppVar_89807 = PC + 1;
	cppVar_89807 = (cppVar_89807 & cppMask_un_16_);
	BIT_VEC cppVar_89808 = ROM.rd(cppVar_89807);
	BIT_VEC cppVar_89809 = (cppVar_89808 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89810 = (cppVar_89809 << 3) | 0;
	cppVar_89810 = (cppVar_89810 & cppMask_un_8_);
	BIT_VEC cppVar_89811 = PC + 1;
	cppVar_89811 = (cppVar_89811 & cppMask_un_16_);
	BIT_VEC cppVar_89812 = ROM.rd(cppVar_89811);
	BIT_VEC cppVar_89813 = (cppVar_89812 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89814 = (cppVar_89813 & cppMask_un_5_);
	BIT_VEC cppVar_89815 = cppVar_89814 + 32;
	cppVar_89815 = (cppVar_89815 & cppMask_un_8_);
	BIT_VEC cppVar_89816 = (cppVar_89806) ? cppVar_89810 : cppVar_89815;
	bool cppVar_89818 = (cppVar_89816 == 139);
	BIT_VEC cppVar_89819 = PC + 1;
	cppVar_89819 = (cppVar_89819 & cppMask_un_16_);
	BIT_VEC cppVar_89820 = ROM.rd(cppVar_89819);
	BIT_VEC cppVar_89821 = (cppVar_89820 >> 7) & cppMask_un_1_;
	bool cppVar_89822 = (cppVar_89821 == 1);
	BIT_VEC cppVar_89823 = PC + 1;
	cppVar_89823 = (cppVar_89823 & cppMask_un_16_);
	BIT_VEC cppVar_89824 = ROM.rd(cppVar_89823);
	BIT_VEC cppVar_89825 = (cppVar_89824 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89826 = (cppVar_89825 << 3) | 0;
	cppVar_89826 = (cppVar_89826 & cppMask_un_8_);
	BIT_VEC cppVar_89827 = PC + 1;
	cppVar_89827 = (cppVar_89827 & cppMask_un_16_);
	BIT_VEC cppVar_89828 = ROM.rd(cppVar_89827);
	BIT_VEC cppVar_89829 = (cppVar_89828 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89830 = (cppVar_89829 & cppMask_un_5_);
	BIT_VEC cppVar_89831 = cppVar_89830 + 32;
	cppVar_89831 = (cppVar_89831 & cppMask_un_8_);
	BIT_VEC cppVar_89832 = (cppVar_89822) ? cppVar_89826 : cppVar_89831;
	bool cppVar_89834 = (cppVar_89832 == 141);
	BIT_VEC cppVar_89835 = PC + 1;
	cppVar_89835 = (cppVar_89835 & cppMask_un_16_);
	BIT_VEC cppVar_89836 = ROM.rd(cppVar_89835);
	BIT_VEC cppVar_89837 = (cppVar_89836 >> 7) & cppMask_un_1_;
	bool cppVar_89838 = (cppVar_89837 == 1);
	BIT_VEC cppVar_89839 = PC + 1;
	cppVar_89839 = (cppVar_89839 & cppMask_un_16_);
	BIT_VEC cppVar_89840 = ROM.rd(cppVar_89839);
	BIT_VEC cppVar_89841 = (cppVar_89840 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89842 = (cppVar_89841 << 3) | 0;
	cppVar_89842 = (cppVar_89842 & cppMask_un_8_);
	BIT_VEC cppVar_89843 = PC + 1;
	cppVar_89843 = (cppVar_89843 & cppMask_un_16_);
	BIT_VEC cppVar_89844 = ROM.rd(cppVar_89843);
	BIT_VEC cppVar_89845 = (cppVar_89844 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89846 = (cppVar_89845 & cppMask_un_5_);
	BIT_VEC cppVar_89847 = cppVar_89846 + 32;
	cppVar_89847 = (cppVar_89847 & cppMask_un_8_);
	BIT_VEC cppVar_89848 = (cppVar_89838) ? cppVar_89842 : cppVar_89847;
	bool cppVar_89850 = (cppVar_89848 == 144);
	BIT_VEC cppVar_89851 = PC + 1;
	cppVar_89851 = (cppVar_89851 & cppMask_un_16_);
	BIT_VEC cppVar_89852 = ROM.rd(cppVar_89851);
	BIT_VEC cppVar_89853 = (cppVar_89852 >> 7) & cppMask_un_1_;
	bool cppVar_89854 = (cppVar_89853 == 1);
	BIT_VEC cppVar_89855 = PC + 1;
	cppVar_89855 = (cppVar_89855 & cppMask_un_16_);
	BIT_VEC cppVar_89856 = ROM.rd(cppVar_89855);
	BIT_VEC cppVar_89857 = (cppVar_89856 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89858 = (cppVar_89857 << 3) | 0;
	cppVar_89858 = (cppVar_89858 & cppMask_un_8_);
	BIT_VEC cppVar_89859 = PC + 1;
	cppVar_89859 = (cppVar_89859 & cppMask_un_16_);
	BIT_VEC cppVar_89860 = ROM.rd(cppVar_89859);
	BIT_VEC cppVar_89861 = (cppVar_89860 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89862 = (cppVar_89861 & cppMask_un_5_);
	BIT_VEC cppVar_89863 = cppVar_89862 + 32;
	cppVar_89863 = (cppVar_89863 & cppMask_un_8_);
	BIT_VEC cppVar_89864 = (cppVar_89854) ? cppVar_89858 : cppVar_89863;
	bool cppVar_89866 = (cppVar_89864 == 152);
	BIT_VEC cppVar_89867 = PC + 1;
	cppVar_89867 = (cppVar_89867 & cppMask_un_16_);
	BIT_VEC cppVar_89868 = ROM.rd(cppVar_89867);
	BIT_VEC cppVar_89869 = (cppVar_89868 >> 7) & cppMask_un_1_;
	bool cppVar_89870 = (cppVar_89869 == 1);
	BIT_VEC cppVar_89871 = PC + 1;
	cppVar_89871 = (cppVar_89871 & cppMask_un_16_);
	BIT_VEC cppVar_89872 = ROM.rd(cppVar_89871);
	BIT_VEC cppVar_89873 = (cppVar_89872 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89874 = (cppVar_89873 << 3) | 0;
	cppVar_89874 = (cppVar_89874 & cppMask_un_8_);
	BIT_VEC cppVar_89875 = PC + 1;
	cppVar_89875 = (cppVar_89875 & cppMask_un_16_);
	BIT_VEC cppVar_89876 = ROM.rd(cppVar_89875);
	BIT_VEC cppVar_89877 = (cppVar_89876 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89878 = (cppVar_89877 & cppMask_un_5_);
	BIT_VEC cppVar_89879 = cppVar_89878 + 32;
	cppVar_89879 = (cppVar_89879 & cppMask_un_8_);
	BIT_VEC cppVar_89880 = (cppVar_89870) ? cppVar_89874 : cppVar_89879;
	bool cppVar_89882 = (cppVar_89880 == 153);
	BIT_VEC cppVar_89883 = PC + 1;
	cppVar_89883 = (cppVar_89883 & cppMask_un_16_);
	BIT_VEC cppVar_89884 = ROM.rd(cppVar_89883);
	BIT_VEC cppVar_89885 = (cppVar_89884 >> 7) & cppMask_un_1_;
	bool cppVar_89886 = (cppVar_89885 == 1);
	BIT_VEC cppVar_89887 = PC + 1;
	cppVar_89887 = (cppVar_89887 & cppMask_un_16_);
	BIT_VEC cppVar_89888 = ROM.rd(cppVar_89887);
	BIT_VEC cppVar_89889 = (cppVar_89888 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89890 = (cppVar_89889 << 3) | 0;
	cppVar_89890 = (cppVar_89890 & cppMask_un_8_);
	BIT_VEC cppVar_89891 = PC + 1;
	cppVar_89891 = (cppVar_89891 & cppMask_un_16_);
	BIT_VEC cppVar_89892 = ROM.rd(cppVar_89891);
	BIT_VEC cppVar_89893 = (cppVar_89892 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89894 = (cppVar_89893 & cppMask_un_5_);
	BIT_VEC cppVar_89895 = cppVar_89894 + 32;
	cppVar_89895 = (cppVar_89895 & cppMask_un_8_);
	BIT_VEC cppVar_89896 = (cppVar_89886) ? cppVar_89890 : cppVar_89895;
	bool cppVar_89898 = (cppVar_89896 == 160);
	BIT_VEC cppVar_89899 = PC + 1;
	cppVar_89899 = (cppVar_89899 & cppMask_un_16_);
	BIT_VEC cppVar_89900 = ROM.rd(cppVar_89899);
	BIT_VEC cppVar_89901 = (cppVar_89900 >> 7) & cppMask_un_1_;
	bool cppVar_89902 = (cppVar_89901 == 1);
	BIT_VEC cppVar_89903 = PC + 1;
	cppVar_89903 = (cppVar_89903 & cppMask_un_16_);
	BIT_VEC cppVar_89904 = ROM.rd(cppVar_89903);
	BIT_VEC cppVar_89905 = (cppVar_89904 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89906 = (cppVar_89905 << 3) | 0;
	cppVar_89906 = (cppVar_89906 & cppMask_un_8_);
	BIT_VEC cppVar_89907 = PC + 1;
	cppVar_89907 = (cppVar_89907 & cppMask_un_16_);
	BIT_VEC cppVar_89908 = ROM.rd(cppVar_89907);
	BIT_VEC cppVar_89909 = (cppVar_89908 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89910 = (cppVar_89909 & cppMask_un_5_);
	BIT_VEC cppVar_89911 = cppVar_89910 + 32;
	cppVar_89911 = (cppVar_89911 & cppMask_un_8_);
	BIT_VEC cppVar_89912 = (cppVar_89902) ? cppVar_89906 : cppVar_89911;
	bool cppVar_89914 = (cppVar_89912 == 168);
	BIT_VEC cppVar_89915 = PC + 1;
	cppVar_89915 = (cppVar_89915 & cppMask_un_16_);
	BIT_VEC cppVar_89916 = ROM.rd(cppVar_89915);
	BIT_VEC cppVar_89917 = (cppVar_89916 >> 7) & cppMask_un_1_;
	bool cppVar_89918 = (cppVar_89917 == 1);
	BIT_VEC cppVar_89919 = PC + 1;
	cppVar_89919 = (cppVar_89919 & cppMask_un_16_);
	BIT_VEC cppVar_89920 = ROM.rd(cppVar_89919);
	BIT_VEC cppVar_89921 = (cppVar_89920 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89922 = (cppVar_89921 << 3) | 0;
	cppVar_89922 = (cppVar_89922 & cppMask_un_8_);
	BIT_VEC cppVar_89923 = PC + 1;
	cppVar_89923 = (cppVar_89923 & cppMask_un_16_);
	BIT_VEC cppVar_89924 = ROM.rd(cppVar_89923);
	BIT_VEC cppVar_89925 = (cppVar_89924 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89926 = (cppVar_89925 & cppMask_un_5_);
	BIT_VEC cppVar_89927 = cppVar_89926 + 32;
	cppVar_89927 = (cppVar_89927 & cppMask_un_8_);
	BIT_VEC cppVar_89928 = (cppVar_89918) ? cppVar_89922 : cppVar_89927;
	bool cppVar_89930 = (cppVar_89928 == 176);
	BIT_VEC cppVar_89931 = PC + 1;
	cppVar_89931 = (cppVar_89931 & cppMask_un_16_);
	BIT_VEC cppVar_89932 = ROM.rd(cppVar_89931);
	BIT_VEC cppVar_89933 = (cppVar_89932 >> 7) & cppMask_un_1_;
	bool cppVar_89934 = (cppVar_89933 == 1);
	BIT_VEC cppVar_89935 = PC + 1;
	cppVar_89935 = (cppVar_89935 & cppMask_un_16_);
	BIT_VEC cppVar_89936 = ROM.rd(cppVar_89935);
	BIT_VEC cppVar_89937 = (cppVar_89936 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89938 = (cppVar_89937 << 3) | 0;
	cppVar_89938 = (cppVar_89938 & cppMask_un_8_);
	BIT_VEC cppVar_89939 = PC + 1;
	cppVar_89939 = (cppVar_89939 & cppMask_un_16_);
	BIT_VEC cppVar_89940 = ROM.rd(cppVar_89939);
	BIT_VEC cppVar_89941 = (cppVar_89940 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89942 = (cppVar_89941 & cppMask_un_5_);
	BIT_VEC cppVar_89943 = cppVar_89942 + 32;
	cppVar_89943 = (cppVar_89943 & cppMask_un_8_);
	BIT_VEC cppVar_89944 = (cppVar_89934) ? cppVar_89938 : cppVar_89943;
	bool cppVar_89946 = (cppVar_89944 == 184);
	BIT_VEC cppVar_89947 = PC + 1;
	cppVar_89947 = (cppVar_89947 & cppMask_un_16_);
	BIT_VEC cppVar_89948 = ROM.rd(cppVar_89947);
	BIT_VEC cppVar_89949 = (cppVar_89948 >> 7) & cppMask_un_1_;
	bool cppVar_89950 = (cppVar_89949 == 1);
	BIT_VEC cppVar_89951 = PC + 1;
	cppVar_89951 = (cppVar_89951 & cppMask_un_16_);
	BIT_VEC cppVar_89952 = ROM.rd(cppVar_89951);
	BIT_VEC cppVar_89953 = (cppVar_89952 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89954 = (cppVar_89953 << 3) | 0;
	cppVar_89954 = (cppVar_89954 & cppMask_un_8_);
	BIT_VEC cppVar_89955 = PC + 1;
	cppVar_89955 = (cppVar_89955 & cppMask_un_16_);
	BIT_VEC cppVar_89956 = ROM.rd(cppVar_89955);
	BIT_VEC cppVar_89957 = (cppVar_89956 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89958 = (cppVar_89957 & cppMask_un_5_);
	BIT_VEC cppVar_89959 = cppVar_89958 + 32;
	cppVar_89959 = (cppVar_89959 & cppMask_un_8_);
	BIT_VEC cppVar_89960 = (cppVar_89950) ? cppVar_89954 : cppVar_89959;
	bool cppVar_89962 = (cppVar_89960 == 208);
	BIT_VEC cppVar_89963 = PC + 1;
	cppVar_89963 = (cppVar_89963 & cppMask_un_16_);
	BIT_VEC cppVar_89964 = ROM.rd(cppVar_89963);
	BIT_VEC cppVar_89965 = (cppVar_89964 >> 7) & cppMask_un_1_;
	bool cppVar_89966 = (cppVar_89965 == 1);
	BIT_VEC cppVar_89967 = PC + 1;
	cppVar_89967 = (cppVar_89967 & cppMask_un_16_);
	BIT_VEC cppVar_89968 = ROM.rd(cppVar_89967);
	BIT_VEC cppVar_89969 = (cppVar_89968 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89970 = (cppVar_89969 << 3) | 0;
	cppVar_89970 = (cppVar_89970 & cppMask_un_8_);
	BIT_VEC cppVar_89971 = PC + 1;
	cppVar_89971 = (cppVar_89971 & cppMask_un_16_);
	BIT_VEC cppVar_89972 = ROM.rd(cppVar_89971);
	BIT_VEC cppVar_89973 = (cppVar_89972 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89974 = (cppVar_89973 & cppMask_un_5_);
	BIT_VEC cppVar_89975 = cppVar_89974 + 32;
	cppVar_89975 = (cppVar_89975 & cppMask_un_8_);
	BIT_VEC cppVar_89976 = (cppVar_89966) ? cppVar_89970 : cppVar_89975;
	bool cppVar_89978 = (cppVar_89976 == 224);
	BIT_VEC cppVar_89979 = PC + 1;
	cppVar_89979 = (cppVar_89979 & cppMask_un_16_);
	BIT_VEC cppVar_89980 = ROM.rd(cppVar_89979);
	BIT_VEC cppVar_89981 = (cppVar_89980 >> 7) & cppMask_un_1_;
	bool cppVar_89982 = (cppVar_89981 == 1);
	BIT_VEC cppVar_89983 = PC + 1;
	cppVar_89983 = (cppVar_89983 & cppMask_un_16_);
	BIT_VEC cppVar_89984 = ROM.rd(cppVar_89983);
	BIT_VEC cppVar_89985 = (cppVar_89984 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89986 = (cppVar_89985 << 3) | 0;
	cppVar_89986 = (cppVar_89986 & cppMask_un_8_);
	BIT_VEC cppVar_89987 = PC + 1;
	cppVar_89987 = (cppVar_89987 & cppMask_un_16_);
	BIT_VEC cppVar_89988 = ROM.rd(cppVar_89987);
	BIT_VEC cppVar_89989 = (cppVar_89988 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_89990 = (cppVar_89989 & cppMask_un_5_);
	BIT_VEC cppVar_89991 = cppVar_89990 + 32;
	cppVar_89991 = (cppVar_89991 & cppMask_un_8_);
	BIT_VEC cppVar_89992 = (cppVar_89982) ? cppVar_89986 : cppVar_89991;
	bool cppVar_89994 = (cppVar_89992 == 240);
	BIT_VEC cppVar_89996 = (cppVar_89994) ? B : 0;
	BIT_VEC cppVar_89997 = (cppVar_89978) ? ACC : cppVar_89996;
	BIT_VEC cppVar_89998 = (cppVar_89962) ? PSW : cppVar_89997;
	BIT_VEC cppVar_89999 = (cppVar_89946) ? IP : cppVar_89998;
	BIT_VEC cppVar_90000 = (cppVar_89930) ? P3 : cppVar_89999;
	BIT_VEC cppVar_90001 = (cppVar_89914) ? IE : cppVar_90000;
	BIT_VEC cppVar_90002 = (cppVar_89898) ? P2 : cppVar_90001;
	BIT_VEC cppVar_90003 = (cppVar_89882) ? SBUF : cppVar_90002;
	BIT_VEC cppVar_90004 = (cppVar_89866) ? SCON : cppVar_90003;
	BIT_VEC cppVar_90005 = (cppVar_89850) ? P1 : cppVar_90004;
	BIT_VEC cppVar_90006 = (cppVar_89834) ? TH1 : cppVar_90005;
	BIT_VEC cppVar_90007 = (cppVar_89818) ? TL1 : cppVar_90006;
	BIT_VEC cppVar_90008 = (cppVar_89802) ? TH0 : cppVar_90007;
	BIT_VEC cppVar_90009 = (cppVar_89786) ? TL0 : cppVar_90008;
	BIT_VEC cppVar_90010 = (cppVar_89770) ? TMOD : cppVar_90009;
	BIT_VEC cppVar_90011 = (cppVar_89754) ? TCON : cppVar_90010;
	BIT_VEC cppVar_90012 = (cppVar_89738) ? PCON : cppVar_90011;
	BIT_VEC cppVar_90013 = (cppVar_89722) ? DPH : cppVar_90012;
	BIT_VEC cppVar_90014 = (cppVar_89706) ? DPL : cppVar_90013;
	BIT_VEC cppVar_90015 = (cppVar_89690) ? SP : cppVar_90014;
	BIT_VEC cppVar_90016 = (cppVar_89674) ? P0 : cppVar_90015;
	BIT_VEC cppVar_90017 = (cppVar_89643) ? cppVar_89658 : cppVar_90016;
	BIT_VEC cppVar_90018 = cppVar_89626 & cppVar_90017;
	BIT_VEC cppVar_90019 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_90020 = (cppVar_90019 & cppMask_un_1_);
	BIT_VEC cppVar_90021 = PC + 1;
	cppVar_90021 = (cppVar_90021 & cppMask_un_16_);
	BIT_VEC cppVar_90022 = ROM.rd(cppVar_90021);
	BIT_VEC cppVar_90023 = (cppVar_90022 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_90024 = (cppVar_90023 & cppMask_un_3_);
	BIT_VEC cppVar_90025 = cppVar_90020 << static_cast<unsigned>(cppVar_90024);
	cppVar_90025 = (cppVar_90025 & cppMask_un_8_);
	BIT_VEC cppVar_90026 = cppVar_90018 | cppVar_90025;
	type_mem cppVar_90027 = IRAM;
	cppVar_90027.wr(cppVar_89619, cppVar_90026);
	type_mem& cppVar_90028 = (cppVar_89605) ? cppVar_90027 : IRAM;
	BIT_VEC cppVar_90029 = ROM.rd(PC);
	bool cppVar_90031 = (cppVar_90029 == 143);
	BIT_VEC cppVar_90033 = PC + 1;
	cppVar_90033 = (cppVar_90033 & cppMask_un_16_);
	BIT_VEC cppVar_90034 = ROM.rd(cppVar_90033);
	BIT_VEC cppVar_90035 = (cppVar_90034 >> 7) & cppMask_un_1_;
	bool cppVar_90037 = (cppVar_90035 == 0);
	BIT_VEC cppVar_90038 = PC + 1;
	cppVar_90038 = (cppVar_90038 & cppMask_un_16_);
	BIT_VEC cppVar_90039 = ROM.rd(cppVar_90038);
	BIT_VEC cppVar_90041 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90043 = (cppVar_90041 << 3) | 7;
	cppVar_90043 = (cppVar_90043 & cppMask_un_5_);
	BIT_VEC cppVar_90044 = (0 << 5) | cppVar_90043;
	cppVar_90044 = (cppVar_90044 & cppMask_un_8_);
	BIT_VEC cppVar_90045 = (cppVar_90044 >> 7) & cppMask_un_1_;
	bool cppVar_90047 = (cppVar_90045 == 0);
	BIT_VEC cppVar_90048 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90049 = (cppVar_90048 << 3) | 7;
	cppVar_90049 = (cppVar_90049 & cppMask_un_5_);
	BIT_VEC cppVar_90050 = (0 << 5) | cppVar_90049;
	cppVar_90050 = (cppVar_90050 & cppMask_un_8_);
	BIT_VEC cppVar_90051 = IRAM.rd(cppVar_90050);
	BIT_VEC cppVar_90052 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90053 = (cppVar_90052 << 3) | 7;
	cppVar_90053 = (cppVar_90053 & cppMask_un_5_);
	BIT_VEC cppVar_90054 = (0 << 5) | cppVar_90053;
	cppVar_90054 = (cppVar_90054 & cppMask_un_8_);
	bool cppVar_90056 = (cppVar_90054 == 128);
	BIT_VEC cppVar_90057 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90058 = (cppVar_90057 << 3) | 7;
	cppVar_90058 = (cppVar_90058 & cppMask_un_5_);
	BIT_VEC cppVar_90059 = (0 << 5) | cppVar_90058;
	cppVar_90059 = (cppVar_90059 & cppMask_un_8_);
	bool cppVar_90061 = (cppVar_90059 == 129);
	BIT_VEC cppVar_90062 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90063 = (cppVar_90062 << 3) | 7;
	cppVar_90063 = (cppVar_90063 & cppMask_un_5_);
	BIT_VEC cppVar_90064 = (0 << 5) | cppVar_90063;
	cppVar_90064 = (cppVar_90064 & cppMask_un_8_);
	bool cppVar_90066 = (cppVar_90064 == 130);
	BIT_VEC cppVar_90067 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90068 = (cppVar_90067 << 3) | 7;
	cppVar_90068 = (cppVar_90068 & cppMask_un_5_);
	BIT_VEC cppVar_90069 = (0 << 5) | cppVar_90068;
	cppVar_90069 = (cppVar_90069 & cppMask_un_8_);
	bool cppVar_90071 = (cppVar_90069 == 131);
	BIT_VEC cppVar_90072 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90073 = (cppVar_90072 << 3) | 7;
	cppVar_90073 = (cppVar_90073 & cppMask_un_5_);
	BIT_VEC cppVar_90074 = (0 << 5) | cppVar_90073;
	cppVar_90074 = (cppVar_90074 & cppMask_un_8_);
	bool cppVar_90076 = (cppVar_90074 == 135);
	BIT_VEC cppVar_90077 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90078 = (cppVar_90077 << 3) | 7;
	cppVar_90078 = (cppVar_90078 & cppMask_un_5_);
	BIT_VEC cppVar_90079 = (0 << 5) | cppVar_90078;
	cppVar_90079 = (cppVar_90079 & cppMask_un_8_);
	bool cppVar_90081 = (cppVar_90079 == 136);
	BIT_VEC cppVar_90082 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90083 = (cppVar_90082 << 3) | 7;
	cppVar_90083 = (cppVar_90083 & cppMask_un_5_);
	BIT_VEC cppVar_90084 = (0 << 5) | cppVar_90083;
	cppVar_90084 = (cppVar_90084 & cppMask_un_8_);
	bool cppVar_90086 = (cppVar_90084 == 137);
	BIT_VEC cppVar_90087 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90088 = (cppVar_90087 << 3) | 7;
	cppVar_90088 = (cppVar_90088 & cppMask_un_5_);
	BIT_VEC cppVar_90089 = (0 << 5) | cppVar_90088;
	cppVar_90089 = (cppVar_90089 & cppMask_un_8_);
	bool cppVar_90091 = (cppVar_90089 == 138);
	BIT_VEC cppVar_90092 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90093 = (cppVar_90092 << 3) | 7;
	cppVar_90093 = (cppVar_90093 & cppMask_un_5_);
	BIT_VEC cppVar_90094 = (0 << 5) | cppVar_90093;
	cppVar_90094 = (cppVar_90094 & cppMask_un_8_);
	bool cppVar_90096 = (cppVar_90094 == 140);
	BIT_VEC cppVar_90097 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90098 = (cppVar_90097 << 3) | 7;
	cppVar_90098 = (cppVar_90098 & cppMask_un_5_);
	BIT_VEC cppVar_90099 = (0 << 5) | cppVar_90098;
	cppVar_90099 = (cppVar_90099 & cppMask_un_8_);
	bool cppVar_90101 = (cppVar_90099 == 139);
	BIT_VEC cppVar_90102 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90103 = (cppVar_90102 << 3) | 7;
	cppVar_90103 = (cppVar_90103 & cppMask_un_5_);
	BIT_VEC cppVar_90104 = (0 << 5) | cppVar_90103;
	cppVar_90104 = (cppVar_90104 & cppMask_un_8_);
	bool cppVar_90106 = (cppVar_90104 == 141);
	BIT_VEC cppVar_90107 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90108 = (cppVar_90107 << 3) | 7;
	cppVar_90108 = (cppVar_90108 & cppMask_un_5_);
	BIT_VEC cppVar_90109 = (0 << 5) | cppVar_90108;
	cppVar_90109 = (cppVar_90109 & cppMask_un_8_);
	bool cppVar_90111 = (cppVar_90109 == 144);
	BIT_VEC cppVar_90112 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90113 = (cppVar_90112 << 3) | 7;
	cppVar_90113 = (cppVar_90113 & cppMask_un_5_);
	BIT_VEC cppVar_90114 = (0 << 5) | cppVar_90113;
	cppVar_90114 = (cppVar_90114 & cppMask_un_8_);
	bool cppVar_90116 = (cppVar_90114 == 152);
	BIT_VEC cppVar_90117 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90118 = (cppVar_90117 << 3) | 7;
	cppVar_90118 = (cppVar_90118 & cppMask_un_5_);
	BIT_VEC cppVar_90119 = (0 << 5) | cppVar_90118;
	cppVar_90119 = (cppVar_90119 & cppMask_un_8_);
	bool cppVar_90121 = (cppVar_90119 == 153);
	BIT_VEC cppVar_90122 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90123 = (cppVar_90122 << 3) | 7;
	cppVar_90123 = (cppVar_90123 & cppMask_un_5_);
	BIT_VEC cppVar_90124 = (0 << 5) | cppVar_90123;
	cppVar_90124 = (cppVar_90124 & cppMask_un_8_);
	bool cppVar_90126 = (cppVar_90124 == 160);
	BIT_VEC cppVar_90127 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90128 = (cppVar_90127 << 3) | 7;
	cppVar_90128 = (cppVar_90128 & cppMask_un_5_);
	BIT_VEC cppVar_90129 = (0 << 5) | cppVar_90128;
	cppVar_90129 = (cppVar_90129 & cppMask_un_8_);
	bool cppVar_90131 = (cppVar_90129 == 168);
	BIT_VEC cppVar_90132 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90133 = (cppVar_90132 << 3) | 7;
	cppVar_90133 = (cppVar_90133 & cppMask_un_5_);
	BIT_VEC cppVar_90134 = (0 << 5) | cppVar_90133;
	cppVar_90134 = (cppVar_90134 & cppMask_un_8_);
	bool cppVar_90136 = (cppVar_90134 == 176);
	BIT_VEC cppVar_90137 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90138 = (cppVar_90137 << 3) | 7;
	cppVar_90138 = (cppVar_90138 & cppMask_un_5_);
	BIT_VEC cppVar_90139 = (0 << 5) | cppVar_90138;
	cppVar_90139 = (cppVar_90139 & cppMask_un_8_);
	bool cppVar_90141 = (cppVar_90139 == 184);
	BIT_VEC cppVar_90142 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90143 = (cppVar_90142 << 3) | 7;
	cppVar_90143 = (cppVar_90143 & cppMask_un_5_);
	BIT_VEC cppVar_90144 = (0 << 5) | cppVar_90143;
	cppVar_90144 = (cppVar_90144 & cppMask_un_8_);
	bool cppVar_90146 = (cppVar_90144 == 208);
	BIT_VEC cppVar_90147 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90148 = (cppVar_90147 << 3) | 7;
	cppVar_90148 = (cppVar_90148 & cppMask_un_5_);
	BIT_VEC cppVar_90149 = (0 << 5) | cppVar_90148;
	cppVar_90149 = (cppVar_90149 & cppMask_un_8_);
	bool cppVar_90151 = (cppVar_90149 == 224);
	BIT_VEC cppVar_90152 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90153 = (cppVar_90152 << 3) | 7;
	cppVar_90153 = (cppVar_90153 & cppMask_un_5_);
	BIT_VEC cppVar_90154 = (0 << 5) | cppVar_90153;
	cppVar_90154 = (cppVar_90154 & cppMask_un_8_);
	bool cppVar_90156 = (cppVar_90154 == 240);
	BIT_VEC cppVar_90158 = (cppVar_90156) ? B : 0;
	BIT_VEC cppVar_90159 = (cppVar_90151) ? ACC : cppVar_90158;
	BIT_VEC cppVar_90160 = (cppVar_90146) ? PSW : cppVar_90159;
	BIT_VEC cppVar_90161 = (cppVar_90141) ? IP : cppVar_90160;
	BIT_VEC cppVar_90162 = (cppVar_90136) ? P3 : cppVar_90161;
	BIT_VEC cppVar_90163 = (cppVar_90131) ? IE : cppVar_90162;
	BIT_VEC cppVar_90164 = (cppVar_90126) ? P2 : cppVar_90163;
	BIT_VEC cppVar_90165 = (cppVar_90121) ? SBUF : cppVar_90164;
	BIT_VEC cppVar_90166 = (cppVar_90116) ? SCON : cppVar_90165;
	BIT_VEC cppVar_90167 = (cppVar_90111) ? P1 : cppVar_90166;
	BIT_VEC cppVar_90168 = (cppVar_90106) ? TH1 : cppVar_90167;
	BIT_VEC cppVar_90169 = (cppVar_90101) ? TL1 : cppVar_90168;
	BIT_VEC cppVar_90170 = (cppVar_90096) ? TH0 : cppVar_90169;
	BIT_VEC cppVar_90171 = (cppVar_90091) ? TL0 : cppVar_90170;
	BIT_VEC cppVar_90172 = (cppVar_90086) ? TMOD : cppVar_90171;
	BIT_VEC cppVar_90173 = (cppVar_90081) ? TCON : cppVar_90172;
	BIT_VEC cppVar_90174 = (cppVar_90076) ? PCON : cppVar_90173;
	BIT_VEC cppVar_90175 = (cppVar_90071) ? DPH : cppVar_90174;
	BIT_VEC cppVar_90176 = (cppVar_90066) ? DPL : cppVar_90175;
	BIT_VEC cppVar_90177 = (cppVar_90061) ? SP : cppVar_90176;
	BIT_VEC cppVar_90178 = (cppVar_90056) ? P0 : cppVar_90177;
	BIT_VEC cppVar_90179 = (cppVar_90047) ? cppVar_90051 : cppVar_90178;
	type_mem cppVar_90180 = IRAM;
	cppVar_90180.wr(cppVar_90039, cppVar_90179);
	type_mem& cppVar_90181 = (cppVar_90037) ? cppVar_90180 : IRAM;
	BIT_VEC cppVar_90182 = ROM.rd(PC);
	bool cppVar_90184 = (cppVar_90182 == 142);
	BIT_VEC cppVar_90186 = PC + 1;
	cppVar_90186 = (cppVar_90186 & cppMask_un_16_);
	BIT_VEC cppVar_90187 = ROM.rd(cppVar_90186);
	BIT_VEC cppVar_90188 = (cppVar_90187 >> 7) & cppMask_un_1_;
	bool cppVar_90190 = (cppVar_90188 == 0);
	BIT_VEC cppVar_90191 = PC + 1;
	cppVar_90191 = (cppVar_90191 & cppMask_un_16_);
	BIT_VEC cppVar_90192 = ROM.rd(cppVar_90191);
	BIT_VEC cppVar_90194 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90196 = (cppVar_90194 << 3) | 6;
	cppVar_90196 = (cppVar_90196 & cppMask_un_5_);
	BIT_VEC cppVar_90197 = (0 << 5) | cppVar_90196;
	cppVar_90197 = (cppVar_90197 & cppMask_un_8_);
	BIT_VEC cppVar_90198 = (cppVar_90197 >> 7) & cppMask_un_1_;
	bool cppVar_90200 = (cppVar_90198 == 0);
	BIT_VEC cppVar_90201 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90202 = (cppVar_90201 << 3) | 6;
	cppVar_90202 = (cppVar_90202 & cppMask_un_5_);
	BIT_VEC cppVar_90203 = (0 << 5) | cppVar_90202;
	cppVar_90203 = (cppVar_90203 & cppMask_un_8_);
	BIT_VEC cppVar_90204 = IRAM.rd(cppVar_90203);
	BIT_VEC cppVar_90205 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90206 = (cppVar_90205 << 3) | 6;
	cppVar_90206 = (cppVar_90206 & cppMask_un_5_);
	BIT_VEC cppVar_90207 = (0 << 5) | cppVar_90206;
	cppVar_90207 = (cppVar_90207 & cppMask_un_8_);
	bool cppVar_90209 = (cppVar_90207 == 128);
	BIT_VEC cppVar_90210 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90211 = (cppVar_90210 << 3) | 6;
	cppVar_90211 = (cppVar_90211 & cppMask_un_5_);
	BIT_VEC cppVar_90212 = (0 << 5) | cppVar_90211;
	cppVar_90212 = (cppVar_90212 & cppMask_un_8_);
	bool cppVar_90214 = (cppVar_90212 == 129);
	BIT_VEC cppVar_90215 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90216 = (cppVar_90215 << 3) | 6;
	cppVar_90216 = (cppVar_90216 & cppMask_un_5_);
	BIT_VEC cppVar_90217 = (0 << 5) | cppVar_90216;
	cppVar_90217 = (cppVar_90217 & cppMask_un_8_);
	bool cppVar_90219 = (cppVar_90217 == 130);
	BIT_VEC cppVar_90220 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90221 = (cppVar_90220 << 3) | 6;
	cppVar_90221 = (cppVar_90221 & cppMask_un_5_);
	BIT_VEC cppVar_90222 = (0 << 5) | cppVar_90221;
	cppVar_90222 = (cppVar_90222 & cppMask_un_8_);
	bool cppVar_90224 = (cppVar_90222 == 131);
	BIT_VEC cppVar_90225 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90226 = (cppVar_90225 << 3) | 6;
	cppVar_90226 = (cppVar_90226 & cppMask_un_5_);
	BIT_VEC cppVar_90227 = (0 << 5) | cppVar_90226;
	cppVar_90227 = (cppVar_90227 & cppMask_un_8_);
	bool cppVar_90229 = (cppVar_90227 == 135);
	BIT_VEC cppVar_90230 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90231 = (cppVar_90230 << 3) | 6;
	cppVar_90231 = (cppVar_90231 & cppMask_un_5_);
	BIT_VEC cppVar_90232 = (0 << 5) | cppVar_90231;
	cppVar_90232 = (cppVar_90232 & cppMask_un_8_);
	bool cppVar_90234 = (cppVar_90232 == 136);
	BIT_VEC cppVar_90235 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90236 = (cppVar_90235 << 3) | 6;
	cppVar_90236 = (cppVar_90236 & cppMask_un_5_);
	BIT_VEC cppVar_90237 = (0 << 5) | cppVar_90236;
	cppVar_90237 = (cppVar_90237 & cppMask_un_8_);
	bool cppVar_90239 = (cppVar_90237 == 137);
	BIT_VEC cppVar_90240 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90241 = (cppVar_90240 << 3) | 6;
	cppVar_90241 = (cppVar_90241 & cppMask_un_5_);
	BIT_VEC cppVar_90242 = (0 << 5) | cppVar_90241;
	cppVar_90242 = (cppVar_90242 & cppMask_un_8_);
	bool cppVar_90244 = (cppVar_90242 == 138);
	BIT_VEC cppVar_90245 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90246 = (cppVar_90245 << 3) | 6;
	cppVar_90246 = (cppVar_90246 & cppMask_un_5_);
	BIT_VEC cppVar_90247 = (0 << 5) | cppVar_90246;
	cppVar_90247 = (cppVar_90247 & cppMask_un_8_);
	bool cppVar_90249 = (cppVar_90247 == 140);
	BIT_VEC cppVar_90250 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90251 = (cppVar_90250 << 3) | 6;
	cppVar_90251 = (cppVar_90251 & cppMask_un_5_);
	BIT_VEC cppVar_90252 = (0 << 5) | cppVar_90251;
	cppVar_90252 = (cppVar_90252 & cppMask_un_8_);
	bool cppVar_90254 = (cppVar_90252 == 139);
	BIT_VEC cppVar_90255 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90256 = (cppVar_90255 << 3) | 6;
	cppVar_90256 = (cppVar_90256 & cppMask_un_5_);
	BIT_VEC cppVar_90257 = (0 << 5) | cppVar_90256;
	cppVar_90257 = (cppVar_90257 & cppMask_un_8_);
	bool cppVar_90259 = (cppVar_90257 == 141);
	BIT_VEC cppVar_90260 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90261 = (cppVar_90260 << 3) | 6;
	cppVar_90261 = (cppVar_90261 & cppMask_un_5_);
	BIT_VEC cppVar_90262 = (0 << 5) | cppVar_90261;
	cppVar_90262 = (cppVar_90262 & cppMask_un_8_);
	bool cppVar_90264 = (cppVar_90262 == 144);
	BIT_VEC cppVar_90265 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90266 = (cppVar_90265 << 3) | 6;
	cppVar_90266 = (cppVar_90266 & cppMask_un_5_);
	BIT_VEC cppVar_90267 = (0 << 5) | cppVar_90266;
	cppVar_90267 = (cppVar_90267 & cppMask_un_8_);
	bool cppVar_90269 = (cppVar_90267 == 152);
	BIT_VEC cppVar_90270 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90271 = (cppVar_90270 << 3) | 6;
	cppVar_90271 = (cppVar_90271 & cppMask_un_5_);
	BIT_VEC cppVar_90272 = (0 << 5) | cppVar_90271;
	cppVar_90272 = (cppVar_90272 & cppMask_un_8_);
	bool cppVar_90274 = (cppVar_90272 == 153);
	BIT_VEC cppVar_90275 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90276 = (cppVar_90275 << 3) | 6;
	cppVar_90276 = (cppVar_90276 & cppMask_un_5_);
	BIT_VEC cppVar_90277 = (0 << 5) | cppVar_90276;
	cppVar_90277 = (cppVar_90277 & cppMask_un_8_);
	bool cppVar_90279 = (cppVar_90277 == 160);
	BIT_VEC cppVar_90280 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90281 = (cppVar_90280 << 3) | 6;
	cppVar_90281 = (cppVar_90281 & cppMask_un_5_);
	BIT_VEC cppVar_90282 = (0 << 5) | cppVar_90281;
	cppVar_90282 = (cppVar_90282 & cppMask_un_8_);
	bool cppVar_90284 = (cppVar_90282 == 168);
	BIT_VEC cppVar_90285 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90286 = (cppVar_90285 << 3) | 6;
	cppVar_90286 = (cppVar_90286 & cppMask_un_5_);
	BIT_VEC cppVar_90287 = (0 << 5) | cppVar_90286;
	cppVar_90287 = (cppVar_90287 & cppMask_un_8_);
	bool cppVar_90289 = (cppVar_90287 == 176);
	BIT_VEC cppVar_90290 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90291 = (cppVar_90290 << 3) | 6;
	cppVar_90291 = (cppVar_90291 & cppMask_un_5_);
	BIT_VEC cppVar_90292 = (0 << 5) | cppVar_90291;
	cppVar_90292 = (cppVar_90292 & cppMask_un_8_);
	bool cppVar_90294 = (cppVar_90292 == 184);
	BIT_VEC cppVar_90295 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90296 = (cppVar_90295 << 3) | 6;
	cppVar_90296 = (cppVar_90296 & cppMask_un_5_);
	BIT_VEC cppVar_90297 = (0 << 5) | cppVar_90296;
	cppVar_90297 = (cppVar_90297 & cppMask_un_8_);
	bool cppVar_90299 = (cppVar_90297 == 208);
	BIT_VEC cppVar_90300 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90301 = (cppVar_90300 << 3) | 6;
	cppVar_90301 = (cppVar_90301 & cppMask_un_5_);
	BIT_VEC cppVar_90302 = (0 << 5) | cppVar_90301;
	cppVar_90302 = (cppVar_90302 & cppMask_un_8_);
	bool cppVar_90304 = (cppVar_90302 == 224);
	BIT_VEC cppVar_90305 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90306 = (cppVar_90305 << 3) | 6;
	cppVar_90306 = (cppVar_90306 & cppMask_un_5_);
	BIT_VEC cppVar_90307 = (0 << 5) | cppVar_90306;
	cppVar_90307 = (cppVar_90307 & cppMask_un_8_);
	bool cppVar_90309 = (cppVar_90307 == 240);
	BIT_VEC cppVar_90311 = (cppVar_90309) ? B : 0;
	BIT_VEC cppVar_90312 = (cppVar_90304) ? ACC : cppVar_90311;
	BIT_VEC cppVar_90313 = (cppVar_90299) ? PSW : cppVar_90312;
	BIT_VEC cppVar_90314 = (cppVar_90294) ? IP : cppVar_90313;
	BIT_VEC cppVar_90315 = (cppVar_90289) ? P3 : cppVar_90314;
	BIT_VEC cppVar_90316 = (cppVar_90284) ? IE : cppVar_90315;
	BIT_VEC cppVar_90317 = (cppVar_90279) ? P2 : cppVar_90316;
	BIT_VEC cppVar_90318 = (cppVar_90274) ? SBUF : cppVar_90317;
	BIT_VEC cppVar_90319 = (cppVar_90269) ? SCON : cppVar_90318;
	BIT_VEC cppVar_90320 = (cppVar_90264) ? P1 : cppVar_90319;
	BIT_VEC cppVar_90321 = (cppVar_90259) ? TH1 : cppVar_90320;
	BIT_VEC cppVar_90322 = (cppVar_90254) ? TL1 : cppVar_90321;
	BIT_VEC cppVar_90323 = (cppVar_90249) ? TH0 : cppVar_90322;
	BIT_VEC cppVar_90324 = (cppVar_90244) ? TL0 : cppVar_90323;
	BIT_VEC cppVar_90325 = (cppVar_90239) ? TMOD : cppVar_90324;
	BIT_VEC cppVar_90326 = (cppVar_90234) ? TCON : cppVar_90325;
	BIT_VEC cppVar_90327 = (cppVar_90229) ? PCON : cppVar_90326;
	BIT_VEC cppVar_90328 = (cppVar_90224) ? DPH : cppVar_90327;
	BIT_VEC cppVar_90329 = (cppVar_90219) ? DPL : cppVar_90328;
	BIT_VEC cppVar_90330 = (cppVar_90214) ? SP : cppVar_90329;
	BIT_VEC cppVar_90331 = (cppVar_90209) ? P0 : cppVar_90330;
	BIT_VEC cppVar_90332 = (cppVar_90200) ? cppVar_90204 : cppVar_90331;
	type_mem cppVar_90333 = IRAM;
	cppVar_90333.wr(cppVar_90192, cppVar_90332);
	type_mem& cppVar_90334 = (cppVar_90190) ? cppVar_90333 : IRAM;
	BIT_VEC cppVar_90335 = ROM.rd(PC);
	bool cppVar_90337 = (cppVar_90335 == 141);
	BIT_VEC cppVar_90339 = PC + 1;
	cppVar_90339 = (cppVar_90339 & cppMask_un_16_);
	BIT_VEC cppVar_90340 = ROM.rd(cppVar_90339);
	BIT_VEC cppVar_90341 = (cppVar_90340 >> 7) & cppMask_un_1_;
	bool cppVar_90343 = (cppVar_90341 == 0);
	BIT_VEC cppVar_90344 = PC + 1;
	cppVar_90344 = (cppVar_90344 & cppMask_un_16_);
	BIT_VEC cppVar_90345 = ROM.rd(cppVar_90344);
	BIT_VEC cppVar_90347 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90349 = (cppVar_90347 << 3) | 5;
	cppVar_90349 = (cppVar_90349 & cppMask_un_5_);
	BIT_VEC cppVar_90350 = (0 << 5) | cppVar_90349;
	cppVar_90350 = (cppVar_90350 & cppMask_un_8_);
	BIT_VEC cppVar_90351 = (cppVar_90350 >> 7) & cppMask_un_1_;
	bool cppVar_90353 = (cppVar_90351 == 0);
	BIT_VEC cppVar_90354 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90355 = (cppVar_90354 << 3) | 5;
	cppVar_90355 = (cppVar_90355 & cppMask_un_5_);
	BIT_VEC cppVar_90356 = (0 << 5) | cppVar_90355;
	cppVar_90356 = (cppVar_90356 & cppMask_un_8_);
	BIT_VEC cppVar_90357 = IRAM.rd(cppVar_90356);
	BIT_VEC cppVar_90358 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90359 = (cppVar_90358 << 3) | 5;
	cppVar_90359 = (cppVar_90359 & cppMask_un_5_);
	BIT_VEC cppVar_90360 = (0 << 5) | cppVar_90359;
	cppVar_90360 = (cppVar_90360 & cppMask_un_8_);
	bool cppVar_90362 = (cppVar_90360 == 128);
	BIT_VEC cppVar_90363 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90364 = (cppVar_90363 << 3) | 5;
	cppVar_90364 = (cppVar_90364 & cppMask_un_5_);
	BIT_VEC cppVar_90365 = (0 << 5) | cppVar_90364;
	cppVar_90365 = (cppVar_90365 & cppMask_un_8_);
	bool cppVar_90367 = (cppVar_90365 == 129);
	BIT_VEC cppVar_90368 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90369 = (cppVar_90368 << 3) | 5;
	cppVar_90369 = (cppVar_90369 & cppMask_un_5_);
	BIT_VEC cppVar_90370 = (0 << 5) | cppVar_90369;
	cppVar_90370 = (cppVar_90370 & cppMask_un_8_);
	bool cppVar_90372 = (cppVar_90370 == 130);
	BIT_VEC cppVar_90373 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90374 = (cppVar_90373 << 3) | 5;
	cppVar_90374 = (cppVar_90374 & cppMask_un_5_);
	BIT_VEC cppVar_90375 = (0 << 5) | cppVar_90374;
	cppVar_90375 = (cppVar_90375 & cppMask_un_8_);
	bool cppVar_90377 = (cppVar_90375 == 131);
	BIT_VEC cppVar_90378 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90379 = (cppVar_90378 << 3) | 5;
	cppVar_90379 = (cppVar_90379 & cppMask_un_5_);
	BIT_VEC cppVar_90380 = (0 << 5) | cppVar_90379;
	cppVar_90380 = (cppVar_90380 & cppMask_un_8_);
	bool cppVar_90382 = (cppVar_90380 == 135);
	BIT_VEC cppVar_90383 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90384 = (cppVar_90383 << 3) | 5;
	cppVar_90384 = (cppVar_90384 & cppMask_un_5_);
	BIT_VEC cppVar_90385 = (0 << 5) | cppVar_90384;
	cppVar_90385 = (cppVar_90385 & cppMask_un_8_);
	bool cppVar_90387 = (cppVar_90385 == 136);
	BIT_VEC cppVar_90388 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90389 = (cppVar_90388 << 3) | 5;
	cppVar_90389 = (cppVar_90389 & cppMask_un_5_);
	BIT_VEC cppVar_90390 = (0 << 5) | cppVar_90389;
	cppVar_90390 = (cppVar_90390 & cppMask_un_8_);
	bool cppVar_90392 = (cppVar_90390 == 137);
	BIT_VEC cppVar_90393 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90394 = (cppVar_90393 << 3) | 5;
	cppVar_90394 = (cppVar_90394 & cppMask_un_5_);
	BIT_VEC cppVar_90395 = (0 << 5) | cppVar_90394;
	cppVar_90395 = (cppVar_90395 & cppMask_un_8_);
	bool cppVar_90397 = (cppVar_90395 == 138);
	BIT_VEC cppVar_90398 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90399 = (cppVar_90398 << 3) | 5;
	cppVar_90399 = (cppVar_90399 & cppMask_un_5_);
	BIT_VEC cppVar_90400 = (0 << 5) | cppVar_90399;
	cppVar_90400 = (cppVar_90400 & cppMask_un_8_);
	bool cppVar_90402 = (cppVar_90400 == 140);
	BIT_VEC cppVar_90403 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90404 = (cppVar_90403 << 3) | 5;
	cppVar_90404 = (cppVar_90404 & cppMask_un_5_);
	BIT_VEC cppVar_90405 = (0 << 5) | cppVar_90404;
	cppVar_90405 = (cppVar_90405 & cppMask_un_8_);
	bool cppVar_90407 = (cppVar_90405 == 139);
	BIT_VEC cppVar_90408 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90409 = (cppVar_90408 << 3) | 5;
	cppVar_90409 = (cppVar_90409 & cppMask_un_5_);
	BIT_VEC cppVar_90410 = (0 << 5) | cppVar_90409;
	cppVar_90410 = (cppVar_90410 & cppMask_un_8_);
	bool cppVar_90412 = (cppVar_90410 == 141);
	BIT_VEC cppVar_90413 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90414 = (cppVar_90413 << 3) | 5;
	cppVar_90414 = (cppVar_90414 & cppMask_un_5_);
	BIT_VEC cppVar_90415 = (0 << 5) | cppVar_90414;
	cppVar_90415 = (cppVar_90415 & cppMask_un_8_);
	bool cppVar_90417 = (cppVar_90415 == 144);
	BIT_VEC cppVar_90418 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90419 = (cppVar_90418 << 3) | 5;
	cppVar_90419 = (cppVar_90419 & cppMask_un_5_);
	BIT_VEC cppVar_90420 = (0 << 5) | cppVar_90419;
	cppVar_90420 = (cppVar_90420 & cppMask_un_8_);
	bool cppVar_90422 = (cppVar_90420 == 152);
	BIT_VEC cppVar_90423 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90424 = (cppVar_90423 << 3) | 5;
	cppVar_90424 = (cppVar_90424 & cppMask_un_5_);
	BIT_VEC cppVar_90425 = (0 << 5) | cppVar_90424;
	cppVar_90425 = (cppVar_90425 & cppMask_un_8_);
	bool cppVar_90427 = (cppVar_90425 == 153);
	BIT_VEC cppVar_90428 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90429 = (cppVar_90428 << 3) | 5;
	cppVar_90429 = (cppVar_90429 & cppMask_un_5_);
	BIT_VEC cppVar_90430 = (0 << 5) | cppVar_90429;
	cppVar_90430 = (cppVar_90430 & cppMask_un_8_);
	bool cppVar_90432 = (cppVar_90430 == 160);
	BIT_VEC cppVar_90433 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90434 = (cppVar_90433 << 3) | 5;
	cppVar_90434 = (cppVar_90434 & cppMask_un_5_);
	BIT_VEC cppVar_90435 = (0 << 5) | cppVar_90434;
	cppVar_90435 = (cppVar_90435 & cppMask_un_8_);
	bool cppVar_90437 = (cppVar_90435 == 168);
	BIT_VEC cppVar_90438 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90439 = (cppVar_90438 << 3) | 5;
	cppVar_90439 = (cppVar_90439 & cppMask_un_5_);
	BIT_VEC cppVar_90440 = (0 << 5) | cppVar_90439;
	cppVar_90440 = (cppVar_90440 & cppMask_un_8_);
	bool cppVar_90442 = (cppVar_90440 == 176);
	BIT_VEC cppVar_90443 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90444 = (cppVar_90443 << 3) | 5;
	cppVar_90444 = (cppVar_90444 & cppMask_un_5_);
	BIT_VEC cppVar_90445 = (0 << 5) | cppVar_90444;
	cppVar_90445 = (cppVar_90445 & cppMask_un_8_);
	bool cppVar_90447 = (cppVar_90445 == 184);
	BIT_VEC cppVar_90448 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90449 = (cppVar_90448 << 3) | 5;
	cppVar_90449 = (cppVar_90449 & cppMask_un_5_);
	BIT_VEC cppVar_90450 = (0 << 5) | cppVar_90449;
	cppVar_90450 = (cppVar_90450 & cppMask_un_8_);
	bool cppVar_90452 = (cppVar_90450 == 208);
	BIT_VEC cppVar_90453 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90454 = (cppVar_90453 << 3) | 5;
	cppVar_90454 = (cppVar_90454 & cppMask_un_5_);
	BIT_VEC cppVar_90455 = (0 << 5) | cppVar_90454;
	cppVar_90455 = (cppVar_90455 & cppMask_un_8_);
	bool cppVar_90457 = (cppVar_90455 == 224);
	BIT_VEC cppVar_90458 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90459 = (cppVar_90458 << 3) | 5;
	cppVar_90459 = (cppVar_90459 & cppMask_un_5_);
	BIT_VEC cppVar_90460 = (0 << 5) | cppVar_90459;
	cppVar_90460 = (cppVar_90460 & cppMask_un_8_);
	bool cppVar_90462 = (cppVar_90460 == 240);
	BIT_VEC cppVar_90464 = (cppVar_90462) ? B : 0;
	BIT_VEC cppVar_90465 = (cppVar_90457) ? ACC : cppVar_90464;
	BIT_VEC cppVar_90466 = (cppVar_90452) ? PSW : cppVar_90465;
	BIT_VEC cppVar_90467 = (cppVar_90447) ? IP : cppVar_90466;
	BIT_VEC cppVar_90468 = (cppVar_90442) ? P3 : cppVar_90467;
	BIT_VEC cppVar_90469 = (cppVar_90437) ? IE : cppVar_90468;
	BIT_VEC cppVar_90470 = (cppVar_90432) ? P2 : cppVar_90469;
	BIT_VEC cppVar_90471 = (cppVar_90427) ? SBUF : cppVar_90470;
	BIT_VEC cppVar_90472 = (cppVar_90422) ? SCON : cppVar_90471;
	BIT_VEC cppVar_90473 = (cppVar_90417) ? P1 : cppVar_90472;
	BIT_VEC cppVar_90474 = (cppVar_90412) ? TH1 : cppVar_90473;
	BIT_VEC cppVar_90475 = (cppVar_90407) ? TL1 : cppVar_90474;
	BIT_VEC cppVar_90476 = (cppVar_90402) ? TH0 : cppVar_90475;
	BIT_VEC cppVar_90477 = (cppVar_90397) ? TL0 : cppVar_90476;
	BIT_VEC cppVar_90478 = (cppVar_90392) ? TMOD : cppVar_90477;
	BIT_VEC cppVar_90479 = (cppVar_90387) ? TCON : cppVar_90478;
	BIT_VEC cppVar_90480 = (cppVar_90382) ? PCON : cppVar_90479;
	BIT_VEC cppVar_90481 = (cppVar_90377) ? DPH : cppVar_90480;
	BIT_VEC cppVar_90482 = (cppVar_90372) ? DPL : cppVar_90481;
	BIT_VEC cppVar_90483 = (cppVar_90367) ? SP : cppVar_90482;
	BIT_VEC cppVar_90484 = (cppVar_90362) ? P0 : cppVar_90483;
	BIT_VEC cppVar_90485 = (cppVar_90353) ? cppVar_90357 : cppVar_90484;
	type_mem cppVar_90486 = IRAM;
	cppVar_90486.wr(cppVar_90345, cppVar_90485);
	type_mem& cppVar_90487 = (cppVar_90343) ? cppVar_90486 : IRAM;
	BIT_VEC cppVar_90488 = ROM.rd(PC);
	bool cppVar_90490 = (cppVar_90488 == 140);
	BIT_VEC cppVar_90492 = PC + 1;
	cppVar_90492 = (cppVar_90492 & cppMask_un_16_);
	BIT_VEC cppVar_90493 = ROM.rd(cppVar_90492);
	BIT_VEC cppVar_90494 = (cppVar_90493 >> 7) & cppMask_un_1_;
	bool cppVar_90496 = (cppVar_90494 == 0);
	BIT_VEC cppVar_90497 = PC + 1;
	cppVar_90497 = (cppVar_90497 & cppMask_un_16_);
	BIT_VEC cppVar_90498 = ROM.rd(cppVar_90497);
	BIT_VEC cppVar_90500 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90502 = (cppVar_90500 << 3) | 4;
	cppVar_90502 = (cppVar_90502 & cppMask_un_5_);
	BIT_VEC cppVar_90503 = (0 << 5) | cppVar_90502;
	cppVar_90503 = (cppVar_90503 & cppMask_un_8_);
	BIT_VEC cppVar_90504 = (cppVar_90503 >> 7) & cppMask_un_1_;
	bool cppVar_90506 = (cppVar_90504 == 0);
	BIT_VEC cppVar_90507 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90508 = (cppVar_90507 << 3) | 4;
	cppVar_90508 = (cppVar_90508 & cppMask_un_5_);
	BIT_VEC cppVar_90509 = (0 << 5) | cppVar_90508;
	cppVar_90509 = (cppVar_90509 & cppMask_un_8_);
	BIT_VEC cppVar_90510 = IRAM.rd(cppVar_90509);
	BIT_VEC cppVar_90511 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90512 = (cppVar_90511 << 3) | 4;
	cppVar_90512 = (cppVar_90512 & cppMask_un_5_);
	BIT_VEC cppVar_90513 = (0 << 5) | cppVar_90512;
	cppVar_90513 = (cppVar_90513 & cppMask_un_8_);
	bool cppVar_90515 = (cppVar_90513 == 128);
	BIT_VEC cppVar_90516 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90517 = (cppVar_90516 << 3) | 4;
	cppVar_90517 = (cppVar_90517 & cppMask_un_5_);
	BIT_VEC cppVar_90518 = (0 << 5) | cppVar_90517;
	cppVar_90518 = (cppVar_90518 & cppMask_un_8_);
	bool cppVar_90520 = (cppVar_90518 == 129);
	BIT_VEC cppVar_90521 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90522 = (cppVar_90521 << 3) | 4;
	cppVar_90522 = (cppVar_90522 & cppMask_un_5_);
	BIT_VEC cppVar_90523 = (0 << 5) | cppVar_90522;
	cppVar_90523 = (cppVar_90523 & cppMask_un_8_);
	bool cppVar_90525 = (cppVar_90523 == 130);
	BIT_VEC cppVar_90526 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90527 = (cppVar_90526 << 3) | 4;
	cppVar_90527 = (cppVar_90527 & cppMask_un_5_);
	BIT_VEC cppVar_90528 = (0 << 5) | cppVar_90527;
	cppVar_90528 = (cppVar_90528 & cppMask_un_8_);
	bool cppVar_90530 = (cppVar_90528 == 131);
	BIT_VEC cppVar_90531 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90532 = (cppVar_90531 << 3) | 4;
	cppVar_90532 = (cppVar_90532 & cppMask_un_5_);
	BIT_VEC cppVar_90533 = (0 << 5) | cppVar_90532;
	cppVar_90533 = (cppVar_90533 & cppMask_un_8_);
	bool cppVar_90535 = (cppVar_90533 == 135);
	BIT_VEC cppVar_90536 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90537 = (cppVar_90536 << 3) | 4;
	cppVar_90537 = (cppVar_90537 & cppMask_un_5_);
	BIT_VEC cppVar_90538 = (0 << 5) | cppVar_90537;
	cppVar_90538 = (cppVar_90538 & cppMask_un_8_);
	bool cppVar_90540 = (cppVar_90538 == 136);
	BIT_VEC cppVar_90541 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90542 = (cppVar_90541 << 3) | 4;
	cppVar_90542 = (cppVar_90542 & cppMask_un_5_);
	BIT_VEC cppVar_90543 = (0 << 5) | cppVar_90542;
	cppVar_90543 = (cppVar_90543 & cppMask_un_8_);
	bool cppVar_90545 = (cppVar_90543 == 137);
	BIT_VEC cppVar_90546 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90547 = (cppVar_90546 << 3) | 4;
	cppVar_90547 = (cppVar_90547 & cppMask_un_5_);
	BIT_VEC cppVar_90548 = (0 << 5) | cppVar_90547;
	cppVar_90548 = (cppVar_90548 & cppMask_un_8_);
	bool cppVar_90550 = (cppVar_90548 == 138);
	BIT_VEC cppVar_90551 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90552 = (cppVar_90551 << 3) | 4;
	cppVar_90552 = (cppVar_90552 & cppMask_un_5_);
	BIT_VEC cppVar_90553 = (0 << 5) | cppVar_90552;
	cppVar_90553 = (cppVar_90553 & cppMask_un_8_);
	bool cppVar_90555 = (cppVar_90553 == 140);
	BIT_VEC cppVar_90556 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90557 = (cppVar_90556 << 3) | 4;
	cppVar_90557 = (cppVar_90557 & cppMask_un_5_);
	BIT_VEC cppVar_90558 = (0 << 5) | cppVar_90557;
	cppVar_90558 = (cppVar_90558 & cppMask_un_8_);
	bool cppVar_90560 = (cppVar_90558 == 139);
	BIT_VEC cppVar_90561 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90562 = (cppVar_90561 << 3) | 4;
	cppVar_90562 = (cppVar_90562 & cppMask_un_5_);
	BIT_VEC cppVar_90563 = (0 << 5) | cppVar_90562;
	cppVar_90563 = (cppVar_90563 & cppMask_un_8_);
	bool cppVar_90565 = (cppVar_90563 == 141);
	BIT_VEC cppVar_90566 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90567 = (cppVar_90566 << 3) | 4;
	cppVar_90567 = (cppVar_90567 & cppMask_un_5_);
	BIT_VEC cppVar_90568 = (0 << 5) | cppVar_90567;
	cppVar_90568 = (cppVar_90568 & cppMask_un_8_);
	bool cppVar_90570 = (cppVar_90568 == 144);
	BIT_VEC cppVar_90571 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90572 = (cppVar_90571 << 3) | 4;
	cppVar_90572 = (cppVar_90572 & cppMask_un_5_);
	BIT_VEC cppVar_90573 = (0 << 5) | cppVar_90572;
	cppVar_90573 = (cppVar_90573 & cppMask_un_8_);
	bool cppVar_90575 = (cppVar_90573 == 152);
	BIT_VEC cppVar_90576 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90577 = (cppVar_90576 << 3) | 4;
	cppVar_90577 = (cppVar_90577 & cppMask_un_5_);
	BIT_VEC cppVar_90578 = (0 << 5) | cppVar_90577;
	cppVar_90578 = (cppVar_90578 & cppMask_un_8_);
	bool cppVar_90580 = (cppVar_90578 == 153);
	BIT_VEC cppVar_90581 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90582 = (cppVar_90581 << 3) | 4;
	cppVar_90582 = (cppVar_90582 & cppMask_un_5_);
	BIT_VEC cppVar_90583 = (0 << 5) | cppVar_90582;
	cppVar_90583 = (cppVar_90583 & cppMask_un_8_);
	bool cppVar_90585 = (cppVar_90583 == 160);
	BIT_VEC cppVar_90586 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90587 = (cppVar_90586 << 3) | 4;
	cppVar_90587 = (cppVar_90587 & cppMask_un_5_);
	BIT_VEC cppVar_90588 = (0 << 5) | cppVar_90587;
	cppVar_90588 = (cppVar_90588 & cppMask_un_8_);
	bool cppVar_90590 = (cppVar_90588 == 168);
	BIT_VEC cppVar_90591 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90592 = (cppVar_90591 << 3) | 4;
	cppVar_90592 = (cppVar_90592 & cppMask_un_5_);
	BIT_VEC cppVar_90593 = (0 << 5) | cppVar_90592;
	cppVar_90593 = (cppVar_90593 & cppMask_un_8_);
	bool cppVar_90595 = (cppVar_90593 == 176);
	BIT_VEC cppVar_90596 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90597 = (cppVar_90596 << 3) | 4;
	cppVar_90597 = (cppVar_90597 & cppMask_un_5_);
	BIT_VEC cppVar_90598 = (0 << 5) | cppVar_90597;
	cppVar_90598 = (cppVar_90598 & cppMask_un_8_);
	bool cppVar_90600 = (cppVar_90598 == 184);
	BIT_VEC cppVar_90601 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90602 = (cppVar_90601 << 3) | 4;
	cppVar_90602 = (cppVar_90602 & cppMask_un_5_);
	BIT_VEC cppVar_90603 = (0 << 5) | cppVar_90602;
	cppVar_90603 = (cppVar_90603 & cppMask_un_8_);
	bool cppVar_90605 = (cppVar_90603 == 208);
	BIT_VEC cppVar_90606 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90607 = (cppVar_90606 << 3) | 4;
	cppVar_90607 = (cppVar_90607 & cppMask_un_5_);
	BIT_VEC cppVar_90608 = (0 << 5) | cppVar_90607;
	cppVar_90608 = (cppVar_90608 & cppMask_un_8_);
	bool cppVar_90610 = (cppVar_90608 == 224);
	BIT_VEC cppVar_90611 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90612 = (cppVar_90611 << 3) | 4;
	cppVar_90612 = (cppVar_90612 & cppMask_un_5_);
	BIT_VEC cppVar_90613 = (0 << 5) | cppVar_90612;
	cppVar_90613 = (cppVar_90613 & cppMask_un_8_);
	bool cppVar_90615 = (cppVar_90613 == 240);
	BIT_VEC cppVar_90617 = (cppVar_90615) ? B : 0;
	BIT_VEC cppVar_90618 = (cppVar_90610) ? ACC : cppVar_90617;
	BIT_VEC cppVar_90619 = (cppVar_90605) ? PSW : cppVar_90618;
	BIT_VEC cppVar_90620 = (cppVar_90600) ? IP : cppVar_90619;
	BIT_VEC cppVar_90621 = (cppVar_90595) ? P3 : cppVar_90620;
	BIT_VEC cppVar_90622 = (cppVar_90590) ? IE : cppVar_90621;
	BIT_VEC cppVar_90623 = (cppVar_90585) ? P2 : cppVar_90622;
	BIT_VEC cppVar_90624 = (cppVar_90580) ? SBUF : cppVar_90623;
	BIT_VEC cppVar_90625 = (cppVar_90575) ? SCON : cppVar_90624;
	BIT_VEC cppVar_90626 = (cppVar_90570) ? P1 : cppVar_90625;
	BIT_VEC cppVar_90627 = (cppVar_90565) ? TH1 : cppVar_90626;
	BIT_VEC cppVar_90628 = (cppVar_90560) ? TL1 : cppVar_90627;
	BIT_VEC cppVar_90629 = (cppVar_90555) ? TH0 : cppVar_90628;
	BIT_VEC cppVar_90630 = (cppVar_90550) ? TL0 : cppVar_90629;
	BIT_VEC cppVar_90631 = (cppVar_90545) ? TMOD : cppVar_90630;
	BIT_VEC cppVar_90632 = (cppVar_90540) ? TCON : cppVar_90631;
	BIT_VEC cppVar_90633 = (cppVar_90535) ? PCON : cppVar_90632;
	BIT_VEC cppVar_90634 = (cppVar_90530) ? DPH : cppVar_90633;
	BIT_VEC cppVar_90635 = (cppVar_90525) ? DPL : cppVar_90634;
	BIT_VEC cppVar_90636 = (cppVar_90520) ? SP : cppVar_90635;
	BIT_VEC cppVar_90637 = (cppVar_90515) ? P0 : cppVar_90636;
	BIT_VEC cppVar_90638 = (cppVar_90506) ? cppVar_90510 : cppVar_90637;
	type_mem cppVar_90639 = IRAM;
	cppVar_90639.wr(cppVar_90498, cppVar_90638);
	type_mem& cppVar_90640 = (cppVar_90496) ? cppVar_90639 : IRAM;
	BIT_VEC cppVar_90641 = ROM.rd(PC);
	bool cppVar_90643 = (cppVar_90641 == 139);
	BIT_VEC cppVar_90645 = PC + 1;
	cppVar_90645 = (cppVar_90645 & cppMask_un_16_);
	BIT_VEC cppVar_90646 = ROM.rd(cppVar_90645);
	BIT_VEC cppVar_90647 = (cppVar_90646 >> 7) & cppMask_un_1_;
	bool cppVar_90649 = (cppVar_90647 == 0);
	BIT_VEC cppVar_90650 = PC + 1;
	cppVar_90650 = (cppVar_90650 & cppMask_un_16_);
	BIT_VEC cppVar_90651 = ROM.rd(cppVar_90650);
	BIT_VEC cppVar_90653 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90655 = (cppVar_90653 << 3) | 3;
	cppVar_90655 = (cppVar_90655 & cppMask_un_5_);
	BIT_VEC cppVar_90656 = (0 << 5) | cppVar_90655;
	cppVar_90656 = (cppVar_90656 & cppMask_un_8_);
	BIT_VEC cppVar_90657 = (cppVar_90656 >> 7) & cppMask_un_1_;
	bool cppVar_90659 = (cppVar_90657 == 0);
	BIT_VEC cppVar_90660 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90661 = (cppVar_90660 << 3) | 3;
	cppVar_90661 = (cppVar_90661 & cppMask_un_5_);
	BIT_VEC cppVar_90662 = (0 << 5) | cppVar_90661;
	cppVar_90662 = (cppVar_90662 & cppMask_un_8_);
	BIT_VEC cppVar_90663 = IRAM.rd(cppVar_90662);
	BIT_VEC cppVar_90664 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90665 = (cppVar_90664 << 3) | 3;
	cppVar_90665 = (cppVar_90665 & cppMask_un_5_);
	BIT_VEC cppVar_90666 = (0 << 5) | cppVar_90665;
	cppVar_90666 = (cppVar_90666 & cppMask_un_8_);
	bool cppVar_90668 = (cppVar_90666 == 128);
	BIT_VEC cppVar_90669 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90670 = (cppVar_90669 << 3) | 3;
	cppVar_90670 = (cppVar_90670 & cppMask_un_5_);
	BIT_VEC cppVar_90671 = (0 << 5) | cppVar_90670;
	cppVar_90671 = (cppVar_90671 & cppMask_un_8_);
	bool cppVar_90673 = (cppVar_90671 == 129);
	BIT_VEC cppVar_90674 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90675 = (cppVar_90674 << 3) | 3;
	cppVar_90675 = (cppVar_90675 & cppMask_un_5_);
	BIT_VEC cppVar_90676 = (0 << 5) | cppVar_90675;
	cppVar_90676 = (cppVar_90676 & cppMask_un_8_);
	bool cppVar_90678 = (cppVar_90676 == 130);
	BIT_VEC cppVar_90679 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90680 = (cppVar_90679 << 3) | 3;
	cppVar_90680 = (cppVar_90680 & cppMask_un_5_);
	BIT_VEC cppVar_90681 = (0 << 5) | cppVar_90680;
	cppVar_90681 = (cppVar_90681 & cppMask_un_8_);
	bool cppVar_90683 = (cppVar_90681 == 131);
	BIT_VEC cppVar_90684 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90685 = (cppVar_90684 << 3) | 3;
	cppVar_90685 = (cppVar_90685 & cppMask_un_5_);
	BIT_VEC cppVar_90686 = (0 << 5) | cppVar_90685;
	cppVar_90686 = (cppVar_90686 & cppMask_un_8_);
	bool cppVar_90688 = (cppVar_90686 == 135);
	BIT_VEC cppVar_90689 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90690 = (cppVar_90689 << 3) | 3;
	cppVar_90690 = (cppVar_90690 & cppMask_un_5_);
	BIT_VEC cppVar_90691 = (0 << 5) | cppVar_90690;
	cppVar_90691 = (cppVar_90691 & cppMask_un_8_);
	bool cppVar_90693 = (cppVar_90691 == 136);
	BIT_VEC cppVar_90694 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90695 = (cppVar_90694 << 3) | 3;
	cppVar_90695 = (cppVar_90695 & cppMask_un_5_);
	BIT_VEC cppVar_90696 = (0 << 5) | cppVar_90695;
	cppVar_90696 = (cppVar_90696 & cppMask_un_8_);
	bool cppVar_90698 = (cppVar_90696 == 137);
	BIT_VEC cppVar_90699 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90700 = (cppVar_90699 << 3) | 3;
	cppVar_90700 = (cppVar_90700 & cppMask_un_5_);
	BIT_VEC cppVar_90701 = (0 << 5) | cppVar_90700;
	cppVar_90701 = (cppVar_90701 & cppMask_un_8_);
	bool cppVar_90703 = (cppVar_90701 == 138);
	BIT_VEC cppVar_90704 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90705 = (cppVar_90704 << 3) | 3;
	cppVar_90705 = (cppVar_90705 & cppMask_un_5_);
	BIT_VEC cppVar_90706 = (0 << 5) | cppVar_90705;
	cppVar_90706 = (cppVar_90706 & cppMask_un_8_);
	bool cppVar_90708 = (cppVar_90706 == 140);
	BIT_VEC cppVar_90709 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90710 = (cppVar_90709 << 3) | 3;
	cppVar_90710 = (cppVar_90710 & cppMask_un_5_);
	BIT_VEC cppVar_90711 = (0 << 5) | cppVar_90710;
	cppVar_90711 = (cppVar_90711 & cppMask_un_8_);
	bool cppVar_90713 = (cppVar_90711 == 139);
	BIT_VEC cppVar_90714 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90715 = (cppVar_90714 << 3) | 3;
	cppVar_90715 = (cppVar_90715 & cppMask_un_5_);
	BIT_VEC cppVar_90716 = (0 << 5) | cppVar_90715;
	cppVar_90716 = (cppVar_90716 & cppMask_un_8_);
	bool cppVar_90718 = (cppVar_90716 == 141);
	BIT_VEC cppVar_90719 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90720 = (cppVar_90719 << 3) | 3;
	cppVar_90720 = (cppVar_90720 & cppMask_un_5_);
	BIT_VEC cppVar_90721 = (0 << 5) | cppVar_90720;
	cppVar_90721 = (cppVar_90721 & cppMask_un_8_);
	bool cppVar_90723 = (cppVar_90721 == 144);
	BIT_VEC cppVar_90724 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90725 = (cppVar_90724 << 3) | 3;
	cppVar_90725 = (cppVar_90725 & cppMask_un_5_);
	BIT_VEC cppVar_90726 = (0 << 5) | cppVar_90725;
	cppVar_90726 = (cppVar_90726 & cppMask_un_8_);
	bool cppVar_90728 = (cppVar_90726 == 152);
	BIT_VEC cppVar_90729 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90730 = (cppVar_90729 << 3) | 3;
	cppVar_90730 = (cppVar_90730 & cppMask_un_5_);
	BIT_VEC cppVar_90731 = (0 << 5) | cppVar_90730;
	cppVar_90731 = (cppVar_90731 & cppMask_un_8_);
	bool cppVar_90733 = (cppVar_90731 == 153);
	BIT_VEC cppVar_90734 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90735 = (cppVar_90734 << 3) | 3;
	cppVar_90735 = (cppVar_90735 & cppMask_un_5_);
	BIT_VEC cppVar_90736 = (0 << 5) | cppVar_90735;
	cppVar_90736 = (cppVar_90736 & cppMask_un_8_);
	bool cppVar_90738 = (cppVar_90736 == 160);
	BIT_VEC cppVar_90739 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90740 = (cppVar_90739 << 3) | 3;
	cppVar_90740 = (cppVar_90740 & cppMask_un_5_);
	BIT_VEC cppVar_90741 = (0 << 5) | cppVar_90740;
	cppVar_90741 = (cppVar_90741 & cppMask_un_8_);
	bool cppVar_90743 = (cppVar_90741 == 168);
	BIT_VEC cppVar_90744 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90745 = (cppVar_90744 << 3) | 3;
	cppVar_90745 = (cppVar_90745 & cppMask_un_5_);
	BIT_VEC cppVar_90746 = (0 << 5) | cppVar_90745;
	cppVar_90746 = (cppVar_90746 & cppMask_un_8_);
	bool cppVar_90748 = (cppVar_90746 == 176);
	BIT_VEC cppVar_90749 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90750 = (cppVar_90749 << 3) | 3;
	cppVar_90750 = (cppVar_90750 & cppMask_un_5_);
	BIT_VEC cppVar_90751 = (0 << 5) | cppVar_90750;
	cppVar_90751 = (cppVar_90751 & cppMask_un_8_);
	bool cppVar_90753 = (cppVar_90751 == 184);
	BIT_VEC cppVar_90754 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90755 = (cppVar_90754 << 3) | 3;
	cppVar_90755 = (cppVar_90755 & cppMask_un_5_);
	BIT_VEC cppVar_90756 = (0 << 5) | cppVar_90755;
	cppVar_90756 = (cppVar_90756 & cppMask_un_8_);
	bool cppVar_90758 = (cppVar_90756 == 208);
	BIT_VEC cppVar_90759 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90760 = (cppVar_90759 << 3) | 3;
	cppVar_90760 = (cppVar_90760 & cppMask_un_5_);
	BIT_VEC cppVar_90761 = (0 << 5) | cppVar_90760;
	cppVar_90761 = (cppVar_90761 & cppMask_un_8_);
	bool cppVar_90763 = (cppVar_90761 == 224);
	BIT_VEC cppVar_90764 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90765 = (cppVar_90764 << 3) | 3;
	cppVar_90765 = (cppVar_90765 & cppMask_un_5_);
	BIT_VEC cppVar_90766 = (0 << 5) | cppVar_90765;
	cppVar_90766 = (cppVar_90766 & cppMask_un_8_);
	bool cppVar_90768 = (cppVar_90766 == 240);
	BIT_VEC cppVar_90770 = (cppVar_90768) ? B : 0;
	BIT_VEC cppVar_90771 = (cppVar_90763) ? ACC : cppVar_90770;
	BIT_VEC cppVar_90772 = (cppVar_90758) ? PSW : cppVar_90771;
	BIT_VEC cppVar_90773 = (cppVar_90753) ? IP : cppVar_90772;
	BIT_VEC cppVar_90774 = (cppVar_90748) ? P3 : cppVar_90773;
	BIT_VEC cppVar_90775 = (cppVar_90743) ? IE : cppVar_90774;
	BIT_VEC cppVar_90776 = (cppVar_90738) ? P2 : cppVar_90775;
	BIT_VEC cppVar_90777 = (cppVar_90733) ? SBUF : cppVar_90776;
	BIT_VEC cppVar_90778 = (cppVar_90728) ? SCON : cppVar_90777;
	BIT_VEC cppVar_90779 = (cppVar_90723) ? P1 : cppVar_90778;
	BIT_VEC cppVar_90780 = (cppVar_90718) ? TH1 : cppVar_90779;
	BIT_VEC cppVar_90781 = (cppVar_90713) ? TL1 : cppVar_90780;
	BIT_VEC cppVar_90782 = (cppVar_90708) ? TH0 : cppVar_90781;
	BIT_VEC cppVar_90783 = (cppVar_90703) ? TL0 : cppVar_90782;
	BIT_VEC cppVar_90784 = (cppVar_90698) ? TMOD : cppVar_90783;
	BIT_VEC cppVar_90785 = (cppVar_90693) ? TCON : cppVar_90784;
	BIT_VEC cppVar_90786 = (cppVar_90688) ? PCON : cppVar_90785;
	BIT_VEC cppVar_90787 = (cppVar_90683) ? DPH : cppVar_90786;
	BIT_VEC cppVar_90788 = (cppVar_90678) ? DPL : cppVar_90787;
	BIT_VEC cppVar_90789 = (cppVar_90673) ? SP : cppVar_90788;
	BIT_VEC cppVar_90790 = (cppVar_90668) ? P0 : cppVar_90789;
	BIT_VEC cppVar_90791 = (cppVar_90659) ? cppVar_90663 : cppVar_90790;
	type_mem cppVar_90792 = IRAM;
	cppVar_90792.wr(cppVar_90651, cppVar_90791);
	type_mem& cppVar_90793 = (cppVar_90649) ? cppVar_90792 : IRAM;
	BIT_VEC cppVar_90794 = ROM.rd(PC);
	bool cppVar_90796 = (cppVar_90794 == 138);
	BIT_VEC cppVar_90798 = PC + 1;
	cppVar_90798 = (cppVar_90798 & cppMask_un_16_);
	BIT_VEC cppVar_90799 = ROM.rd(cppVar_90798);
	BIT_VEC cppVar_90800 = (cppVar_90799 >> 7) & cppMask_un_1_;
	bool cppVar_90802 = (cppVar_90800 == 0);
	BIT_VEC cppVar_90803 = PC + 1;
	cppVar_90803 = (cppVar_90803 & cppMask_un_16_);
	BIT_VEC cppVar_90804 = ROM.rd(cppVar_90803);
	BIT_VEC cppVar_90806 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90808 = (cppVar_90806 << 3) | 2;
	cppVar_90808 = (cppVar_90808 & cppMask_un_5_);
	BIT_VEC cppVar_90809 = (0 << 5) | cppVar_90808;
	cppVar_90809 = (cppVar_90809 & cppMask_un_8_);
	BIT_VEC cppVar_90810 = (cppVar_90809 >> 7) & cppMask_un_1_;
	bool cppVar_90812 = (cppVar_90810 == 0);
	BIT_VEC cppVar_90813 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90814 = (cppVar_90813 << 3) | 2;
	cppVar_90814 = (cppVar_90814 & cppMask_un_5_);
	BIT_VEC cppVar_90815 = (0 << 5) | cppVar_90814;
	cppVar_90815 = (cppVar_90815 & cppMask_un_8_);
	BIT_VEC cppVar_90816 = IRAM.rd(cppVar_90815);
	BIT_VEC cppVar_90817 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90818 = (cppVar_90817 << 3) | 2;
	cppVar_90818 = (cppVar_90818 & cppMask_un_5_);
	BIT_VEC cppVar_90819 = (0 << 5) | cppVar_90818;
	cppVar_90819 = (cppVar_90819 & cppMask_un_8_);
	bool cppVar_90821 = (cppVar_90819 == 128);
	BIT_VEC cppVar_90822 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90823 = (cppVar_90822 << 3) | 2;
	cppVar_90823 = (cppVar_90823 & cppMask_un_5_);
	BIT_VEC cppVar_90824 = (0 << 5) | cppVar_90823;
	cppVar_90824 = (cppVar_90824 & cppMask_un_8_);
	bool cppVar_90826 = (cppVar_90824 == 129);
	BIT_VEC cppVar_90827 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90828 = (cppVar_90827 << 3) | 2;
	cppVar_90828 = (cppVar_90828 & cppMask_un_5_);
	BIT_VEC cppVar_90829 = (0 << 5) | cppVar_90828;
	cppVar_90829 = (cppVar_90829 & cppMask_un_8_);
	bool cppVar_90831 = (cppVar_90829 == 130);
	BIT_VEC cppVar_90832 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90833 = (cppVar_90832 << 3) | 2;
	cppVar_90833 = (cppVar_90833 & cppMask_un_5_);
	BIT_VEC cppVar_90834 = (0 << 5) | cppVar_90833;
	cppVar_90834 = (cppVar_90834 & cppMask_un_8_);
	bool cppVar_90836 = (cppVar_90834 == 131);
	BIT_VEC cppVar_90837 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90838 = (cppVar_90837 << 3) | 2;
	cppVar_90838 = (cppVar_90838 & cppMask_un_5_);
	BIT_VEC cppVar_90839 = (0 << 5) | cppVar_90838;
	cppVar_90839 = (cppVar_90839 & cppMask_un_8_);
	bool cppVar_90841 = (cppVar_90839 == 135);
	BIT_VEC cppVar_90842 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90843 = (cppVar_90842 << 3) | 2;
	cppVar_90843 = (cppVar_90843 & cppMask_un_5_);
	BIT_VEC cppVar_90844 = (0 << 5) | cppVar_90843;
	cppVar_90844 = (cppVar_90844 & cppMask_un_8_);
	bool cppVar_90846 = (cppVar_90844 == 136);
	BIT_VEC cppVar_90847 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90848 = (cppVar_90847 << 3) | 2;
	cppVar_90848 = (cppVar_90848 & cppMask_un_5_);
	BIT_VEC cppVar_90849 = (0 << 5) | cppVar_90848;
	cppVar_90849 = (cppVar_90849 & cppMask_un_8_);
	bool cppVar_90851 = (cppVar_90849 == 137);
	BIT_VEC cppVar_90852 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90853 = (cppVar_90852 << 3) | 2;
	cppVar_90853 = (cppVar_90853 & cppMask_un_5_);
	BIT_VEC cppVar_90854 = (0 << 5) | cppVar_90853;
	cppVar_90854 = (cppVar_90854 & cppMask_un_8_);
	bool cppVar_90856 = (cppVar_90854 == 138);
	BIT_VEC cppVar_90857 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90858 = (cppVar_90857 << 3) | 2;
	cppVar_90858 = (cppVar_90858 & cppMask_un_5_);
	BIT_VEC cppVar_90859 = (0 << 5) | cppVar_90858;
	cppVar_90859 = (cppVar_90859 & cppMask_un_8_);
	bool cppVar_90861 = (cppVar_90859 == 140);
	BIT_VEC cppVar_90862 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90863 = (cppVar_90862 << 3) | 2;
	cppVar_90863 = (cppVar_90863 & cppMask_un_5_);
	BIT_VEC cppVar_90864 = (0 << 5) | cppVar_90863;
	cppVar_90864 = (cppVar_90864 & cppMask_un_8_);
	bool cppVar_90866 = (cppVar_90864 == 139);
	BIT_VEC cppVar_90867 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90868 = (cppVar_90867 << 3) | 2;
	cppVar_90868 = (cppVar_90868 & cppMask_un_5_);
	BIT_VEC cppVar_90869 = (0 << 5) | cppVar_90868;
	cppVar_90869 = (cppVar_90869 & cppMask_un_8_);
	bool cppVar_90871 = (cppVar_90869 == 141);
	BIT_VEC cppVar_90872 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90873 = (cppVar_90872 << 3) | 2;
	cppVar_90873 = (cppVar_90873 & cppMask_un_5_);
	BIT_VEC cppVar_90874 = (0 << 5) | cppVar_90873;
	cppVar_90874 = (cppVar_90874 & cppMask_un_8_);
	bool cppVar_90876 = (cppVar_90874 == 144);
	BIT_VEC cppVar_90877 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90878 = (cppVar_90877 << 3) | 2;
	cppVar_90878 = (cppVar_90878 & cppMask_un_5_);
	BIT_VEC cppVar_90879 = (0 << 5) | cppVar_90878;
	cppVar_90879 = (cppVar_90879 & cppMask_un_8_);
	bool cppVar_90881 = (cppVar_90879 == 152);
	BIT_VEC cppVar_90882 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90883 = (cppVar_90882 << 3) | 2;
	cppVar_90883 = (cppVar_90883 & cppMask_un_5_);
	BIT_VEC cppVar_90884 = (0 << 5) | cppVar_90883;
	cppVar_90884 = (cppVar_90884 & cppMask_un_8_);
	bool cppVar_90886 = (cppVar_90884 == 153);
	BIT_VEC cppVar_90887 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90888 = (cppVar_90887 << 3) | 2;
	cppVar_90888 = (cppVar_90888 & cppMask_un_5_);
	BIT_VEC cppVar_90889 = (0 << 5) | cppVar_90888;
	cppVar_90889 = (cppVar_90889 & cppMask_un_8_);
	bool cppVar_90891 = (cppVar_90889 == 160);
	BIT_VEC cppVar_90892 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90893 = (cppVar_90892 << 3) | 2;
	cppVar_90893 = (cppVar_90893 & cppMask_un_5_);
	BIT_VEC cppVar_90894 = (0 << 5) | cppVar_90893;
	cppVar_90894 = (cppVar_90894 & cppMask_un_8_);
	bool cppVar_90896 = (cppVar_90894 == 168);
	BIT_VEC cppVar_90897 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90898 = (cppVar_90897 << 3) | 2;
	cppVar_90898 = (cppVar_90898 & cppMask_un_5_);
	BIT_VEC cppVar_90899 = (0 << 5) | cppVar_90898;
	cppVar_90899 = (cppVar_90899 & cppMask_un_8_);
	bool cppVar_90901 = (cppVar_90899 == 176);
	BIT_VEC cppVar_90902 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90903 = (cppVar_90902 << 3) | 2;
	cppVar_90903 = (cppVar_90903 & cppMask_un_5_);
	BIT_VEC cppVar_90904 = (0 << 5) | cppVar_90903;
	cppVar_90904 = (cppVar_90904 & cppMask_un_8_);
	bool cppVar_90906 = (cppVar_90904 == 184);
	BIT_VEC cppVar_90907 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90908 = (cppVar_90907 << 3) | 2;
	cppVar_90908 = (cppVar_90908 & cppMask_un_5_);
	BIT_VEC cppVar_90909 = (0 << 5) | cppVar_90908;
	cppVar_90909 = (cppVar_90909 & cppMask_un_8_);
	bool cppVar_90911 = (cppVar_90909 == 208);
	BIT_VEC cppVar_90912 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90913 = (cppVar_90912 << 3) | 2;
	cppVar_90913 = (cppVar_90913 & cppMask_un_5_);
	BIT_VEC cppVar_90914 = (0 << 5) | cppVar_90913;
	cppVar_90914 = (cppVar_90914 & cppMask_un_8_);
	bool cppVar_90916 = (cppVar_90914 == 224);
	BIT_VEC cppVar_90917 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90918 = (cppVar_90917 << 3) | 2;
	cppVar_90918 = (cppVar_90918 & cppMask_un_5_);
	BIT_VEC cppVar_90919 = (0 << 5) | cppVar_90918;
	cppVar_90919 = (cppVar_90919 & cppMask_un_8_);
	bool cppVar_90921 = (cppVar_90919 == 240);
	BIT_VEC cppVar_90923 = (cppVar_90921) ? B : 0;
	BIT_VEC cppVar_90924 = (cppVar_90916) ? ACC : cppVar_90923;
	BIT_VEC cppVar_90925 = (cppVar_90911) ? PSW : cppVar_90924;
	BIT_VEC cppVar_90926 = (cppVar_90906) ? IP : cppVar_90925;
	BIT_VEC cppVar_90927 = (cppVar_90901) ? P3 : cppVar_90926;
	BIT_VEC cppVar_90928 = (cppVar_90896) ? IE : cppVar_90927;
	BIT_VEC cppVar_90929 = (cppVar_90891) ? P2 : cppVar_90928;
	BIT_VEC cppVar_90930 = (cppVar_90886) ? SBUF : cppVar_90929;
	BIT_VEC cppVar_90931 = (cppVar_90881) ? SCON : cppVar_90930;
	BIT_VEC cppVar_90932 = (cppVar_90876) ? P1 : cppVar_90931;
	BIT_VEC cppVar_90933 = (cppVar_90871) ? TH1 : cppVar_90932;
	BIT_VEC cppVar_90934 = (cppVar_90866) ? TL1 : cppVar_90933;
	BIT_VEC cppVar_90935 = (cppVar_90861) ? TH0 : cppVar_90934;
	BIT_VEC cppVar_90936 = (cppVar_90856) ? TL0 : cppVar_90935;
	BIT_VEC cppVar_90937 = (cppVar_90851) ? TMOD : cppVar_90936;
	BIT_VEC cppVar_90938 = (cppVar_90846) ? TCON : cppVar_90937;
	BIT_VEC cppVar_90939 = (cppVar_90841) ? PCON : cppVar_90938;
	BIT_VEC cppVar_90940 = (cppVar_90836) ? DPH : cppVar_90939;
	BIT_VEC cppVar_90941 = (cppVar_90831) ? DPL : cppVar_90940;
	BIT_VEC cppVar_90942 = (cppVar_90826) ? SP : cppVar_90941;
	BIT_VEC cppVar_90943 = (cppVar_90821) ? P0 : cppVar_90942;
	BIT_VEC cppVar_90944 = (cppVar_90812) ? cppVar_90816 : cppVar_90943;
	type_mem cppVar_90945 = IRAM;
	cppVar_90945.wr(cppVar_90804, cppVar_90944);
	type_mem& cppVar_90946 = (cppVar_90802) ? cppVar_90945 : IRAM;
	BIT_VEC cppVar_90947 = ROM.rd(PC);
	bool cppVar_90949 = (cppVar_90947 == 137);
	BIT_VEC cppVar_90951 = PC + 1;
	cppVar_90951 = (cppVar_90951 & cppMask_un_16_);
	BIT_VEC cppVar_90952 = ROM.rd(cppVar_90951);
	BIT_VEC cppVar_90953 = (cppVar_90952 >> 7) & cppMask_un_1_;
	bool cppVar_90955 = (cppVar_90953 == 0);
	BIT_VEC cppVar_90956 = PC + 1;
	cppVar_90956 = (cppVar_90956 & cppMask_un_16_);
	BIT_VEC cppVar_90957 = ROM.rd(cppVar_90956);
	BIT_VEC cppVar_90959 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90961 = (cppVar_90959 << 3) | 1;
	cppVar_90961 = (cppVar_90961 & cppMask_un_5_);
	BIT_VEC cppVar_90962 = (0 << 5) | cppVar_90961;
	cppVar_90962 = (cppVar_90962 & cppMask_un_8_);
	BIT_VEC cppVar_90963 = (cppVar_90962 >> 7) & cppMask_un_1_;
	bool cppVar_90965 = (cppVar_90963 == 0);
	BIT_VEC cppVar_90966 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90967 = (cppVar_90966 << 3) | 1;
	cppVar_90967 = (cppVar_90967 & cppMask_un_5_);
	BIT_VEC cppVar_90968 = (0 << 5) | cppVar_90967;
	cppVar_90968 = (cppVar_90968 & cppMask_un_8_);
	BIT_VEC cppVar_90969 = IRAM.rd(cppVar_90968);
	BIT_VEC cppVar_90970 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90971 = (cppVar_90970 << 3) | 1;
	cppVar_90971 = (cppVar_90971 & cppMask_un_5_);
	BIT_VEC cppVar_90972 = (0 << 5) | cppVar_90971;
	cppVar_90972 = (cppVar_90972 & cppMask_un_8_);
	bool cppVar_90974 = (cppVar_90972 == 128);
	BIT_VEC cppVar_90975 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90976 = (cppVar_90975 << 3) | 1;
	cppVar_90976 = (cppVar_90976 & cppMask_un_5_);
	BIT_VEC cppVar_90977 = (0 << 5) | cppVar_90976;
	cppVar_90977 = (cppVar_90977 & cppMask_un_8_);
	bool cppVar_90979 = (cppVar_90977 == 129);
	BIT_VEC cppVar_90980 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90981 = (cppVar_90980 << 3) | 1;
	cppVar_90981 = (cppVar_90981 & cppMask_un_5_);
	BIT_VEC cppVar_90982 = (0 << 5) | cppVar_90981;
	cppVar_90982 = (cppVar_90982 & cppMask_un_8_);
	bool cppVar_90984 = (cppVar_90982 == 130);
	BIT_VEC cppVar_90985 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90986 = (cppVar_90985 << 3) | 1;
	cppVar_90986 = (cppVar_90986 & cppMask_un_5_);
	BIT_VEC cppVar_90987 = (0 << 5) | cppVar_90986;
	cppVar_90987 = (cppVar_90987 & cppMask_un_8_);
	bool cppVar_90989 = (cppVar_90987 == 131);
	BIT_VEC cppVar_90990 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90991 = (cppVar_90990 << 3) | 1;
	cppVar_90991 = (cppVar_90991 & cppMask_un_5_);
	BIT_VEC cppVar_90992 = (0 << 5) | cppVar_90991;
	cppVar_90992 = (cppVar_90992 & cppMask_un_8_);
	bool cppVar_90994 = (cppVar_90992 == 135);
	BIT_VEC cppVar_90995 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_90996 = (cppVar_90995 << 3) | 1;
	cppVar_90996 = (cppVar_90996 & cppMask_un_5_);
	BIT_VEC cppVar_90997 = (0 << 5) | cppVar_90996;
	cppVar_90997 = (cppVar_90997 & cppMask_un_8_);
	bool cppVar_90999 = (cppVar_90997 == 136);
	BIT_VEC cppVar_91000 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91001 = (cppVar_91000 << 3) | 1;
	cppVar_91001 = (cppVar_91001 & cppMask_un_5_);
	BIT_VEC cppVar_91002 = (0 << 5) | cppVar_91001;
	cppVar_91002 = (cppVar_91002 & cppMask_un_8_);
	bool cppVar_91004 = (cppVar_91002 == 137);
	BIT_VEC cppVar_91005 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91006 = (cppVar_91005 << 3) | 1;
	cppVar_91006 = (cppVar_91006 & cppMask_un_5_);
	BIT_VEC cppVar_91007 = (0 << 5) | cppVar_91006;
	cppVar_91007 = (cppVar_91007 & cppMask_un_8_);
	bool cppVar_91009 = (cppVar_91007 == 138);
	BIT_VEC cppVar_91010 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91011 = (cppVar_91010 << 3) | 1;
	cppVar_91011 = (cppVar_91011 & cppMask_un_5_);
	BIT_VEC cppVar_91012 = (0 << 5) | cppVar_91011;
	cppVar_91012 = (cppVar_91012 & cppMask_un_8_);
	bool cppVar_91014 = (cppVar_91012 == 140);
	BIT_VEC cppVar_91015 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91016 = (cppVar_91015 << 3) | 1;
	cppVar_91016 = (cppVar_91016 & cppMask_un_5_);
	BIT_VEC cppVar_91017 = (0 << 5) | cppVar_91016;
	cppVar_91017 = (cppVar_91017 & cppMask_un_8_);
	bool cppVar_91019 = (cppVar_91017 == 139);
	BIT_VEC cppVar_91020 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91021 = (cppVar_91020 << 3) | 1;
	cppVar_91021 = (cppVar_91021 & cppMask_un_5_);
	BIT_VEC cppVar_91022 = (0 << 5) | cppVar_91021;
	cppVar_91022 = (cppVar_91022 & cppMask_un_8_);
	bool cppVar_91024 = (cppVar_91022 == 141);
	BIT_VEC cppVar_91025 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91026 = (cppVar_91025 << 3) | 1;
	cppVar_91026 = (cppVar_91026 & cppMask_un_5_);
	BIT_VEC cppVar_91027 = (0 << 5) | cppVar_91026;
	cppVar_91027 = (cppVar_91027 & cppMask_un_8_);
	bool cppVar_91029 = (cppVar_91027 == 144);
	BIT_VEC cppVar_91030 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91031 = (cppVar_91030 << 3) | 1;
	cppVar_91031 = (cppVar_91031 & cppMask_un_5_);
	BIT_VEC cppVar_91032 = (0 << 5) | cppVar_91031;
	cppVar_91032 = (cppVar_91032 & cppMask_un_8_);
	bool cppVar_91034 = (cppVar_91032 == 152);
	BIT_VEC cppVar_91035 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91036 = (cppVar_91035 << 3) | 1;
	cppVar_91036 = (cppVar_91036 & cppMask_un_5_);
	BIT_VEC cppVar_91037 = (0 << 5) | cppVar_91036;
	cppVar_91037 = (cppVar_91037 & cppMask_un_8_);
	bool cppVar_91039 = (cppVar_91037 == 153);
	BIT_VEC cppVar_91040 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91041 = (cppVar_91040 << 3) | 1;
	cppVar_91041 = (cppVar_91041 & cppMask_un_5_);
	BIT_VEC cppVar_91042 = (0 << 5) | cppVar_91041;
	cppVar_91042 = (cppVar_91042 & cppMask_un_8_);
	bool cppVar_91044 = (cppVar_91042 == 160);
	BIT_VEC cppVar_91045 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91046 = (cppVar_91045 << 3) | 1;
	cppVar_91046 = (cppVar_91046 & cppMask_un_5_);
	BIT_VEC cppVar_91047 = (0 << 5) | cppVar_91046;
	cppVar_91047 = (cppVar_91047 & cppMask_un_8_);
	bool cppVar_91049 = (cppVar_91047 == 168);
	BIT_VEC cppVar_91050 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91051 = (cppVar_91050 << 3) | 1;
	cppVar_91051 = (cppVar_91051 & cppMask_un_5_);
	BIT_VEC cppVar_91052 = (0 << 5) | cppVar_91051;
	cppVar_91052 = (cppVar_91052 & cppMask_un_8_);
	bool cppVar_91054 = (cppVar_91052 == 176);
	BIT_VEC cppVar_91055 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91056 = (cppVar_91055 << 3) | 1;
	cppVar_91056 = (cppVar_91056 & cppMask_un_5_);
	BIT_VEC cppVar_91057 = (0 << 5) | cppVar_91056;
	cppVar_91057 = (cppVar_91057 & cppMask_un_8_);
	bool cppVar_91059 = (cppVar_91057 == 184);
	BIT_VEC cppVar_91060 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91061 = (cppVar_91060 << 3) | 1;
	cppVar_91061 = (cppVar_91061 & cppMask_un_5_);
	BIT_VEC cppVar_91062 = (0 << 5) | cppVar_91061;
	cppVar_91062 = (cppVar_91062 & cppMask_un_8_);
	bool cppVar_91064 = (cppVar_91062 == 208);
	BIT_VEC cppVar_91065 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91066 = (cppVar_91065 << 3) | 1;
	cppVar_91066 = (cppVar_91066 & cppMask_un_5_);
	BIT_VEC cppVar_91067 = (0 << 5) | cppVar_91066;
	cppVar_91067 = (cppVar_91067 & cppMask_un_8_);
	bool cppVar_91069 = (cppVar_91067 == 224);
	BIT_VEC cppVar_91070 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91071 = (cppVar_91070 << 3) | 1;
	cppVar_91071 = (cppVar_91071 & cppMask_un_5_);
	BIT_VEC cppVar_91072 = (0 << 5) | cppVar_91071;
	cppVar_91072 = (cppVar_91072 & cppMask_un_8_);
	bool cppVar_91074 = (cppVar_91072 == 240);
	BIT_VEC cppVar_91076 = (cppVar_91074) ? B : 0;
	BIT_VEC cppVar_91077 = (cppVar_91069) ? ACC : cppVar_91076;
	BIT_VEC cppVar_91078 = (cppVar_91064) ? PSW : cppVar_91077;
	BIT_VEC cppVar_91079 = (cppVar_91059) ? IP : cppVar_91078;
	BIT_VEC cppVar_91080 = (cppVar_91054) ? P3 : cppVar_91079;
	BIT_VEC cppVar_91081 = (cppVar_91049) ? IE : cppVar_91080;
	BIT_VEC cppVar_91082 = (cppVar_91044) ? P2 : cppVar_91081;
	BIT_VEC cppVar_91083 = (cppVar_91039) ? SBUF : cppVar_91082;
	BIT_VEC cppVar_91084 = (cppVar_91034) ? SCON : cppVar_91083;
	BIT_VEC cppVar_91085 = (cppVar_91029) ? P1 : cppVar_91084;
	BIT_VEC cppVar_91086 = (cppVar_91024) ? TH1 : cppVar_91085;
	BIT_VEC cppVar_91087 = (cppVar_91019) ? TL1 : cppVar_91086;
	BIT_VEC cppVar_91088 = (cppVar_91014) ? TH0 : cppVar_91087;
	BIT_VEC cppVar_91089 = (cppVar_91009) ? TL0 : cppVar_91088;
	BIT_VEC cppVar_91090 = (cppVar_91004) ? TMOD : cppVar_91089;
	BIT_VEC cppVar_91091 = (cppVar_90999) ? TCON : cppVar_91090;
	BIT_VEC cppVar_91092 = (cppVar_90994) ? PCON : cppVar_91091;
	BIT_VEC cppVar_91093 = (cppVar_90989) ? DPH : cppVar_91092;
	BIT_VEC cppVar_91094 = (cppVar_90984) ? DPL : cppVar_91093;
	BIT_VEC cppVar_91095 = (cppVar_90979) ? SP : cppVar_91094;
	BIT_VEC cppVar_91096 = (cppVar_90974) ? P0 : cppVar_91095;
	BIT_VEC cppVar_91097 = (cppVar_90965) ? cppVar_90969 : cppVar_91096;
	type_mem cppVar_91098 = IRAM;
	cppVar_91098.wr(cppVar_90957, cppVar_91097);
	type_mem& cppVar_91099 = (cppVar_90955) ? cppVar_91098 : IRAM;
	BIT_VEC cppVar_91100 = ROM.rd(PC);
	bool cppVar_91102 = (cppVar_91100 == 136);
	BIT_VEC cppVar_91104 = PC + 1;
	cppVar_91104 = (cppVar_91104 & cppMask_un_16_);
	BIT_VEC cppVar_91105 = ROM.rd(cppVar_91104);
	BIT_VEC cppVar_91106 = (cppVar_91105 >> 7) & cppMask_un_1_;
	bool cppVar_91108 = (cppVar_91106 == 0);
	BIT_VEC cppVar_91109 = PC + 1;
	cppVar_91109 = (cppVar_91109 & cppMask_un_16_);
	BIT_VEC cppVar_91110 = ROM.rd(cppVar_91109);
	BIT_VEC cppVar_91112 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91114 = (cppVar_91112 << 3) | 0;
	cppVar_91114 = (cppVar_91114 & cppMask_un_5_);
	BIT_VEC cppVar_91115 = (0 << 5) | cppVar_91114;
	cppVar_91115 = (cppVar_91115 & cppMask_un_8_);
	BIT_VEC cppVar_91116 = (cppVar_91115 >> 7) & cppMask_un_1_;
	bool cppVar_91118 = (cppVar_91116 == 0);
	BIT_VEC cppVar_91119 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91120 = (cppVar_91119 << 3) | 0;
	cppVar_91120 = (cppVar_91120 & cppMask_un_5_);
	BIT_VEC cppVar_91121 = (0 << 5) | cppVar_91120;
	cppVar_91121 = (cppVar_91121 & cppMask_un_8_);
	BIT_VEC cppVar_91122 = IRAM.rd(cppVar_91121);
	BIT_VEC cppVar_91123 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91124 = (cppVar_91123 << 3) | 0;
	cppVar_91124 = (cppVar_91124 & cppMask_un_5_);
	BIT_VEC cppVar_91125 = (0 << 5) | cppVar_91124;
	cppVar_91125 = (cppVar_91125 & cppMask_un_8_);
	bool cppVar_91127 = (cppVar_91125 == 128);
	BIT_VEC cppVar_91128 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91129 = (cppVar_91128 << 3) | 0;
	cppVar_91129 = (cppVar_91129 & cppMask_un_5_);
	BIT_VEC cppVar_91130 = (0 << 5) | cppVar_91129;
	cppVar_91130 = (cppVar_91130 & cppMask_un_8_);
	bool cppVar_91132 = (cppVar_91130 == 129);
	BIT_VEC cppVar_91133 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91134 = (cppVar_91133 << 3) | 0;
	cppVar_91134 = (cppVar_91134 & cppMask_un_5_);
	BIT_VEC cppVar_91135 = (0 << 5) | cppVar_91134;
	cppVar_91135 = (cppVar_91135 & cppMask_un_8_);
	bool cppVar_91137 = (cppVar_91135 == 130);
	BIT_VEC cppVar_91138 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91139 = (cppVar_91138 << 3) | 0;
	cppVar_91139 = (cppVar_91139 & cppMask_un_5_);
	BIT_VEC cppVar_91140 = (0 << 5) | cppVar_91139;
	cppVar_91140 = (cppVar_91140 & cppMask_un_8_);
	bool cppVar_91142 = (cppVar_91140 == 131);
	BIT_VEC cppVar_91143 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91144 = (cppVar_91143 << 3) | 0;
	cppVar_91144 = (cppVar_91144 & cppMask_un_5_);
	BIT_VEC cppVar_91145 = (0 << 5) | cppVar_91144;
	cppVar_91145 = (cppVar_91145 & cppMask_un_8_);
	bool cppVar_91147 = (cppVar_91145 == 135);
	BIT_VEC cppVar_91148 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91149 = (cppVar_91148 << 3) | 0;
	cppVar_91149 = (cppVar_91149 & cppMask_un_5_);
	BIT_VEC cppVar_91150 = (0 << 5) | cppVar_91149;
	cppVar_91150 = (cppVar_91150 & cppMask_un_8_);
	bool cppVar_91152 = (cppVar_91150 == 136);
	BIT_VEC cppVar_91153 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91154 = (cppVar_91153 << 3) | 0;
	cppVar_91154 = (cppVar_91154 & cppMask_un_5_);
	BIT_VEC cppVar_91155 = (0 << 5) | cppVar_91154;
	cppVar_91155 = (cppVar_91155 & cppMask_un_8_);
	bool cppVar_91157 = (cppVar_91155 == 137);
	BIT_VEC cppVar_91158 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91159 = (cppVar_91158 << 3) | 0;
	cppVar_91159 = (cppVar_91159 & cppMask_un_5_);
	BIT_VEC cppVar_91160 = (0 << 5) | cppVar_91159;
	cppVar_91160 = (cppVar_91160 & cppMask_un_8_);
	bool cppVar_91162 = (cppVar_91160 == 138);
	BIT_VEC cppVar_91163 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91164 = (cppVar_91163 << 3) | 0;
	cppVar_91164 = (cppVar_91164 & cppMask_un_5_);
	BIT_VEC cppVar_91165 = (0 << 5) | cppVar_91164;
	cppVar_91165 = (cppVar_91165 & cppMask_un_8_);
	bool cppVar_91167 = (cppVar_91165 == 140);
	BIT_VEC cppVar_91168 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91169 = (cppVar_91168 << 3) | 0;
	cppVar_91169 = (cppVar_91169 & cppMask_un_5_);
	BIT_VEC cppVar_91170 = (0 << 5) | cppVar_91169;
	cppVar_91170 = (cppVar_91170 & cppMask_un_8_);
	bool cppVar_91172 = (cppVar_91170 == 139);
	BIT_VEC cppVar_91173 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91174 = (cppVar_91173 << 3) | 0;
	cppVar_91174 = (cppVar_91174 & cppMask_un_5_);
	BIT_VEC cppVar_91175 = (0 << 5) | cppVar_91174;
	cppVar_91175 = (cppVar_91175 & cppMask_un_8_);
	bool cppVar_91177 = (cppVar_91175 == 141);
	BIT_VEC cppVar_91178 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91179 = (cppVar_91178 << 3) | 0;
	cppVar_91179 = (cppVar_91179 & cppMask_un_5_);
	BIT_VEC cppVar_91180 = (0 << 5) | cppVar_91179;
	cppVar_91180 = (cppVar_91180 & cppMask_un_8_);
	bool cppVar_91182 = (cppVar_91180 == 144);
	BIT_VEC cppVar_91183 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91184 = (cppVar_91183 << 3) | 0;
	cppVar_91184 = (cppVar_91184 & cppMask_un_5_);
	BIT_VEC cppVar_91185 = (0 << 5) | cppVar_91184;
	cppVar_91185 = (cppVar_91185 & cppMask_un_8_);
	bool cppVar_91187 = (cppVar_91185 == 152);
	BIT_VEC cppVar_91188 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91189 = (cppVar_91188 << 3) | 0;
	cppVar_91189 = (cppVar_91189 & cppMask_un_5_);
	BIT_VEC cppVar_91190 = (0 << 5) | cppVar_91189;
	cppVar_91190 = (cppVar_91190 & cppMask_un_8_);
	bool cppVar_91192 = (cppVar_91190 == 153);
	BIT_VEC cppVar_91193 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91194 = (cppVar_91193 << 3) | 0;
	cppVar_91194 = (cppVar_91194 & cppMask_un_5_);
	BIT_VEC cppVar_91195 = (0 << 5) | cppVar_91194;
	cppVar_91195 = (cppVar_91195 & cppMask_un_8_);
	bool cppVar_91197 = (cppVar_91195 == 160);
	BIT_VEC cppVar_91198 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91199 = (cppVar_91198 << 3) | 0;
	cppVar_91199 = (cppVar_91199 & cppMask_un_5_);
	BIT_VEC cppVar_91200 = (0 << 5) | cppVar_91199;
	cppVar_91200 = (cppVar_91200 & cppMask_un_8_);
	bool cppVar_91202 = (cppVar_91200 == 168);
	BIT_VEC cppVar_91203 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91204 = (cppVar_91203 << 3) | 0;
	cppVar_91204 = (cppVar_91204 & cppMask_un_5_);
	BIT_VEC cppVar_91205 = (0 << 5) | cppVar_91204;
	cppVar_91205 = (cppVar_91205 & cppMask_un_8_);
	bool cppVar_91207 = (cppVar_91205 == 176);
	BIT_VEC cppVar_91208 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91209 = (cppVar_91208 << 3) | 0;
	cppVar_91209 = (cppVar_91209 & cppMask_un_5_);
	BIT_VEC cppVar_91210 = (0 << 5) | cppVar_91209;
	cppVar_91210 = (cppVar_91210 & cppMask_un_8_);
	bool cppVar_91212 = (cppVar_91210 == 184);
	BIT_VEC cppVar_91213 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91214 = (cppVar_91213 << 3) | 0;
	cppVar_91214 = (cppVar_91214 & cppMask_un_5_);
	BIT_VEC cppVar_91215 = (0 << 5) | cppVar_91214;
	cppVar_91215 = (cppVar_91215 & cppMask_un_8_);
	bool cppVar_91217 = (cppVar_91215 == 208);
	BIT_VEC cppVar_91218 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91219 = (cppVar_91218 << 3) | 0;
	cppVar_91219 = (cppVar_91219 & cppMask_un_5_);
	BIT_VEC cppVar_91220 = (0 << 5) | cppVar_91219;
	cppVar_91220 = (cppVar_91220 & cppMask_un_8_);
	bool cppVar_91222 = (cppVar_91220 == 224);
	BIT_VEC cppVar_91223 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91224 = (cppVar_91223 << 3) | 0;
	cppVar_91224 = (cppVar_91224 & cppMask_un_5_);
	BIT_VEC cppVar_91225 = (0 << 5) | cppVar_91224;
	cppVar_91225 = (cppVar_91225 & cppMask_un_8_);
	bool cppVar_91227 = (cppVar_91225 == 240);
	BIT_VEC cppVar_91229 = (cppVar_91227) ? B : 0;
	BIT_VEC cppVar_91230 = (cppVar_91222) ? ACC : cppVar_91229;
	BIT_VEC cppVar_91231 = (cppVar_91217) ? PSW : cppVar_91230;
	BIT_VEC cppVar_91232 = (cppVar_91212) ? IP : cppVar_91231;
	BIT_VEC cppVar_91233 = (cppVar_91207) ? P3 : cppVar_91232;
	BIT_VEC cppVar_91234 = (cppVar_91202) ? IE : cppVar_91233;
	BIT_VEC cppVar_91235 = (cppVar_91197) ? P2 : cppVar_91234;
	BIT_VEC cppVar_91236 = (cppVar_91192) ? SBUF : cppVar_91235;
	BIT_VEC cppVar_91237 = (cppVar_91187) ? SCON : cppVar_91236;
	BIT_VEC cppVar_91238 = (cppVar_91182) ? P1 : cppVar_91237;
	BIT_VEC cppVar_91239 = (cppVar_91177) ? TH1 : cppVar_91238;
	BIT_VEC cppVar_91240 = (cppVar_91172) ? TL1 : cppVar_91239;
	BIT_VEC cppVar_91241 = (cppVar_91167) ? TH0 : cppVar_91240;
	BIT_VEC cppVar_91242 = (cppVar_91162) ? TL0 : cppVar_91241;
	BIT_VEC cppVar_91243 = (cppVar_91157) ? TMOD : cppVar_91242;
	BIT_VEC cppVar_91244 = (cppVar_91152) ? TCON : cppVar_91243;
	BIT_VEC cppVar_91245 = (cppVar_91147) ? PCON : cppVar_91244;
	BIT_VEC cppVar_91246 = (cppVar_91142) ? DPH : cppVar_91245;
	BIT_VEC cppVar_91247 = (cppVar_91137) ? DPL : cppVar_91246;
	BIT_VEC cppVar_91248 = (cppVar_91132) ? SP : cppVar_91247;
	BIT_VEC cppVar_91249 = (cppVar_91127) ? P0 : cppVar_91248;
	BIT_VEC cppVar_91250 = (cppVar_91118) ? cppVar_91122 : cppVar_91249;
	type_mem cppVar_91251 = IRAM;
	cppVar_91251.wr(cppVar_91110, cppVar_91250);
	type_mem& cppVar_91252 = (cppVar_91108) ? cppVar_91251 : IRAM;
	BIT_VEC cppVar_91253 = ROM.rd(PC);
	bool cppVar_91255 = (cppVar_91253 == 135);
	BIT_VEC cppVar_91257 = PC + 1;
	cppVar_91257 = (cppVar_91257 & cppMask_un_16_);
	BIT_VEC cppVar_91258 = ROM.rd(cppVar_91257);
	BIT_VEC cppVar_91259 = (cppVar_91258 >> 7) & cppMask_un_1_;
	bool cppVar_91261 = (cppVar_91259 == 0);
	BIT_VEC cppVar_91262 = PC + 1;
	cppVar_91262 = (cppVar_91262 & cppMask_un_16_);
	BIT_VEC cppVar_91263 = ROM.rd(cppVar_91262);
	BIT_VEC cppVar_91265 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91267 = (cppVar_91265 << 3) | 1;
	cppVar_91267 = (cppVar_91267 & cppMask_un_5_);
	BIT_VEC cppVar_91268 = (0 << 5) | cppVar_91267;
	cppVar_91268 = (cppVar_91268 & cppMask_un_8_);
	BIT_VEC cppVar_91269 = IRAM.rd(cppVar_91268);
	BIT_VEC cppVar_91270 = IRAM.rd(cppVar_91269);
	type_mem cppVar_91271 = IRAM;
	cppVar_91271.wr(cppVar_91263, cppVar_91270);
	type_mem& cppVar_91272 = (cppVar_91261) ? cppVar_91271 : IRAM;
	BIT_VEC cppVar_91273 = ROM.rd(PC);
	bool cppVar_91275 = (cppVar_91273 == 134);
	BIT_VEC cppVar_91277 = PC + 1;
	cppVar_91277 = (cppVar_91277 & cppMask_un_16_);
	BIT_VEC cppVar_91278 = ROM.rd(cppVar_91277);
	BIT_VEC cppVar_91279 = (cppVar_91278 >> 7) & cppMask_un_1_;
	bool cppVar_91281 = (cppVar_91279 == 0);
	BIT_VEC cppVar_91282 = PC + 1;
	cppVar_91282 = (cppVar_91282 & cppMask_un_16_);
	BIT_VEC cppVar_91283 = ROM.rd(cppVar_91282);
	BIT_VEC cppVar_91285 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91287 = (cppVar_91285 << 3) | 0;
	cppVar_91287 = (cppVar_91287 & cppMask_un_5_);
	BIT_VEC cppVar_91288 = (0 << 5) | cppVar_91287;
	cppVar_91288 = (cppVar_91288 & cppMask_un_8_);
	BIT_VEC cppVar_91289 = IRAM.rd(cppVar_91288);
	BIT_VEC cppVar_91290 = IRAM.rd(cppVar_91289);
	type_mem cppVar_91291 = IRAM;
	cppVar_91291.wr(cppVar_91283, cppVar_91290);
	type_mem& cppVar_91292 = (cppVar_91281) ? cppVar_91291 : IRAM;
	BIT_VEC cppVar_91293 = ROM.rd(PC);
	bool cppVar_91295 = (cppVar_91293 == 133);
	BIT_VEC cppVar_91297 = PC + 2;
	cppVar_91297 = (cppVar_91297 & cppMask_un_16_);
	BIT_VEC cppVar_91298 = ROM.rd(cppVar_91297);
	BIT_VEC cppVar_91299 = (cppVar_91298 >> 7) & cppMask_un_1_;
	bool cppVar_91301 = (cppVar_91299 == 0);
	BIT_VEC cppVar_91302 = PC + 2;
	cppVar_91302 = (cppVar_91302 & cppMask_un_16_);
	BIT_VEC cppVar_91303 = ROM.rd(cppVar_91302);
	BIT_VEC cppVar_91305 = PC + 1;
	cppVar_91305 = (cppVar_91305 & cppMask_un_16_);
	BIT_VEC cppVar_91306 = ROM.rd(cppVar_91305);
	BIT_VEC cppVar_91307 = (cppVar_91306 >> 7) & cppMask_un_1_;
	bool cppVar_91309 = (cppVar_91307 == 0);
	BIT_VEC cppVar_91310 = PC + 1;
	cppVar_91310 = (cppVar_91310 & cppMask_un_16_);
	BIT_VEC cppVar_91311 = ROM.rd(cppVar_91310);
	BIT_VEC cppVar_91312 = IRAM.rd(cppVar_91311);
	BIT_VEC cppVar_91313 = PC + 1;
	cppVar_91313 = (cppVar_91313 & cppMask_un_16_);
	BIT_VEC cppVar_91314 = ROM.rd(cppVar_91313);
	bool cppVar_91316 = (cppVar_91314 == 128);
	BIT_VEC cppVar_91317 = PC + 1;
	cppVar_91317 = (cppVar_91317 & cppMask_un_16_);
	BIT_VEC cppVar_91318 = ROM.rd(cppVar_91317);
	bool cppVar_91320 = (cppVar_91318 == 129);
	BIT_VEC cppVar_91321 = PC + 1;
	cppVar_91321 = (cppVar_91321 & cppMask_un_16_);
	BIT_VEC cppVar_91322 = ROM.rd(cppVar_91321);
	bool cppVar_91324 = (cppVar_91322 == 130);
	BIT_VEC cppVar_91325 = PC + 1;
	cppVar_91325 = (cppVar_91325 & cppMask_un_16_);
	BIT_VEC cppVar_91326 = ROM.rd(cppVar_91325);
	bool cppVar_91328 = (cppVar_91326 == 131);
	BIT_VEC cppVar_91329 = PC + 1;
	cppVar_91329 = (cppVar_91329 & cppMask_un_16_);
	BIT_VEC cppVar_91330 = ROM.rd(cppVar_91329);
	bool cppVar_91332 = (cppVar_91330 == 135);
	BIT_VEC cppVar_91333 = PC + 1;
	cppVar_91333 = (cppVar_91333 & cppMask_un_16_);
	BIT_VEC cppVar_91334 = ROM.rd(cppVar_91333);
	bool cppVar_91336 = (cppVar_91334 == 136);
	BIT_VEC cppVar_91337 = PC + 1;
	cppVar_91337 = (cppVar_91337 & cppMask_un_16_);
	BIT_VEC cppVar_91338 = ROM.rd(cppVar_91337);
	bool cppVar_91340 = (cppVar_91338 == 137);
	BIT_VEC cppVar_91341 = PC + 1;
	cppVar_91341 = (cppVar_91341 & cppMask_un_16_);
	BIT_VEC cppVar_91342 = ROM.rd(cppVar_91341);
	bool cppVar_91344 = (cppVar_91342 == 138);
	BIT_VEC cppVar_91345 = PC + 1;
	cppVar_91345 = (cppVar_91345 & cppMask_un_16_);
	BIT_VEC cppVar_91346 = ROM.rd(cppVar_91345);
	bool cppVar_91348 = (cppVar_91346 == 140);
	BIT_VEC cppVar_91349 = PC + 1;
	cppVar_91349 = (cppVar_91349 & cppMask_un_16_);
	BIT_VEC cppVar_91350 = ROM.rd(cppVar_91349);
	bool cppVar_91352 = (cppVar_91350 == 139);
	BIT_VEC cppVar_91353 = PC + 1;
	cppVar_91353 = (cppVar_91353 & cppMask_un_16_);
	BIT_VEC cppVar_91354 = ROM.rd(cppVar_91353);
	bool cppVar_91356 = (cppVar_91354 == 141);
	BIT_VEC cppVar_91357 = PC + 1;
	cppVar_91357 = (cppVar_91357 & cppMask_un_16_);
	BIT_VEC cppVar_91358 = ROM.rd(cppVar_91357);
	bool cppVar_91360 = (cppVar_91358 == 144);
	BIT_VEC cppVar_91361 = PC + 1;
	cppVar_91361 = (cppVar_91361 & cppMask_un_16_);
	BIT_VEC cppVar_91362 = ROM.rd(cppVar_91361);
	bool cppVar_91364 = (cppVar_91362 == 152);
	BIT_VEC cppVar_91365 = PC + 1;
	cppVar_91365 = (cppVar_91365 & cppMask_un_16_);
	BIT_VEC cppVar_91366 = ROM.rd(cppVar_91365);
	bool cppVar_91368 = (cppVar_91366 == 153);
	BIT_VEC cppVar_91369 = PC + 1;
	cppVar_91369 = (cppVar_91369 & cppMask_un_16_);
	BIT_VEC cppVar_91370 = ROM.rd(cppVar_91369);
	bool cppVar_91372 = (cppVar_91370 == 160);
	BIT_VEC cppVar_91373 = PC + 1;
	cppVar_91373 = (cppVar_91373 & cppMask_un_16_);
	BIT_VEC cppVar_91374 = ROM.rd(cppVar_91373);
	bool cppVar_91376 = (cppVar_91374 == 168);
	BIT_VEC cppVar_91377 = PC + 1;
	cppVar_91377 = (cppVar_91377 & cppMask_un_16_);
	BIT_VEC cppVar_91378 = ROM.rd(cppVar_91377);
	bool cppVar_91380 = (cppVar_91378 == 176);
	BIT_VEC cppVar_91381 = PC + 1;
	cppVar_91381 = (cppVar_91381 & cppMask_un_16_);
	BIT_VEC cppVar_91382 = ROM.rd(cppVar_91381);
	bool cppVar_91384 = (cppVar_91382 == 184);
	BIT_VEC cppVar_91385 = PC + 1;
	cppVar_91385 = (cppVar_91385 & cppMask_un_16_);
	BIT_VEC cppVar_91386 = ROM.rd(cppVar_91385);
	bool cppVar_91388 = (cppVar_91386 == 208);
	BIT_VEC cppVar_91389 = PC + 1;
	cppVar_91389 = (cppVar_91389 & cppMask_un_16_);
	BIT_VEC cppVar_91390 = ROM.rd(cppVar_91389);
	bool cppVar_91392 = (cppVar_91390 == 224);
	BIT_VEC cppVar_91393 = PC + 1;
	cppVar_91393 = (cppVar_91393 & cppMask_un_16_);
	BIT_VEC cppVar_91394 = ROM.rd(cppVar_91393);
	bool cppVar_91396 = (cppVar_91394 == 240);
	BIT_VEC cppVar_91398 = (cppVar_91396) ? B : 0;
	BIT_VEC cppVar_91399 = (cppVar_91392) ? ACC : cppVar_91398;
	BIT_VEC cppVar_91400 = (cppVar_91388) ? PSW : cppVar_91399;
	BIT_VEC cppVar_91401 = (cppVar_91384) ? IP : cppVar_91400;
	BIT_VEC cppVar_91402 = (cppVar_91380) ? P3 : cppVar_91401;
	BIT_VEC cppVar_91403 = (cppVar_91376) ? IE : cppVar_91402;
	BIT_VEC cppVar_91404 = (cppVar_91372) ? P2 : cppVar_91403;
	BIT_VEC cppVar_91405 = (cppVar_91368) ? SBUF : cppVar_91404;
	BIT_VEC cppVar_91406 = (cppVar_91364) ? SCON : cppVar_91405;
	BIT_VEC cppVar_91407 = (cppVar_91360) ? P1 : cppVar_91406;
	BIT_VEC cppVar_91408 = (cppVar_91356) ? TH1 : cppVar_91407;
	BIT_VEC cppVar_91409 = (cppVar_91352) ? TL1 : cppVar_91408;
	BIT_VEC cppVar_91410 = (cppVar_91348) ? TH0 : cppVar_91409;
	BIT_VEC cppVar_91411 = (cppVar_91344) ? TL0 : cppVar_91410;
	BIT_VEC cppVar_91412 = (cppVar_91340) ? TMOD : cppVar_91411;
	BIT_VEC cppVar_91413 = (cppVar_91336) ? TCON : cppVar_91412;
	BIT_VEC cppVar_91414 = (cppVar_91332) ? PCON : cppVar_91413;
	BIT_VEC cppVar_91415 = (cppVar_91328) ? DPH : cppVar_91414;
	BIT_VEC cppVar_91416 = (cppVar_91324) ? DPL : cppVar_91415;
	BIT_VEC cppVar_91417 = (cppVar_91320) ? SP : cppVar_91416;
	BIT_VEC cppVar_91418 = (cppVar_91316) ? P0 : cppVar_91417;
	BIT_VEC cppVar_91419 = (cppVar_91309) ? cppVar_91312 : cppVar_91418;
	type_mem cppVar_91420 = IRAM;
	cppVar_91420.wr(cppVar_91303, cppVar_91419);
	type_mem& cppVar_91421 = (cppVar_91301) ? cppVar_91420 : IRAM;
	BIT_VEC cppVar_91422 = ROM.rd(PC);
	bool cppVar_91424 = (cppVar_91422 == 127);
	BIT_VEC cppVar_91426 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91428 = (cppVar_91426 << 3) | 7;
	cppVar_91428 = (cppVar_91428 & cppMask_un_5_);
	BIT_VEC cppVar_91429 = (0 << 5) | cppVar_91428;
	cppVar_91429 = (cppVar_91429 & cppMask_un_8_);
	BIT_VEC cppVar_91430 = (cppVar_91429 >> 7) & cppMask_un_1_;
	bool cppVar_91432 = (cppVar_91430 == 0);
	BIT_VEC cppVar_91433 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91434 = (cppVar_91433 << 3) | 7;
	cppVar_91434 = (cppVar_91434 & cppMask_un_5_);
	BIT_VEC cppVar_91435 = (0 << 5) | cppVar_91434;
	cppVar_91435 = (cppVar_91435 & cppMask_un_8_);
	BIT_VEC cppVar_91437 = PC + 1;
	cppVar_91437 = (cppVar_91437 & cppMask_un_16_);
	BIT_VEC cppVar_91438 = ROM.rd(cppVar_91437);
	type_mem cppVar_91439 = IRAM;
	cppVar_91439.wr(cppVar_91435, cppVar_91438);
	type_mem& cppVar_91440 = (cppVar_91432) ? cppVar_91439 : IRAM;
	BIT_VEC cppVar_91441 = ROM.rd(PC);
	bool cppVar_91443 = (cppVar_91441 == 126);
	BIT_VEC cppVar_91445 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91447 = (cppVar_91445 << 3) | 6;
	cppVar_91447 = (cppVar_91447 & cppMask_un_5_);
	BIT_VEC cppVar_91448 = (0 << 5) | cppVar_91447;
	cppVar_91448 = (cppVar_91448 & cppMask_un_8_);
	BIT_VEC cppVar_91449 = (cppVar_91448 >> 7) & cppMask_un_1_;
	bool cppVar_91451 = (cppVar_91449 == 0);
	BIT_VEC cppVar_91452 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91453 = (cppVar_91452 << 3) | 6;
	cppVar_91453 = (cppVar_91453 & cppMask_un_5_);
	BIT_VEC cppVar_91454 = (0 << 5) | cppVar_91453;
	cppVar_91454 = (cppVar_91454 & cppMask_un_8_);
	BIT_VEC cppVar_91456 = PC + 1;
	cppVar_91456 = (cppVar_91456 & cppMask_un_16_);
	BIT_VEC cppVar_91457 = ROM.rd(cppVar_91456);
	type_mem cppVar_91458 = IRAM;
	cppVar_91458.wr(cppVar_91454, cppVar_91457);
	type_mem& cppVar_91459 = (cppVar_91451) ? cppVar_91458 : IRAM;
	BIT_VEC cppVar_91460 = ROM.rd(PC);
	bool cppVar_91462 = (cppVar_91460 == 125);
	BIT_VEC cppVar_91464 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91466 = (cppVar_91464 << 3) | 5;
	cppVar_91466 = (cppVar_91466 & cppMask_un_5_);
	BIT_VEC cppVar_91467 = (0 << 5) | cppVar_91466;
	cppVar_91467 = (cppVar_91467 & cppMask_un_8_);
	BIT_VEC cppVar_91468 = (cppVar_91467 >> 7) & cppMask_un_1_;
	bool cppVar_91470 = (cppVar_91468 == 0);
	BIT_VEC cppVar_91471 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91472 = (cppVar_91471 << 3) | 5;
	cppVar_91472 = (cppVar_91472 & cppMask_un_5_);
	BIT_VEC cppVar_91473 = (0 << 5) | cppVar_91472;
	cppVar_91473 = (cppVar_91473 & cppMask_un_8_);
	BIT_VEC cppVar_91475 = PC + 1;
	cppVar_91475 = (cppVar_91475 & cppMask_un_16_);
	BIT_VEC cppVar_91476 = ROM.rd(cppVar_91475);
	type_mem cppVar_91477 = IRAM;
	cppVar_91477.wr(cppVar_91473, cppVar_91476);
	type_mem& cppVar_91478 = (cppVar_91470) ? cppVar_91477 : IRAM;
	BIT_VEC cppVar_91479 = ROM.rd(PC);
	bool cppVar_91481 = (cppVar_91479 == 124);
	BIT_VEC cppVar_91483 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91485 = (cppVar_91483 << 3) | 4;
	cppVar_91485 = (cppVar_91485 & cppMask_un_5_);
	BIT_VEC cppVar_91486 = (0 << 5) | cppVar_91485;
	cppVar_91486 = (cppVar_91486 & cppMask_un_8_);
	BIT_VEC cppVar_91487 = (cppVar_91486 >> 7) & cppMask_un_1_;
	bool cppVar_91489 = (cppVar_91487 == 0);
	BIT_VEC cppVar_91490 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91491 = (cppVar_91490 << 3) | 4;
	cppVar_91491 = (cppVar_91491 & cppMask_un_5_);
	BIT_VEC cppVar_91492 = (0 << 5) | cppVar_91491;
	cppVar_91492 = (cppVar_91492 & cppMask_un_8_);
	BIT_VEC cppVar_91494 = PC + 1;
	cppVar_91494 = (cppVar_91494 & cppMask_un_16_);
	BIT_VEC cppVar_91495 = ROM.rd(cppVar_91494);
	type_mem cppVar_91496 = IRAM;
	cppVar_91496.wr(cppVar_91492, cppVar_91495);
	type_mem& cppVar_91497 = (cppVar_91489) ? cppVar_91496 : IRAM;
	BIT_VEC cppVar_91498 = ROM.rd(PC);
	bool cppVar_91500 = (cppVar_91498 == 123);
	BIT_VEC cppVar_91502 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91504 = (cppVar_91502 << 3) | 3;
	cppVar_91504 = (cppVar_91504 & cppMask_un_5_);
	BIT_VEC cppVar_91505 = (0 << 5) | cppVar_91504;
	cppVar_91505 = (cppVar_91505 & cppMask_un_8_);
	BIT_VEC cppVar_91506 = (cppVar_91505 >> 7) & cppMask_un_1_;
	bool cppVar_91508 = (cppVar_91506 == 0);
	BIT_VEC cppVar_91509 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91510 = (cppVar_91509 << 3) | 3;
	cppVar_91510 = (cppVar_91510 & cppMask_un_5_);
	BIT_VEC cppVar_91511 = (0 << 5) | cppVar_91510;
	cppVar_91511 = (cppVar_91511 & cppMask_un_8_);
	BIT_VEC cppVar_91513 = PC + 1;
	cppVar_91513 = (cppVar_91513 & cppMask_un_16_);
	BIT_VEC cppVar_91514 = ROM.rd(cppVar_91513);
	type_mem cppVar_91515 = IRAM;
	cppVar_91515.wr(cppVar_91511, cppVar_91514);
	type_mem& cppVar_91516 = (cppVar_91508) ? cppVar_91515 : IRAM;
	BIT_VEC cppVar_91517 = ROM.rd(PC);
	bool cppVar_91519 = (cppVar_91517 == 122);
	BIT_VEC cppVar_91521 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91523 = (cppVar_91521 << 3) | 2;
	cppVar_91523 = (cppVar_91523 & cppMask_un_5_);
	BIT_VEC cppVar_91524 = (0 << 5) | cppVar_91523;
	cppVar_91524 = (cppVar_91524 & cppMask_un_8_);
	BIT_VEC cppVar_91525 = (cppVar_91524 >> 7) & cppMask_un_1_;
	bool cppVar_91527 = (cppVar_91525 == 0);
	BIT_VEC cppVar_91528 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91529 = (cppVar_91528 << 3) | 2;
	cppVar_91529 = (cppVar_91529 & cppMask_un_5_);
	BIT_VEC cppVar_91530 = (0 << 5) | cppVar_91529;
	cppVar_91530 = (cppVar_91530 & cppMask_un_8_);
	BIT_VEC cppVar_91532 = PC + 1;
	cppVar_91532 = (cppVar_91532 & cppMask_un_16_);
	BIT_VEC cppVar_91533 = ROM.rd(cppVar_91532);
	type_mem cppVar_91534 = IRAM;
	cppVar_91534.wr(cppVar_91530, cppVar_91533);
	type_mem& cppVar_91535 = (cppVar_91527) ? cppVar_91534 : IRAM;
	BIT_VEC cppVar_91536 = ROM.rd(PC);
	bool cppVar_91538 = (cppVar_91536 == 121);
	BIT_VEC cppVar_91540 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91542 = (cppVar_91540 << 3) | 1;
	cppVar_91542 = (cppVar_91542 & cppMask_un_5_);
	BIT_VEC cppVar_91543 = (0 << 5) | cppVar_91542;
	cppVar_91543 = (cppVar_91543 & cppMask_un_8_);
	BIT_VEC cppVar_91544 = (cppVar_91543 >> 7) & cppMask_un_1_;
	bool cppVar_91546 = (cppVar_91544 == 0);
	BIT_VEC cppVar_91547 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91548 = (cppVar_91547 << 3) | 1;
	cppVar_91548 = (cppVar_91548 & cppMask_un_5_);
	BIT_VEC cppVar_91549 = (0 << 5) | cppVar_91548;
	cppVar_91549 = (cppVar_91549 & cppMask_un_8_);
	BIT_VEC cppVar_91551 = PC + 1;
	cppVar_91551 = (cppVar_91551 & cppMask_un_16_);
	BIT_VEC cppVar_91552 = ROM.rd(cppVar_91551);
	type_mem cppVar_91553 = IRAM;
	cppVar_91553.wr(cppVar_91549, cppVar_91552);
	type_mem& cppVar_91554 = (cppVar_91546) ? cppVar_91553 : IRAM;
	BIT_VEC cppVar_91555 = ROM.rd(PC);
	bool cppVar_91557 = (cppVar_91555 == 120);
	BIT_VEC cppVar_91559 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91561 = (cppVar_91559 << 3) | 0;
	cppVar_91561 = (cppVar_91561 & cppMask_un_5_);
	BIT_VEC cppVar_91562 = (0 << 5) | cppVar_91561;
	cppVar_91562 = (cppVar_91562 & cppMask_un_8_);
	BIT_VEC cppVar_91563 = (cppVar_91562 >> 7) & cppMask_un_1_;
	bool cppVar_91565 = (cppVar_91563 == 0);
	BIT_VEC cppVar_91566 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91567 = (cppVar_91566 << 3) | 0;
	cppVar_91567 = (cppVar_91567 & cppMask_un_5_);
	BIT_VEC cppVar_91568 = (0 << 5) | cppVar_91567;
	cppVar_91568 = (cppVar_91568 & cppMask_un_8_);
	BIT_VEC cppVar_91570 = PC + 1;
	cppVar_91570 = (cppVar_91570 & cppMask_un_16_);
	BIT_VEC cppVar_91571 = ROM.rd(cppVar_91570);
	type_mem cppVar_91572 = IRAM;
	cppVar_91572.wr(cppVar_91568, cppVar_91571);
	type_mem& cppVar_91573 = (cppVar_91565) ? cppVar_91572 : IRAM;
	BIT_VEC cppVar_91574 = ROM.rd(PC);
	bool cppVar_91576 = (cppVar_91574 == 119);
	BIT_VEC cppVar_91578 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91580 = (cppVar_91578 << 3) | 1;
	cppVar_91580 = (cppVar_91580 & cppMask_un_5_);
	BIT_VEC cppVar_91581 = (0 << 5) | cppVar_91580;
	cppVar_91581 = (cppVar_91581 & cppMask_un_8_);
	BIT_VEC cppVar_91582 = IRAM.rd(cppVar_91581);
	BIT_VEC cppVar_91584 = PC + 1;
	cppVar_91584 = (cppVar_91584 & cppMask_un_16_);
	BIT_VEC cppVar_91585 = ROM.rd(cppVar_91584);
	type_mem cppVar_91586 = IRAM;
	cppVar_91586.wr(cppVar_91582, cppVar_91585);
	BIT_VEC cppVar_91587 = ROM.rd(PC);
	bool cppVar_91589 = (cppVar_91587 == 118);
	BIT_VEC cppVar_91591 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_91593 = (cppVar_91591 << 3) | 0;
	cppVar_91593 = (cppVar_91593 & cppMask_un_5_);
	BIT_VEC cppVar_91594 = (0 << 5) | cppVar_91593;
	cppVar_91594 = (cppVar_91594 & cppMask_un_8_);
	BIT_VEC cppVar_91595 = IRAM.rd(cppVar_91594);
	BIT_VEC cppVar_91597 = PC + 1;
	cppVar_91597 = (cppVar_91597 & cppMask_un_16_);
	BIT_VEC cppVar_91598 = ROM.rd(cppVar_91597);
	type_mem cppVar_91599 = IRAM;
	cppVar_91599.wr(cppVar_91595, cppVar_91598);
	BIT_VEC cppVar_91600 = ROM.rd(PC);
	bool cppVar_91602 = (cppVar_91600 == 117);
	BIT_VEC cppVar_91604 = PC + 1;
	cppVar_91604 = (cppVar_91604 & cppMask_un_16_);
	BIT_VEC cppVar_91605 = ROM.rd(cppVar_91604);
	BIT_VEC cppVar_91606 = (cppVar_91605 >> 7) & cppMask_un_1_;
	bool cppVar_91608 = (cppVar_91606 == 0);
	BIT_VEC cppVar_91609 = PC + 1;
	cppVar_91609 = (cppVar_91609 & cppMask_un_16_);
	BIT_VEC cppVar_91610 = ROM.rd(cppVar_91609);
	BIT_VEC cppVar_91612 = PC + 2;
	cppVar_91612 = (cppVar_91612 & cppMask_un_16_);
	BIT_VEC cppVar_91613 = ROM.rd(cppVar_91612);
	type_mem cppVar_91614 = IRAM;
	cppVar_91614.wr(cppVar_91610, cppVar_91613);
	type_mem& cppVar_91615 = (cppVar_91608) ? cppVar_91614 : IRAM;
	BIT_VEC cppVar_91616 = ROM.rd(PC);
	bool cppVar_91618 = (cppVar_91616 == 99);
	BIT_VEC cppVar_91620 = PC + 1;
	cppVar_91620 = (cppVar_91620 & cppMask_un_16_);
	BIT_VEC cppVar_91621 = ROM.rd(cppVar_91620);
	BIT_VEC cppVar_91622 = (cppVar_91621 >> 7) & cppMask_un_1_;
	bool cppVar_91624 = (cppVar_91622 == 0);
	BIT_VEC cppVar_91625 = PC + 1;
	cppVar_91625 = (cppVar_91625 & cppMask_un_16_);
	BIT_VEC cppVar_91626 = ROM.rd(cppVar_91625);
	BIT_VEC cppVar_91627 = PC + 1;
	cppVar_91627 = (cppVar_91627 & cppMask_un_16_);
	BIT_VEC cppVar_91628 = ROM.rd(cppVar_91627);
	BIT_VEC cppVar_91629 = (cppVar_91628 >> 7) & cppMask_un_1_;
	bool cppVar_91631 = (cppVar_91629 == 0);
	BIT_VEC cppVar_91632 = PC + 1;
	cppVar_91632 = (cppVar_91632 & cppMask_un_16_);
	BIT_VEC cppVar_91633 = ROM.rd(cppVar_91632);
	BIT_VEC cppVar_91634 = IRAM.rd(cppVar_91633);
	BIT_VEC cppVar_91635 = PC + 1;
	cppVar_91635 = (cppVar_91635 & cppMask_un_16_);
	BIT_VEC cppVar_91636 = ROM.rd(cppVar_91635);
	bool cppVar_91638 = (cppVar_91636 == 128);
	BIT_VEC cppVar_91639 = PC + 1;
	cppVar_91639 = (cppVar_91639 & cppMask_un_16_);
	BIT_VEC cppVar_91640 = ROM.rd(cppVar_91639);
	bool cppVar_91642 = (cppVar_91640 == 129);
	BIT_VEC cppVar_91643 = PC + 1;
	cppVar_91643 = (cppVar_91643 & cppMask_un_16_);
	BIT_VEC cppVar_91644 = ROM.rd(cppVar_91643);
	bool cppVar_91646 = (cppVar_91644 == 130);
	BIT_VEC cppVar_91647 = PC + 1;
	cppVar_91647 = (cppVar_91647 & cppMask_un_16_);
	BIT_VEC cppVar_91648 = ROM.rd(cppVar_91647);
	bool cppVar_91650 = (cppVar_91648 == 131);
	BIT_VEC cppVar_91651 = PC + 1;
	cppVar_91651 = (cppVar_91651 & cppMask_un_16_);
	BIT_VEC cppVar_91652 = ROM.rd(cppVar_91651);
	bool cppVar_91654 = (cppVar_91652 == 135);
	BIT_VEC cppVar_91655 = PC + 1;
	cppVar_91655 = (cppVar_91655 & cppMask_un_16_);
	BIT_VEC cppVar_91656 = ROM.rd(cppVar_91655);
	bool cppVar_91658 = (cppVar_91656 == 136);
	BIT_VEC cppVar_91659 = PC + 1;
	cppVar_91659 = (cppVar_91659 & cppMask_un_16_);
	BIT_VEC cppVar_91660 = ROM.rd(cppVar_91659);
	bool cppVar_91662 = (cppVar_91660 == 137);
	BIT_VEC cppVar_91663 = PC + 1;
	cppVar_91663 = (cppVar_91663 & cppMask_un_16_);
	BIT_VEC cppVar_91664 = ROM.rd(cppVar_91663);
	bool cppVar_91666 = (cppVar_91664 == 138);
	BIT_VEC cppVar_91667 = PC + 1;
	cppVar_91667 = (cppVar_91667 & cppMask_un_16_);
	BIT_VEC cppVar_91668 = ROM.rd(cppVar_91667);
	bool cppVar_91670 = (cppVar_91668 == 140);
	BIT_VEC cppVar_91671 = PC + 1;
	cppVar_91671 = (cppVar_91671 & cppMask_un_16_);
	BIT_VEC cppVar_91672 = ROM.rd(cppVar_91671);
	bool cppVar_91674 = (cppVar_91672 == 139);
	BIT_VEC cppVar_91675 = PC + 1;
	cppVar_91675 = (cppVar_91675 & cppMask_un_16_);
	BIT_VEC cppVar_91676 = ROM.rd(cppVar_91675);
	bool cppVar_91678 = (cppVar_91676 == 141);
	BIT_VEC cppVar_91679 = PC + 1;
	cppVar_91679 = (cppVar_91679 & cppMask_un_16_);
	BIT_VEC cppVar_91680 = ROM.rd(cppVar_91679);
	bool cppVar_91682 = (cppVar_91680 == 144);
	BIT_VEC cppVar_91683 = PC + 1;
	cppVar_91683 = (cppVar_91683 & cppMask_un_16_);
	BIT_VEC cppVar_91684 = ROM.rd(cppVar_91683);
	bool cppVar_91686 = (cppVar_91684 == 152);
	BIT_VEC cppVar_91687 = PC + 1;
	cppVar_91687 = (cppVar_91687 & cppMask_un_16_);
	BIT_VEC cppVar_91688 = ROM.rd(cppVar_91687);
	bool cppVar_91690 = (cppVar_91688 == 153);
	BIT_VEC cppVar_91691 = PC + 1;
	cppVar_91691 = (cppVar_91691 & cppMask_un_16_);
	BIT_VEC cppVar_91692 = ROM.rd(cppVar_91691);
	bool cppVar_91694 = (cppVar_91692 == 160);
	BIT_VEC cppVar_91695 = PC + 1;
	cppVar_91695 = (cppVar_91695 & cppMask_un_16_);
	BIT_VEC cppVar_91696 = ROM.rd(cppVar_91695);
	bool cppVar_91698 = (cppVar_91696 == 168);
	BIT_VEC cppVar_91699 = PC + 1;
	cppVar_91699 = (cppVar_91699 & cppMask_un_16_);
	BIT_VEC cppVar_91700 = ROM.rd(cppVar_91699);
	bool cppVar_91702 = (cppVar_91700 == 176);
	BIT_VEC cppVar_91703 = PC + 1;
	cppVar_91703 = (cppVar_91703 & cppMask_un_16_);
	BIT_VEC cppVar_91704 = ROM.rd(cppVar_91703);
	bool cppVar_91706 = (cppVar_91704 == 184);
	BIT_VEC cppVar_91707 = PC + 1;
	cppVar_91707 = (cppVar_91707 & cppMask_un_16_);
	BIT_VEC cppVar_91708 = ROM.rd(cppVar_91707);
	bool cppVar_91710 = (cppVar_91708 == 208);
	BIT_VEC cppVar_91711 = PC + 1;
	cppVar_91711 = (cppVar_91711 & cppMask_un_16_);
	BIT_VEC cppVar_91712 = ROM.rd(cppVar_91711);
	bool cppVar_91714 = (cppVar_91712 == 224);
	BIT_VEC cppVar_91715 = PC + 1;
	cppVar_91715 = (cppVar_91715 & cppMask_un_16_);
	BIT_VEC cppVar_91716 = ROM.rd(cppVar_91715);
	bool cppVar_91718 = (cppVar_91716 == 240);
	BIT_VEC cppVar_91720 = (cppVar_91718) ? B : 0;
	BIT_VEC cppVar_91721 = (cppVar_91714) ? ACC : cppVar_91720;
	BIT_VEC cppVar_91722 = (cppVar_91710) ? PSW : cppVar_91721;
	BIT_VEC cppVar_91723 = (cppVar_91706) ? IP : cppVar_91722;
	BIT_VEC cppVar_91724 = (cppVar_91702) ? P3 : cppVar_91723;
	BIT_VEC cppVar_91725 = (cppVar_91698) ? IE : cppVar_91724;
	BIT_VEC cppVar_91726 = (cppVar_91694) ? P2 : cppVar_91725;
	BIT_VEC cppVar_91727 = (cppVar_91690) ? SBUF : cppVar_91726;
	BIT_VEC cppVar_91728 = (cppVar_91686) ? SCON : cppVar_91727;
	BIT_VEC cppVar_91729 = (cppVar_91682) ? P1 : cppVar_91728;
	BIT_VEC cppVar_91730 = (cppVar_91678) ? TH1 : cppVar_91729;
	BIT_VEC cppVar_91731 = (cppVar_91674) ? TL1 : cppVar_91730;
	BIT_VEC cppVar_91732 = (cppVar_91670) ? TH0 : cppVar_91731;
	BIT_VEC cppVar_91733 = (cppVar_91666) ? TL0 : cppVar_91732;
	BIT_VEC cppVar_91734 = (cppVar_91662) ? TMOD : cppVar_91733;
	BIT_VEC cppVar_91735 = (cppVar_91658) ? TCON : cppVar_91734;
	BIT_VEC cppVar_91736 = (cppVar_91654) ? PCON : cppVar_91735;
	BIT_VEC cppVar_91737 = (cppVar_91650) ? DPH : cppVar_91736;
	BIT_VEC cppVar_91738 = (cppVar_91646) ? DPL : cppVar_91737;
	BIT_VEC cppVar_91739 = (cppVar_91642) ? SP : cppVar_91738;
	BIT_VEC cppVar_91740 = (cppVar_91638) ? P0 : cppVar_91739;
	BIT_VEC cppVar_91741 = (cppVar_91631) ? cppVar_91634 : cppVar_91740;
	BIT_VEC cppVar_91743 = PC + 2;
	cppVar_91743 = (cppVar_91743 & cppMask_un_16_);
	BIT_VEC cppVar_91744 = ROM.rd(cppVar_91743);
	BIT_VEC cppVar_91745 = cppVar_91741 ^ cppVar_91744;
	type_mem cppVar_91746 = IRAM;
	cppVar_91746.wr(cppVar_91626, cppVar_91745);
	type_mem& cppVar_91747 = (cppVar_91624) ? cppVar_91746 : IRAM;
	BIT_VEC cppVar_91748 = ROM.rd(PC);
	bool cppVar_91750 = (cppVar_91748 == 98);
	BIT_VEC cppVar_91752 = PC + 1;
	cppVar_91752 = (cppVar_91752 & cppMask_un_16_);
	BIT_VEC cppVar_91753 = ROM.rd(cppVar_91752);
	BIT_VEC cppVar_91754 = (cppVar_91753 >> 7) & cppMask_un_1_;
	bool cppVar_91756 = (cppVar_91754 == 0);
	BIT_VEC cppVar_91757 = PC + 1;
	cppVar_91757 = (cppVar_91757 & cppMask_un_16_);
	BIT_VEC cppVar_91758 = ROM.rd(cppVar_91757);
	BIT_VEC cppVar_91759 = PC + 1;
	cppVar_91759 = (cppVar_91759 & cppMask_un_16_);
	BIT_VEC cppVar_91760 = ROM.rd(cppVar_91759);
	BIT_VEC cppVar_91761 = (cppVar_91760 >> 7) & cppMask_un_1_;
	bool cppVar_91763 = (cppVar_91761 == 0);
	BIT_VEC cppVar_91764 = PC + 1;
	cppVar_91764 = (cppVar_91764 & cppMask_un_16_);
	BIT_VEC cppVar_91765 = ROM.rd(cppVar_91764);
	BIT_VEC cppVar_91766 = IRAM.rd(cppVar_91765);
	BIT_VEC cppVar_91767 = PC + 1;
	cppVar_91767 = (cppVar_91767 & cppMask_un_16_);
	BIT_VEC cppVar_91768 = ROM.rd(cppVar_91767);
	bool cppVar_91770 = (cppVar_91768 == 128);
	BIT_VEC cppVar_91771 = PC + 1;
	cppVar_91771 = (cppVar_91771 & cppMask_un_16_);
	BIT_VEC cppVar_91772 = ROM.rd(cppVar_91771);
	bool cppVar_91774 = (cppVar_91772 == 129);
	BIT_VEC cppVar_91775 = PC + 1;
	cppVar_91775 = (cppVar_91775 & cppMask_un_16_);
	BIT_VEC cppVar_91776 = ROM.rd(cppVar_91775);
	bool cppVar_91778 = (cppVar_91776 == 130);
	BIT_VEC cppVar_91779 = PC + 1;
	cppVar_91779 = (cppVar_91779 & cppMask_un_16_);
	BIT_VEC cppVar_91780 = ROM.rd(cppVar_91779);
	bool cppVar_91782 = (cppVar_91780 == 131);
	BIT_VEC cppVar_91783 = PC + 1;
	cppVar_91783 = (cppVar_91783 & cppMask_un_16_);
	BIT_VEC cppVar_91784 = ROM.rd(cppVar_91783);
	bool cppVar_91786 = (cppVar_91784 == 135);
	BIT_VEC cppVar_91787 = PC + 1;
	cppVar_91787 = (cppVar_91787 & cppMask_un_16_);
	BIT_VEC cppVar_91788 = ROM.rd(cppVar_91787);
	bool cppVar_91790 = (cppVar_91788 == 136);
	BIT_VEC cppVar_91791 = PC + 1;
	cppVar_91791 = (cppVar_91791 & cppMask_un_16_);
	BIT_VEC cppVar_91792 = ROM.rd(cppVar_91791);
	bool cppVar_91794 = (cppVar_91792 == 137);
	BIT_VEC cppVar_91795 = PC + 1;
	cppVar_91795 = (cppVar_91795 & cppMask_un_16_);
	BIT_VEC cppVar_91796 = ROM.rd(cppVar_91795);
	bool cppVar_91798 = (cppVar_91796 == 138);
	BIT_VEC cppVar_91799 = PC + 1;
	cppVar_91799 = (cppVar_91799 & cppMask_un_16_);
	BIT_VEC cppVar_91800 = ROM.rd(cppVar_91799);
	bool cppVar_91802 = (cppVar_91800 == 140);
	BIT_VEC cppVar_91803 = PC + 1;
	cppVar_91803 = (cppVar_91803 & cppMask_un_16_);
	BIT_VEC cppVar_91804 = ROM.rd(cppVar_91803);
	bool cppVar_91806 = (cppVar_91804 == 139);
	BIT_VEC cppVar_91807 = PC + 1;
	cppVar_91807 = (cppVar_91807 & cppMask_un_16_);
	BIT_VEC cppVar_91808 = ROM.rd(cppVar_91807);
	bool cppVar_91810 = (cppVar_91808 == 141);
	BIT_VEC cppVar_91811 = PC + 1;
	cppVar_91811 = (cppVar_91811 & cppMask_un_16_);
	BIT_VEC cppVar_91812 = ROM.rd(cppVar_91811);
	bool cppVar_91814 = (cppVar_91812 == 144);
	BIT_VEC cppVar_91815 = PC + 1;
	cppVar_91815 = (cppVar_91815 & cppMask_un_16_);
	BIT_VEC cppVar_91816 = ROM.rd(cppVar_91815);
	bool cppVar_91818 = (cppVar_91816 == 152);
	BIT_VEC cppVar_91819 = PC + 1;
	cppVar_91819 = (cppVar_91819 & cppMask_un_16_);
	BIT_VEC cppVar_91820 = ROM.rd(cppVar_91819);
	bool cppVar_91822 = (cppVar_91820 == 153);
	BIT_VEC cppVar_91823 = PC + 1;
	cppVar_91823 = (cppVar_91823 & cppMask_un_16_);
	BIT_VEC cppVar_91824 = ROM.rd(cppVar_91823);
	bool cppVar_91826 = (cppVar_91824 == 160);
	BIT_VEC cppVar_91827 = PC + 1;
	cppVar_91827 = (cppVar_91827 & cppMask_un_16_);
	BIT_VEC cppVar_91828 = ROM.rd(cppVar_91827);
	bool cppVar_91830 = (cppVar_91828 == 168);
	BIT_VEC cppVar_91831 = PC + 1;
	cppVar_91831 = (cppVar_91831 & cppMask_un_16_);
	BIT_VEC cppVar_91832 = ROM.rd(cppVar_91831);
	bool cppVar_91834 = (cppVar_91832 == 176);
	BIT_VEC cppVar_91835 = PC + 1;
	cppVar_91835 = (cppVar_91835 & cppMask_un_16_);
	BIT_VEC cppVar_91836 = ROM.rd(cppVar_91835);
	bool cppVar_91838 = (cppVar_91836 == 184);
	BIT_VEC cppVar_91839 = PC + 1;
	cppVar_91839 = (cppVar_91839 & cppMask_un_16_);
	BIT_VEC cppVar_91840 = ROM.rd(cppVar_91839);
	bool cppVar_91842 = (cppVar_91840 == 208);
	BIT_VEC cppVar_91843 = PC + 1;
	cppVar_91843 = (cppVar_91843 & cppMask_un_16_);
	BIT_VEC cppVar_91844 = ROM.rd(cppVar_91843);
	bool cppVar_91846 = (cppVar_91844 == 224);
	BIT_VEC cppVar_91847 = PC + 1;
	cppVar_91847 = (cppVar_91847 & cppMask_un_16_);
	BIT_VEC cppVar_91848 = ROM.rd(cppVar_91847);
	bool cppVar_91850 = (cppVar_91848 == 240);
	BIT_VEC cppVar_91852 = (cppVar_91850) ? B : 0;
	BIT_VEC cppVar_91853 = (cppVar_91846) ? ACC : cppVar_91852;
	BIT_VEC cppVar_91854 = (cppVar_91842) ? PSW : cppVar_91853;
	BIT_VEC cppVar_91855 = (cppVar_91838) ? IP : cppVar_91854;
	BIT_VEC cppVar_91856 = (cppVar_91834) ? P3 : cppVar_91855;
	BIT_VEC cppVar_91857 = (cppVar_91830) ? IE : cppVar_91856;
	BIT_VEC cppVar_91858 = (cppVar_91826) ? P2 : cppVar_91857;
	BIT_VEC cppVar_91859 = (cppVar_91822) ? SBUF : cppVar_91858;
	BIT_VEC cppVar_91860 = (cppVar_91818) ? SCON : cppVar_91859;
	BIT_VEC cppVar_91861 = (cppVar_91814) ? P1 : cppVar_91860;
	BIT_VEC cppVar_91862 = (cppVar_91810) ? TH1 : cppVar_91861;
	BIT_VEC cppVar_91863 = (cppVar_91806) ? TL1 : cppVar_91862;
	BIT_VEC cppVar_91864 = (cppVar_91802) ? TH0 : cppVar_91863;
	BIT_VEC cppVar_91865 = (cppVar_91798) ? TL0 : cppVar_91864;
	BIT_VEC cppVar_91866 = (cppVar_91794) ? TMOD : cppVar_91865;
	BIT_VEC cppVar_91867 = (cppVar_91790) ? TCON : cppVar_91866;
	BIT_VEC cppVar_91868 = (cppVar_91786) ? PCON : cppVar_91867;
	BIT_VEC cppVar_91869 = (cppVar_91782) ? DPH : cppVar_91868;
	BIT_VEC cppVar_91870 = (cppVar_91778) ? DPL : cppVar_91869;
	BIT_VEC cppVar_91871 = (cppVar_91774) ? SP : cppVar_91870;
	BIT_VEC cppVar_91872 = (cppVar_91770) ? P0 : cppVar_91871;
	BIT_VEC cppVar_91873 = (cppVar_91763) ? cppVar_91766 : cppVar_91872;
	BIT_VEC cppVar_91874 = cppVar_91873 ^ ACC;
	type_mem cppVar_91875 = IRAM;
	cppVar_91875.wr(cppVar_91758, cppVar_91874);
	type_mem& cppVar_91876 = (cppVar_91756) ? cppVar_91875 : IRAM;
	BIT_VEC cppVar_91877 = ROM.rd(PC);
	bool cppVar_91879 = (cppVar_91877 == 83);
	BIT_VEC cppVar_91881 = PC + 1;
	cppVar_91881 = (cppVar_91881 & cppMask_un_16_);
	BIT_VEC cppVar_91882 = ROM.rd(cppVar_91881);
	BIT_VEC cppVar_91883 = (cppVar_91882 >> 7) & cppMask_un_1_;
	bool cppVar_91885 = (cppVar_91883 == 0);
	BIT_VEC cppVar_91886 = PC + 1;
	cppVar_91886 = (cppVar_91886 & cppMask_un_16_);
	BIT_VEC cppVar_91887 = ROM.rd(cppVar_91886);
	BIT_VEC cppVar_91888 = PC + 1;
	cppVar_91888 = (cppVar_91888 & cppMask_un_16_);
	BIT_VEC cppVar_91889 = ROM.rd(cppVar_91888);
	BIT_VEC cppVar_91890 = (cppVar_91889 >> 7) & cppMask_un_1_;
	bool cppVar_91892 = (cppVar_91890 == 0);
	BIT_VEC cppVar_91893 = PC + 1;
	cppVar_91893 = (cppVar_91893 & cppMask_un_16_);
	BIT_VEC cppVar_91894 = ROM.rd(cppVar_91893);
	BIT_VEC cppVar_91895 = IRAM.rd(cppVar_91894);
	BIT_VEC cppVar_91896 = PC + 1;
	cppVar_91896 = (cppVar_91896 & cppMask_un_16_);
	BIT_VEC cppVar_91897 = ROM.rd(cppVar_91896);
	bool cppVar_91899 = (cppVar_91897 == 128);
	BIT_VEC cppVar_91900 = PC + 1;
	cppVar_91900 = (cppVar_91900 & cppMask_un_16_);
	BIT_VEC cppVar_91901 = ROM.rd(cppVar_91900);
	bool cppVar_91903 = (cppVar_91901 == 129);
	BIT_VEC cppVar_91904 = PC + 1;
	cppVar_91904 = (cppVar_91904 & cppMask_un_16_);
	BIT_VEC cppVar_91905 = ROM.rd(cppVar_91904);
	bool cppVar_91907 = (cppVar_91905 == 130);
	BIT_VEC cppVar_91908 = PC + 1;
	cppVar_91908 = (cppVar_91908 & cppMask_un_16_);
	BIT_VEC cppVar_91909 = ROM.rd(cppVar_91908);
	bool cppVar_91911 = (cppVar_91909 == 131);
	BIT_VEC cppVar_91912 = PC + 1;
	cppVar_91912 = (cppVar_91912 & cppMask_un_16_);
	BIT_VEC cppVar_91913 = ROM.rd(cppVar_91912);
	bool cppVar_91915 = (cppVar_91913 == 135);
	BIT_VEC cppVar_91916 = PC + 1;
	cppVar_91916 = (cppVar_91916 & cppMask_un_16_);
	BIT_VEC cppVar_91917 = ROM.rd(cppVar_91916);
	bool cppVar_91919 = (cppVar_91917 == 136);
	BIT_VEC cppVar_91920 = PC + 1;
	cppVar_91920 = (cppVar_91920 & cppMask_un_16_);
	BIT_VEC cppVar_91921 = ROM.rd(cppVar_91920);
	bool cppVar_91923 = (cppVar_91921 == 137);
	BIT_VEC cppVar_91924 = PC + 1;
	cppVar_91924 = (cppVar_91924 & cppMask_un_16_);
	BIT_VEC cppVar_91925 = ROM.rd(cppVar_91924);
	bool cppVar_91927 = (cppVar_91925 == 138);
	BIT_VEC cppVar_91928 = PC + 1;
	cppVar_91928 = (cppVar_91928 & cppMask_un_16_);
	BIT_VEC cppVar_91929 = ROM.rd(cppVar_91928);
	bool cppVar_91931 = (cppVar_91929 == 140);
	BIT_VEC cppVar_91932 = PC + 1;
	cppVar_91932 = (cppVar_91932 & cppMask_un_16_);
	BIT_VEC cppVar_91933 = ROM.rd(cppVar_91932);
	bool cppVar_91935 = (cppVar_91933 == 139);
	BIT_VEC cppVar_91936 = PC + 1;
	cppVar_91936 = (cppVar_91936 & cppMask_un_16_);
	BIT_VEC cppVar_91937 = ROM.rd(cppVar_91936);
	bool cppVar_91939 = (cppVar_91937 == 141);
	BIT_VEC cppVar_91940 = PC + 1;
	cppVar_91940 = (cppVar_91940 & cppMask_un_16_);
	BIT_VEC cppVar_91941 = ROM.rd(cppVar_91940);
	bool cppVar_91943 = (cppVar_91941 == 144);
	BIT_VEC cppVar_91944 = PC + 1;
	cppVar_91944 = (cppVar_91944 & cppMask_un_16_);
	BIT_VEC cppVar_91945 = ROM.rd(cppVar_91944);
	bool cppVar_91947 = (cppVar_91945 == 152);
	BIT_VEC cppVar_91948 = PC + 1;
	cppVar_91948 = (cppVar_91948 & cppMask_un_16_);
	BIT_VEC cppVar_91949 = ROM.rd(cppVar_91948);
	bool cppVar_91951 = (cppVar_91949 == 153);
	BIT_VEC cppVar_91952 = PC + 1;
	cppVar_91952 = (cppVar_91952 & cppMask_un_16_);
	BIT_VEC cppVar_91953 = ROM.rd(cppVar_91952);
	bool cppVar_91955 = (cppVar_91953 == 160);
	BIT_VEC cppVar_91956 = PC + 1;
	cppVar_91956 = (cppVar_91956 & cppMask_un_16_);
	BIT_VEC cppVar_91957 = ROM.rd(cppVar_91956);
	bool cppVar_91959 = (cppVar_91957 == 168);
	BIT_VEC cppVar_91960 = PC + 1;
	cppVar_91960 = (cppVar_91960 & cppMask_un_16_);
	BIT_VEC cppVar_91961 = ROM.rd(cppVar_91960);
	bool cppVar_91963 = (cppVar_91961 == 176);
	BIT_VEC cppVar_91964 = PC + 1;
	cppVar_91964 = (cppVar_91964 & cppMask_un_16_);
	BIT_VEC cppVar_91965 = ROM.rd(cppVar_91964);
	bool cppVar_91967 = (cppVar_91965 == 184);
	BIT_VEC cppVar_91968 = PC + 1;
	cppVar_91968 = (cppVar_91968 & cppMask_un_16_);
	BIT_VEC cppVar_91969 = ROM.rd(cppVar_91968);
	bool cppVar_91971 = (cppVar_91969 == 208);
	BIT_VEC cppVar_91972 = PC + 1;
	cppVar_91972 = (cppVar_91972 & cppMask_un_16_);
	BIT_VEC cppVar_91973 = ROM.rd(cppVar_91972);
	bool cppVar_91975 = (cppVar_91973 == 224);
	BIT_VEC cppVar_91976 = PC + 1;
	cppVar_91976 = (cppVar_91976 & cppMask_un_16_);
	BIT_VEC cppVar_91977 = ROM.rd(cppVar_91976);
	bool cppVar_91979 = (cppVar_91977 == 240);
	BIT_VEC cppVar_91981 = (cppVar_91979) ? B : 0;
	BIT_VEC cppVar_91982 = (cppVar_91975) ? ACC : cppVar_91981;
	BIT_VEC cppVar_91983 = (cppVar_91971) ? PSW : cppVar_91982;
	BIT_VEC cppVar_91984 = (cppVar_91967) ? IP : cppVar_91983;
	BIT_VEC cppVar_91985 = (cppVar_91963) ? P3 : cppVar_91984;
	BIT_VEC cppVar_91986 = (cppVar_91959) ? IE : cppVar_91985;
	BIT_VEC cppVar_91987 = (cppVar_91955) ? P2 : cppVar_91986;
	BIT_VEC cppVar_91988 = (cppVar_91951) ? SBUF : cppVar_91987;
	BIT_VEC cppVar_91989 = (cppVar_91947) ? SCON : cppVar_91988;
	BIT_VEC cppVar_91990 = (cppVar_91943) ? P1 : cppVar_91989;
	BIT_VEC cppVar_91991 = (cppVar_91939) ? TH1 : cppVar_91990;
	BIT_VEC cppVar_91992 = (cppVar_91935) ? TL1 : cppVar_91991;
	BIT_VEC cppVar_91993 = (cppVar_91931) ? TH0 : cppVar_91992;
	BIT_VEC cppVar_91994 = (cppVar_91927) ? TL0 : cppVar_91993;
	BIT_VEC cppVar_91995 = (cppVar_91923) ? TMOD : cppVar_91994;
	BIT_VEC cppVar_91996 = (cppVar_91919) ? TCON : cppVar_91995;
	BIT_VEC cppVar_91997 = (cppVar_91915) ? PCON : cppVar_91996;
	BIT_VEC cppVar_91998 = (cppVar_91911) ? DPH : cppVar_91997;
	BIT_VEC cppVar_91999 = (cppVar_91907) ? DPL : cppVar_91998;
	BIT_VEC cppVar_92000 = (cppVar_91903) ? SP : cppVar_91999;
	BIT_VEC cppVar_92001 = (cppVar_91899) ? P0 : cppVar_92000;
	BIT_VEC cppVar_92002 = (cppVar_91892) ? cppVar_91895 : cppVar_92001;
	BIT_VEC cppVar_92004 = PC + 2;
	cppVar_92004 = (cppVar_92004 & cppMask_un_16_);
	BIT_VEC cppVar_92005 = ROM.rd(cppVar_92004);
	BIT_VEC cppVar_92006 = cppVar_92002 & cppVar_92005;
	type_mem cppVar_92007 = IRAM;
	cppVar_92007.wr(cppVar_91887, cppVar_92006);
	type_mem& cppVar_92008 = (cppVar_91885) ? cppVar_92007 : IRAM;
	BIT_VEC cppVar_92009 = ROM.rd(PC);
	bool cppVar_92011 = (cppVar_92009 == 82);
	BIT_VEC cppVar_92013 = PC + 1;
	cppVar_92013 = (cppVar_92013 & cppMask_un_16_);
	BIT_VEC cppVar_92014 = ROM.rd(cppVar_92013);
	BIT_VEC cppVar_92015 = (cppVar_92014 >> 7) & cppMask_un_1_;
	bool cppVar_92017 = (cppVar_92015 == 0);
	BIT_VEC cppVar_92018 = PC + 1;
	cppVar_92018 = (cppVar_92018 & cppMask_un_16_);
	BIT_VEC cppVar_92019 = ROM.rd(cppVar_92018);
	BIT_VEC cppVar_92020 = PC + 1;
	cppVar_92020 = (cppVar_92020 & cppMask_un_16_);
	BIT_VEC cppVar_92021 = ROM.rd(cppVar_92020);
	BIT_VEC cppVar_92022 = (cppVar_92021 >> 7) & cppMask_un_1_;
	bool cppVar_92024 = (cppVar_92022 == 0);
	BIT_VEC cppVar_92025 = PC + 1;
	cppVar_92025 = (cppVar_92025 & cppMask_un_16_);
	BIT_VEC cppVar_92026 = ROM.rd(cppVar_92025);
	BIT_VEC cppVar_92027 = IRAM.rd(cppVar_92026);
	BIT_VEC cppVar_92028 = PC + 1;
	cppVar_92028 = (cppVar_92028 & cppMask_un_16_);
	BIT_VEC cppVar_92029 = ROM.rd(cppVar_92028);
	bool cppVar_92031 = (cppVar_92029 == 128);
	BIT_VEC cppVar_92032 = PC + 1;
	cppVar_92032 = (cppVar_92032 & cppMask_un_16_);
	BIT_VEC cppVar_92033 = ROM.rd(cppVar_92032);
	bool cppVar_92035 = (cppVar_92033 == 129);
	BIT_VEC cppVar_92036 = PC + 1;
	cppVar_92036 = (cppVar_92036 & cppMask_un_16_);
	BIT_VEC cppVar_92037 = ROM.rd(cppVar_92036);
	bool cppVar_92039 = (cppVar_92037 == 130);
	BIT_VEC cppVar_92040 = PC + 1;
	cppVar_92040 = (cppVar_92040 & cppMask_un_16_);
	BIT_VEC cppVar_92041 = ROM.rd(cppVar_92040);
	bool cppVar_92043 = (cppVar_92041 == 131);
	BIT_VEC cppVar_92044 = PC + 1;
	cppVar_92044 = (cppVar_92044 & cppMask_un_16_);
	BIT_VEC cppVar_92045 = ROM.rd(cppVar_92044);
	bool cppVar_92047 = (cppVar_92045 == 135);
	BIT_VEC cppVar_92048 = PC + 1;
	cppVar_92048 = (cppVar_92048 & cppMask_un_16_);
	BIT_VEC cppVar_92049 = ROM.rd(cppVar_92048);
	bool cppVar_92051 = (cppVar_92049 == 136);
	BIT_VEC cppVar_92052 = PC + 1;
	cppVar_92052 = (cppVar_92052 & cppMask_un_16_);
	BIT_VEC cppVar_92053 = ROM.rd(cppVar_92052);
	bool cppVar_92055 = (cppVar_92053 == 137);
	BIT_VEC cppVar_92056 = PC + 1;
	cppVar_92056 = (cppVar_92056 & cppMask_un_16_);
	BIT_VEC cppVar_92057 = ROM.rd(cppVar_92056);
	bool cppVar_92059 = (cppVar_92057 == 138);
	BIT_VEC cppVar_92060 = PC + 1;
	cppVar_92060 = (cppVar_92060 & cppMask_un_16_);
	BIT_VEC cppVar_92061 = ROM.rd(cppVar_92060);
	bool cppVar_92063 = (cppVar_92061 == 140);
	BIT_VEC cppVar_92064 = PC + 1;
	cppVar_92064 = (cppVar_92064 & cppMask_un_16_);
	BIT_VEC cppVar_92065 = ROM.rd(cppVar_92064);
	bool cppVar_92067 = (cppVar_92065 == 139);
	BIT_VEC cppVar_92068 = PC + 1;
	cppVar_92068 = (cppVar_92068 & cppMask_un_16_);
	BIT_VEC cppVar_92069 = ROM.rd(cppVar_92068);
	bool cppVar_92071 = (cppVar_92069 == 141);
	BIT_VEC cppVar_92072 = PC + 1;
	cppVar_92072 = (cppVar_92072 & cppMask_un_16_);
	BIT_VEC cppVar_92073 = ROM.rd(cppVar_92072);
	bool cppVar_92075 = (cppVar_92073 == 144);
	BIT_VEC cppVar_92076 = PC + 1;
	cppVar_92076 = (cppVar_92076 & cppMask_un_16_);
	BIT_VEC cppVar_92077 = ROM.rd(cppVar_92076);
	bool cppVar_92079 = (cppVar_92077 == 152);
	BIT_VEC cppVar_92080 = PC + 1;
	cppVar_92080 = (cppVar_92080 & cppMask_un_16_);
	BIT_VEC cppVar_92081 = ROM.rd(cppVar_92080);
	bool cppVar_92083 = (cppVar_92081 == 153);
	BIT_VEC cppVar_92084 = PC + 1;
	cppVar_92084 = (cppVar_92084 & cppMask_un_16_);
	BIT_VEC cppVar_92085 = ROM.rd(cppVar_92084);
	bool cppVar_92087 = (cppVar_92085 == 160);
	BIT_VEC cppVar_92088 = PC + 1;
	cppVar_92088 = (cppVar_92088 & cppMask_un_16_);
	BIT_VEC cppVar_92089 = ROM.rd(cppVar_92088);
	bool cppVar_92091 = (cppVar_92089 == 168);
	BIT_VEC cppVar_92092 = PC + 1;
	cppVar_92092 = (cppVar_92092 & cppMask_un_16_);
	BIT_VEC cppVar_92093 = ROM.rd(cppVar_92092);
	bool cppVar_92095 = (cppVar_92093 == 176);
	BIT_VEC cppVar_92096 = PC + 1;
	cppVar_92096 = (cppVar_92096 & cppMask_un_16_);
	BIT_VEC cppVar_92097 = ROM.rd(cppVar_92096);
	bool cppVar_92099 = (cppVar_92097 == 184);
	BIT_VEC cppVar_92100 = PC + 1;
	cppVar_92100 = (cppVar_92100 & cppMask_un_16_);
	BIT_VEC cppVar_92101 = ROM.rd(cppVar_92100);
	bool cppVar_92103 = (cppVar_92101 == 208);
	BIT_VEC cppVar_92104 = PC + 1;
	cppVar_92104 = (cppVar_92104 & cppMask_un_16_);
	BIT_VEC cppVar_92105 = ROM.rd(cppVar_92104);
	bool cppVar_92107 = (cppVar_92105 == 224);
	BIT_VEC cppVar_92108 = PC + 1;
	cppVar_92108 = (cppVar_92108 & cppMask_un_16_);
	BIT_VEC cppVar_92109 = ROM.rd(cppVar_92108);
	bool cppVar_92111 = (cppVar_92109 == 240);
	BIT_VEC cppVar_92113 = (cppVar_92111) ? B : 0;
	BIT_VEC cppVar_92114 = (cppVar_92107) ? ACC : cppVar_92113;
	BIT_VEC cppVar_92115 = (cppVar_92103) ? PSW : cppVar_92114;
	BIT_VEC cppVar_92116 = (cppVar_92099) ? IP : cppVar_92115;
	BIT_VEC cppVar_92117 = (cppVar_92095) ? P3 : cppVar_92116;
	BIT_VEC cppVar_92118 = (cppVar_92091) ? IE : cppVar_92117;
	BIT_VEC cppVar_92119 = (cppVar_92087) ? P2 : cppVar_92118;
	BIT_VEC cppVar_92120 = (cppVar_92083) ? SBUF : cppVar_92119;
	BIT_VEC cppVar_92121 = (cppVar_92079) ? SCON : cppVar_92120;
	BIT_VEC cppVar_92122 = (cppVar_92075) ? P1 : cppVar_92121;
	BIT_VEC cppVar_92123 = (cppVar_92071) ? TH1 : cppVar_92122;
	BIT_VEC cppVar_92124 = (cppVar_92067) ? TL1 : cppVar_92123;
	BIT_VEC cppVar_92125 = (cppVar_92063) ? TH0 : cppVar_92124;
	BIT_VEC cppVar_92126 = (cppVar_92059) ? TL0 : cppVar_92125;
	BIT_VEC cppVar_92127 = (cppVar_92055) ? TMOD : cppVar_92126;
	BIT_VEC cppVar_92128 = (cppVar_92051) ? TCON : cppVar_92127;
	BIT_VEC cppVar_92129 = (cppVar_92047) ? PCON : cppVar_92128;
	BIT_VEC cppVar_92130 = (cppVar_92043) ? DPH : cppVar_92129;
	BIT_VEC cppVar_92131 = (cppVar_92039) ? DPL : cppVar_92130;
	BIT_VEC cppVar_92132 = (cppVar_92035) ? SP : cppVar_92131;
	BIT_VEC cppVar_92133 = (cppVar_92031) ? P0 : cppVar_92132;
	BIT_VEC cppVar_92134 = (cppVar_92024) ? cppVar_92027 : cppVar_92133;
	BIT_VEC cppVar_92135 = cppVar_92134 & ACC;
	type_mem cppVar_92136 = IRAM;
	cppVar_92136.wr(cppVar_92019, cppVar_92135);
	type_mem& cppVar_92137 = (cppVar_92017) ? cppVar_92136 : IRAM;
	BIT_VEC cppVar_92138 = ROM.rd(PC);
	bool cppVar_92140 = (cppVar_92138 == 67);
	BIT_VEC cppVar_92142 = PC + 1;
	cppVar_92142 = (cppVar_92142 & cppMask_un_16_);
	BIT_VEC cppVar_92143 = ROM.rd(cppVar_92142);
	BIT_VEC cppVar_92144 = (cppVar_92143 >> 7) & cppMask_un_1_;
	bool cppVar_92146 = (cppVar_92144 == 0);
	BIT_VEC cppVar_92147 = PC + 1;
	cppVar_92147 = (cppVar_92147 & cppMask_un_16_);
	BIT_VEC cppVar_92148 = ROM.rd(cppVar_92147);
	BIT_VEC cppVar_92149 = PC + 1;
	cppVar_92149 = (cppVar_92149 & cppMask_un_16_);
	BIT_VEC cppVar_92150 = ROM.rd(cppVar_92149);
	BIT_VEC cppVar_92151 = (cppVar_92150 >> 7) & cppMask_un_1_;
	bool cppVar_92153 = (cppVar_92151 == 0);
	BIT_VEC cppVar_92154 = PC + 1;
	cppVar_92154 = (cppVar_92154 & cppMask_un_16_);
	BIT_VEC cppVar_92155 = ROM.rd(cppVar_92154);
	BIT_VEC cppVar_92156 = IRAM.rd(cppVar_92155);
	BIT_VEC cppVar_92157 = PC + 1;
	cppVar_92157 = (cppVar_92157 & cppMask_un_16_);
	BIT_VEC cppVar_92158 = ROM.rd(cppVar_92157);
	bool cppVar_92160 = (cppVar_92158 == 128);
	BIT_VEC cppVar_92161 = PC + 1;
	cppVar_92161 = (cppVar_92161 & cppMask_un_16_);
	BIT_VEC cppVar_92162 = ROM.rd(cppVar_92161);
	bool cppVar_92164 = (cppVar_92162 == 129);
	BIT_VEC cppVar_92165 = PC + 1;
	cppVar_92165 = (cppVar_92165 & cppMask_un_16_);
	BIT_VEC cppVar_92166 = ROM.rd(cppVar_92165);
	bool cppVar_92168 = (cppVar_92166 == 130);
	BIT_VEC cppVar_92169 = PC + 1;
	cppVar_92169 = (cppVar_92169 & cppMask_un_16_);
	BIT_VEC cppVar_92170 = ROM.rd(cppVar_92169);
	bool cppVar_92172 = (cppVar_92170 == 131);
	BIT_VEC cppVar_92173 = PC + 1;
	cppVar_92173 = (cppVar_92173 & cppMask_un_16_);
	BIT_VEC cppVar_92174 = ROM.rd(cppVar_92173);
	bool cppVar_92176 = (cppVar_92174 == 135);
	BIT_VEC cppVar_92177 = PC + 1;
	cppVar_92177 = (cppVar_92177 & cppMask_un_16_);
	BIT_VEC cppVar_92178 = ROM.rd(cppVar_92177);
	bool cppVar_92180 = (cppVar_92178 == 136);
	BIT_VEC cppVar_92181 = PC + 1;
	cppVar_92181 = (cppVar_92181 & cppMask_un_16_);
	BIT_VEC cppVar_92182 = ROM.rd(cppVar_92181);
	bool cppVar_92184 = (cppVar_92182 == 137);
	BIT_VEC cppVar_92185 = PC + 1;
	cppVar_92185 = (cppVar_92185 & cppMask_un_16_);
	BIT_VEC cppVar_92186 = ROM.rd(cppVar_92185);
	bool cppVar_92188 = (cppVar_92186 == 138);
	BIT_VEC cppVar_92189 = PC + 1;
	cppVar_92189 = (cppVar_92189 & cppMask_un_16_);
	BIT_VEC cppVar_92190 = ROM.rd(cppVar_92189);
	bool cppVar_92192 = (cppVar_92190 == 140);
	BIT_VEC cppVar_92193 = PC + 1;
	cppVar_92193 = (cppVar_92193 & cppMask_un_16_);
	BIT_VEC cppVar_92194 = ROM.rd(cppVar_92193);
	bool cppVar_92196 = (cppVar_92194 == 139);
	BIT_VEC cppVar_92197 = PC + 1;
	cppVar_92197 = (cppVar_92197 & cppMask_un_16_);
	BIT_VEC cppVar_92198 = ROM.rd(cppVar_92197);
	bool cppVar_92200 = (cppVar_92198 == 141);
	BIT_VEC cppVar_92201 = PC + 1;
	cppVar_92201 = (cppVar_92201 & cppMask_un_16_);
	BIT_VEC cppVar_92202 = ROM.rd(cppVar_92201);
	bool cppVar_92204 = (cppVar_92202 == 144);
	BIT_VEC cppVar_92205 = PC + 1;
	cppVar_92205 = (cppVar_92205 & cppMask_un_16_);
	BIT_VEC cppVar_92206 = ROM.rd(cppVar_92205);
	bool cppVar_92208 = (cppVar_92206 == 152);
	BIT_VEC cppVar_92209 = PC + 1;
	cppVar_92209 = (cppVar_92209 & cppMask_un_16_);
	BIT_VEC cppVar_92210 = ROM.rd(cppVar_92209);
	bool cppVar_92212 = (cppVar_92210 == 153);
	BIT_VEC cppVar_92213 = PC + 1;
	cppVar_92213 = (cppVar_92213 & cppMask_un_16_);
	BIT_VEC cppVar_92214 = ROM.rd(cppVar_92213);
	bool cppVar_92216 = (cppVar_92214 == 160);
	BIT_VEC cppVar_92217 = PC + 1;
	cppVar_92217 = (cppVar_92217 & cppMask_un_16_);
	BIT_VEC cppVar_92218 = ROM.rd(cppVar_92217);
	bool cppVar_92220 = (cppVar_92218 == 168);
	BIT_VEC cppVar_92221 = PC + 1;
	cppVar_92221 = (cppVar_92221 & cppMask_un_16_);
	BIT_VEC cppVar_92222 = ROM.rd(cppVar_92221);
	bool cppVar_92224 = (cppVar_92222 == 176);
	BIT_VEC cppVar_92225 = PC + 1;
	cppVar_92225 = (cppVar_92225 & cppMask_un_16_);
	BIT_VEC cppVar_92226 = ROM.rd(cppVar_92225);
	bool cppVar_92228 = (cppVar_92226 == 184);
	BIT_VEC cppVar_92229 = PC + 1;
	cppVar_92229 = (cppVar_92229 & cppMask_un_16_);
	BIT_VEC cppVar_92230 = ROM.rd(cppVar_92229);
	bool cppVar_92232 = (cppVar_92230 == 208);
	BIT_VEC cppVar_92233 = PC + 1;
	cppVar_92233 = (cppVar_92233 & cppMask_un_16_);
	BIT_VEC cppVar_92234 = ROM.rd(cppVar_92233);
	bool cppVar_92236 = (cppVar_92234 == 224);
	BIT_VEC cppVar_92237 = PC + 1;
	cppVar_92237 = (cppVar_92237 & cppMask_un_16_);
	BIT_VEC cppVar_92238 = ROM.rd(cppVar_92237);
	bool cppVar_92240 = (cppVar_92238 == 240);
	BIT_VEC cppVar_92242 = (cppVar_92240) ? B : 0;
	BIT_VEC cppVar_92243 = (cppVar_92236) ? ACC : cppVar_92242;
	BIT_VEC cppVar_92244 = (cppVar_92232) ? PSW : cppVar_92243;
	BIT_VEC cppVar_92245 = (cppVar_92228) ? IP : cppVar_92244;
	BIT_VEC cppVar_92246 = (cppVar_92224) ? P3 : cppVar_92245;
	BIT_VEC cppVar_92247 = (cppVar_92220) ? IE : cppVar_92246;
	BIT_VEC cppVar_92248 = (cppVar_92216) ? P2 : cppVar_92247;
	BIT_VEC cppVar_92249 = (cppVar_92212) ? SBUF : cppVar_92248;
	BIT_VEC cppVar_92250 = (cppVar_92208) ? SCON : cppVar_92249;
	BIT_VEC cppVar_92251 = (cppVar_92204) ? P1 : cppVar_92250;
	BIT_VEC cppVar_92252 = (cppVar_92200) ? TH1 : cppVar_92251;
	BIT_VEC cppVar_92253 = (cppVar_92196) ? TL1 : cppVar_92252;
	BIT_VEC cppVar_92254 = (cppVar_92192) ? TH0 : cppVar_92253;
	BIT_VEC cppVar_92255 = (cppVar_92188) ? TL0 : cppVar_92254;
	BIT_VEC cppVar_92256 = (cppVar_92184) ? TMOD : cppVar_92255;
	BIT_VEC cppVar_92257 = (cppVar_92180) ? TCON : cppVar_92256;
	BIT_VEC cppVar_92258 = (cppVar_92176) ? PCON : cppVar_92257;
	BIT_VEC cppVar_92259 = (cppVar_92172) ? DPH : cppVar_92258;
	BIT_VEC cppVar_92260 = (cppVar_92168) ? DPL : cppVar_92259;
	BIT_VEC cppVar_92261 = (cppVar_92164) ? SP : cppVar_92260;
	BIT_VEC cppVar_92262 = (cppVar_92160) ? P0 : cppVar_92261;
	BIT_VEC cppVar_92263 = (cppVar_92153) ? cppVar_92156 : cppVar_92262;
	BIT_VEC cppVar_92265 = PC + 2;
	cppVar_92265 = (cppVar_92265 & cppMask_un_16_);
	BIT_VEC cppVar_92266 = ROM.rd(cppVar_92265);
	BIT_VEC cppVar_92267 = cppVar_92263 | cppVar_92266;
	type_mem cppVar_92268 = IRAM;
	cppVar_92268.wr(cppVar_92148, cppVar_92267);
	type_mem& cppVar_92269 = (cppVar_92146) ? cppVar_92268 : IRAM;
	BIT_VEC cppVar_92270 = ROM.rd(PC);
	bool cppVar_92272 = (cppVar_92270 == 66);
	BIT_VEC cppVar_92274 = PC + 1;
	cppVar_92274 = (cppVar_92274 & cppMask_un_16_);
	BIT_VEC cppVar_92275 = ROM.rd(cppVar_92274);
	BIT_VEC cppVar_92276 = (cppVar_92275 >> 7) & cppMask_un_1_;
	bool cppVar_92278 = (cppVar_92276 == 0);
	BIT_VEC cppVar_92279 = PC + 1;
	cppVar_92279 = (cppVar_92279 & cppMask_un_16_);
	BIT_VEC cppVar_92280 = ROM.rd(cppVar_92279);
	BIT_VEC cppVar_92281 = PC + 1;
	cppVar_92281 = (cppVar_92281 & cppMask_un_16_);
	BIT_VEC cppVar_92282 = ROM.rd(cppVar_92281);
	BIT_VEC cppVar_92283 = (cppVar_92282 >> 7) & cppMask_un_1_;
	bool cppVar_92285 = (cppVar_92283 == 0);
	BIT_VEC cppVar_92286 = PC + 1;
	cppVar_92286 = (cppVar_92286 & cppMask_un_16_);
	BIT_VEC cppVar_92287 = ROM.rd(cppVar_92286);
	BIT_VEC cppVar_92288 = IRAM.rd(cppVar_92287);
	BIT_VEC cppVar_92289 = PC + 1;
	cppVar_92289 = (cppVar_92289 & cppMask_un_16_);
	BIT_VEC cppVar_92290 = ROM.rd(cppVar_92289);
	bool cppVar_92292 = (cppVar_92290 == 128);
	BIT_VEC cppVar_92293 = PC + 1;
	cppVar_92293 = (cppVar_92293 & cppMask_un_16_);
	BIT_VEC cppVar_92294 = ROM.rd(cppVar_92293);
	bool cppVar_92296 = (cppVar_92294 == 129);
	BIT_VEC cppVar_92297 = PC + 1;
	cppVar_92297 = (cppVar_92297 & cppMask_un_16_);
	BIT_VEC cppVar_92298 = ROM.rd(cppVar_92297);
	bool cppVar_92300 = (cppVar_92298 == 130);
	BIT_VEC cppVar_92301 = PC + 1;
	cppVar_92301 = (cppVar_92301 & cppMask_un_16_);
	BIT_VEC cppVar_92302 = ROM.rd(cppVar_92301);
	bool cppVar_92304 = (cppVar_92302 == 131);
	BIT_VEC cppVar_92305 = PC + 1;
	cppVar_92305 = (cppVar_92305 & cppMask_un_16_);
	BIT_VEC cppVar_92306 = ROM.rd(cppVar_92305);
	bool cppVar_92308 = (cppVar_92306 == 135);
	BIT_VEC cppVar_92309 = PC + 1;
	cppVar_92309 = (cppVar_92309 & cppMask_un_16_);
	BIT_VEC cppVar_92310 = ROM.rd(cppVar_92309);
	bool cppVar_92312 = (cppVar_92310 == 136);
	BIT_VEC cppVar_92313 = PC + 1;
	cppVar_92313 = (cppVar_92313 & cppMask_un_16_);
	BIT_VEC cppVar_92314 = ROM.rd(cppVar_92313);
	bool cppVar_92316 = (cppVar_92314 == 137);
	BIT_VEC cppVar_92317 = PC + 1;
	cppVar_92317 = (cppVar_92317 & cppMask_un_16_);
	BIT_VEC cppVar_92318 = ROM.rd(cppVar_92317);
	bool cppVar_92320 = (cppVar_92318 == 138);
	BIT_VEC cppVar_92321 = PC + 1;
	cppVar_92321 = (cppVar_92321 & cppMask_un_16_);
	BIT_VEC cppVar_92322 = ROM.rd(cppVar_92321);
	bool cppVar_92324 = (cppVar_92322 == 140);
	BIT_VEC cppVar_92325 = PC + 1;
	cppVar_92325 = (cppVar_92325 & cppMask_un_16_);
	BIT_VEC cppVar_92326 = ROM.rd(cppVar_92325);
	bool cppVar_92328 = (cppVar_92326 == 139);
	BIT_VEC cppVar_92329 = PC + 1;
	cppVar_92329 = (cppVar_92329 & cppMask_un_16_);
	BIT_VEC cppVar_92330 = ROM.rd(cppVar_92329);
	bool cppVar_92332 = (cppVar_92330 == 141);
	BIT_VEC cppVar_92333 = PC + 1;
	cppVar_92333 = (cppVar_92333 & cppMask_un_16_);
	BIT_VEC cppVar_92334 = ROM.rd(cppVar_92333);
	bool cppVar_92336 = (cppVar_92334 == 144);
	BIT_VEC cppVar_92337 = PC + 1;
	cppVar_92337 = (cppVar_92337 & cppMask_un_16_);
	BIT_VEC cppVar_92338 = ROM.rd(cppVar_92337);
	bool cppVar_92340 = (cppVar_92338 == 152);
	BIT_VEC cppVar_92341 = PC + 1;
	cppVar_92341 = (cppVar_92341 & cppMask_un_16_);
	BIT_VEC cppVar_92342 = ROM.rd(cppVar_92341);
	bool cppVar_92344 = (cppVar_92342 == 153);
	BIT_VEC cppVar_92345 = PC + 1;
	cppVar_92345 = (cppVar_92345 & cppMask_un_16_);
	BIT_VEC cppVar_92346 = ROM.rd(cppVar_92345);
	bool cppVar_92348 = (cppVar_92346 == 160);
	BIT_VEC cppVar_92349 = PC + 1;
	cppVar_92349 = (cppVar_92349 & cppMask_un_16_);
	BIT_VEC cppVar_92350 = ROM.rd(cppVar_92349);
	bool cppVar_92352 = (cppVar_92350 == 168);
	BIT_VEC cppVar_92353 = PC + 1;
	cppVar_92353 = (cppVar_92353 & cppMask_un_16_);
	BIT_VEC cppVar_92354 = ROM.rd(cppVar_92353);
	bool cppVar_92356 = (cppVar_92354 == 176);
	BIT_VEC cppVar_92357 = PC + 1;
	cppVar_92357 = (cppVar_92357 & cppMask_un_16_);
	BIT_VEC cppVar_92358 = ROM.rd(cppVar_92357);
	bool cppVar_92360 = (cppVar_92358 == 184);
	BIT_VEC cppVar_92361 = PC + 1;
	cppVar_92361 = (cppVar_92361 & cppMask_un_16_);
	BIT_VEC cppVar_92362 = ROM.rd(cppVar_92361);
	bool cppVar_92364 = (cppVar_92362 == 208);
	BIT_VEC cppVar_92365 = PC + 1;
	cppVar_92365 = (cppVar_92365 & cppMask_un_16_);
	BIT_VEC cppVar_92366 = ROM.rd(cppVar_92365);
	bool cppVar_92368 = (cppVar_92366 == 224);
	BIT_VEC cppVar_92369 = PC + 1;
	cppVar_92369 = (cppVar_92369 & cppMask_un_16_);
	BIT_VEC cppVar_92370 = ROM.rd(cppVar_92369);
	bool cppVar_92372 = (cppVar_92370 == 240);
	BIT_VEC cppVar_92374 = (cppVar_92372) ? B : 0;
	BIT_VEC cppVar_92375 = (cppVar_92368) ? ACC : cppVar_92374;
	BIT_VEC cppVar_92376 = (cppVar_92364) ? PSW : cppVar_92375;
	BIT_VEC cppVar_92377 = (cppVar_92360) ? IP : cppVar_92376;
	BIT_VEC cppVar_92378 = (cppVar_92356) ? P3 : cppVar_92377;
	BIT_VEC cppVar_92379 = (cppVar_92352) ? IE : cppVar_92378;
	BIT_VEC cppVar_92380 = (cppVar_92348) ? P2 : cppVar_92379;
	BIT_VEC cppVar_92381 = (cppVar_92344) ? SBUF : cppVar_92380;
	BIT_VEC cppVar_92382 = (cppVar_92340) ? SCON : cppVar_92381;
	BIT_VEC cppVar_92383 = (cppVar_92336) ? P1 : cppVar_92382;
	BIT_VEC cppVar_92384 = (cppVar_92332) ? TH1 : cppVar_92383;
	BIT_VEC cppVar_92385 = (cppVar_92328) ? TL1 : cppVar_92384;
	BIT_VEC cppVar_92386 = (cppVar_92324) ? TH0 : cppVar_92385;
	BIT_VEC cppVar_92387 = (cppVar_92320) ? TL0 : cppVar_92386;
	BIT_VEC cppVar_92388 = (cppVar_92316) ? TMOD : cppVar_92387;
	BIT_VEC cppVar_92389 = (cppVar_92312) ? TCON : cppVar_92388;
	BIT_VEC cppVar_92390 = (cppVar_92308) ? PCON : cppVar_92389;
	BIT_VEC cppVar_92391 = (cppVar_92304) ? DPH : cppVar_92390;
	BIT_VEC cppVar_92392 = (cppVar_92300) ? DPL : cppVar_92391;
	BIT_VEC cppVar_92393 = (cppVar_92296) ? SP : cppVar_92392;
	BIT_VEC cppVar_92394 = (cppVar_92292) ? P0 : cppVar_92393;
	BIT_VEC cppVar_92395 = (cppVar_92285) ? cppVar_92288 : cppVar_92394;
	BIT_VEC cppVar_92396 = cppVar_92395 | ACC;
	type_mem cppVar_92397 = IRAM;
	cppVar_92397.wr(cppVar_92280, cppVar_92396);
	type_mem& cppVar_92398 = (cppVar_92278) ? cppVar_92397 : IRAM;
	BIT_VEC cppVar_92399 = ROM.rd(PC);
	bool cppVar_92401 = (cppVar_92399 == 223);
	BIT_VEC cppVar_92402 = ROM.rd(PC);
	bool cppVar_92404 = (cppVar_92402 == 31);
	bool cppVar_92405 = cppVar_92401 || cppVar_92404;
	BIT_VEC cppVar_92407 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92409 = (cppVar_92407 << 3) | 7;
	cppVar_92409 = (cppVar_92409 & cppMask_un_5_);
	BIT_VEC cppVar_92410 = (0 << 5) | cppVar_92409;
	cppVar_92410 = (cppVar_92410 & cppMask_un_8_);
	BIT_VEC cppVar_92411 = (cppVar_92410 >> 7) & cppMask_un_1_;
	bool cppVar_92413 = (cppVar_92411 == 0);
	BIT_VEC cppVar_92414 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92415 = (cppVar_92414 << 3) | 7;
	cppVar_92415 = (cppVar_92415 & cppMask_un_5_);
	BIT_VEC cppVar_92416 = (0 << 5) | cppVar_92415;
	cppVar_92416 = (cppVar_92416 & cppMask_un_8_);
	BIT_VEC cppVar_92417 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92418 = (cppVar_92417 << 3) | 7;
	cppVar_92418 = (cppVar_92418 & cppMask_un_5_);
	BIT_VEC cppVar_92419 = (0 << 5) | cppVar_92418;
	cppVar_92419 = (cppVar_92419 & cppMask_un_8_);
	BIT_VEC cppVar_92420 = (cppVar_92419 >> 7) & cppMask_un_1_;
	bool cppVar_92422 = (cppVar_92420 == 0);
	BIT_VEC cppVar_92423 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92424 = (cppVar_92423 << 3) | 7;
	cppVar_92424 = (cppVar_92424 & cppMask_un_5_);
	BIT_VEC cppVar_92425 = (0 << 5) | cppVar_92424;
	cppVar_92425 = (cppVar_92425 & cppMask_un_8_);
	BIT_VEC cppVar_92426 = IRAM.rd(cppVar_92425);
	BIT_VEC cppVar_92427 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92428 = (cppVar_92427 << 3) | 7;
	cppVar_92428 = (cppVar_92428 & cppMask_un_5_);
	BIT_VEC cppVar_92429 = (0 << 5) | cppVar_92428;
	cppVar_92429 = (cppVar_92429 & cppMask_un_8_);
	bool cppVar_92431 = (cppVar_92429 == 128);
	BIT_VEC cppVar_92432 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92433 = (cppVar_92432 << 3) | 7;
	cppVar_92433 = (cppVar_92433 & cppMask_un_5_);
	BIT_VEC cppVar_92434 = (0 << 5) | cppVar_92433;
	cppVar_92434 = (cppVar_92434 & cppMask_un_8_);
	bool cppVar_92436 = (cppVar_92434 == 129);
	BIT_VEC cppVar_92437 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92438 = (cppVar_92437 << 3) | 7;
	cppVar_92438 = (cppVar_92438 & cppMask_un_5_);
	BIT_VEC cppVar_92439 = (0 << 5) | cppVar_92438;
	cppVar_92439 = (cppVar_92439 & cppMask_un_8_);
	bool cppVar_92441 = (cppVar_92439 == 130);
	BIT_VEC cppVar_92442 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92443 = (cppVar_92442 << 3) | 7;
	cppVar_92443 = (cppVar_92443 & cppMask_un_5_);
	BIT_VEC cppVar_92444 = (0 << 5) | cppVar_92443;
	cppVar_92444 = (cppVar_92444 & cppMask_un_8_);
	bool cppVar_92446 = (cppVar_92444 == 131);
	BIT_VEC cppVar_92447 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92448 = (cppVar_92447 << 3) | 7;
	cppVar_92448 = (cppVar_92448 & cppMask_un_5_);
	BIT_VEC cppVar_92449 = (0 << 5) | cppVar_92448;
	cppVar_92449 = (cppVar_92449 & cppMask_un_8_);
	bool cppVar_92451 = (cppVar_92449 == 135);
	BIT_VEC cppVar_92452 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92453 = (cppVar_92452 << 3) | 7;
	cppVar_92453 = (cppVar_92453 & cppMask_un_5_);
	BIT_VEC cppVar_92454 = (0 << 5) | cppVar_92453;
	cppVar_92454 = (cppVar_92454 & cppMask_un_8_);
	bool cppVar_92456 = (cppVar_92454 == 136);
	BIT_VEC cppVar_92457 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92458 = (cppVar_92457 << 3) | 7;
	cppVar_92458 = (cppVar_92458 & cppMask_un_5_);
	BIT_VEC cppVar_92459 = (0 << 5) | cppVar_92458;
	cppVar_92459 = (cppVar_92459 & cppMask_un_8_);
	bool cppVar_92461 = (cppVar_92459 == 137);
	BIT_VEC cppVar_92462 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92463 = (cppVar_92462 << 3) | 7;
	cppVar_92463 = (cppVar_92463 & cppMask_un_5_);
	BIT_VEC cppVar_92464 = (0 << 5) | cppVar_92463;
	cppVar_92464 = (cppVar_92464 & cppMask_un_8_);
	bool cppVar_92466 = (cppVar_92464 == 138);
	BIT_VEC cppVar_92467 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92468 = (cppVar_92467 << 3) | 7;
	cppVar_92468 = (cppVar_92468 & cppMask_un_5_);
	BIT_VEC cppVar_92469 = (0 << 5) | cppVar_92468;
	cppVar_92469 = (cppVar_92469 & cppMask_un_8_);
	bool cppVar_92471 = (cppVar_92469 == 140);
	BIT_VEC cppVar_92472 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92473 = (cppVar_92472 << 3) | 7;
	cppVar_92473 = (cppVar_92473 & cppMask_un_5_);
	BIT_VEC cppVar_92474 = (0 << 5) | cppVar_92473;
	cppVar_92474 = (cppVar_92474 & cppMask_un_8_);
	bool cppVar_92476 = (cppVar_92474 == 139);
	BIT_VEC cppVar_92477 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92478 = (cppVar_92477 << 3) | 7;
	cppVar_92478 = (cppVar_92478 & cppMask_un_5_);
	BIT_VEC cppVar_92479 = (0 << 5) | cppVar_92478;
	cppVar_92479 = (cppVar_92479 & cppMask_un_8_);
	bool cppVar_92481 = (cppVar_92479 == 141);
	BIT_VEC cppVar_92482 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92483 = (cppVar_92482 << 3) | 7;
	cppVar_92483 = (cppVar_92483 & cppMask_un_5_);
	BIT_VEC cppVar_92484 = (0 << 5) | cppVar_92483;
	cppVar_92484 = (cppVar_92484 & cppMask_un_8_);
	bool cppVar_92486 = (cppVar_92484 == 144);
	BIT_VEC cppVar_92487 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92488 = (cppVar_92487 << 3) | 7;
	cppVar_92488 = (cppVar_92488 & cppMask_un_5_);
	BIT_VEC cppVar_92489 = (0 << 5) | cppVar_92488;
	cppVar_92489 = (cppVar_92489 & cppMask_un_8_);
	bool cppVar_92491 = (cppVar_92489 == 152);
	BIT_VEC cppVar_92492 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92493 = (cppVar_92492 << 3) | 7;
	cppVar_92493 = (cppVar_92493 & cppMask_un_5_);
	BIT_VEC cppVar_92494 = (0 << 5) | cppVar_92493;
	cppVar_92494 = (cppVar_92494 & cppMask_un_8_);
	bool cppVar_92496 = (cppVar_92494 == 153);
	BIT_VEC cppVar_92497 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92498 = (cppVar_92497 << 3) | 7;
	cppVar_92498 = (cppVar_92498 & cppMask_un_5_);
	BIT_VEC cppVar_92499 = (0 << 5) | cppVar_92498;
	cppVar_92499 = (cppVar_92499 & cppMask_un_8_);
	bool cppVar_92501 = (cppVar_92499 == 160);
	BIT_VEC cppVar_92502 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92503 = (cppVar_92502 << 3) | 7;
	cppVar_92503 = (cppVar_92503 & cppMask_un_5_);
	BIT_VEC cppVar_92504 = (0 << 5) | cppVar_92503;
	cppVar_92504 = (cppVar_92504 & cppMask_un_8_);
	bool cppVar_92506 = (cppVar_92504 == 168);
	BIT_VEC cppVar_92507 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92508 = (cppVar_92507 << 3) | 7;
	cppVar_92508 = (cppVar_92508 & cppMask_un_5_);
	BIT_VEC cppVar_92509 = (0 << 5) | cppVar_92508;
	cppVar_92509 = (cppVar_92509 & cppMask_un_8_);
	bool cppVar_92511 = (cppVar_92509 == 176);
	BIT_VEC cppVar_92512 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92513 = (cppVar_92512 << 3) | 7;
	cppVar_92513 = (cppVar_92513 & cppMask_un_5_);
	BIT_VEC cppVar_92514 = (0 << 5) | cppVar_92513;
	cppVar_92514 = (cppVar_92514 & cppMask_un_8_);
	bool cppVar_92516 = (cppVar_92514 == 184);
	BIT_VEC cppVar_92517 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92518 = (cppVar_92517 << 3) | 7;
	cppVar_92518 = (cppVar_92518 & cppMask_un_5_);
	BIT_VEC cppVar_92519 = (0 << 5) | cppVar_92518;
	cppVar_92519 = (cppVar_92519 & cppMask_un_8_);
	bool cppVar_92521 = (cppVar_92519 == 208);
	BIT_VEC cppVar_92522 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92523 = (cppVar_92522 << 3) | 7;
	cppVar_92523 = (cppVar_92523 & cppMask_un_5_);
	BIT_VEC cppVar_92524 = (0 << 5) | cppVar_92523;
	cppVar_92524 = (cppVar_92524 & cppMask_un_8_);
	bool cppVar_92526 = (cppVar_92524 == 224);
	BIT_VEC cppVar_92527 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92528 = (cppVar_92527 << 3) | 7;
	cppVar_92528 = (cppVar_92528 & cppMask_un_5_);
	BIT_VEC cppVar_92529 = (0 << 5) | cppVar_92528;
	cppVar_92529 = (cppVar_92529 & cppMask_un_8_);
	bool cppVar_92531 = (cppVar_92529 == 240);
	BIT_VEC cppVar_92533 = (cppVar_92531) ? B : 0;
	BIT_VEC cppVar_92534 = (cppVar_92526) ? ACC : cppVar_92533;
	BIT_VEC cppVar_92535 = (cppVar_92521) ? PSW : cppVar_92534;
	BIT_VEC cppVar_92536 = (cppVar_92516) ? IP : cppVar_92535;
	BIT_VEC cppVar_92537 = (cppVar_92511) ? P3 : cppVar_92536;
	BIT_VEC cppVar_92538 = (cppVar_92506) ? IE : cppVar_92537;
	BIT_VEC cppVar_92539 = (cppVar_92501) ? P2 : cppVar_92538;
	BIT_VEC cppVar_92540 = (cppVar_92496) ? SBUF : cppVar_92539;
	BIT_VEC cppVar_92541 = (cppVar_92491) ? SCON : cppVar_92540;
	BIT_VEC cppVar_92542 = (cppVar_92486) ? P1 : cppVar_92541;
	BIT_VEC cppVar_92543 = (cppVar_92481) ? TH1 : cppVar_92542;
	BIT_VEC cppVar_92544 = (cppVar_92476) ? TL1 : cppVar_92543;
	BIT_VEC cppVar_92545 = (cppVar_92471) ? TH0 : cppVar_92544;
	BIT_VEC cppVar_92546 = (cppVar_92466) ? TL0 : cppVar_92545;
	BIT_VEC cppVar_92547 = (cppVar_92461) ? TMOD : cppVar_92546;
	BIT_VEC cppVar_92548 = (cppVar_92456) ? TCON : cppVar_92547;
	BIT_VEC cppVar_92549 = (cppVar_92451) ? PCON : cppVar_92548;
	BIT_VEC cppVar_92550 = (cppVar_92446) ? DPH : cppVar_92549;
	BIT_VEC cppVar_92551 = (cppVar_92441) ? DPL : cppVar_92550;
	BIT_VEC cppVar_92552 = (cppVar_92436) ? SP : cppVar_92551;
	BIT_VEC cppVar_92553 = (cppVar_92431) ? P0 : cppVar_92552;
	BIT_VEC cppVar_92554 = (cppVar_92422) ? cppVar_92426 : cppVar_92553;
	BIT_VEC cppVar_92556 = cppVar_92554 - 1;
	cppVar_92556 = (cppVar_92556 & cppMask_un_8_);
	type_mem cppVar_92557 = IRAM;
	cppVar_92557.wr(cppVar_92416, cppVar_92556);
	type_mem& cppVar_92558 = (cppVar_92413) ? cppVar_92557 : IRAM;
	BIT_VEC cppVar_92559 = ROM.rd(PC);
	bool cppVar_92561 = (cppVar_92559 == 222);
	BIT_VEC cppVar_92562 = ROM.rd(PC);
	bool cppVar_92564 = (cppVar_92562 == 30);
	bool cppVar_92565 = cppVar_92561 || cppVar_92564;
	BIT_VEC cppVar_92567 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92569 = (cppVar_92567 << 3) | 6;
	cppVar_92569 = (cppVar_92569 & cppMask_un_5_);
	BIT_VEC cppVar_92570 = (0 << 5) | cppVar_92569;
	cppVar_92570 = (cppVar_92570 & cppMask_un_8_);
	BIT_VEC cppVar_92571 = (cppVar_92570 >> 7) & cppMask_un_1_;
	bool cppVar_92573 = (cppVar_92571 == 0);
	BIT_VEC cppVar_92574 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92575 = (cppVar_92574 << 3) | 6;
	cppVar_92575 = (cppVar_92575 & cppMask_un_5_);
	BIT_VEC cppVar_92576 = (0 << 5) | cppVar_92575;
	cppVar_92576 = (cppVar_92576 & cppMask_un_8_);
	BIT_VEC cppVar_92577 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92578 = (cppVar_92577 << 3) | 6;
	cppVar_92578 = (cppVar_92578 & cppMask_un_5_);
	BIT_VEC cppVar_92579 = (0 << 5) | cppVar_92578;
	cppVar_92579 = (cppVar_92579 & cppMask_un_8_);
	BIT_VEC cppVar_92580 = (cppVar_92579 >> 7) & cppMask_un_1_;
	bool cppVar_92582 = (cppVar_92580 == 0);
	BIT_VEC cppVar_92583 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92584 = (cppVar_92583 << 3) | 6;
	cppVar_92584 = (cppVar_92584 & cppMask_un_5_);
	BIT_VEC cppVar_92585 = (0 << 5) | cppVar_92584;
	cppVar_92585 = (cppVar_92585 & cppMask_un_8_);
	BIT_VEC cppVar_92586 = IRAM.rd(cppVar_92585);
	BIT_VEC cppVar_92587 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92588 = (cppVar_92587 << 3) | 6;
	cppVar_92588 = (cppVar_92588 & cppMask_un_5_);
	BIT_VEC cppVar_92589 = (0 << 5) | cppVar_92588;
	cppVar_92589 = (cppVar_92589 & cppMask_un_8_);
	bool cppVar_92591 = (cppVar_92589 == 128);
	BIT_VEC cppVar_92592 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92593 = (cppVar_92592 << 3) | 6;
	cppVar_92593 = (cppVar_92593 & cppMask_un_5_);
	BIT_VEC cppVar_92594 = (0 << 5) | cppVar_92593;
	cppVar_92594 = (cppVar_92594 & cppMask_un_8_);
	bool cppVar_92596 = (cppVar_92594 == 129);
	BIT_VEC cppVar_92597 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92598 = (cppVar_92597 << 3) | 6;
	cppVar_92598 = (cppVar_92598 & cppMask_un_5_);
	BIT_VEC cppVar_92599 = (0 << 5) | cppVar_92598;
	cppVar_92599 = (cppVar_92599 & cppMask_un_8_);
	bool cppVar_92601 = (cppVar_92599 == 130);
	BIT_VEC cppVar_92602 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92603 = (cppVar_92602 << 3) | 6;
	cppVar_92603 = (cppVar_92603 & cppMask_un_5_);
	BIT_VEC cppVar_92604 = (0 << 5) | cppVar_92603;
	cppVar_92604 = (cppVar_92604 & cppMask_un_8_);
	bool cppVar_92606 = (cppVar_92604 == 131);
	BIT_VEC cppVar_92607 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92608 = (cppVar_92607 << 3) | 6;
	cppVar_92608 = (cppVar_92608 & cppMask_un_5_);
	BIT_VEC cppVar_92609 = (0 << 5) | cppVar_92608;
	cppVar_92609 = (cppVar_92609 & cppMask_un_8_);
	bool cppVar_92611 = (cppVar_92609 == 135);
	BIT_VEC cppVar_92612 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92613 = (cppVar_92612 << 3) | 6;
	cppVar_92613 = (cppVar_92613 & cppMask_un_5_);
	BIT_VEC cppVar_92614 = (0 << 5) | cppVar_92613;
	cppVar_92614 = (cppVar_92614 & cppMask_un_8_);
	bool cppVar_92616 = (cppVar_92614 == 136);
	BIT_VEC cppVar_92617 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92618 = (cppVar_92617 << 3) | 6;
	cppVar_92618 = (cppVar_92618 & cppMask_un_5_);
	BIT_VEC cppVar_92619 = (0 << 5) | cppVar_92618;
	cppVar_92619 = (cppVar_92619 & cppMask_un_8_);
	bool cppVar_92621 = (cppVar_92619 == 137);
	BIT_VEC cppVar_92622 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92623 = (cppVar_92622 << 3) | 6;
	cppVar_92623 = (cppVar_92623 & cppMask_un_5_);
	BIT_VEC cppVar_92624 = (0 << 5) | cppVar_92623;
	cppVar_92624 = (cppVar_92624 & cppMask_un_8_);
	bool cppVar_92626 = (cppVar_92624 == 138);
	BIT_VEC cppVar_92627 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92628 = (cppVar_92627 << 3) | 6;
	cppVar_92628 = (cppVar_92628 & cppMask_un_5_);
	BIT_VEC cppVar_92629 = (0 << 5) | cppVar_92628;
	cppVar_92629 = (cppVar_92629 & cppMask_un_8_);
	bool cppVar_92631 = (cppVar_92629 == 140);
	BIT_VEC cppVar_92632 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92633 = (cppVar_92632 << 3) | 6;
	cppVar_92633 = (cppVar_92633 & cppMask_un_5_);
	BIT_VEC cppVar_92634 = (0 << 5) | cppVar_92633;
	cppVar_92634 = (cppVar_92634 & cppMask_un_8_);
	bool cppVar_92636 = (cppVar_92634 == 139);
	BIT_VEC cppVar_92637 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92638 = (cppVar_92637 << 3) | 6;
	cppVar_92638 = (cppVar_92638 & cppMask_un_5_);
	BIT_VEC cppVar_92639 = (0 << 5) | cppVar_92638;
	cppVar_92639 = (cppVar_92639 & cppMask_un_8_);
	bool cppVar_92641 = (cppVar_92639 == 141);
	BIT_VEC cppVar_92642 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92643 = (cppVar_92642 << 3) | 6;
	cppVar_92643 = (cppVar_92643 & cppMask_un_5_);
	BIT_VEC cppVar_92644 = (0 << 5) | cppVar_92643;
	cppVar_92644 = (cppVar_92644 & cppMask_un_8_);
	bool cppVar_92646 = (cppVar_92644 == 144);
	BIT_VEC cppVar_92647 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92648 = (cppVar_92647 << 3) | 6;
	cppVar_92648 = (cppVar_92648 & cppMask_un_5_);
	BIT_VEC cppVar_92649 = (0 << 5) | cppVar_92648;
	cppVar_92649 = (cppVar_92649 & cppMask_un_8_);
	bool cppVar_92651 = (cppVar_92649 == 152);
	BIT_VEC cppVar_92652 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92653 = (cppVar_92652 << 3) | 6;
	cppVar_92653 = (cppVar_92653 & cppMask_un_5_);
	BIT_VEC cppVar_92654 = (0 << 5) | cppVar_92653;
	cppVar_92654 = (cppVar_92654 & cppMask_un_8_);
	bool cppVar_92656 = (cppVar_92654 == 153);
	BIT_VEC cppVar_92657 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92658 = (cppVar_92657 << 3) | 6;
	cppVar_92658 = (cppVar_92658 & cppMask_un_5_);
	BIT_VEC cppVar_92659 = (0 << 5) | cppVar_92658;
	cppVar_92659 = (cppVar_92659 & cppMask_un_8_);
	bool cppVar_92661 = (cppVar_92659 == 160);
	BIT_VEC cppVar_92662 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92663 = (cppVar_92662 << 3) | 6;
	cppVar_92663 = (cppVar_92663 & cppMask_un_5_);
	BIT_VEC cppVar_92664 = (0 << 5) | cppVar_92663;
	cppVar_92664 = (cppVar_92664 & cppMask_un_8_);
	bool cppVar_92666 = (cppVar_92664 == 168);
	BIT_VEC cppVar_92667 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92668 = (cppVar_92667 << 3) | 6;
	cppVar_92668 = (cppVar_92668 & cppMask_un_5_);
	BIT_VEC cppVar_92669 = (0 << 5) | cppVar_92668;
	cppVar_92669 = (cppVar_92669 & cppMask_un_8_);
	bool cppVar_92671 = (cppVar_92669 == 176);
	BIT_VEC cppVar_92672 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92673 = (cppVar_92672 << 3) | 6;
	cppVar_92673 = (cppVar_92673 & cppMask_un_5_);
	BIT_VEC cppVar_92674 = (0 << 5) | cppVar_92673;
	cppVar_92674 = (cppVar_92674 & cppMask_un_8_);
	bool cppVar_92676 = (cppVar_92674 == 184);
	BIT_VEC cppVar_92677 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92678 = (cppVar_92677 << 3) | 6;
	cppVar_92678 = (cppVar_92678 & cppMask_un_5_);
	BIT_VEC cppVar_92679 = (0 << 5) | cppVar_92678;
	cppVar_92679 = (cppVar_92679 & cppMask_un_8_);
	bool cppVar_92681 = (cppVar_92679 == 208);
	BIT_VEC cppVar_92682 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92683 = (cppVar_92682 << 3) | 6;
	cppVar_92683 = (cppVar_92683 & cppMask_un_5_);
	BIT_VEC cppVar_92684 = (0 << 5) | cppVar_92683;
	cppVar_92684 = (cppVar_92684 & cppMask_un_8_);
	bool cppVar_92686 = (cppVar_92684 == 224);
	BIT_VEC cppVar_92687 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92688 = (cppVar_92687 << 3) | 6;
	cppVar_92688 = (cppVar_92688 & cppMask_un_5_);
	BIT_VEC cppVar_92689 = (0 << 5) | cppVar_92688;
	cppVar_92689 = (cppVar_92689 & cppMask_un_8_);
	bool cppVar_92691 = (cppVar_92689 == 240);
	BIT_VEC cppVar_92693 = (cppVar_92691) ? B : 0;
	BIT_VEC cppVar_92694 = (cppVar_92686) ? ACC : cppVar_92693;
	BIT_VEC cppVar_92695 = (cppVar_92681) ? PSW : cppVar_92694;
	BIT_VEC cppVar_92696 = (cppVar_92676) ? IP : cppVar_92695;
	BIT_VEC cppVar_92697 = (cppVar_92671) ? P3 : cppVar_92696;
	BIT_VEC cppVar_92698 = (cppVar_92666) ? IE : cppVar_92697;
	BIT_VEC cppVar_92699 = (cppVar_92661) ? P2 : cppVar_92698;
	BIT_VEC cppVar_92700 = (cppVar_92656) ? SBUF : cppVar_92699;
	BIT_VEC cppVar_92701 = (cppVar_92651) ? SCON : cppVar_92700;
	BIT_VEC cppVar_92702 = (cppVar_92646) ? P1 : cppVar_92701;
	BIT_VEC cppVar_92703 = (cppVar_92641) ? TH1 : cppVar_92702;
	BIT_VEC cppVar_92704 = (cppVar_92636) ? TL1 : cppVar_92703;
	BIT_VEC cppVar_92705 = (cppVar_92631) ? TH0 : cppVar_92704;
	BIT_VEC cppVar_92706 = (cppVar_92626) ? TL0 : cppVar_92705;
	BIT_VEC cppVar_92707 = (cppVar_92621) ? TMOD : cppVar_92706;
	BIT_VEC cppVar_92708 = (cppVar_92616) ? TCON : cppVar_92707;
	BIT_VEC cppVar_92709 = (cppVar_92611) ? PCON : cppVar_92708;
	BIT_VEC cppVar_92710 = (cppVar_92606) ? DPH : cppVar_92709;
	BIT_VEC cppVar_92711 = (cppVar_92601) ? DPL : cppVar_92710;
	BIT_VEC cppVar_92712 = (cppVar_92596) ? SP : cppVar_92711;
	BIT_VEC cppVar_92713 = (cppVar_92591) ? P0 : cppVar_92712;
	BIT_VEC cppVar_92714 = (cppVar_92582) ? cppVar_92586 : cppVar_92713;
	BIT_VEC cppVar_92716 = cppVar_92714 - 1;
	cppVar_92716 = (cppVar_92716 & cppMask_un_8_);
	type_mem cppVar_92717 = IRAM;
	cppVar_92717.wr(cppVar_92576, cppVar_92716);
	type_mem& cppVar_92718 = (cppVar_92573) ? cppVar_92717 : IRAM;
	BIT_VEC cppVar_92719 = ROM.rd(PC);
	bool cppVar_92721 = (cppVar_92719 == 221);
	BIT_VEC cppVar_92722 = ROM.rd(PC);
	bool cppVar_92724 = (cppVar_92722 == 29);
	bool cppVar_92725 = cppVar_92721 || cppVar_92724;
	BIT_VEC cppVar_92727 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92729 = (cppVar_92727 << 3) | 5;
	cppVar_92729 = (cppVar_92729 & cppMask_un_5_);
	BIT_VEC cppVar_92730 = (0 << 5) | cppVar_92729;
	cppVar_92730 = (cppVar_92730 & cppMask_un_8_);
	BIT_VEC cppVar_92731 = (cppVar_92730 >> 7) & cppMask_un_1_;
	bool cppVar_92733 = (cppVar_92731 == 0);
	BIT_VEC cppVar_92734 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92735 = (cppVar_92734 << 3) | 5;
	cppVar_92735 = (cppVar_92735 & cppMask_un_5_);
	BIT_VEC cppVar_92736 = (0 << 5) | cppVar_92735;
	cppVar_92736 = (cppVar_92736 & cppMask_un_8_);
	BIT_VEC cppVar_92737 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92738 = (cppVar_92737 << 3) | 5;
	cppVar_92738 = (cppVar_92738 & cppMask_un_5_);
	BIT_VEC cppVar_92739 = (0 << 5) | cppVar_92738;
	cppVar_92739 = (cppVar_92739 & cppMask_un_8_);
	BIT_VEC cppVar_92740 = (cppVar_92739 >> 7) & cppMask_un_1_;
	bool cppVar_92742 = (cppVar_92740 == 0);
	BIT_VEC cppVar_92743 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92744 = (cppVar_92743 << 3) | 5;
	cppVar_92744 = (cppVar_92744 & cppMask_un_5_);
	BIT_VEC cppVar_92745 = (0 << 5) | cppVar_92744;
	cppVar_92745 = (cppVar_92745 & cppMask_un_8_);
	BIT_VEC cppVar_92746 = IRAM.rd(cppVar_92745);
	BIT_VEC cppVar_92747 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92748 = (cppVar_92747 << 3) | 5;
	cppVar_92748 = (cppVar_92748 & cppMask_un_5_);
	BIT_VEC cppVar_92749 = (0 << 5) | cppVar_92748;
	cppVar_92749 = (cppVar_92749 & cppMask_un_8_);
	bool cppVar_92751 = (cppVar_92749 == 128);
	BIT_VEC cppVar_92752 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92753 = (cppVar_92752 << 3) | 5;
	cppVar_92753 = (cppVar_92753 & cppMask_un_5_);
	BIT_VEC cppVar_92754 = (0 << 5) | cppVar_92753;
	cppVar_92754 = (cppVar_92754 & cppMask_un_8_);
	bool cppVar_92756 = (cppVar_92754 == 129);
	BIT_VEC cppVar_92757 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92758 = (cppVar_92757 << 3) | 5;
	cppVar_92758 = (cppVar_92758 & cppMask_un_5_);
	BIT_VEC cppVar_92759 = (0 << 5) | cppVar_92758;
	cppVar_92759 = (cppVar_92759 & cppMask_un_8_);
	bool cppVar_92761 = (cppVar_92759 == 130);
	BIT_VEC cppVar_92762 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92763 = (cppVar_92762 << 3) | 5;
	cppVar_92763 = (cppVar_92763 & cppMask_un_5_);
	BIT_VEC cppVar_92764 = (0 << 5) | cppVar_92763;
	cppVar_92764 = (cppVar_92764 & cppMask_un_8_);
	bool cppVar_92766 = (cppVar_92764 == 131);
	BIT_VEC cppVar_92767 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92768 = (cppVar_92767 << 3) | 5;
	cppVar_92768 = (cppVar_92768 & cppMask_un_5_);
	BIT_VEC cppVar_92769 = (0 << 5) | cppVar_92768;
	cppVar_92769 = (cppVar_92769 & cppMask_un_8_);
	bool cppVar_92771 = (cppVar_92769 == 135);
	BIT_VEC cppVar_92772 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92773 = (cppVar_92772 << 3) | 5;
	cppVar_92773 = (cppVar_92773 & cppMask_un_5_);
	BIT_VEC cppVar_92774 = (0 << 5) | cppVar_92773;
	cppVar_92774 = (cppVar_92774 & cppMask_un_8_);
	bool cppVar_92776 = (cppVar_92774 == 136);
	BIT_VEC cppVar_92777 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92778 = (cppVar_92777 << 3) | 5;
	cppVar_92778 = (cppVar_92778 & cppMask_un_5_);
	BIT_VEC cppVar_92779 = (0 << 5) | cppVar_92778;
	cppVar_92779 = (cppVar_92779 & cppMask_un_8_);
	bool cppVar_92781 = (cppVar_92779 == 137);
	BIT_VEC cppVar_92782 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92783 = (cppVar_92782 << 3) | 5;
	cppVar_92783 = (cppVar_92783 & cppMask_un_5_);
	BIT_VEC cppVar_92784 = (0 << 5) | cppVar_92783;
	cppVar_92784 = (cppVar_92784 & cppMask_un_8_);
	bool cppVar_92786 = (cppVar_92784 == 138);
	BIT_VEC cppVar_92787 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92788 = (cppVar_92787 << 3) | 5;
	cppVar_92788 = (cppVar_92788 & cppMask_un_5_);
	BIT_VEC cppVar_92789 = (0 << 5) | cppVar_92788;
	cppVar_92789 = (cppVar_92789 & cppMask_un_8_);
	bool cppVar_92791 = (cppVar_92789 == 140);
	BIT_VEC cppVar_92792 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92793 = (cppVar_92792 << 3) | 5;
	cppVar_92793 = (cppVar_92793 & cppMask_un_5_);
	BIT_VEC cppVar_92794 = (0 << 5) | cppVar_92793;
	cppVar_92794 = (cppVar_92794 & cppMask_un_8_);
	bool cppVar_92796 = (cppVar_92794 == 139);
	BIT_VEC cppVar_92797 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92798 = (cppVar_92797 << 3) | 5;
	cppVar_92798 = (cppVar_92798 & cppMask_un_5_);
	BIT_VEC cppVar_92799 = (0 << 5) | cppVar_92798;
	cppVar_92799 = (cppVar_92799 & cppMask_un_8_);
	bool cppVar_92801 = (cppVar_92799 == 141);
	BIT_VEC cppVar_92802 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92803 = (cppVar_92802 << 3) | 5;
	cppVar_92803 = (cppVar_92803 & cppMask_un_5_);
	BIT_VEC cppVar_92804 = (0 << 5) | cppVar_92803;
	cppVar_92804 = (cppVar_92804 & cppMask_un_8_);
	bool cppVar_92806 = (cppVar_92804 == 144);
	BIT_VEC cppVar_92807 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92808 = (cppVar_92807 << 3) | 5;
	cppVar_92808 = (cppVar_92808 & cppMask_un_5_);
	BIT_VEC cppVar_92809 = (0 << 5) | cppVar_92808;
	cppVar_92809 = (cppVar_92809 & cppMask_un_8_);
	bool cppVar_92811 = (cppVar_92809 == 152);
	BIT_VEC cppVar_92812 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92813 = (cppVar_92812 << 3) | 5;
	cppVar_92813 = (cppVar_92813 & cppMask_un_5_);
	BIT_VEC cppVar_92814 = (0 << 5) | cppVar_92813;
	cppVar_92814 = (cppVar_92814 & cppMask_un_8_);
	bool cppVar_92816 = (cppVar_92814 == 153);
	BIT_VEC cppVar_92817 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92818 = (cppVar_92817 << 3) | 5;
	cppVar_92818 = (cppVar_92818 & cppMask_un_5_);
	BIT_VEC cppVar_92819 = (0 << 5) | cppVar_92818;
	cppVar_92819 = (cppVar_92819 & cppMask_un_8_);
	bool cppVar_92821 = (cppVar_92819 == 160);
	BIT_VEC cppVar_92822 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92823 = (cppVar_92822 << 3) | 5;
	cppVar_92823 = (cppVar_92823 & cppMask_un_5_);
	BIT_VEC cppVar_92824 = (0 << 5) | cppVar_92823;
	cppVar_92824 = (cppVar_92824 & cppMask_un_8_);
	bool cppVar_92826 = (cppVar_92824 == 168);
	BIT_VEC cppVar_92827 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92828 = (cppVar_92827 << 3) | 5;
	cppVar_92828 = (cppVar_92828 & cppMask_un_5_);
	BIT_VEC cppVar_92829 = (0 << 5) | cppVar_92828;
	cppVar_92829 = (cppVar_92829 & cppMask_un_8_);
	bool cppVar_92831 = (cppVar_92829 == 176);
	BIT_VEC cppVar_92832 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92833 = (cppVar_92832 << 3) | 5;
	cppVar_92833 = (cppVar_92833 & cppMask_un_5_);
	BIT_VEC cppVar_92834 = (0 << 5) | cppVar_92833;
	cppVar_92834 = (cppVar_92834 & cppMask_un_8_);
	bool cppVar_92836 = (cppVar_92834 == 184);
	BIT_VEC cppVar_92837 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92838 = (cppVar_92837 << 3) | 5;
	cppVar_92838 = (cppVar_92838 & cppMask_un_5_);
	BIT_VEC cppVar_92839 = (0 << 5) | cppVar_92838;
	cppVar_92839 = (cppVar_92839 & cppMask_un_8_);
	bool cppVar_92841 = (cppVar_92839 == 208);
	BIT_VEC cppVar_92842 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92843 = (cppVar_92842 << 3) | 5;
	cppVar_92843 = (cppVar_92843 & cppMask_un_5_);
	BIT_VEC cppVar_92844 = (0 << 5) | cppVar_92843;
	cppVar_92844 = (cppVar_92844 & cppMask_un_8_);
	bool cppVar_92846 = (cppVar_92844 == 224);
	BIT_VEC cppVar_92847 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92848 = (cppVar_92847 << 3) | 5;
	cppVar_92848 = (cppVar_92848 & cppMask_un_5_);
	BIT_VEC cppVar_92849 = (0 << 5) | cppVar_92848;
	cppVar_92849 = (cppVar_92849 & cppMask_un_8_);
	bool cppVar_92851 = (cppVar_92849 == 240);
	BIT_VEC cppVar_92853 = (cppVar_92851) ? B : 0;
	BIT_VEC cppVar_92854 = (cppVar_92846) ? ACC : cppVar_92853;
	BIT_VEC cppVar_92855 = (cppVar_92841) ? PSW : cppVar_92854;
	BIT_VEC cppVar_92856 = (cppVar_92836) ? IP : cppVar_92855;
	BIT_VEC cppVar_92857 = (cppVar_92831) ? P3 : cppVar_92856;
	BIT_VEC cppVar_92858 = (cppVar_92826) ? IE : cppVar_92857;
	BIT_VEC cppVar_92859 = (cppVar_92821) ? P2 : cppVar_92858;
	BIT_VEC cppVar_92860 = (cppVar_92816) ? SBUF : cppVar_92859;
	BIT_VEC cppVar_92861 = (cppVar_92811) ? SCON : cppVar_92860;
	BIT_VEC cppVar_92862 = (cppVar_92806) ? P1 : cppVar_92861;
	BIT_VEC cppVar_92863 = (cppVar_92801) ? TH1 : cppVar_92862;
	BIT_VEC cppVar_92864 = (cppVar_92796) ? TL1 : cppVar_92863;
	BIT_VEC cppVar_92865 = (cppVar_92791) ? TH0 : cppVar_92864;
	BIT_VEC cppVar_92866 = (cppVar_92786) ? TL0 : cppVar_92865;
	BIT_VEC cppVar_92867 = (cppVar_92781) ? TMOD : cppVar_92866;
	BIT_VEC cppVar_92868 = (cppVar_92776) ? TCON : cppVar_92867;
	BIT_VEC cppVar_92869 = (cppVar_92771) ? PCON : cppVar_92868;
	BIT_VEC cppVar_92870 = (cppVar_92766) ? DPH : cppVar_92869;
	BIT_VEC cppVar_92871 = (cppVar_92761) ? DPL : cppVar_92870;
	BIT_VEC cppVar_92872 = (cppVar_92756) ? SP : cppVar_92871;
	BIT_VEC cppVar_92873 = (cppVar_92751) ? P0 : cppVar_92872;
	BIT_VEC cppVar_92874 = (cppVar_92742) ? cppVar_92746 : cppVar_92873;
	BIT_VEC cppVar_92876 = cppVar_92874 - 1;
	cppVar_92876 = (cppVar_92876 & cppMask_un_8_);
	type_mem cppVar_92877 = IRAM;
	cppVar_92877.wr(cppVar_92736, cppVar_92876);
	type_mem& cppVar_92878 = (cppVar_92733) ? cppVar_92877 : IRAM;
	BIT_VEC cppVar_92879 = ROM.rd(PC);
	bool cppVar_92881 = (cppVar_92879 == 220);
	BIT_VEC cppVar_92882 = ROM.rd(PC);
	bool cppVar_92884 = (cppVar_92882 == 28);
	bool cppVar_92885 = cppVar_92881 || cppVar_92884;
	BIT_VEC cppVar_92887 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92889 = (cppVar_92887 << 3) | 4;
	cppVar_92889 = (cppVar_92889 & cppMask_un_5_);
	BIT_VEC cppVar_92890 = (0 << 5) | cppVar_92889;
	cppVar_92890 = (cppVar_92890 & cppMask_un_8_);
	BIT_VEC cppVar_92891 = (cppVar_92890 >> 7) & cppMask_un_1_;
	bool cppVar_92893 = (cppVar_92891 == 0);
	BIT_VEC cppVar_92894 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92895 = (cppVar_92894 << 3) | 4;
	cppVar_92895 = (cppVar_92895 & cppMask_un_5_);
	BIT_VEC cppVar_92896 = (0 << 5) | cppVar_92895;
	cppVar_92896 = (cppVar_92896 & cppMask_un_8_);
	BIT_VEC cppVar_92897 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92898 = (cppVar_92897 << 3) | 4;
	cppVar_92898 = (cppVar_92898 & cppMask_un_5_);
	BIT_VEC cppVar_92899 = (0 << 5) | cppVar_92898;
	cppVar_92899 = (cppVar_92899 & cppMask_un_8_);
	BIT_VEC cppVar_92900 = (cppVar_92899 >> 7) & cppMask_un_1_;
	bool cppVar_92902 = (cppVar_92900 == 0);
	BIT_VEC cppVar_92903 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92904 = (cppVar_92903 << 3) | 4;
	cppVar_92904 = (cppVar_92904 & cppMask_un_5_);
	BIT_VEC cppVar_92905 = (0 << 5) | cppVar_92904;
	cppVar_92905 = (cppVar_92905 & cppMask_un_8_);
	BIT_VEC cppVar_92906 = IRAM.rd(cppVar_92905);
	BIT_VEC cppVar_92907 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92908 = (cppVar_92907 << 3) | 4;
	cppVar_92908 = (cppVar_92908 & cppMask_un_5_);
	BIT_VEC cppVar_92909 = (0 << 5) | cppVar_92908;
	cppVar_92909 = (cppVar_92909 & cppMask_un_8_);
	bool cppVar_92911 = (cppVar_92909 == 128);
	BIT_VEC cppVar_92912 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92913 = (cppVar_92912 << 3) | 4;
	cppVar_92913 = (cppVar_92913 & cppMask_un_5_);
	BIT_VEC cppVar_92914 = (0 << 5) | cppVar_92913;
	cppVar_92914 = (cppVar_92914 & cppMask_un_8_);
	bool cppVar_92916 = (cppVar_92914 == 129);
	BIT_VEC cppVar_92917 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92918 = (cppVar_92917 << 3) | 4;
	cppVar_92918 = (cppVar_92918 & cppMask_un_5_);
	BIT_VEC cppVar_92919 = (0 << 5) | cppVar_92918;
	cppVar_92919 = (cppVar_92919 & cppMask_un_8_);
	bool cppVar_92921 = (cppVar_92919 == 130);
	BIT_VEC cppVar_92922 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92923 = (cppVar_92922 << 3) | 4;
	cppVar_92923 = (cppVar_92923 & cppMask_un_5_);
	BIT_VEC cppVar_92924 = (0 << 5) | cppVar_92923;
	cppVar_92924 = (cppVar_92924 & cppMask_un_8_);
	bool cppVar_92926 = (cppVar_92924 == 131);
	BIT_VEC cppVar_92927 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92928 = (cppVar_92927 << 3) | 4;
	cppVar_92928 = (cppVar_92928 & cppMask_un_5_);
	BIT_VEC cppVar_92929 = (0 << 5) | cppVar_92928;
	cppVar_92929 = (cppVar_92929 & cppMask_un_8_);
	bool cppVar_92931 = (cppVar_92929 == 135);
	BIT_VEC cppVar_92932 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92933 = (cppVar_92932 << 3) | 4;
	cppVar_92933 = (cppVar_92933 & cppMask_un_5_);
	BIT_VEC cppVar_92934 = (0 << 5) | cppVar_92933;
	cppVar_92934 = (cppVar_92934 & cppMask_un_8_);
	bool cppVar_92936 = (cppVar_92934 == 136);
	BIT_VEC cppVar_92937 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92938 = (cppVar_92937 << 3) | 4;
	cppVar_92938 = (cppVar_92938 & cppMask_un_5_);
	BIT_VEC cppVar_92939 = (0 << 5) | cppVar_92938;
	cppVar_92939 = (cppVar_92939 & cppMask_un_8_);
	bool cppVar_92941 = (cppVar_92939 == 137);
	BIT_VEC cppVar_92942 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92943 = (cppVar_92942 << 3) | 4;
	cppVar_92943 = (cppVar_92943 & cppMask_un_5_);
	BIT_VEC cppVar_92944 = (0 << 5) | cppVar_92943;
	cppVar_92944 = (cppVar_92944 & cppMask_un_8_);
	bool cppVar_92946 = (cppVar_92944 == 138);
	BIT_VEC cppVar_92947 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92948 = (cppVar_92947 << 3) | 4;
	cppVar_92948 = (cppVar_92948 & cppMask_un_5_);
	BIT_VEC cppVar_92949 = (0 << 5) | cppVar_92948;
	cppVar_92949 = (cppVar_92949 & cppMask_un_8_);
	bool cppVar_92951 = (cppVar_92949 == 140);
	BIT_VEC cppVar_92952 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92953 = (cppVar_92952 << 3) | 4;
	cppVar_92953 = (cppVar_92953 & cppMask_un_5_);
	BIT_VEC cppVar_92954 = (0 << 5) | cppVar_92953;
	cppVar_92954 = (cppVar_92954 & cppMask_un_8_);
	bool cppVar_92956 = (cppVar_92954 == 139);
	BIT_VEC cppVar_92957 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92958 = (cppVar_92957 << 3) | 4;
	cppVar_92958 = (cppVar_92958 & cppMask_un_5_);
	BIT_VEC cppVar_92959 = (0 << 5) | cppVar_92958;
	cppVar_92959 = (cppVar_92959 & cppMask_un_8_);
	bool cppVar_92961 = (cppVar_92959 == 141);
	BIT_VEC cppVar_92962 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92963 = (cppVar_92962 << 3) | 4;
	cppVar_92963 = (cppVar_92963 & cppMask_un_5_);
	BIT_VEC cppVar_92964 = (0 << 5) | cppVar_92963;
	cppVar_92964 = (cppVar_92964 & cppMask_un_8_);
	bool cppVar_92966 = (cppVar_92964 == 144);
	BIT_VEC cppVar_92967 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92968 = (cppVar_92967 << 3) | 4;
	cppVar_92968 = (cppVar_92968 & cppMask_un_5_);
	BIT_VEC cppVar_92969 = (0 << 5) | cppVar_92968;
	cppVar_92969 = (cppVar_92969 & cppMask_un_8_);
	bool cppVar_92971 = (cppVar_92969 == 152);
	BIT_VEC cppVar_92972 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92973 = (cppVar_92972 << 3) | 4;
	cppVar_92973 = (cppVar_92973 & cppMask_un_5_);
	BIT_VEC cppVar_92974 = (0 << 5) | cppVar_92973;
	cppVar_92974 = (cppVar_92974 & cppMask_un_8_);
	bool cppVar_92976 = (cppVar_92974 == 153);
	BIT_VEC cppVar_92977 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92978 = (cppVar_92977 << 3) | 4;
	cppVar_92978 = (cppVar_92978 & cppMask_un_5_);
	BIT_VEC cppVar_92979 = (0 << 5) | cppVar_92978;
	cppVar_92979 = (cppVar_92979 & cppMask_un_8_);
	bool cppVar_92981 = (cppVar_92979 == 160);
	BIT_VEC cppVar_92982 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92983 = (cppVar_92982 << 3) | 4;
	cppVar_92983 = (cppVar_92983 & cppMask_un_5_);
	BIT_VEC cppVar_92984 = (0 << 5) | cppVar_92983;
	cppVar_92984 = (cppVar_92984 & cppMask_un_8_);
	bool cppVar_92986 = (cppVar_92984 == 168);
	BIT_VEC cppVar_92987 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92988 = (cppVar_92987 << 3) | 4;
	cppVar_92988 = (cppVar_92988 & cppMask_un_5_);
	BIT_VEC cppVar_92989 = (0 << 5) | cppVar_92988;
	cppVar_92989 = (cppVar_92989 & cppMask_un_8_);
	bool cppVar_92991 = (cppVar_92989 == 176);
	BIT_VEC cppVar_92992 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92993 = (cppVar_92992 << 3) | 4;
	cppVar_92993 = (cppVar_92993 & cppMask_un_5_);
	BIT_VEC cppVar_92994 = (0 << 5) | cppVar_92993;
	cppVar_92994 = (cppVar_92994 & cppMask_un_8_);
	bool cppVar_92996 = (cppVar_92994 == 184);
	BIT_VEC cppVar_92997 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_92998 = (cppVar_92997 << 3) | 4;
	cppVar_92998 = (cppVar_92998 & cppMask_un_5_);
	BIT_VEC cppVar_92999 = (0 << 5) | cppVar_92998;
	cppVar_92999 = (cppVar_92999 & cppMask_un_8_);
	bool cppVar_93001 = (cppVar_92999 == 208);
	BIT_VEC cppVar_93002 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93003 = (cppVar_93002 << 3) | 4;
	cppVar_93003 = (cppVar_93003 & cppMask_un_5_);
	BIT_VEC cppVar_93004 = (0 << 5) | cppVar_93003;
	cppVar_93004 = (cppVar_93004 & cppMask_un_8_);
	bool cppVar_93006 = (cppVar_93004 == 224);
	BIT_VEC cppVar_93007 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93008 = (cppVar_93007 << 3) | 4;
	cppVar_93008 = (cppVar_93008 & cppMask_un_5_);
	BIT_VEC cppVar_93009 = (0 << 5) | cppVar_93008;
	cppVar_93009 = (cppVar_93009 & cppMask_un_8_);
	bool cppVar_93011 = (cppVar_93009 == 240);
	BIT_VEC cppVar_93013 = (cppVar_93011) ? B : 0;
	BIT_VEC cppVar_93014 = (cppVar_93006) ? ACC : cppVar_93013;
	BIT_VEC cppVar_93015 = (cppVar_93001) ? PSW : cppVar_93014;
	BIT_VEC cppVar_93016 = (cppVar_92996) ? IP : cppVar_93015;
	BIT_VEC cppVar_93017 = (cppVar_92991) ? P3 : cppVar_93016;
	BIT_VEC cppVar_93018 = (cppVar_92986) ? IE : cppVar_93017;
	BIT_VEC cppVar_93019 = (cppVar_92981) ? P2 : cppVar_93018;
	BIT_VEC cppVar_93020 = (cppVar_92976) ? SBUF : cppVar_93019;
	BIT_VEC cppVar_93021 = (cppVar_92971) ? SCON : cppVar_93020;
	BIT_VEC cppVar_93022 = (cppVar_92966) ? P1 : cppVar_93021;
	BIT_VEC cppVar_93023 = (cppVar_92961) ? TH1 : cppVar_93022;
	BIT_VEC cppVar_93024 = (cppVar_92956) ? TL1 : cppVar_93023;
	BIT_VEC cppVar_93025 = (cppVar_92951) ? TH0 : cppVar_93024;
	BIT_VEC cppVar_93026 = (cppVar_92946) ? TL0 : cppVar_93025;
	BIT_VEC cppVar_93027 = (cppVar_92941) ? TMOD : cppVar_93026;
	BIT_VEC cppVar_93028 = (cppVar_92936) ? TCON : cppVar_93027;
	BIT_VEC cppVar_93029 = (cppVar_92931) ? PCON : cppVar_93028;
	BIT_VEC cppVar_93030 = (cppVar_92926) ? DPH : cppVar_93029;
	BIT_VEC cppVar_93031 = (cppVar_92921) ? DPL : cppVar_93030;
	BIT_VEC cppVar_93032 = (cppVar_92916) ? SP : cppVar_93031;
	BIT_VEC cppVar_93033 = (cppVar_92911) ? P0 : cppVar_93032;
	BIT_VEC cppVar_93034 = (cppVar_92902) ? cppVar_92906 : cppVar_93033;
	BIT_VEC cppVar_93036 = cppVar_93034 - 1;
	cppVar_93036 = (cppVar_93036 & cppMask_un_8_);
	type_mem cppVar_93037 = IRAM;
	cppVar_93037.wr(cppVar_92896, cppVar_93036);
	type_mem& cppVar_93038 = (cppVar_92893) ? cppVar_93037 : IRAM;
	BIT_VEC cppVar_93039 = ROM.rd(PC);
	bool cppVar_93041 = (cppVar_93039 == 219);
	BIT_VEC cppVar_93042 = ROM.rd(PC);
	bool cppVar_93044 = (cppVar_93042 == 27);
	bool cppVar_93045 = cppVar_93041 || cppVar_93044;
	BIT_VEC cppVar_93047 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93049 = (cppVar_93047 << 3) | 3;
	cppVar_93049 = (cppVar_93049 & cppMask_un_5_);
	BIT_VEC cppVar_93050 = (0 << 5) | cppVar_93049;
	cppVar_93050 = (cppVar_93050 & cppMask_un_8_);
	BIT_VEC cppVar_93051 = (cppVar_93050 >> 7) & cppMask_un_1_;
	bool cppVar_93053 = (cppVar_93051 == 0);
	BIT_VEC cppVar_93054 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93055 = (cppVar_93054 << 3) | 3;
	cppVar_93055 = (cppVar_93055 & cppMask_un_5_);
	BIT_VEC cppVar_93056 = (0 << 5) | cppVar_93055;
	cppVar_93056 = (cppVar_93056 & cppMask_un_8_);
	BIT_VEC cppVar_93057 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93058 = (cppVar_93057 << 3) | 3;
	cppVar_93058 = (cppVar_93058 & cppMask_un_5_);
	BIT_VEC cppVar_93059 = (0 << 5) | cppVar_93058;
	cppVar_93059 = (cppVar_93059 & cppMask_un_8_);
	BIT_VEC cppVar_93060 = (cppVar_93059 >> 7) & cppMask_un_1_;
	bool cppVar_93062 = (cppVar_93060 == 0);
	BIT_VEC cppVar_93063 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93064 = (cppVar_93063 << 3) | 3;
	cppVar_93064 = (cppVar_93064 & cppMask_un_5_);
	BIT_VEC cppVar_93065 = (0 << 5) | cppVar_93064;
	cppVar_93065 = (cppVar_93065 & cppMask_un_8_);
	BIT_VEC cppVar_93066 = IRAM.rd(cppVar_93065);
	BIT_VEC cppVar_93067 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93068 = (cppVar_93067 << 3) | 3;
	cppVar_93068 = (cppVar_93068 & cppMask_un_5_);
	BIT_VEC cppVar_93069 = (0 << 5) | cppVar_93068;
	cppVar_93069 = (cppVar_93069 & cppMask_un_8_);
	bool cppVar_93071 = (cppVar_93069 == 128);
	BIT_VEC cppVar_93072 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93073 = (cppVar_93072 << 3) | 3;
	cppVar_93073 = (cppVar_93073 & cppMask_un_5_);
	BIT_VEC cppVar_93074 = (0 << 5) | cppVar_93073;
	cppVar_93074 = (cppVar_93074 & cppMask_un_8_);
	bool cppVar_93076 = (cppVar_93074 == 129);
	BIT_VEC cppVar_93077 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93078 = (cppVar_93077 << 3) | 3;
	cppVar_93078 = (cppVar_93078 & cppMask_un_5_);
	BIT_VEC cppVar_93079 = (0 << 5) | cppVar_93078;
	cppVar_93079 = (cppVar_93079 & cppMask_un_8_);
	bool cppVar_93081 = (cppVar_93079 == 130);
	BIT_VEC cppVar_93082 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93083 = (cppVar_93082 << 3) | 3;
	cppVar_93083 = (cppVar_93083 & cppMask_un_5_);
	BIT_VEC cppVar_93084 = (0 << 5) | cppVar_93083;
	cppVar_93084 = (cppVar_93084 & cppMask_un_8_);
	bool cppVar_93086 = (cppVar_93084 == 131);
	BIT_VEC cppVar_93087 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93088 = (cppVar_93087 << 3) | 3;
	cppVar_93088 = (cppVar_93088 & cppMask_un_5_);
	BIT_VEC cppVar_93089 = (0 << 5) | cppVar_93088;
	cppVar_93089 = (cppVar_93089 & cppMask_un_8_);
	bool cppVar_93091 = (cppVar_93089 == 135);
	BIT_VEC cppVar_93092 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93093 = (cppVar_93092 << 3) | 3;
	cppVar_93093 = (cppVar_93093 & cppMask_un_5_);
	BIT_VEC cppVar_93094 = (0 << 5) | cppVar_93093;
	cppVar_93094 = (cppVar_93094 & cppMask_un_8_);
	bool cppVar_93096 = (cppVar_93094 == 136);
	BIT_VEC cppVar_93097 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93098 = (cppVar_93097 << 3) | 3;
	cppVar_93098 = (cppVar_93098 & cppMask_un_5_);
	BIT_VEC cppVar_93099 = (0 << 5) | cppVar_93098;
	cppVar_93099 = (cppVar_93099 & cppMask_un_8_);
	bool cppVar_93101 = (cppVar_93099 == 137);
	BIT_VEC cppVar_93102 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93103 = (cppVar_93102 << 3) | 3;
	cppVar_93103 = (cppVar_93103 & cppMask_un_5_);
	BIT_VEC cppVar_93104 = (0 << 5) | cppVar_93103;
	cppVar_93104 = (cppVar_93104 & cppMask_un_8_);
	bool cppVar_93106 = (cppVar_93104 == 138);
	BIT_VEC cppVar_93107 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93108 = (cppVar_93107 << 3) | 3;
	cppVar_93108 = (cppVar_93108 & cppMask_un_5_);
	BIT_VEC cppVar_93109 = (0 << 5) | cppVar_93108;
	cppVar_93109 = (cppVar_93109 & cppMask_un_8_);
	bool cppVar_93111 = (cppVar_93109 == 140);
	BIT_VEC cppVar_93112 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93113 = (cppVar_93112 << 3) | 3;
	cppVar_93113 = (cppVar_93113 & cppMask_un_5_);
	BIT_VEC cppVar_93114 = (0 << 5) | cppVar_93113;
	cppVar_93114 = (cppVar_93114 & cppMask_un_8_);
	bool cppVar_93116 = (cppVar_93114 == 139);
	BIT_VEC cppVar_93117 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93118 = (cppVar_93117 << 3) | 3;
	cppVar_93118 = (cppVar_93118 & cppMask_un_5_);
	BIT_VEC cppVar_93119 = (0 << 5) | cppVar_93118;
	cppVar_93119 = (cppVar_93119 & cppMask_un_8_);
	bool cppVar_93121 = (cppVar_93119 == 141);
	BIT_VEC cppVar_93122 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93123 = (cppVar_93122 << 3) | 3;
	cppVar_93123 = (cppVar_93123 & cppMask_un_5_);
	BIT_VEC cppVar_93124 = (0 << 5) | cppVar_93123;
	cppVar_93124 = (cppVar_93124 & cppMask_un_8_);
	bool cppVar_93126 = (cppVar_93124 == 144);
	BIT_VEC cppVar_93127 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93128 = (cppVar_93127 << 3) | 3;
	cppVar_93128 = (cppVar_93128 & cppMask_un_5_);
	BIT_VEC cppVar_93129 = (0 << 5) | cppVar_93128;
	cppVar_93129 = (cppVar_93129 & cppMask_un_8_);
	bool cppVar_93131 = (cppVar_93129 == 152);
	BIT_VEC cppVar_93132 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93133 = (cppVar_93132 << 3) | 3;
	cppVar_93133 = (cppVar_93133 & cppMask_un_5_);
	BIT_VEC cppVar_93134 = (0 << 5) | cppVar_93133;
	cppVar_93134 = (cppVar_93134 & cppMask_un_8_);
	bool cppVar_93136 = (cppVar_93134 == 153);
	BIT_VEC cppVar_93137 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93138 = (cppVar_93137 << 3) | 3;
	cppVar_93138 = (cppVar_93138 & cppMask_un_5_);
	BIT_VEC cppVar_93139 = (0 << 5) | cppVar_93138;
	cppVar_93139 = (cppVar_93139 & cppMask_un_8_);
	bool cppVar_93141 = (cppVar_93139 == 160);
	BIT_VEC cppVar_93142 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93143 = (cppVar_93142 << 3) | 3;
	cppVar_93143 = (cppVar_93143 & cppMask_un_5_);
	BIT_VEC cppVar_93144 = (0 << 5) | cppVar_93143;
	cppVar_93144 = (cppVar_93144 & cppMask_un_8_);
	bool cppVar_93146 = (cppVar_93144 == 168);
	BIT_VEC cppVar_93147 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93148 = (cppVar_93147 << 3) | 3;
	cppVar_93148 = (cppVar_93148 & cppMask_un_5_);
	BIT_VEC cppVar_93149 = (0 << 5) | cppVar_93148;
	cppVar_93149 = (cppVar_93149 & cppMask_un_8_);
	bool cppVar_93151 = (cppVar_93149 == 176);
	BIT_VEC cppVar_93152 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93153 = (cppVar_93152 << 3) | 3;
	cppVar_93153 = (cppVar_93153 & cppMask_un_5_);
	BIT_VEC cppVar_93154 = (0 << 5) | cppVar_93153;
	cppVar_93154 = (cppVar_93154 & cppMask_un_8_);
	bool cppVar_93156 = (cppVar_93154 == 184);
	BIT_VEC cppVar_93157 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93158 = (cppVar_93157 << 3) | 3;
	cppVar_93158 = (cppVar_93158 & cppMask_un_5_);
	BIT_VEC cppVar_93159 = (0 << 5) | cppVar_93158;
	cppVar_93159 = (cppVar_93159 & cppMask_un_8_);
	bool cppVar_93161 = (cppVar_93159 == 208);
	BIT_VEC cppVar_93162 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93163 = (cppVar_93162 << 3) | 3;
	cppVar_93163 = (cppVar_93163 & cppMask_un_5_);
	BIT_VEC cppVar_93164 = (0 << 5) | cppVar_93163;
	cppVar_93164 = (cppVar_93164 & cppMask_un_8_);
	bool cppVar_93166 = (cppVar_93164 == 224);
	BIT_VEC cppVar_93167 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93168 = (cppVar_93167 << 3) | 3;
	cppVar_93168 = (cppVar_93168 & cppMask_un_5_);
	BIT_VEC cppVar_93169 = (0 << 5) | cppVar_93168;
	cppVar_93169 = (cppVar_93169 & cppMask_un_8_);
	bool cppVar_93171 = (cppVar_93169 == 240);
	BIT_VEC cppVar_93173 = (cppVar_93171) ? B : 0;
	BIT_VEC cppVar_93174 = (cppVar_93166) ? ACC : cppVar_93173;
	BIT_VEC cppVar_93175 = (cppVar_93161) ? PSW : cppVar_93174;
	BIT_VEC cppVar_93176 = (cppVar_93156) ? IP : cppVar_93175;
	BIT_VEC cppVar_93177 = (cppVar_93151) ? P3 : cppVar_93176;
	BIT_VEC cppVar_93178 = (cppVar_93146) ? IE : cppVar_93177;
	BIT_VEC cppVar_93179 = (cppVar_93141) ? P2 : cppVar_93178;
	BIT_VEC cppVar_93180 = (cppVar_93136) ? SBUF : cppVar_93179;
	BIT_VEC cppVar_93181 = (cppVar_93131) ? SCON : cppVar_93180;
	BIT_VEC cppVar_93182 = (cppVar_93126) ? P1 : cppVar_93181;
	BIT_VEC cppVar_93183 = (cppVar_93121) ? TH1 : cppVar_93182;
	BIT_VEC cppVar_93184 = (cppVar_93116) ? TL1 : cppVar_93183;
	BIT_VEC cppVar_93185 = (cppVar_93111) ? TH0 : cppVar_93184;
	BIT_VEC cppVar_93186 = (cppVar_93106) ? TL0 : cppVar_93185;
	BIT_VEC cppVar_93187 = (cppVar_93101) ? TMOD : cppVar_93186;
	BIT_VEC cppVar_93188 = (cppVar_93096) ? TCON : cppVar_93187;
	BIT_VEC cppVar_93189 = (cppVar_93091) ? PCON : cppVar_93188;
	BIT_VEC cppVar_93190 = (cppVar_93086) ? DPH : cppVar_93189;
	BIT_VEC cppVar_93191 = (cppVar_93081) ? DPL : cppVar_93190;
	BIT_VEC cppVar_93192 = (cppVar_93076) ? SP : cppVar_93191;
	BIT_VEC cppVar_93193 = (cppVar_93071) ? P0 : cppVar_93192;
	BIT_VEC cppVar_93194 = (cppVar_93062) ? cppVar_93066 : cppVar_93193;
	BIT_VEC cppVar_93196 = cppVar_93194 - 1;
	cppVar_93196 = (cppVar_93196 & cppMask_un_8_);
	type_mem cppVar_93197 = IRAM;
	cppVar_93197.wr(cppVar_93056, cppVar_93196);
	type_mem& cppVar_93198 = (cppVar_93053) ? cppVar_93197 : IRAM;
	BIT_VEC cppVar_93199 = ROM.rd(PC);
	bool cppVar_93201 = (cppVar_93199 == 218);
	BIT_VEC cppVar_93202 = ROM.rd(PC);
	bool cppVar_93204 = (cppVar_93202 == 26);
	bool cppVar_93205 = cppVar_93201 || cppVar_93204;
	BIT_VEC cppVar_93207 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93209 = (cppVar_93207 << 3) | 2;
	cppVar_93209 = (cppVar_93209 & cppMask_un_5_);
	BIT_VEC cppVar_93210 = (0 << 5) | cppVar_93209;
	cppVar_93210 = (cppVar_93210 & cppMask_un_8_);
	BIT_VEC cppVar_93211 = (cppVar_93210 >> 7) & cppMask_un_1_;
	bool cppVar_93213 = (cppVar_93211 == 0);
	BIT_VEC cppVar_93214 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93215 = (cppVar_93214 << 3) | 2;
	cppVar_93215 = (cppVar_93215 & cppMask_un_5_);
	BIT_VEC cppVar_93216 = (0 << 5) | cppVar_93215;
	cppVar_93216 = (cppVar_93216 & cppMask_un_8_);
	BIT_VEC cppVar_93217 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93218 = (cppVar_93217 << 3) | 2;
	cppVar_93218 = (cppVar_93218 & cppMask_un_5_);
	BIT_VEC cppVar_93219 = (0 << 5) | cppVar_93218;
	cppVar_93219 = (cppVar_93219 & cppMask_un_8_);
	BIT_VEC cppVar_93220 = (cppVar_93219 >> 7) & cppMask_un_1_;
	bool cppVar_93222 = (cppVar_93220 == 0);
	BIT_VEC cppVar_93223 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93224 = (cppVar_93223 << 3) | 2;
	cppVar_93224 = (cppVar_93224 & cppMask_un_5_);
	BIT_VEC cppVar_93225 = (0 << 5) | cppVar_93224;
	cppVar_93225 = (cppVar_93225 & cppMask_un_8_);
	BIT_VEC cppVar_93226 = IRAM.rd(cppVar_93225);
	BIT_VEC cppVar_93227 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93228 = (cppVar_93227 << 3) | 2;
	cppVar_93228 = (cppVar_93228 & cppMask_un_5_);
	BIT_VEC cppVar_93229 = (0 << 5) | cppVar_93228;
	cppVar_93229 = (cppVar_93229 & cppMask_un_8_);
	bool cppVar_93231 = (cppVar_93229 == 128);
	BIT_VEC cppVar_93232 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93233 = (cppVar_93232 << 3) | 2;
	cppVar_93233 = (cppVar_93233 & cppMask_un_5_);
	BIT_VEC cppVar_93234 = (0 << 5) | cppVar_93233;
	cppVar_93234 = (cppVar_93234 & cppMask_un_8_);
	bool cppVar_93236 = (cppVar_93234 == 129);
	BIT_VEC cppVar_93237 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93238 = (cppVar_93237 << 3) | 2;
	cppVar_93238 = (cppVar_93238 & cppMask_un_5_);
	BIT_VEC cppVar_93239 = (0 << 5) | cppVar_93238;
	cppVar_93239 = (cppVar_93239 & cppMask_un_8_);
	bool cppVar_93241 = (cppVar_93239 == 130);
	BIT_VEC cppVar_93242 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93243 = (cppVar_93242 << 3) | 2;
	cppVar_93243 = (cppVar_93243 & cppMask_un_5_);
	BIT_VEC cppVar_93244 = (0 << 5) | cppVar_93243;
	cppVar_93244 = (cppVar_93244 & cppMask_un_8_);
	bool cppVar_93246 = (cppVar_93244 == 131);
	BIT_VEC cppVar_93247 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93248 = (cppVar_93247 << 3) | 2;
	cppVar_93248 = (cppVar_93248 & cppMask_un_5_);
	BIT_VEC cppVar_93249 = (0 << 5) | cppVar_93248;
	cppVar_93249 = (cppVar_93249 & cppMask_un_8_);
	bool cppVar_93251 = (cppVar_93249 == 135);
	BIT_VEC cppVar_93252 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93253 = (cppVar_93252 << 3) | 2;
	cppVar_93253 = (cppVar_93253 & cppMask_un_5_);
	BIT_VEC cppVar_93254 = (0 << 5) | cppVar_93253;
	cppVar_93254 = (cppVar_93254 & cppMask_un_8_);
	bool cppVar_93256 = (cppVar_93254 == 136);
	BIT_VEC cppVar_93257 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93258 = (cppVar_93257 << 3) | 2;
	cppVar_93258 = (cppVar_93258 & cppMask_un_5_);
	BIT_VEC cppVar_93259 = (0 << 5) | cppVar_93258;
	cppVar_93259 = (cppVar_93259 & cppMask_un_8_);
	bool cppVar_93261 = (cppVar_93259 == 137);
	BIT_VEC cppVar_93262 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93263 = (cppVar_93262 << 3) | 2;
	cppVar_93263 = (cppVar_93263 & cppMask_un_5_);
	BIT_VEC cppVar_93264 = (0 << 5) | cppVar_93263;
	cppVar_93264 = (cppVar_93264 & cppMask_un_8_);
	bool cppVar_93266 = (cppVar_93264 == 138);
	BIT_VEC cppVar_93267 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93268 = (cppVar_93267 << 3) | 2;
	cppVar_93268 = (cppVar_93268 & cppMask_un_5_);
	BIT_VEC cppVar_93269 = (0 << 5) | cppVar_93268;
	cppVar_93269 = (cppVar_93269 & cppMask_un_8_);
	bool cppVar_93271 = (cppVar_93269 == 140);
	BIT_VEC cppVar_93272 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93273 = (cppVar_93272 << 3) | 2;
	cppVar_93273 = (cppVar_93273 & cppMask_un_5_);
	BIT_VEC cppVar_93274 = (0 << 5) | cppVar_93273;
	cppVar_93274 = (cppVar_93274 & cppMask_un_8_);
	bool cppVar_93276 = (cppVar_93274 == 139);
	BIT_VEC cppVar_93277 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93278 = (cppVar_93277 << 3) | 2;
	cppVar_93278 = (cppVar_93278 & cppMask_un_5_);
	BIT_VEC cppVar_93279 = (0 << 5) | cppVar_93278;
	cppVar_93279 = (cppVar_93279 & cppMask_un_8_);
	bool cppVar_93281 = (cppVar_93279 == 141);
	BIT_VEC cppVar_93282 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93283 = (cppVar_93282 << 3) | 2;
	cppVar_93283 = (cppVar_93283 & cppMask_un_5_);
	BIT_VEC cppVar_93284 = (0 << 5) | cppVar_93283;
	cppVar_93284 = (cppVar_93284 & cppMask_un_8_);
	bool cppVar_93286 = (cppVar_93284 == 144);
	BIT_VEC cppVar_93287 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93288 = (cppVar_93287 << 3) | 2;
	cppVar_93288 = (cppVar_93288 & cppMask_un_5_);
	BIT_VEC cppVar_93289 = (0 << 5) | cppVar_93288;
	cppVar_93289 = (cppVar_93289 & cppMask_un_8_);
	bool cppVar_93291 = (cppVar_93289 == 152);
	BIT_VEC cppVar_93292 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93293 = (cppVar_93292 << 3) | 2;
	cppVar_93293 = (cppVar_93293 & cppMask_un_5_);
	BIT_VEC cppVar_93294 = (0 << 5) | cppVar_93293;
	cppVar_93294 = (cppVar_93294 & cppMask_un_8_);
	bool cppVar_93296 = (cppVar_93294 == 153);
	BIT_VEC cppVar_93297 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93298 = (cppVar_93297 << 3) | 2;
	cppVar_93298 = (cppVar_93298 & cppMask_un_5_);
	BIT_VEC cppVar_93299 = (0 << 5) | cppVar_93298;
	cppVar_93299 = (cppVar_93299 & cppMask_un_8_);
	bool cppVar_93301 = (cppVar_93299 == 160);
	BIT_VEC cppVar_93302 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93303 = (cppVar_93302 << 3) | 2;
	cppVar_93303 = (cppVar_93303 & cppMask_un_5_);
	BIT_VEC cppVar_93304 = (0 << 5) | cppVar_93303;
	cppVar_93304 = (cppVar_93304 & cppMask_un_8_);
	bool cppVar_93306 = (cppVar_93304 == 168);
	BIT_VEC cppVar_93307 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93308 = (cppVar_93307 << 3) | 2;
	cppVar_93308 = (cppVar_93308 & cppMask_un_5_);
	BIT_VEC cppVar_93309 = (0 << 5) | cppVar_93308;
	cppVar_93309 = (cppVar_93309 & cppMask_un_8_);
	bool cppVar_93311 = (cppVar_93309 == 176);
	BIT_VEC cppVar_93312 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93313 = (cppVar_93312 << 3) | 2;
	cppVar_93313 = (cppVar_93313 & cppMask_un_5_);
	BIT_VEC cppVar_93314 = (0 << 5) | cppVar_93313;
	cppVar_93314 = (cppVar_93314 & cppMask_un_8_);
	bool cppVar_93316 = (cppVar_93314 == 184);
	BIT_VEC cppVar_93317 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93318 = (cppVar_93317 << 3) | 2;
	cppVar_93318 = (cppVar_93318 & cppMask_un_5_);
	BIT_VEC cppVar_93319 = (0 << 5) | cppVar_93318;
	cppVar_93319 = (cppVar_93319 & cppMask_un_8_);
	bool cppVar_93321 = (cppVar_93319 == 208);
	BIT_VEC cppVar_93322 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93323 = (cppVar_93322 << 3) | 2;
	cppVar_93323 = (cppVar_93323 & cppMask_un_5_);
	BIT_VEC cppVar_93324 = (0 << 5) | cppVar_93323;
	cppVar_93324 = (cppVar_93324 & cppMask_un_8_);
	bool cppVar_93326 = (cppVar_93324 == 224);
	BIT_VEC cppVar_93327 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93328 = (cppVar_93327 << 3) | 2;
	cppVar_93328 = (cppVar_93328 & cppMask_un_5_);
	BIT_VEC cppVar_93329 = (0 << 5) | cppVar_93328;
	cppVar_93329 = (cppVar_93329 & cppMask_un_8_);
	bool cppVar_93331 = (cppVar_93329 == 240);
	BIT_VEC cppVar_93333 = (cppVar_93331) ? B : 0;
	BIT_VEC cppVar_93334 = (cppVar_93326) ? ACC : cppVar_93333;
	BIT_VEC cppVar_93335 = (cppVar_93321) ? PSW : cppVar_93334;
	BIT_VEC cppVar_93336 = (cppVar_93316) ? IP : cppVar_93335;
	BIT_VEC cppVar_93337 = (cppVar_93311) ? P3 : cppVar_93336;
	BIT_VEC cppVar_93338 = (cppVar_93306) ? IE : cppVar_93337;
	BIT_VEC cppVar_93339 = (cppVar_93301) ? P2 : cppVar_93338;
	BIT_VEC cppVar_93340 = (cppVar_93296) ? SBUF : cppVar_93339;
	BIT_VEC cppVar_93341 = (cppVar_93291) ? SCON : cppVar_93340;
	BIT_VEC cppVar_93342 = (cppVar_93286) ? P1 : cppVar_93341;
	BIT_VEC cppVar_93343 = (cppVar_93281) ? TH1 : cppVar_93342;
	BIT_VEC cppVar_93344 = (cppVar_93276) ? TL1 : cppVar_93343;
	BIT_VEC cppVar_93345 = (cppVar_93271) ? TH0 : cppVar_93344;
	BIT_VEC cppVar_93346 = (cppVar_93266) ? TL0 : cppVar_93345;
	BIT_VEC cppVar_93347 = (cppVar_93261) ? TMOD : cppVar_93346;
	BIT_VEC cppVar_93348 = (cppVar_93256) ? TCON : cppVar_93347;
	BIT_VEC cppVar_93349 = (cppVar_93251) ? PCON : cppVar_93348;
	BIT_VEC cppVar_93350 = (cppVar_93246) ? DPH : cppVar_93349;
	BIT_VEC cppVar_93351 = (cppVar_93241) ? DPL : cppVar_93350;
	BIT_VEC cppVar_93352 = (cppVar_93236) ? SP : cppVar_93351;
	BIT_VEC cppVar_93353 = (cppVar_93231) ? P0 : cppVar_93352;
	BIT_VEC cppVar_93354 = (cppVar_93222) ? cppVar_93226 : cppVar_93353;
	BIT_VEC cppVar_93356 = cppVar_93354 - 1;
	cppVar_93356 = (cppVar_93356 & cppMask_un_8_);
	type_mem cppVar_93357 = IRAM;
	cppVar_93357.wr(cppVar_93216, cppVar_93356);
	type_mem& cppVar_93358 = (cppVar_93213) ? cppVar_93357 : IRAM;
	BIT_VEC cppVar_93359 = ROM.rd(PC);
	bool cppVar_93361 = (cppVar_93359 == 217);
	BIT_VEC cppVar_93362 = ROM.rd(PC);
	bool cppVar_93364 = (cppVar_93362 == 25);
	bool cppVar_93365 = cppVar_93361 || cppVar_93364;
	BIT_VEC cppVar_93367 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93369 = (cppVar_93367 << 3) | 1;
	cppVar_93369 = (cppVar_93369 & cppMask_un_5_);
	BIT_VEC cppVar_93370 = (0 << 5) | cppVar_93369;
	cppVar_93370 = (cppVar_93370 & cppMask_un_8_);
	BIT_VEC cppVar_93371 = (cppVar_93370 >> 7) & cppMask_un_1_;
	bool cppVar_93373 = (cppVar_93371 == 0);
	BIT_VEC cppVar_93374 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93375 = (cppVar_93374 << 3) | 1;
	cppVar_93375 = (cppVar_93375 & cppMask_un_5_);
	BIT_VEC cppVar_93376 = (0 << 5) | cppVar_93375;
	cppVar_93376 = (cppVar_93376 & cppMask_un_8_);
	BIT_VEC cppVar_93377 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93378 = (cppVar_93377 << 3) | 1;
	cppVar_93378 = (cppVar_93378 & cppMask_un_5_);
	BIT_VEC cppVar_93379 = (0 << 5) | cppVar_93378;
	cppVar_93379 = (cppVar_93379 & cppMask_un_8_);
	BIT_VEC cppVar_93380 = (cppVar_93379 >> 7) & cppMask_un_1_;
	bool cppVar_93382 = (cppVar_93380 == 0);
	BIT_VEC cppVar_93383 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93384 = (cppVar_93383 << 3) | 1;
	cppVar_93384 = (cppVar_93384 & cppMask_un_5_);
	BIT_VEC cppVar_93385 = (0 << 5) | cppVar_93384;
	cppVar_93385 = (cppVar_93385 & cppMask_un_8_);
	BIT_VEC cppVar_93386 = IRAM.rd(cppVar_93385);
	BIT_VEC cppVar_93387 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93388 = (cppVar_93387 << 3) | 1;
	cppVar_93388 = (cppVar_93388 & cppMask_un_5_);
	BIT_VEC cppVar_93389 = (0 << 5) | cppVar_93388;
	cppVar_93389 = (cppVar_93389 & cppMask_un_8_);
	bool cppVar_93391 = (cppVar_93389 == 128);
	BIT_VEC cppVar_93392 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93393 = (cppVar_93392 << 3) | 1;
	cppVar_93393 = (cppVar_93393 & cppMask_un_5_);
	BIT_VEC cppVar_93394 = (0 << 5) | cppVar_93393;
	cppVar_93394 = (cppVar_93394 & cppMask_un_8_);
	bool cppVar_93396 = (cppVar_93394 == 129);
	BIT_VEC cppVar_93397 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93398 = (cppVar_93397 << 3) | 1;
	cppVar_93398 = (cppVar_93398 & cppMask_un_5_);
	BIT_VEC cppVar_93399 = (0 << 5) | cppVar_93398;
	cppVar_93399 = (cppVar_93399 & cppMask_un_8_);
	bool cppVar_93401 = (cppVar_93399 == 130);
	BIT_VEC cppVar_93402 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93403 = (cppVar_93402 << 3) | 1;
	cppVar_93403 = (cppVar_93403 & cppMask_un_5_);
	BIT_VEC cppVar_93404 = (0 << 5) | cppVar_93403;
	cppVar_93404 = (cppVar_93404 & cppMask_un_8_);
	bool cppVar_93406 = (cppVar_93404 == 131);
	BIT_VEC cppVar_93407 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93408 = (cppVar_93407 << 3) | 1;
	cppVar_93408 = (cppVar_93408 & cppMask_un_5_);
	BIT_VEC cppVar_93409 = (0 << 5) | cppVar_93408;
	cppVar_93409 = (cppVar_93409 & cppMask_un_8_);
	bool cppVar_93411 = (cppVar_93409 == 135);
	BIT_VEC cppVar_93412 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93413 = (cppVar_93412 << 3) | 1;
	cppVar_93413 = (cppVar_93413 & cppMask_un_5_);
	BIT_VEC cppVar_93414 = (0 << 5) | cppVar_93413;
	cppVar_93414 = (cppVar_93414 & cppMask_un_8_);
	bool cppVar_93416 = (cppVar_93414 == 136);
	BIT_VEC cppVar_93417 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93418 = (cppVar_93417 << 3) | 1;
	cppVar_93418 = (cppVar_93418 & cppMask_un_5_);
	BIT_VEC cppVar_93419 = (0 << 5) | cppVar_93418;
	cppVar_93419 = (cppVar_93419 & cppMask_un_8_);
	bool cppVar_93421 = (cppVar_93419 == 137);
	BIT_VEC cppVar_93422 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93423 = (cppVar_93422 << 3) | 1;
	cppVar_93423 = (cppVar_93423 & cppMask_un_5_);
	BIT_VEC cppVar_93424 = (0 << 5) | cppVar_93423;
	cppVar_93424 = (cppVar_93424 & cppMask_un_8_);
	bool cppVar_93426 = (cppVar_93424 == 138);
	BIT_VEC cppVar_93427 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93428 = (cppVar_93427 << 3) | 1;
	cppVar_93428 = (cppVar_93428 & cppMask_un_5_);
	BIT_VEC cppVar_93429 = (0 << 5) | cppVar_93428;
	cppVar_93429 = (cppVar_93429 & cppMask_un_8_);
	bool cppVar_93431 = (cppVar_93429 == 140);
	BIT_VEC cppVar_93432 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93433 = (cppVar_93432 << 3) | 1;
	cppVar_93433 = (cppVar_93433 & cppMask_un_5_);
	BIT_VEC cppVar_93434 = (0 << 5) | cppVar_93433;
	cppVar_93434 = (cppVar_93434 & cppMask_un_8_);
	bool cppVar_93436 = (cppVar_93434 == 139);
	BIT_VEC cppVar_93437 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93438 = (cppVar_93437 << 3) | 1;
	cppVar_93438 = (cppVar_93438 & cppMask_un_5_);
	BIT_VEC cppVar_93439 = (0 << 5) | cppVar_93438;
	cppVar_93439 = (cppVar_93439 & cppMask_un_8_);
	bool cppVar_93441 = (cppVar_93439 == 141);
	BIT_VEC cppVar_93442 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93443 = (cppVar_93442 << 3) | 1;
	cppVar_93443 = (cppVar_93443 & cppMask_un_5_);
	BIT_VEC cppVar_93444 = (0 << 5) | cppVar_93443;
	cppVar_93444 = (cppVar_93444 & cppMask_un_8_);
	bool cppVar_93446 = (cppVar_93444 == 144);
	BIT_VEC cppVar_93447 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93448 = (cppVar_93447 << 3) | 1;
	cppVar_93448 = (cppVar_93448 & cppMask_un_5_);
	BIT_VEC cppVar_93449 = (0 << 5) | cppVar_93448;
	cppVar_93449 = (cppVar_93449 & cppMask_un_8_);
	bool cppVar_93451 = (cppVar_93449 == 152);
	BIT_VEC cppVar_93452 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93453 = (cppVar_93452 << 3) | 1;
	cppVar_93453 = (cppVar_93453 & cppMask_un_5_);
	BIT_VEC cppVar_93454 = (0 << 5) | cppVar_93453;
	cppVar_93454 = (cppVar_93454 & cppMask_un_8_);
	bool cppVar_93456 = (cppVar_93454 == 153);
	BIT_VEC cppVar_93457 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93458 = (cppVar_93457 << 3) | 1;
	cppVar_93458 = (cppVar_93458 & cppMask_un_5_);
	BIT_VEC cppVar_93459 = (0 << 5) | cppVar_93458;
	cppVar_93459 = (cppVar_93459 & cppMask_un_8_);
	bool cppVar_93461 = (cppVar_93459 == 160);
	BIT_VEC cppVar_93462 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93463 = (cppVar_93462 << 3) | 1;
	cppVar_93463 = (cppVar_93463 & cppMask_un_5_);
	BIT_VEC cppVar_93464 = (0 << 5) | cppVar_93463;
	cppVar_93464 = (cppVar_93464 & cppMask_un_8_);
	bool cppVar_93466 = (cppVar_93464 == 168);
	BIT_VEC cppVar_93467 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93468 = (cppVar_93467 << 3) | 1;
	cppVar_93468 = (cppVar_93468 & cppMask_un_5_);
	BIT_VEC cppVar_93469 = (0 << 5) | cppVar_93468;
	cppVar_93469 = (cppVar_93469 & cppMask_un_8_);
	bool cppVar_93471 = (cppVar_93469 == 176);
	BIT_VEC cppVar_93472 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93473 = (cppVar_93472 << 3) | 1;
	cppVar_93473 = (cppVar_93473 & cppMask_un_5_);
	BIT_VEC cppVar_93474 = (0 << 5) | cppVar_93473;
	cppVar_93474 = (cppVar_93474 & cppMask_un_8_);
	bool cppVar_93476 = (cppVar_93474 == 184);
	BIT_VEC cppVar_93477 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93478 = (cppVar_93477 << 3) | 1;
	cppVar_93478 = (cppVar_93478 & cppMask_un_5_);
	BIT_VEC cppVar_93479 = (0 << 5) | cppVar_93478;
	cppVar_93479 = (cppVar_93479 & cppMask_un_8_);
	bool cppVar_93481 = (cppVar_93479 == 208);
	BIT_VEC cppVar_93482 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93483 = (cppVar_93482 << 3) | 1;
	cppVar_93483 = (cppVar_93483 & cppMask_un_5_);
	BIT_VEC cppVar_93484 = (0 << 5) | cppVar_93483;
	cppVar_93484 = (cppVar_93484 & cppMask_un_8_);
	bool cppVar_93486 = (cppVar_93484 == 224);
	BIT_VEC cppVar_93487 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93488 = (cppVar_93487 << 3) | 1;
	cppVar_93488 = (cppVar_93488 & cppMask_un_5_);
	BIT_VEC cppVar_93489 = (0 << 5) | cppVar_93488;
	cppVar_93489 = (cppVar_93489 & cppMask_un_8_);
	bool cppVar_93491 = (cppVar_93489 == 240);
	BIT_VEC cppVar_93493 = (cppVar_93491) ? B : 0;
	BIT_VEC cppVar_93494 = (cppVar_93486) ? ACC : cppVar_93493;
	BIT_VEC cppVar_93495 = (cppVar_93481) ? PSW : cppVar_93494;
	BIT_VEC cppVar_93496 = (cppVar_93476) ? IP : cppVar_93495;
	BIT_VEC cppVar_93497 = (cppVar_93471) ? P3 : cppVar_93496;
	BIT_VEC cppVar_93498 = (cppVar_93466) ? IE : cppVar_93497;
	BIT_VEC cppVar_93499 = (cppVar_93461) ? P2 : cppVar_93498;
	BIT_VEC cppVar_93500 = (cppVar_93456) ? SBUF : cppVar_93499;
	BIT_VEC cppVar_93501 = (cppVar_93451) ? SCON : cppVar_93500;
	BIT_VEC cppVar_93502 = (cppVar_93446) ? P1 : cppVar_93501;
	BIT_VEC cppVar_93503 = (cppVar_93441) ? TH1 : cppVar_93502;
	BIT_VEC cppVar_93504 = (cppVar_93436) ? TL1 : cppVar_93503;
	BIT_VEC cppVar_93505 = (cppVar_93431) ? TH0 : cppVar_93504;
	BIT_VEC cppVar_93506 = (cppVar_93426) ? TL0 : cppVar_93505;
	BIT_VEC cppVar_93507 = (cppVar_93421) ? TMOD : cppVar_93506;
	BIT_VEC cppVar_93508 = (cppVar_93416) ? TCON : cppVar_93507;
	BIT_VEC cppVar_93509 = (cppVar_93411) ? PCON : cppVar_93508;
	BIT_VEC cppVar_93510 = (cppVar_93406) ? DPH : cppVar_93509;
	BIT_VEC cppVar_93511 = (cppVar_93401) ? DPL : cppVar_93510;
	BIT_VEC cppVar_93512 = (cppVar_93396) ? SP : cppVar_93511;
	BIT_VEC cppVar_93513 = (cppVar_93391) ? P0 : cppVar_93512;
	BIT_VEC cppVar_93514 = (cppVar_93382) ? cppVar_93386 : cppVar_93513;
	BIT_VEC cppVar_93516 = cppVar_93514 - 1;
	cppVar_93516 = (cppVar_93516 & cppMask_un_8_);
	type_mem cppVar_93517 = IRAM;
	cppVar_93517.wr(cppVar_93376, cppVar_93516);
	type_mem& cppVar_93518 = (cppVar_93373) ? cppVar_93517 : IRAM;
	BIT_VEC cppVar_93519 = ROM.rd(PC);
	bool cppVar_93521 = (cppVar_93519 == 216);
	BIT_VEC cppVar_93522 = ROM.rd(PC);
	bool cppVar_93524 = (cppVar_93522 == 24);
	bool cppVar_93525 = cppVar_93521 || cppVar_93524;
	BIT_VEC cppVar_93527 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93529 = (cppVar_93527 << 3) | 0;
	cppVar_93529 = (cppVar_93529 & cppMask_un_5_);
	BIT_VEC cppVar_93530 = (0 << 5) | cppVar_93529;
	cppVar_93530 = (cppVar_93530 & cppMask_un_8_);
	BIT_VEC cppVar_93531 = (cppVar_93530 >> 7) & cppMask_un_1_;
	bool cppVar_93533 = (cppVar_93531 == 0);
	BIT_VEC cppVar_93534 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93535 = (cppVar_93534 << 3) | 0;
	cppVar_93535 = (cppVar_93535 & cppMask_un_5_);
	BIT_VEC cppVar_93536 = (0 << 5) | cppVar_93535;
	cppVar_93536 = (cppVar_93536 & cppMask_un_8_);
	BIT_VEC cppVar_93537 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93538 = (cppVar_93537 << 3) | 0;
	cppVar_93538 = (cppVar_93538 & cppMask_un_5_);
	BIT_VEC cppVar_93539 = (0 << 5) | cppVar_93538;
	cppVar_93539 = (cppVar_93539 & cppMask_un_8_);
	BIT_VEC cppVar_93540 = (cppVar_93539 >> 7) & cppMask_un_1_;
	bool cppVar_93542 = (cppVar_93540 == 0);
	BIT_VEC cppVar_93543 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93544 = (cppVar_93543 << 3) | 0;
	cppVar_93544 = (cppVar_93544 & cppMask_un_5_);
	BIT_VEC cppVar_93545 = (0 << 5) | cppVar_93544;
	cppVar_93545 = (cppVar_93545 & cppMask_un_8_);
	BIT_VEC cppVar_93546 = IRAM.rd(cppVar_93545);
	BIT_VEC cppVar_93547 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93548 = (cppVar_93547 << 3) | 0;
	cppVar_93548 = (cppVar_93548 & cppMask_un_5_);
	BIT_VEC cppVar_93549 = (0 << 5) | cppVar_93548;
	cppVar_93549 = (cppVar_93549 & cppMask_un_8_);
	bool cppVar_93551 = (cppVar_93549 == 128);
	BIT_VEC cppVar_93552 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93553 = (cppVar_93552 << 3) | 0;
	cppVar_93553 = (cppVar_93553 & cppMask_un_5_);
	BIT_VEC cppVar_93554 = (0 << 5) | cppVar_93553;
	cppVar_93554 = (cppVar_93554 & cppMask_un_8_);
	bool cppVar_93556 = (cppVar_93554 == 129);
	BIT_VEC cppVar_93557 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93558 = (cppVar_93557 << 3) | 0;
	cppVar_93558 = (cppVar_93558 & cppMask_un_5_);
	BIT_VEC cppVar_93559 = (0 << 5) | cppVar_93558;
	cppVar_93559 = (cppVar_93559 & cppMask_un_8_);
	bool cppVar_93561 = (cppVar_93559 == 130);
	BIT_VEC cppVar_93562 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93563 = (cppVar_93562 << 3) | 0;
	cppVar_93563 = (cppVar_93563 & cppMask_un_5_);
	BIT_VEC cppVar_93564 = (0 << 5) | cppVar_93563;
	cppVar_93564 = (cppVar_93564 & cppMask_un_8_);
	bool cppVar_93566 = (cppVar_93564 == 131);
	BIT_VEC cppVar_93567 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93568 = (cppVar_93567 << 3) | 0;
	cppVar_93568 = (cppVar_93568 & cppMask_un_5_);
	BIT_VEC cppVar_93569 = (0 << 5) | cppVar_93568;
	cppVar_93569 = (cppVar_93569 & cppMask_un_8_);
	bool cppVar_93571 = (cppVar_93569 == 135);
	BIT_VEC cppVar_93572 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93573 = (cppVar_93572 << 3) | 0;
	cppVar_93573 = (cppVar_93573 & cppMask_un_5_);
	BIT_VEC cppVar_93574 = (0 << 5) | cppVar_93573;
	cppVar_93574 = (cppVar_93574 & cppMask_un_8_);
	bool cppVar_93576 = (cppVar_93574 == 136);
	BIT_VEC cppVar_93577 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93578 = (cppVar_93577 << 3) | 0;
	cppVar_93578 = (cppVar_93578 & cppMask_un_5_);
	BIT_VEC cppVar_93579 = (0 << 5) | cppVar_93578;
	cppVar_93579 = (cppVar_93579 & cppMask_un_8_);
	bool cppVar_93581 = (cppVar_93579 == 137);
	BIT_VEC cppVar_93582 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93583 = (cppVar_93582 << 3) | 0;
	cppVar_93583 = (cppVar_93583 & cppMask_un_5_);
	BIT_VEC cppVar_93584 = (0 << 5) | cppVar_93583;
	cppVar_93584 = (cppVar_93584 & cppMask_un_8_);
	bool cppVar_93586 = (cppVar_93584 == 138);
	BIT_VEC cppVar_93587 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93588 = (cppVar_93587 << 3) | 0;
	cppVar_93588 = (cppVar_93588 & cppMask_un_5_);
	BIT_VEC cppVar_93589 = (0 << 5) | cppVar_93588;
	cppVar_93589 = (cppVar_93589 & cppMask_un_8_);
	bool cppVar_93591 = (cppVar_93589 == 140);
	BIT_VEC cppVar_93592 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93593 = (cppVar_93592 << 3) | 0;
	cppVar_93593 = (cppVar_93593 & cppMask_un_5_);
	BIT_VEC cppVar_93594 = (0 << 5) | cppVar_93593;
	cppVar_93594 = (cppVar_93594 & cppMask_un_8_);
	bool cppVar_93596 = (cppVar_93594 == 139);
	BIT_VEC cppVar_93597 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93598 = (cppVar_93597 << 3) | 0;
	cppVar_93598 = (cppVar_93598 & cppMask_un_5_);
	BIT_VEC cppVar_93599 = (0 << 5) | cppVar_93598;
	cppVar_93599 = (cppVar_93599 & cppMask_un_8_);
	bool cppVar_93601 = (cppVar_93599 == 141);
	BIT_VEC cppVar_93602 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93603 = (cppVar_93602 << 3) | 0;
	cppVar_93603 = (cppVar_93603 & cppMask_un_5_);
	BIT_VEC cppVar_93604 = (0 << 5) | cppVar_93603;
	cppVar_93604 = (cppVar_93604 & cppMask_un_8_);
	bool cppVar_93606 = (cppVar_93604 == 144);
	BIT_VEC cppVar_93607 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93608 = (cppVar_93607 << 3) | 0;
	cppVar_93608 = (cppVar_93608 & cppMask_un_5_);
	BIT_VEC cppVar_93609 = (0 << 5) | cppVar_93608;
	cppVar_93609 = (cppVar_93609 & cppMask_un_8_);
	bool cppVar_93611 = (cppVar_93609 == 152);
	BIT_VEC cppVar_93612 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93613 = (cppVar_93612 << 3) | 0;
	cppVar_93613 = (cppVar_93613 & cppMask_un_5_);
	BIT_VEC cppVar_93614 = (0 << 5) | cppVar_93613;
	cppVar_93614 = (cppVar_93614 & cppMask_un_8_);
	bool cppVar_93616 = (cppVar_93614 == 153);
	BIT_VEC cppVar_93617 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93618 = (cppVar_93617 << 3) | 0;
	cppVar_93618 = (cppVar_93618 & cppMask_un_5_);
	BIT_VEC cppVar_93619 = (0 << 5) | cppVar_93618;
	cppVar_93619 = (cppVar_93619 & cppMask_un_8_);
	bool cppVar_93621 = (cppVar_93619 == 160);
	BIT_VEC cppVar_93622 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93623 = (cppVar_93622 << 3) | 0;
	cppVar_93623 = (cppVar_93623 & cppMask_un_5_);
	BIT_VEC cppVar_93624 = (0 << 5) | cppVar_93623;
	cppVar_93624 = (cppVar_93624 & cppMask_un_8_);
	bool cppVar_93626 = (cppVar_93624 == 168);
	BIT_VEC cppVar_93627 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93628 = (cppVar_93627 << 3) | 0;
	cppVar_93628 = (cppVar_93628 & cppMask_un_5_);
	BIT_VEC cppVar_93629 = (0 << 5) | cppVar_93628;
	cppVar_93629 = (cppVar_93629 & cppMask_un_8_);
	bool cppVar_93631 = (cppVar_93629 == 176);
	BIT_VEC cppVar_93632 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93633 = (cppVar_93632 << 3) | 0;
	cppVar_93633 = (cppVar_93633 & cppMask_un_5_);
	BIT_VEC cppVar_93634 = (0 << 5) | cppVar_93633;
	cppVar_93634 = (cppVar_93634 & cppMask_un_8_);
	bool cppVar_93636 = (cppVar_93634 == 184);
	BIT_VEC cppVar_93637 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93638 = (cppVar_93637 << 3) | 0;
	cppVar_93638 = (cppVar_93638 & cppMask_un_5_);
	BIT_VEC cppVar_93639 = (0 << 5) | cppVar_93638;
	cppVar_93639 = (cppVar_93639 & cppMask_un_8_);
	bool cppVar_93641 = (cppVar_93639 == 208);
	BIT_VEC cppVar_93642 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93643 = (cppVar_93642 << 3) | 0;
	cppVar_93643 = (cppVar_93643 & cppMask_un_5_);
	BIT_VEC cppVar_93644 = (0 << 5) | cppVar_93643;
	cppVar_93644 = (cppVar_93644 & cppMask_un_8_);
	bool cppVar_93646 = (cppVar_93644 == 224);
	BIT_VEC cppVar_93647 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93648 = (cppVar_93647 << 3) | 0;
	cppVar_93648 = (cppVar_93648 & cppMask_un_5_);
	BIT_VEC cppVar_93649 = (0 << 5) | cppVar_93648;
	cppVar_93649 = (cppVar_93649 & cppMask_un_8_);
	bool cppVar_93651 = (cppVar_93649 == 240);
	BIT_VEC cppVar_93653 = (cppVar_93651) ? B : 0;
	BIT_VEC cppVar_93654 = (cppVar_93646) ? ACC : cppVar_93653;
	BIT_VEC cppVar_93655 = (cppVar_93641) ? PSW : cppVar_93654;
	BIT_VEC cppVar_93656 = (cppVar_93636) ? IP : cppVar_93655;
	BIT_VEC cppVar_93657 = (cppVar_93631) ? P3 : cppVar_93656;
	BIT_VEC cppVar_93658 = (cppVar_93626) ? IE : cppVar_93657;
	BIT_VEC cppVar_93659 = (cppVar_93621) ? P2 : cppVar_93658;
	BIT_VEC cppVar_93660 = (cppVar_93616) ? SBUF : cppVar_93659;
	BIT_VEC cppVar_93661 = (cppVar_93611) ? SCON : cppVar_93660;
	BIT_VEC cppVar_93662 = (cppVar_93606) ? P1 : cppVar_93661;
	BIT_VEC cppVar_93663 = (cppVar_93601) ? TH1 : cppVar_93662;
	BIT_VEC cppVar_93664 = (cppVar_93596) ? TL1 : cppVar_93663;
	BIT_VEC cppVar_93665 = (cppVar_93591) ? TH0 : cppVar_93664;
	BIT_VEC cppVar_93666 = (cppVar_93586) ? TL0 : cppVar_93665;
	BIT_VEC cppVar_93667 = (cppVar_93581) ? TMOD : cppVar_93666;
	BIT_VEC cppVar_93668 = (cppVar_93576) ? TCON : cppVar_93667;
	BIT_VEC cppVar_93669 = (cppVar_93571) ? PCON : cppVar_93668;
	BIT_VEC cppVar_93670 = (cppVar_93566) ? DPH : cppVar_93669;
	BIT_VEC cppVar_93671 = (cppVar_93561) ? DPL : cppVar_93670;
	BIT_VEC cppVar_93672 = (cppVar_93556) ? SP : cppVar_93671;
	BIT_VEC cppVar_93673 = (cppVar_93551) ? P0 : cppVar_93672;
	BIT_VEC cppVar_93674 = (cppVar_93542) ? cppVar_93546 : cppVar_93673;
	BIT_VEC cppVar_93676 = cppVar_93674 - 1;
	cppVar_93676 = (cppVar_93676 & cppMask_un_8_);
	type_mem cppVar_93677 = IRAM;
	cppVar_93677.wr(cppVar_93536, cppVar_93676);
	type_mem& cppVar_93678 = (cppVar_93533) ? cppVar_93677 : IRAM;
	BIT_VEC cppVar_93679 = ROM.rd(PC);
	bool cppVar_93681 = (cppVar_93679 == 23);
	BIT_VEC cppVar_93683 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93685 = (cppVar_93683 << 3) | 1;
	cppVar_93685 = (cppVar_93685 & cppMask_un_5_);
	BIT_VEC cppVar_93686 = (0 << 5) | cppVar_93685;
	cppVar_93686 = (cppVar_93686 & cppMask_un_8_);
	BIT_VEC cppVar_93687 = IRAM.rd(cppVar_93686);
	BIT_VEC cppVar_93688 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93689 = (cppVar_93688 << 3) | 1;
	cppVar_93689 = (cppVar_93689 & cppMask_un_5_);
	BIT_VEC cppVar_93690 = (0 << 5) | cppVar_93689;
	cppVar_93690 = (cppVar_93690 & cppMask_un_8_);
	BIT_VEC cppVar_93691 = IRAM.rd(cppVar_93690);
	BIT_VEC cppVar_93692 = IRAM.rd(cppVar_93691);
	BIT_VEC cppVar_93694 = cppVar_93692 - 1;
	cppVar_93694 = (cppVar_93694 & cppMask_un_8_);
	type_mem cppVar_93695 = IRAM;
	cppVar_93695.wr(cppVar_93687, cppVar_93694);
	BIT_VEC cppVar_93696 = ROM.rd(PC);
	bool cppVar_93698 = (cppVar_93696 == 22);
	BIT_VEC cppVar_93700 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93702 = (cppVar_93700 << 3) | 0;
	cppVar_93702 = (cppVar_93702 & cppMask_un_5_);
	BIT_VEC cppVar_93703 = (0 << 5) | cppVar_93702;
	cppVar_93703 = (cppVar_93703 & cppMask_un_8_);
	BIT_VEC cppVar_93704 = IRAM.rd(cppVar_93703);
	BIT_VEC cppVar_93705 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_93706 = (cppVar_93705 << 3) | 0;
	cppVar_93706 = (cppVar_93706 & cppMask_un_5_);
	BIT_VEC cppVar_93707 = (0 << 5) | cppVar_93706;
	cppVar_93707 = (cppVar_93707 & cppMask_un_8_);
	BIT_VEC cppVar_93708 = IRAM.rd(cppVar_93707);
	BIT_VEC cppVar_93709 = IRAM.rd(cppVar_93708);
	BIT_VEC cppVar_93711 = cppVar_93709 - 1;
	cppVar_93711 = (cppVar_93711 & cppMask_un_8_);
	type_mem cppVar_93712 = IRAM;
	cppVar_93712.wr(cppVar_93704, cppVar_93711);
	BIT_VEC cppVar_93713 = ROM.rd(PC);
	bool cppVar_93715 = (cppVar_93713 == 213);
	BIT_VEC cppVar_93716 = ROM.rd(PC);
	bool cppVar_93718 = (cppVar_93716 == 21);
	bool cppVar_93719 = cppVar_93715 || cppVar_93718;
	BIT_VEC cppVar_93721 = PC + 1;
	cppVar_93721 = (cppVar_93721 & cppMask_un_16_);
	BIT_VEC cppVar_93722 = ROM.rd(cppVar_93721);
	BIT_VEC cppVar_93723 = (cppVar_93722 >> 7) & cppMask_un_1_;
	bool cppVar_93725 = (cppVar_93723 == 0);
	BIT_VEC cppVar_93726 = PC + 1;
	cppVar_93726 = (cppVar_93726 & cppMask_un_16_);
	BIT_VEC cppVar_93727 = ROM.rd(cppVar_93726);
	BIT_VEC cppVar_93728 = PC + 1;
	cppVar_93728 = (cppVar_93728 & cppMask_un_16_);
	BIT_VEC cppVar_93729 = ROM.rd(cppVar_93728);
	BIT_VEC cppVar_93730 = (cppVar_93729 >> 7) & cppMask_un_1_;
	bool cppVar_93732 = (cppVar_93730 == 0);
	BIT_VEC cppVar_93733 = PC + 1;
	cppVar_93733 = (cppVar_93733 & cppMask_un_16_);
	BIT_VEC cppVar_93734 = ROM.rd(cppVar_93733);
	BIT_VEC cppVar_93735 = IRAM.rd(cppVar_93734);
	BIT_VEC cppVar_93736 = PC + 1;
	cppVar_93736 = (cppVar_93736 & cppMask_un_16_);
	BIT_VEC cppVar_93737 = ROM.rd(cppVar_93736);
	bool cppVar_93739 = (cppVar_93737 == 128);
	BIT_VEC cppVar_93740 = PC + 1;
	cppVar_93740 = (cppVar_93740 & cppMask_un_16_);
	BIT_VEC cppVar_93741 = ROM.rd(cppVar_93740);
	bool cppVar_93743 = (cppVar_93741 == 129);
	BIT_VEC cppVar_93744 = PC + 1;
	cppVar_93744 = (cppVar_93744 & cppMask_un_16_);
	BIT_VEC cppVar_93745 = ROM.rd(cppVar_93744);
	bool cppVar_93747 = (cppVar_93745 == 130);
	BIT_VEC cppVar_93748 = PC + 1;
	cppVar_93748 = (cppVar_93748 & cppMask_un_16_);
	BIT_VEC cppVar_93749 = ROM.rd(cppVar_93748);
	bool cppVar_93751 = (cppVar_93749 == 131);
	BIT_VEC cppVar_93752 = PC + 1;
	cppVar_93752 = (cppVar_93752 & cppMask_un_16_);
	BIT_VEC cppVar_93753 = ROM.rd(cppVar_93752);
	bool cppVar_93755 = (cppVar_93753 == 135);
	BIT_VEC cppVar_93756 = PC + 1;
	cppVar_93756 = (cppVar_93756 & cppMask_un_16_);
	BIT_VEC cppVar_93757 = ROM.rd(cppVar_93756);
	bool cppVar_93759 = (cppVar_93757 == 136);
	BIT_VEC cppVar_93760 = PC + 1;
	cppVar_93760 = (cppVar_93760 & cppMask_un_16_);
	BIT_VEC cppVar_93761 = ROM.rd(cppVar_93760);
	bool cppVar_93763 = (cppVar_93761 == 137);
	BIT_VEC cppVar_93764 = PC + 1;
	cppVar_93764 = (cppVar_93764 & cppMask_un_16_);
	BIT_VEC cppVar_93765 = ROM.rd(cppVar_93764);
	bool cppVar_93767 = (cppVar_93765 == 138);
	BIT_VEC cppVar_93768 = PC + 1;
	cppVar_93768 = (cppVar_93768 & cppMask_un_16_);
	BIT_VEC cppVar_93769 = ROM.rd(cppVar_93768);
	bool cppVar_93771 = (cppVar_93769 == 140);
	BIT_VEC cppVar_93772 = PC + 1;
	cppVar_93772 = (cppVar_93772 & cppMask_un_16_);
	BIT_VEC cppVar_93773 = ROM.rd(cppVar_93772);
	bool cppVar_93775 = (cppVar_93773 == 139);
	BIT_VEC cppVar_93776 = PC + 1;
	cppVar_93776 = (cppVar_93776 & cppMask_un_16_);
	BIT_VEC cppVar_93777 = ROM.rd(cppVar_93776);
	bool cppVar_93779 = (cppVar_93777 == 141);
	BIT_VEC cppVar_93780 = PC + 1;
	cppVar_93780 = (cppVar_93780 & cppMask_un_16_);
	BIT_VEC cppVar_93781 = ROM.rd(cppVar_93780);
	bool cppVar_93783 = (cppVar_93781 == 144);
	BIT_VEC cppVar_93784 = PC + 1;
	cppVar_93784 = (cppVar_93784 & cppMask_un_16_);
	BIT_VEC cppVar_93785 = ROM.rd(cppVar_93784);
	bool cppVar_93787 = (cppVar_93785 == 152);
	BIT_VEC cppVar_93788 = PC + 1;
	cppVar_93788 = (cppVar_93788 & cppMask_un_16_);
	BIT_VEC cppVar_93789 = ROM.rd(cppVar_93788);
	bool cppVar_93791 = (cppVar_93789 == 153);
	BIT_VEC cppVar_93792 = PC + 1;
	cppVar_93792 = (cppVar_93792 & cppMask_un_16_);
	BIT_VEC cppVar_93793 = ROM.rd(cppVar_93792);
	bool cppVar_93795 = (cppVar_93793 == 160);
	BIT_VEC cppVar_93796 = PC + 1;
	cppVar_93796 = (cppVar_93796 & cppMask_un_16_);
	BIT_VEC cppVar_93797 = ROM.rd(cppVar_93796);
	bool cppVar_93799 = (cppVar_93797 == 168);
	BIT_VEC cppVar_93800 = PC + 1;
	cppVar_93800 = (cppVar_93800 & cppMask_un_16_);
	BIT_VEC cppVar_93801 = ROM.rd(cppVar_93800);
	bool cppVar_93803 = (cppVar_93801 == 176);
	BIT_VEC cppVar_93804 = PC + 1;
	cppVar_93804 = (cppVar_93804 & cppMask_un_16_);
	BIT_VEC cppVar_93805 = ROM.rd(cppVar_93804);
	bool cppVar_93807 = (cppVar_93805 == 184);
	BIT_VEC cppVar_93808 = PC + 1;
	cppVar_93808 = (cppVar_93808 & cppMask_un_16_);
	BIT_VEC cppVar_93809 = ROM.rd(cppVar_93808);
	bool cppVar_93811 = (cppVar_93809 == 208);
	BIT_VEC cppVar_93812 = PC + 1;
	cppVar_93812 = (cppVar_93812 & cppMask_un_16_);
	BIT_VEC cppVar_93813 = ROM.rd(cppVar_93812);
	bool cppVar_93815 = (cppVar_93813 == 224);
	BIT_VEC cppVar_93816 = PC + 1;
	cppVar_93816 = (cppVar_93816 & cppMask_un_16_);
	BIT_VEC cppVar_93817 = ROM.rd(cppVar_93816);
	bool cppVar_93819 = (cppVar_93817 == 240);
	BIT_VEC cppVar_93821 = (cppVar_93819) ? B : 0;
	BIT_VEC cppVar_93822 = (cppVar_93815) ? ACC : cppVar_93821;
	BIT_VEC cppVar_93823 = (cppVar_93811) ? PSW : cppVar_93822;
	BIT_VEC cppVar_93824 = (cppVar_93807) ? IP : cppVar_93823;
	BIT_VEC cppVar_93825 = (cppVar_93803) ? P3 : cppVar_93824;
	BIT_VEC cppVar_93826 = (cppVar_93799) ? IE : cppVar_93825;
	BIT_VEC cppVar_93827 = (cppVar_93795) ? P2 : cppVar_93826;
	BIT_VEC cppVar_93828 = (cppVar_93791) ? SBUF : cppVar_93827;
	BIT_VEC cppVar_93829 = (cppVar_93787) ? SCON : cppVar_93828;
	BIT_VEC cppVar_93830 = (cppVar_93783) ? P1 : cppVar_93829;
	BIT_VEC cppVar_93831 = (cppVar_93779) ? TH1 : cppVar_93830;
	BIT_VEC cppVar_93832 = (cppVar_93775) ? TL1 : cppVar_93831;
	BIT_VEC cppVar_93833 = (cppVar_93771) ? TH0 : cppVar_93832;
	BIT_VEC cppVar_93834 = (cppVar_93767) ? TL0 : cppVar_93833;
	BIT_VEC cppVar_93835 = (cppVar_93763) ? TMOD : cppVar_93834;
	BIT_VEC cppVar_93836 = (cppVar_93759) ? TCON : cppVar_93835;
	BIT_VEC cppVar_93837 = (cppVar_93755) ? PCON : cppVar_93836;
	BIT_VEC cppVar_93838 = (cppVar_93751) ? DPH : cppVar_93837;
	BIT_VEC cppVar_93839 = (cppVar_93747) ? DPL : cppVar_93838;
	BIT_VEC cppVar_93840 = (cppVar_93743) ? SP : cppVar_93839;
	BIT_VEC cppVar_93841 = (cppVar_93739) ? P0 : cppVar_93840;
	BIT_VEC cppVar_93842 = (cppVar_93732) ? cppVar_93735 : cppVar_93841;
	BIT_VEC cppVar_93844 = cppVar_93842 - 1;
	cppVar_93844 = (cppVar_93844 & cppMask_un_8_);
	type_mem cppVar_93845 = IRAM;
	cppVar_93845.wr(cppVar_93727, cppVar_93844);
	type_mem& cppVar_93846 = (cppVar_93725) ? cppVar_93845 : IRAM;
	BIT_VEC cppVar_93847 = ROM.rd(PC);
	bool cppVar_93849 = (cppVar_93847 == 18);
	BIT_VEC cppVar_93851 = SP + 1;
	cppVar_93851 = (cppVar_93851 & cppMask_un_8_);
	BIT_VEC cppVar_93853 = PC + 3;
	cppVar_93853 = (cppVar_93853 & cppMask_un_16_);
	BIT_VEC cppVar_93854 = (cppVar_93853 >> 0) & cppMask_un_8_;
	type_mem cppVar_93855 = IRAM;
	cppVar_93855.wr(cppVar_93851, cppVar_93854);
	BIT_VEC cppVar_93856 = SP + 1;
	cppVar_93856 = (cppVar_93856 & cppMask_un_8_);
	BIT_VEC cppVar_93858 = cppVar_93856 + 1;
	cppVar_93858 = (cppVar_93858 & cppMask_un_8_);
	BIT_VEC cppVar_93859 = PC + 3;
	cppVar_93859 = (cppVar_93859 & cppMask_un_16_);
	BIT_VEC cppVar_93860 = (cppVar_93859 >> 8) & cppMask_un_8_;
	type_mem cppVar_93861 = cppVar_93855;
	cppVar_93861.wr(cppVar_93858, cppVar_93860);
	BIT_VEC cppVar_93862 = ROM.rd(PC);
	bool cppVar_93864 = (cppVar_93862 == 241);
	BIT_VEC cppVar_93865 = ROM.rd(PC);
	bool cppVar_93867 = (cppVar_93865 == 209);
	BIT_VEC cppVar_93868 = ROM.rd(PC);
	bool cppVar_93870 = (cppVar_93868 == 177);
	BIT_VEC cppVar_93871 = ROM.rd(PC);
	bool cppVar_93873 = (cppVar_93871 == 145);
	BIT_VEC cppVar_93874 = ROM.rd(PC);
	bool cppVar_93876 = (cppVar_93874 == 113);
	BIT_VEC cppVar_93877 = ROM.rd(PC);
	bool cppVar_93879 = (cppVar_93877 == 81);
	BIT_VEC cppVar_93880 = ROM.rd(PC);
	bool cppVar_93882 = (cppVar_93880 == 49);
	BIT_VEC cppVar_93883 = ROM.rd(PC);
	bool cppVar_93885 = (cppVar_93883 == 17);
	bool cppVar_93886 = cppVar_93882 || cppVar_93885;
	bool cppVar_93887 = cppVar_93879 || cppVar_93886;
	bool cppVar_93888 = cppVar_93876 || cppVar_93887;
	bool cppVar_93889 = cppVar_93873 || cppVar_93888;
	bool cppVar_93890 = cppVar_93870 || cppVar_93889;
	bool cppVar_93891 = cppVar_93867 || cppVar_93890;
	bool cppVar_93892 = cppVar_93864 || cppVar_93891;
	BIT_VEC cppVar_93894 = SP + 1;
	cppVar_93894 = (cppVar_93894 & cppMask_un_8_);
	BIT_VEC cppVar_93896 = PC + 2;
	cppVar_93896 = (cppVar_93896 & cppMask_un_16_);
	BIT_VEC cppVar_93897 = (cppVar_93896 >> 0) & cppMask_un_8_;
	type_mem cppVar_93898 = IRAM;
	cppVar_93898.wr(cppVar_93894, cppVar_93897);
	BIT_VEC cppVar_93899 = SP + 1;
	cppVar_93899 = (cppVar_93899 & cppMask_un_8_);
	BIT_VEC cppVar_93901 = cppVar_93899 + 1;
	cppVar_93901 = (cppVar_93901 & cppMask_un_8_);
	BIT_VEC cppVar_93902 = PC + 2;
	cppVar_93902 = (cppVar_93902 & cppMask_un_16_);
	BIT_VEC cppVar_93903 = (cppVar_93902 >> 8) & cppMask_un_8_;
	type_mem cppVar_93904 = cppVar_93898;
	cppVar_93904.wr(cppVar_93901, cppVar_93903);
	BIT_VEC cppVar_93905 = ROM.rd(PC);
	bool cppVar_93907 = (cppVar_93905 == 194);
	BIT_VEC cppVar_93908 = ROM.rd(PC);
	bool cppVar_93910 = (cppVar_93908 == 16);
	bool cppVar_93911 = cppVar_93907 || cppVar_93910;
	BIT_VEC cppVar_93913 = PC + 1;
	cppVar_93913 = (cppVar_93913 & cppMask_un_16_);
	BIT_VEC cppVar_93914 = ROM.rd(cppVar_93913);
	BIT_VEC cppVar_93915 = (cppVar_93914 >> 7) & cppMask_un_1_;
	bool cppVar_93917 = (cppVar_93915 == 1);
	BIT_VEC cppVar_93918 = PC + 1;
	cppVar_93918 = (cppVar_93918 & cppMask_un_16_);
	BIT_VEC cppVar_93919 = ROM.rd(cppVar_93918);
	BIT_VEC cppVar_93920 = (cppVar_93919 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_93922 = (cppVar_93920 << 3) | 0;
	cppVar_93922 = (cppVar_93922 & cppMask_un_8_);
	BIT_VEC cppVar_93923 = PC + 1;
	cppVar_93923 = (cppVar_93923 & cppMask_un_16_);
	BIT_VEC cppVar_93924 = ROM.rd(cppVar_93923);
	BIT_VEC cppVar_93925 = (cppVar_93924 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_93926 = (cppVar_93925 & cppMask_un_5_);
	BIT_VEC cppVar_93928 = cppVar_93926 + 32;
	cppVar_93928 = (cppVar_93928 & cppMask_un_8_);
	BIT_VEC cppVar_93929 = (cppVar_93917) ? cppVar_93922 : cppVar_93928;
	BIT_VEC cppVar_93930 = (cppVar_93929 >> 7) & cppMask_un_1_;
	bool cppVar_93932 = (cppVar_93930 == 0);
	BIT_VEC cppVar_93933 = PC + 1;
	cppVar_93933 = (cppVar_93933 & cppMask_un_16_);
	BIT_VEC cppVar_93934 = ROM.rd(cppVar_93933);
	BIT_VEC cppVar_93935 = (cppVar_93934 >> 7) & cppMask_un_1_;
	bool cppVar_93936 = (cppVar_93935 == 1);
	BIT_VEC cppVar_93937 = PC + 1;
	cppVar_93937 = (cppVar_93937 & cppMask_un_16_);
	BIT_VEC cppVar_93938 = ROM.rd(cppVar_93937);
	BIT_VEC cppVar_93939 = (cppVar_93938 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_93940 = (cppVar_93939 << 3) | 0;
	cppVar_93940 = (cppVar_93940 & cppMask_un_8_);
	BIT_VEC cppVar_93941 = PC + 1;
	cppVar_93941 = (cppVar_93941 & cppMask_un_16_);
	BIT_VEC cppVar_93942 = ROM.rd(cppVar_93941);
	BIT_VEC cppVar_93943 = (cppVar_93942 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_93944 = (cppVar_93943 & cppMask_un_5_);
	BIT_VEC cppVar_93945 = cppVar_93944 + 32;
	cppVar_93945 = (cppVar_93945 & cppMask_un_8_);
	BIT_VEC cppVar_93946 = (cppVar_93936) ? cppVar_93940 : cppVar_93945;
	BIT_VEC cppVar_93948 = PC + 1;
	cppVar_93948 = (cppVar_93948 & cppMask_un_16_);
	BIT_VEC cppVar_93949 = ROM.rd(cppVar_93948);
	BIT_VEC cppVar_93950 = (cppVar_93949 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_93951 = (cppVar_93950 & cppMask_un_3_);
	BIT_VEC cppVar_93952 = 1 << static_cast<unsigned>(cppVar_93951);
	cppVar_93952 = (cppVar_93952 & cppMask_un_8_);
	BIT_VEC cppVar_93953 = ~cppVar_93952;
	BIT_VEC cppVar_93954 = PC + 1;
	cppVar_93954 = (cppVar_93954 & cppMask_un_16_);
	BIT_VEC cppVar_93955 = ROM.rd(cppVar_93954);
	BIT_VEC cppVar_93956 = (cppVar_93955 >> 7) & cppMask_un_1_;
	bool cppVar_93957 = (cppVar_93956 == 1);
	BIT_VEC cppVar_93958 = PC + 1;
	cppVar_93958 = (cppVar_93958 & cppMask_un_16_);
	BIT_VEC cppVar_93959 = ROM.rd(cppVar_93958);
	BIT_VEC cppVar_93960 = (cppVar_93959 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_93961 = (cppVar_93960 << 3) | 0;
	cppVar_93961 = (cppVar_93961 & cppMask_un_8_);
	BIT_VEC cppVar_93962 = PC + 1;
	cppVar_93962 = (cppVar_93962 & cppMask_un_16_);
	BIT_VEC cppVar_93963 = ROM.rd(cppVar_93962);
	BIT_VEC cppVar_93964 = (cppVar_93963 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_93965 = (cppVar_93964 & cppMask_un_5_);
	BIT_VEC cppVar_93966 = cppVar_93965 + 32;
	cppVar_93966 = (cppVar_93966 & cppMask_un_8_);
	BIT_VEC cppVar_93967 = (cppVar_93957) ? cppVar_93961 : cppVar_93966;
	BIT_VEC cppVar_93968 = (cppVar_93967 >> 7) & cppMask_un_1_;
	bool cppVar_93970 = (cppVar_93968 == 0);
	BIT_VEC cppVar_93971 = PC + 1;
	cppVar_93971 = (cppVar_93971 & cppMask_un_16_);
	BIT_VEC cppVar_93972 = ROM.rd(cppVar_93971);
	BIT_VEC cppVar_93973 = (cppVar_93972 >> 7) & cppMask_un_1_;
	bool cppVar_93974 = (cppVar_93973 == 1);
	BIT_VEC cppVar_93975 = PC + 1;
	cppVar_93975 = (cppVar_93975 & cppMask_un_16_);
	BIT_VEC cppVar_93976 = ROM.rd(cppVar_93975);
	BIT_VEC cppVar_93977 = (cppVar_93976 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_93978 = (cppVar_93977 << 3) | 0;
	cppVar_93978 = (cppVar_93978 & cppMask_un_8_);
	BIT_VEC cppVar_93979 = PC + 1;
	cppVar_93979 = (cppVar_93979 & cppMask_un_16_);
	BIT_VEC cppVar_93980 = ROM.rd(cppVar_93979);
	BIT_VEC cppVar_93981 = (cppVar_93980 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_93982 = (cppVar_93981 & cppMask_un_5_);
	BIT_VEC cppVar_93983 = cppVar_93982 + 32;
	cppVar_93983 = (cppVar_93983 & cppMask_un_8_);
	BIT_VEC cppVar_93984 = (cppVar_93974) ? cppVar_93978 : cppVar_93983;
	BIT_VEC cppVar_93985 = IRAM.rd(cppVar_93984);
	BIT_VEC cppVar_93986 = PC + 1;
	cppVar_93986 = (cppVar_93986 & cppMask_un_16_);
	BIT_VEC cppVar_93987 = ROM.rd(cppVar_93986);
	BIT_VEC cppVar_93988 = (cppVar_93987 >> 7) & cppMask_un_1_;
	bool cppVar_93989 = (cppVar_93988 == 1);
	BIT_VEC cppVar_93990 = PC + 1;
	cppVar_93990 = (cppVar_93990 & cppMask_un_16_);
	BIT_VEC cppVar_93991 = ROM.rd(cppVar_93990);
	BIT_VEC cppVar_93992 = (cppVar_93991 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_93993 = (cppVar_93992 << 3) | 0;
	cppVar_93993 = (cppVar_93993 & cppMask_un_8_);
	BIT_VEC cppVar_93994 = PC + 1;
	cppVar_93994 = (cppVar_93994 & cppMask_un_16_);
	BIT_VEC cppVar_93995 = ROM.rd(cppVar_93994);
	BIT_VEC cppVar_93996 = (cppVar_93995 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_93997 = (cppVar_93996 & cppMask_un_5_);
	BIT_VEC cppVar_93998 = cppVar_93997 + 32;
	cppVar_93998 = (cppVar_93998 & cppMask_un_8_);
	BIT_VEC cppVar_93999 = (cppVar_93989) ? cppVar_93993 : cppVar_93998;
	bool cppVar_94001 = (cppVar_93999 == 128);
	BIT_VEC cppVar_94002 = PC + 1;
	cppVar_94002 = (cppVar_94002 & cppMask_un_16_);
	BIT_VEC cppVar_94003 = ROM.rd(cppVar_94002);
	BIT_VEC cppVar_94004 = (cppVar_94003 >> 7) & cppMask_un_1_;
	bool cppVar_94005 = (cppVar_94004 == 1);
	BIT_VEC cppVar_94006 = PC + 1;
	cppVar_94006 = (cppVar_94006 & cppMask_un_16_);
	BIT_VEC cppVar_94007 = ROM.rd(cppVar_94006);
	BIT_VEC cppVar_94008 = (cppVar_94007 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94009 = (cppVar_94008 << 3) | 0;
	cppVar_94009 = (cppVar_94009 & cppMask_un_8_);
	BIT_VEC cppVar_94010 = PC + 1;
	cppVar_94010 = (cppVar_94010 & cppMask_un_16_);
	BIT_VEC cppVar_94011 = ROM.rd(cppVar_94010);
	BIT_VEC cppVar_94012 = (cppVar_94011 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94013 = (cppVar_94012 & cppMask_un_5_);
	BIT_VEC cppVar_94014 = cppVar_94013 + 32;
	cppVar_94014 = (cppVar_94014 & cppMask_un_8_);
	BIT_VEC cppVar_94015 = (cppVar_94005) ? cppVar_94009 : cppVar_94014;
	bool cppVar_94017 = (cppVar_94015 == 129);
	BIT_VEC cppVar_94018 = PC + 1;
	cppVar_94018 = (cppVar_94018 & cppMask_un_16_);
	BIT_VEC cppVar_94019 = ROM.rd(cppVar_94018);
	BIT_VEC cppVar_94020 = (cppVar_94019 >> 7) & cppMask_un_1_;
	bool cppVar_94021 = (cppVar_94020 == 1);
	BIT_VEC cppVar_94022 = PC + 1;
	cppVar_94022 = (cppVar_94022 & cppMask_un_16_);
	BIT_VEC cppVar_94023 = ROM.rd(cppVar_94022);
	BIT_VEC cppVar_94024 = (cppVar_94023 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94025 = (cppVar_94024 << 3) | 0;
	cppVar_94025 = (cppVar_94025 & cppMask_un_8_);
	BIT_VEC cppVar_94026 = PC + 1;
	cppVar_94026 = (cppVar_94026 & cppMask_un_16_);
	BIT_VEC cppVar_94027 = ROM.rd(cppVar_94026);
	BIT_VEC cppVar_94028 = (cppVar_94027 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94029 = (cppVar_94028 & cppMask_un_5_);
	BIT_VEC cppVar_94030 = cppVar_94029 + 32;
	cppVar_94030 = (cppVar_94030 & cppMask_un_8_);
	BIT_VEC cppVar_94031 = (cppVar_94021) ? cppVar_94025 : cppVar_94030;
	bool cppVar_94033 = (cppVar_94031 == 130);
	BIT_VEC cppVar_94034 = PC + 1;
	cppVar_94034 = (cppVar_94034 & cppMask_un_16_);
	BIT_VEC cppVar_94035 = ROM.rd(cppVar_94034);
	BIT_VEC cppVar_94036 = (cppVar_94035 >> 7) & cppMask_un_1_;
	bool cppVar_94037 = (cppVar_94036 == 1);
	BIT_VEC cppVar_94038 = PC + 1;
	cppVar_94038 = (cppVar_94038 & cppMask_un_16_);
	BIT_VEC cppVar_94039 = ROM.rd(cppVar_94038);
	BIT_VEC cppVar_94040 = (cppVar_94039 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94041 = (cppVar_94040 << 3) | 0;
	cppVar_94041 = (cppVar_94041 & cppMask_un_8_);
	BIT_VEC cppVar_94042 = PC + 1;
	cppVar_94042 = (cppVar_94042 & cppMask_un_16_);
	BIT_VEC cppVar_94043 = ROM.rd(cppVar_94042);
	BIT_VEC cppVar_94044 = (cppVar_94043 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94045 = (cppVar_94044 & cppMask_un_5_);
	BIT_VEC cppVar_94046 = cppVar_94045 + 32;
	cppVar_94046 = (cppVar_94046 & cppMask_un_8_);
	BIT_VEC cppVar_94047 = (cppVar_94037) ? cppVar_94041 : cppVar_94046;
	bool cppVar_94049 = (cppVar_94047 == 131);
	BIT_VEC cppVar_94050 = PC + 1;
	cppVar_94050 = (cppVar_94050 & cppMask_un_16_);
	BIT_VEC cppVar_94051 = ROM.rd(cppVar_94050);
	BIT_VEC cppVar_94052 = (cppVar_94051 >> 7) & cppMask_un_1_;
	bool cppVar_94053 = (cppVar_94052 == 1);
	BIT_VEC cppVar_94054 = PC + 1;
	cppVar_94054 = (cppVar_94054 & cppMask_un_16_);
	BIT_VEC cppVar_94055 = ROM.rd(cppVar_94054);
	BIT_VEC cppVar_94056 = (cppVar_94055 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94057 = (cppVar_94056 << 3) | 0;
	cppVar_94057 = (cppVar_94057 & cppMask_un_8_);
	BIT_VEC cppVar_94058 = PC + 1;
	cppVar_94058 = (cppVar_94058 & cppMask_un_16_);
	BIT_VEC cppVar_94059 = ROM.rd(cppVar_94058);
	BIT_VEC cppVar_94060 = (cppVar_94059 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94061 = (cppVar_94060 & cppMask_un_5_);
	BIT_VEC cppVar_94062 = cppVar_94061 + 32;
	cppVar_94062 = (cppVar_94062 & cppMask_un_8_);
	BIT_VEC cppVar_94063 = (cppVar_94053) ? cppVar_94057 : cppVar_94062;
	bool cppVar_94065 = (cppVar_94063 == 135);
	BIT_VEC cppVar_94066 = PC + 1;
	cppVar_94066 = (cppVar_94066 & cppMask_un_16_);
	BIT_VEC cppVar_94067 = ROM.rd(cppVar_94066);
	BIT_VEC cppVar_94068 = (cppVar_94067 >> 7) & cppMask_un_1_;
	bool cppVar_94069 = (cppVar_94068 == 1);
	BIT_VEC cppVar_94070 = PC + 1;
	cppVar_94070 = (cppVar_94070 & cppMask_un_16_);
	BIT_VEC cppVar_94071 = ROM.rd(cppVar_94070);
	BIT_VEC cppVar_94072 = (cppVar_94071 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94073 = (cppVar_94072 << 3) | 0;
	cppVar_94073 = (cppVar_94073 & cppMask_un_8_);
	BIT_VEC cppVar_94074 = PC + 1;
	cppVar_94074 = (cppVar_94074 & cppMask_un_16_);
	BIT_VEC cppVar_94075 = ROM.rd(cppVar_94074);
	BIT_VEC cppVar_94076 = (cppVar_94075 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94077 = (cppVar_94076 & cppMask_un_5_);
	BIT_VEC cppVar_94078 = cppVar_94077 + 32;
	cppVar_94078 = (cppVar_94078 & cppMask_un_8_);
	BIT_VEC cppVar_94079 = (cppVar_94069) ? cppVar_94073 : cppVar_94078;
	bool cppVar_94081 = (cppVar_94079 == 136);
	BIT_VEC cppVar_94082 = PC + 1;
	cppVar_94082 = (cppVar_94082 & cppMask_un_16_);
	BIT_VEC cppVar_94083 = ROM.rd(cppVar_94082);
	BIT_VEC cppVar_94084 = (cppVar_94083 >> 7) & cppMask_un_1_;
	bool cppVar_94085 = (cppVar_94084 == 1);
	BIT_VEC cppVar_94086 = PC + 1;
	cppVar_94086 = (cppVar_94086 & cppMask_un_16_);
	BIT_VEC cppVar_94087 = ROM.rd(cppVar_94086);
	BIT_VEC cppVar_94088 = (cppVar_94087 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94089 = (cppVar_94088 << 3) | 0;
	cppVar_94089 = (cppVar_94089 & cppMask_un_8_);
	BIT_VEC cppVar_94090 = PC + 1;
	cppVar_94090 = (cppVar_94090 & cppMask_un_16_);
	BIT_VEC cppVar_94091 = ROM.rd(cppVar_94090);
	BIT_VEC cppVar_94092 = (cppVar_94091 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94093 = (cppVar_94092 & cppMask_un_5_);
	BIT_VEC cppVar_94094 = cppVar_94093 + 32;
	cppVar_94094 = (cppVar_94094 & cppMask_un_8_);
	BIT_VEC cppVar_94095 = (cppVar_94085) ? cppVar_94089 : cppVar_94094;
	bool cppVar_94097 = (cppVar_94095 == 137);
	BIT_VEC cppVar_94098 = PC + 1;
	cppVar_94098 = (cppVar_94098 & cppMask_un_16_);
	BIT_VEC cppVar_94099 = ROM.rd(cppVar_94098);
	BIT_VEC cppVar_94100 = (cppVar_94099 >> 7) & cppMask_un_1_;
	bool cppVar_94101 = (cppVar_94100 == 1);
	BIT_VEC cppVar_94102 = PC + 1;
	cppVar_94102 = (cppVar_94102 & cppMask_un_16_);
	BIT_VEC cppVar_94103 = ROM.rd(cppVar_94102);
	BIT_VEC cppVar_94104 = (cppVar_94103 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94105 = (cppVar_94104 << 3) | 0;
	cppVar_94105 = (cppVar_94105 & cppMask_un_8_);
	BIT_VEC cppVar_94106 = PC + 1;
	cppVar_94106 = (cppVar_94106 & cppMask_un_16_);
	BIT_VEC cppVar_94107 = ROM.rd(cppVar_94106);
	BIT_VEC cppVar_94108 = (cppVar_94107 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94109 = (cppVar_94108 & cppMask_un_5_);
	BIT_VEC cppVar_94110 = cppVar_94109 + 32;
	cppVar_94110 = (cppVar_94110 & cppMask_un_8_);
	BIT_VEC cppVar_94111 = (cppVar_94101) ? cppVar_94105 : cppVar_94110;
	bool cppVar_94113 = (cppVar_94111 == 138);
	BIT_VEC cppVar_94114 = PC + 1;
	cppVar_94114 = (cppVar_94114 & cppMask_un_16_);
	BIT_VEC cppVar_94115 = ROM.rd(cppVar_94114);
	BIT_VEC cppVar_94116 = (cppVar_94115 >> 7) & cppMask_un_1_;
	bool cppVar_94117 = (cppVar_94116 == 1);
	BIT_VEC cppVar_94118 = PC + 1;
	cppVar_94118 = (cppVar_94118 & cppMask_un_16_);
	BIT_VEC cppVar_94119 = ROM.rd(cppVar_94118);
	BIT_VEC cppVar_94120 = (cppVar_94119 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94121 = (cppVar_94120 << 3) | 0;
	cppVar_94121 = (cppVar_94121 & cppMask_un_8_);
	BIT_VEC cppVar_94122 = PC + 1;
	cppVar_94122 = (cppVar_94122 & cppMask_un_16_);
	BIT_VEC cppVar_94123 = ROM.rd(cppVar_94122);
	BIT_VEC cppVar_94124 = (cppVar_94123 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94125 = (cppVar_94124 & cppMask_un_5_);
	BIT_VEC cppVar_94126 = cppVar_94125 + 32;
	cppVar_94126 = (cppVar_94126 & cppMask_un_8_);
	BIT_VEC cppVar_94127 = (cppVar_94117) ? cppVar_94121 : cppVar_94126;
	bool cppVar_94129 = (cppVar_94127 == 140);
	BIT_VEC cppVar_94130 = PC + 1;
	cppVar_94130 = (cppVar_94130 & cppMask_un_16_);
	BIT_VEC cppVar_94131 = ROM.rd(cppVar_94130);
	BIT_VEC cppVar_94132 = (cppVar_94131 >> 7) & cppMask_un_1_;
	bool cppVar_94133 = (cppVar_94132 == 1);
	BIT_VEC cppVar_94134 = PC + 1;
	cppVar_94134 = (cppVar_94134 & cppMask_un_16_);
	BIT_VEC cppVar_94135 = ROM.rd(cppVar_94134);
	BIT_VEC cppVar_94136 = (cppVar_94135 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94137 = (cppVar_94136 << 3) | 0;
	cppVar_94137 = (cppVar_94137 & cppMask_un_8_);
	BIT_VEC cppVar_94138 = PC + 1;
	cppVar_94138 = (cppVar_94138 & cppMask_un_16_);
	BIT_VEC cppVar_94139 = ROM.rd(cppVar_94138);
	BIT_VEC cppVar_94140 = (cppVar_94139 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94141 = (cppVar_94140 & cppMask_un_5_);
	BIT_VEC cppVar_94142 = cppVar_94141 + 32;
	cppVar_94142 = (cppVar_94142 & cppMask_un_8_);
	BIT_VEC cppVar_94143 = (cppVar_94133) ? cppVar_94137 : cppVar_94142;
	bool cppVar_94145 = (cppVar_94143 == 139);
	BIT_VEC cppVar_94146 = PC + 1;
	cppVar_94146 = (cppVar_94146 & cppMask_un_16_);
	BIT_VEC cppVar_94147 = ROM.rd(cppVar_94146);
	BIT_VEC cppVar_94148 = (cppVar_94147 >> 7) & cppMask_un_1_;
	bool cppVar_94149 = (cppVar_94148 == 1);
	BIT_VEC cppVar_94150 = PC + 1;
	cppVar_94150 = (cppVar_94150 & cppMask_un_16_);
	BIT_VEC cppVar_94151 = ROM.rd(cppVar_94150);
	BIT_VEC cppVar_94152 = (cppVar_94151 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94153 = (cppVar_94152 << 3) | 0;
	cppVar_94153 = (cppVar_94153 & cppMask_un_8_);
	BIT_VEC cppVar_94154 = PC + 1;
	cppVar_94154 = (cppVar_94154 & cppMask_un_16_);
	BIT_VEC cppVar_94155 = ROM.rd(cppVar_94154);
	BIT_VEC cppVar_94156 = (cppVar_94155 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94157 = (cppVar_94156 & cppMask_un_5_);
	BIT_VEC cppVar_94158 = cppVar_94157 + 32;
	cppVar_94158 = (cppVar_94158 & cppMask_un_8_);
	BIT_VEC cppVar_94159 = (cppVar_94149) ? cppVar_94153 : cppVar_94158;
	bool cppVar_94161 = (cppVar_94159 == 141);
	BIT_VEC cppVar_94162 = PC + 1;
	cppVar_94162 = (cppVar_94162 & cppMask_un_16_);
	BIT_VEC cppVar_94163 = ROM.rd(cppVar_94162);
	BIT_VEC cppVar_94164 = (cppVar_94163 >> 7) & cppMask_un_1_;
	bool cppVar_94165 = (cppVar_94164 == 1);
	BIT_VEC cppVar_94166 = PC + 1;
	cppVar_94166 = (cppVar_94166 & cppMask_un_16_);
	BIT_VEC cppVar_94167 = ROM.rd(cppVar_94166);
	BIT_VEC cppVar_94168 = (cppVar_94167 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94169 = (cppVar_94168 << 3) | 0;
	cppVar_94169 = (cppVar_94169 & cppMask_un_8_);
	BIT_VEC cppVar_94170 = PC + 1;
	cppVar_94170 = (cppVar_94170 & cppMask_un_16_);
	BIT_VEC cppVar_94171 = ROM.rd(cppVar_94170);
	BIT_VEC cppVar_94172 = (cppVar_94171 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94173 = (cppVar_94172 & cppMask_un_5_);
	BIT_VEC cppVar_94174 = cppVar_94173 + 32;
	cppVar_94174 = (cppVar_94174 & cppMask_un_8_);
	BIT_VEC cppVar_94175 = (cppVar_94165) ? cppVar_94169 : cppVar_94174;
	bool cppVar_94177 = (cppVar_94175 == 144);
	BIT_VEC cppVar_94178 = PC + 1;
	cppVar_94178 = (cppVar_94178 & cppMask_un_16_);
	BIT_VEC cppVar_94179 = ROM.rd(cppVar_94178);
	BIT_VEC cppVar_94180 = (cppVar_94179 >> 7) & cppMask_un_1_;
	bool cppVar_94181 = (cppVar_94180 == 1);
	BIT_VEC cppVar_94182 = PC + 1;
	cppVar_94182 = (cppVar_94182 & cppMask_un_16_);
	BIT_VEC cppVar_94183 = ROM.rd(cppVar_94182);
	BIT_VEC cppVar_94184 = (cppVar_94183 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94185 = (cppVar_94184 << 3) | 0;
	cppVar_94185 = (cppVar_94185 & cppMask_un_8_);
	BIT_VEC cppVar_94186 = PC + 1;
	cppVar_94186 = (cppVar_94186 & cppMask_un_16_);
	BIT_VEC cppVar_94187 = ROM.rd(cppVar_94186);
	BIT_VEC cppVar_94188 = (cppVar_94187 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94189 = (cppVar_94188 & cppMask_un_5_);
	BIT_VEC cppVar_94190 = cppVar_94189 + 32;
	cppVar_94190 = (cppVar_94190 & cppMask_un_8_);
	BIT_VEC cppVar_94191 = (cppVar_94181) ? cppVar_94185 : cppVar_94190;
	bool cppVar_94193 = (cppVar_94191 == 152);
	BIT_VEC cppVar_94194 = PC + 1;
	cppVar_94194 = (cppVar_94194 & cppMask_un_16_);
	BIT_VEC cppVar_94195 = ROM.rd(cppVar_94194);
	BIT_VEC cppVar_94196 = (cppVar_94195 >> 7) & cppMask_un_1_;
	bool cppVar_94197 = (cppVar_94196 == 1);
	BIT_VEC cppVar_94198 = PC + 1;
	cppVar_94198 = (cppVar_94198 & cppMask_un_16_);
	BIT_VEC cppVar_94199 = ROM.rd(cppVar_94198);
	BIT_VEC cppVar_94200 = (cppVar_94199 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94201 = (cppVar_94200 << 3) | 0;
	cppVar_94201 = (cppVar_94201 & cppMask_un_8_);
	BIT_VEC cppVar_94202 = PC + 1;
	cppVar_94202 = (cppVar_94202 & cppMask_un_16_);
	BIT_VEC cppVar_94203 = ROM.rd(cppVar_94202);
	BIT_VEC cppVar_94204 = (cppVar_94203 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94205 = (cppVar_94204 & cppMask_un_5_);
	BIT_VEC cppVar_94206 = cppVar_94205 + 32;
	cppVar_94206 = (cppVar_94206 & cppMask_un_8_);
	BIT_VEC cppVar_94207 = (cppVar_94197) ? cppVar_94201 : cppVar_94206;
	bool cppVar_94209 = (cppVar_94207 == 153);
	BIT_VEC cppVar_94210 = PC + 1;
	cppVar_94210 = (cppVar_94210 & cppMask_un_16_);
	BIT_VEC cppVar_94211 = ROM.rd(cppVar_94210);
	BIT_VEC cppVar_94212 = (cppVar_94211 >> 7) & cppMask_un_1_;
	bool cppVar_94213 = (cppVar_94212 == 1);
	BIT_VEC cppVar_94214 = PC + 1;
	cppVar_94214 = (cppVar_94214 & cppMask_un_16_);
	BIT_VEC cppVar_94215 = ROM.rd(cppVar_94214);
	BIT_VEC cppVar_94216 = (cppVar_94215 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94217 = (cppVar_94216 << 3) | 0;
	cppVar_94217 = (cppVar_94217 & cppMask_un_8_);
	BIT_VEC cppVar_94218 = PC + 1;
	cppVar_94218 = (cppVar_94218 & cppMask_un_16_);
	BIT_VEC cppVar_94219 = ROM.rd(cppVar_94218);
	BIT_VEC cppVar_94220 = (cppVar_94219 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94221 = (cppVar_94220 & cppMask_un_5_);
	BIT_VEC cppVar_94222 = cppVar_94221 + 32;
	cppVar_94222 = (cppVar_94222 & cppMask_un_8_);
	BIT_VEC cppVar_94223 = (cppVar_94213) ? cppVar_94217 : cppVar_94222;
	bool cppVar_94225 = (cppVar_94223 == 160);
	BIT_VEC cppVar_94226 = PC + 1;
	cppVar_94226 = (cppVar_94226 & cppMask_un_16_);
	BIT_VEC cppVar_94227 = ROM.rd(cppVar_94226);
	BIT_VEC cppVar_94228 = (cppVar_94227 >> 7) & cppMask_un_1_;
	bool cppVar_94229 = (cppVar_94228 == 1);
	BIT_VEC cppVar_94230 = PC + 1;
	cppVar_94230 = (cppVar_94230 & cppMask_un_16_);
	BIT_VEC cppVar_94231 = ROM.rd(cppVar_94230);
	BIT_VEC cppVar_94232 = (cppVar_94231 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94233 = (cppVar_94232 << 3) | 0;
	cppVar_94233 = (cppVar_94233 & cppMask_un_8_);
	BIT_VEC cppVar_94234 = PC + 1;
	cppVar_94234 = (cppVar_94234 & cppMask_un_16_);
	BIT_VEC cppVar_94235 = ROM.rd(cppVar_94234);
	BIT_VEC cppVar_94236 = (cppVar_94235 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94237 = (cppVar_94236 & cppMask_un_5_);
	BIT_VEC cppVar_94238 = cppVar_94237 + 32;
	cppVar_94238 = (cppVar_94238 & cppMask_un_8_);
	BIT_VEC cppVar_94239 = (cppVar_94229) ? cppVar_94233 : cppVar_94238;
	bool cppVar_94241 = (cppVar_94239 == 168);
	BIT_VEC cppVar_94242 = PC + 1;
	cppVar_94242 = (cppVar_94242 & cppMask_un_16_);
	BIT_VEC cppVar_94243 = ROM.rd(cppVar_94242);
	BIT_VEC cppVar_94244 = (cppVar_94243 >> 7) & cppMask_un_1_;
	bool cppVar_94245 = (cppVar_94244 == 1);
	BIT_VEC cppVar_94246 = PC + 1;
	cppVar_94246 = (cppVar_94246 & cppMask_un_16_);
	BIT_VEC cppVar_94247 = ROM.rd(cppVar_94246);
	BIT_VEC cppVar_94248 = (cppVar_94247 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94249 = (cppVar_94248 << 3) | 0;
	cppVar_94249 = (cppVar_94249 & cppMask_un_8_);
	BIT_VEC cppVar_94250 = PC + 1;
	cppVar_94250 = (cppVar_94250 & cppMask_un_16_);
	BIT_VEC cppVar_94251 = ROM.rd(cppVar_94250);
	BIT_VEC cppVar_94252 = (cppVar_94251 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94253 = (cppVar_94252 & cppMask_un_5_);
	BIT_VEC cppVar_94254 = cppVar_94253 + 32;
	cppVar_94254 = (cppVar_94254 & cppMask_un_8_);
	BIT_VEC cppVar_94255 = (cppVar_94245) ? cppVar_94249 : cppVar_94254;
	bool cppVar_94257 = (cppVar_94255 == 176);
	BIT_VEC cppVar_94258 = PC + 1;
	cppVar_94258 = (cppVar_94258 & cppMask_un_16_);
	BIT_VEC cppVar_94259 = ROM.rd(cppVar_94258);
	BIT_VEC cppVar_94260 = (cppVar_94259 >> 7) & cppMask_un_1_;
	bool cppVar_94261 = (cppVar_94260 == 1);
	BIT_VEC cppVar_94262 = PC + 1;
	cppVar_94262 = (cppVar_94262 & cppMask_un_16_);
	BIT_VEC cppVar_94263 = ROM.rd(cppVar_94262);
	BIT_VEC cppVar_94264 = (cppVar_94263 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94265 = (cppVar_94264 << 3) | 0;
	cppVar_94265 = (cppVar_94265 & cppMask_un_8_);
	BIT_VEC cppVar_94266 = PC + 1;
	cppVar_94266 = (cppVar_94266 & cppMask_un_16_);
	BIT_VEC cppVar_94267 = ROM.rd(cppVar_94266);
	BIT_VEC cppVar_94268 = (cppVar_94267 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94269 = (cppVar_94268 & cppMask_un_5_);
	BIT_VEC cppVar_94270 = cppVar_94269 + 32;
	cppVar_94270 = (cppVar_94270 & cppMask_un_8_);
	BIT_VEC cppVar_94271 = (cppVar_94261) ? cppVar_94265 : cppVar_94270;
	bool cppVar_94273 = (cppVar_94271 == 184);
	BIT_VEC cppVar_94274 = PC + 1;
	cppVar_94274 = (cppVar_94274 & cppMask_un_16_);
	BIT_VEC cppVar_94275 = ROM.rd(cppVar_94274);
	BIT_VEC cppVar_94276 = (cppVar_94275 >> 7) & cppMask_un_1_;
	bool cppVar_94277 = (cppVar_94276 == 1);
	BIT_VEC cppVar_94278 = PC + 1;
	cppVar_94278 = (cppVar_94278 & cppMask_un_16_);
	BIT_VEC cppVar_94279 = ROM.rd(cppVar_94278);
	BIT_VEC cppVar_94280 = (cppVar_94279 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94281 = (cppVar_94280 << 3) | 0;
	cppVar_94281 = (cppVar_94281 & cppMask_un_8_);
	BIT_VEC cppVar_94282 = PC + 1;
	cppVar_94282 = (cppVar_94282 & cppMask_un_16_);
	BIT_VEC cppVar_94283 = ROM.rd(cppVar_94282);
	BIT_VEC cppVar_94284 = (cppVar_94283 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94285 = (cppVar_94284 & cppMask_un_5_);
	BIT_VEC cppVar_94286 = cppVar_94285 + 32;
	cppVar_94286 = (cppVar_94286 & cppMask_un_8_);
	BIT_VEC cppVar_94287 = (cppVar_94277) ? cppVar_94281 : cppVar_94286;
	bool cppVar_94289 = (cppVar_94287 == 208);
	BIT_VEC cppVar_94290 = PC + 1;
	cppVar_94290 = (cppVar_94290 & cppMask_un_16_);
	BIT_VEC cppVar_94291 = ROM.rd(cppVar_94290);
	BIT_VEC cppVar_94292 = (cppVar_94291 >> 7) & cppMask_un_1_;
	bool cppVar_94293 = (cppVar_94292 == 1);
	BIT_VEC cppVar_94294 = PC + 1;
	cppVar_94294 = (cppVar_94294 & cppMask_un_16_);
	BIT_VEC cppVar_94295 = ROM.rd(cppVar_94294);
	BIT_VEC cppVar_94296 = (cppVar_94295 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94297 = (cppVar_94296 << 3) | 0;
	cppVar_94297 = (cppVar_94297 & cppMask_un_8_);
	BIT_VEC cppVar_94298 = PC + 1;
	cppVar_94298 = (cppVar_94298 & cppMask_un_16_);
	BIT_VEC cppVar_94299 = ROM.rd(cppVar_94298);
	BIT_VEC cppVar_94300 = (cppVar_94299 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94301 = (cppVar_94300 & cppMask_un_5_);
	BIT_VEC cppVar_94302 = cppVar_94301 + 32;
	cppVar_94302 = (cppVar_94302 & cppMask_un_8_);
	BIT_VEC cppVar_94303 = (cppVar_94293) ? cppVar_94297 : cppVar_94302;
	bool cppVar_94305 = (cppVar_94303 == 224);
	BIT_VEC cppVar_94306 = PC + 1;
	cppVar_94306 = (cppVar_94306 & cppMask_un_16_);
	BIT_VEC cppVar_94307 = ROM.rd(cppVar_94306);
	BIT_VEC cppVar_94308 = (cppVar_94307 >> 7) & cppMask_un_1_;
	bool cppVar_94309 = (cppVar_94308 == 1);
	BIT_VEC cppVar_94310 = PC + 1;
	cppVar_94310 = (cppVar_94310 & cppMask_un_16_);
	BIT_VEC cppVar_94311 = ROM.rd(cppVar_94310);
	BIT_VEC cppVar_94312 = (cppVar_94311 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94313 = (cppVar_94312 << 3) | 0;
	cppVar_94313 = (cppVar_94313 & cppMask_un_8_);
	BIT_VEC cppVar_94314 = PC + 1;
	cppVar_94314 = (cppVar_94314 & cppMask_un_16_);
	BIT_VEC cppVar_94315 = ROM.rd(cppVar_94314);
	BIT_VEC cppVar_94316 = (cppVar_94315 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_94317 = (cppVar_94316 & cppMask_un_5_);
	BIT_VEC cppVar_94318 = cppVar_94317 + 32;
	cppVar_94318 = (cppVar_94318 & cppMask_un_8_);
	BIT_VEC cppVar_94319 = (cppVar_94309) ? cppVar_94313 : cppVar_94318;
	bool cppVar_94321 = (cppVar_94319 == 240);
	BIT_VEC cppVar_94323 = (cppVar_94321) ? B : 0;
	BIT_VEC cppVar_94324 = (cppVar_94305) ? ACC : cppVar_94323;
	BIT_VEC cppVar_94325 = (cppVar_94289) ? PSW : cppVar_94324;
	BIT_VEC cppVar_94326 = (cppVar_94273) ? IP : cppVar_94325;
	BIT_VEC cppVar_94327 = (cppVar_94257) ? P3 : cppVar_94326;
	BIT_VEC cppVar_94328 = (cppVar_94241) ? IE : cppVar_94327;
	BIT_VEC cppVar_94329 = (cppVar_94225) ? P2 : cppVar_94328;
	BIT_VEC cppVar_94330 = (cppVar_94209) ? SBUF : cppVar_94329;
	BIT_VEC cppVar_94331 = (cppVar_94193) ? SCON : cppVar_94330;
	BIT_VEC cppVar_94332 = (cppVar_94177) ? P1 : cppVar_94331;
	BIT_VEC cppVar_94333 = (cppVar_94161) ? TH1 : cppVar_94332;
	BIT_VEC cppVar_94334 = (cppVar_94145) ? TL1 : cppVar_94333;
	BIT_VEC cppVar_94335 = (cppVar_94129) ? TH0 : cppVar_94334;
	BIT_VEC cppVar_94336 = (cppVar_94113) ? TL0 : cppVar_94335;
	BIT_VEC cppVar_94337 = (cppVar_94097) ? TMOD : cppVar_94336;
	BIT_VEC cppVar_94338 = (cppVar_94081) ? TCON : cppVar_94337;
	BIT_VEC cppVar_94339 = (cppVar_94065) ? PCON : cppVar_94338;
	BIT_VEC cppVar_94340 = (cppVar_94049) ? DPH : cppVar_94339;
	BIT_VEC cppVar_94341 = (cppVar_94033) ? DPL : cppVar_94340;
	BIT_VEC cppVar_94342 = (cppVar_94017) ? SP : cppVar_94341;
	BIT_VEC cppVar_94343 = (cppVar_94001) ? P0 : cppVar_94342;
	BIT_VEC cppVar_94344 = (cppVar_93970) ? cppVar_93985 : cppVar_94343;
	BIT_VEC cppVar_94345 = cppVar_93953 & cppVar_94344;
	BIT_VEC cppVar_94347 = 0;
	BIT_VEC cppVar_94348 = PC + 1;
	cppVar_94348 = (cppVar_94348 & cppMask_un_16_);
	BIT_VEC cppVar_94349 = ROM.rd(cppVar_94348);
	BIT_VEC cppVar_94350 = (cppVar_94349 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_94351 = (cppVar_94350 & cppMask_un_3_);
	BIT_VEC cppVar_94352 = cppVar_94347 << static_cast<unsigned>(cppVar_94351);
	cppVar_94352 = (cppVar_94352 & cppMask_un_8_);
	BIT_VEC cppVar_94353 = cppVar_94345 | cppVar_94352;
	type_mem cppVar_94354 = IRAM;
	cppVar_94354.wr(cppVar_93946, cppVar_94353);
	type_mem& cppVar_94355 = (cppVar_93932) ? cppVar_94354 : IRAM;
	BIT_VEC cppVar_94356 = ROM.rd(PC);
	bool cppVar_94358 = (cppVar_94356 == 15);
	BIT_VEC cppVar_94360 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94362 = (cppVar_94360 << 3) | 7;
	cppVar_94362 = (cppVar_94362 & cppMask_un_5_);
	BIT_VEC cppVar_94363 = (0 << 5) | cppVar_94362;
	cppVar_94363 = (cppVar_94363 & cppMask_un_8_);
	BIT_VEC cppVar_94364 = (cppVar_94363 >> 7) & cppMask_un_1_;
	bool cppVar_94366 = (cppVar_94364 == 0);
	BIT_VEC cppVar_94367 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94368 = (cppVar_94367 << 3) | 7;
	cppVar_94368 = (cppVar_94368 & cppMask_un_5_);
	BIT_VEC cppVar_94369 = (0 << 5) | cppVar_94368;
	cppVar_94369 = (cppVar_94369 & cppMask_un_8_);
	BIT_VEC cppVar_94370 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94371 = (cppVar_94370 << 3) | 7;
	cppVar_94371 = (cppVar_94371 & cppMask_un_5_);
	BIT_VEC cppVar_94372 = (0 << 5) | cppVar_94371;
	cppVar_94372 = (cppVar_94372 & cppMask_un_8_);
	BIT_VEC cppVar_94373 = (cppVar_94372 >> 7) & cppMask_un_1_;
	bool cppVar_94375 = (cppVar_94373 == 0);
	BIT_VEC cppVar_94376 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94377 = (cppVar_94376 << 3) | 7;
	cppVar_94377 = (cppVar_94377 & cppMask_un_5_);
	BIT_VEC cppVar_94378 = (0 << 5) | cppVar_94377;
	cppVar_94378 = (cppVar_94378 & cppMask_un_8_);
	BIT_VEC cppVar_94379 = IRAM.rd(cppVar_94378);
	BIT_VEC cppVar_94380 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94381 = (cppVar_94380 << 3) | 7;
	cppVar_94381 = (cppVar_94381 & cppMask_un_5_);
	BIT_VEC cppVar_94382 = (0 << 5) | cppVar_94381;
	cppVar_94382 = (cppVar_94382 & cppMask_un_8_);
	bool cppVar_94384 = (cppVar_94382 == 128);
	BIT_VEC cppVar_94385 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94386 = (cppVar_94385 << 3) | 7;
	cppVar_94386 = (cppVar_94386 & cppMask_un_5_);
	BIT_VEC cppVar_94387 = (0 << 5) | cppVar_94386;
	cppVar_94387 = (cppVar_94387 & cppMask_un_8_);
	bool cppVar_94389 = (cppVar_94387 == 129);
	BIT_VEC cppVar_94390 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94391 = (cppVar_94390 << 3) | 7;
	cppVar_94391 = (cppVar_94391 & cppMask_un_5_);
	BIT_VEC cppVar_94392 = (0 << 5) | cppVar_94391;
	cppVar_94392 = (cppVar_94392 & cppMask_un_8_);
	bool cppVar_94394 = (cppVar_94392 == 130);
	BIT_VEC cppVar_94395 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94396 = (cppVar_94395 << 3) | 7;
	cppVar_94396 = (cppVar_94396 & cppMask_un_5_);
	BIT_VEC cppVar_94397 = (0 << 5) | cppVar_94396;
	cppVar_94397 = (cppVar_94397 & cppMask_un_8_);
	bool cppVar_94399 = (cppVar_94397 == 131);
	BIT_VEC cppVar_94400 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94401 = (cppVar_94400 << 3) | 7;
	cppVar_94401 = (cppVar_94401 & cppMask_un_5_);
	BIT_VEC cppVar_94402 = (0 << 5) | cppVar_94401;
	cppVar_94402 = (cppVar_94402 & cppMask_un_8_);
	bool cppVar_94404 = (cppVar_94402 == 135);
	BIT_VEC cppVar_94405 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94406 = (cppVar_94405 << 3) | 7;
	cppVar_94406 = (cppVar_94406 & cppMask_un_5_);
	BIT_VEC cppVar_94407 = (0 << 5) | cppVar_94406;
	cppVar_94407 = (cppVar_94407 & cppMask_un_8_);
	bool cppVar_94409 = (cppVar_94407 == 136);
	BIT_VEC cppVar_94410 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94411 = (cppVar_94410 << 3) | 7;
	cppVar_94411 = (cppVar_94411 & cppMask_un_5_);
	BIT_VEC cppVar_94412 = (0 << 5) | cppVar_94411;
	cppVar_94412 = (cppVar_94412 & cppMask_un_8_);
	bool cppVar_94414 = (cppVar_94412 == 137);
	BIT_VEC cppVar_94415 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94416 = (cppVar_94415 << 3) | 7;
	cppVar_94416 = (cppVar_94416 & cppMask_un_5_);
	BIT_VEC cppVar_94417 = (0 << 5) | cppVar_94416;
	cppVar_94417 = (cppVar_94417 & cppMask_un_8_);
	bool cppVar_94419 = (cppVar_94417 == 138);
	BIT_VEC cppVar_94420 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94421 = (cppVar_94420 << 3) | 7;
	cppVar_94421 = (cppVar_94421 & cppMask_un_5_);
	BIT_VEC cppVar_94422 = (0 << 5) | cppVar_94421;
	cppVar_94422 = (cppVar_94422 & cppMask_un_8_);
	bool cppVar_94424 = (cppVar_94422 == 140);
	BIT_VEC cppVar_94425 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94426 = (cppVar_94425 << 3) | 7;
	cppVar_94426 = (cppVar_94426 & cppMask_un_5_);
	BIT_VEC cppVar_94427 = (0 << 5) | cppVar_94426;
	cppVar_94427 = (cppVar_94427 & cppMask_un_8_);
	bool cppVar_94429 = (cppVar_94427 == 139);
	BIT_VEC cppVar_94430 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94431 = (cppVar_94430 << 3) | 7;
	cppVar_94431 = (cppVar_94431 & cppMask_un_5_);
	BIT_VEC cppVar_94432 = (0 << 5) | cppVar_94431;
	cppVar_94432 = (cppVar_94432 & cppMask_un_8_);
	bool cppVar_94434 = (cppVar_94432 == 141);
	BIT_VEC cppVar_94435 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94436 = (cppVar_94435 << 3) | 7;
	cppVar_94436 = (cppVar_94436 & cppMask_un_5_);
	BIT_VEC cppVar_94437 = (0 << 5) | cppVar_94436;
	cppVar_94437 = (cppVar_94437 & cppMask_un_8_);
	bool cppVar_94439 = (cppVar_94437 == 144);
	BIT_VEC cppVar_94440 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94441 = (cppVar_94440 << 3) | 7;
	cppVar_94441 = (cppVar_94441 & cppMask_un_5_);
	BIT_VEC cppVar_94442 = (0 << 5) | cppVar_94441;
	cppVar_94442 = (cppVar_94442 & cppMask_un_8_);
	bool cppVar_94444 = (cppVar_94442 == 152);
	BIT_VEC cppVar_94445 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94446 = (cppVar_94445 << 3) | 7;
	cppVar_94446 = (cppVar_94446 & cppMask_un_5_);
	BIT_VEC cppVar_94447 = (0 << 5) | cppVar_94446;
	cppVar_94447 = (cppVar_94447 & cppMask_un_8_);
	bool cppVar_94449 = (cppVar_94447 == 153);
	BIT_VEC cppVar_94450 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94451 = (cppVar_94450 << 3) | 7;
	cppVar_94451 = (cppVar_94451 & cppMask_un_5_);
	BIT_VEC cppVar_94452 = (0 << 5) | cppVar_94451;
	cppVar_94452 = (cppVar_94452 & cppMask_un_8_);
	bool cppVar_94454 = (cppVar_94452 == 160);
	BIT_VEC cppVar_94455 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94456 = (cppVar_94455 << 3) | 7;
	cppVar_94456 = (cppVar_94456 & cppMask_un_5_);
	BIT_VEC cppVar_94457 = (0 << 5) | cppVar_94456;
	cppVar_94457 = (cppVar_94457 & cppMask_un_8_);
	bool cppVar_94459 = (cppVar_94457 == 168);
	BIT_VEC cppVar_94460 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94461 = (cppVar_94460 << 3) | 7;
	cppVar_94461 = (cppVar_94461 & cppMask_un_5_);
	BIT_VEC cppVar_94462 = (0 << 5) | cppVar_94461;
	cppVar_94462 = (cppVar_94462 & cppMask_un_8_);
	bool cppVar_94464 = (cppVar_94462 == 176);
	BIT_VEC cppVar_94465 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94466 = (cppVar_94465 << 3) | 7;
	cppVar_94466 = (cppVar_94466 & cppMask_un_5_);
	BIT_VEC cppVar_94467 = (0 << 5) | cppVar_94466;
	cppVar_94467 = (cppVar_94467 & cppMask_un_8_);
	bool cppVar_94469 = (cppVar_94467 == 184);
	BIT_VEC cppVar_94470 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94471 = (cppVar_94470 << 3) | 7;
	cppVar_94471 = (cppVar_94471 & cppMask_un_5_);
	BIT_VEC cppVar_94472 = (0 << 5) | cppVar_94471;
	cppVar_94472 = (cppVar_94472 & cppMask_un_8_);
	bool cppVar_94474 = (cppVar_94472 == 208);
	BIT_VEC cppVar_94475 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94476 = (cppVar_94475 << 3) | 7;
	cppVar_94476 = (cppVar_94476 & cppMask_un_5_);
	BIT_VEC cppVar_94477 = (0 << 5) | cppVar_94476;
	cppVar_94477 = (cppVar_94477 & cppMask_un_8_);
	bool cppVar_94479 = (cppVar_94477 == 224);
	BIT_VEC cppVar_94480 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94481 = (cppVar_94480 << 3) | 7;
	cppVar_94481 = (cppVar_94481 & cppMask_un_5_);
	BIT_VEC cppVar_94482 = (0 << 5) | cppVar_94481;
	cppVar_94482 = (cppVar_94482 & cppMask_un_8_);
	bool cppVar_94484 = (cppVar_94482 == 240);
	BIT_VEC cppVar_94486 = (cppVar_94484) ? B : 0;
	BIT_VEC cppVar_94487 = (cppVar_94479) ? ACC : cppVar_94486;
	BIT_VEC cppVar_94488 = (cppVar_94474) ? PSW : cppVar_94487;
	BIT_VEC cppVar_94489 = (cppVar_94469) ? IP : cppVar_94488;
	BIT_VEC cppVar_94490 = (cppVar_94464) ? P3 : cppVar_94489;
	BIT_VEC cppVar_94491 = (cppVar_94459) ? IE : cppVar_94490;
	BIT_VEC cppVar_94492 = (cppVar_94454) ? P2 : cppVar_94491;
	BIT_VEC cppVar_94493 = (cppVar_94449) ? SBUF : cppVar_94492;
	BIT_VEC cppVar_94494 = (cppVar_94444) ? SCON : cppVar_94493;
	BIT_VEC cppVar_94495 = (cppVar_94439) ? P1 : cppVar_94494;
	BIT_VEC cppVar_94496 = (cppVar_94434) ? TH1 : cppVar_94495;
	BIT_VEC cppVar_94497 = (cppVar_94429) ? TL1 : cppVar_94496;
	BIT_VEC cppVar_94498 = (cppVar_94424) ? TH0 : cppVar_94497;
	BIT_VEC cppVar_94499 = (cppVar_94419) ? TL0 : cppVar_94498;
	BIT_VEC cppVar_94500 = (cppVar_94414) ? TMOD : cppVar_94499;
	BIT_VEC cppVar_94501 = (cppVar_94409) ? TCON : cppVar_94500;
	BIT_VEC cppVar_94502 = (cppVar_94404) ? PCON : cppVar_94501;
	BIT_VEC cppVar_94503 = (cppVar_94399) ? DPH : cppVar_94502;
	BIT_VEC cppVar_94504 = (cppVar_94394) ? DPL : cppVar_94503;
	BIT_VEC cppVar_94505 = (cppVar_94389) ? SP : cppVar_94504;
	BIT_VEC cppVar_94506 = (cppVar_94384) ? P0 : cppVar_94505;
	BIT_VEC cppVar_94507 = (cppVar_94375) ? cppVar_94379 : cppVar_94506;
	BIT_VEC cppVar_94509 = cppVar_94507 + 1;
	cppVar_94509 = (cppVar_94509 & cppMask_un_8_);
	type_mem cppVar_94510 = IRAM;
	cppVar_94510.wr(cppVar_94369, cppVar_94509);
	type_mem& cppVar_94511 = (cppVar_94366) ? cppVar_94510 : IRAM;
	BIT_VEC cppVar_94512 = ROM.rd(PC);
	bool cppVar_94514 = (cppVar_94512 == 14);
	BIT_VEC cppVar_94516 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94518 = (cppVar_94516 << 3) | 6;
	cppVar_94518 = (cppVar_94518 & cppMask_un_5_);
	BIT_VEC cppVar_94519 = (0 << 5) | cppVar_94518;
	cppVar_94519 = (cppVar_94519 & cppMask_un_8_);
	BIT_VEC cppVar_94520 = (cppVar_94519 >> 7) & cppMask_un_1_;
	bool cppVar_94522 = (cppVar_94520 == 0);
	BIT_VEC cppVar_94523 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94524 = (cppVar_94523 << 3) | 6;
	cppVar_94524 = (cppVar_94524 & cppMask_un_5_);
	BIT_VEC cppVar_94525 = (0 << 5) | cppVar_94524;
	cppVar_94525 = (cppVar_94525 & cppMask_un_8_);
	BIT_VEC cppVar_94526 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94527 = (cppVar_94526 << 3) | 6;
	cppVar_94527 = (cppVar_94527 & cppMask_un_5_);
	BIT_VEC cppVar_94528 = (0 << 5) | cppVar_94527;
	cppVar_94528 = (cppVar_94528 & cppMask_un_8_);
	BIT_VEC cppVar_94529 = (cppVar_94528 >> 7) & cppMask_un_1_;
	bool cppVar_94531 = (cppVar_94529 == 0);
	BIT_VEC cppVar_94532 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94533 = (cppVar_94532 << 3) | 6;
	cppVar_94533 = (cppVar_94533 & cppMask_un_5_);
	BIT_VEC cppVar_94534 = (0 << 5) | cppVar_94533;
	cppVar_94534 = (cppVar_94534 & cppMask_un_8_);
	BIT_VEC cppVar_94535 = IRAM.rd(cppVar_94534);
	BIT_VEC cppVar_94536 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94537 = (cppVar_94536 << 3) | 6;
	cppVar_94537 = (cppVar_94537 & cppMask_un_5_);
	BIT_VEC cppVar_94538 = (0 << 5) | cppVar_94537;
	cppVar_94538 = (cppVar_94538 & cppMask_un_8_);
	bool cppVar_94540 = (cppVar_94538 == 128);
	BIT_VEC cppVar_94541 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94542 = (cppVar_94541 << 3) | 6;
	cppVar_94542 = (cppVar_94542 & cppMask_un_5_);
	BIT_VEC cppVar_94543 = (0 << 5) | cppVar_94542;
	cppVar_94543 = (cppVar_94543 & cppMask_un_8_);
	bool cppVar_94545 = (cppVar_94543 == 129);
	BIT_VEC cppVar_94546 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94547 = (cppVar_94546 << 3) | 6;
	cppVar_94547 = (cppVar_94547 & cppMask_un_5_);
	BIT_VEC cppVar_94548 = (0 << 5) | cppVar_94547;
	cppVar_94548 = (cppVar_94548 & cppMask_un_8_);
	bool cppVar_94550 = (cppVar_94548 == 130);
	BIT_VEC cppVar_94551 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94552 = (cppVar_94551 << 3) | 6;
	cppVar_94552 = (cppVar_94552 & cppMask_un_5_);
	BIT_VEC cppVar_94553 = (0 << 5) | cppVar_94552;
	cppVar_94553 = (cppVar_94553 & cppMask_un_8_);
	bool cppVar_94555 = (cppVar_94553 == 131);
	BIT_VEC cppVar_94556 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94557 = (cppVar_94556 << 3) | 6;
	cppVar_94557 = (cppVar_94557 & cppMask_un_5_);
	BIT_VEC cppVar_94558 = (0 << 5) | cppVar_94557;
	cppVar_94558 = (cppVar_94558 & cppMask_un_8_);
	bool cppVar_94560 = (cppVar_94558 == 135);
	BIT_VEC cppVar_94561 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94562 = (cppVar_94561 << 3) | 6;
	cppVar_94562 = (cppVar_94562 & cppMask_un_5_);
	BIT_VEC cppVar_94563 = (0 << 5) | cppVar_94562;
	cppVar_94563 = (cppVar_94563 & cppMask_un_8_);
	bool cppVar_94565 = (cppVar_94563 == 136);
	BIT_VEC cppVar_94566 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94567 = (cppVar_94566 << 3) | 6;
	cppVar_94567 = (cppVar_94567 & cppMask_un_5_);
	BIT_VEC cppVar_94568 = (0 << 5) | cppVar_94567;
	cppVar_94568 = (cppVar_94568 & cppMask_un_8_);
	bool cppVar_94570 = (cppVar_94568 == 137);
	BIT_VEC cppVar_94571 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94572 = (cppVar_94571 << 3) | 6;
	cppVar_94572 = (cppVar_94572 & cppMask_un_5_);
	BIT_VEC cppVar_94573 = (0 << 5) | cppVar_94572;
	cppVar_94573 = (cppVar_94573 & cppMask_un_8_);
	bool cppVar_94575 = (cppVar_94573 == 138);
	BIT_VEC cppVar_94576 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94577 = (cppVar_94576 << 3) | 6;
	cppVar_94577 = (cppVar_94577 & cppMask_un_5_);
	BIT_VEC cppVar_94578 = (0 << 5) | cppVar_94577;
	cppVar_94578 = (cppVar_94578 & cppMask_un_8_);
	bool cppVar_94580 = (cppVar_94578 == 140);
	BIT_VEC cppVar_94581 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94582 = (cppVar_94581 << 3) | 6;
	cppVar_94582 = (cppVar_94582 & cppMask_un_5_);
	BIT_VEC cppVar_94583 = (0 << 5) | cppVar_94582;
	cppVar_94583 = (cppVar_94583 & cppMask_un_8_);
	bool cppVar_94585 = (cppVar_94583 == 139);
	BIT_VEC cppVar_94586 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94587 = (cppVar_94586 << 3) | 6;
	cppVar_94587 = (cppVar_94587 & cppMask_un_5_);
	BIT_VEC cppVar_94588 = (0 << 5) | cppVar_94587;
	cppVar_94588 = (cppVar_94588 & cppMask_un_8_);
	bool cppVar_94590 = (cppVar_94588 == 141);
	BIT_VEC cppVar_94591 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94592 = (cppVar_94591 << 3) | 6;
	cppVar_94592 = (cppVar_94592 & cppMask_un_5_);
	BIT_VEC cppVar_94593 = (0 << 5) | cppVar_94592;
	cppVar_94593 = (cppVar_94593 & cppMask_un_8_);
	bool cppVar_94595 = (cppVar_94593 == 144);
	BIT_VEC cppVar_94596 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94597 = (cppVar_94596 << 3) | 6;
	cppVar_94597 = (cppVar_94597 & cppMask_un_5_);
	BIT_VEC cppVar_94598 = (0 << 5) | cppVar_94597;
	cppVar_94598 = (cppVar_94598 & cppMask_un_8_);
	bool cppVar_94600 = (cppVar_94598 == 152);
	BIT_VEC cppVar_94601 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94602 = (cppVar_94601 << 3) | 6;
	cppVar_94602 = (cppVar_94602 & cppMask_un_5_);
	BIT_VEC cppVar_94603 = (0 << 5) | cppVar_94602;
	cppVar_94603 = (cppVar_94603 & cppMask_un_8_);
	bool cppVar_94605 = (cppVar_94603 == 153);
	BIT_VEC cppVar_94606 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94607 = (cppVar_94606 << 3) | 6;
	cppVar_94607 = (cppVar_94607 & cppMask_un_5_);
	BIT_VEC cppVar_94608 = (0 << 5) | cppVar_94607;
	cppVar_94608 = (cppVar_94608 & cppMask_un_8_);
	bool cppVar_94610 = (cppVar_94608 == 160);
	BIT_VEC cppVar_94611 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94612 = (cppVar_94611 << 3) | 6;
	cppVar_94612 = (cppVar_94612 & cppMask_un_5_);
	BIT_VEC cppVar_94613 = (0 << 5) | cppVar_94612;
	cppVar_94613 = (cppVar_94613 & cppMask_un_8_);
	bool cppVar_94615 = (cppVar_94613 == 168);
	BIT_VEC cppVar_94616 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94617 = (cppVar_94616 << 3) | 6;
	cppVar_94617 = (cppVar_94617 & cppMask_un_5_);
	BIT_VEC cppVar_94618 = (0 << 5) | cppVar_94617;
	cppVar_94618 = (cppVar_94618 & cppMask_un_8_);
	bool cppVar_94620 = (cppVar_94618 == 176);
	BIT_VEC cppVar_94621 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94622 = (cppVar_94621 << 3) | 6;
	cppVar_94622 = (cppVar_94622 & cppMask_un_5_);
	BIT_VEC cppVar_94623 = (0 << 5) | cppVar_94622;
	cppVar_94623 = (cppVar_94623 & cppMask_un_8_);
	bool cppVar_94625 = (cppVar_94623 == 184);
	BIT_VEC cppVar_94626 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94627 = (cppVar_94626 << 3) | 6;
	cppVar_94627 = (cppVar_94627 & cppMask_un_5_);
	BIT_VEC cppVar_94628 = (0 << 5) | cppVar_94627;
	cppVar_94628 = (cppVar_94628 & cppMask_un_8_);
	bool cppVar_94630 = (cppVar_94628 == 208);
	BIT_VEC cppVar_94631 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94632 = (cppVar_94631 << 3) | 6;
	cppVar_94632 = (cppVar_94632 & cppMask_un_5_);
	BIT_VEC cppVar_94633 = (0 << 5) | cppVar_94632;
	cppVar_94633 = (cppVar_94633 & cppMask_un_8_);
	bool cppVar_94635 = (cppVar_94633 == 224);
	BIT_VEC cppVar_94636 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94637 = (cppVar_94636 << 3) | 6;
	cppVar_94637 = (cppVar_94637 & cppMask_un_5_);
	BIT_VEC cppVar_94638 = (0 << 5) | cppVar_94637;
	cppVar_94638 = (cppVar_94638 & cppMask_un_8_);
	bool cppVar_94640 = (cppVar_94638 == 240);
	BIT_VEC cppVar_94642 = (cppVar_94640) ? B : 0;
	BIT_VEC cppVar_94643 = (cppVar_94635) ? ACC : cppVar_94642;
	BIT_VEC cppVar_94644 = (cppVar_94630) ? PSW : cppVar_94643;
	BIT_VEC cppVar_94645 = (cppVar_94625) ? IP : cppVar_94644;
	BIT_VEC cppVar_94646 = (cppVar_94620) ? P3 : cppVar_94645;
	BIT_VEC cppVar_94647 = (cppVar_94615) ? IE : cppVar_94646;
	BIT_VEC cppVar_94648 = (cppVar_94610) ? P2 : cppVar_94647;
	BIT_VEC cppVar_94649 = (cppVar_94605) ? SBUF : cppVar_94648;
	BIT_VEC cppVar_94650 = (cppVar_94600) ? SCON : cppVar_94649;
	BIT_VEC cppVar_94651 = (cppVar_94595) ? P1 : cppVar_94650;
	BIT_VEC cppVar_94652 = (cppVar_94590) ? TH1 : cppVar_94651;
	BIT_VEC cppVar_94653 = (cppVar_94585) ? TL1 : cppVar_94652;
	BIT_VEC cppVar_94654 = (cppVar_94580) ? TH0 : cppVar_94653;
	BIT_VEC cppVar_94655 = (cppVar_94575) ? TL0 : cppVar_94654;
	BIT_VEC cppVar_94656 = (cppVar_94570) ? TMOD : cppVar_94655;
	BIT_VEC cppVar_94657 = (cppVar_94565) ? TCON : cppVar_94656;
	BIT_VEC cppVar_94658 = (cppVar_94560) ? PCON : cppVar_94657;
	BIT_VEC cppVar_94659 = (cppVar_94555) ? DPH : cppVar_94658;
	BIT_VEC cppVar_94660 = (cppVar_94550) ? DPL : cppVar_94659;
	BIT_VEC cppVar_94661 = (cppVar_94545) ? SP : cppVar_94660;
	BIT_VEC cppVar_94662 = (cppVar_94540) ? P0 : cppVar_94661;
	BIT_VEC cppVar_94663 = (cppVar_94531) ? cppVar_94535 : cppVar_94662;
	BIT_VEC cppVar_94665 = cppVar_94663 + 1;
	cppVar_94665 = (cppVar_94665 & cppMask_un_8_);
	type_mem cppVar_94666 = IRAM;
	cppVar_94666.wr(cppVar_94525, cppVar_94665);
	type_mem& cppVar_94667 = (cppVar_94522) ? cppVar_94666 : IRAM;
	BIT_VEC cppVar_94668 = ROM.rd(PC);
	bool cppVar_94670 = (cppVar_94668 == 13);
	BIT_VEC cppVar_94672 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94674 = (cppVar_94672 << 3) | 5;
	cppVar_94674 = (cppVar_94674 & cppMask_un_5_);
	BIT_VEC cppVar_94675 = (0 << 5) | cppVar_94674;
	cppVar_94675 = (cppVar_94675 & cppMask_un_8_);
	BIT_VEC cppVar_94676 = (cppVar_94675 >> 7) & cppMask_un_1_;
	bool cppVar_94678 = (cppVar_94676 == 0);
	BIT_VEC cppVar_94679 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94680 = (cppVar_94679 << 3) | 5;
	cppVar_94680 = (cppVar_94680 & cppMask_un_5_);
	BIT_VEC cppVar_94681 = (0 << 5) | cppVar_94680;
	cppVar_94681 = (cppVar_94681 & cppMask_un_8_);
	BIT_VEC cppVar_94682 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94683 = (cppVar_94682 << 3) | 5;
	cppVar_94683 = (cppVar_94683 & cppMask_un_5_);
	BIT_VEC cppVar_94684 = (0 << 5) | cppVar_94683;
	cppVar_94684 = (cppVar_94684 & cppMask_un_8_);
	BIT_VEC cppVar_94685 = (cppVar_94684 >> 7) & cppMask_un_1_;
	bool cppVar_94687 = (cppVar_94685 == 0);
	BIT_VEC cppVar_94688 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94689 = (cppVar_94688 << 3) | 5;
	cppVar_94689 = (cppVar_94689 & cppMask_un_5_);
	BIT_VEC cppVar_94690 = (0 << 5) | cppVar_94689;
	cppVar_94690 = (cppVar_94690 & cppMask_un_8_);
	BIT_VEC cppVar_94691 = IRAM.rd(cppVar_94690);
	BIT_VEC cppVar_94692 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94693 = (cppVar_94692 << 3) | 5;
	cppVar_94693 = (cppVar_94693 & cppMask_un_5_);
	BIT_VEC cppVar_94694 = (0 << 5) | cppVar_94693;
	cppVar_94694 = (cppVar_94694 & cppMask_un_8_);
	bool cppVar_94696 = (cppVar_94694 == 128);
	BIT_VEC cppVar_94697 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94698 = (cppVar_94697 << 3) | 5;
	cppVar_94698 = (cppVar_94698 & cppMask_un_5_);
	BIT_VEC cppVar_94699 = (0 << 5) | cppVar_94698;
	cppVar_94699 = (cppVar_94699 & cppMask_un_8_);
	bool cppVar_94701 = (cppVar_94699 == 129);
	BIT_VEC cppVar_94702 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94703 = (cppVar_94702 << 3) | 5;
	cppVar_94703 = (cppVar_94703 & cppMask_un_5_);
	BIT_VEC cppVar_94704 = (0 << 5) | cppVar_94703;
	cppVar_94704 = (cppVar_94704 & cppMask_un_8_);
	bool cppVar_94706 = (cppVar_94704 == 130);
	BIT_VEC cppVar_94707 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94708 = (cppVar_94707 << 3) | 5;
	cppVar_94708 = (cppVar_94708 & cppMask_un_5_);
	BIT_VEC cppVar_94709 = (0 << 5) | cppVar_94708;
	cppVar_94709 = (cppVar_94709 & cppMask_un_8_);
	bool cppVar_94711 = (cppVar_94709 == 131);
	BIT_VEC cppVar_94712 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94713 = (cppVar_94712 << 3) | 5;
	cppVar_94713 = (cppVar_94713 & cppMask_un_5_);
	BIT_VEC cppVar_94714 = (0 << 5) | cppVar_94713;
	cppVar_94714 = (cppVar_94714 & cppMask_un_8_);
	bool cppVar_94716 = (cppVar_94714 == 135);
	BIT_VEC cppVar_94717 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94718 = (cppVar_94717 << 3) | 5;
	cppVar_94718 = (cppVar_94718 & cppMask_un_5_);
	BIT_VEC cppVar_94719 = (0 << 5) | cppVar_94718;
	cppVar_94719 = (cppVar_94719 & cppMask_un_8_);
	bool cppVar_94721 = (cppVar_94719 == 136);
	BIT_VEC cppVar_94722 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94723 = (cppVar_94722 << 3) | 5;
	cppVar_94723 = (cppVar_94723 & cppMask_un_5_);
	BIT_VEC cppVar_94724 = (0 << 5) | cppVar_94723;
	cppVar_94724 = (cppVar_94724 & cppMask_un_8_);
	bool cppVar_94726 = (cppVar_94724 == 137);
	BIT_VEC cppVar_94727 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94728 = (cppVar_94727 << 3) | 5;
	cppVar_94728 = (cppVar_94728 & cppMask_un_5_);
	BIT_VEC cppVar_94729 = (0 << 5) | cppVar_94728;
	cppVar_94729 = (cppVar_94729 & cppMask_un_8_);
	bool cppVar_94731 = (cppVar_94729 == 138);
	BIT_VEC cppVar_94732 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94733 = (cppVar_94732 << 3) | 5;
	cppVar_94733 = (cppVar_94733 & cppMask_un_5_);
	BIT_VEC cppVar_94734 = (0 << 5) | cppVar_94733;
	cppVar_94734 = (cppVar_94734 & cppMask_un_8_);
	bool cppVar_94736 = (cppVar_94734 == 140);
	BIT_VEC cppVar_94737 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94738 = (cppVar_94737 << 3) | 5;
	cppVar_94738 = (cppVar_94738 & cppMask_un_5_);
	BIT_VEC cppVar_94739 = (0 << 5) | cppVar_94738;
	cppVar_94739 = (cppVar_94739 & cppMask_un_8_);
	bool cppVar_94741 = (cppVar_94739 == 139);
	BIT_VEC cppVar_94742 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94743 = (cppVar_94742 << 3) | 5;
	cppVar_94743 = (cppVar_94743 & cppMask_un_5_);
	BIT_VEC cppVar_94744 = (0 << 5) | cppVar_94743;
	cppVar_94744 = (cppVar_94744 & cppMask_un_8_);
	bool cppVar_94746 = (cppVar_94744 == 141);
	BIT_VEC cppVar_94747 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94748 = (cppVar_94747 << 3) | 5;
	cppVar_94748 = (cppVar_94748 & cppMask_un_5_);
	BIT_VEC cppVar_94749 = (0 << 5) | cppVar_94748;
	cppVar_94749 = (cppVar_94749 & cppMask_un_8_);
	bool cppVar_94751 = (cppVar_94749 == 144);
	BIT_VEC cppVar_94752 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94753 = (cppVar_94752 << 3) | 5;
	cppVar_94753 = (cppVar_94753 & cppMask_un_5_);
	BIT_VEC cppVar_94754 = (0 << 5) | cppVar_94753;
	cppVar_94754 = (cppVar_94754 & cppMask_un_8_);
	bool cppVar_94756 = (cppVar_94754 == 152);
	BIT_VEC cppVar_94757 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94758 = (cppVar_94757 << 3) | 5;
	cppVar_94758 = (cppVar_94758 & cppMask_un_5_);
	BIT_VEC cppVar_94759 = (0 << 5) | cppVar_94758;
	cppVar_94759 = (cppVar_94759 & cppMask_un_8_);
	bool cppVar_94761 = (cppVar_94759 == 153);
	BIT_VEC cppVar_94762 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94763 = (cppVar_94762 << 3) | 5;
	cppVar_94763 = (cppVar_94763 & cppMask_un_5_);
	BIT_VEC cppVar_94764 = (0 << 5) | cppVar_94763;
	cppVar_94764 = (cppVar_94764 & cppMask_un_8_);
	bool cppVar_94766 = (cppVar_94764 == 160);
	BIT_VEC cppVar_94767 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94768 = (cppVar_94767 << 3) | 5;
	cppVar_94768 = (cppVar_94768 & cppMask_un_5_);
	BIT_VEC cppVar_94769 = (0 << 5) | cppVar_94768;
	cppVar_94769 = (cppVar_94769 & cppMask_un_8_);
	bool cppVar_94771 = (cppVar_94769 == 168);
	BIT_VEC cppVar_94772 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94773 = (cppVar_94772 << 3) | 5;
	cppVar_94773 = (cppVar_94773 & cppMask_un_5_);
	BIT_VEC cppVar_94774 = (0 << 5) | cppVar_94773;
	cppVar_94774 = (cppVar_94774 & cppMask_un_8_);
	bool cppVar_94776 = (cppVar_94774 == 176);
	BIT_VEC cppVar_94777 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94778 = (cppVar_94777 << 3) | 5;
	cppVar_94778 = (cppVar_94778 & cppMask_un_5_);
	BIT_VEC cppVar_94779 = (0 << 5) | cppVar_94778;
	cppVar_94779 = (cppVar_94779 & cppMask_un_8_);
	bool cppVar_94781 = (cppVar_94779 == 184);
	BIT_VEC cppVar_94782 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94783 = (cppVar_94782 << 3) | 5;
	cppVar_94783 = (cppVar_94783 & cppMask_un_5_);
	BIT_VEC cppVar_94784 = (0 << 5) | cppVar_94783;
	cppVar_94784 = (cppVar_94784 & cppMask_un_8_);
	bool cppVar_94786 = (cppVar_94784 == 208);
	BIT_VEC cppVar_94787 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94788 = (cppVar_94787 << 3) | 5;
	cppVar_94788 = (cppVar_94788 & cppMask_un_5_);
	BIT_VEC cppVar_94789 = (0 << 5) | cppVar_94788;
	cppVar_94789 = (cppVar_94789 & cppMask_un_8_);
	bool cppVar_94791 = (cppVar_94789 == 224);
	BIT_VEC cppVar_94792 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94793 = (cppVar_94792 << 3) | 5;
	cppVar_94793 = (cppVar_94793 & cppMask_un_5_);
	BIT_VEC cppVar_94794 = (0 << 5) | cppVar_94793;
	cppVar_94794 = (cppVar_94794 & cppMask_un_8_);
	bool cppVar_94796 = (cppVar_94794 == 240);
	BIT_VEC cppVar_94798 = (cppVar_94796) ? B : 0;
	BIT_VEC cppVar_94799 = (cppVar_94791) ? ACC : cppVar_94798;
	BIT_VEC cppVar_94800 = (cppVar_94786) ? PSW : cppVar_94799;
	BIT_VEC cppVar_94801 = (cppVar_94781) ? IP : cppVar_94800;
	BIT_VEC cppVar_94802 = (cppVar_94776) ? P3 : cppVar_94801;
	BIT_VEC cppVar_94803 = (cppVar_94771) ? IE : cppVar_94802;
	BIT_VEC cppVar_94804 = (cppVar_94766) ? P2 : cppVar_94803;
	BIT_VEC cppVar_94805 = (cppVar_94761) ? SBUF : cppVar_94804;
	BIT_VEC cppVar_94806 = (cppVar_94756) ? SCON : cppVar_94805;
	BIT_VEC cppVar_94807 = (cppVar_94751) ? P1 : cppVar_94806;
	BIT_VEC cppVar_94808 = (cppVar_94746) ? TH1 : cppVar_94807;
	BIT_VEC cppVar_94809 = (cppVar_94741) ? TL1 : cppVar_94808;
	BIT_VEC cppVar_94810 = (cppVar_94736) ? TH0 : cppVar_94809;
	BIT_VEC cppVar_94811 = (cppVar_94731) ? TL0 : cppVar_94810;
	BIT_VEC cppVar_94812 = (cppVar_94726) ? TMOD : cppVar_94811;
	BIT_VEC cppVar_94813 = (cppVar_94721) ? TCON : cppVar_94812;
	BIT_VEC cppVar_94814 = (cppVar_94716) ? PCON : cppVar_94813;
	BIT_VEC cppVar_94815 = (cppVar_94711) ? DPH : cppVar_94814;
	BIT_VEC cppVar_94816 = (cppVar_94706) ? DPL : cppVar_94815;
	BIT_VEC cppVar_94817 = (cppVar_94701) ? SP : cppVar_94816;
	BIT_VEC cppVar_94818 = (cppVar_94696) ? P0 : cppVar_94817;
	BIT_VEC cppVar_94819 = (cppVar_94687) ? cppVar_94691 : cppVar_94818;
	BIT_VEC cppVar_94821 = cppVar_94819 + 1;
	cppVar_94821 = (cppVar_94821 & cppMask_un_8_);
	type_mem cppVar_94822 = IRAM;
	cppVar_94822.wr(cppVar_94681, cppVar_94821);
	type_mem& cppVar_94823 = (cppVar_94678) ? cppVar_94822 : IRAM;
	BIT_VEC cppVar_94824 = ROM.rd(PC);
	bool cppVar_94826 = (cppVar_94824 == 12);
	BIT_VEC cppVar_94828 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94830 = (cppVar_94828 << 3) | 4;
	cppVar_94830 = (cppVar_94830 & cppMask_un_5_);
	BIT_VEC cppVar_94831 = (0 << 5) | cppVar_94830;
	cppVar_94831 = (cppVar_94831 & cppMask_un_8_);
	BIT_VEC cppVar_94832 = (cppVar_94831 >> 7) & cppMask_un_1_;
	bool cppVar_94834 = (cppVar_94832 == 0);
	BIT_VEC cppVar_94835 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94836 = (cppVar_94835 << 3) | 4;
	cppVar_94836 = (cppVar_94836 & cppMask_un_5_);
	BIT_VEC cppVar_94837 = (0 << 5) | cppVar_94836;
	cppVar_94837 = (cppVar_94837 & cppMask_un_8_);
	BIT_VEC cppVar_94838 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94839 = (cppVar_94838 << 3) | 4;
	cppVar_94839 = (cppVar_94839 & cppMask_un_5_);
	BIT_VEC cppVar_94840 = (0 << 5) | cppVar_94839;
	cppVar_94840 = (cppVar_94840 & cppMask_un_8_);
	BIT_VEC cppVar_94841 = (cppVar_94840 >> 7) & cppMask_un_1_;
	bool cppVar_94843 = (cppVar_94841 == 0);
	BIT_VEC cppVar_94844 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94845 = (cppVar_94844 << 3) | 4;
	cppVar_94845 = (cppVar_94845 & cppMask_un_5_);
	BIT_VEC cppVar_94846 = (0 << 5) | cppVar_94845;
	cppVar_94846 = (cppVar_94846 & cppMask_un_8_);
	BIT_VEC cppVar_94847 = IRAM.rd(cppVar_94846);
	BIT_VEC cppVar_94848 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94849 = (cppVar_94848 << 3) | 4;
	cppVar_94849 = (cppVar_94849 & cppMask_un_5_);
	BIT_VEC cppVar_94850 = (0 << 5) | cppVar_94849;
	cppVar_94850 = (cppVar_94850 & cppMask_un_8_);
	bool cppVar_94852 = (cppVar_94850 == 128);
	BIT_VEC cppVar_94853 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94854 = (cppVar_94853 << 3) | 4;
	cppVar_94854 = (cppVar_94854 & cppMask_un_5_);
	BIT_VEC cppVar_94855 = (0 << 5) | cppVar_94854;
	cppVar_94855 = (cppVar_94855 & cppMask_un_8_);
	bool cppVar_94857 = (cppVar_94855 == 129);
	BIT_VEC cppVar_94858 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94859 = (cppVar_94858 << 3) | 4;
	cppVar_94859 = (cppVar_94859 & cppMask_un_5_);
	BIT_VEC cppVar_94860 = (0 << 5) | cppVar_94859;
	cppVar_94860 = (cppVar_94860 & cppMask_un_8_);
	bool cppVar_94862 = (cppVar_94860 == 130);
	BIT_VEC cppVar_94863 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94864 = (cppVar_94863 << 3) | 4;
	cppVar_94864 = (cppVar_94864 & cppMask_un_5_);
	BIT_VEC cppVar_94865 = (0 << 5) | cppVar_94864;
	cppVar_94865 = (cppVar_94865 & cppMask_un_8_);
	bool cppVar_94867 = (cppVar_94865 == 131);
	BIT_VEC cppVar_94868 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94869 = (cppVar_94868 << 3) | 4;
	cppVar_94869 = (cppVar_94869 & cppMask_un_5_);
	BIT_VEC cppVar_94870 = (0 << 5) | cppVar_94869;
	cppVar_94870 = (cppVar_94870 & cppMask_un_8_);
	bool cppVar_94872 = (cppVar_94870 == 135);
	BIT_VEC cppVar_94873 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94874 = (cppVar_94873 << 3) | 4;
	cppVar_94874 = (cppVar_94874 & cppMask_un_5_);
	BIT_VEC cppVar_94875 = (0 << 5) | cppVar_94874;
	cppVar_94875 = (cppVar_94875 & cppMask_un_8_);
	bool cppVar_94877 = (cppVar_94875 == 136);
	BIT_VEC cppVar_94878 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94879 = (cppVar_94878 << 3) | 4;
	cppVar_94879 = (cppVar_94879 & cppMask_un_5_);
	BIT_VEC cppVar_94880 = (0 << 5) | cppVar_94879;
	cppVar_94880 = (cppVar_94880 & cppMask_un_8_);
	bool cppVar_94882 = (cppVar_94880 == 137);
	BIT_VEC cppVar_94883 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94884 = (cppVar_94883 << 3) | 4;
	cppVar_94884 = (cppVar_94884 & cppMask_un_5_);
	BIT_VEC cppVar_94885 = (0 << 5) | cppVar_94884;
	cppVar_94885 = (cppVar_94885 & cppMask_un_8_);
	bool cppVar_94887 = (cppVar_94885 == 138);
	BIT_VEC cppVar_94888 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94889 = (cppVar_94888 << 3) | 4;
	cppVar_94889 = (cppVar_94889 & cppMask_un_5_);
	BIT_VEC cppVar_94890 = (0 << 5) | cppVar_94889;
	cppVar_94890 = (cppVar_94890 & cppMask_un_8_);
	bool cppVar_94892 = (cppVar_94890 == 140);
	BIT_VEC cppVar_94893 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94894 = (cppVar_94893 << 3) | 4;
	cppVar_94894 = (cppVar_94894 & cppMask_un_5_);
	BIT_VEC cppVar_94895 = (0 << 5) | cppVar_94894;
	cppVar_94895 = (cppVar_94895 & cppMask_un_8_);
	bool cppVar_94897 = (cppVar_94895 == 139);
	BIT_VEC cppVar_94898 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94899 = (cppVar_94898 << 3) | 4;
	cppVar_94899 = (cppVar_94899 & cppMask_un_5_);
	BIT_VEC cppVar_94900 = (0 << 5) | cppVar_94899;
	cppVar_94900 = (cppVar_94900 & cppMask_un_8_);
	bool cppVar_94902 = (cppVar_94900 == 141);
	BIT_VEC cppVar_94903 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94904 = (cppVar_94903 << 3) | 4;
	cppVar_94904 = (cppVar_94904 & cppMask_un_5_);
	BIT_VEC cppVar_94905 = (0 << 5) | cppVar_94904;
	cppVar_94905 = (cppVar_94905 & cppMask_un_8_);
	bool cppVar_94907 = (cppVar_94905 == 144);
	BIT_VEC cppVar_94908 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94909 = (cppVar_94908 << 3) | 4;
	cppVar_94909 = (cppVar_94909 & cppMask_un_5_);
	BIT_VEC cppVar_94910 = (0 << 5) | cppVar_94909;
	cppVar_94910 = (cppVar_94910 & cppMask_un_8_);
	bool cppVar_94912 = (cppVar_94910 == 152);
	BIT_VEC cppVar_94913 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94914 = (cppVar_94913 << 3) | 4;
	cppVar_94914 = (cppVar_94914 & cppMask_un_5_);
	BIT_VEC cppVar_94915 = (0 << 5) | cppVar_94914;
	cppVar_94915 = (cppVar_94915 & cppMask_un_8_);
	bool cppVar_94917 = (cppVar_94915 == 153);
	BIT_VEC cppVar_94918 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94919 = (cppVar_94918 << 3) | 4;
	cppVar_94919 = (cppVar_94919 & cppMask_un_5_);
	BIT_VEC cppVar_94920 = (0 << 5) | cppVar_94919;
	cppVar_94920 = (cppVar_94920 & cppMask_un_8_);
	bool cppVar_94922 = (cppVar_94920 == 160);
	BIT_VEC cppVar_94923 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94924 = (cppVar_94923 << 3) | 4;
	cppVar_94924 = (cppVar_94924 & cppMask_un_5_);
	BIT_VEC cppVar_94925 = (0 << 5) | cppVar_94924;
	cppVar_94925 = (cppVar_94925 & cppMask_un_8_);
	bool cppVar_94927 = (cppVar_94925 == 168);
	BIT_VEC cppVar_94928 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94929 = (cppVar_94928 << 3) | 4;
	cppVar_94929 = (cppVar_94929 & cppMask_un_5_);
	BIT_VEC cppVar_94930 = (0 << 5) | cppVar_94929;
	cppVar_94930 = (cppVar_94930 & cppMask_un_8_);
	bool cppVar_94932 = (cppVar_94930 == 176);
	BIT_VEC cppVar_94933 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94934 = (cppVar_94933 << 3) | 4;
	cppVar_94934 = (cppVar_94934 & cppMask_un_5_);
	BIT_VEC cppVar_94935 = (0 << 5) | cppVar_94934;
	cppVar_94935 = (cppVar_94935 & cppMask_un_8_);
	bool cppVar_94937 = (cppVar_94935 == 184);
	BIT_VEC cppVar_94938 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94939 = (cppVar_94938 << 3) | 4;
	cppVar_94939 = (cppVar_94939 & cppMask_un_5_);
	BIT_VEC cppVar_94940 = (0 << 5) | cppVar_94939;
	cppVar_94940 = (cppVar_94940 & cppMask_un_8_);
	bool cppVar_94942 = (cppVar_94940 == 208);
	BIT_VEC cppVar_94943 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94944 = (cppVar_94943 << 3) | 4;
	cppVar_94944 = (cppVar_94944 & cppMask_un_5_);
	BIT_VEC cppVar_94945 = (0 << 5) | cppVar_94944;
	cppVar_94945 = (cppVar_94945 & cppMask_un_8_);
	bool cppVar_94947 = (cppVar_94945 == 224);
	BIT_VEC cppVar_94948 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94949 = (cppVar_94948 << 3) | 4;
	cppVar_94949 = (cppVar_94949 & cppMask_un_5_);
	BIT_VEC cppVar_94950 = (0 << 5) | cppVar_94949;
	cppVar_94950 = (cppVar_94950 & cppMask_un_8_);
	bool cppVar_94952 = (cppVar_94950 == 240);
	BIT_VEC cppVar_94954 = (cppVar_94952) ? B : 0;
	BIT_VEC cppVar_94955 = (cppVar_94947) ? ACC : cppVar_94954;
	BIT_VEC cppVar_94956 = (cppVar_94942) ? PSW : cppVar_94955;
	BIT_VEC cppVar_94957 = (cppVar_94937) ? IP : cppVar_94956;
	BIT_VEC cppVar_94958 = (cppVar_94932) ? P3 : cppVar_94957;
	BIT_VEC cppVar_94959 = (cppVar_94927) ? IE : cppVar_94958;
	BIT_VEC cppVar_94960 = (cppVar_94922) ? P2 : cppVar_94959;
	BIT_VEC cppVar_94961 = (cppVar_94917) ? SBUF : cppVar_94960;
	BIT_VEC cppVar_94962 = (cppVar_94912) ? SCON : cppVar_94961;
	BIT_VEC cppVar_94963 = (cppVar_94907) ? P1 : cppVar_94962;
	BIT_VEC cppVar_94964 = (cppVar_94902) ? TH1 : cppVar_94963;
	BIT_VEC cppVar_94965 = (cppVar_94897) ? TL1 : cppVar_94964;
	BIT_VEC cppVar_94966 = (cppVar_94892) ? TH0 : cppVar_94965;
	BIT_VEC cppVar_94967 = (cppVar_94887) ? TL0 : cppVar_94966;
	BIT_VEC cppVar_94968 = (cppVar_94882) ? TMOD : cppVar_94967;
	BIT_VEC cppVar_94969 = (cppVar_94877) ? TCON : cppVar_94968;
	BIT_VEC cppVar_94970 = (cppVar_94872) ? PCON : cppVar_94969;
	BIT_VEC cppVar_94971 = (cppVar_94867) ? DPH : cppVar_94970;
	BIT_VEC cppVar_94972 = (cppVar_94862) ? DPL : cppVar_94971;
	BIT_VEC cppVar_94973 = (cppVar_94857) ? SP : cppVar_94972;
	BIT_VEC cppVar_94974 = (cppVar_94852) ? P0 : cppVar_94973;
	BIT_VEC cppVar_94975 = (cppVar_94843) ? cppVar_94847 : cppVar_94974;
	BIT_VEC cppVar_94977 = cppVar_94975 + 1;
	cppVar_94977 = (cppVar_94977 & cppMask_un_8_);
	type_mem cppVar_94978 = IRAM;
	cppVar_94978.wr(cppVar_94837, cppVar_94977);
	type_mem& cppVar_94979 = (cppVar_94834) ? cppVar_94978 : IRAM;
	BIT_VEC cppVar_94980 = ROM.rd(PC);
	bool cppVar_94982 = (cppVar_94980 == 11);
	BIT_VEC cppVar_94984 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94986 = (cppVar_94984 << 3) | 3;
	cppVar_94986 = (cppVar_94986 & cppMask_un_5_);
	BIT_VEC cppVar_94987 = (0 << 5) | cppVar_94986;
	cppVar_94987 = (cppVar_94987 & cppMask_un_8_);
	BIT_VEC cppVar_94988 = (cppVar_94987 >> 7) & cppMask_un_1_;
	bool cppVar_94990 = (cppVar_94988 == 0);
	BIT_VEC cppVar_94991 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94992 = (cppVar_94991 << 3) | 3;
	cppVar_94992 = (cppVar_94992 & cppMask_un_5_);
	BIT_VEC cppVar_94993 = (0 << 5) | cppVar_94992;
	cppVar_94993 = (cppVar_94993 & cppMask_un_8_);
	BIT_VEC cppVar_94994 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_94995 = (cppVar_94994 << 3) | 3;
	cppVar_94995 = (cppVar_94995 & cppMask_un_5_);
	BIT_VEC cppVar_94996 = (0 << 5) | cppVar_94995;
	cppVar_94996 = (cppVar_94996 & cppMask_un_8_);
	BIT_VEC cppVar_94997 = (cppVar_94996 >> 7) & cppMask_un_1_;
	bool cppVar_94999 = (cppVar_94997 == 0);
	BIT_VEC cppVar_95000 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95001 = (cppVar_95000 << 3) | 3;
	cppVar_95001 = (cppVar_95001 & cppMask_un_5_);
	BIT_VEC cppVar_95002 = (0 << 5) | cppVar_95001;
	cppVar_95002 = (cppVar_95002 & cppMask_un_8_);
	BIT_VEC cppVar_95003 = IRAM.rd(cppVar_95002);
	BIT_VEC cppVar_95004 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95005 = (cppVar_95004 << 3) | 3;
	cppVar_95005 = (cppVar_95005 & cppMask_un_5_);
	BIT_VEC cppVar_95006 = (0 << 5) | cppVar_95005;
	cppVar_95006 = (cppVar_95006 & cppMask_un_8_);
	bool cppVar_95008 = (cppVar_95006 == 128);
	BIT_VEC cppVar_95009 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95010 = (cppVar_95009 << 3) | 3;
	cppVar_95010 = (cppVar_95010 & cppMask_un_5_);
	BIT_VEC cppVar_95011 = (0 << 5) | cppVar_95010;
	cppVar_95011 = (cppVar_95011 & cppMask_un_8_);
	bool cppVar_95013 = (cppVar_95011 == 129);
	BIT_VEC cppVar_95014 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95015 = (cppVar_95014 << 3) | 3;
	cppVar_95015 = (cppVar_95015 & cppMask_un_5_);
	BIT_VEC cppVar_95016 = (0 << 5) | cppVar_95015;
	cppVar_95016 = (cppVar_95016 & cppMask_un_8_);
	bool cppVar_95018 = (cppVar_95016 == 130);
	BIT_VEC cppVar_95019 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95020 = (cppVar_95019 << 3) | 3;
	cppVar_95020 = (cppVar_95020 & cppMask_un_5_);
	BIT_VEC cppVar_95021 = (0 << 5) | cppVar_95020;
	cppVar_95021 = (cppVar_95021 & cppMask_un_8_);
	bool cppVar_95023 = (cppVar_95021 == 131);
	BIT_VEC cppVar_95024 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95025 = (cppVar_95024 << 3) | 3;
	cppVar_95025 = (cppVar_95025 & cppMask_un_5_);
	BIT_VEC cppVar_95026 = (0 << 5) | cppVar_95025;
	cppVar_95026 = (cppVar_95026 & cppMask_un_8_);
	bool cppVar_95028 = (cppVar_95026 == 135);
	BIT_VEC cppVar_95029 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95030 = (cppVar_95029 << 3) | 3;
	cppVar_95030 = (cppVar_95030 & cppMask_un_5_);
	BIT_VEC cppVar_95031 = (0 << 5) | cppVar_95030;
	cppVar_95031 = (cppVar_95031 & cppMask_un_8_);
	bool cppVar_95033 = (cppVar_95031 == 136);
	BIT_VEC cppVar_95034 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95035 = (cppVar_95034 << 3) | 3;
	cppVar_95035 = (cppVar_95035 & cppMask_un_5_);
	BIT_VEC cppVar_95036 = (0 << 5) | cppVar_95035;
	cppVar_95036 = (cppVar_95036 & cppMask_un_8_);
	bool cppVar_95038 = (cppVar_95036 == 137);
	BIT_VEC cppVar_95039 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95040 = (cppVar_95039 << 3) | 3;
	cppVar_95040 = (cppVar_95040 & cppMask_un_5_);
	BIT_VEC cppVar_95041 = (0 << 5) | cppVar_95040;
	cppVar_95041 = (cppVar_95041 & cppMask_un_8_);
	bool cppVar_95043 = (cppVar_95041 == 138);
	BIT_VEC cppVar_95044 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95045 = (cppVar_95044 << 3) | 3;
	cppVar_95045 = (cppVar_95045 & cppMask_un_5_);
	BIT_VEC cppVar_95046 = (0 << 5) | cppVar_95045;
	cppVar_95046 = (cppVar_95046 & cppMask_un_8_);
	bool cppVar_95048 = (cppVar_95046 == 140);
	BIT_VEC cppVar_95049 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95050 = (cppVar_95049 << 3) | 3;
	cppVar_95050 = (cppVar_95050 & cppMask_un_5_);
	BIT_VEC cppVar_95051 = (0 << 5) | cppVar_95050;
	cppVar_95051 = (cppVar_95051 & cppMask_un_8_);
	bool cppVar_95053 = (cppVar_95051 == 139);
	BIT_VEC cppVar_95054 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95055 = (cppVar_95054 << 3) | 3;
	cppVar_95055 = (cppVar_95055 & cppMask_un_5_);
	BIT_VEC cppVar_95056 = (0 << 5) | cppVar_95055;
	cppVar_95056 = (cppVar_95056 & cppMask_un_8_);
	bool cppVar_95058 = (cppVar_95056 == 141);
	BIT_VEC cppVar_95059 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95060 = (cppVar_95059 << 3) | 3;
	cppVar_95060 = (cppVar_95060 & cppMask_un_5_);
	BIT_VEC cppVar_95061 = (0 << 5) | cppVar_95060;
	cppVar_95061 = (cppVar_95061 & cppMask_un_8_);
	bool cppVar_95063 = (cppVar_95061 == 144);
	BIT_VEC cppVar_95064 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95065 = (cppVar_95064 << 3) | 3;
	cppVar_95065 = (cppVar_95065 & cppMask_un_5_);
	BIT_VEC cppVar_95066 = (0 << 5) | cppVar_95065;
	cppVar_95066 = (cppVar_95066 & cppMask_un_8_);
	bool cppVar_95068 = (cppVar_95066 == 152);
	BIT_VEC cppVar_95069 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95070 = (cppVar_95069 << 3) | 3;
	cppVar_95070 = (cppVar_95070 & cppMask_un_5_);
	BIT_VEC cppVar_95071 = (0 << 5) | cppVar_95070;
	cppVar_95071 = (cppVar_95071 & cppMask_un_8_);
	bool cppVar_95073 = (cppVar_95071 == 153);
	BIT_VEC cppVar_95074 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95075 = (cppVar_95074 << 3) | 3;
	cppVar_95075 = (cppVar_95075 & cppMask_un_5_);
	BIT_VEC cppVar_95076 = (0 << 5) | cppVar_95075;
	cppVar_95076 = (cppVar_95076 & cppMask_un_8_);
	bool cppVar_95078 = (cppVar_95076 == 160);
	BIT_VEC cppVar_95079 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95080 = (cppVar_95079 << 3) | 3;
	cppVar_95080 = (cppVar_95080 & cppMask_un_5_);
	BIT_VEC cppVar_95081 = (0 << 5) | cppVar_95080;
	cppVar_95081 = (cppVar_95081 & cppMask_un_8_);
	bool cppVar_95083 = (cppVar_95081 == 168);
	BIT_VEC cppVar_95084 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95085 = (cppVar_95084 << 3) | 3;
	cppVar_95085 = (cppVar_95085 & cppMask_un_5_);
	BIT_VEC cppVar_95086 = (0 << 5) | cppVar_95085;
	cppVar_95086 = (cppVar_95086 & cppMask_un_8_);
	bool cppVar_95088 = (cppVar_95086 == 176);
	BIT_VEC cppVar_95089 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95090 = (cppVar_95089 << 3) | 3;
	cppVar_95090 = (cppVar_95090 & cppMask_un_5_);
	BIT_VEC cppVar_95091 = (0 << 5) | cppVar_95090;
	cppVar_95091 = (cppVar_95091 & cppMask_un_8_);
	bool cppVar_95093 = (cppVar_95091 == 184);
	BIT_VEC cppVar_95094 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95095 = (cppVar_95094 << 3) | 3;
	cppVar_95095 = (cppVar_95095 & cppMask_un_5_);
	BIT_VEC cppVar_95096 = (0 << 5) | cppVar_95095;
	cppVar_95096 = (cppVar_95096 & cppMask_un_8_);
	bool cppVar_95098 = (cppVar_95096 == 208);
	BIT_VEC cppVar_95099 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95100 = (cppVar_95099 << 3) | 3;
	cppVar_95100 = (cppVar_95100 & cppMask_un_5_);
	BIT_VEC cppVar_95101 = (0 << 5) | cppVar_95100;
	cppVar_95101 = (cppVar_95101 & cppMask_un_8_);
	bool cppVar_95103 = (cppVar_95101 == 224);
	BIT_VEC cppVar_95104 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95105 = (cppVar_95104 << 3) | 3;
	cppVar_95105 = (cppVar_95105 & cppMask_un_5_);
	BIT_VEC cppVar_95106 = (0 << 5) | cppVar_95105;
	cppVar_95106 = (cppVar_95106 & cppMask_un_8_);
	bool cppVar_95108 = (cppVar_95106 == 240);
	BIT_VEC cppVar_95110 = (cppVar_95108) ? B : 0;
	BIT_VEC cppVar_95111 = (cppVar_95103) ? ACC : cppVar_95110;
	BIT_VEC cppVar_95112 = (cppVar_95098) ? PSW : cppVar_95111;
	BIT_VEC cppVar_95113 = (cppVar_95093) ? IP : cppVar_95112;
	BIT_VEC cppVar_95114 = (cppVar_95088) ? P3 : cppVar_95113;
	BIT_VEC cppVar_95115 = (cppVar_95083) ? IE : cppVar_95114;
	BIT_VEC cppVar_95116 = (cppVar_95078) ? P2 : cppVar_95115;
	BIT_VEC cppVar_95117 = (cppVar_95073) ? SBUF : cppVar_95116;
	BIT_VEC cppVar_95118 = (cppVar_95068) ? SCON : cppVar_95117;
	BIT_VEC cppVar_95119 = (cppVar_95063) ? P1 : cppVar_95118;
	BIT_VEC cppVar_95120 = (cppVar_95058) ? TH1 : cppVar_95119;
	BIT_VEC cppVar_95121 = (cppVar_95053) ? TL1 : cppVar_95120;
	BIT_VEC cppVar_95122 = (cppVar_95048) ? TH0 : cppVar_95121;
	BIT_VEC cppVar_95123 = (cppVar_95043) ? TL0 : cppVar_95122;
	BIT_VEC cppVar_95124 = (cppVar_95038) ? TMOD : cppVar_95123;
	BIT_VEC cppVar_95125 = (cppVar_95033) ? TCON : cppVar_95124;
	BIT_VEC cppVar_95126 = (cppVar_95028) ? PCON : cppVar_95125;
	BIT_VEC cppVar_95127 = (cppVar_95023) ? DPH : cppVar_95126;
	BIT_VEC cppVar_95128 = (cppVar_95018) ? DPL : cppVar_95127;
	BIT_VEC cppVar_95129 = (cppVar_95013) ? SP : cppVar_95128;
	BIT_VEC cppVar_95130 = (cppVar_95008) ? P0 : cppVar_95129;
	BIT_VEC cppVar_95131 = (cppVar_94999) ? cppVar_95003 : cppVar_95130;
	BIT_VEC cppVar_95133 = cppVar_95131 + 1;
	cppVar_95133 = (cppVar_95133 & cppMask_un_8_);
	type_mem cppVar_95134 = IRAM;
	cppVar_95134.wr(cppVar_94993, cppVar_95133);
	type_mem& cppVar_95135 = (cppVar_94990) ? cppVar_95134 : IRAM;
	BIT_VEC cppVar_95136 = ROM.rd(PC);
	bool cppVar_95138 = (cppVar_95136 == 10);
	BIT_VEC cppVar_95140 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95142 = (cppVar_95140 << 3) | 2;
	cppVar_95142 = (cppVar_95142 & cppMask_un_5_);
	BIT_VEC cppVar_95143 = (0 << 5) | cppVar_95142;
	cppVar_95143 = (cppVar_95143 & cppMask_un_8_);
	BIT_VEC cppVar_95144 = (cppVar_95143 >> 7) & cppMask_un_1_;
	bool cppVar_95146 = (cppVar_95144 == 0);
	BIT_VEC cppVar_95147 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95148 = (cppVar_95147 << 3) | 2;
	cppVar_95148 = (cppVar_95148 & cppMask_un_5_);
	BIT_VEC cppVar_95149 = (0 << 5) | cppVar_95148;
	cppVar_95149 = (cppVar_95149 & cppMask_un_8_);
	BIT_VEC cppVar_95150 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95151 = (cppVar_95150 << 3) | 2;
	cppVar_95151 = (cppVar_95151 & cppMask_un_5_);
	BIT_VEC cppVar_95152 = (0 << 5) | cppVar_95151;
	cppVar_95152 = (cppVar_95152 & cppMask_un_8_);
	BIT_VEC cppVar_95153 = (cppVar_95152 >> 7) & cppMask_un_1_;
	bool cppVar_95155 = (cppVar_95153 == 0);
	BIT_VEC cppVar_95156 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95157 = (cppVar_95156 << 3) | 2;
	cppVar_95157 = (cppVar_95157 & cppMask_un_5_);
	BIT_VEC cppVar_95158 = (0 << 5) | cppVar_95157;
	cppVar_95158 = (cppVar_95158 & cppMask_un_8_);
	BIT_VEC cppVar_95159 = IRAM.rd(cppVar_95158);
	BIT_VEC cppVar_95160 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95161 = (cppVar_95160 << 3) | 2;
	cppVar_95161 = (cppVar_95161 & cppMask_un_5_);
	BIT_VEC cppVar_95162 = (0 << 5) | cppVar_95161;
	cppVar_95162 = (cppVar_95162 & cppMask_un_8_);
	bool cppVar_95164 = (cppVar_95162 == 128);
	BIT_VEC cppVar_95165 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95166 = (cppVar_95165 << 3) | 2;
	cppVar_95166 = (cppVar_95166 & cppMask_un_5_);
	BIT_VEC cppVar_95167 = (0 << 5) | cppVar_95166;
	cppVar_95167 = (cppVar_95167 & cppMask_un_8_);
	bool cppVar_95169 = (cppVar_95167 == 129);
	BIT_VEC cppVar_95170 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95171 = (cppVar_95170 << 3) | 2;
	cppVar_95171 = (cppVar_95171 & cppMask_un_5_);
	BIT_VEC cppVar_95172 = (0 << 5) | cppVar_95171;
	cppVar_95172 = (cppVar_95172 & cppMask_un_8_);
	bool cppVar_95174 = (cppVar_95172 == 130);
	BIT_VEC cppVar_95175 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95176 = (cppVar_95175 << 3) | 2;
	cppVar_95176 = (cppVar_95176 & cppMask_un_5_);
	BIT_VEC cppVar_95177 = (0 << 5) | cppVar_95176;
	cppVar_95177 = (cppVar_95177 & cppMask_un_8_);
	bool cppVar_95179 = (cppVar_95177 == 131);
	BIT_VEC cppVar_95180 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95181 = (cppVar_95180 << 3) | 2;
	cppVar_95181 = (cppVar_95181 & cppMask_un_5_);
	BIT_VEC cppVar_95182 = (0 << 5) | cppVar_95181;
	cppVar_95182 = (cppVar_95182 & cppMask_un_8_);
	bool cppVar_95184 = (cppVar_95182 == 135);
	BIT_VEC cppVar_95185 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95186 = (cppVar_95185 << 3) | 2;
	cppVar_95186 = (cppVar_95186 & cppMask_un_5_);
	BIT_VEC cppVar_95187 = (0 << 5) | cppVar_95186;
	cppVar_95187 = (cppVar_95187 & cppMask_un_8_);
	bool cppVar_95189 = (cppVar_95187 == 136);
	BIT_VEC cppVar_95190 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95191 = (cppVar_95190 << 3) | 2;
	cppVar_95191 = (cppVar_95191 & cppMask_un_5_);
	BIT_VEC cppVar_95192 = (0 << 5) | cppVar_95191;
	cppVar_95192 = (cppVar_95192 & cppMask_un_8_);
	bool cppVar_95194 = (cppVar_95192 == 137);
	BIT_VEC cppVar_95195 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95196 = (cppVar_95195 << 3) | 2;
	cppVar_95196 = (cppVar_95196 & cppMask_un_5_);
	BIT_VEC cppVar_95197 = (0 << 5) | cppVar_95196;
	cppVar_95197 = (cppVar_95197 & cppMask_un_8_);
	bool cppVar_95199 = (cppVar_95197 == 138);
	BIT_VEC cppVar_95200 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95201 = (cppVar_95200 << 3) | 2;
	cppVar_95201 = (cppVar_95201 & cppMask_un_5_);
	BIT_VEC cppVar_95202 = (0 << 5) | cppVar_95201;
	cppVar_95202 = (cppVar_95202 & cppMask_un_8_);
	bool cppVar_95204 = (cppVar_95202 == 140);
	BIT_VEC cppVar_95205 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95206 = (cppVar_95205 << 3) | 2;
	cppVar_95206 = (cppVar_95206 & cppMask_un_5_);
	BIT_VEC cppVar_95207 = (0 << 5) | cppVar_95206;
	cppVar_95207 = (cppVar_95207 & cppMask_un_8_);
	bool cppVar_95209 = (cppVar_95207 == 139);
	BIT_VEC cppVar_95210 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95211 = (cppVar_95210 << 3) | 2;
	cppVar_95211 = (cppVar_95211 & cppMask_un_5_);
	BIT_VEC cppVar_95212 = (0 << 5) | cppVar_95211;
	cppVar_95212 = (cppVar_95212 & cppMask_un_8_);
	bool cppVar_95214 = (cppVar_95212 == 141);
	BIT_VEC cppVar_95215 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95216 = (cppVar_95215 << 3) | 2;
	cppVar_95216 = (cppVar_95216 & cppMask_un_5_);
	BIT_VEC cppVar_95217 = (0 << 5) | cppVar_95216;
	cppVar_95217 = (cppVar_95217 & cppMask_un_8_);
	bool cppVar_95219 = (cppVar_95217 == 144);
	BIT_VEC cppVar_95220 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95221 = (cppVar_95220 << 3) | 2;
	cppVar_95221 = (cppVar_95221 & cppMask_un_5_);
	BIT_VEC cppVar_95222 = (0 << 5) | cppVar_95221;
	cppVar_95222 = (cppVar_95222 & cppMask_un_8_);
	bool cppVar_95224 = (cppVar_95222 == 152);
	BIT_VEC cppVar_95225 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95226 = (cppVar_95225 << 3) | 2;
	cppVar_95226 = (cppVar_95226 & cppMask_un_5_);
	BIT_VEC cppVar_95227 = (0 << 5) | cppVar_95226;
	cppVar_95227 = (cppVar_95227 & cppMask_un_8_);
	bool cppVar_95229 = (cppVar_95227 == 153);
	BIT_VEC cppVar_95230 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95231 = (cppVar_95230 << 3) | 2;
	cppVar_95231 = (cppVar_95231 & cppMask_un_5_);
	BIT_VEC cppVar_95232 = (0 << 5) | cppVar_95231;
	cppVar_95232 = (cppVar_95232 & cppMask_un_8_);
	bool cppVar_95234 = (cppVar_95232 == 160);
	BIT_VEC cppVar_95235 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95236 = (cppVar_95235 << 3) | 2;
	cppVar_95236 = (cppVar_95236 & cppMask_un_5_);
	BIT_VEC cppVar_95237 = (0 << 5) | cppVar_95236;
	cppVar_95237 = (cppVar_95237 & cppMask_un_8_);
	bool cppVar_95239 = (cppVar_95237 == 168);
	BIT_VEC cppVar_95240 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95241 = (cppVar_95240 << 3) | 2;
	cppVar_95241 = (cppVar_95241 & cppMask_un_5_);
	BIT_VEC cppVar_95242 = (0 << 5) | cppVar_95241;
	cppVar_95242 = (cppVar_95242 & cppMask_un_8_);
	bool cppVar_95244 = (cppVar_95242 == 176);
	BIT_VEC cppVar_95245 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95246 = (cppVar_95245 << 3) | 2;
	cppVar_95246 = (cppVar_95246 & cppMask_un_5_);
	BIT_VEC cppVar_95247 = (0 << 5) | cppVar_95246;
	cppVar_95247 = (cppVar_95247 & cppMask_un_8_);
	bool cppVar_95249 = (cppVar_95247 == 184);
	BIT_VEC cppVar_95250 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95251 = (cppVar_95250 << 3) | 2;
	cppVar_95251 = (cppVar_95251 & cppMask_un_5_);
	BIT_VEC cppVar_95252 = (0 << 5) | cppVar_95251;
	cppVar_95252 = (cppVar_95252 & cppMask_un_8_);
	bool cppVar_95254 = (cppVar_95252 == 208);
	BIT_VEC cppVar_95255 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95256 = (cppVar_95255 << 3) | 2;
	cppVar_95256 = (cppVar_95256 & cppMask_un_5_);
	BIT_VEC cppVar_95257 = (0 << 5) | cppVar_95256;
	cppVar_95257 = (cppVar_95257 & cppMask_un_8_);
	bool cppVar_95259 = (cppVar_95257 == 224);
	BIT_VEC cppVar_95260 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95261 = (cppVar_95260 << 3) | 2;
	cppVar_95261 = (cppVar_95261 & cppMask_un_5_);
	BIT_VEC cppVar_95262 = (0 << 5) | cppVar_95261;
	cppVar_95262 = (cppVar_95262 & cppMask_un_8_);
	bool cppVar_95264 = (cppVar_95262 == 240);
	BIT_VEC cppVar_95266 = (cppVar_95264) ? B : 0;
	BIT_VEC cppVar_95267 = (cppVar_95259) ? ACC : cppVar_95266;
	BIT_VEC cppVar_95268 = (cppVar_95254) ? PSW : cppVar_95267;
	BIT_VEC cppVar_95269 = (cppVar_95249) ? IP : cppVar_95268;
	BIT_VEC cppVar_95270 = (cppVar_95244) ? P3 : cppVar_95269;
	BIT_VEC cppVar_95271 = (cppVar_95239) ? IE : cppVar_95270;
	BIT_VEC cppVar_95272 = (cppVar_95234) ? P2 : cppVar_95271;
	BIT_VEC cppVar_95273 = (cppVar_95229) ? SBUF : cppVar_95272;
	BIT_VEC cppVar_95274 = (cppVar_95224) ? SCON : cppVar_95273;
	BIT_VEC cppVar_95275 = (cppVar_95219) ? P1 : cppVar_95274;
	BIT_VEC cppVar_95276 = (cppVar_95214) ? TH1 : cppVar_95275;
	BIT_VEC cppVar_95277 = (cppVar_95209) ? TL1 : cppVar_95276;
	BIT_VEC cppVar_95278 = (cppVar_95204) ? TH0 : cppVar_95277;
	BIT_VEC cppVar_95279 = (cppVar_95199) ? TL0 : cppVar_95278;
	BIT_VEC cppVar_95280 = (cppVar_95194) ? TMOD : cppVar_95279;
	BIT_VEC cppVar_95281 = (cppVar_95189) ? TCON : cppVar_95280;
	BIT_VEC cppVar_95282 = (cppVar_95184) ? PCON : cppVar_95281;
	BIT_VEC cppVar_95283 = (cppVar_95179) ? DPH : cppVar_95282;
	BIT_VEC cppVar_95284 = (cppVar_95174) ? DPL : cppVar_95283;
	BIT_VEC cppVar_95285 = (cppVar_95169) ? SP : cppVar_95284;
	BIT_VEC cppVar_95286 = (cppVar_95164) ? P0 : cppVar_95285;
	BIT_VEC cppVar_95287 = (cppVar_95155) ? cppVar_95159 : cppVar_95286;
	BIT_VEC cppVar_95289 = cppVar_95287 + 1;
	cppVar_95289 = (cppVar_95289 & cppMask_un_8_);
	type_mem cppVar_95290 = IRAM;
	cppVar_95290.wr(cppVar_95149, cppVar_95289);
	type_mem& cppVar_95291 = (cppVar_95146) ? cppVar_95290 : IRAM;
	BIT_VEC cppVar_95292 = ROM.rd(PC);
	bool cppVar_95294 = (cppVar_95292 == 9);
	BIT_VEC cppVar_95296 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95298 = (cppVar_95296 << 3) | 1;
	cppVar_95298 = (cppVar_95298 & cppMask_un_5_);
	BIT_VEC cppVar_95299 = (0 << 5) | cppVar_95298;
	cppVar_95299 = (cppVar_95299 & cppMask_un_8_);
	BIT_VEC cppVar_95300 = (cppVar_95299 >> 7) & cppMask_un_1_;
	bool cppVar_95302 = (cppVar_95300 == 0);
	BIT_VEC cppVar_95303 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95304 = (cppVar_95303 << 3) | 1;
	cppVar_95304 = (cppVar_95304 & cppMask_un_5_);
	BIT_VEC cppVar_95305 = (0 << 5) | cppVar_95304;
	cppVar_95305 = (cppVar_95305 & cppMask_un_8_);
	BIT_VEC cppVar_95306 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95307 = (cppVar_95306 << 3) | 1;
	cppVar_95307 = (cppVar_95307 & cppMask_un_5_);
	BIT_VEC cppVar_95308 = (0 << 5) | cppVar_95307;
	cppVar_95308 = (cppVar_95308 & cppMask_un_8_);
	BIT_VEC cppVar_95309 = (cppVar_95308 >> 7) & cppMask_un_1_;
	bool cppVar_95311 = (cppVar_95309 == 0);
	BIT_VEC cppVar_95312 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95313 = (cppVar_95312 << 3) | 1;
	cppVar_95313 = (cppVar_95313 & cppMask_un_5_);
	BIT_VEC cppVar_95314 = (0 << 5) | cppVar_95313;
	cppVar_95314 = (cppVar_95314 & cppMask_un_8_);
	BIT_VEC cppVar_95315 = IRAM.rd(cppVar_95314);
	BIT_VEC cppVar_95316 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95317 = (cppVar_95316 << 3) | 1;
	cppVar_95317 = (cppVar_95317 & cppMask_un_5_);
	BIT_VEC cppVar_95318 = (0 << 5) | cppVar_95317;
	cppVar_95318 = (cppVar_95318 & cppMask_un_8_);
	bool cppVar_95320 = (cppVar_95318 == 128);
	BIT_VEC cppVar_95321 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95322 = (cppVar_95321 << 3) | 1;
	cppVar_95322 = (cppVar_95322 & cppMask_un_5_);
	BIT_VEC cppVar_95323 = (0 << 5) | cppVar_95322;
	cppVar_95323 = (cppVar_95323 & cppMask_un_8_);
	bool cppVar_95325 = (cppVar_95323 == 129);
	BIT_VEC cppVar_95326 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95327 = (cppVar_95326 << 3) | 1;
	cppVar_95327 = (cppVar_95327 & cppMask_un_5_);
	BIT_VEC cppVar_95328 = (0 << 5) | cppVar_95327;
	cppVar_95328 = (cppVar_95328 & cppMask_un_8_);
	bool cppVar_95330 = (cppVar_95328 == 130);
	BIT_VEC cppVar_95331 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95332 = (cppVar_95331 << 3) | 1;
	cppVar_95332 = (cppVar_95332 & cppMask_un_5_);
	BIT_VEC cppVar_95333 = (0 << 5) | cppVar_95332;
	cppVar_95333 = (cppVar_95333 & cppMask_un_8_);
	bool cppVar_95335 = (cppVar_95333 == 131);
	BIT_VEC cppVar_95336 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95337 = (cppVar_95336 << 3) | 1;
	cppVar_95337 = (cppVar_95337 & cppMask_un_5_);
	BIT_VEC cppVar_95338 = (0 << 5) | cppVar_95337;
	cppVar_95338 = (cppVar_95338 & cppMask_un_8_);
	bool cppVar_95340 = (cppVar_95338 == 135);
	BIT_VEC cppVar_95341 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95342 = (cppVar_95341 << 3) | 1;
	cppVar_95342 = (cppVar_95342 & cppMask_un_5_);
	BIT_VEC cppVar_95343 = (0 << 5) | cppVar_95342;
	cppVar_95343 = (cppVar_95343 & cppMask_un_8_);
	bool cppVar_95345 = (cppVar_95343 == 136);
	BIT_VEC cppVar_95346 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95347 = (cppVar_95346 << 3) | 1;
	cppVar_95347 = (cppVar_95347 & cppMask_un_5_);
	BIT_VEC cppVar_95348 = (0 << 5) | cppVar_95347;
	cppVar_95348 = (cppVar_95348 & cppMask_un_8_);
	bool cppVar_95350 = (cppVar_95348 == 137);
	BIT_VEC cppVar_95351 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95352 = (cppVar_95351 << 3) | 1;
	cppVar_95352 = (cppVar_95352 & cppMask_un_5_);
	BIT_VEC cppVar_95353 = (0 << 5) | cppVar_95352;
	cppVar_95353 = (cppVar_95353 & cppMask_un_8_);
	bool cppVar_95355 = (cppVar_95353 == 138);
	BIT_VEC cppVar_95356 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95357 = (cppVar_95356 << 3) | 1;
	cppVar_95357 = (cppVar_95357 & cppMask_un_5_);
	BIT_VEC cppVar_95358 = (0 << 5) | cppVar_95357;
	cppVar_95358 = (cppVar_95358 & cppMask_un_8_);
	bool cppVar_95360 = (cppVar_95358 == 140);
	BIT_VEC cppVar_95361 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95362 = (cppVar_95361 << 3) | 1;
	cppVar_95362 = (cppVar_95362 & cppMask_un_5_);
	BIT_VEC cppVar_95363 = (0 << 5) | cppVar_95362;
	cppVar_95363 = (cppVar_95363 & cppMask_un_8_);
	bool cppVar_95365 = (cppVar_95363 == 139);
	BIT_VEC cppVar_95366 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95367 = (cppVar_95366 << 3) | 1;
	cppVar_95367 = (cppVar_95367 & cppMask_un_5_);
	BIT_VEC cppVar_95368 = (0 << 5) | cppVar_95367;
	cppVar_95368 = (cppVar_95368 & cppMask_un_8_);
	bool cppVar_95370 = (cppVar_95368 == 141);
	BIT_VEC cppVar_95371 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95372 = (cppVar_95371 << 3) | 1;
	cppVar_95372 = (cppVar_95372 & cppMask_un_5_);
	BIT_VEC cppVar_95373 = (0 << 5) | cppVar_95372;
	cppVar_95373 = (cppVar_95373 & cppMask_un_8_);
	bool cppVar_95375 = (cppVar_95373 == 144);
	BIT_VEC cppVar_95376 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95377 = (cppVar_95376 << 3) | 1;
	cppVar_95377 = (cppVar_95377 & cppMask_un_5_);
	BIT_VEC cppVar_95378 = (0 << 5) | cppVar_95377;
	cppVar_95378 = (cppVar_95378 & cppMask_un_8_);
	bool cppVar_95380 = (cppVar_95378 == 152);
	BIT_VEC cppVar_95381 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95382 = (cppVar_95381 << 3) | 1;
	cppVar_95382 = (cppVar_95382 & cppMask_un_5_);
	BIT_VEC cppVar_95383 = (0 << 5) | cppVar_95382;
	cppVar_95383 = (cppVar_95383 & cppMask_un_8_);
	bool cppVar_95385 = (cppVar_95383 == 153);
	BIT_VEC cppVar_95386 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95387 = (cppVar_95386 << 3) | 1;
	cppVar_95387 = (cppVar_95387 & cppMask_un_5_);
	BIT_VEC cppVar_95388 = (0 << 5) | cppVar_95387;
	cppVar_95388 = (cppVar_95388 & cppMask_un_8_);
	bool cppVar_95390 = (cppVar_95388 == 160);
	BIT_VEC cppVar_95391 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95392 = (cppVar_95391 << 3) | 1;
	cppVar_95392 = (cppVar_95392 & cppMask_un_5_);
	BIT_VEC cppVar_95393 = (0 << 5) | cppVar_95392;
	cppVar_95393 = (cppVar_95393 & cppMask_un_8_);
	bool cppVar_95395 = (cppVar_95393 == 168);
	BIT_VEC cppVar_95396 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95397 = (cppVar_95396 << 3) | 1;
	cppVar_95397 = (cppVar_95397 & cppMask_un_5_);
	BIT_VEC cppVar_95398 = (0 << 5) | cppVar_95397;
	cppVar_95398 = (cppVar_95398 & cppMask_un_8_);
	bool cppVar_95400 = (cppVar_95398 == 176);
	BIT_VEC cppVar_95401 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95402 = (cppVar_95401 << 3) | 1;
	cppVar_95402 = (cppVar_95402 & cppMask_un_5_);
	BIT_VEC cppVar_95403 = (0 << 5) | cppVar_95402;
	cppVar_95403 = (cppVar_95403 & cppMask_un_8_);
	bool cppVar_95405 = (cppVar_95403 == 184);
	BIT_VEC cppVar_95406 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95407 = (cppVar_95406 << 3) | 1;
	cppVar_95407 = (cppVar_95407 & cppMask_un_5_);
	BIT_VEC cppVar_95408 = (0 << 5) | cppVar_95407;
	cppVar_95408 = (cppVar_95408 & cppMask_un_8_);
	bool cppVar_95410 = (cppVar_95408 == 208);
	BIT_VEC cppVar_95411 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95412 = (cppVar_95411 << 3) | 1;
	cppVar_95412 = (cppVar_95412 & cppMask_un_5_);
	BIT_VEC cppVar_95413 = (0 << 5) | cppVar_95412;
	cppVar_95413 = (cppVar_95413 & cppMask_un_8_);
	bool cppVar_95415 = (cppVar_95413 == 224);
	BIT_VEC cppVar_95416 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95417 = (cppVar_95416 << 3) | 1;
	cppVar_95417 = (cppVar_95417 & cppMask_un_5_);
	BIT_VEC cppVar_95418 = (0 << 5) | cppVar_95417;
	cppVar_95418 = (cppVar_95418 & cppMask_un_8_);
	bool cppVar_95420 = (cppVar_95418 == 240);
	BIT_VEC cppVar_95422 = (cppVar_95420) ? B : 0;
	BIT_VEC cppVar_95423 = (cppVar_95415) ? ACC : cppVar_95422;
	BIT_VEC cppVar_95424 = (cppVar_95410) ? PSW : cppVar_95423;
	BIT_VEC cppVar_95425 = (cppVar_95405) ? IP : cppVar_95424;
	BIT_VEC cppVar_95426 = (cppVar_95400) ? P3 : cppVar_95425;
	BIT_VEC cppVar_95427 = (cppVar_95395) ? IE : cppVar_95426;
	BIT_VEC cppVar_95428 = (cppVar_95390) ? P2 : cppVar_95427;
	BIT_VEC cppVar_95429 = (cppVar_95385) ? SBUF : cppVar_95428;
	BIT_VEC cppVar_95430 = (cppVar_95380) ? SCON : cppVar_95429;
	BIT_VEC cppVar_95431 = (cppVar_95375) ? P1 : cppVar_95430;
	BIT_VEC cppVar_95432 = (cppVar_95370) ? TH1 : cppVar_95431;
	BIT_VEC cppVar_95433 = (cppVar_95365) ? TL1 : cppVar_95432;
	BIT_VEC cppVar_95434 = (cppVar_95360) ? TH0 : cppVar_95433;
	BIT_VEC cppVar_95435 = (cppVar_95355) ? TL0 : cppVar_95434;
	BIT_VEC cppVar_95436 = (cppVar_95350) ? TMOD : cppVar_95435;
	BIT_VEC cppVar_95437 = (cppVar_95345) ? TCON : cppVar_95436;
	BIT_VEC cppVar_95438 = (cppVar_95340) ? PCON : cppVar_95437;
	BIT_VEC cppVar_95439 = (cppVar_95335) ? DPH : cppVar_95438;
	BIT_VEC cppVar_95440 = (cppVar_95330) ? DPL : cppVar_95439;
	BIT_VEC cppVar_95441 = (cppVar_95325) ? SP : cppVar_95440;
	BIT_VEC cppVar_95442 = (cppVar_95320) ? P0 : cppVar_95441;
	BIT_VEC cppVar_95443 = (cppVar_95311) ? cppVar_95315 : cppVar_95442;
	BIT_VEC cppVar_95445 = cppVar_95443 + 1;
	cppVar_95445 = (cppVar_95445 & cppMask_un_8_);
	type_mem cppVar_95446 = IRAM;
	cppVar_95446.wr(cppVar_95305, cppVar_95445);
	type_mem& cppVar_95447 = (cppVar_95302) ? cppVar_95446 : IRAM;
	BIT_VEC cppVar_95448 = ROM.rd(PC);
	bool cppVar_95450 = (cppVar_95448 == 8);
	BIT_VEC cppVar_95452 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95454 = (cppVar_95452 << 3) | 0;
	cppVar_95454 = (cppVar_95454 & cppMask_un_5_);
	BIT_VEC cppVar_95455 = (0 << 5) | cppVar_95454;
	cppVar_95455 = (cppVar_95455 & cppMask_un_8_);
	BIT_VEC cppVar_95456 = (cppVar_95455 >> 7) & cppMask_un_1_;
	bool cppVar_95458 = (cppVar_95456 == 0);
	BIT_VEC cppVar_95459 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95460 = (cppVar_95459 << 3) | 0;
	cppVar_95460 = (cppVar_95460 & cppMask_un_5_);
	BIT_VEC cppVar_95461 = (0 << 5) | cppVar_95460;
	cppVar_95461 = (cppVar_95461 & cppMask_un_8_);
	BIT_VEC cppVar_95462 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95463 = (cppVar_95462 << 3) | 0;
	cppVar_95463 = (cppVar_95463 & cppMask_un_5_);
	BIT_VEC cppVar_95464 = (0 << 5) | cppVar_95463;
	cppVar_95464 = (cppVar_95464 & cppMask_un_8_);
	BIT_VEC cppVar_95465 = (cppVar_95464 >> 7) & cppMask_un_1_;
	bool cppVar_95467 = (cppVar_95465 == 0);
	BIT_VEC cppVar_95468 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95469 = (cppVar_95468 << 3) | 0;
	cppVar_95469 = (cppVar_95469 & cppMask_un_5_);
	BIT_VEC cppVar_95470 = (0 << 5) | cppVar_95469;
	cppVar_95470 = (cppVar_95470 & cppMask_un_8_);
	BIT_VEC cppVar_95471 = IRAM.rd(cppVar_95470);
	BIT_VEC cppVar_95472 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95473 = (cppVar_95472 << 3) | 0;
	cppVar_95473 = (cppVar_95473 & cppMask_un_5_);
	BIT_VEC cppVar_95474 = (0 << 5) | cppVar_95473;
	cppVar_95474 = (cppVar_95474 & cppMask_un_8_);
	bool cppVar_95476 = (cppVar_95474 == 128);
	BIT_VEC cppVar_95477 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95478 = (cppVar_95477 << 3) | 0;
	cppVar_95478 = (cppVar_95478 & cppMask_un_5_);
	BIT_VEC cppVar_95479 = (0 << 5) | cppVar_95478;
	cppVar_95479 = (cppVar_95479 & cppMask_un_8_);
	bool cppVar_95481 = (cppVar_95479 == 129);
	BIT_VEC cppVar_95482 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95483 = (cppVar_95482 << 3) | 0;
	cppVar_95483 = (cppVar_95483 & cppMask_un_5_);
	BIT_VEC cppVar_95484 = (0 << 5) | cppVar_95483;
	cppVar_95484 = (cppVar_95484 & cppMask_un_8_);
	bool cppVar_95486 = (cppVar_95484 == 130);
	BIT_VEC cppVar_95487 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95488 = (cppVar_95487 << 3) | 0;
	cppVar_95488 = (cppVar_95488 & cppMask_un_5_);
	BIT_VEC cppVar_95489 = (0 << 5) | cppVar_95488;
	cppVar_95489 = (cppVar_95489 & cppMask_un_8_);
	bool cppVar_95491 = (cppVar_95489 == 131);
	BIT_VEC cppVar_95492 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95493 = (cppVar_95492 << 3) | 0;
	cppVar_95493 = (cppVar_95493 & cppMask_un_5_);
	BIT_VEC cppVar_95494 = (0 << 5) | cppVar_95493;
	cppVar_95494 = (cppVar_95494 & cppMask_un_8_);
	bool cppVar_95496 = (cppVar_95494 == 135);
	BIT_VEC cppVar_95497 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95498 = (cppVar_95497 << 3) | 0;
	cppVar_95498 = (cppVar_95498 & cppMask_un_5_);
	BIT_VEC cppVar_95499 = (0 << 5) | cppVar_95498;
	cppVar_95499 = (cppVar_95499 & cppMask_un_8_);
	bool cppVar_95501 = (cppVar_95499 == 136);
	BIT_VEC cppVar_95502 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95503 = (cppVar_95502 << 3) | 0;
	cppVar_95503 = (cppVar_95503 & cppMask_un_5_);
	BIT_VEC cppVar_95504 = (0 << 5) | cppVar_95503;
	cppVar_95504 = (cppVar_95504 & cppMask_un_8_);
	bool cppVar_95506 = (cppVar_95504 == 137);
	BIT_VEC cppVar_95507 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95508 = (cppVar_95507 << 3) | 0;
	cppVar_95508 = (cppVar_95508 & cppMask_un_5_);
	BIT_VEC cppVar_95509 = (0 << 5) | cppVar_95508;
	cppVar_95509 = (cppVar_95509 & cppMask_un_8_);
	bool cppVar_95511 = (cppVar_95509 == 138);
	BIT_VEC cppVar_95512 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95513 = (cppVar_95512 << 3) | 0;
	cppVar_95513 = (cppVar_95513 & cppMask_un_5_);
	BIT_VEC cppVar_95514 = (0 << 5) | cppVar_95513;
	cppVar_95514 = (cppVar_95514 & cppMask_un_8_);
	bool cppVar_95516 = (cppVar_95514 == 140);
	BIT_VEC cppVar_95517 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95518 = (cppVar_95517 << 3) | 0;
	cppVar_95518 = (cppVar_95518 & cppMask_un_5_);
	BIT_VEC cppVar_95519 = (0 << 5) | cppVar_95518;
	cppVar_95519 = (cppVar_95519 & cppMask_un_8_);
	bool cppVar_95521 = (cppVar_95519 == 139);
	BIT_VEC cppVar_95522 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95523 = (cppVar_95522 << 3) | 0;
	cppVar_95523 = (cppVar_95523 & cppMask_un_5_);
	BIT_VEC cppVar_95524 = (0 << 5) | cppVar_95523;
	cppVar_95524 = (cppVar_95524 & cppMask_un_8_);
	bool cppVar_95526 = (cppVar_95524 == 141);
	BIT_VEC cppVar_95527 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95528 = (cppVar_95527 << 3) | 0;
	cppVar_95528 = (cppVar_95528 & cppMask_un_5_);
	BIT_VEC cppVar_95529 = (0 << 5) | cppVar_95528;
	cppVar_95529 = (cppVar_95529 & cppMask_un_8_);
	bool cppVar_95531 = (cppVar_95529 == 144);
	BIT_VEC cppVar_95532 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95533 = (cppVar_95532 << 3) | 0;
	cppVar_95533 = (cppVar_95533 & cppMask_un_5_);
	BIT_VEC cppVar_95534 = (0 << 5) | cppVar_95533;
	cppVar_95534 = (cppVar_95534 & cppMask_un_8_);
	bool cppVar_95536 = (cppVar_95534 == 152);
	BIT_VEC cppVar_95537 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95538 = (cppVar_95537 << 3) | 0;
	cppVar_95538 = (cppVar_95538 & cppMask_un_5_);
	BIT_VEC cppVar_95539 = (0 << 5) | cppVar_95538;
	cppVar_95539 = (cppVar_95539 & cppMask_un_8_);
	bool cppVar_95541 = (cppVar_95539 == 153);
	BIT_VEC cppVar_95542 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95543 = (cppVar_95542 << 3) | 0;
	cppVar_95543 = (cppVar_95543 & cppMask_un_5_);
	BIT_VEC cppVar_95544 = (0 << 5) | cppVar_95543;
	cppVar_95544 = (cppVar_95544 & cppMask_un_8_);
	bool cppVar_95546 = (cppVar_95544 == 160);
	BIT_VEC cppVar_95547 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95548 = (cppVar_95547 << 3) | 0;
	cppVar_95548 = (cppVar_95548 & cppMask_un_5_);
	BIT_VEC cppVar_95549 = (0 << 5) | cppVar_95548;
	cppVar_95549 = (cppVar_95549 & cppMask_un_8_);
	bool cppVar_95551 = (cppVar_95549 == 168);
	BIT_VEC cppVar_95552 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95553 = (cppVar_95552 << 3) | 0;
	cppVar_95553 = (cppVar_95553 & cppMask_un_5_);
	BIT_VEC cppVar_95554 = (0 << 5) | cppVar_95553;
	cppVar_95554 = (cppVar_95554 & cppMask_un_8_);
	bool cppVar_95556 = (cppVar_95554 == 176);
	BIT_VEC cppVar_95557 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95558 = (cppVar_95557 << 3) | 0;
	cppVar_95558 = (cppVar_95558 & cppMask_un_5_);
	BIT_VEC cppVar_95559 = (0 << 5) | cppVar_95558;
	cppVar_95559 = (cppVar_95559 & cppMask_un_8_);
	bool cppVar_95561 = (cppVar_95559 == 184);
	BIT_VEC cppVar_95562 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95563 = (cppVar_95562 << 3) | 0;
	cppVar_95563 = (cppVar_95563 & cppMask_un_5_);
	BIT_VEC cppVar_95564 = (0 << 5) | cppVar_95563;
	cppVar_95564 = (cppVar_95564 & cppMask_un_8_);
	bool cppVar_95566 = (cppVar_95564 == 208);
	BIT_VEC cppVar_95567 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95568 = (cppVar_95567 << 3) | 0;
	cppVar_95568 = (cppVar_95568 & cppMask_un_5_);
	BIT_VEC cppVar_95569 = (0 << 5) | cppVar_95568;
	cppVar_95569 = (cppVar_95569 & cppMask_un_8_);
	bool cppVar_95571 = (cppVar_95569 == 224);
	BIT_VEC cppVar_95572 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95573 = (cppVar_95572 << 3) | 0;
	cppVar_95573 = (cppVar_95573 & cppMask_un_5_);
	BIT_VEC cppVar_95574 = (0 << 5) | cppVar_95573;
	cppVar_95574 = (cppVar_95574 & cppMask_un_8_);
	bool cppVar_95576 = (cppVar_95574 == 240);
	BIT_VEC cppVar_95578 = (cppVar_95576) ? B : 0;
	BIT_VEC cppVar_95579 = (cppVar_95571) ? ACC : cppVar_95578;
	BIT_VEC cppVar_95580 = (cppVar_95566) ? PSW : cppVar_95579;
	BIT_VEC cppVar_95581 = (cppVar_95561) ? IP : cppVar_95580;
	BIT_VEC cppVar_95582 = (cppVar_95556) ? P3 : cppVar_95581;
	BIT_VEC cppVar_95583 = (cppVar_95551) ? IE : cppVar_95582;
	BIT_VEC cppVar_95584 = (cppVar_95546) ? P2 : cppVar_95583;
	BIT_VEC cppVar_95585 = (cppVar_95541) ? SBUF : cppVar_95584;
	BIT_VEC cppVar_95586 = (cppVar_95536) ? SCON : cppVar_95585;
	BIT_VEC cppVar_95587 = (cppVar_95531) ? P1 : cppVar_95586;
	BIT_VEC cppVar_95588 = (cppVar_95526) ? TH1 : cppVar_95587;
	BIT_VEC cppVar_95589 = (cppVar_95521) ? TL1 : cppVar_95588;
	BIT_VEC cppVar_95590 = (cppVar_95516) ? TH0 : cppVar_95589;
	BIT_VEC cppVar_95591 = (cppVar_95511) ? TL0 : cppVar_95590;
	BIT_VEC cppVar_95592 = (cppVar_95506) ? TMOD : cppVar_95591;
	BIT_VEC cppVar_95593 = (cppVar_95501) ? TCON : cppVar_95592;
	BIT_VEC cppVar_95594 = (cppVar_95496) ? PCON : cppVar_95593;
	BIT_VEC cppVar_95595 = (cppVar_95491) ? DPH : cppVar_95594;
	BIT_VEC cppVar_95596 = (cppVar_95486) ? DPL : cppVar_95595;
	BIT_VEC cppVar_95597 = (cppVar_95481) ? SP : cppVar_95596;
	BIT_VEC cppVar_95598 = (cppVar_95476) ? P0 : cppVar_95597;
	BIT_VEC cppVar_95599 = (cppVar_95467) ? cppVar_95471 : cppVar_95598;
	BIT_VEC cppVar_95601 = cppVar_95599 + 1;
	cppVar_95601 = (cppVar_95601 & cppMask_un_8_);
	type_mem cppVar_95602 = IRAM;
	cppVar_95602.wr(cppVar_95461, cppVar_95601);
	type_mem& cppVar_95603 = (cppVar_95458) ? cppVar_95602 : IRAM;
	BIT_VEC cppVar_95604 = ROM.rd(PC);
	bool cppVar_95606 = (cppVar_95604 == 7);
	BIT_VEC cppVar_95608 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95610 = (cppVar_95608 << 3) | 1;
	cppVar_95610 = (cppVar_95610 & cppMask_un_5_);
	BIT_VEC cppVar_95611 = (0 << 5) | cppVar_95610;
	cppVar_95611 = (cppVar_95611 & cppMask_un_8_);
	BIT_VEC cppVar_95612 = IRAM.rd(cppVar_95611);
	BIT_VEC cppVar_95613 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95614 = (cppVar_95613 << 3) | 1;
	cppVar_95614 = (cppVar_95614 & cppMask_un_5_);
	BIT_VEC cppVar_95615 = (0 << 5) | cppVar_95614;
	cppVar_95615 = (cppVar_95615 & cppMask_un_8_);
	BIT_VEC cppVar_95616 = IRAM.rd(cppVar_95615);
	BIT_VEC cppVar_95617 = IRAM.rd(cppVar_95616);
	BIT_VEC cppVar_95619 = cppVar_95617 + 1;
	cppVar_95619 = (cppVar_95619 & cppMask_un_8_);
	type_mem cppVar_95620 = IRAM;
	cppVar_95620.wr(cppVar_95612, cppVar_95619);
	BIT_VEC cppVar_95621 = ROM.rd(PC);
	bool cppVar_95623 = (cppVar_95621 == 6);
	BIT_VEC cppVar_95625 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95627 = (cppVar_95625 << 3) | 0;
	cppVar_95627 = (cppVar_95627 & cppMask_un_5_);
	BIT_VEC cppVar_95628 = (0 << 5) | cppVar_95627;
	cppVar_95628 = (cppVar_95628 & cppMask_un_8_);
	BIT_VEC cppVar_95629 = IRAM.rd(cppVar_95628);
	BIT_VEC cppVar_95630 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_95631 = (cppVar_95630 << 3) | 0;
	cppVar_95631 = (cppVar_95631 & cppMask_un_5_);
	BIT_VEC cppVar_95632 = (0 << 5) | cppVar_95631;
	cppVar_95632 = (cppVar_95632 & cppMask_un_8_);
	BIT_VEC cppVar_95633 = IRAM.rd(cppVar_95632);
	BIT_VEC cppVar_95634 = IRAM.rd(cppVar_95633);
	BIT_VEC cppVar_95636 = cppVar_95634 + 1;
	cppVar_95636 = (cppVar_95636 & cppMask_un_8_);
	type_mem cppVar_95637 = IRAM;
	cppVar_95637.wr(cppVar_95629, cppVar_95636);
	BIT_VEC cppVar_95638 = ROM.rd(PC);
	bool cppVar_95640 = (cppVar_95638 == 5);
	BIT_VEC cppVar_95642 = PC + 1;
	cppVar_95642 = (cppVar_95642 & cppMask_un_16_);
	BIT_VEC cppVar_95643 = ROM.rd(cppVar_95642);
	BIT_VEC cppVar_95644 = (cppVar_95643 >> 7) & cppMask_un_1_;
	bool cppVar_95646 = (cppVar_95644 == 0);
	BIT_VEC cppVar_95647 = PC + 1;
	cppVar_95647 = (cppVar_95647 & cppMask_un_16_);
	BIT_VEC cppVar_95648 = ROM.rd(cppVar_95647);
	BIT_VEC cppVar_95649 = PC + 1;
	cppVar_95649 = (cppVar_95649 & cppMask_un_16_);
	BIT_VEC cppVar_95650 = ROM.rd(cppVar_95649);
	BIT_VEC cppVar_95651 = (cppVar_95650 >> 7) & cppMask_un_1_;
	bool cppVar_95653 = (cppVar_95651 == 0);
	BIT_VEC cppVar_95654 = PC + 1;
	cppVar_95654 = (cppVar_95654 & cppMask_un_16_);
	BIT_VEC cppVar_95655 = ROM.rd(cppVar_95654);
	BIT_VEC cppVar_95656 = IRAM.rd(cppVar_95655);
	BIT_VEC cppVar_95657 = PC + 1;
	cppVar_95657 = (cppVar_95657 & cppMask_un_16_);
	BIT_VEC cppVar_95658 = ROM.rd(cppVar_95657);
	bool cppVar_95660 = (cppVar_95658 == 128);
	BIT_VEC cppVar_95661 = PC + 1;
	cppVar_95661 = (cppVar_95661 & cppMask_un_16_);
	BIT_VEC cppVar_95662 = ROM.rd(cppVar_95661);
	bool cppVar_95664 = (cppVar_95662 == 129);
	BIT_VEC cppVar_95665 = PC + 1;
	cppVar_95665 = (cppVar_95665 & cppMask_un_16_);
	BIT_VEC cppVar_95666 = ROM.rd(cppVar_95665);
	bool cppVar_95668 = (cppVar_95666 == 130);
	BIT_VEC cppVar_95669 = PC + 1;
	cppVar_95669 = (cppVar_95669 & cppMask_un_16_);
	BIT_VEC cppVar_95670 = ROM.rd(cppVar_95669);
	bool cppVar_95672 = (cppVar_95670 == 131);
	BIT_VEC cppVar_95673 = PC + 1;
	cppVar_95673 = (cppVar_95673 & cppMask_un_16_);
	BIT_VEC cppVar_95674 = ROM.rd(cppVar_95673);
	bool cppVar_95676 = (cppVar_95674 == 135);
	BIT_VEC cppVar_95677 = PC + 1;
	cppVar_95677 = (cppVar_95677 & cppMask_un_16_);
	BIT_VEC cppVar_95678 = ROM.rd(cppVar_95677);
	bool cppVar_95680 = (cppVar_95678 == 136);
	BIT_VEC cppVar_95681 = PC + 1;
	cppVar_95681 = (cppVar_95681 & cppMask_un_16_);
	BIT_VEC cppVar_95682 = ROM.rd(cppVar_95681);
	bool cppVar_95684 = (cppVar_95682 == 137);
	BIT_VEC cppVar_95685 = PC + 1;
	cppVar_95685 = (cppVar_95685 & cppMask_un_16_);
	BIT_VEC cppVar_95686 = ROM.rd(cppVar_95685);
	bool cppVar_95688 = (cppVar_95686 == 138);
	BIT_VEC cppVar_95689 = PC + 1;
	cppVar_95689 = (cppVar_95689 & cppMask_un_16_);
	BIT_VEC cppVar_95690 = ROM.rd(cppVar_95689);
	bool cppVar_95692 = (cppVar_95690 == 140);
	BIT_VEC cppVar_95693 = PC + 1;
	cppVar_95693 = (cppVar_95693 & cppMask_un_16_);
	BIT_VEC cppVar_95694 = ROM.rd(cppVar_95693);
	bool cppVar_95696 = (cppVar_95694 == 139);
	BIT_VEC cppVar_95697 = PC + 1;
	cppVar_95697 = (cppVar_95697 & cppMask_un_16_);
	BIT_VEC cppVar_95698 = ROM.rd(cppVar_95697);
	bool cppVar_95700 = (cppVar_95698 == 141);
	BIT_VEC cppVar_95701 = PC + 1;
	cppVar_95701 = (cppVar_95701 & cppMask_un_16_);
	BIT_VEC cppVar_95702 = ROM.rd(cppVar_95701);
	bool cppVar_95704 = (cppVar_95702 == 144);
	BIT_VEC cppVar_95705 = PC + 1;
	cppVar_95705 = (cppVar_95705 & cppMask_un_16_);
	BIT_VEC cppVar_95706 = ROM.rd(cppVar_95705);
	bool cppVar_95708 = (cppVar_95706 == 152);
	BIT_VEC cppVar_95709 = PC + 1;
	cppVar_95709 = (cppVar_95709 & cppMask_un_16_);
	BIT_VEC cppVar_95710 = ROM.rd(cppVar_95709);
	bool cppVar_95712 = (cppVar_95710 == 153);
	BIT_VEC cppVar_95713 = PC + 1;
	cppVar_95713 = (cppVar_95713 & cppMask_un_16_);
	BIT_VEC cppVar_95714 = ROM.rd(cppVar_95713);
	bool cppVar_95716 = (cppVar_95714 == 160);
	BIT_VEC cppVar_95717 = PC + 1;
	cppVar_95717 = (cppVar_95717 & cppMask_un_16_);
	BIT_VEC cppVar_95718 = ROM.rd(cppVar_95717);
	bool cppVar_95720 = (cppVar_95718 == 168);
	BIT_VEC cppVar_95721 = PC + 1;
	cppVar_95721 = (cppVar_95721 & cppMask_un_16_);
	BIT_VEC cppVar_95722 = ROM.rd(cppVar_95721);
	bool cppVar_95724 = (cppVar_95722 == 176);
	BIT_VEC cppVar_95725 = PC + 1;
	cppVar_95725 = (cppVar_95725 & cppMask_un_16_);
	BIT_VEC cppVar_95726 = ROM.rd(cppVar_95725);
	bool cppVar_95728 = (cppVar_95726 == 184);
	BIT_VEC cppVar_95729 = PC + 1;
	cppVar_95729 = (cppVar_95729 & cppMask_un_16_);
	BIT_VEC cppVar_95730 = ROM.rd(cppVar_95729);
	bool cppVar_95732 = (cppVar_95730 == 208);
	BIT_VEC cppVar_95733 = PC + 1;
	cppVar_95733 = (cppVar_95733 & cppMask_un_16_);
	BIT_VEC cppVar_95734 = ROM.rd(cppVar_95733);
	bool cppVar_95736 = (cppVar_95734 == 224);
	BIT_VEC cppVar_95737 = PC + 1;
	cppVar_95737 = (cppVar_95737 & cppMask_un_16_);
	BIT_VEC cppVar_95738 = ROM.rd(cppVar_95737);
	bool cppVar_95740 = (cppVar_95738 == 240);
	BIT_VEC cppVar_95742 = (cppVar_95740) ? B : 0;
	BIT_VEC cppVar_95743 = (cppVar_95736) ? ACC : cppVar_95742;
	BIT_VEC cppVar_95744 = (cppVar_95732) ? PSW : cppVar_95743;
	BIT_VEC cppVar_95745 = (cppVar_95728) ? IP : cppVar_95744;
	BIT_VEC cppVar_95746 = (cppVar_95724) ? P3 : cppVar_95745;
	BIT_VEC cppVar_95747 = (cppVar_95720) ? IE : cppVar_95746;
	BIT_VEC cppVar_95748 = (cppVar_95716) ? P2 : cppVar_95747;
	BIT_VEC cppVar_95749 = (cppVar_95712) ? SBUF : cppVar_95748;
	BIT_VEC cppVar_95750 = (cppVar_95708) ? SCON : cppVar_95749;
	BIT_VEC cppVar_95751 = (cppVar_95704) ? P1 : cppVar_95750;
	BIT_VEC cppVar_95752 = (cppVar_95700) ? TH1 : cppVar_95751;
	BIT_VEC cppVar_95753 = (cppVar_95696) ? TL1 : cppVar_95752;
	BIT_VEC cppVar_95754 = (cppVar_95692) ? TH0 : cppVar_95753;
	BIT_VEC cppVar_95755 = (cppVar_95688) ? TL0 : cppVar_95754;
	BIT_VEC cppVar_95756 = (cppVar_95684) ? TMOD : cppVar_95755;
	BIT_VEC cppVar_95757 = (cppVar_95680) ? TCON : cppVar_95756;
	BIT_VEC cppVar_95758 = (cppVar_95676) ? PCON : cppVar_95757;
	BIT_VEC cppVar_95759 = (cppVar_95672) ? DPH : cppVar_95758;
	BIT_VEC cppVar_95760 = (cppVar_95668) ? DPL : cppVar_95759;
	BIT_VEC cppVar_95761 = (cppVar_95664) ? SP : cppVar_95760;
	BIT_VEC cppVar_95762 = (cppVar_95660) ? P0 : cppVar_95761;
	BIT_VEC cppVar_95763 = (cppVar_95653) ? cppVar_95656 : cppVar_95762;
	BIT_VEC cppVar_95765 = cppVar_95763 + 1;
	cppVar_95765 = (cppVar_95765 & cppMask_un_8_);
	type_mem cppVar_95766 = IRAM;
	cppVar_95766.wr(cppVar_95648, cppVar_95765);
	type_mem& cppVar_95767 = (cppVar_95646) ? cppVar_95766 : IRAM;
	type_mem& cppVar_95768 = (cppVar_95640) ? cppVar_95767 : IRAM;
	type_mem& cppVar_95769 = (cppVar_95623) ? cppVar_95637 : cppVar_95768;
	type_mem& cppVar_95770 = (cppVar_95606) ? cppVar_95620 : cppVar_95769;
	type_mem& cppVar_95771 = (cppVar_95450) ? cppVar_95603 : cppVar_95770;
	type_mem& cppVar_95772 = (cppVar_95294) ? cppVar_95447 : cppVar_95771;
	type_mem& cppVar_95773 = (cppVar_95138) ? cppVar_95291 : cppVar_95772;
	type_mem& cppVar_95774 = (cppVar_94982) ? cppVar_95135 : cppVar_95773;
	type_mem& cppVar_95775 = (cppVar_94826) ? cppVar_94979 : cppVar_95774;
	type_mem& cppVar_95776 = (cppVar_94670) ? cppVar_94823 : cppVar_95775;
	type_mem& cppVar_95777 = (cppVar_94514) ? cppVar_94667 : cppVar_95776;
	type_mem& cppVar_95778 = (cppVar_94358) ? cppVar_94511 : cppVar_95777;
	type_mem& cppVar_95779 = (cppVar_93911) ? cppVar_94355 : cppVar_95778;
	type_mem& cppVar_95780 = (cppVar_93892) ? cppVar_93904 : cppVar_95779;
	type_mem& cppVar_95781 = (cppVar_93849) ? cppVar_93861 : cppVar_95780;
	type_mem& cppVar_95782 = (cppVar_93719) ? cppVar_93846 : cppVar_95781;
	type_mem& cppVar_95783 = (cppVar_93698) ? cppVar_93712 : cppVar_95782;
	type_mem& cppVar_95784 = (cppVar_93681) ? cppVar_93695 : cppVar_95783;
	type_mem& cppVar_95785 = (cppVar_93525) ? cppVar_93678 : cppVar_95784;
	type_mem& cppVar_95786 = (cppVar_93365) ? cppVar_93518 : cppVar_95785;
	type_mem& cppVar_95787 = (cppVar_93205) ? cppVar_93358 : cppVar_95786;
	type_mem& cppVar_95788 = (cppVar_93045) ? cppVar_93198 : cppVar_95787;
	type_mem& cppVar_95789 = (cppVar_92885) ? cppVar_93038 : cppVar_95788;
	type_mem& cppVar_95790 = (cppVar_92725) ? cppVar_92878 : cppVar_95789;
	type_mem& cppVar_95791 = (cppVar_92565) ? cppVar_92718 : cppVar_95790;
	type_mem& cppVar_95792 = (cppVar_92405) ? cppVar_92558 : cppVar_95791;
	type_mem& cppVar_95793 = (cppVar_92272) ? cppVar_92398 : cppVar_95792;
	type_mem& cppVar_95794 = (cppVar_92140) ? cppVar_92269 : cppVar_95793;
	type_mem& cppVar_95795 = (cppVar_92011) ? cppVar_92137 : cppVar_95794;
	type_mem& cppVar_95796 = (cppVar_91879) ? cppVar_92008 : cppVar_95795;
	type_mem& cppVar_95797 = (cppVar_91750) ? cppVar_91876 : cppVar_95796;
	type_mem& cppVar_95798 = (cppVar_91618) ? cppVar_91747 : cppVar_95797;
	type_mem& cppVar_95799 = (cppVar_91602) ? cppVar_91615 : cppVar_95798;
	type_mem& cppVar_95800 = (cppVar_91589) ? cppVar_91599 : cppVar_95799;
	type_mem& cppVar_95801 = (cppVar_91576) ? cppVar_91586 : cppVar_95800;
	type_mem& cppVar_95802 = (cppVar_91557) ? cppVar_91573 : cppVar_95801;
	type_mem& cppVar_95803 = (cppVar_91538) ? cppVar_91554 : cppVar_95802;
	type_mem& cppVar_95804 = (cppVar_91519) ? cppVar_91535 : cppVar_95803;
	type_mem& cppVar_95805 = (cppVar_91500) ? cppVar_91516 : cppVar_95804;
	type_mem& cppVar_95806 = (cppVar_91481) ? cppVar_91497 : cppVar_95805;
	type_mem& cppVar_95807 = (cppVar_91462) ? cppVar_91478 : cppVar_95806;
	type_mem& cppVar_95808 = (cppVar_91443) ? cppVar_91459 : cppVar_95807;
	type_mem& cppVar_95809 = (cppVar_91424) ? cppVar_91440 : cppVar_95808;
	type_mem& cppVar_95810 = (cppVar_91295) ? cppVar_91421 : cppVar_95809;
	type_mem& cppVar_95811 = (cppVar_91275) ? cppVar_91292 : cppVar_95810;
	type_mem& cppVar_95812 = (cppVar_91255) ? cppVar_91272 : cppVar_95811;
	type_mem& cppVar_95813 = (cppVar_91102) ? cppVar_91252 : cppVar_95812;
	type_mem& cppVar_95814 = (cppVar_90949) ? cppVar_91099 : cppVar_95813;
	type_mem& cppVar_95815 = (cppVar_90796) ? cppVar_90946 : cppVar_95814;
	type_mem& cppVar_95816 = (cppVar_90643) ? cppVar_90793 : cppVar_95815;
	type_mem& cppVar_95817 = (cppVar_90490) ? cppVar_90640 : cppVar_95816;
	type_mem& cppVar_95818 = (cppVar_90337) ? cppVar_90487 : cppVar_95817;
	type_mem& cppVar_95819 = (cppVar_90184) ? cppVar_90334 : cppVar_95818;
	type_mem& cppVar_95820 = (cppVar_90031) ? cppVar_90181 : cppVar_95819;
	type_mem& cppVar_95821 = (cppVar_89584) ? cppVar_90028 : cppVar_95820;
	type_mem& cppVar_95822 = (cppVar_89458) ? cppVar_89581 : cppVar_95821;
	type_mem& cppVar_95823 = (cppVar_89332) ? cppVar_89455 : cppVar_95822;
	type_mem& cppVar_95824 = (cppVar_89200) ? cppVar_89329 : cppVar_95823;
	type_mem& cppVar_95825 = (cppVar_89068) ? cppVar_89197 : cppVar_95824;
	type_mem& cppVar_95826 = (cppVar_88936) ? cppVar_89065 : cppVar_95825;
	type_mem& cppVar_95827 = (cppVar_88804) ? cppVar_88933 : cppVar_95826;
	type_mem& cppVar_95828 = (cppVar_88672) ? cppVar_88801 : cppVar_95827;
	type_mem& cppVar_95829 = (cppVar_88540) ? cppVar_88669 : cppVar_95828;
	type_mem& cppVar_95830 = (cppVar_88408) ? cppVar_88537 : cppVar_95829;
	type_mem& cppVar_95831 = (cppVar_88276) ? cppVar_88405 : cppVar_95830;
	type_mem& cppVar_95832 = (cppVar_87431) ? cppVar_88273 : cppVar_95831;
	type_mem& cppVar_95833 = (cppVar_87309) ? cppVar_87428 : cppVar_95832;
	type_mem& cppVar_95834 = (cppVar_87296) ? cppVar_87306 : cppVar_95833;
	type_mem& cppVar_95835 = (cppVar_87282) ? cppVar_87289 : cppVar_95834;
	type_mem& cppVar_95836 = (cppVar_87268) ? cppVar_87275 : cppVar_95835;
	type_mem& cppVar_95837 = (cppVar_87248) ? cppVar_87261 : cppVar_95836;
	type_mem& cppVar_95838 = (cppVar_87228) ? cppVar_87241 : cppVar_95837;
	type_mem& cppVar_95839 = (cppVar_87208) ? cppVar_87221 : cppVar_95838;
	type_mem& cppVar_95840 = (cppVar_87188) ? cppVar_87201 : cppVar_95839;
	type_mem& cppVar_95841 = (cppVar_87168) ? cppVar_87181 : cppVar_95840;
	type_mem& cppVar_95842 = (cppVar_87148) ? cppVar_87161 : cppVar_95841;
	type_mem& cppVar_95843 = (cppVar_87128) ? cppVar_87141 : cppVar_95842;
	type_mem& cppVar_95844 = (cppVar_87108) ? cppVar_87121 : cppVar_95843;
	type_mem& cppVar_95845 = (cppVar_87090) ? cppVar_87101 : cppVar_95844;
	type_mem& cppVar_95846 = (cppVar_86643) ? cppVar_87087 : cppVar_95845;
	type_mem& cppVar_95847 = (cppVar_86625) ? cppVar_86640 : cppVar_95846;
	type_mem& cppVar_95848 = (cppVar_86607) ? cppVar_86622 : cppVar_95847;
	return cppVar_95848;
}
