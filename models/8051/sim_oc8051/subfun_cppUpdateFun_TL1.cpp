#include "common.hpp"
#include "model_oc8051_class.hpp"

BIT_VEC model_oc8051::cppUpdateFun_TL1()
{
	BIT_VEC cppVar_79692 = ROM.rd(PC);
	bool cppVar_79694 = (cppVar_79692 == 208);
	BIT_VEC cppVar_79696 = PC + 1;
	cppVar_79696 = (cppVar_79696 & cppMask_un_16_);
	BIT_VEC cppVar_79697 = ROM.rd(cppVar_79696);
	bool cppVar_79699 = (cppVar_79697 == 139);
	BIT_VEC cppVar_79700 = IRAM.rd(SP);
	BIT_VEC cppVar_79701 = (cppVar_79699) ? cppVar_79700 : TL1;
	BIT_VEC cppVar_79702 = ROM.rd(PC);
	bool cppVar_79704 = (cppVar_79702 == 245);
	BIT_VEC cppVar_79705 = ROM.rd(PC);
	bool cppVar_79707 = (cppVar_79705 == 197);
	bool cppVar_79708 = cppVar_79704 || cppVar_79707;
	BIT_VEC cppVar_79710 = PC + 1;
	cppVar_79710 = (cppVar_79710 & cppMask_un_16_);
	BIT_VEC cppVar_79711 = ROM.rd(cppVar_79710);
	bool cppVar_79713 = (cppVar_79711 == 139);
	BIT_VEC cppVar_79714 = (cppVar_79713) ? ACC : TL1;
	BIT_VEC cppVar_79715 = ROM.rd(PC);
	bool cppVar_79717 = (cppVar_79715 == 143);
	BIT_VEC cppVar_79719 = PC + 1;
	cppVar_79719 = (cppVar_79719 & cppMask_un_16_);
	BIT_VEC cppVar_79720 = ROM.rd(cppVar_79719);
	bool cppVar_79722 = (cppVar_79720 == 139);
	BIT_VEC cppVar_79724 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79726 = (cppVar_79724 << 3) | 7;
	cppVar_79726 = (cppVar_79726 & cppMask_un_5_);
	BIT_VEC cppVar_79727 = (0 << 5) | cppVar_79726;
	cppVar_79727 = (cppVar_79727 & cppMask_un_8_);
	BIT_VEC cppVar_79728 = (cppVar_79727 >> 7) & cppMask_un_1_;
	bool cppVar_79730 = (cppVar_79728 == 0);
	BIT_VEC cppVar_79731 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79732 = (cppVar_79731 << 3) | 7;
	cppVar_79732 = (cppVar_79732 & cppMask_un_5_);
	BIT_VEC cppVar_79733 = (0 << 5) | cppVar_79732;
	cppVar_79733 = (cppVar_79733 & cppMask_un_8_);
	BIT_VEC cppVar_79734 = IRAM.rd(cppVar_79733);
	BIT_VEC cppVar_79735 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79736 = (cppVar_79735 << 3) | 7;
	cppVar_79736 = (cppVar_79736 & cppMask_un_5_);
	BIT_VEC cppVar_79737 = (0 << 5) | cppVar_79736;
	cppVar_79737 = (cppVar_79737 & cppMask_un_8_);
	bool cppVar_79739 = (cppVar_79737 == 128);
	BIT_VEC cppVar_79740 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79741 = (cppVar_79740 << 3) | 7;
	cppVar_79741 = (cppVar_79741 & cppMask_un_5_);
	BIT_VEC cppVar_79742 = (0 << 5) | cppVar_79741;
	cppVar_79742 = (cppVar_79742 & cppMask_un_8_);
	bool cppVar_79744 = (cppVar_79742 == 129);
	BIT_VEC cppVar_79745 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79746 = (cppVar_79745 << 3) | 7;
	cppVar_79746 = (cppVar_79746 & cppMask_un_5_);
	BIT_VEC cppVar_79747 = (0 << 5) | cppVar_79746;
	cppVar_79747 = (cppVar_79747 & cppMask_un_8_);
	bool cppVar_79749 = (cppVar_79747 == 130);
	BIT_VEC cppVar_79750 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79751 = (cppVar_79750 << 3) | 7;
	cppVar_79751 = (cppVar_79751 & cppMask_un_5_);
	BIT_VEC cppVar_79752 = (0 << 5) | cppVar_79751;
	cppVar_79752 = (cppVar_79752 & cppMask_un_8_);
	bool cppVar_79754 = (cppVar_79752 == 131);
	BIT_VEC cppVar_79755 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79756 = (cppVar_79755 << 3) | 7;
	cppVar_79756 = (cppVar_79756 & cppMask_un_5_);
	BIT_VEC cppVar_79757 = (0 << 5) | cppVar_79756;
	cppVar_79757 = (cppVar_79757 & cppMask_un_8_);
	bool cppVar_79759 = (cppVar_79757 == 135);
	BIT_VEC cppVar_79760 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79761 = (cppVar_79760 << 3) | 7;
	cppVar_79761 = (cppVar_79761 & cppMask_un_5_);
	BIT_VEC cppVar_79762 = (0 << 5) | cppVar_79761;
	cppVar_79762 = (cppVar_79762 & cppMask_un_8_);
	bool cppVar_79764 = (cppVar_79762 == 136);
	BIT_VEC cppVar_79765 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79766 = (cppVar_79765 << 3) | 7;
	cppVar_79766 = (cppVar_79766 & cppMask_un_5_);
	BIT_VEC cppVar_79767 = (0 << 5) | cppVar_79766;
	cppVar_79767 = (cppVar_79767 & cppMask_un_8_);
	bool cppVar_79769 = (cppVar_79767 == 137);
	BIT_VEC cppVar_79770 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79771 = (cppVar_79770 << 3) | 7;
	cppVar_79771 = (cppVar_79771 & cppMask_un_5_);
	BIT_VEC cppVar_79772 = (0 << 5) | cppVar_79771;
	cppVar_79772 = (cppVar_79772 & cppMask_un_8_);
	bool cppVar_79774 = (cppVar_79772 == 138);
	BIT_VEC cppVar_79775 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79776 = (cppVar_79775 << 3) | 7;
	cppVar_79776 = (cppVar_79776 & cppMask_un_5_);
	BIT_VEC cppVar_79777 = (0 << 5) | cppVar_79776;
	cppVar_79777 = (cppVar_79777 & cppMask_un_8_);
	bool cppVar_79779 = (cppVar_79777 == 140);
	BIT_VEC cppVar_79780 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79781 = (cppVar_79780 << 3) | 7;
	cppVar_79781 = (cppVar_79781 & cppMask_un_5_);
	BIT_VEC cppVar_79782 = (0 << 5) | cppVar_79781;
	cppVar_79782 = (cppVar_79782 & cppMask_un_8_);
	bool cppVar_79784 = (cppVar_79782 == 139);
	BIT_VEC cppVar_79785 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79786 = (cppVar_79785 << 3) | 7;
	cppVar_79786 = (cppVar_79786 & cppMask_un_5_);
	BIT_VEC cppVar_79787 = (0 << 5) | cppVar_79786;
	cppVar_79787 = (cppVar_79787 & cppMask_un_8_);
	bool cppVar_79789 = (cppVar_79787 == 141);
	BIT_VEC cppVar_79790 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79791 = (cppVar_79790 << 3) | 7;
	cppVar_79791 = (cppVar_79791 & cppMask_un_5_);
	BIT_VEC cppVar_79792 = (0 << 5) | cppVar_79791;
	cppVar_79792 = (cppVar_79792 & cppMask_un_8_);
	bool cppVar_79794 = (cppVar_79792 == 144);
	BIT_VEC cppVar_79795 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79796 = (cppVar_79795 << 3) | 7;
	cppVar_79796 = (cppVar_79796 & cppMask_un_5_);
	BIT_VEC cppVar_79797 = (0 << 5) | cppVar_79796;
	cppVar_79797 = (cppVar_79797 & cppMask_un_8_);
	bool cppVar_79799 = (cppVar_79797 == 152);
	BIT_VEC cppVar_79800 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79801 = (cppVar_79800 << 3) | 7;
	cppVar_79801 = (cppVar_79801 & cppMask_un_5_);
	BIT_VEC cppVar_79802 = (0 << 5) | cppVar_79801;
	cppVar_79802 = (cppVar_79802 & cppMask_un_8_);
	bool cppVar_79804 = (cppVar_79802 == 153);
	BIT_VEC cppVar_79805 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79806 = (cppVar_79805 << 3) | 7;
	cppVar_79806 = (cppVar_79806 & cppMask_un_5_);
	BIT_VEC cppVar_79807 = (0 << 5) | cppVar_79806;
	cppVar_79807 = (cppVar_79807 & cppMask_un_8_);
	bool cppVar_79809 = (cppVar_79807 == 160);
	BIT_VEC cppVar_79810 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79811 = (cppVar_79810 << 3) | 7;
	cppVar_79811 = (cppVar_79811 & cppMask_un_5_);
	BIT_VEC cppVar_79812 = (0 << 5) | cppVar_79811;
	cppVar_79812 = (cppVar_79812 & cppMask_un_8_);
	bool cppVar_79814 = (cppVar_79812 == 168);
	BIT_VEC cppVar_79815 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79816 = (cppVar_79815 << 3) | 7;
	cppVar_79816 = (cppVar_79816 & cppMask_un_5_);
	BIT_VEC cppVar_79817 = (0 << 5) | cppVar_79816;
	cppVar_79817 = (cppVar_79817 & cppMask_un_8_);
	bool cppVar_79819 = (cppVar_79817 == 176);
	BIT_VEC cppVar_79820 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79821 = (cppVar_79820 << 3) | 7;
	cppVar_79821 = (cppVar_79821 & cppMask_un_5_);
	BIT_VEC cppVar_79822 = (0 << 5) | cppVar_79821;
	cppVar_79822 = (cppVar_79822 & cppMask_un_8_);
	bool cppVar_79824 = (cppVar_79822 == 184);
	BIT_VEC cppVar_79825 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79826 = (cppVar_79825 << 3) | 7;
	cppVar_79826 = (cppVar_79826 & cppMask_un_5_);
	BIT_VEC cppVar_79827 = (0 << 5) | cppVar_79826;
	cppVar_79827 = (cppVar_79827 & cppMask_un_8_);
	bool cppVar_79829 = (cppVar_79827 == 208);
	BIT_VEC cppVar_79830 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79831 = (cppVar_79830 << 3) | 7;
	cppVar_79831 = (cppVar_79831 & cppMask_un_5_);
	BIT_VEC cppVar_79832 = (0 << 5) | cppVar_79831;
	cppVar_79832 = (cppVar_79832 & cppMask_un_8_);
	bool cppVar_79834 = (cppVar_79832 == 224);
	BIT_VEC cppVar_79835 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79836 = (cppVar_79835 << 3) | 7;
	cppVar_79836 = (cppVar_79836 & cppMask_un_5_);
	BIT_VEC cppVar_79837 = (0 << 5) | cppVar_79836;
	cppVar_79837 = (cppVar_79837 & cppMask_un_8_);
	bool cppVar_79839 = (cppVar_79837 == 240);
	BIT_VEC cppVar_79841 = (cppVar_79839) ? B : 0;
	BIT_VEC cppVar_79842 = (cppVar_79834) ? ACC : cppVar_79841;
	BIT_VEC cppVar_79843 = (cppVar_79829) ? PSW : cppVar_79842;
	BIT_VEC cppVar_79844 = (cppVar_79824) ? IP : cppVar_79843;
	BIT_VEC cppVar_79845 = (cppVar_79819) ? P3 : cppVar_79844;
	BIT_VEC cppVar_79846 = (cppVar_79814) ? IE : cppVar_79845;
	BIT_VEC cppVar_79847 = (cppVar_79809) ? P2 : cppVar_79846;
	BIT_VEC cppVar_79848 = (cppVar_79804) ? SBUF : cppVar_79847;
	BIT_VEC cppVar_79849 = (cppVar_79799) ? SCON : cppVar_79848;
	BIT_VEC cppVar_79850 = (cppVar_79794) ? P1 : cppVar_79849;
	BIT_VEC cppVar_79851 = (cppVar_79789) ? TH1 : cppVar_79850;
	BIT_VEC cppVar_79852 = (cppVar_79784) ? TL1 : cppVar_79851;
	BIT_VEC cppVar_79853 = (cppVar_79779) ? TH0 : cppVar_79852;
	BIT_VEC cppVar_79854 = (cppVar_79774) ? TL0 : cppVar_79853;
	BIT_VEC cppVar_79855 = (cppVar_79769) ? TMOD : cppVar_79854;
	BIT_VEC cppVar_79856 = (cppVar_79764) ? TCON : cppVar_79855;
	BIT_VEC cppVar_79857 = (cppVar_79759) ? PCON : cppVar_79856;
	BIT_VEC cppVar_79858 = (cppVar_79754) ? DPH : cppVar_79857;
	BIT_VEC cppVar_79859 = (cppVar_79749) ? DPL : cppVar_79858;
	BIT_VEC cppVar_79860 = (cppVar_79744) ? SP : cppVar_79859;
	BIT_VEC cppVar_79861 = (cppVar_79739) ? P0 : cppVar_79860;
	BIT_VEC cppVar_79862 = (cppVar_79730) ? cppVar_79734 : cppVar_79861;
	BIT_VEC cppVar_79863 = (cppVar_79722) ? cppVar_79862 : TL1;
	BIT_VEC cppVar_79864 = ROM.rd(PC);
	bool cppVar_79866 = (cppVar_79864 == 142);
	BIT_VEC cppVar_79868 = PC + 1;
	cppVar_79868 = (cppVar_79868 & cppMask_un_16_);
	BIT_VEC cppVar_79869 = ROM.rd(cppVar_79868);
	bool cppVar_79871 = (cppVar_79869 == 139);
	BIT_VEC cppVar_79873 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79875 = (cppVar_79873 << 3) | 6;
	cppVar_79875 = (cppVar_79875 & cppMask_un_5_);
	BIT_VEC cppVar_79876 = (0 << 5) | cppVar_79875;
	cppVar_79876 = (cppVar_79876 & cppMask_un_8_);
	BIT_VEC cppVar_79877 = (cppVar_79876 >> 7) & cppMask_un_1_;
	bool cppVar_79879 = (cppVar_79877 == 0);
	BIT_VEC cppVar_79880 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79881 = (cppVar_79880 << 3) | 6;
	cppVar_79881 = (cppVar_79881 & cppMask_un_5_);
	BIT_VEC cppVar_79882 = (0 << 5) | cppVar_79881;
	cppVar_79882 = (cppVar_79882 & cppMask_un_8_);
	BIT_VEC cppVar_79883 = IRAM.rd(cppVar_79882);
	BIT_VEC cppVar_79884 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79885 = (cppVar_79884 << 3) | 6;
	cppVar_79885 = (cppVar_79885 & cppMask_un_5_);
	BIT_VEC cppVar_79886 = (0 << 5) | cppVar_79885;
	cppVar_79886 = (cppVar_79886 & cppMask_un_8_);
	bool cppVar_79888 = (cppVar_79886 == 128);
	BIT_VEC cppVar_79889 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79890 = (cppVar_79889 << 3) | 6;
	cppVar_79890 = (cppVar_79890 & cppMask_un_5_);
	BIT_VEC cppVar_79891 = (0 << 5) | cppVar_79890;
	cppVar_79891 = (cppVar_79891 & cppMask_un_8_);
	bool cppVar_79893 = (cppVar_79891 == 129);
	BIT_VEC cppVar_79894 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79895 = (cppVar_79894 << 3) | 6;
	cppVar_79895 = (cppVar_79895 & cppMask_un_5_);
	BIT_VEC cppVar_79896 = (0 << 5) | cppVar_79895;
	cppVar_79896 = (cppVar_79896 & cppMask_un_8_);
	bool cppVar_79898 = (cppVar_79896 == 130);
	BIT_VEC cppVar_79899 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79900 = (cppVar_79899 << 3) | 6;
	cppVar_79900 = (cppVar_79900 & cppMask_un_5_);
	BIT_VEC cppVar_79901 = (0 << 5) | cppVar_79900;
	cppVar_79901 = (cppVar_79901 & cppMask_un_8_);
	bool cppVar_79903 = (cppVar_79901 == 131);
	BIT_VEC cppVar_79904 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79905 = (cppVar_79904 << 3) | 6;
	cppVar_79905 = (cppVar_79905 & cppMask_un_5_);
	BIT_VEC cppVar_79906 = (0 << 5) | cppVar_79905;
	cppVar_79906 = (cppVar_79906 & cppMask_un_8_);
	bool cppVar_79908 = (cppVar_79906 == 135);
	BIT_VEC cppVar_79909 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79910 = (cppVar_79909 << 3) | 6;
	cppVar_79910 = (cppVar_79910 & cppMask_un_5_);
	BIT_VEC cppVar_79911 = (0 << 5) | cppVar_79910;
	cppVar_79911 = (cppVar_79911 & cppMask_un_8_);
	bool cppVar_79913 = (cppVar_79911 == 136);
	BIT_VEC cppVar_79914 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79915 = (cppVar_79914 << 3) | 6;
	cppVar_79915 = (cppVar_79915 & cppMask_un_5_);
	BIT_VEC cppVar_79916 = (0 << 5) | cppVar_79915;
	cppVar_79916 = (cppVar_79916 & cppMask_un_8_);
	bool cppVar_79918 = (cppVar_79916 == 137);
	BIT_VEC cppVar_79919 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79920 = (cppVar_79919 << 3) | 6;
	cppVar_79920 = (cppVar_79920 & cppMask_un_5_);
	BIT_VEC cppVar_79921 = (0 << 5) | cppVar_79920;
	cppVar_79921 = (cppVar_79921 & cppMask_un_8_);
	bool cppVar_79923 = (cppVar_79921 == 138);
	BIT_VEC cppVar_79924 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79925 = (cppVar_79924 << 3) | 6;
	cppVar_79925 = (cppVar_79925 & cppMask_un_5_);
	BIT_VEC cppVar_79926 = (0 << 5) | cppVar_79925;
	cppVar_79926 = (cppVar_79926 & cppMask_un_8_);
	bool cppVar_79928 = (cppVar_79926 == 140);
	BIT_VEC cppVar_79929 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79930 = (cppVar_79929 << 3) | 6;
	cppVar_79930 = (cppVar_79930 & cppMask_un_5_);
	BIT_VEC cppVar_79931 = (0 << 5) | cppVar_79930;
	cppVar_79931 = (cppVar_79931 & cppMask_un_8_);
	bool cppVar_79933 = (cppVar_79931 == 139);
	BIT_VEC cppVar_79934 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79935 = (cppVar_79934 << 3) | 6;
	cppVar_79935 = (cppVar_79935 & cppMask_un_5_);
	BIT_VEC cppVar_79936 = (0 << 5) | cppVar_79935;
	cppVar_79936 = (cppVar_79936 & cppMask_un_8_);
	bool cppVar_79938 = (cppVar_79936 == 141);
	BIT_VEC cppVar_79939 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79940 = (cppVar_79939 << 3) | 6;
	cppVar_79940 = (cppVar_79940 & cppMask_un_5_);
	BIT_VEC cppVar_79941 = (0 << 5) | cppVar_79940;
	cppVar_79941 = (cppVar_79941 & cppMask_un_8_);
	bool cppVar_79943 = (cppVar_79941 == 144);
	BIT_VEC cppVar_79944 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79945 = (cppVar_79944 << 3) | 6;
	cppVar_79945 = (cppVar_79945 & cppMask_un_5_);
	BIT_VEC cppVar_79946 = (0 << 5) | cppVar_79945;
	cppVar_79946 = (cppVar_79946 & cppMask_un_8_);
	bool cppVar_79948 = (cppVar_79946 == 152);
	BIT_VEC cppVar_79949 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79950 = (cppVar_79949 << 3) | 6;
	cppVar_79950 = (cppVar_79950 & cppMask_un_5_);
	BIT_VEC cppVar_79951 = (0 << 5) | cppVar_79950;
	cppVar_79951 = (cppVar_79951 & cppMask_un_8_);
	bool cppVar_79953 = (cppVar_79951 == 153);
	BIT_VEC cppVar_79954 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79955 = (cppVar_79954 << 3) | 6;
	cppVar_79955 = (cppVar_79955 & cppMask_un_5_);
	BIT_VEC cppVar_79956 = (0 << 5) | cppVar_79955;
	cppVar_79956 = (cppVar_79956 & cppMask_un_8_);
	bool cppVar_79958 = (cppVar_79956 == 160);
	BIT_VEC cppVar_79959 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79960 = (cppVar_79959 << 3) | 6;
	cppVar_79960 = (cppVar_79960 & cppMask_un_5_);
	BIT_VEC cppVar_79961 = (0 << 5) | cppVar_79960;
	cppVar_79961 = (cppVar_79961 & cppMask_un_8_);
	bool cppVar_79963 = (cppVar_79961 == 168);
	BIT_VEC cppVar_79964 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79965 = (cppVar_79964 << 3) | 6;
	cppVar_79965 = (cppVar_79965 & cppMask_un_5_);
	BIT_VEC cppVar_79966 = (0 << 5) | cppVar_79965;
	cppVar_79966 = (cppVar_79966 & cppMask_un_8_);
	bool cppVar_79968 = (cppVar_79966 == 176);
	BIT_VEC cppVar_79969 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79970 = (cppVar_79969 << 3) | 6;
	cppVar_79970 = (cppVar_79970 & cppMask_un_5_);
	BIT_VEC cppVar_79971 = (0 << 5) | cppVar_79970;
	cppVar_79971 = (cppVar_79971 & cppMask_un_8_);
	bool cppVar_79973 = (cppVar_79971 == 184);
	BIT_VEC cppVar_79974 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79975 = (cppVar_79974 << 3) | 6;
	cppVar_79975 = (cppVar_79975 & cppMask_un_5_);
	BIT_VEC cppVar_79976 = (0 << 5) | cppVar_79975;
	cppVar_79976 = (cppVar_79976 & cppMask_un_8_);
	bool cppVar_79978 = (cppVar_79976 == 208);
	BIT_VEC cppVar_79979 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79980 = (cppVar_79979 << 3) | 6;
	cppVar_79980 = (cppVar_79980 & cppMask_un_5_);
	BIT_VEC cppVar_79981 = (0 << 5) | cppVar_79980;
	cppVar_79981 = (cppVar_79981 & cppMask_un_8_);
	bool cppVar_79983 = (cppVar_79981 == 224);
	BIT_VEC cppVar_79984 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_79985 = (cppVar_79984 << 3) | 6;
	cppVar_79985 = (cppVar_79985 & cppMask_un_5_);
	BIT_VEC cppVar_79986 = (0 << 5) | cppVar_79985;
	cppVar_79986 = (cppVar_79986 & cppMask_un_8_);
	bool cppVar_79988 = (cppVar_79986 == 240);
	BIT_VEC cppVar_79990 = (cppVar_79988) ? B : 0;
	BIT_VEC cppVar_79991 = (cppVar_79983) ? ACC : cppVar_79990;
	BIT_VEC cppVar_79992 = (cppVar_79978) ? PSW : cppVar_79991;
	BIT_VEC cppVar_79993 = (cppVar_79973) ? IP : cppVar_79992;
	BIT_VEC cppVar_79994 = (cppVar_79968) ? P3 : cppVar_79993;
	BIT_VEC cppVar_79995 = (cppVar_79963) ? IE : cppVar_79994;
	BIT_VEC cppVar_79996 = (cppVar_79958) ? P2 : cppVar_79995;
	BIT_VEC cppVar_79997 = (cppVar_79953) ? SBUF : cppVar_79996;
	BIT_VEC cppVar_79998 = (cppVar_79948) ? SCON : cppVar_79997;
	BIT_VEC cppVar_79999 = (cppVar_79943) ? P1 : cppVar_79998;
	BIT_VEC cppVar_80000 = (cppVar_79938) ? TH1 : cppVar_79999;
	BIT_VEC cppVar_80001 = (cppVar_79933) ? TL1 : cppVar_80000;
	BIT_VEC cppVar_80002 = (cppVar_79928) ? TH0 : cppVar_80001;
	BIT_VEC cppVar_80003 = (cppVar_79923) ? TL0 : cppVar_80002;
	BIT_VEC cppVar_80004 = (cppVar_79918) ? TMOD : cppVar_80003;
	BIT_VEC cppVar_80005 = (cppVar_79913) ? TCON : cppVar_80004;
	BIT_VEC cppVar_80006 = (cppVar_79908) ? PCON : cppVar_80005;
	BIT_VEC cppVar_80007 = (cppVar_79903) ? DPH : cppVar_80006;
	BIT_VEC cppVar_80008 = (cppVar_79898) ? DPL : cppVar_80007;
	BIT_VEC cppVar_80009 = (cppVar_79893) ? SP : cppVar_80008;
	BIT_VEC cppVar_80010 = (cppVar_79888) ? P0 : cppVar_80009;
	BIT_VEC cppVar_80011 = (cppVar_79879) ? cppVar_79883 : cppVar_80010;
	BIT_VEC cppVar_80012 = (cppVar_79871) ? cppVar_80011 : TL1;
	BIT_VEC cppVar_80013 = ROM.rd(PC);
	bool cppVar_80015 = (cppVar_80013 == 141);
	BIT_VEC cppVar_80017 = PC + 1;
	cppVar_80017 = (cppVar_80017 & cppMask_un_16_);
	BIT_VEC cppVar_80018 = ROM.rd(cppVar_80017);
	bool cppVar_80020 = (cppVar_80018 == 139);
	BIT_VEC cppVar_80022 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80024 = (cppVar_80022 << 3) | 5;
	cppVar_80024 = (cppVar_80024 & cppMask_un_5_);
	BIT_VEC cppVar_80025 = (0 << 5) | cppVar_80024;
	cppVar_80025 = (cppVar_80025 & cppMask_un_8_);
	BIT_VEC cppVar_80026 = (cppVar_80025 >> 7) & cppMask_un_1_;
	bool cppVar_80028 = (cppVar_80026 == 0);
	BIT_VEC cppVar_80029 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80030 = (cppVar_80029 << 3) | 5;
	cppVar_80030 = (cppVar_80030 & cppMask_un_5_);
	BIT_VEC cppVar_80031 = (0 << 5) | cppVar_80030;
	cppVar_80031 = (cppVar_80031 & cppMask_un_8_);
	BIT_VEC cppVar_80032 = IRAM.rd(cppVar_80031);
	BIT_VEC cppVar_80033 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80034 = (cppVar_80033 << 3) | 5;
	cppVar_80034 = (cppVar_80034 & cppMask_un_5_);
	BIT_VEC cppVar_80035 = (0 << 5) | cppVar_80034;
	cppVar_80035 = (cppVar_80035 & cppMask_un_8_);
	bool cppVar_80037 = (cppVar_80035 == 128);
	BIT_VEC cppVar_80038 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80039 = (cppVar_80038 << 3) | 5;
	cppVar_80039 = (cppVar_80039 & cppMask_un_5_);
	BIT_VEC cppVar_80040 = (0 << 5) | cppVar_80039;
	cppVar_80040 = (cppVar_80040 & cppMask_un_8_);
	bool cppVar_80042 = (cppVar_80040 == 129);
	BIT_VEC cppVar_80043 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80044 = (cppVar_80043 << 3) | 5;
	cppVar_80044 = (cppVar_80044 & cppMask_un_5_);
	BIT_VEC cppVar_80045 = (0 << 5) | cppVar_80044;
	cppVar_80045 = (cppVar_80045 & cppMask_un_8_);
	bool cppVar_80047 = (cppVar_80045 == 130);
	BIT_VEC cppVar_80048 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80049 = (cppVar_80048 << 3) | 5;
	cppVar_80049 = (cppVar_80049 & cppMask_un_5_);
	BIT_VEC cppVar_80050 = (0 << 5) | cppVar_80049;
	cppVar_80050 = (cppVar_80050 & cppMask_un_8_);
	bool cppVar_80052 = (cppVar_80050 == 131);
	BIT_VEC cppVar_80053 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80054 = (cppVar_80053 << 3) | 5;
	cppVar_80054 = (cppVar_80054 & cppMask_un_5_);
	BIT_VEC cppVar_80055 = (0 << 5) | cppVar_80054;
	cppVar_80055 = (cppVar_80055 & cppMask_un_8_);
	bool cppVar_80057 = (cppVar_80055 == 135);
	BIT_VEC cppVar_80058 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80059 = (cppVar_80058 << 3) | 5;
	cppVar_80059 = (cppVar_80059 & cppMask_un_5_);
	BIT_VEC cppVar_80060 = (0 << 5) | cppVar_80059;
	cppVar_80060 = (cppVar_80060 & cppMask_un_8_);
	bool cppVar_80062 = (cppVar_80060 == 136);
	BIT_VEC cppVar_80063 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80064 = (cppVar_80063 << 3) | 5;
	cppVar_80064 = (cppVar_80064 & cppMask_un_5_);
	BIT_VEC cppVar_80065 = (0 << 5) | cppVar_80064;
	cppVar_80065 = (cppVar_80065 & cppMask_un_8_);
	bool cppVar_80067 = (cppVar_80065 == 137);
	BIT_VEC cppVar_80068 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80069 = (cppVar_80068 << 3) | 5;
	cppVar_80069 = (cppVar_80069 & cppMask_un_5_);
	BIT_VEC cppVar_80070 = (0 << 5) | cppVar_80069;
	cppVar_80070 = (cppVar_80070 & cppMask_un_8_);
	bool cppVar_80072 = (cppVar_80070 == 138);
	BIT_VEC cppVar_80073 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80074 = (cppVar_80073 << 3) | 5;
	cppVar_80074 = (cppVar_80074 & cppMask_un_5_);
	BIT_VEC cppVar_80075 = (0 << 5) | cppVar_80074;
	cppVar_80075 = (cppVar_80075 & cppMask_un_8_);
	bool cppVar_80077 = (cppVar_80075 == 140);
	BIT_VEC cppVar_80078 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80079 = (cppVar_80078 << 3) | 5;
	cppVar_80079 = (cppVar_80079 & cppMask_un_5_);
	BIT_VEC cppVar_80080 = (0 << 5) | cppVar_80079;
	cppVar_80080 = (cppVar_80080 & cppMask_un_8_);
	bool cppVar_80082 = (cppVar_80080 == 139);
	BIT_VEC cppVar_80083 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80084 = (cppVar_80083 << 3) | 5;
	cppVar_80084 = (cppVar_80084 & cppMask_un_5_);
	BIT_VEC cppVar_80085 = (0 << 5) | cppVar_80084;
	cppVar_80085 = (cppVar_80085 & cppMask_un_8_);
	bool cppVar_80087 = (cppVar_80085 == 141);
	BIT_VEC cppVar_80088 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80089 = (cppVar_80088 << 3) | 5;
	cppVar_80089 = (cppVar_80089 & cppMask_un_5_);
	BIT_VEC cppVar_80090 = (0 << 5) | cppVar_80089;
	cppVar_80090 = (cppVar_80090 & cppMask_un_8_);
	bool cppVar_80092 = (cppVar_80090 == 144);
	BIT_VEC cppVar_80093 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80094 = (cppVar_80093 << 3) | 5;
	cppVar_80094 = (cppVar_80094 & cppMask_un_5_);
	BIT_VEC cppVar_80095 = (0 << 5) | cppVar_80094;
	cppVar_80095 = (cppVar_80095 & cppMask_un_8_);
	bool cppVar_80097 = (cppVar_80095 == 152);
	BIT_VEC cppVar_80098 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80099 = (cppVar_80098 << 3) | 5;
	cppVar_80099 = (cppVar_80099 & cppMask_un_5_);
	BIT_VEC cppVar_80100 = (0 << 5) | cppVar_80099;
	cppVar_80100 = (cppVar_80100 & cppMask_un_8_);
	bool cppVar_80102 = (cppVar_80100 == 153);
	BIT_VEC cppVar_80103 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80104 = (cppVar_80103 << 3) | 5;
	cppVar_80104 = (cppVar_80104 & cppMask_un_5_);
	BIT_VEC cppVar_80105 = (0 << 5) | cppVar_80104;
	cppVar_80105 = (cppVar_80105 & cppMask_un_8_);
	bool cppVar_80107 = (cppVar_80105 == 160);
	BIT_VEC cppVar_80108 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80109 = (cppVar_80108 << 3) | 5;
	cppVar_80109 = (cppVar_80109 & cppMask_un_5_);
	BIT_VEC cppVar_80110 = (0 << 5) | cppVar_80109;
	cppVar_80110 = (cppVar_80110 & cppMask_un_8_);
	bool cppVar_80112 = (cppVar_80110 == 168);
	BIT_VEC cppVar_80113 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80114 = (cppVar_80113 << 3) | 5;
	cppVar_80114 = (cppVar_80114 & cppMask_un_5_);
	BIT_VEC cppVar_80115 = (0 << 5) | cppVar_80114;
	cppVar_80115 = (cppVar_80115 & cppMask_un_8_);
	bool cppVar_80117 = (cppVar_80115 == 176);
	BIT_VEC cppVar_80118 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80119 = (cppVar_80118 << 3) | 5;
	cppVar_80119 = (cppVar_80119 & cppMask_un_5_);
	BIT_VEC cppVar_80120 = (0 << 5) | cppVar_80119;
	cppVar_80120 = (cppVar_80120 & cppMask_un_8_);
	bool cppVar_80122 = (cppVar_80120 == 184);
	BIT_VEC cppVar_80123 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80124 = (cppVar_80123 << 3) | 5;
	cppVar_80124 = (cppVar_80124 & cppMask_un_5_);
	BIT_VEC cppVar_80125 = (0 << 5) | cppVar_80124;
	cppVar_80125 = (cppVar_80125 & cppMask_un_8_);
	bool cppVar_80127 = (cppVar_80125 == 208);
	BIT_VEC cppVar_80128 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80129 = (cppVar_80128 << 3) | 5;
	cppVar_80129 = (cppVar_80129 & cppMask_un_5_);
	BIT_VEC cppVar_80130 = (0 << 5) | cppVar_80129;
	cppVar_80130 = (cppVar_80130 & cppMask_un_8_);
	bool cppVar_80132 = (cppVar_80130 == 224);
	BIT_VEC cppVar_80133 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80134 = (cppVar_80133 << 3) | 5;
	cppVar_80134 = (cppVar_80134 & cppMask_un_5_);
	BIT_VEC cppVar_80135 = (0 << 5) | cppVar_80134;
	cppVar_80135 = (cppVar_80135 & cppMask_un_8_);
	bool cppVar_80137 = (cppVar_80135 == 240);
	BIT_VEC cppVar_80139 = (cppVar_80137) ? B : 0;
	BIT_VEC cppVar_80140 = (cppVar_80132) ? ACC : cppVar_80139;
	BIT_VEC cppVar_80141 = (cppVar_80127) ? PSW : cppVar_80140;
	BIT_VEC cppVar_80142 = (cppVar_80122) ? IP : cppVar_80141;
	BIT_VEC cppVar_80143 = (cppVar_80117) ? P3 : cppVar_80142;
	BIT_VEC cppVar_80144 = (cppVar_80112) ? IE : cppVar_80143;
	BIT_VEC cppVar_80145 = (cppVar_80107) ? P2 : cppVar_80144;
	BIT_VEC cppVar_80146 = (cppVar_80102) ? SBUF : cppVar_80145;
	BIT_VEC cppVar_80147 = (cppVar_80097) ? SCON : cppVar_80146;
	BIT_VEC cppVar_80148 = (cppVar_80092) ? P1 : cppVar_80147;
	BIT_VEC cppVar_80149 = (cppVar_80087) ? TH1 : cppVar_80148;
	BIT_VEC cppVar_80150 = (cppVar_80082) ? TL1 : cppVar_80149;
	BIT_VEC cppVar_80151 = (cppVar_80077) ? TH0 : cppVar_80150;
	BIT_VEC cppVar_80152 = (cppVar_80072) ? TL0 : cppVar_80151;
	BIT_VEC cppVar_80153 = (cppVar_80067) ? TMOD : cppVar_80152;
	BIT_VEC cppVar_80154 = (cppVar_80062) ? TCON : cppVar_80153;
	BIT_VEC cppVar_80155 = (cppVar_80057) ? PCON : cppVar_80154;
	BIT_VEC cppVar_80156 = (cppVar_80052) ? DPH : cppVar_80155;
	BIT_VEC cppVar_80157 = (cppVar_80047) ? DPL : cppVar_80156;
	BIT_VEC cppVar_80158 = (cppVar_80042) ? SP : cppVar_80157;
	BIT_VEC cppVar_80159 = (cppVar_80037) ? P0 : cppVar_80158;
	BIT_VEC cppVar_80160 = (cppVar_80028) ? cppVar_80032 : cppVar_80159;
	BIT_VEC cppVar_80161 = (cppVar_80020) ? cppVar_80160 : TL1;
	BIT_VEC cppVar_80162 = ROM.rd(PC);
	bool cppVar_80164 = (cppVar_80162 == 140);
	BIT_VEC cppVar_80166 = PC + 1;
	cppVar_80166 = (cppVar_80166 & cppMask_un_16_);
	BIT_VEC cppVar_80167 = ROM.rd(cppVar_80166);
	bool cppVar_80169 = (cppVar_80167 == 139);
	BIT_VEC cppVar_80171 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80173 = (cppVar_80171 << 3) | 4;
	cppVar_80173 = (cppVar_80173 & cppMask_un_5_);
	BIT_VEC cppVar_80174 = (0 << 5) | cppVar_80173;
	cppVar_80174 = (cppVar_80174 & cppMask_un_8_);
	BIT_VEC cppVar_80175 = (cppVar_80174 >> 7) & cppMask_un_1_;
	bool cppVar_80177 = (cppVar_80175 == 0);
	BIT_VEC cppVar_80178 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80179 = (cppVar_80178 << 3) | 4;
	cppVar_80179 = (cppVar_80179 & cppMask_un_5_);
	BIT_VEC cppVar_80180 = (0 << 5) | cppVar_80179;
	cppVar_80180 = (cppVar_80180 & cppMask_un_8_);
	BIT_VEC cppVar_80181 = IRAM.rd(cppVar_80180);
	BIT_VEC cppVar_80182 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80183 = (cppVar_80182 << 3) | 4;
	cppVar_80183 = (cppVar_80183 & cppMask_un_5_);
	BIT_VEC cppVar_80184 = (0 << 5) | cppVar_80183;
	cppVar_80184 = (cppVar_80184 & cppMask_un_8_);
	bool cppVar_80186 = (cppVar_80184 == 128);
	BIT_VEC cppVar_80187 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80188 = (cppVar_80187 << 3) | 4;
	cppVar_80188 = (cppVar_80188 & cppMask_un_5_);
	BIT_VEC cppVar_80189 = (0 << 5) | cppVar_80188;
	cppVar_80189 = (cppVar_80189 & cppMask_un_8_);
	bool cppVar_80191 = (cppVar_80189 == 129);
	BIT_VEC cppVar_80192 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80193 = (cppVar_80192 << 3) | 4;
	cppVar_80193 = (cppVar_80193 & cppMask_un_5_);
	BIT_VEC cppVar_80194 = (0 << 5) | cppVar_80193;
	cppVar_80194 = (cppVar_80194 & cppMask_un_8_);
	bool cppVar_80196 = (cppVar_80194 == 130);
	BIT_VEC cppVar_80197 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80198 = (cppVar_80197 << 3) | 4;
	cppVar_80198 = (cppVar_80198 & cppMask_un_5_);
	BIT_VEC cppVar_80199 = (0 << 5) | cppVar_80198;
	cppVar_80199 = (cppVar_80199 & cppMask_un_8_);
	bool cppVar_80201 = (cppVar_80199 == 131);
	BIT_VEC cppVar_80202 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80203 = (cppVar_80202 << 3) | 4;
	cppVar_80203 = (cppVar_80203 & cppMask_un_5_);
	BIT_VEC cppVar_80204 = (0 << 5) | cppVar_80203;
	cppVar_80204 = (cppVar_80204 & cppMask_un_8_);
	bool cppVar_80206 = (cppVar_80204 == 135);
	BIT_VEC cppVar_80207 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80208 = (cppVar_80207 << 3) | 4;
	cppVar_80208 = (cppVar_80208 & cppMask_un_5_);
	BIT_VEC cppVar_80209 = (0 << 5) | cppVar_80208;
	cppVar_80209 = (cppVar_80209 & cppMask_un_8_);
	bool cppVar_80211 = (cppVar_80209 == 136);
	BIT_VEC cppVar_80212 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80213 = (cppVar_80212 << 3) | 4;
	cppVar_80213 = (cppVar_80213 & cppMask_un_5_);
	BIT_VEC cppVar_80214 = (0 << 5) | cppVar_80213;
	cppVar_80214 = (cppVar_80214 & cppMask_un_8_);
	bool cppVar_80216 = (cppVar_80214 == 137);
	BIT_VEC cppVar_80217 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80218 = (cppVar_80217 << 3) | 4;
	cppVar_80218 = (cppVar_80218 & cppMask_un_5_);
	BIT_VEC cppVar_80219 = (0 << 5) | cppVar_80218;
	cppVar_80219 = (cppVar_80219 & cppMask_un_8_);
	bool cppVar_80221 = (cppVar_80219 == 138);
	BIT_VEC cppVar_80222 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80223 = (cppVar_80222 << 3) | 4;
	cppVar_80223 = (cppVar_80223 & cppMask_un_5_);
	BIT_VEC cppVar_80224 = (0 << 5) | cppVar_80223;
	cppVar_80224 = (cppVar_80224 & cppMask_un_8_);
	bool cppVar_80226 = (cppVar_80224 == 140);
	BIT_VEC cppVar_80227 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80228 = (cppVar_80227 << 3) | 4;
	cppVar_80228 = (cppVar_80228 & cppMask_un_5_);
	BIT_VEC cppVar_80229 = (0 << 5) | cppVar_80228;
	cppVar_80229 = (cppVar_80229 & cppMask_un_8_);
	bool cppVar_80231 = (cppVar_80229 == 139);
	BIT_VEC cppVar_80232 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80233 = (cppVar_80232 << 3) | 4;
	cppVar_80233 = (cppVar_80233 & cppMask_un_5_);
	BIT_VEC cppVar_80234 = (0 << 5) | cppVar_80233;
	cppVar_80234 = (cppVar_80234 & cppMask_un_8_);
	bool cppVar_80236 = (cppVar_80234 == 141);
	BIT_VEC cppVar_80237 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80238 = (cppVar_80237 << 3) | 4;
	cppVar_80238 = (cppVar_80238 & cppMask_un_5_);
	BIT_VEC cppVar_80239 = (0 << 5) | cppVar_80238;
	cppVar_80239 = (cppVar_80239 & cppMask_un_8_);
	bool cppVar_80241 = (cppVar_80239 == 144);
	BIT_VEC cppVar_80242 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80243 = (cppVar_80242 << 3) | 4;
	cppVar_80243 = (cppVar_80243 & cppMask_un_5_);
	BIT_VEC cppVar_80244 = (0 << 5) | cppVar_80243;
	cppVar_80244 = (cppVar_80244 & cppMask_un_8_);
	bool cppVar_80246 = (cppVar_80244 == 152);
	BIT_VEC cppVar_80247 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80248 = (cppVar_80247 << 3) | 4;
	cppVar_80248 = (cppVar_80248 & cppMask_un_5_);
	BIT_VEC cppVar_80249 = (0 << 5) | cppVar_80248;
	cppVar_80249 = (cppVar_80249 & cppMask_un_8_);
	bool cppVar_80251 = (cppVar_80249 == 153);
	BIT_VEC cppVar_80252 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80253 = (cppVar_80252 << 3) | 4;
	cppVar_80253 = (cppVar_80253 & cppMask_un_5_);
	BIT_VEC cppVar_80254 = (0 << 5) | cppVar_80253;
	cppVar_80254 = (cppVar_80254 & cppMask_un_8_);
	bool cppVar_80256 = (cppVar_80254 == 160);
	BIT_VEC cppVar_80257 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80258 = (cppVar_80257 << 3) | 4;
	cppVar_80258 = (cppVar_80258 & cppMask_un_5_);
	BIT_VEC cppVar_80259 = (0 << 5) | cppVar_80258;
	cppVar_80259 = (cppVar_80259 & cppMask_un_8_);
	bool cppVar_80261 = (cppVar_80259 == 168);
	BIT_VEC cppVar_80262 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80263 = (cppVar_80262 << 3) | 4;
	cppVar_80263 = (cppVar_80263 & cppMask_un_5_);
	BIT_VEC cppVar_80264 = (0 << 5) | cppVar_80263;
	cppVar_80264 = (cppVar_80264 & cppMask_un_8_);
	bool cppVar_80266 = (cppVar_80264 == 176);
	BIT_VEC cppVar_80267 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80268 = (cppVar_80267 << 3) | 4;
	cppVar_80268 = (cppVar_80268 & cppMask_un_5_);
	BIT_VEC cppVar_80269 = (0 << 5) | cppVar_80268;
	cppVar_80269 = (cppVar_80269 & cppMask_un_8_);
	bool cppVar_80271 = (cppVar_80269 == 184);
	BIT_VEC cppVar_80272 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80273 = (cppVar_80272 << 3) | 4;
	cppVar_80273 = (cppVar_80273 & cppMask_un_5_);
	BIT_VEC cppVar_80274 = (0 << 5) | cppVar_80273;
	cppVar_80274 = (cppVar_80274 & cppMask_un_8_);
	bool cppVar_80276 = (cppVar_80274 == 208);
	BIT_VEC cppVar_80277 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80278 = (cppVar_80277 << 3) | 4;
	cppVar_80278 = (cppVar_80278 & cppMask_un_5_);
	BIT_VEC cppVar_80279 = (0 << 5) | cppVar_80278;
	cppVar_80279 = (cppVar_80279 & cppMask_un_8_);
	bool cppVar_80281 = (cppVar_80279 == 224);
	BIT_VEC cppVar_80282 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80283 = (cppVar_80282 << 3) | 4;
	cppVar_80283 = (cppVar_80283 & cppMask_un_5_);
	BIT_VEC cppVar_80284 = (0 << 5) | cppVar_80283;
	cppVar_80284 = (cppVar_80284 & cppMask_un_8_);
	bool cppVar_80286 = (cppVar_80284 == 240);
	BIT_VEC cppVar_80288 = (cppVar_80286) ? B : 0;
	BIT_VEC cppVar_80289 = (cppVar_80281) ? ACC : cppVar_80288;
	BIT_VEC cppVar_80290 = (cppVar_80276) ? PSW : cppVar_80289;
	BIT_VEC cppVar_80291 = (cppVar_80271) ? IP : cppVar_80290;
	BIT_VEC cppVar_80292 = (cppVar_80266) ? P3 : cppVar_80291;
	BIT_VEC cppVar_80293 = (cppVar_80261) ? IE : cppVar_80292;
	BIT_VEC cppVar_80294 = (cppVar_80256) ? P2 : cppVar_80293;
	BIT_VEC cppVar_80295 = (cppVar_80251) ? SBUF : cppVar_80294;
	BIT_VEC cppVar_80296 = (cppVar_80246) ? SCON : cppVar_80295;
	BIT_VEC cppVar_80297 = (cppVar_80241) ? P1 : cppVar_80296;
	BIT_VEC cppVar_80298 = (cppVar_80236) ? TH1 : cppVar_80297;
	BIT_VEC cppVar_80299 = (cppVar_80231) ? TL1 : cppVar_80298;
	BIT_VEC cppVar_80300 = (cppVar_80226) ? TH0 : cppVar_80299;
	BIT_VEC cppVar_80301 = (cppVar_80221) ? TL0 : cppVar_80300;
	BIT_VEC cppVar_80302 = (cppVar_80216) ? TMOD : cppVar_80301;
	BIT_VEC cppVar_80303 = (cppVar_80211) ? TCON : cppVar_80302;
	BIT_VEC cppVar_80304 = (cppVar_80206) ? PCON : cppVar_80303;
	BIT_VEC cppVar_80305 = (cppVar_80201) ? DPH : cppVar_80304;
	BIT_VEC cppVar_80306 = (cppVar_80196) ? DPL : cppVar_80305;
	BIT_VEC cppVar_80307 = (cppVar_80191) ? SP : cppVar_80306;
	BIT_VEC cppVar_80308 = (cppVar_80186) ? P0 : cppVar_80307;
	BIT_VEC cppVar_80309 = (cppVar_80177) ? cppVar_80181 : cppVar_80308;
	BIT_VEC cppVar_80310 = (cppVar_80169) ? cppVar_80309 : TL1;
	BIT_VEC cppVar_80311 = ROM.rd(PC);
	bool cppVar_80313 = (cppVar_80311 == 139);
	BIT_VEC cppVar_80315 = PC + 1;
	cppVar_80315 = (cppVar_80315 & cppMask_un_16_);
	BIT_VEC cppVar_80316 = ROM.rd(cppVar_80315);
	bool cppVar_80318 = (cppVar_80316 == 139);
	BIT_VEC cppVar_80320 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80322 = (cppVar_80320 << 3) | 3;
	cppVar_80322 = (cppVar_80322 & cppMask_un_5_);
	BIT_VEC cppVar_80323 = (0 << 5) | cppVar_80322;
	cppVar_80323 = (cppVar_80323 & cppMask_un_8_);
	BIT_VEC cppVar_80324 = (cppVar_80323 >> 7) & cppMask_un_1_;
	bool cppVar_80326 = (cppVar_80324 == 0);
	BIT_VEC cppVar_80327 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80328 = (cppVar_80327 << 3) | 3;
	cppVar_80328 = (cppVar_80328 & cppMask_un_5_);
	BIT_VEC cppVar_80329 = (0 << 5) | cppVar_80328;
	cppVar_80329 = (cppVar_80329 & cppMask_un_8_);
	BIT_VEC cppVar_80330 = IRAM.rd(cppVar_80329);
	BIT_VEC cppVar_80331 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80332 = (cppVar_80331 << 3) | 3;
	cppVar_80332 = (cppVar_80332 & cppMask_un_5_);
	BIT_VEC cppVar_80333 = (0 << 5) | cppVar_80332;
	cppVar_80333 = (cppVar_80333 & cppMask_un_8_);
	bool cppVar_80335 = (cppVar_80333 == 128);
	BIT_VEC cppVar_80336 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80337 = (cppVar_80336 << 3) | 3;
	cppVar_80337 = (cppVar_80337 & cppMask_un_5_);
	BIT_VEC cppVar_80338 = (0 << 5) | cppVar_80337;
	cppVar_80338 = (cppVar_80338 & cppMask_un_8_);
	bool cppVar_80340 = (cppVar_80338 == 129);
	BIT_VEC cppVar_80341 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80342 = (cppVar_80341 << 3) | 3;
	cppVar_80342 = (cppVar_80342 & cppMask_un_5_);
	BIT_VEC cppVar_80343 = (0 << 5) | cppVar_80342;
	cppVar_80343 = (cppVar_80343 & cppMask_un_8_);
	bool cppVar_80345 = (cppVar_80343 == 130);
	BIT_VEC cppVar_80346 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80347 = (cppVar_80346 << 3) | 3;
	cppVar_80347 = (cppVar_80347 & cppMask_un_5_);
	BIT_VEC cppVar_80348 = (0 << 5) | cppVar_80347;
	cppVar_80348 = (cppVar_80348 & cppMask_un_8_);
	bool cppVar_80350 = (cppVar_80348 == 131);
	BIT_VEC cppVar_80351 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80352 = (cppVar_80351 << 3) | 3;
	cppVar_80352 = (cppVar_80352 & cppMask_un_5_);
	BIT_VEC cppVar_80353 = (0 << 5) | cppVar_80352;
	cppVar_80353 = (cppVar_80353 & cppMask_un_8_);
	bool cppVar_80355 = (cppVar_80353 == 135);
	BIT_VEC cppVar_80356 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80357 = (cppVar_80356 << 3) | 3;
	cppVar_80357 = (cppVar_80357 & cppMask_un_5_);
	BIT_VEC cppVar_80358 = (0 << 5) | cppVar_80357;
	cppVar_80358 = (cppVar_80358 & cppMask_un_8_);
	bool cppVar_80360 = (cppVar_80358 == 136);
	BIT_VEC cppVar_80361 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80362 = (cppVar_80361 << 3) | 3;
	cppVar_80362 = (cppVar_80362 & cppMask_un_5_);
	BIT_VEC cppVar_80363 = (0 << 5) | cppVar_80362;
	cppVar_80363 = (cppVar_80363 & cppMask_un_8_);
	bool cppVar_80365 = (cppVar_80363 == 137);
	BIT_VEC cppVar_80366 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80367 = (cppVar_80366 << 3) | 3;
	cppVar_80367 = (cppVar_80367 & cppMask_un_5_);
	BIT_VEC cppVar_80368 = (0 << 5) | cppVar_80367;
	cppVar_80368 = (cppVar_80368 & cppMask_un_8_);
	bool cppVar_80370 = (cppVar_80368 == 138);
	BIT_VEC cppVar_80371 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80372 = (cppVar_80371 << 3) | 3;
	cppVar_80372 = (cppVar_80372 & cppMask_un_5_);
	BIT_VEC cppVar_80373 = (0 << 5) | cppVar_80372;
	cppVar_80373 = (cppVar_80373 & cppMask_un_8_);
	bool cppVar_80375 = (cppVar_80373 == 140);
	BIT_VEC cppVar_80376 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80377 = (cppVar_80376 << 3) | 3;
	cppVar_80377 = (cppVar_80377 & cppMask_un_5_);
	BIT_VEC cppVar_80378 = (0 << 5) | cppVar_80377;
	cppVar_80378 = (cppVar_80378 & cppMask_un_8_);
	bool cppVar_80380 = (cppVar_80378 == 139);
	BIT_VEC cppVar_80381 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80382 = (cppVar_80381 << 3) | 3;
	cppVar_80382 = (cppVar_80382 & cppMask_un_5_);
	BIT_VEC cppVar_80383 = (0 << 5) | cppVar_80382;
	cppVar_80383 = (cppVar_80383 & cppMask_un_8_);
	bool cppVar_80385 = (cppVar_80383 == 141);
	BIT_VEC cppVar_80386 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80387 = (cppVar_80386 << 3) | 3;
	cppVar_80387 = (cppVar_80387 & cppMask_un_5_);
	BIT_VEC cppVar_80388 = (0 << 5) | cppVar_80387;
	cppVar_80388 = (cppVar_80388 & cppMask_un_8_);
	bool cppVar_80390 = (cppVar_80388 == 144);
	BIT_VEC cppVar_80391 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80392 = (cppVar_80391 << 3) | 3;
	cppVar_80392 = (cppVar_80392 & cppMask_un_5_);
	BIT_VEC cppVar_80393 = (0 << 5) | cppVar_80392;
	cppVar_80393 = (cppVar_80393 & cppMask_un_8_);
	bool cppVar_80395 = (cppVar_80393 == 152);
	BIT_VEC cppVar_80396 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80397 = (cppVar_80396 << 3) | 3;
	cppVar_80397 = (cppVar_80397 & cppMask_un_5_);
	BIT_VEC cppVar_80398 = (0 << 5) | cppVar_80397;
	cppVar_80398 = (cppVar_80398 & cppMask_un_8_);
	bool cppVar_80400 = (cppVar_80398 == 153);
	BIT_VEC cppVar_80401 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80402 = (cppVar_80401 << 3) | 3;
	cppVar_80402 = (cppVar_80402 & cppMask_un_5_);
	BIT_VEC cppVar_80403 = (0 << 5) | cppVar_80402;
	cppVar_80403 = (cppVar_80403 & cppMask_un_8_);
	bool cppVar_80405 = (cppVar_80403 == 160);
	BIT_VEC cppVar_80406 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80407 = (cppVar_80406 << 3) | 3;
	cppVar_80407 = (cppVar_80407 & cppMask_un_5_);
	BIT_VEC cppVar_80408 = (0 << 5) | cppVar_80407;
	cppVar_80408 = (cppVar_80408 & cppMask_un_8_);
	bool cppVar_80410 = (cppVar_80408 == 168);
	BIT_VEC cppVar_80411 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80412 = (cppVar_80411 << 3) | 3;
	cppVar_80412 = (cppVar_80412 & cppMask_un_5_);
	BIT_VEC cppVar_80413 = (0 << 5) | cppVar_80412;
	cppVar_80413 = (cppVar_80413 & cppMask_un_8_);
	bool cppVar_80415 = (cppVar_80413 == 176);
	BIT_VEC cppVar_80416 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80417 = (cppVar_80416 << 3) | 3;
	cppVar_80417 = (cppVar_80417 & cppMask_un_5_);
	BIT_VEC cppVar_80418 = (0 << 5) | cppVar_80417;
	cppVar_80418 = (cppVar_80418 & cppMask_un_8_);
	bool cppVar_80420 = (cppVar_80418 == 184);
	BIT_VEC cppVar_80421 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80422 = (cppVar_80421 << 3) | 3;
	cppVar_80422 = (cppVar_80422 & cppMask_un_5_);
	BIT_VEC cppVar_80423 = (0 << 5) | cppVar_80422;
	cppVar_80423 = (cppVar_80423 & cppMask_un_8_);
	bool cppVar_80425 = (cppVar_80423 == 208);
	BIT_VEC cppVar_80426 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80427 = (cppVar_80426 << 3) | 3;
	cppVar_80427 = (cppVar_80427 & cppMask_un_5_);
	BIT_VEC cppVar_80428 = (0 << 5) | cppVar_80427;
	cppVar_80428 = (cppVar_80428 & cppMask_un_8_);
	bool cppVar_80430 = (cppVar_80428 == 224);
	BIT_VEC cppVar_80431 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80432 = (cppVar_80431 << 3) | 3;
	cppVar_80432 = (cppVar_80432 & cppMask_un_5_);
	BIT_VEC cppVar_80433 = (0 << 5) | cppVar_80432;
	cppVar_80433 = (cppVar_80433 & cppMask_un_8_);
	bool cppVar_80435 = (cppVar_80433 == 240);
	BIT_VEC cppVar_80437 = (cppVar_80435) ? B : 0;
	BIT_VEC cppVar_80438 = (cppVar_80430) ? ACC : cppVar_80437;
	BIT_VEC cppVar_80439 = (cppVar_80425) ? PSW : cppVar_80438;
	BIT_VEC cppVar_80440 = (cppVar_80420) ? IP : cppVar_80439;
	BIT_VEC cppVar_80441 = (cppVar_80415) ? P3 : cppVar_80440;
	BIT_VEC cppVar_80442 = (cppVar_80410) ? IE : cppVar_80441;
	BIT_VEC cppVar_80443 = (cppVar_80405) ? P2 : cppVar_80442;
	BIT_VEC cppVar_80444 = (cppVar_80400) ? SBUF : cppVar_80443;
	BIT_VEC cppVar_80445 = (cppVar_80395) ? SCON : cppVar_80444;
	BIT_VEC cppVar_80446 = (cppVar_80390) ? P1 : cppVar_80445;
	BIT_VEC cppVar_80447 = (cppVar_80385) ? TH1 : cppVar_80446;
	BIT_VEC cppVar_80448 = (cppVar_80380) ? TL1 : cppVar_80447;
	BIT_VEC cppVar_80449 = (cppVar_80375) ? TH0 : cppVar_80448;
	BIT_VEC cppVar_80450 = (cppVar_80370) ? TL0 : cppVar_80449;
	BIT_VEC cppVar_80451 = (cppVar_80365) ? TMOD : cppVar_80450;
	BIT_VEC cppVar_80452 = (cppVar_80360) ? TCON : cppVar_80451;
	BIT_VEC cppVar_80453 = (cppVar_80355) ? PCON : cppVar_80452;
	BIT_VEC cppVar_80454 = (cppVar_80350) ? DPH : cppVar_80453;
	BIT_VEC cppVar_80455 = (cppVar_80345) ? DPL : cppVar_80454;
	BIT_VEC cppVar_80456 = (cppVar_80340) ? SP : cppVar_80455;
	BIT_VEC cppVar_80457 = (cppVar_80335) ? P0 : cppVar_80456;
	BIT_VEC cppVar_80458 = (cppVar_80326) ? cppVar_80330 : cppVar_80457;
	BIT_VEC cppVar_80459 = (cppVar_80318) ? cppVar_80458 : TL1;
	BIT_VEC cppVar_80460 = ROM.rd(PC);
	bool cppVar_80462 = (cppVar_80460 == 138);
	BIT_VEC cppVar_80464 = PC + 1;
	cppVar_80464 = (cppVar_80464 & cppMask_un_16_);
	BIT_VEC cppVar_80465 = ROM.rd(cppVar_80464);
	bool cppVar_80467 = (cppVar_80465 == 139);
	BIT_VEC cppVar_80469 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80471 = (cppVar_80469 << 3) | 2;
	cppVar_80471 = (cppVar_80471 & cppMask_un_5_);
	BIT_VEC cppVar_80472 = (0 << 5) | cppVar_80471;
	cppVar_80472 = (cppVar_80472 & cppMask_un_8_);
	BIT_VEC cppVar_80473 = (cppVar_80472 >> 7) & cppMask_un_1_;
	bool cppVar_80475 = (cppVar_80473 == 0);
	BIT_VEC cppVar_80476 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80477 = (cppVar_80476 << 3) | 2;
	cppVar_80477 = (cppVar_80477 & cppMask_un_5_);
	BIT_VEC cppVar_80478 = (0 << 5) | cppVar_80477;
	cppVar_80478 = (cppVar_80478 & cppMask_un_8_);
	BIT_VEC cppVar_80479 = IRAM.rd(cppVar_80478);
	BIT_VEC cppVar_80480 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80481 = (cppVar_80480 << 3) | 2;
	cppVar_80481 = (cppVar_80481 & cppMask_un_5_);
	BIT_VEC cppVar_80482 = (0 << 5) | cppVar_80481;
	cppVar_80482 = (cppVar_80482 & cppMask_un_8_);
	bool cppVar_80484 = (cppVar_80482 == 128);
	BIT_VEC cppVar_80485 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80486 = (cppVar_80485 << 3) | 2;
	cppVar_80486 = (cppVar_80486 & cppMask_un_5_);
	BIT_VEC cppVar_80487 = (0 << 5) | cppVar_80486;
	cppVar_80487 = (cppVar_80487 & cppMask_un_8_);
	bool cppVar_80489 = (cppVar_80487 == 129);
	BIT_VEC cppVar_80490 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80491 = (cppVar_80490 << 3) | 2;
	cppVar_80491 = (cppVar_80491 & cppMask_un_5_);
	BIT_VEC cppVar_80492 = (0 << 5) | cppVar_80491;
	cppVar_80492 = (cppVar_80492 & cppMask_un_8_);
	bool cppVar_80494 = (cppVar_80492 == 130);
	BIT_VEC cppVar_80495 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80496 = (cppVar_80495 << 3) | 2;
	cppVar_80496 = (cppVar_80496 & cppMask_un_5_);
	BIT_VEC cppVar_80497 = (0 << 5) | cppVar_80496;
	cppVar_80497 = (cppVar_80497 & cppMask_un_8_);
	bool cppVar_80499 = (cppVar_80497 == 131);
	BIT_VEC cppVar_80500 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80501 = (cppVar_80500 << 3) | 2;
	cppVar_80501 = (cppVar_80501 & cppMask_un_5_);
	BIT_VEC cppVar_80502 = (0 << 5) | cppVar_80501;
	cppVar_80502 = (cppVar_80502 & cppMask_un_8_);
	bool cppVar_80504 = (cppVar_80502 == 135);
	BIT_VEC cppVar_80505 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80506 = (cppVar_80505 << 3) | 2;
	cppVar_80506 = (cppVar_80506 & cppMask_un_5_);
	BIT_VEC cppVar_80507 = (0 << 5) | cppVar_80506;
	cppVar_80507 = (cppVar_80507 & cppMask_un_8_);
	bool cppVar_80509 = (cppVar_80507 == 136);
	BIT_VEC cppVar_80510 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80511 = (cppVar_80510 << 3) | 2;
	cppVar_80511 = (cppVar_80511 & cppMask_un_5_);
	BIT_VEC cppVar_80512 = (0 << 5) | cppVar_80511;
	cppVar_80512 = (cppVar_80512 & cppMask_un_8_);
	bool cppVar_80514 = (cppVar_80512 == 137);
	BIT_VEC cppVar_80515 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80516 = (cppVar_80515 << 3) | 2;
	cppVar_80516 = (cppVar_80516 & cppMask_un_5_);
	BIT_VEC cppVar_80517 = (0 << 5) | cppVar_80516;
	cppVar_80517 = (cppVar_80517 & cppMask_un_8_);
	bool cppVar_80519 = (cppVar_80517 == 138);
	BIT_VEC cppVar_80520 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80521 = (cppVar_80520 << 3) | 2;
	cppVar_80521 = (cppVar_80521 & cppMask_un_5_);
	BIT_VEC cppVar_80522 = (0 << 5) | cppVar_80521;
	cppVar_80522 = (cppVar_80522 & cppMask_un_8_);
	bool cppVar_80524 = (cppVar_80522 == 140);
	BIT_VEC cppVar_80525 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80526 = (cppVar_80525 << 3) | 2;
	cppVar_80526 = (cppVar_80526 & cppMask_un_5_);
	BIT_VEC cppVar_80527 = (0 << 5) | cppVar_80526;
	cppVar_80527 = (cppVar_80527 & cppMask_un_8_);
	bool cppVar_80529 = (cppVar_80527 == 139);
	BIT_VEC cppVar_80530 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80531 = (cppVar_80530 << 3) | 2;
	cppVar_80531 = (cppVar_80531 & cppMask_un_5_);
	BIT_VEC cppVar_80532 = (0 << 5) | cppVar_80531;
	cppVar_80532 = (cppVar_80532 & cppMask_un_8_);
	bool cppVar_80534 = (cppVar_80532 == 141);
	BIT_VEC cppVar_80535 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80536 = (cppVar_80535 << 3) | 2;
	cppVar_80536 = (cppVar_80536 & cppMask_un_5_);
	BIT_VEC cppVar_80537 = (0 << 5) | cppVar_80536;
	cppVar_80537 = (cppVar_80537 & cppMask_un_8_);
	bool cppVar_80539 = (cppVar_80537 == 144);
	BIT_VEC cppVar_80540 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80541 = (cppVar_80540 << 3) | 2;
	cppVar_80541 = (cppVar_80541 & cppMask_un_5_);
	BIT_VEC cppVar_80542 = (0 << 5) | cppVar_80541;
	cppVar_80542 = (cppVar_80542 & cppMask_un_8_);
	bool cppVar_80544 = (cppVar_80542 == 152);
	BIT_VEC cppVar_80545 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80546 = (cppVar_80545 << 3) | 2;
	cppVar_80546 = (cppVar_80546 & cppMask_un_5_);
	BIT_VEC cppVar_80547 = (0 << 5) | cppVar_80546;
	cppVar_80547 = (cppVar_80547 & cppMask_un_8_);
	bool cppVar_80549 = (cppVar_80547 == 153);
	BIT_VEC cppVar_80550 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80551 = (cppVar_80550 << 3) | 2;
	cppVar_80551 = (cppVar_80551 & cppMask_un_5_);
	BIT_VEC cppVar_80552 = (0 << 5) | cppVar_80551;
	cppVar_80552 = (cppVar_80552 & cppMask_un_8_);
	bool cppVar_80554 = (cppVar_80552 == 160);
	BIT_VEC cppVar_80555 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80556 = (cppVar_80555 << 3) | 2;
	cppVar_80556 = (cppVar_80556 & cppMask_un_5_);
	BIT_VEC cppVar_80557 = (0 << 5) | cppVar_80556;
	cppVar_80557 = (cppVar_80557 & cppMask_un_8_);
	bool cppVar_80559 = (cppVar_80557 == 168);
	BIT_VEC cppVar_80560 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80561 = (cppVar_80560 << 3) | 2;
	cppVar_80561 = (cppVar_80561 & cppMask_un_5_);
	BIT_VEC cppVar_80562 = (0 << 5) | cppVar_80561;
	cppVar_80562 = (cppVar_80562 & cppMask_un_8_);
	bool cppVar_80564 = (cppVar_80562 == 176);
	BIT_VEC cppVar_80565 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80566 = (cppVar_80565 << 3) | 2;
	cppVar_80566 = (cppVar_80566 & cppMask_un_5_);
	BIT_VEC cppVar_80567 = (0 << 5) | cppVar_80566;
	cppVar_80567 = (cppVar_80567 & cppMask_un_8_);
	bool cppVar_80569 = (cppVar_80567 == 184);
	BIT_VEC cppVar_80570 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80571 = (cppVar_80570 << 3) | 2;
	cppVar_80571 = (cppVar_80571 & cppMask_un_5_);
	BIT_VEC cppVar_80572 = (0 << 5) | cppVar_80571;
	cppVar_80572 = (cppVar_80572 & cppMask_un_8_);
	bool cppVar_80574 = (cppVar_80572 == 208);
	BIT_VEC cppVar_80575 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80576 = (cppVar_80575 << 3) | 2;
	cppVar_80576 = (cppVar_80576 & cppMask_un_5_);
	BIT_VEC cppVar_80577 = (0 << 5) | cppVar_80576;
	cppVar_80577 = (cppVar_80577 & cppMask_un_8_);
	bool cppVar_80579 = (cppVar_80577 == 224);
	BIT_VEC cppVar_80580 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80581 = (cppVar_80580 << 3) | 2;
	cppVar_80581 = (cppVar_80581 & cppMask_un_5_);
	BIT_VEC cppVar_80582 = (0 << 5) | cppVar_80581;
	cppVar_80582 = (cppVar_80582 & cppMask_un_8_);
	bool cppVar_80584 = (cppVar_80582 == 240);
	BIT_VEC cppVar_80586 = (cppVar_80584) ? B : 0;
	BIT_VEC cppVar_80587 = (cppVar_80579) ? ACC : cppVar_80586;
	BIT_VEC cppVar_80588 = (cppVar_80574) ? PSW : cppVar_80587;
	BIT_VEC cppVar_80589 = (cppVar_80569) ? IP : cppVar_80588;
	BIT_VEC cppVar_80590 = (cppVar_80564) ? P3 : cppVar_80589;
	BIT_VEC cppVar_80591 = (cppVar_80559) ? IE : cppVar_80590;
	BIT_VEC cppVar_80592 = (cppVar_80554) ? P2 : cppVar_80591;
	BIT_VEC cppVar_80593 = (cppVar_80549) ? SBUF : cppVar_80592;
	BIT_VEC cppVar_80594 = (cppVar_80544) ? SCON : cppVar_80593;
	BIT_VEC cppVar_80595 = (cppVar_80539) ? P1 : cppVar_80594;
	BIT_VEC cppVar_80596 = (cppVar_80534) ? TH1 : cppVar_80595;
	BIT_VEC cppVar_80597 = (cppVar_80529) ? TL1 : cppVar_80596;
	BIT_VEC cppVar_80598 = (cppVar_80524) ? TH0 : cppVar_80597;
	BIT_VEC cppVar_80599 = (cppVar_80519) ? TL0 : cppVar_80598;
	BIT_VEC cppVar_80600 = (cppVar_80514) ? TMOD : cppVar_80599;
	BIT_VEC cppVar_80601 = (cppVar_80509) ? TCON : cppVar_80600;
	BIT_VEC cppVar_80602 = (cppVar_80504) ? PCON : cppVar_80601;
	BIT_VEC cppVar_80603 = (cppVar_80499) ? DPH : cppVar_80602;
	BIT_VEC cppVar_80604 = (cppVar_80494) ? DPL : cppVar_80603;
	BIT_VEC cppVar_80605 = (cppVar_80489) ? SP : cppVar_80604;
	BIT_VEC cppVar_80606 = (cppVar_80484) ? P0 : cppVar_80605;
	BIT_VEC cppVar_80607 = (cppVar_80475) ? cppVar_80479 : cppVar_80606;
	BIT_VEC cppVar_80608 = (cppVar_80467) ? cppVar_80607 : TL1;
	BIT_VEC cppVar_80609 = ROM.rd(PC);
	bool cppVar_80611 = (cppVar_80609 == 137);
	BIT_VEC cppVar_80613 = PC + 1;
	cppVar_80613 = (cppVar_80613 & cppMask_un_16_);
	BIT_VEC cppVar_80614 = ROM.rd(cppVar_80613);
	bool cppVar_80616 = (cppVar_80614 == 139);
	BIT_VEC cppVar_80618 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80620 = (cppVar_80618 << 3) | 1;
	cppVar_80620 = (cppVar_80620 & cppMask_un_5_);
	BIT_VEC cppVar_80621 = (0 << 5) | cppVar_80620;
	cppVar_80621 = (cppVar_80621 & cppMask_un_8_);
	BIT_VEC cppVar_80622 = (cppVar_80621 >> 7) & cppMask_un_1_;
	bool cppVar_80624 = (cppVar_80622 == 0);
	BIT_VEC cppVar_80625 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80626 = (cppVar_80625 << 3) | 1;
	cppVar_80626 = (cppVar_80626 & cppMask_un_5_);
	BIT_VEC cppVar_80627 = (0 << 5) | cppVar_80626;
	cppVar_80627 = (cppVar_80627 & cppMask_un_8_);
	BIT_VEC cppVar_80628 = IRAM.rd(cppVar_80627);
	BIT_VEC cppVar_80629 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80630 = (cppVar_80629 << 3) | 1;
	cppVar_80630 = (cppVar_80630 & cppMask_un_5_);
	BIT_VEC cppVar_80631 = (0 << 5) | cppVar_80630;
	cppVar_80631 = (cppVar_80631 & cppMask_un_8_);
	bool cppVar_80633 = (cppVar_80631 == 128);
	BIT_VEC cppVar_80634 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80635 = (cppVar_80634 << 3) | 1;
	cppVar_80635 = (cppVar_80635 & cppMask_un_5_);
	BIT_VEC cppVar_80636 = (0 << 5) | cppVar_80635;
	cppVar_80636 = (cppVar_80636 & cppMask_un_8_);
	bool cppVar_80638 = (cppVar_80636 == 129);
	BIT_VEC cppVar_80639 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80640 = (cppVar_80639 << 3) | 1;
	cppVar_80640 = (cppVar_80640 & cppMask_un_5_);
	BIT_VEC cppVar_80641 = (0 << 5) | cppVar_80640;
	cppVar_80641 = (cppVar_80641 & cppMask_un_8_);
	bool cppVar_80643 = (cppVar_80641 == 130);
	BIT_VEC cppVar_80644 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80645 = (cppVar_80644 << 3) | 1;
	cppVar_80645 = (cppVar_80645 & cppMask_un_5_);
	BIT_VEC cppVar_80646 = (0 << 5) | cppVar_80645;
	cppVar_80646 = (cppVar_80646 & cppMask_un_8_);
	bool cppVar_80648 = (cppVar_80646 == 131);
	BIT_VEC cppVar_80649 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80650 = (cppVar_80649 << 3) | 1;
	cppVar_80650 = (cppVar_80650 & cppMask_un_5_);
	BIT_VEC cppVar_80651 = (0 << 5) | cppVar_80650;
	cppVar_80651 = (cppVar_80651 & cppMask_un_8_);
	bool cppVar_80653 = (cppVar_80651 == 135);
	BIT_VEC cppVar_80654 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80655 = (cppVar_80654 << 3) | 1;
	cppVar_80655 = (cppVar_80655 & cppMask_un_5_);
	BIT_VEC cppVar_80656 = (0 << 5) | cppVar_80655;
	cppVar_80656 = (cppVar_80656 & cppMask_un_8_);
	bool cppVar_80658 = (cppVar_80656 == 136);
	BIT_VEC cppVar_80659 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80660 = (cppVar_80659 << 3) | 1;
	cppVar_80660 = (cppVar_80660 & cppMask_un_5_);
	BIT_VEC cppVar_80661 = (0 << 5) | cppVar_80660;
	cppVar_80661 = (cppVar_80661 & cppMask_un_8_);
	bool cppVar_80663 = (cppVar_80661 == 137);
	BIT_VEC cppVar_80664 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80665 = (cppVar_80664 << 3) | 1;
	cppVar_80665 = (cppVar_80665 & cppMask_un_5_);
	BIT_VEC cppVar_80666 = (0 << 5) | cppVar_80665;
	cppVar_80666 = (cppVar_80666 & cppMask_un_8_);
	bool cppVar_80668 = (cppVar_80666 == 138);
	BIT_VEC cppVar_80669 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80670 = (cppVar_80669 << 3) | 1;
	cppVar_80670 = (cppVar_80670 & cppMask_un_5_);
	BIT_VEC cppVar_80671 = (0 << 5) | cppVar_80670;
	cppVar_80671 = (cppVar_80671 & cppMask_un_8_);
	bool cppVar_80673 = (cppVar_80671 == 140);
	BIT_VEC cppVar_80674 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80675 = (cppVar_80674 << 3) | 1;
	cppVar_80675 = (cppVar_80675 & cppMask_un_5_);
	BIT_VEC cppVar_80676 = (0 << 5) | cppVar_80675;
	cppVar_80676 = (cppVar_80676 & cppMask_un_8_);
	bool cppVar_80678 = (cppVar_80676 == 139);
	BIT_VEC cppVar_80679 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80680 = (cppVar_80679 << 3) | 1;
	cppVar_80680 = (cppVar_80680 & cppMask_un_5_);
	BIT_VEC cppVar_80681 = (0 << 5) | cppVar_80680;
	cppVar_80681 = (cppVar_80681 & cppMask_un_8_);
	bool cppVar_80683 = (cppVar_80681 == 141);
	BIT_VEC cppVar_80684 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80685 = (cppVar_80684 << 3) | 1;
	cppVar_80685 = (cppVar_80685 & cppMask_un_5_);
	BIT_VEC cppVar_80686 = (0 << 5) | cppVar_80685;
	cppVar_80686 = (cppVar_80686 & cppMask_un_8_);
	bool cppVar_80688 = (cppVar_80686 == 144);
	BIT_VEC cppVar_80689 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80690 = (cppVar_80689 << 3) | 1;
	cppVar_80690 = (cppVar_80690 & cppMask_un_5_);
	BIT_VEC cppVar_80691 = (0 << 5) | cppVar_80690;
	cppVar_80691 = (cppVar_80691 & cppMask_un_8_);
	bool cppVar_80693 = (cppVar_80691 == 152);
	BIT_VEC cppVar_80694 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80695 = (cppVar_80694 << 3) | 1;
	cppVar_80695 = (cppVar_80695 & cppMask_un_5_);
	BIT_VEC cppVar_80696 = (0 << 5) | cppVar_80695;
	cppVar_80696 = (cppVar_80696 & cppMask_un_8_);
	bool cppVar_80698 = (cppVar_80696 == 153);
	BIT_VEC cppVar_80699 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80700 = (cppVar_80699 << 3) | 1;
	cppVar_80700 = (cppVar_80700 & cppMask_un_5_);
	BIT_VEC cppVar_80701 = (0 << 5) | cppVar_80700;
	cppVar_80701 = (cppVar_80701 & cppMask_un_8_);
	bool cppVar_80703 = (cppVar_80701 == 160);
	BIT_VEC cppVar_80704 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80705 = (cppVar_80704 << 3) | 1;
	cppVar_80705 = (cppVar_80705 & cppMask_un_5_);
	BIT_VEC cppVar_80706 = (0 << 5) | cppVar_80705;
	cppVar_80706 = (cppVar_80706 & cppMask_un_8_);
	bool cppVar_80708 = (cppVar_80706 == 168);
	BIT_VEC cppVar_80709 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80710 = (cppVar_80709 << 3) | 1;
	cppVar_80710 = (cppVar_80710 & cppMask_un_5_);
	BIT_VEC cppVar_80711 = (0 << 5) | cppVar_80710;
	cppVar_80711 = (cppVar_80711 & cppMask_un_8_);
	bool cppVar_80713 = (cppVar_80711 == 176);
	BIT_VEC cppVar_80714 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80715 = (cppVar_80714 << 3) | 1;
	cppVar_80715 = (cppVar_80715 & cppMask_un_5_);
	BIT_VEC cppVar_80716 = (0 << 5) | cppVar_80715;
	cppVar_80716 = (cppVar_80716 & cppMask_un_8_);
	bool cppVar_80718 = (cppVar_80716 == 184);
	BIT_VEC cppVar_80719 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80720 = (cppVar_80719 << 3) | 1;
	cppVar_80720 = (cppVar_80720 & cppMask_un_5_);
	BIT_VEC cppVar_80721 = (0 << 5) | cppVar_80720;
	cppVar_80721 = (cppVar_80721 & cppMask_un_8_);
	bool cppVar_80723 = (cppVar_80721 == 208);
	BIT_VEC cppVar_80724 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80725 = (cppVar_80724 << 3) | 1;
	cppVar_80725 = (cppVar_80725 & cppMask_un_5_);
	BIT_VEC cppVar_80726 = (0 << 5) | cppVar_80725;
	cppVar_80726 = (cppVar_80726 & cppMask_un_8_);
	bool cppVar_80728 = (cppVar_80726 == 224);
	BIT_VEC cppVar_80729 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80730 = (cppVar_80729 << 3) | 1;
	cppVar_80730 = (cppVar_80730 & cppMask_un_5_);
	BIT_VEC cppVar_80731 = (0 << 5) | cppVar_80730;
	cppVar_80731 = (cppVar_80731 & cppMask_un_8_);
	bool cppVar_80733 = (cppVar_80731 == 240);
	BIT_VEC cppVar_80735 = (cppVar_80733) ? B : 0;
	BIT_VEC cppVar_80736 = (cppVar_80728) ? ACC : cppVar_80735;
	BIT_VEC cppVar_80737 = (cppVar_80723) ? PSW : cppVar_80736;
	BIT_VEC cppVar_80738 = (cppVar_80718) ? IP : cppVar_80737;
	BIT_VEC cppVar_80739 = (cppVar_80713) ? P3 : cppVar_80738;
	BIT_VEC cppVar_80740 = (cppVar_80708) ? IE : cppVar_80739;
	BIT_VEC cppVar_80741 = (cppVar_80703) ? P2 : cppVar_80740;
	BIT_VEC cppVar_80742 = (cppVar_80698) ? SBUF : cppVar_80741;
	BIT_VEC cppVar_80743 = (cppVar_80693) ? SCON : cppVar_80742;
	BIT_VEC cppVar_80744 = (cppVar_80688) ? P1 : cppVar_80743;
	BIT_VEC cppVar_80745 = (cppVar_80683) ? TH1 : cppVar_80744;
	BIT_VEC cppVar_80746 = (cppVar_80678) ? TL1 : cppVar_80745;
	BIT_VEC cppVar_80747 = (cppVar_80673) ? TH0 : cppVar_80746;
	BIT_VEC cppVar_80748 = (cppVar_80668) ? TL0 : cppVar_80747;
	BIT_VEC cppVar_80749 = (cppVar_80663) ? TMOD : cppVar_80748;
	BIT_VEC cppVar_80750 = (cppVar_80658) ? TCON : cppVar_80749;
	BIT_VEC cppVar_80751 = (cppVar_80653) ? PCON : cppVar_80750;
	BIT_VEC cppVar_80752 = (cppVar_80648) ? DPH : cppVar_80751;
	BIT_VEC cppVar_80753 = (cppVar_80643) ? DPL : cppVar_80752;
	BIT_VEC cppVar_80754 = (cppVar_80638) ? SP : cppVar_80753;
	BIT_VEC cppVar_80755 = (cppVar_80633) ? P0 : cppVar_80754;
	BIT_VEC cppVar_80756 = (cppVar_80624) ? cppVar_80628 : cppVar_80755;
	BIT_VEC cppVar_80757 = (cppVar_80616) ? cppVar_80756 : TL1;
	BIT_VEC cppVar_80758 = ROM.rd(PC);
	bool cppVar_80760 = (cppVar_80758 == 136);
	BIT_VEC cppVar_80762 = PC + 1;
	cppVar_80762 = (cppVar_80762 & cppMask_un_16_);
	BIT_VEC cppVar_80763 = ROM.rd(cppVar_80762);
	bool cppVar_80765 = (cppVar_80763 == 139);
	BIT_VEC cppVar_80767 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80769 = (cppVar_80767 << 3) | 0;
	cppVar_80769 = (cppVar_80769 & cppMask_un_5_);
	BIT_VEC cppVar_80770 = (0 << 5) | cppVar_80769;
	cppVar_80770 = (cppVar_80770 & cppMask_un_8_);
	BIT_VEC cppVar_80771 = (cppVar_80770 >> 7) & cppMask_un_1_;
	bool cppVar_80773 = (cppVar_80771 == 0);
	BIT_VEC cppVar_80774 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80775 = (cppVar_80774 << 3) | 0;
	cppVar_80775 = (cppVar_80775 & cppMask_un_5_);
	BIT_VEC cppVar_80776 = (0 << 5) | cppVar_80775;
	cppVar_80776 = (cppVar_80776 & cppMask_un_8_);
	BIT_VEC cppVar_80777 = IRAM.rd(cppVar_80776);
	BIT_VEC cppVar_80778 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80779 = (cppVar_80778 << 3) | 0;
	cppVar_80779 = (cppVar_80779 & cppMask_un_5_);
	BIT_VEC cppVar_80780 = (0 << 5) | cppVar_80779;
	cppVar_80780 = (cppVar_80780 & cppMask_un_8_);
	bool cppVar_80782 = (cppVar_80780 == 128);
	BIT_VEC cppVar_80783 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80784 = (cppVar_80783 << 3) | 0;
	cppVar_80784 = (cppVar_80784 & cppMask_un_5_);
	BIT_VEC cppVar_80785 = (0 << 5) | cppVar_80784;
	cppVar_80785 = (cppVar_80785 & cppMask_un_8_);
	bool cppVar_80787 = (cppVar_80785 == 129);
	BIT_VEC cppVar_80788 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80789 = (cppVar_80788 << 3) | 0;
	cppVar_80789 = (cppVar_80789 & cppMask_un_5_);
	BIT_VEC cppVar_80790 = (0 << 5) | cppVar_80789;
	cppVar_80790 = (cppVar_80790 & cppMask_un_8_);
	bool cppVar_80792 = (cppVar_80790 == 130);
	BIT_VEC cppVar_80793 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80794 = (cppVar_80793 << 3) | 0;
	cppVar_80794 = (cppVar_80794 & cppMask_un_5_);
	BIT_VEC cppVar_80795 = (0 << 5) | cppVar_80794;
	cppVar_80795 = (cppVar_80795 & cppMask_un_8_);
	bool cppVar_80797 = (cppVar_80795 == 131);
	BIT_VEC cppVar_80798 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80799 = (cppVar_80798 << 3) | 0;
	cppVar_80799 = (cppVar_80799 & cppMask_un_5_);
	BIT_VEC cppVar_80800 = (0 << 5) | cppVar_80799;
	cppVar_80800 = (cppVar_80800 & cppMask_un_8_);
	bool cppVar_80802 = (cppVar_80800 == 135);
	BIT_VEC cppVar_80803 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80804 = (cppVar_80803 << 3) | 0;
	cppVar_80804 = (cppVar_80804 & cppMask_un_5_);
	BIT_VEC cppVar_80805 = (0 << 5) | cppVar_80804;
	cppVar_80805 = (cppVar_80805 & cppMask_un_8_);
	bool cppVar_80807 = (cppVar_80805 == 136);
	BIT_VEC cppVar_80808 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80809 = (cppVar_80808 << 3) | 0;
	cppVar_80809 = (cppVar_80809 & cppMask_un_5_);
	BIT_VEC cppVar_80810 = (0 << 5) | cppVar_80809;
	cppVar_80810 = (cppVar_80810 & cppMask_un_8_);
	bool cppVar_80812 = (cppVar_80810 == 137);
	BIT_VEC cppVar_80813 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80814 = (cppVar_80813 << 3) | 0;
	cppVar_80814 = (cppVar_80814 & cppMask_un_5_);
	BIT_VEC cppVar_80815 = (0 << 5) | cppVar_80814;
	cppVar_80815 = (cppVar_80815 & cppMask_un_8_);
	bool cppVar_80817 = (cppVar_80815 == 138);
	BIT_VEC cppVar_80818 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80819 = (cppVar_80818 << 3) | 0;
	cppVar_80819 = (cppVar_80819 & cppMask_un_5_);
	BIT_VEC cppVar_80820 = (0 << 5) | cppVar_80819;
	cppVar_80820 = (cppVar_80820 & cppMask_un_8_);
	bool cppVar_80822 = (cppVar_80820 == 140);
	BIT_VEC cppVar_80823 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80824 = (cppVar_80823 << 3) | 0;
	cppVar_80824 = (cppVar_80824 & cppMask_un_5_);
	BIT_VEC cppVar_80825 = (0 << 5) | cppVar_80824;
	cppVar_80825 = (cppVar_80825 & cppMask_un_8_);
	bool cppVar_80827 = (cppVar_80825 == 139);
	BIT_VEC cppVar_80828 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80829 = (cppVar_80828 << 3) | 0;
	cppVar_80829 = (cppVar_80829 & cppMask_un_5_);
	BIT_VEC cppVar_80830 = (0 << 5) | cppVar_80829;
	cppVar_80830 = (cppVar_80830 & cppMask_un_8_);
	bool cppVar_80832 = (cppVar_80830 == 141);
	BIT_VEC cppVar_80833 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80834 = (cppVar_80833 << 3) | 0;
	cppVar_80834 = (cppVar_80834 & cppMask_un_5_);
	BIT_VEC cppVar_80835 = (0 << 5) | cppVar_80834;
	cppVar_80835 = (cppVar_80835 & cppMask_un_8_);
	bool cppVar_80837 = (cppVar_80835 == 144);
	BIT_VEC cppVar_80838 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80839 = (cppVar_80838 << 3) | 0;
	cppVar_80839 = (cppVar_80839 & cppMask_un_5_);
	BIT_VEC cppVar_80840 = (0 << 5) | cppVar_80839;
	cppVar_80840 = (cppVar_80840 & cppMask_un_8_);
	bool cppVar_80842 = (cppVar_80840 == 152);
	BIT_VEC cppVar_80843 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80844 = (cppVar_80843 << 3) | 0;
	cppVar_80844 = (cppVar_80844 & cppMask_un_5_);
	BIT_VEC cppVar_80845 = (0 << 5) | cppVar_80844;
	cppVar_80845 = (cppVar_80845 & cppMask_un_8_);
	bool cppVar_80847 = (cppVar_80845 == 153);
	BIT_VEC cppVar_80848 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80849 = (cppVar_80848 << 3) | 0;
	cppVar_80849 = (cppVar_80849 & cppMask_un_5_);
	BIT_VEC cppVar_80850 = (0 << 5) | cppVar_80849;
	cppVar_80850 = (cppVar_80850 & cppMask_un_8_);
	bool cppVar_80852 = (cppVar_80850 == 160);
	BIT_VEC cppVar_80853 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80854 = (cppVar_80853 << 3) | 0;
	cppVar_80854 = (cppVar_80854 & cppMask_un_5_);
	BIT_VEC cppVar_80855 = (0 << 5) | cppVar_80854;
	cppVar_80855 = (cppVar_80855 & cppMask_un_8_);
	bool cppVar_80857 = (cppVar_80855 == 168);
	BIT_VEC cppVar_80858 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80859 = (cppVar_80858 << 3) | 0;
	cppVar_80859 = (cppVar_80859 & cppMask_un_5_);
	BIT_VEC cppVar_80860 = (0 << 5) | cppVar_80859;
	cppVar_80860 = (cppVar_80860 & cppMask_un_8_);
	bool cppVar_80862 = (cppVar_80860 == 176);
	BIT_VEC cppVar_80863 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80864 = (cppVar_80863 << 3) | 0;
	cppVar_80864 = (cppVar_80864 & cppMask_un_5_);
	BIT_VEC cppVar_80865 = (0 << 5) | cppVar_80864;
	cppVar_80865 = (cppVar_80865 & cppMask_un_8_);
	bool cppVar_80867 = (cppVar_80865 == 184);
	BIT_VEC cppVar_80868 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80869 = (cppVar_80868 << 3) | 0;
	cppVar_80869 = (cppVar_80869 & cppMask_un_5_);
	BIT_VEC cppVar_80870 = (0 << 5) | cppVar_80869;
	cppVar_80870 = (cppVar_80870 & cppMask_un_8_);
	bool cppVar_80872 = (cppVar_80870 == 208);
	BIT_VEC cppVar_80873 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80874 = (cppVar_80873 << 3) | 0;
	cppVar_80874 = (cppVar_80874 & cppMask_un_5_);
	BIT_VEC cppVar_80875 = (0 << 5) | cppVar_80874;
	cppVar_80875 = (cppVar_80875 & cppMask_un_8_);
	bool cppVar_80877 = (cppVar_80875 == 224);
	BIT_VEC cppVar_80878 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80879 = (cppVar_80878 << 3) | 0;
	cppVar_80879 = (cppVar_80879 & cppMask_un_5_);
	BIT_VEC cppVar_80880 = (0 << 5) | cppVar_80879;
	cppVar_80880 = (cppVar_80880 & cppMask_un_8_);
	bool cppVar_80882 = (cppVar_80880 == 240);
	BIT_VEC cppVar_80884 = (cppVar_80882) ? B : 0;
	BIT_VEC cppVar_80885 = (cppVar_80877) ? ACC : cppVar_80884;
	BIT_VEC cppVar_80886 = (cppVar_80872) ? PSW : cppVar_80885;
	BIT_VEC cppVar_80887 = (cppVar_80867) ? IP : cppVar_80886;
	BIT_VEC cppVar_80888 = (cppVar_80862) ? P3 : cppVar_80887;
	BIT_VEC cppVar_80889 = (cppVar_80857) ? IE : cppVar_80888;
	BIT_VEC cppVar_80890 = (cppVar_80852) ? P2 : cppVar_80889;
	BIT_VEC cppVar_80891 = (cppVar_80847) ? SBUF : cppVar_80890;
	BIT_VEC cppVar_80892 = (cppVar_80842) ? SCON : cppVar_80891;
	BIT_VEC cppVar_80893 = (cppVar_80837) ? P1 : cppVar_80892;
	BIT_VEC cppVar_80894 = (cppVar_80832) ? TH1 : cppVar_80893;
	BIT_VEC cppVar_80895 = (cppVar_80827) ? TL1 : cppVar_80894;
	BIT_VEC cppVar_80896 = (cppVar_80822) ? TH0 : cppVar_80895;
	BIT_VEC cppVar_80897 = (cppVar_80817) ? TL0 : cppVar_80896;
	BIT_VEC cppVar_80898 = (cppVar_80812) ? TMOD : cppVar_80897;
	BIT_VEC cppVar_80899 = (cppVar_80807) ? TCON : cppVar_80898;
	BIT_VEC cppVar_80900 = (cppVar_80802) ? PCON : cppVar_80899;
	BIT_VEC cppVar_80901 = (cppVar_80797) ? DPH : cppVar_80900;
	BIT_VEC cppVar_80902 = (cppVar_80792) ? DPL : cppVar_80901;
	BIT_VEC cppVar_80903 = (cppVar_80787) ? SP : cppVar_80902;
	BIT_VEC cppVar_80904 = (cppVar_80782) ? P0 : cppVar_80903;
	BIT_VEC cppVar_80905 = (cppVar_80773) ? cppVar_80777 : cppVar_80904;
	BIT_VEC cppVar_80906 = (cppVar_80765) ? cppVar_80905 : TL1;
	BIT_VEC cppVar_80907 = ROM.rd(PC);
	bool cppVar_80909 = (cppVar_80907 == 135);
	BIT_VEC cppVar_80911 = PC + 1;
	cppVar_80911 = (cppVar_80911 & cppMask_un_16_);
	BIT_VEC cppVar_80912 = ROM.rd(cppVar_80911);
	bool cppVar_80914 = (cppVar_80912 == 139);
	BIT_VEC cppVar_80916 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80918 = (cppVar_80916 << 3) | 1;
	cppVar_80918 = (cppVar_80918 & cppMask_un_5_);
	BIT_VEC cppVar_80919 = (0 << 5) | cppVar_80918;
	cppVar_80919 = (cppVar_80919 & cppMask_un_8_);
	BIT_VEC cppVar_80920 = IRAM.rd(cppVar_80919);
	BIT_VEC cppVar_80921 = IRAM.rd(cppVar_80920);
	BIT_VEC cppVar_80922 = (cppVar_80914) ? cppVar_80921 : TL1;
	BIT_VEC cppVar_80923 = ROM.rd(PC);
	bool cppVar_80925 = (cppVar_80923 == 134);
	BIT_VEC cppVar_80927 = PC + 1;
	cppVar_80927 = (cppVar_80927 & cppMask_un_16_);
	BIT_VEC cppVar_80928 = ROM.rd(cppVar_80927);
	bool cppVar_80930 = (cppVar_80928 == 139);
	BIT_VEC cppVar_80932 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_80934 = (cppVar_80932 << 3) | 0;
	cppVar_80934 = (cppVar_80934 & cppMask_un_5_);
	BIT_VEC cppVar_80935 = (0 << 5) | cppVar_80934;
	cppVar_80935 = (cppVar_80935 & cppMask_un_8_);
	BIT_VEC cppVar_80936 = IRAM.rd(cppVar_80935);
	BIT_VEC cppVar_80937 = IRAM.rd(cppVar_80936);
	BIT_VEC cppVar_80938 = (cppVar_80930) ? cppVar_80937 : TL1;
	BIT_VEC cppVar_80939 = ROM.rd(PC);
	bool cppVar_80941 = (cppVar_80939 == 133);
	BIT_VEC cppVar_80943 = PC + 2;
	cppVar_80943 = (cppVar_80943 & cppMask_un_16_);
	BIT_VEC cppVar_80944 = ROM.rd(cppVar_80943);
	bool cppVar_80946 = (cppVar_80944 == 139);
	BIT_VEC cppVar_80948 = PC + 1;
	cppVar_80948 = (cppVar_80948 & cppMask_un_16_);
	BIT_VEC cppVar_80949 = ROM.rd(cppVar_80948);
	BIT_VEC cppVar_80950 = (cppVar_80949 >> 7) & cppMask_un_1_;
	bool cppVar_80952 = (cppVar_80950 == 0);
	BIT_VEC cppVar_80953 = PC + 1;
	cppVar_80953 = (cppVar_80953 & cppMask_un_16_);
	BIT_VEC cppVar_80954 = ROM.rd(cppVar_80953);
	BIT_VEC cppVar_80955 = IRAM.rd(cppVar_80954);
	BIT_VEC cppVar_80956 = PC + 1;
	cppVar_80956 = (cppVar_80956 & cppMask_un_16_);
	BIT_VEC cppVar_80957 = ROM.rd(cppVar_80956);
	bool cppVar_80959 = (cppVar_80957 == 128);
	BIT_VEC cppVar_80960 = PC + 1;
	cppVar_80960 = (cppVar_80960 & cppMask_un_16_);
	BIT_VEC cppVar_80961 = ROM.rd(cppVar_80960);
	bool cppVar_80963 = (cppVar_80961 == 129);
	BIT_VEC cppVar_80964 = PC + 1;
	cppVar_80964 = (cppVar_80964 & cppMask_un_16_);
	BIT_VEC cppVar_80965 = ROM.rd(cppVar_80964);
	bool cppVar_80967 = (cppVar_80965 == 130);
	BIT_VEC cppVar_80968 = PC + 1;
	cppVar_80968 = (cppVar_80968 & cppMask_un_16_);
	BIT_VEC cppVar_80969 = ROM.rd(cppVar_80968);
	bool cppVar_80971 = (cppVar_80969 == 131);
	BIT_VEC cppVar_80972 = PC + 1;
	cppVar_80972 = (cppVar_80972 & cppMask_un_16_);
	BIT_VEC cppVar_80973 = ROM.rd(cppVar_80972);
	bool cppVar_80975 = (cppVar_80973 == 135);
	BIT_VEC cppVar_80976 = PC + 1;
	cppVar_80976 = (cppVar_80976 & cppMask_un_16_);
	BIT_VEC cppVar_80977 = ROM.rd(cppVar_80976);
	bool cppVar_80979 = (cppVar_80977 == 136);
	BIT_VEC cppVar_80980 = PC + 1;
	cppVar_80980 = (cppVar_80980 & cppMask_un_16_);
	BIT_VEC cppVar_80981 = ROM.rd(cppVar_80980);
	bool cppVar_80983 = (cppVar_80981 == 137);
	BIT_VEC cppVar_80984 = PC + 1;
	cppVar_80984 = (cppVar_80984 & cppMask_un_16_);
	BIT_VEC cppVar_80985 = ROM.rd(cppVar_80984);
	bool cppVar_80987 = (cppVar_80985 == 138);
	BIT_VEC cppVar_80988 = PC + 1;
	cppVar_80988 = (cppVar_80988 & cppMask_un_16_);
	BIT_VEC cppVar_80989 = ROM.rd(cppVar_80988);
	bool cppVar_80991 = (cppVar_80989 == 140);
	BIT_VEC cppVar_80992 = PC + 1;
	cppVar_80992 = (cppVar_80992 & cppMask_un_16_);
	BIT_VEC cppVar_80993 = ROM.rd(cppVar_80992);
	bool cppVar_80995 = (cppVar_80993 == 139);
	BIT_VEC cppVar_80996 = PC + 1;
	cppVar_80996 = (cppVar_80996 & cppMask_un_16_);
	BIT_VEC cppVar_80997 = ROM.rd(cppVar_80996);
	bool cppVar_80999 = (cppVar_80997 == 141);
	BIT_VEC cppVar_81000 = PC + 1;
	cppVar_81000 = (cppVar_81000 & cppMask_un_16_);
	BIT_VEC cppVar_81001 = ROM.rd(cppVar_81000);
	bool cppVar_81003 = (cppVar_81001 == 144);
	BIT_VEC cppVar_81004 = PC + 1;
	cppVar_81004 = (cppVar_81004 & cppMask_un_16_);
	BIT_VEC cppVar_81005 = ROM.rd(cppVar_81004);
	bool cppVar_81007 = (cppVar_81005 == 152);
	BIT_VEC cppVar_81008 = PC + 1;
	cppVar_81008 = (cppVar_81008 & cppMask_un_16_);
	BIT_VEC cppVar_81009 = ROM.rd(cppVar_81008);
	bool cppVar_81011 = (cppVar_81009 == 153);
	BIT_VEC cppVar_81012 = PC + 1;
	cppVar_81012 = (cppVar_81012 & cppMask_un_16_);
	BIT_VEC cppVar_81013 = ROM.rd(cppVar_81012);
	bool cppVar_81015 = (cppVar_81013 == 160);
	BIT_VEC cppVar_81016 = PC + 1;
	cppVar_81016 = (cppVar_81016 & cppMask_un_16_);
	BIT_VEC cppVar_81017 = ROM.rd(cppVar_81016);
	bool cppVar_81019 = (cppVar_81017 == 168);
	BIT_VEC cppVar_81020 = PC + 1;
	cppVar_81020 = (cppVar_81020 & cppMask_un_16_);
	BIT_VEC cppVar_81021 = ROM.rd(cppVar_81020);
	bool cppVar_81023 = (cppVar_81021 == 176);
	BIT_VEC cppVar_81024 = PC + 1;
	cppVar_81024 = (cppVar_81024 & cppMask_un_16_);
	BIT_VEC cppVar_81025 = ROM.rd(cppVar_81024);
	bool cppVar_81027 = (cppVar_81025 == 184);
	BIT_VEC cppVar_81028 = PC + 1;
	cppVar_81028 = (cppVar_81028 & cppMask_un_16_);
	BIT_VEC cppVar_81029 = ROM.rd(cppVar_81028);
	bool cppVar_81031 = (cppVar_81029 == 208);
	BIT_VEC cppVar_81032 = PC + 1;
	cppVar_81032 = (cppVar_81032 & cppMask_un_16_);
	BIT_VEC cppVar_81033 = ROM.rd(cppVar_81032);
	bool cppVar_81035 = (cppVar_81033 == 224);
	BIT_VEC cppVar_81036 = PC + 1;
	cppVar_81036 = (cppVar_81036 & cppMask_un_16_);
	BIT_VEC cppVar_81037 = ROM.rd(cppVar_81036);
	bool cppVar_81039 = (cppVar_81037 == 240);
	BIT_VEC cppVar_81041 = (cppVar_81039) ? B : 0;
	BIT_VEC cppVar_81042 = (cppVar_81035) ? ACC : cppVar_81041;
	BIT_VEC cppVar_81043 = (cppVar_81031) ? PSW : cppVar_81042;
	BIT_VEC cppVar_81044 = (cppVar_81027) ? IP : cppVar_81043;
	BIT_VEC cppVar_81045 = (cppVar_81023) ? P3 : cppVar_81044;
	BIT_VEC cppVar_81046 = (cppVar_81019) ? IE : cppVar_81045;
	BIT_VEC cppVar_81047 = (cppVar_81015) ? P2 : cppVar_81046;
	BIT_VEC cppVar_81048 = (cppVar_81011) ? SBUF : cppVar_81047;
	BIT_VEC cppVar_81049 = (cppVar_81007) ? SCON : cppVar_81048;
	BIT_VEC cppVar_81050 = (cppVar_81003) ? P1 : cppVar_81049;
	BIT_VEC cppVar_81051 = (cppVar_80999) ? TH1 : cppVar_81050;
	BIT_VEC cppVar_81052 = (cppVar_80995) ? TL1 : cppVar_81051;
	BIT_VEC cppVar_81053 = (cppVar_80991) ? TH0 : cppVar_81052;
	BIT_VEC cppVar_81054 = (cppVar_80987) ? TL0 : cppVar_81053;
	BIT_VEC cppVar_81055 = (cppVar_80983) ? TMOD : cppVar_81054;
	BIT_VEC cppVar_81056 = (cppVar_80979) ? TCON : cppVar_81055;
	BIT_VEC cppVar_81057 = (cppVar_80975) ? PCON : cppVar_81056;
	BIT_VEC cppVar_81058 = (cppVar_80971) ? DPH : cppVar_81057;
	BIT_VEC cppVar_81059 = (cppVar_80967) ? DPL : cppVar_81058;
	BIT_VEC cppVar_81060 = (cppVar_80963) ? SP : cppVar_81059;
	BIT_VEC cppVar_81061 = (cppVar_80959) ? P0 : cppVar_81060;
	BIT_VEC cppVar_81062 = (cppVar_80952) ? cppVar_80955 : cppVar_81061;
	BIT_VEC cppVar_81063 = (cppVar_80946) ? cppVar_81062 : TL1;
	BIT_VEC cppVar_81064 = ROM.rd(PC);
	bool cppVar_81066 = (cppVar_81064 == 117);
	BIT_VEC cppVar_81068 = PC + 1;
	cppVar_81068 = (cppVar_81068 & cppMask_un_16_);
	BIT_VEC cppVar_81069 = ROM.rd(cppVar_81068);
	bool cppVar_81071 = (cppVar_81069 == 139);
	BIT_VEC cppVar_81073 = PC + 2;
	cppVar_81073 = (cppVar_81073 & cppMask_un_16_);
	BIT_VEC cppVar_81074 = ROM.rd(cppVar_81073);
	BIT_VEC cppVar_81075 = (cppVar_81071) ? cppVar_81074 : TL1;
	BIT_VEC cppVar_81076 = ROM.rd(PC);
	bool cppVar_81078 = (cppVar_81076 == 99);
	BIT_VEC cppVar_81080 = PC + 1;
	cppVar_81080 = (cppVar_81080 & cppMask_un_16_);
	BIT_VEC cppVar_81081 = ROM.rd(cppVar_81080);
	bool cppVar_81083 = (cppVar_81081 == 139);
	BIT_VEC cppVar_81084 = PC + 1;
	cppVar_81084 = (cppVar_81084 & cppMask_un_16_);
	BIT_VEC cppVar_81085 = ROM.rd(cppVar_81084);
	BIT_VEC cppVar_81086 = (cppVar_81085 >> 7) & cppMask_un_1_;
	bool cppVar_81088 = (cppVar_81086 == 0);
	BIT_VEC cppVar_81089 = PC + 1;
	cppVar_81089 = (cppVar_81089 & cppMask_un_16_);
	BIT_VEC cppVar_81090 = ROM.rd(cppVar_81089);
	BIT_VEC cppVar_81091 = IRAM.rd(cppVar_81090);
	BIT_VEC cppVar_81092 = PC + 1;
	cppVar_81092 = (cppVar_81092 & cppMask_un_16_);
	BIT_VEC cppVar_81093 = ROM.rd(cppVar_81092);
	bool cppVar_81095 = (cppVar_81093 == 128);
	BIT_VEC cppVar_81096 = PC + 1;
	cppVar_81096 = (cppVar_81096 & cppMask_un_16_);
	BIT_VEC cppVar_81097 = ROM.rd(cppVar_81096);
	bool cppVar_81099 = (cppVar_81097 == 129);
	BIT_VEC cppVar_81100 = PC + 1;
	cppVar_81100 = (cppVar_81100 & cppMask_un_16_);
	BIT_VEC cppVar_81101 = ROM.rd(cppVar_81100);
	bool cppVar_81103 = (cppVar_81101 == 130);
	BIT_VEC cppVar_81104 = PC + 1;
	cppVar_81104 = (cppVar_81104 & cppMask_un_16_);
	BIT_VEC cppVar_81105 = ROM.rd(cppVar_81104);
	bool cppVar_81107 = (cppVar_81105 == 131);
	BIT_VEC cppVar_81108 = PC + 1;
	cppVar_81108 = (cppVar_81108 & cppMask_un_16_);
	BIT_VEC cppVar_81109 = ROM.rd(cppVar_81108);
	bool cppVar_81111 = (cppVar_81109 == 135);
	BIT_VEC cppVar_81112 = PC + 1;
	cppVar_81112 = (cppVar_81112 & cppMask_un_16_);
	BIT_VEC cppVar_81113 = ROM.rd(cppVar_81112);
	bool cppVar_81115 = (cppVar_81113 == 136);
	BIT_VEC cppVar_81116 = PC + 1;
	cppVar_81116 = (cppVar_81116 & cppMask_un_16_);
	BIT_VEC cppVar_81117 = ROM.rd(cppVar_81116);
	bool cppVar_81119 = (cppVar_81117 == 137);
	BIT_VEC cppVar_81120 = PC + 1;
	cppVar_81120 = (cppVar_81120 & cppMask_un_16_);
	BIT_VEC cppVar_81121 = ROM.rd(cppVar_81120);
	bool cppVar_81123 = (cppVar_81121 == 138);
	BIT_VEC cppVar_81124 = PC + 1;
	cppVar_81124 = (cppVar_81124 & cppMask_un_16_);
	BIT_VEC cppVar_81125 = ROM.rd(cppVar_81124);
	bool cppVar_81127 = (cppVar_81125 == 140);
	BIT_VEC cppVar_81128 = PC + 1;
	cppVar_81128 = (cppVar_81128 & cppMask_un_16_);
	BIT_VEC cppVar_81129 = ROM.rd(cppVar_81128);
	bool cppVar_81131 = (cppVar_81129 == 139);
	BIT_VEC cppVar_81132 = PC + 1;
	cppVar_81132 = (cppVar_81132 & cppMask_un_16_);
	BIT_VEC cppVar_81133 = ROM.rd(cppVar_81132);
	bool cppVar_81135 = (cppVar_81133 == 141);
	BIT_VEC cppVar_81136 = PC + 1;
	cppVar_81136 = (cppVar_81136 & cppMask_un_16_);
	BIT_VEC cppVar_81137 = ROM.rd(cppVar_81136);
	bool cppVar_81139 = (cppVar_81137 == 144);
	BIT_VEC cppVar_81140 = PC + 1;
	cppVar_81140 = (cppVar_81140 & cppMask_un_16_);
	BIT_VEC cppVar_81141 = ROM.rd(cppVar_81140);
	bool cppVar_81143 = (cppVar_81141 == 152);
	BIT_VEC cppVar_81144 = PC + 1;
	cppVar_81144 = (cppVar_81144 & cppMask_un_16_);
	BIT_VEC cppVar_81145 = ROM.rd(cppVar_81144);
	bool cppVar_81147 = (cppVar_81145 == 153);
	BIT_VEC cppVar_81148 = PC + 1;
	cppVar_81148 = (cppVar_81148 & cppMask_un_16_);
	BIT_VEC cppVar_81149 = ROM.rd(cppVar_81148);
	bool cppVar_81151 = (cppVar_81149 == 160);
	BIT_VEC cppVar_81152 = PC + 1;
	cppVar_81152 = (cppVar_81152 & cppMask_un_16_);
	BIT_VEC cppVar_81153 = ROM.rd(cppVar_81152);
	bool cppVar_81155 = (cppVar_81153 == 168);
	BIT_VEC cppVar_81156 = PC + 1;
	cppVar_81156 = (cppVar_81156 & cppMask_un_16_);
	BIT_VEC cppVar_81157 = ROM.rd(cppVar_81156);
	bool cppVar_81159 = (cppVar_81157 == 176);
	BIT_VEC cppVar_81160 = PC + 1;
	cppVar_81160 = (cppVar_81160 & cppMask_un_16_);
	BIT_VEC cppVar_81161 = ROM.rd(cppVar_81160);
	bool cppVar_81163 = (cppVar_81161 == 184);
	BIT_VEC cppVar_81164 = PC + 1;
	cppVar_81164 = (cppVar_81164 & cppMask_un_16_);
	BIT_VEC cppVar_81165 = ROM.rd(cppVar_81164);
	bool cppVar_81167 = (cppVar_81165 == 208);
	BIT_VEC cppVar_81168 = PC + 1;
	cppVar_81168 = (cppVar_81168 & cppMask_un_16_);
	BIT_VEC cppVar_81169 = ROM.rd(cppVar_81168);
	bool cppVar_81171 = (cppVar_81169 == 224);
	BIT_VEC cppVar_81172 = PC + 1;
	cppVar_81172 = (cppVar_81172 & cppMask_un_16_);
	BIT_VEC cppVar_81173 = ROM.rd(cppVar_81172);
	bool cppVar_81175 = (cppVar_81173 == 240);
	BIT_VEC cppVar_81177 = (cppVar_81175) ? B : 0;
	BIT_VEC cppVar_81178 = (cppVar_81171) ? ACC : cppVar_81177;
	BIT_VEC cppVar_81179 = (cppVar_81167) ? PSW : cppVar_81178;
	BIT_VEC cppVar_81180 = (cppVar_81163) ? IP : cppVar_81179;
	BIT_VEC cppVar_81181 = (cppVar_81159) ? P3 : cppVar_81180;
	BIT_VEC cppVar_81182 = (cppVar_81155) ? IE : cppVar_81181;
	BIT_VEC cppVar_81183 = (cppVar_81151) ? P2 : cppVar_81182;
	BIT_VEC cppVar_81184 = (cppVar_81147) ? SBUF : cppVar_81183;
	BIT_VEC cppVar_81185 = (cppVar_81143) ? SCON : cppVar_81184;
	BIT_VEC cppVar_81186 = (cppVar_81139) ? P1 : cppVar_81185;
	BIT_VEC cppVar_81187 = (cppVar_81135) ? TH1 : cppVar_81186;
	BIT_VEC cppVar_81188 = (cppVar_81131) ? TL1 : cppVar_81187;
	BIT_VEC cppVar_81189 = (cppVar_81127) ? TH0 : cppVar_81188;
	BIT_VEC cppVar_81190 = (cppVar_81123) ? TL0 : cppVar_81189;
	BIT_VEC cppVar_81191 = (cppVar_81119) ? TMOD : cppVar_81190;
	BIT_VEC cppVar_81192 = (cppVar_81115) ? TCON : cppVar_81191;
	BIT_VEC cppVar_81193 = (cppVar_81111) ? PCON : cppVar_81192;
	BIT_VEC cppVar_81194 = (cppVar_81107) ? DPH : cppVar_81193;
	BIT_VEC cppVar_81195 = (cppVar_81103) ? DPL : cppVar_81194;
	BIT_VEC cppVar_81196 = (cppVar_81099) ? SP : cppVar_81195;
	BIT_VEC cppVar_81197 = (cppVar_81095) ? P0 : cppVar_81196;
	BIT_VEC cppVar_81198 = (cppVar_81088) ? cppVar_81091 : cppVar_81197;
	BIT_VEC cppVar_81200 = PC + 2;
	cppVar_81200 = (cppVar_81200 & cppMask_un_16_);
	BIT_VEC cppVar_81201 = ROM.rd(cppVar_81200);
	BIT_VEC cppVar_81202 = cppVar_81198 ^ cppVar_81201;
	BIT_VEC cppVar_81203 = (cppVar_81083) ? cppVar_81202 : TL1;
	BIT_VEC cppVar_81204 = ROM.rd(PC);
	bool cppVar_81206 = (cppVar_81204 == 98);
	BIT_VEC cppVar_81208 = PC + 1;
	cppVar_81208 = (cppVar_81208 & cppMask_un_16_);
	BIT_VEC cppVar_81209 = ROM.rd(cppVar_81208);
	bool cppVar_81211 = (cppVar_81209 == 139);
	BIT_VEC cppVar_81212 = PC + 1;
	cppVar_81212 = (cppVar_81212 & cppMask_un_16_);
	BIT_VEC cppVar_81213 = ROM.rd(cppVar_81212);
	BIT_VEC cppVar_81214 = (cppVar_81213 >> 7) & cppMask_un_1_;
	bool cppVar_81216 = (cppVar_81214 == 0);
	BIT_VEC cppVar_81217 = PC + 1;
	cppVar_81217 = (cppVar_81217 & cppMask_un_16_);
	BIT_VEC cppVar_81218 = ROM.rd(cppVar_81217);
	BIT_VEC cppVar_81219 = IRAM.rd(cppVar_81218);
	BIT_VEC cppVar_81220 = PC + 1;
	cppVar_81220 = (cppVar_81220 & cppMask_un_16_);
	BIT_VEC cppVar_81221 = ROM.rd(cppVar_81220);
	bool cppVar_81223 = (cppVar_81221 == 128);
	BIT_VEC cppVar_81224 = PC + 1;
	cppVar_81224 = (cppVar_81224 & cppMask_un_16_);
	BIT_VEC cppVar_81225 = ROM.rd(cppVar_81224);
	bool cppVar_81227 = (cppVar_81225 == 129);
	BIT_VEC cppVar_81228 = PC + 1;
	cppVar_81228 = (cppVar_81228 & cppMask_un_16_);
	BIT_VEC cppVar_81229 = ROM.rd(cppVar_81228);
	bool cppVar_81231 = (cppVar_81229 == 130);
	BIT_VEC cppVar_81232 = PC + 1;
	cppVar_81232 = (cppVar_81232 & cppMask_un_16_);
	BIT_VEC cppVar_81233 = ROM.rd(cppVar_81232);
	bool cppVar_81235 = (cppVar_81233 == 131);
	BIT_VEC cppVar_81236 = PC + 1;
	cppVar_81236 = (cppVar_81236 & cppMask_un_16_);
	BIT_VEC cppVar_81237 = ROM.rd(cppVar_81236);
	bool cppVar_81239 = (cppVar_81237 == 135);
	BIT_VEC cppVar_81240 = PC + 1;
	cppVar_81240 = (cppVar_81240 & cppMask_un_16_);
	BIT_VEC cppVar_81241 = ROM.rd(cppVar_81240);
	bool cppVar_81243 = (cppVar_81241 == 136);
	BIT_VEC cppVar_81244 = PC + 1;
	cppVar_81244 = (cppVar_81244 & cppMask_un_16_);
	BIT_VEC cppVar_81245 = ROM.rd(cppVar_81244);
	bool cppVar_81247 = (cppVar_81245 == 137);
	BIT_VEC cppVar_81248 = PC + 1;
	cppVar_81248 = (cppVar_81248 & cppMask_un_16_);
	BIT_VEC cppVar_81249 = ROM.rd(cppVar_81248);
	bool cppVar_81251 = (cppVar_81249 == 138);
	BIT_VEC cppVar_81252 = PC + 1;
	cppVar_81252 = (cppVar_81252 & cppMask_un_16_);
	BIT_VEC cppVar_81253 = ROM.rd(cppVar_81252);
	bool cppVar_81255 = (cppVar_81253 == 140);
	BIT_VEC cppVar_81256 = PC + 1;
	cppVar_81256 = (cppVar_81256 & cppMask_un_16_);
	BIT_VEC cppVar_81257 = ROM.rd(cppVar_81256);
	bool cppVar_81259 = (cppVar_81257 == 139);
	BIT_VEC cppVar_81260 = PC + 1;
	cppVar_81260 = (cppVar_81260 & cppMask_un_16_);
	BIT_VEC cppVar_81261 = ROM.rd(cppVar_81260);
	bool cppVar_81263 = (cppVar_81261 == 141);
	BIT_VEC cppVar_81264 = PC + 1;
	cppVar_81264 = (cppVar_81264 & cppMask_un_16_);
	BIT_VEC cppVar_81265 = ROM.rd(cppVar_81264);
	bool cppVar_81267 = (cppVar_81265 == 144);
	BIT_VEC cppVar_81268 = PC + 1;
	cppVar_81268 = (cppVar_81268 & cppMask_un_16_);
	BIT_VEC cppVar_81269 = ROM.rd(cppVar_81268);
	bool cppVar_81271 = (cppVar_81269 == 152);
	BIT_VEC cppVar_81272 = PC + 1;
	cppVar_81272 = (cppVar_81272 & cppMask_un_16_);
	BIT_VEC cppVar_81273 = ROM.rd(cppVar_81272);
	bool cppVar_81275 = (cppVar_81273 == 153);
	BIT_VEC cppVar_81276 = PC + 1;
	cppVar_81276 = (cppVar_81276 & cppMask_un_16_);
	BIT_VEC cppVar_81277 = ROM.rd(cppVar_81276);
	bool cppVar_81279 = (cppVar_81277 == 160);
	BIT_VEC cppVar_81280 = PC + 1;
	cppVar_81280 = (cppVar_81280 & cppMask_un_16_);
	BIT_VEC cppVar_81281 = ROM.rd(cppVar_81280);
	bool cppVar_81283 = (cppVar_81281 == 168);
	BIT_VEC cppVar_81284 = PC + 1;
	cppVar_81284 = (cppVar_81284 & cppMask_un_16_);
	BIT_VEC cppVar_81285 = ROM.rd(cppVar_81284);
	bool cppVar_81287 = (cppVar_81285 == 176);
	BIT_VEC cppVar_81288 = PC + 1;
	cppVar_81288 = (cppVar_81288 & cppMask_un_16_);
	BIT_VEC cppVar_81289 = ROM.rd(cppVar_81288);
	bool cppVar_81291 = (cppVar_81289 == 184);
	BIT_VEC cppVar_81292 = PC + 1;
	cppVar_81292 = (cppVar_81292 & cppMask_un_16_);
	BIT_VEC cppVar_81293 = ROM.rd(cppVar_81292);
	bool cppVar_81295 = (cppVar_81293 == 208);
	BIT_VEC cppVar_81296 = PC + 1;
	cppVar_81296 = (cppVar_81296 & cppMask_un_16_);
	BIT_VEC cppVar_81297 = ROM.rd(cppVar_81296);
	bool cppVar_81299 = (cppVar_81297 == 224);
	BIT_VEC cppVar_81300 = PC + 1;
	cppVar_81300 = (cppVar_81300 & cppMask_un_16_);
	BIT_VEC cppVar_81301 = ROM.rd(cppVar_81300);
	bool cppVar_81303 = (cppVar_81301 == 240);
	BIT_VEC cppVar_81305 = (cppVar_81303) ? B : 0;
	BIT_VEC cppVar_81306 = (cppVar_81299) ? ACC : cppVar_81305;
	BIT_VEC cppVar_81307 = (cppVar_81295) ? PSW : cppVar_81306;
	BIT_VEC cppVar_81308 = (cppVar_81291) ? IP : cppVar_81307;
	BIT_VEC cppVar_81309 = (cppVar_81287) ? P3 : cppVar_81308;
	BIT_VEC cppVar_81310 = (cppVar_81283) ? IE : cppVar_81309;
	BIT_VEC cppVar_81311 = (cppVar_81279) ? P2 : cppVar_81310;
	BIT_VEC cppVar_81312 = (cppVar_81275) ? SBUF : cppVar_81311;
	BIT_VEC cppVar_81313 = (cppVar_81271) ? SCON : cppVar_81312;
	BIT_VEC cppVar_81314 = (cppVar_81267) ? P1 : cppVar_81313;
	BIT_VEC cppVar_81315 = (cppVar_81263) ? TH1 : cppVar_81314;
	BIT_VEC cppVar_81316 = (cppVar_81259) ? TL1 : cppVar_81315;
	BIT_VEC cppVar_81317 = (cppVar_81255) ? TH0 : cppVar_81316;
	BIT_VEC cppVar_81318 = (cppVar_81251) ? TL0 : cppVar_81317;
	BIT_VEC cppVar_81319 = (cppVar_81247) ? TMOD : cppVar_81318;
	BIT_VEC cppVar_81320 = (cppVar_81243) ? TCON : cppVar_81319;
	BIT_VEC cppVar_81321 = (cppVar_81239) ? PCON : cppVar_81320;
	BIT_VEC cppVar_81322 = (cppVar_81235) ? DPH : cppVar_81321;
	BIT_VEC cppVar_81323 = (cppVar_81231) ? DPL : cppVar_81322;
	BIT_VEC cppVar_81324 = (cppVar_81227) ? SP : cppVar_81323;
	BIT_VEC cppVar_81325 = (cppVar_81223) ? P0 : cppVar_81324;
	BIT_VEC cppVar_81326 = (cppVar_81216) ? cppVar_81219 : cppVar_81325;
	BIT_VEC cppVar_81327 = cppVar_81326 ^ ACC;
	BIT_VEC cppVar_81328 = (cppVar_81211) ? cppVar_81327 : TL1;
	BIT_VEC cppVar_81329 = ROM.rd(PC);
	bool cppVar_81331 = (cppVar_81329 == 83);
	BIT_VEC cppVar_81333 = PC + 1;
	cppVar_81333 = (cppVar_81333 & cppMask_un_16_);
	BIT_VEC cppVar_81334 = ROM.rd(cppVar_81333);
	bool cppVar_81336 = (cppVar_81334 == 139);
	BIT_VEC cppVar_81337 = PC + 1;
	cppVar_81337 = (cppVar_81337 & cppMask_un_16_);
	BIT_VEC cppVar_81338 = ROM.rd(cppVar_81337);
	BIT_VEC cppVar_81339 = (cppVar_81338 >> 7) & cppMask_un_1_;
	bool cppVar_81341 = (cppVar_81339 == 0);
	BIT_VEC cppVar_81342 = PC + 1;
	cppVar_81342 = (cppVar_81342 & cppMask_un_16_);
	BIT_VEC cppVar_81343 = ROM.rd(cppVar_81342);
	BIT_VEC cppVar_81344 = IRAM.rd(cppVar_81343);
	BIT_VEC cppVar_81345 = PC + 1;
	cppVar_81345 = (cppVar_81345 & cppMask_un_16_);
	BIT_VEC cppVar_81346 = ROM.rd(cppVar_81345);
	bool cppVar_81348 = (cppVar_81346 == 128);
	BIT_VEC cppVar_81349 = PC + 1;
	cppVar_81349 = (cppVar_81349 & cppMask_un_16_);
	BIT_VEC cppVar_81350 = ROM.rd(cppVar_81349);
	bool cppVar_81352 = (cppVar_81350 == 129);
	BIT_VEC cppVar_81353 = PC + 1;
	cppVar_81353 = (cppVar_81353 & cppMask_un_16_);
	BIT_VEC cppVar_81354 = ROM.rd(cppVar_81353);
	bool cppVar_81356 = (cppVar_81354 == 130);
	BIT_VEC cppVar_81357 = PC + 1;
	cppVar_81357 = (cppVar_81357 & cppMask_un_16_);
	BIT_VEC cppVar_81358 = ROM.rd(cppVar_81357);
	bool cppVar_81360 = (cppVar_81358 == 131);
	BIT_VEC cppVar_81361 = PC + 1;
	cppVar_81361 = (cppVar_81361 & cppMask_un_16_);
	BIT_VEC cppVar_81362 = ROM.rd(cppVar_81361);
	bool cppVar_81364 = (cppVar_81362 == 135);
	BIT_VEC cppVar_81365 = PC + 1;
	cppVar_81365 = (cppVar_81365 & cppMask_un_16_);
	BIT_VEC cppVar_81366 = ROM.rd(cppVar_81365);
	bool cppVar_81368 = (cppVar_81366 == 136);
	BIT_VEC cppVar_81369 = PC + 1;
	cppVar_81369 = (cppVar_81369 & cppMask_un_16_);
	BIT_VEC cppVar_81370 = ROM.rd(cppVar_81369);
	bool cppVar_81372 = (cppVar_81370 == 137);
	BIT_VEC cppVar_81373 = PC + 1;
	cppVar_81373 = (cppVar_81373 & cppMask_un_16_);
	BIT_VEC cppVar_81374 = ROM.rd(cppVar_81373);
	bool cppVar_81376 = (cppVar_81374 == 138);
	BIT_VEC cppVar_81377 = PC + 1;
	cppVar_81377 = (cppVar_81377 & cppMask_un_16_);
	BIT_VEC cppVar_81378 = ROM.rd(cppVar_81377);
	bool cppVar_81380 = (cppVar_81378 == 140);
	BIT_VEC cppVar_81381 = PC + 1;
	cppVar_81381 = (cppVar_81381 & cppMask_un_16_);
	BIT_VEC cppVar_81382 = ROM.rd(cppVar_81381);
	bool cppVar_81384 = (cppVar_81382 == 139);
	BIT_VEC cppVar_81385 = PC + 1;
	cppVar_81385 = (cppVar_81385 & cppMask_un_16_);
	BIT_VEC cppVar_81386 = ROM.rd(cppVar_81385);
	bool cppVar_81388 = (cppVar_81386 == 141);
	BIT_VEC cppVar_81389 = PC + 1;
	cppVar_81389 = (cppVar_81389 & cppMask_un_16_);
	BIT_VEC cppVar_81390 = ROM.rd(cppVar_81389);
	bool cppVar_81392 = (cppVar_81390 == 144);
	BIT_VEC cppVar_81393 = PC + 1;
	cppVar_81393 = (cppVar_81393 & cppMask_un_16_);
	BIT_VEC cppVar_81394 = ROM.rd(cppVar_81393);
	bool cppVar_81396 = (cppVar_81394 == 152);
	BIT_VEC cppVar_81397 = PC + 1;
	cppVar_81397 = (cppVar_81397 & cppMask_un_16_);
	BIT_VEC cppVar_81398 = ROM.rd(cppVar_81397);
	bool cppVar_81400 = (cppVar_81398 == 153);
	BIT_VEC cppVar_81401 = PC + 1;
	cppVar_81401 = (cppVar_81401 & cppMask_un_16_);
	BIT_VEC cppVar_81402 = ROM.rd(cppVar_81401);
	bool cppVar_81404 = (cppVar_81402 == 160);
	BIT_VEC cppVar_81405 = PC + 1;
	cppVar_81405 = (cppVar_81405 & cppMask_un_16_);
	BIT_VEC cppVar_81406 = ROM.rd(cppVar_81405);
	bool cppVar_81408 = (cppVar_81406 == 168);
	BIT_VEC cppVar_81409 = PC + 1;
	cppVar_81409 = (cppVar_81409 & cppMask_un_16_);
	BIT_VEC cppVar_81410 = ROM.rd(cppVar_81409);
	bool cppVar_81412 = (cppVar_81410 == 176);
	BIT_VEC cppVar_81413 = PC + 1;
	cppVar_81413 = (cppVar_81413 & cppMask_un_16_);
	BIT_VEC cppVar_81414 = ROM.rd(cppVar_81413);
	bool cppVar_81416 = (cppVar_81414 == 184);
	BIT_VEC cppVar_81417 = PC + 1;
	cppVar_81417 = (cppVar_81417 & cppMask_un_16_);
	BIT_VEC cppVar_81418 = ROM.rd(cppVar_81417);
	bool cppVar_81420 = (cppVar_81418 == 208);
	BIT_VEC cppVar_81421 = PC + 1;
	cppVar_81421 = (cppVar_81421 & cppMask_un_16_);
	BIT_VEC cppVar_81422 = ROM.rd(cppVar_81421);
	bool cppVar_81424 = (cppVar_81422 == 224);
	BIT_VEC cppVar_81425 = PC + 1;
	cppVar_81425 = (cppVar_81425 & cppMask_un_16_);
	BIT_VEC cppVar_81426 = ROM.rd(cppVar_81425);
	bool cppVar_81428 = (cppVar_81426 == 240);
	BIT_VEC cppVar_81430 = (cppVar_81428) ? B : 0;
	BIT_VEC cppVar_81431 = (cppVar_81424) ? ACC : cppVar_81430;
	BIT_VEC cppVar_81432 = (cppVar_81420) ? PSW : cppVar_81431;
	BIT_VEC cppVar_81433 = (cppVar_81416) ? IP : cppVar_81432;
	BIT_VEC cppVar_81434 = (cppVar_81412) ? P3 : cppVar_81433;
	BIT_VEC cppVar_81435 = (cppVar_81408) ? IE : cppVar_81434;
	BIT_VEC cppVar_81436 = (cppVar_81404) ? P2 : cppVar_81435;
	BIT_VEC cppVar_81437 = (cppVar_81400) ? SBUF : cppVar_81436;
	BIT_VEC cppVar_81438 = (cppVar_81396) ? SCON : cppVar_81437;
	BIT_VEC cppVar_81439 = (cppVar_81392) ? P1 : cppVar_81438;
	BIT_VEC cppVar_81440 = (cppVar_81388) ? TH1 : cppVar_81439;
	BIT_VEC cppVar_81441 = (cppVar_81384) ? TL1 : cppVar_81440;
	BIT_VEC cppVar_81442 = (cppVar_81380) ? TH0 : cppVar_81441;
	BIT_VEC cppVar_81443 = (cppVar_81376) ? TL0 : cppVar_81442;
	BIT_VEC cppVar_81444 = (cppVar_81372) ? TMOD : cppVar_81443;
	BIT_VEC cppVar_81445 = (cppVar_81368) ? TCON : cppVar_81444;
	BIT_VEC cppVar_81446 = (cppVar_81364) ? PCON : cppVar_81445;
	BIT_VEC cppVar_81447 = (cppVar_81360) ? DPH : cppVar_81446;
	BIT_VEC cppVar_81448 = (cppVar_81356) ? DPL : cppVar_81447;
	BIT_VEC cppVar_81449 = (cppVar_81352) ? SP : cppVar_81448;
	BIT_VEC cppVar_81450 = (cppVar_81348) ? P0 : cppVar_81449;
	BIT_VEC cppVar_81451 = (cppVar_81341) ? cppVar_81344 : cppVar_81450;
	BIT_VEC cppVar_81453 = PC + 2;
	cppVar_81453 = (cppVar_81453 & cppMask_un_16_);
	BIT_VEC cppVar_81454 = ROM.rd(cppVar_81453);
	BIT_VEC cppVar_81455 = cppVar_81451 & cppVar_81454;
	BIT_VEC cppVar_81456 = (cppVar_81336) ? cppVar_81455 : TL1;
	BIT_VEC cppVar_81457 = ROM.rd(PC);
	bool cppVar_81459 = (cppVar_81457 == 82);
	BIT_VEC cppVar_81461 = PC + 1;
	cppVar_81461 = (cppVar_81461 & cppMask_un_16_);
	BIT_VEC cppVar_81462 = ROM.rd(cppVar_81461);
	bool cppVar_81464 = (cppVar_81462 == 139);
	BIT_VEC cppVar_81465 = PC + 1;
	cppVar_81465 = (cppVar_81465 & cppMask_un_16_);
	BIT_VEC cppVar_81466 = ROM.rd(cppVar_81465);
	BIT_VEC cppVar_81467 = (cppVar_81466 >> 7) & cppMask_un_1_;
	bool cppVar_81469 = (cppVar_81467 == 0);
	BIT_VEC cppVar_81470 = PC + 1;
	cppVar_81470 = (cppVar_81470 & cppMask_un_16_);
	BIT_VEC cppVar_81471 = ROM.rd(cppVar_81470);
	BIT_VEC cppVar_81472 = IRAM.rd(cppVar_81471);
	BIT_VEC cppVar_81473 = PC + 1;
	cppVar_81473 = (cppVar_81473 & cppMask_un_16_);
	BIT_VEC cppVar_81474 = ROM.rd(cppVar_81473);
	bool cppVar_81476 = (cppVar_81474 == 128);
	BIT_VEC cppVar_81477 = PC + 1;
	cppVar_81477 = (cppVar_81477 & cppMask_un_16_);
	BIT_VEC cppVar_81478 = ROM.rd(cppVar_81477);
	bool cppVar_81480 = (cppVar_81478 == 129);
	BIT_VEC cppVar_81481 = PC + 1;
	cppVar_81481 = (cppVar_81481 & cppMask_un_16_);
	BIT_VEC cppVar_81482 = ROM.rd(cppVar_81481);
	bool cppVar_81484 = (cppVar_81482 == 130);
	BIT_VEC cppVar_81485 = PC + 1;
	cppVar_81485 = (cppVar_81485 & cppMask_un_16_);
	BIT_VEC cppVar_81486 = ROM.rd(cppVar_81485);
	bool cppVar_81488 = (cppVar_81486 == 131);
	BIT_VEC cppVar_81489 = PC + 1;
	cppVar_81489 = (cppVar_81489 & cppMask_un_16_);
	BIT_VEC cppVar_81490 = ROM.rd(cppVar_81489);
	bool cppVar_81492 = (cppVar_81490 == 135);
	BIT_VEC cppVar_81493 = PC + 1;
	cppVar_81493 = (cppVar_81493 & cppMask_un_16_);
	BIT_VEC cppVar_81494 = ROM.rd(cppVar_81493);
	bool cppVar_81496 = (cppVar_81494 == 136);
	BIT_VEC cppVar_81497 = PC + 1;
	cppVar_81497 = (cppVar_81497 & cppMask_un_16_);
	BIT_VEC cppVar_81498 = ROM.rd(cppVar_81497);
	bool cppVar_81500 = (cppVar_81498 == 137);
	BIT_VEC cppVar_81501 = PC + 1;
	cppVar_81501 = (cppVar_81501 & cppMask_un_16_);
	BIT_VEC cppVar_81502 = ROM.rd(cppVar_81501);
	bool cppVar_81504 = (cppVar_81502 == 138);
	BIT_VEC cppVar_81505 = PC + 1;
	cppVar_81505 = (cppVar_81505 & cppMask_un_16_);
	BIT_VEC cppVar_81506 = ROM.rd(cppVar_81505);
	bool cppVar_81508 = (cppVar_81506 == 140);
	BIT_VEC cppVar_81509 = PC + 1;
	cppVar_81509 = (cppVar_81509 & cppMask_un_16_);
	BIT_VEC cppVar_81510 = ROM.rd(cppVar_81509);
	bool cppVar_81512 = (cppVar_81510 == 139);
	BIT_VEC cppVar_81513 = PC + 1;
	cppVar_81513 = (cppVar_81513 & cppMask_un_16_);
	BIT_VEC cppVar_81514 = ROM.rd(cppVar_81513);
	bool cppVar_81516 = (cppVar_81514 == 141);
	BIT_VEC cppVar_81517 = PC + 1;
	cppVar_81517 = (cppVar_81517 & cppMask_un_16_);
	BIT_VEC cppVar_81518 = ROM.rd(cppVar_81517);
	bool cppVar_81520 = (cppVar_81518 == 144);
	BIT_VEC cppVar_81521 = PC + 1;
	cppVar_81521 = (cppVar_81521 & cppMask_un_16_);
	BIT_VEC cppVar_81522 = ROM.rd(cppVar_81521);
	bool cppVar_81524 = (cppVar_81522 == 152);
	BIT_VEC cppVar_81525 = PC + 1;
	cppVar_81525 = (cppVar_81525 & cppMask_un_16_);
	BIT_VEC cppVar_81526 = ROM.rd(cppVar_81525);
	bool cppVar_81528 = (cppVar_81526 == 153);
	BIT_VEC cppVar_81529 = PC + 1;
	cppVar_81529 = (cppVar_81529 & cppMask_un_16_);
	BIT_VEC cppVar_81530 = ROM.rd(cppVar_81529);
	bool cppVar_81532 = (cppVar_81530 == 160);
	BIT_VEC cppVar_81533 = PC + 1;
	cppVar_81533 = (cppVar_81533 & cppMask_un_16_);
	BIT_VEC cppVar_81534 = ROM.rd(cppVar_81533);
	bool cppVar_81536 = (cppVar_81534 == 168);
	BIT_VEC cppVar_81537 = PC + 1;
	cppVar_81537 = (cppVar_81537 & cppMask_un_16_);
	BIT_VEC cppVar_81538 = ROM.rd(cppVar_81537);
	bool cppVar_81540 = (cppVar_81538 == 176);
	BIT_VEC cppVar_81541 = PC + 1;
	cppVar_81541 = (cppVar_81541 & cppMask_un_16_);
	BIT_VEC cppVar_81542 = ROM.rd(cppVar_81541);
	bool cppVar_81544 = (cppVar_81542 == 184);
	BIT_VEC cppVar_81545 = PC + 1;
	cppVar_81545 = (cppVar_81545 & cppMask_un_16_);
	BIT_VEC cppVar_81546 = ROM.rd(cppVar_81545);
	bool cppVar_81548 = (cppVar_81546 == 208);
	BIT_VEC cppVar_81549 = PC + 1;
	cppVar_81549 = (cppVar_81549 & cppMask_un_16_);
	BIT_VEC cppVar_81550 = ROM.rd(cppVar_81549);
	bool cppVar_81552 = (cppVar_81550 == 224);
	BIT_VEC cppVar_81553 = PC + 1;
	cppVar_81553 = (cppVar_81553 & cppMask_un_16_);
	BIT_VEC cppVar_81554 = ROM.rd(cppVar_81553);
	bool cppVar_81556 = (cppVar_81554 == 240);
	BIT_VEC cppVar_81558 = (cppVar_81556) ? B : 0;
	BIT_VEC cppVar_81559 = (cppVar_81552) ? ACC : cppVar_81558;
	BIT_VEC cppVar_81560 = (cppVar_81548) ? PSW : cppVar_81559;
	BIT_VEC cppVar_81561 = (cppVar_81544) ? IP : cppVar_81560;
	BIT_VEC cppVar_81562 = (cppVar_81540) ? P3 : cppVar_81561;
	BIT_VEC cppVar_81563 = (cppVar_81536) ? IE : cppVar_81562;
	BIT_VEC cppVar_81564 = (cppVar_81532) ? P2 : cppVar_81563;
	BIT_VEC cppVar_81565 = (cppVar_81528) ? SBUF : cppVar_81564;
	BIT_VEC cppVar_81566 = (cppVar_81524) ? SCON : cppVar_81565;
	BIT_VEC cppVar_81567 = (cppVar_81520) ? P1 : cppVar_81566;
	BIT_VEC cppVar_81568 = (cppVar_81516) ? TH1 : cppVar_81567;
	BIT_VEC cppVar_81569 = (cppVar_81512) ? TL1 : cppVar_81568;
	BIT_VEC cppVar_81570 = (cppVar_81508) ? TH0 : cppVar_81569;
	BIT_VEC cppVar_81571 = (cppVar_81504) ? TL0 : cppVar_81570;
	BIT_VEC cppVar_81572 = (cppVar_81500) ? TMOD : cppVar_81571;
	BIT_VEC cppVar_81573 = (cppVar_81496) ? TCON : cppVar_81572;
	BIT_VEC cppVar_81574 = (cppVar_81492) ? PCON : cppVar_81573;
	BIT_VEC cppVar_81575 = (cppVar_81488) ? DPH : cppVar_81574;
	BIT_VEC cppVar_81576 = (cppVar_81484) ? DPL : cppVar_81575;
	BIT_VEC cppVar_81577 = (cppVar_81480) ? SP : cppVar_81576;
	BIT_VEC cppVar_81578 = (cppVar_81476) ? P0 : cppVar_81577;
	BIT_VEC cppVar_81579 = (cppVar_81469) ? cppVar_81472 : cppVar_81578;
	BIT_VEC cppVar_81580 = cppVar_81579 & ACC;
	BIT_VEC cppVar_81581 = (cppVar_81464) ? cppVar_81580 : TL1;
	BIT_VEC cppVar_81582 = ROM.rd(PC);
	bool cppVar_81584 = (cppVar_81582 == 67);
	BIT_VEC cppVar_81586 = PC + 1;
	cppVar_81586 = (cppVar_81586 & cppMask_un_16_);
	BIT_VEC cppVar_81587 = ROM.rd(cppVar_81586);
	bool cppVar_81589 = (cppVar_81587 == 139);
	BIT_VEC cppVar_81590 = PC + 1;
	cppVar_81590 = (cppVar_81590 & cppMask_un_16_);
	BIT_VEC cppVar_81591 = ROM.rd(cppVar_81590);
	BIT_VEC cppVar_81592 = (cppVar_81591 >> 7) & cppMask_un_1_;
	bool cppVar_81594 = (cppVar_81592 == 0);
	BIT_VEC cppVar_81595 = PC + 1;
	cppVar_81595 = (cppVar_81595 & cppMask_un_16_);
	BIT_VEC cppVar_81596 = ROM.rd(cppVar_81595);
	BIT_VEC cppVar_81597 = IRAM.rd(cppVar_81596);
	BIT_VEC cppVar_81598 = PC + 1;
	cppVar_81598 = (cppVar_81598 & cppMask_un_16_);
	BIT_VEC cppVar_81599 = ROM.rd(cppVar_81598);
	bool cppVar_81601 = (cppVar_81599 == 128);
	BIT_VEC cppVar_81602 = PC + 1;
	cppVar_81602 = (cppVar_81602 & cppMask_un_16_);
	BIT_VEC cppVar_81603 = ROM.rd(cppVar_81602);
	bool cppVar_81605 = (cppVar_81603 == 129);
	BIT_VEC cppVar_81606 = PC + 1;
	cppVar_81606 = (cppVar_81606 & cppMask_un_16_);
	BIT_VEC cppVar_81607 = ROM.rd(cppVar_81606);
	bool cppVar_81609 = (cppVar_81607 == 130);
	BIT_VEC cppVar_81610 = PC + 1;
	cppVar_81610 = (cppVar_81610 & cppMask_un_16_);
	BIT_VEC cppVar_81611 = ROM.rd(cppVar_81610);
	bool cppVar_81613 = (cppVar_81611 == 131);
	BIT_VEC cppVar_81614 = PC + 1;
	cppVar_81614 = (cppVar_81614 & cppMask_un_16_);
	BIT_VEC cppVar_81615 = ROM.rd(cppVar_81614);
	bool cppVar_81617 = (cppVar_81615 == 135);
	BIT_VEC cppVar_81618 = PC + 1;
	cppVar_81618 = (cppVar_81618 & cppMask_un_16_);
	BIT_VEC cppVar_81619 = ROM.rd(cppVar_81618);
	bool cppVar_81621 = (cppVar_81619 == 136);
	BIT_VEC cppVar_81622 = PC + 1;
	cppVar_81622 = (cppVar_81622 & cppMask_un_16_);
	BIT_VEC cppVar_81623 = ROM.rd(cppVar_81622);
	bool cppVar_81625 = (cppVar_81623 == 137);
	BIT_VEC cppVar_81626 = PC + 1;
	cppVar_81626 = (cppVar_81626 & cppMask_un_16_);
	BIT_VEC cppVar_81627 = ROM.rd(cppVar_81626);
	bool cppVar_81629 = (cppVar_81627 == 138);
	BIT_VEC cppVar_81630 = PC + 1;
	cppVar_81630 = (cppVar_81630 & cppMask_un_16_);
	BIT_VEC cppVar_81631 = ROM.rd(cppVar_81630);
	bool cppVar_81633 = (cppVar_81631 == 140);
	BIT_VEC cppVar_81634 = PC + 1;
	cppVar_81634 = (cppVar_81634 & cppMask_un_16_);
	BIT_VEC cppVar_81635 = ROM.rd(cppVar_81634);
	bool cppVar_81637 = (cppVar_81635 == 139);
	BIT_VEC cppVar_81638 = PC + 1;
	cppVar_81638 = (cppVar_81638 & cppMask_un_16_);
	BIT_VEC cppVar_81639 = ROM.rd(cppVar_81638);
	bool cppVar_81641 = (cppVar_81639 == 141);
	BIT_VEC cppVar_81642 = PC + 1;
	cppVar_81642 = (cppVar_81642 & cppMask_un_16_);
	BIT_VEC cppVar_81643 = ROM.rd(cppVar_81642);
	bool cppVar_81645 = (cppVar_81643 == 144);
	BIT_VEC cppVar_81646 = PC + 1;
	cppVar_81646 = (cppVar_81646 & cppMask_un_16_);
	BIT_VEC cppVar_81647 = ROM.rd(cppVar_81646);
	bool cppVar_81649 = (cppVar_81647 == 152);
	BIT_VEC cppVar_81650 = PC + 1;
	cppVar_81650 = (cppVar_81650 & cppMask_un_16_);
	BIT_VEC cppVar_81651 = ROM.rd(cppVar_81650);
	bool cppVar_81653 = (cppVar_81651 == 153);
	BIT_VEC cppVar_81654 = PC + 1;
	cppVar_81654 = (cppVar_81654 & cppMask_un_16_);
	BIT_VEC cppVar_81655 = ROM.rd(cppVar_81654);
	bool cppVar_81657 = (cppVar_81655 == 160);
	BIT_VEC cppVar_81658 = PC + 1;
	cppVar_81658 = (cppVar_81658 & cppMask_un_16_);
	BIT_VEC cppVar_81659 = ROM.rd(cppVar_81658);
	bool cppVar_81661 = (cppVar_81659 == 168);
	BIT_VEC cppVar_81662 = PC + 1;
	cppVar_81662 = (cppVar_81662 & cppMask_un_16_);
	BIT_VEC cppVar_81663 = ROM.rd(cppVar_81662);
	bool cppVar_81665 = (cppVar_81663 == 176);
	BIT_VEC cppVar_81666 = PC + 1;
	cppVar_81666 = (cppVar_81666 & cppMask_un_16_);
	BIT_VEC cppVar_81667 = ROM.rd(cppVar_81666);
	bool cppVar_81669 = (cppVar_81667 == 184);
	BIT_VEC cppVar_81670 = PC + 1;
	cppVar_81670 = (cppVar_81670 & cppMask_un_16_);
	BIT_VEC cppVar_81671 = ROM.rd(cppVar_81670);
	bool cppVar_81673 = (cppVar_81671 == 208);
	BIT_VEC cppVar_81674 = PC + 1;
	cppVar_81674 = (cppVar_81674 & cppMask_un_16_);
	BIT_VEC cppVar_81675 = ROM.rd(cppVar_81674);
	bool cppVar_81677 = (cppVar_81675 == 224);
	BIT_VEC cppVar_81678 = PC + 1;
	cppVar_81678 = (cppVar_81678 & cppMask_un_16_);
	BIT_VEC cppVar_81679 = ROM.rd(cppVar_81678);
	bool cppVar_81681 = (cppVar_81679 == 240);
	BIT_VEC cppVar_81683 = (cppVar_81681) ? B : 0;
	BIT_VEC cppVar_81684 = (cppVar_81677) ? ACC : cppVar_81683;
	BIT_VEC cppVar_81685 = (cppVar_81673) ? PSW : cppVar_81684;
	BIT_VEC cppVar_81686 = (cppVar_81669) ? IP : cppVar_81685;
	BIT_VEC cppVar_81687 = (cppVar_81665) ? P3 : cppVar_81686;
	BIT_VEC cppVar_81688 = (cppVar_81661) ? IE : cppVar_81687;
	BIT_VEC cppVar_81689 = (cppVar_81657) ? P2 : cppVar_81688;
	BIT_VEC cppVar_81690 = (cppVar_81653) ? SBUF : cppVar_81689;
	BIT_VEC cppVar_81691 = (cppVar_81649) ? SCON : cppVar_81690;
	BIT_VEC cppVar_81692 = (cppVar_81645) ? P1 : cppVar_81691;
	BIT_VEC cppVar_81693 = (cppVar_81641) ? TH1 : cppVar_81692;
	BIT_VEC cppVar_81694 = (cppVar_81637) ? TL1 : cppVar_81693;
	BIT_VEC cppVar_81695 = (cppVar_81633) ? TH0 : cppVar_81694;
	BIT_VEC cppVar_81696 = (cppVar_81629) ? TL0 : cppVar_81695;
	BIT_VEC cppVar_81697 = (cppVar_81625) ? TMOD : cppVar_81696;
	BIT_VEC cppVar_81698 = (cppVar_81621) ? TCON : cppVar_81697;
	BIT_VEC cppVar_81699 = (cppVar_81617) ? PCON : cppVar_81698;
	BIT_VEC cppVar_81700 = (cppVar_81613) ? DPH : cppVar_81699;
	BIT_VEC cppVar_81701 = (cppVar_81609) ? DPL : cppVar_81700;
	BIT_VEC cppVar_81702 = (cppVar_81605) ? SP : cppVar_81701;
	BIT_VEC cppVar_81703 = (cppVar_81601) ? P0 : cppVar_81702;
	BIT_VEC cppVar_81704 = (cppVar_81594) ? cppVar_81597 : cppVar_81703;
	BIT_VEC cppVar_81706 = PC + 2;
	cppVar_81706 = (cppVar_81706 & cppMask_un_16_);
	BIT_VEC cppVar_81707 = ROM.rd(cppVar_81706);
	BIT_VEC cppVar_81708 = cppVar_81704 | cppVar_81707;
	BIT_VEC cppVar_81709 = (cppVar_81589) ? cppVar_81708 : TL1;
	BIT_VEC cppVar_81710 = ROM.rd(PC);
	bool cppVar_81712 = (cppVar_81710 == 66);
	BIT_VEC cppVar_81714 = PC + 1;
	cppVar_81714 = (cppVar_81714 & cppMask_un_16_);
	BIT_VEC cppVar_81715 = ROM.rd(cppVar_81714);
	bool cppVar_81717 = (cppVar_81715 == 139);
	BIT_VEC cppVar_81718 = PC + 1;
	cppVar_81718 = (cppVar_81718 & cppMask_un_16_);
	BIT_VEC cppVar_81719 = ROM.rd(cppVar_81718);
	BIT_VEC cppVar_81720 = (cppVar_81719 >> 7) & cppMask_un_1_;
	bool cppVar_81722 = (cppVar_81720 == 0);
	BIT_VEC cppVar_81723 = PC + 1;
	cppVar_81723 = (cppVar_81723 & cppMask_un_16_);
	BIT_VEC cppVar_81724 = ROM.rd(cppVar_81723);
	BIT_VEC cppVar_81725 = IRAM.rd(cppVar_81724);
	BIT_VEC cppVar_81726 = PC + 1;
	cppVar_81726 = (cppVar_81726 & cppMask_un_16_);
	BIT_VEC cppVar_81727 = ROM.rd(cppVar_81726);
	bool cppVar_81729 = (cppVar_81727 == 128);
	BIT_VEC cppVar_81730 = PC + 1;
	cppVar_81730 = (cppVar_81730 & cppMask_un_16_);
	BIT_VEC cppVar_81731 = ROM.rd(cppVar_81730);
	bool cppVar_81733 = (cppVar_81731 == 129);
	BIT_VEC cppVar_81734 = PC + 1;
	cppVar_81734 = (cppVar_81734 & cppMask_un_16_);
	BIT_VEC cppVar_81735 = ROM.rd(cppVar_81734);
	bool cppVar_81737 = (cppVar_81735 == 130);
	BIT_VEC cppVar_81738 = PC + 1;
	cppVar_81738 = (cppVar_81738 & cppMask_un_16_);
	BIT_VEC cppVar_81739 = ROM.rd(cppVar_81738);
	bool cppVar_81741 = (cppVar_81739 == 131);
	BIT_VEC cppVar_81742 = PC + 1;
	cppVar_81742 = (cppVar_81742 & cppMask_un_16_);
	BIT_VEC cppVar_81743 = ROM.rd(cppVar_81742);
	bool cppVar_81745 = (cppVar_81743 == 135);
	BIT_VEC cppVar_81746 = PC + 1;
	cppVar_81746 = (cppVar_81746 & cppMask_un_16_);
	BIT_VEC cppVar_81747 = ROM.rd(cppVar_81746);
	bool cppVar_81749 = (cppVar_81747 == 136);
	BIT_VEC cppVar_81750 = PC + 1;
	cppVar_81750 = (cppVar_81750 & cppMask_un_16_);
	BIT_VEC cppVar_81751 = ROM.rd(cppVar_81750);
	bool cppVar_81753 = (cppVar_81751 == 137);
	BIT_VEC cppVar_81754 = PC + 1;
	cppVar_81754 = (cppVar_81754 & cppMask_un_16_);
	BIT_VEC cppVar_81755 = ROM.rd(cppVar_81754);
	bool cppVar_81757 = (cppVar_81755 == 138);
	BIT_VEC cppVar_81758 = PC + 1;
	cppVar_81758 = (cppVar_81758 & cppMask_un_16_);
	BIT_VEC cppVar_81759 = ROM.rd(cppVar_81758);
	bool cppVar_81761 = (cppVar_81759 == 140);
	BIT_VEC cppVar_81762 = PC + 1;
	cppVar_81762 = (cppVar_81762 & cppMask_un_16_);
	BIT_VEC cppVar_81763 = ROM.rd(cppVar_81762);
	bool cppVar_81765 = (cppVar_81763 == 139);
	BIT_VEC cppVar_81766 = PC + 1;
	cppVar_81766 = (cppVar_81766 & cppMask_un_16_);
	BIT_VEC cppVar_81767 = ROM.rd(cppVar_81766);
	bool cppVar_81769 = (cppVar_81767 == 141);
	BIT_VEC cppVar_81770 = PC + 1;
	cppVar_81770 = (cppVar_81770 & cppMask_un_16_);
	BIT_VEC cppVar_81771 = ROM.rd(cppVar_81770);
	bool cppVar_81773 = (cppVar_81771 == 144);
	BIT_VEC cppVar_81774 = PC + 1;
	cppVar_81774 = (cppVar_81774 & cppMask_un_16_);
	BIT_VEC cppVar_81775 = ROM.rd(cppVar_81774);
	bool cppVar_81777 = (cppVar_81775 == 152);
	BIT_VEC cppVar_81778 = PC + 1;
	cppVar_81778 = (cppVar_81778 & cppMask_un_16_);
	BIT_VEC cppVar_81779 = ROM.rd(cppVar_81778);
	bool cppVar_81781 = (cppVar_81779 == 153);
	BIT_VEC cppVar_81782 = PC + 1;
	cppVar_81782 = (cppVar_81782 & cppMask_un_16_);
	BIT_VEC cppVar_81783 = ROM.rd(cppVar_81782);
	bool cppVar_81785 = (cppVar_81783 == 160);
	BIT_VEC cppVar_81786 = PC + 1;
	cppVar_81786 = (cppVar_81786 & cppMask_un_16_);
	BIT_VEC cppVar_81787 = ROM.rd(cppVar_81786);
	bool cppVar_81789 = (cppVar_81787 == 168);
	BIT_VEC cppVar_81790 = PC + 1;
	cppVar_81790 = (cppVar_81790 & cppMask_un_16_);
	BIT_VEC cppVar_81791 = ROM.rd(cppVar_81790);
	bool cppVar_81793 = (cppVar_81791 == 176);
	BIT_VEC cppVar_81794 = PC + 1;
	cppVar_81794 = (cppVar_81794 & cppMask_un_16_);
	BIT_VEC cppVar_81795 = ROM.rd(cppVar_81794);
	bool cppVar_81797 = (cppVar_81795 == 184);
	BIT_VEC cppVar_81798 = PC + 1;
	cppVar_81798 = (cppVar_81798 & cppMask_un_16_);
	BIT_VEC cppVar_81799 = ROM.rd(cppVar_81798);
	bool cppVar_81801 = (cppVar_81799 == 208);
	BIT_VEC cppVar_81802 = PC + 1;
	cppVar_81802 = (cppVar_81802 & cppMask_un_16_);
	BIT_VEC cppVar_81803 = ROM.rd(cppVar_81802);
	bool cppVar_81805 = (cppVar_81803 == 224);
	BIT_VEC cppVar_81806 = PC + 1;
	cppVar_81806 = (cppVar_81806 & cppMask_un_16_);
	BIT_VEC cppVar_81807 = ROM.rd(cppVar_81806);
	bool cppVar_81809 = (cppVar_81807 == 240);
	BIT_VEC cppVar_81811 = (cppVar_81809) ? B : 0;
	BIT_VEC cppVar_81812 = (cppVar_81805) ? ACC : cppVar_81811;
	BIT_VEC cppVar_81813 = (cppVar_81801) ? PSW : cppVar_81812;
	BIT_VEC cppVar_81814 = (cppVar_81797) ? IP : cppVar_81813;
	BIT_VEC cppVar_81815 = (cppVar_81793) ? P3 : cppVar_81814;
	BIT_VEC cppVar_81816 = (cppVar_81789) ? IE : cppVar_81815;
	BIT_VEC cppVar_81817 = (cppVar_81785) ? P2 : cppVar_81816;
	BIT_VEC cppVar_81818 = (cppVar_81781) ? SBUF : cppVar_81817;
	BIT_VEC cppVar_81819 = (cppVar_81777) ? SCON : cppVar_81818;
	BIT_VEC cppVar_81820 = (cppVar_81773) ? P1 : cppVar_81819;
	BIT_VEC cppVar_81821 = (cppVar_81769) ? TH1 : cppVar_81820;
	BIT_VEC cppVar_81822 = (cppVar_81765) ? TL1 : cppVar_81821;
	BIT_VEC cppVar_81823 = (cppVar_81761) ? TH0 : cppVar_81822;
	BIT_VEC cppVar_81824 = (cppVar_81757) ? TL0 : cppVar_81823;
	BIT_VEC cppVar_81825 = (cppVar_81753) ? TMOD : cppVar_81824;
	BIT_VEC cppVar_81826 = (cppVar_81749) ? TCON : cppVar_81825;
	BIT_VEC cppVar_81827 = (cppVar_81745) ? PCON : cppVar_81826;
	BIT_VEC cppVar_81828 = (cppVar_81741) ? DPH : cppVar_81827;
	BIT_VEC cppVar_81829 = (cppVar_81737) ? DPL : cppVar_81828;
	BIT_VEC cppVar_81830 = (cppVar_81733) ? SP : cppVar_81829;
	BIT_VEC cppVar_81831 = (cppVar_81729) ? P0 : cppVar_81830;
	BIT_VEC cppVar_81832 = (cppVar_81722) ? cppVar_81725 : cppVar_81831;
	BIT_VEC cppVar_81833 = cppVar_81832 | ACC;
	BIT_VEC cppVar_81834 = (cppVar_81717) ? cppVar_81833 : TL1;
	BIT_VEC cppVar_81835 = ROM.rd(PC);
	bool cppVar_81837 = (cppVar_81835 == 213);
	BIT_VEC cppVar_81838 = ROM.rd(PC);
	bool cppVar_81840 = (cppVar_81838 == 21);
	bool cppVar_81841 = cppVar_81837 || cppVar_81840;
	BIT_VEC cppVar_81843 = PC + 1;
	cppVar_81843 = (cppVar_81843 & cppMask_un_16_);
	BIT_VEC cppVar_81844 = ROM.rd(cppVar_81843);
	bool cppVar_81846 = (cppVar_81844 == 139);
	BIT_VEC cppVar_81847 = PC + 1;
	cppVar_81847 = (cppVar_81847 & cppMask_un_16_);
	BIT_VEC cppVar_81848 = ROM.rd(cppVar_81847);
	BIT_VEC cppVar_81849 = (cppVar_81848 >> 7) & cppMask_un_1_;
	bool cppVar_81851 = (cppVar_81849 == 0);
	BIT_VEC cppVar_81852 = PC + 1;
	cppVar_81852 = (cppVar_81852 & cppMask_un_16_);
	BIT_VEC cppVar_81853 = ROM.rd(cppVar_81852);
	BIT_VEC cppVar_81854 = IRAM.rd(cppVar_81853);
	BIT_VEC cppVar_81855 = PC + 1;
	cppVar_81855 = (cppVar_81855 & cppMask_un_16_);
	BIT_VEC cppVar_81856 = ROM.rd(cppVar_81855);
	bool cppVar_81858 = (cppVar_81856 == 128);
	BIT_VEC cppVar_81859 = PC + 1;
	cppVar_81859 = (cppVar_81859 & cppMask_un_16_);
	BIT_VEC cppVar_81860 = ROM.rd(cppVar_81859);
	bool cppVar_81862 = (cppVar_81860 == 129);
	BIT_VEC cppVar_81863 = PC + 1;
	cppVar_81863 = (cppVar_81863 & cppMask_un_16_);
	BIT_VEC cppVar_81864 = ROM.rd(cppVar_81863);
	bool cppVar_81866 = (cppVar_81864 == 130);
	BIT_VEC cppVar_81867 = PC + 1;
	cppVar_81867 = (cppVar_81867 & cppMask_un_16_);
	BIT_VEC cppVar_81868 = ROM.rd(cppVar_81867);
	bool cppVar_81870 = (cppVar_81868 == 131);
	BIT_VEC cppVar_81871 = PC + 1;
	cppVar_81871 = (cppVar_81871 & cppMask_un_16_);
	BIT_VEC cppVar_81872 = ROM.rd(cppVar_81871);
	bool cppVar_81874 = (cppVar_81872 == 135);
	BIT_VEC cppVar_81875 = PC + 1;
	cppVar_81875 = (cppVar_81875 & cppMask_un_16_);
	BIT_VEC cppVar_81876 = ROM.rd(cppVar_81875);
	bool cppVar_81878 = (cppVar_81876 == 136);
	BIT_VEC cppVar_81879 = PC + 1;
	cppVar_81879 = (cppVar_81879 & cppMask_un_16_);
	BIT_VEC cppVar_81880 = ROM.rd(cppVar_81879);
	bool cppVar_81882 = (cppVar_81880 == 137);
	BIT_VEC cppVar_81883 = PC + 1;
	cppVar_81883 = (cppVar_81883 & cppMask_un_16_);
	BIT_VEC cppVar_81884 = ROM.rd(cppVar_81883);
	bool cppVar_81886 = (cppVar_81884 == 138);
	BIT_VEC cppVar_81887 = PC + 1;
	cppVar_81887 = (cppVar_81887 & cppMask_un_16_);
	BIT_VEC cppVar_81888 = ROM.rd(cppVar_81887);
	bool cppVar_81890 = (cppVar_81888 == 140);
	BIT_VEC cppVar_81891 = PC + 1;
	cppVar_81891 = (cppVar_81891 & cppMask_un_16_);
	BIT_VEC cppVar_81892 = ROM.rd(cppVar_81891);
	bool cppVar_81894 = (cppVar_81892 == 139);
	BIT_VEC cppVar_81895 = PC + 1;
	cppVar_81895 = (cppVar_81895 & cppMask_un_16_);
	BIT_VEC cppVar_81896 = ROM.rd(cppVar_81895);
	bool cppVar_81898 = (cppVar_81896 == 141);
	BIT_VEC cppVar_81899 = PC + 1;
	cppVar_81899 = (cppVar_81899 & cppMask_un_16_);
	BIT_VEC cppVar_81900 = ROM.rd(cppVar_81899);
	bool cppVar_81902 = (cppVar_81900 == 144);
	BIT_VEC cppVar_81903 = PC + 1;
	cppVar_81903 = (cppVar_81903 & cppMask_un_16_);
	BIT_VEC cppVar_81904 = ROM.rd(cppVar_81903);
	bool cppVar_81906 = (cppVar_81904 == 152);
	BIT_VEC cppVar_81907 = PC + 1;
	cppVar_81907 = (cppVar_81907 & cppMask_un_16_);
	BIT_VEC cppVar_81908 = ROM.rd(cppVar_81907);
	bool cppVar_81910 = (cppVar_81908 == 153);
	BIT_VEC cppVar_81911 = PC + 1;
	cppVar_81911 = (cppVar_81911 & cppMask_un_16_);
	BIT_VEC cppVar_81912 = ROM.rd(cppVar_81911);
	bool cppVar_81914 = (cppVar_81912 == 160);
	BIT_VEC cppVar_81915 = PC + 1;
	cppVar_81915 = (cppVar_81915 & cppMask_un_16_);
	BIT_VEC cppVar_81916 = ROM.rd(cppVar_81915);
	bool cppVar_81918 = (cppVar_81916 == 168);
	BIT_VEC cppVar_81919 = PC + 1;
	cppVar_81919 = (cppVar_81919 & cppMask_un_16_);
	BIT_VEC cppVar_81920 = ROM.rd(cppVar_81919);
	bool cppVar_81922 = (cppVar_81920 == 176);
	BIT_VEC cppVar_81923 = PC + 1;
	cppVar_81923 = (cppVar_81923 & cppMask_un_16_);
	BIT_VEC cppVar_81924 = ROM.rd(cppVar_81923);
	bool cppVar_81926 = (cppVar_81924 == 184);
	BIT_VEC cppVar_81927 = PC + 1;
	cppVar_81927 = (cppVar_81927 & cppMask_un_16_);
	BIT_VEC cppVar_81928 = ROM.rd(cppVar_81927);
	bool cppVar_81930 = (cppVar_81928 == 208);
	BIT_VEC cppVar_81931 = PC + 1;
	cppVar_81931 = (cppVar_81931 & cppMask_un_16_);
	BIT_VEC cppVar_81932 = ROM.rd(cppVar_81931);
	bool cppVar_81934 = (cppVar_81932 == 224);
	BIT_VEC cppVar_81935 = PC + 1;
	cppVar_81935 = (cppVar_81935 & cppMask_un_16_);
	BIT_VEC cppVar_81936 = ROM.rd(cppVar_81935);
	bool cppVar_81938 = (cppVar_81936 == 240);
	BIT_VEC cppVar_81940 = (cppVar_81938) ? B : 0;
	BIT_VEC cppVar_81941 = (cppVar_81934) ? ACC : cppVar_81940;
	BIT_VEC cppVar_81942 = (cppVar_81930) ? PSW : cppVar_81941;
	BIT_VEC cppVar_81943 = (cppVar_81926) ? IP : cppVar_81942;
	BIT_VEC cppVar_81944 = (cppVar_81922) ? P3 : cppVar_81943;
	BIT_VEC cppVar_81945 = (cppVar_81918) ? IE : cppVar_81944;
	BIT_VEC cppVar_81946 = (cppVar_81914) ? P2 : cppVar_81945;
	BIT_VEC cppVar_81947 = (cppVar_81910) ? SBUF : cppVar_81946;
	BIT_VEC cppVar_81948 = (cppVar_81906) ? SCON : cppVar_81947;
	BIT_VEC cppVar_81949 = (cppVar_81902) ? P1 : cppVar_81948;
	BIT_VEC cppVar_81950 = (cppVar_81898) ? TH1 : cppVar_81949;
	BIT_VEC cppVar_81951 = (cppVar_81894) ? TL1 : cppVar_81950;
	BIT_VEC cppVar_81952 = (cppVar_81890) ? TH0 : cppVar_81951;
	BIT_VEC cppVar_81953 = (cppVar_81886) ? TL0 : cppVar_81952;
	BIT_VEC cppVar_81954 = (cppVar_81882) ? TMOD : cppVar_81953;
	BIT_VEC cppVar_81955 = (cppVar_81878) ? TCON : cppVar_81954;
	BIT_VEC cppVar_81956 = (cppVar_81874) ? PCON : cppVar_81955;
	BIT_VEC cppVar_81957 = (cppVar_81870) ? DPH : cppVar_81956;
	BIT_VEC cppVar_81958 = (cppVar_81866) ? DPL : cppVar_81957;
	BIT_VEC cppVar_81959 = (cppVar_81862) ? SP : cppVar_81958;
	BIT_VEC cppVar_81960 = (cppVar_81858) ? P0 : cppVar_81959;
	BIT_VEC cppVar_81961 = (cppVar_81851) ? cppVar_81854 : cppVar_81960;
	BIT_VEC cppVar_81963 = cppVar_81961 - 1;
	cppVar_81963 = (cppVar_81963 & cppMask_un_8_);
	BIT_VEC cppVar_81964 = (cppVar_81846) ? cppVar_81963 : TL1;
	BIT_VEC cppVar_81965 = ROM.rd(PC);
	bool cppVar_81967 = (cppVar_81965 == 5);
	BIT_VEC cppVar_81969 = PC + 1;
	cppVar_81969 = (cppVar_81969 & cppMask_un_16_);
	BIT_VEC cppVar_81970 = ROM.rd(cppVar_81969);
	bool cppVar_81972 = (cppVar_81970 == 139);
	BIT_VEC cppVar_81973 = PC + 1;
	cppVar_81973 = (cppVar_81973 & cppMask_un_16_);
	BIT_VEC cppVar_81974 = ROM.rd(cppVar_81973);
	BIT_VEC cppVar_81975 = (cppVar_81974 >> 7) & cppMask_un_1_;
	bool cppVar_81977 = (cppVar_81975 == 0);
	BIT_VEC cppVar_81978 = PC + 1;
	cppVar_81978 = (cppVar_81978 & cppMask_un_16_);
	BIT_VEC cppVar_81979 = ROM.rd(cppVar_81978);
	BIT_VEC cppVar_81980 = IRAM.rd(cppVar_81979);
	BIT_VEC cppVar_81981 = PC + 1;
	cppVar_81981 = (cppVar_81981 & cppMask_un_16_);
	BIT_VEC cppVar_81982 = ROM.rd(cppVar_81981);
	bool cppVar_81984 = (cppVar_81982 == 128);
	BIT_VEC cppVar_81985 = PC + 1;
	cppVar_81985 = (cppVar_81985 & cppMask_un_16_);
	BIT_VEC cppVar_81986 = ROM.rd(cppVar_81985);
	bool cppVar_81988 = (cppVar_81986 == 129);
	BIT_VEC cppVar_81989 = PC + 1;
	cppVar_81989 = (cppVar_81989 & cppMask_un_16_);
	BIT_VEC cppVar_81990 = ROM.rd(cppVar_81989);
	bool cppVar_81992 = (cppVar_81990 == 130);
	BIT_VEC cppVar_81993 = PC + 1;
	cppVar_81993 = (cppVar_81993 & cppMask_un_16_);
	BIT_VEC cppVar_81994 = ROM.rd(cppVar_81993);
	bool cppVar_81996 = (cppVar_81994 == 131);
	BIT_VEC cppVar_81997 = PC + 1;
	cppVar_81997 = (cppVar_81997 & cppMask_un_16_);
	BIT_VEC cppVar_81998 = ROM.rd(cppVar_81997);
	bool cppVar_82000 = (cppVar_81998 == 135);
	BIT_VEC cppVar_82001 = PC + 1;
	cppVar_82001 = (cppVar_82001 & cppMask_un_16_);
	BIT_VEC cppVar_82002 = ROM.rd(cppVar_82001);
	bool cppVar_82004 = (cppVar_82002 == 136);
	BIT_VEC cppVar_82005 = PC + 1;
	cppVar_82005 = (cppVar_82005 & cppMask_un_16_);
	BIT_VEC cppVar_82006 = ROM.rd(cppVar_82005);
	bool cppVar_82008 = (cppVar_82006 == 137);
	BIT_VEC cppVar_82009 = PC + 1;
	cppVar_82009 = (cppVar_82009 & cppMask_un_16_);
	BIT_VEC cppVar_82010 = ROM.rd(cppVar_82009);
	bool cppVar_82012 = (cppVar_82010 == 138);
	BIT_VEC cppVar_82013 = PC + 1;
	cppVar_82013 = (cppVar_82013 & cppMask_un_16_);
	BIT_VEC cppVar_82014 = ROM.rd(cppVar_82013);
	bool cppVar_82016 = (cppVar_82014 == 140);
	BIT_VEC cppVar_82017 = PC + 1;
	cppVar_82017 = (cppVar_82017 & cppMask_un_16_);
	BIT_VEC cppVar_82018 = ROM.rd(cppVar_82017);
	bool cppVar_82020 = (cppVar_82018 == 139);
	BIT_VEC cppVar_82021 = PC + 1;
	cppVar_82021 = (cppVar_82021 & cppMask_un_16_);
	BIT_VEC cppVar_82022 = ROM.rd(cppVar_82021);
	bool cppVar_82024 = (cppVar_82022 == 141);
	BIT_VEC cppVar_82025 = PC + 1;
	cppVar_82025 = (cppVar_82025 & cppMask_un_16_);
	BIT_VEC cppVar_82026 = ROM.rd(cppVar_82025);
	bool cppVar_82028 = (cppVar_82026 == 144);
	BIT_VEC cppVar_82029 = PC + 1;
	cppVar_82029 = (cppVar_82029 & cppMask_un_16_);
	BIT_VEC cppVar_82030 = ROM.rd(cppVar_82029);
	bool cppVar_82032 = (cppVar_82030 == 152);
	BIT_VEC cppVar_82033 = PC + 1;
	cppVar_82033 = (cppVar_82033 & cppMask_un_16_);
	BIT_VEC cppVar_82034 = ROM.rd(cppVar_82033);
	bool cppVar_82036 = (cppVar_82034 == 153);
	BIT_VEC cppVar_82037 = PC + 1;
	cppVar_82037 = (cppVar_82037 & cppMask_un_16_);
	BIT_VEC cppVar_82038 = ROM.rd(cppVar_82037);
	bool cppVar_82040 = (cppVar_82038 == 160);
	BIT_VEC cppVar_82041 = PC + 1;
	cppVar_82041 = (cppVar_82041 & cppMask_un_16_);
	BIT_VEC cppVar_82042 = ROM.rd(cppVar_82041);
	bool cppVar_82044 = (cppVar_82042 == 168);
	BIT_VEC cppVar_82045 = PC + 1;
	cppVar_82045 = (cppVar_82045 & cppMask_un_16_);
	BIT_VEC cppVar_82046 = ROM.rd(cppVar_82045);
	bool cppVar_82048 = (cppVar_82046 == 176);
	BIT_VEC cppVar_82049 = PC + 1;
	cppVar_82049 = (cppVar_82049 & cppMask_un_16_);
	BIT_VEC cppVar_82050 = ROM.rd(cppVar_82049);
	bool cppVar_82052 = (cppVar_82050 == 184);
	BIT_VEC cppVar_82053 = PC + 1;
	cppVar_82053 = (cppVar_82053 & cppMask_un_16_);
	BIT_VEC cppVar_82054 = ROM.rd(cppVar_82053);
	bool cppVar_82056 = (cppVar_82054 == 208);
	BIT_VEC cppVar_82057 = PC + 1;
	cppVar_82057 = (cppVar_82057 & cppMask_un_16_);
	BIT_VEC cppVar_82058 = ROM.rd(cppVar_82057);
	bool cppVar_82060 = (cppVar_82058 == 224);
	BIT_VEC cppVar_82061 = PC + 1;
	cppVar_82061 = (cppVar_82061 & cppMask_un_16_);
	BIT_VEC cppVar_82062 = ROM.rd(cppVar_82061);
	bool cppVar_82064 = (cppVar_82062 == 240);
	BIT_VEC cppVar_82066 = (cppVar_82064) ? B : 0;
	BIT_VEC cppVar_82067 = (cppVar_82060) ? ACC : cppVar_82066;
	BIT_VEC cppVar_82068 = (cppVar_82056) ? PSW : cppVar_82067;
	BIT_VEC cppVar_82069 = (cppVar_82052) ? IP : cppVar_82068;
	BIT_VEC cppVar_82070 = (cppVar_82048) ? P3 : cppVar_82069;
	BIT_VEC cppVar_82071 = (cppVar_82044) ? IE : cppVar_82070;
	BIT_VEC cppVar_82072 = (cppVar_82040) ? P2 : cppVar_82071;
	BIT_VEC cppVar_82073 = (cppVar_82036) ? SBUF : cppVar_82072;
	BIT_VEC cppVar_82074 = (cppVar_82032) ? SCON : cppVar_82073;
	BIT_VEC cppVar_82075 = (cppVar_82028) ? P1 : cppVar_82074;
	BIT_VEC cppVar_82076 = (cppVar_82024) ? TH1 : cppVar_82075;
	BIT_VEC cppVar_82077 = (cppVar_82020) ? TL1 : cppVar_82076;
	BIT_VEC cppVar_82078 = (cppVar_82016) ? TH0 : cppVar_82077;
	BIT_VEC cppVar_82079 = (cppVar_82012) ? TL0 : cppVar_82078;
	BIT_VEC cppVar_82080 = (cppVar_82008) ? TMOD : cppVar_82079;
	BIT_VEC cppVar_82081 = (cppVar_82004) ? TCON : cppVar_82080;
	BIT_VEC cppVar_82082 = (cppVar_82000) ? PCON : cppVar_82081;
	BIT_VEC cppVar_82083 = (cppVar_81996) ? DPH : cppVar_82082;
	BIT_VEC cppVar_82084 = (cppVar_81992) ? DPL : cppVar_82083;
	BIT_VEC cppVar_82085 = (cppVar_81988) ? SP : cppVar_82084;
	BIT_VEC cppVar_82086 = (cppVar_81984) ? P0 : cppVar_82085;
	BIT_VEC cppVar_82087 = (cppVar_81977) ? cppVar_81980 : cppVar_82086;
	BIT_VEC cppVar_82089 = cppVar_82087 + 1;
	cppVar_82089 = (cppVar_82089 & cppMask_un_8_);
	BIT_VEC cppVar_82090 = (cppVar_81972) ? cppVar_82089 : TL1;
	BIT_VEC cppVar_82091 = (cppVar_81967) ? cppVar_82090 : TL1;
	BIT_VEC cppVar_82092 = (cppVar_81841) ? cppVar_81964 : cppVar_82091;
	BIT_VEC cppVar_82093 = (cppVar_81712) ? cppVar_81834 : cppVar_82092;
	BIT_VEC cppVar_82094 = (cppVar_81584) ? cppVar_81709 : cppVar_82093;
	BIT_VEC cppVar_82095 = (cppVar_81459) ? cppVar_81581 : cppVar_82094;
	BIT_VEC cppVar_82096 = (cppVar_81331) ? cppVar_81456 : cppVar_82095;
	BIT_VEC cppVar_82097 = (cppVar_81206) ? cppVar_81328 : cppVar_82096;
	BIT_VEC cppVar_82098 = (cppVar_81078) ? cppVar_81203 : cppVar_82097;
	BIT_VEC cppVar_82099 = (cppVar_81066) ? cppVar_81075 : cppVar_82098;
	BIT_VEC cppVar_82100 = (cppVar_80941) ? cppVar_81063 : cppVar_82099;
	BIT_VEC cppVar_82101 = (cppVar_80925) ? cppVar_80938 : cppVar_82100;
	BIT_VEC cppVar_82102 = (cppVar_80909) ? cppVar_80922 : cppVar_82101;
	BIT_VEC cppVar_82103 = (cppVar_80760) ? cppVar_80906 : cppVar_82102;
	BIT_VEC cppVar_82104 = (cppVar_80611) ? cppVar_80757 : cppVar_82103;
	BIT_VEC cppVar_82105 = (cppVar_80462) ? cppVar_80608 : cppVar_82104;
	BIT_VEC cppVar_82106 = (cppVar_80313) ? cppVar_80459 : cppVar_82105;
	BIT_VEC cppVar_82107 = (cppVar_80164) ? cppVar_80310 : cppVar_82106;
	BIT_VEC cppVar_82108 = (cppVar_80015) ? cppVar_80161 : cppVar_82107;
	BIT_VEC cppVar_82109 = (cppVar_79866) ? cppVar_80012 : cppVar_82108;
	BIT_VEC cppVar_82110 = (cppVar_79717) ? cppVar_79863 : cppVar_82109;
	BIT_VEC cppVar_82111 = (cppVar_79708) ? cppVar_79714 : cppVar_82110;
	BIT_VEC cppVar_82112 = (cppVar_79694) ? cppVar_79701 : cppVar_82111;
	return cppVar_82112;
}
