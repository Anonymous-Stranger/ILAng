#include "common.hpp"
#include "model_oc8051_class.hpp"

BIT_VEC model_oc8051::cppUpdateFun_PC()
{
	BIT_VEC cppVar_41661 = ROM.rd(PC);
	bool cppVar_41663 = (cppVar_41661 == 241);
	BIT_VEC cppVar_41664 = ROM.rd(PC);
	bool cppVar_41666 = (cppVar_41664 == 225);
	bool cppVar_41667 = cppVar_41663 || cppVar_41666;
	BIT_VEC cppVar_41669 = PC + 2;
	cppVar_41669 = (cppVar_41669 & cppMask_un_16_);
	BIT_VEC cppVar_41670 = (cppVar_41669 >> 11) & cppMask_un_5_;
	BIT_VEC cppVar_41672 = (cppVar_41670 << 3) | 7;
	cppVar_41672 = (cppVar_41672 & cppMask_un_8_);
	BIT_VEC cppVar_41674 = PC + 1;
	cppVar_41674 = (cppVar_41674 & cppMask_un_16_);
	BIT_VEC cppVar_41675 = ROM.rd(cppVar_41674);
	BIT_VEC cppVar_41676 = (cppVar_41672 << 8) | cppVar_41675;
	cppVar_41676 = (cppVar_41676 & cppMask_un_16_);
	BIT_VEC cppVar_41677 = ROM.rd(PC);
	bool cppVar_41679 = (cppVar_41677 == 223);
	BIT_VEC cppVar_41681 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_41683 = (cppVar_41681 << 3) | 7;
	cppVar_41683 = (cppVar_41683 & cppMask_un_5_);
	BIT_VEC cppVar_41684 = (0 << 5) | cppVar_41683;
	cppVar_41684 = (cppVar_41684 & cppMask_un_8_);
	BIT_VEC cppVar_41685 = IRAM.rd(cppVar_41684);
	bool cppVar_41687 = (cppVar_41685 != 1);
	BIT_VEC cppVar_41689 = PC + 2;
	cppVar_41689 = (cppVar_41689 & cppMask_un_16_);
	BIT_VEC cppVar_41691 = PC + 1;
	cppVar_41691 = (cppVar_41691 & cppMask_un_16_);
	BIT_VEC cppVar_41692 = ROM.rd(cppVar_41691);
	BIT_VEC cppVar_41693 = ((cppVar_41692 & cppMask_bit_8_) ? (cppVar_41692 | cppMask_sign_8_) : cppVar_41692);
	BIT_VEC cppVar_41694 = cppVar_41689 + cppVar_41693;
	cppVar_41694 = (cppVar_41694 & cppMask_un_16_);
	BIT_VEC cppVar_41696 = PC + 2;
	cppVar_41696 = (cppVar_41696 & cppMask_un_16_);
	BIT_VEC cppVar_41697 = (cppVar_41687) ? cppVar_41694 : cppVar_41696;
	BIT_VEC cppVar_41698 = ROM.rd(PC);
	bool cppVar_41700 = (cppVar_41698 == 222);
	BIT_VEC cppVar_41702 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_41704 = (cppVar_41702 << 3) | 6;
	cppVar_41704 = (cppVar_41704 & cppMask_un_5_);
	BIT_VEC cppVar_41705 = (0 << 5) | cppVar_41704;
	cppVar_41705 = (cppVar_41705 & cppMask_un_8_);
	BIT_VEC cppVar_41706 = IRAM.rd(cppVar_41705);
	bool cppVar_41708 = (cppVar_41706 != 1);
	BIT_VEC cppVar_41710 = PC + 2;
	cppVar_41710 = (cppVar_41710 & cppMask_un_16_);
	BIT_VEC cppVar_41712 = PC + 1;
	cppVar_41712 = (cppVar_41712 & cppMask_un_16_);
	BIT_VEC cppVar_41713 = ROM.rd(cppVar_41712);
	BIT_VEC cppVar_41714 = ((cppVar_41713 & cppMask_bit_8_) ? (cppVar_41713 | cppMask_sign_8_) : cppVar_41713);
	BIT_VEC cppVar_41715 = cppVar_41710 + cppVar_41714;
	cppVar_41715 = (cppVar_41715 & cppMask_un_16_);
	BIT_VEC cppVar_41717 = PC + 2;
	cppVar_41717 = (cppVar_41717 & cppMask_un_16_);
	BIT_VEC cppVar_41718 = (cppVar_41708) ? cppVar_41715 : cppVar_41717;
	BIT_VEC cppVar_41719 = ROM.rd(PC);
	bool cppVar_41721 = (cppVar_41719 == 221);
	BIT_VEC cppVar_41723 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_41725 = (cppVar_41723 << 3) | 5;
	cppVar_41725 = (cppVar_41725 & cppMask_un_5_);
	BIT_VEC cppVar_41726 = (0 << 5) | cppVar_41725;
	cppVar_41726 = (cppVar_41726 & cppMask_un_8_);
	BIT_VEC cppVar_41727 = IRAM.rd(cppVar_41726);
	bool cppVar_41729 = (cppVar_41727 != 1);
	BIT_VEC cppVar_41731 = PC + 2;
	cppVar_41731 = (cppVar_41731 & cppMask_un_16_);
	BIT_VEC cppVar_41733 = PC + 1;
	cppVar_41733 = (cppVar_41733 & cppMask_un_16_);
	BIT_VEC cppVar_41734 = ROM.rd(cppVar_41733);
	BIT_VEC cppVar_41735 = ((cppVar_41734 & cppMask_bit_8_) ? (cppVar_41734 | cppMask_sign_8_) : cppVar_41734);
	BIT_VEC cppVar_41736 = cppVar_41731 + cppVar_41735;
	cppVar_41736 = (cppVar_41736 & cppMask_un_16_);
	BIT_VEC cppVar_41738 = PC + 2;
	cppVar_41738 = (cppVar_41738 & cppMask_un_16_);
	BIT_VEC cppVar_41739 = (cppVar_41729) ? cppVar_41736 : cppVar_41738;
	BIT_VEC cppVar_41740 = ROM.rd(PC);
	bool cppVar_41742 = (cppVar_41740 == 220);
	BIT_VEC cppVar_41744 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_41746 = (cppVar_41744 << 3) | 4;
	cppVar_41746 = (cppVar_41746 & cppMask_un_5_);
	BIT_VEC cppVar_41747 = (0 << 5) | cppVar_41746;
	cppVar_41747 = (cppVar_41747 & cppMask_un_8_);
	BIT_VEC cppVar_41748 = IRAM.rd(cppVar_41747);
	bool cppVar_41750 = (cppVar_41748 != 1);
	BIT_VEC cppVar_41752 = PC + 2;
	cppVar_41752 = (cppVar_41752 & cppMask_un_16_);
	BIT_VEC cppVar_41754 = PC + 1;
	cppVar_41754 = (cppVar_41754 & cppMask_un_16_);
	BIT_VEC cppVar_41755 = ROM.rd(cppVar_41754);
	BIT_VEC cppVar_41756 = ((cppVar_41755 & cppMask_bit_8_) ? (cppVar_41755 | cppMask_sign_8_) : cppVar_41755);
	BIT_VEC cppVar_41757 = cppVar_41752 + cppVar_41756;
	cppVar_41757 = (cppVar_41757 & cppMask_un_16_);
	BIT_VEC cppVar_41759 = PC + 2;
	cppVar_41759 = (cppVar_41759 & cppMask_un_16_);
	BIT_VEC cppVar_41760 = (cppVar_41750) ? cppVar_41757 : cppVar_41759;
	BIT_VEC cppVar_41761 = ROM.rd(PC);
	bool cppVar_41763 = (cppVar_41761 == 219);
	BIT_VEC cppVar_41765 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_41767 = (cppVar_41765 << 3) | 3;
	cppVar_41767 = (cppVar_41767 & cppMask_un_5_);
	BIT_VEC cppVar_41768 = (0 << 5) | cppVar_41767;
	cppVar_41768 = (cppVar_41768 & cppMask_un_8_);
	BIT_VEC cppVar_41769 = IRAM.rd(cppVar_41768);
	bool cppVar_41771 = (cppVar_41769 != 1);
	BIT_VEC cppVar_41773 = PC + 2;
	cppVar_41773 = (cppVar_41773 & cppMask_un_16_);
	BIT_VEC cppVar_41775 = PC + 1;
	cppVar_41775 = (cppVar_41775 & cppMask_un_16_);
	BIT_VEC cppVar_41776 = ROM.rd(cppVar_41775);
	BIT_VEC cppVar_41777 = ((cppVar_41776 & cppMask_bit_8_) ? (cppVar_41776 | cppMask_sign_8_) : cppVar_41776);
	BIT_VEC cppVar_41778 = cppVar_41773 + cppVar_41777;
	cppVar_41778 = (cppVar_41778 & cppMask_un_16_);
	BIT_VEC cppVar_41780 = PC + 2;
	cppVar_41780 = (cppVar_41780 & cppMask_un_16_);
	BIT_VEC cppVar_41781 = (cppVar_41771) ? cppVar_41778 : cppVar_41780;
	BIT_VEC cppVar_41782 = ROM.rd(PC);
	bool cppVar_41784 = (cppVar_41782 == 218);
	BIT_VEC cppVar_41786 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_41788 = (cppVar_41786 << 3) | 2;
	cppVar_41788 = (cppVar_41788 & cppMask_un_5_);
	BIT_VEC cppVar_41789 = (0 << 5) | cppVar_41788;
	cppVar_41789 = (cppVar_41789 & cppMask_un_8_);
	BIT_VEC cppVar_41790 = IRAM.rd(cppVar_41789);
	bool cppVar_41792 = (cppVar_41790 != 1);
	BIT_VEC cppVar_41794 = PC + 2;
	cppVar_41794 = (cppVar_41794 & cppMask_un_16_);
	BIT_VEC cppVar_41796 = PC + 1;
	cppVar_41796 = (cppVar_41796 & cppMask_un_16_);
	BIT_VEC cppVar_41797 = ROM.rd(cppVar_41796);
	BIT_VEC cppVar_41798 = ((cppVar_41797 & cppMask_bit_8_) ? (cppVar_41797 | cppMask_sign_8_) : cppVar_41797);
	BIT_VEC cppVar_41799 = cppVar_41794 + cppVar_41798;
	cppVar_41799 = (cppVar_41799 & cppMask_un_16_);
	BIT_VEC cppVar_41801 = PC + 2;
	cppVar_41801 = (cppVar_41801 & cppMask_un_16_);
	BIT_VEC cppVar_41802 = (cppVar_41792) ? cppVar_41799 : cppVar_41801;
	BIT_VEC cppVar_41803 = ROM.rd(PC);
	bool cppVar_41805 = (cppVar_41803 == 217);
	BIT_VEC cppVar_41807 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_41809 = (cppVar_41807 << 3) | 1;
	cppVar_41809 = (cppVar_41809 & cppMask_un_5_);
	BIT_VEC cppVar_41810 = (0 << 5) | cppVar_41809;
	cppVar_41810 = (cppVar_41810 & cppMask_un_8_);
	BIT_VEC cppVar_41811 = IRAM.rd(cppVar_41810);
	bool cppVar_41813 = (cppVar_41811 != 1);
	BIT_VEC cppVar_41815 = PC + 2;
	cppVar_41815 = (cppVar_41815 & cppMask_un_16_);
	BIT_VEC cppVar_41817 = PC + 1;
	cppVar_41817 = (cppVar_41817 & cppMask_un_16_);
	BIT_VEC cppVar_41818 = ROM.rd(cppVar_41817);
	BIT_VEC cppVar_41819 = ((cppVar_41818 & cppMask_bit_8_) ? (cppVar_41818 | cppMask_sign_8_) : cppVar_41818);
	BIT_VEC cppVar_41820 = cppVar_41815 + cppVar_41819;
	cppVar_41820 = (cppVar_41820 & cppMask_un_16_);
	BIT_VEC cppVar_41822 = PC + 2;
	cppVar_41822 = (cppVar_41822 & cppMask_un_16_);
	BIT_VEC cppVar_41823 = (cppVar_41813) ? cppVar_41820 : cppVar_41822;
	BIT_VEC cppVar_41824 = ROM.rd(PC);
	bool cppVar_41826 = (cppVar_41824 == 216);
	BIT_VEC cppVar_41828 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_41830 = (cppVar_41828 << 3) | 0;
	cppVar_41830 = (cppVar_41830 & cppMask_un_5_);
	BIT_VEC cppVar_41831 = (0 << 5) | cppVar_41830;
	cppVar_41831 = (cppVar_41831 & cppMask_un_8_);
	BIT_VEC cppVar_41832 = IRAM.rd(cppVar_41831);
	bool cppVar_41834 = (cppVar_41832 != 1);
	BIT_VEC cppVar_41836 = PC + 2;
	cppVar_41836 = (cppVar_41836 & cppMask_un_16_);
	BIT_VEC cppVar_41838 = PC + 1;
	cppVar_41838 = (cppVar_41838 & cppMask_un_16_);
	BIT_VEC cppVar_41839 = ROM.rd(cppVar_41838);
	BIT_VEC cppVar_41840 = ((cppVar_41839 & cppMask_bit_8_) ? (cppVar_41839 | cppMask_sign_8_) : cppVar_41839);
	BIT_VEC cppVar_41841 = cppVar_41836 + cppVar_41840;
	cppVar_41841 = (cppVar_41841 & cppMask_un_16_);
	BIT_VEC cppVar_41843 = PC + 2;
	cppVar_41843 = (cppVar_41843 & cppMask_un_16_);
	BIT_VEC cppVar_41844 = (cppVar_41834) ? cppVar_41841 : cppVar_41843;
	BIT_VEC cppVar_41845 = ROM.rd(PC);
	bool cppVar_41847 = (cppVar_41845 == 213);
	BIT_VEC cppVar_41849 = PC + 1;
	cppVar_41849 = (cppVar_41849 & cppMask_un_16_);
	BIT_VEC cppVar_41850 = ROM.rd(cppVar_41849);
	BIT_VEC cppVar_41851 = (cppVar_41850 >> 7) & cppMask_un_1_;
	bool cppVar_41853 = (cppVar_41851 == 0);
	BIT_VEC cppVar_41854 = PC + 1;
	cppVar_41854 = (cppVar_41854 & cppMask_un_16_);
	BIT_VEC cppVar_41855 = ROM.rd(cppVar_41854);
	BIT_VEC cppVar_41856 = IRAM.rd(cppVar_41855);
	BIT_VEC cppVar_41857 = PC + 1;
	cppVar_41857 = (cppVar_41857 & cppMask_un_16_);
	BIT_VEC cppVar_41858 = ROM.rd(cppVar_41857);
	bool cppVar_41860 = (cppVar_41858 == 128);
	BIT_VEC cppVar_41861 = PC + 1;
	cppVar_41861 = (cppVar_41861 & cppMask_un_16_);
	BIT_VEC cppVar_41862 = ROM.rd(cppVar_41861);
	bool cppVar_41864 = (cppVar_41862 == 129);
	BIT_VEC cppVar_41865 = PC + 1;
	cppVar_41865 = (cppVar_41865 & cppMask_un_16_);
	BIT_VEC cppVar_41866 = ROM.rd(cppVar_41865);
	bool cppVar_41868 = (cppVar_41866 == 130);
	BIT_VEC cppVar_41869 = PC + 1;
	cppVar_41869 = (cppVar_41869 & cppMask_un_16_);
	BIT_VEC cppVar_41870 = ROM.rd(cppVar_41869);
	bool cppVar_41872 = (cppVar_41870 == 131);
	BIT_VEC cppVar_41873 = PC + 1;
	cppVar_41873 = (cppVar_41873 & cppMask_un_16_);
	BIT_VEC cppVar_41874 = ROM.rd(cppVar_41873);
	bool cppVar_41876 = (cppVar_41874 == 135);
	BIT_VEC cppVar_41877 = PC + 1;
	cppVar_41877 = (cppVar_41877 & cppMask_un_16_);
	BIT_VEC cppVar_41878 = ROM.rd(cppVar_41877);
	bool cppVar_41880 = (cppVar_41878 == 136);
	BIT_VEC cppVar_41881 = PC + 1;
	cppVar_41881 = (cppVar_41881 & cppMask_un_16_);
	BIT_VEC cppVar_41882 = ROM.rd(cppVar_41881);
	bool cppVar_41884 = (cppVar_41882 == 137);
	BIT_VEC cppVar_41885 = PC + 1;
	cppVar_41885 = (cppVar_41885 & cppMask_un_16_);
	BIT_VEC cppVar_41886 = ROM.rd(cppVar_41885);
	bool cppVar_41888 = (cppVar_41886 == 138);
	BIT_VEC cppVar_41889 = PC + 1;
	cppVar_41889 = (cppVar_41889 & cppMask_un_16_);
	BIT_VEC cppVar_41890 = ROM.rd(cppVar_41889);
	bool cppVar_41892 = (cppVar_41890 == 140);
	BIT_VEC cppVar_41893 = PC + 1;
	cppVar_41893 = (cppVar_41893 & cppMask_un_16_);
	BIT_VEC cppVar_41894 = ROM.rd(cppVar_41893);
	bool cppVar_41896 = (cppVar_41894 == 139);
	BIT_VEC cppVar_41897 = PC + 1;
	cppVar_41897 = (cppVar_41897 & cppMask_un_16_);
	BIT_VEC cppVar_41898 = ROM.rd(cppVar_41897);
	bool cppVar_41900 = (cppVar_41898 == 141);
	BIT_VEC cppVar_41901 = PC + 1;
	cppVar_41901 = (cppVar_41901 & cppMask_un_16_);
	BIT_VEC cppVar_41902 = ROM.rd(cppVar_41901);
	bool cppVar_41904 = (cppVar_41902 == 144);
	BIT_VEC cppVar_41905 = PC + 1;
	cppVar_41905 = (cppVar_41905 & cppMask_un_16_);
	BIT_VEC cppVar_41906 = ROM.rd(cppVar_41905);
	bool cppVar_41908 = (cppVar_41906 == 152);
	BIT_VEC cppVar_41909 = PC + 1;
	cppVar_41909 = (cppVar_41909 & cppMask_un_16_);
	BIT_VEC cppVar_41910 = ROM.rd(cppVar_41909);
	bool cppVar_41912 = (cppVar_41910 == 153);
	BIT_VEC cppVar_41913 = PC + 1;
	cppVar_41913 = (cppVar_41913 & cppMask_un_16_);
	BIT_VEC cppVar_41914 = ROM.rd(cppVar_41913);
	bool cppVar_41916 = (cppVar_41914 == 160);
	BIT_VEC cppVar_41917 = PC + 1;
	cppVar_41917 = (cppVar_41917 & cppMask_un_16_);
	BIT_VEC cppVar_41918 = ROM.rd(cppVar_41917);
	bool cppVar_41920 = (cppVar_41918 == 168);
	BIT_VEC cppVar_41921 = PC + 1;
	cppVar_41921 = (cppVar_41921 & cppMask_un_16_);
	BIT_VEC cppVar_41922 = ROM.rd(cppVar_41921);
	bool cppVar_41924 = (cppVar_41922 == 176);
	BIT_VEC cppVar_41925 = PC + 1;
	cppVar_41925 = (cppVar_41925 & cppMask_un_16_);
	BIT_VEC cppVar_41926 = ROM.rd(cppVar_41925);
	bool cppVar_41928 = (cppVar_41926 == 184);
	BIT_VEC cppVar_41929 = PC + 1;
	cppVar_41929 = (cppVar_41929 & cppMask_un_16_);
	BIT_VEC cppVar_41930 = ROM.rd(cppVar_41929);
	bool cppVar_41932 = (cppVar_41930 == 208);
	BIT_VEC cppVar_41933 = PC + 1;
	cppVar_41933 = (cppVar_41933 & cppMask_un_16_);
	BIT_VEC cppVar_41934 = ROM.rd(cppVar_41933);
	bool cppVar_41936 = (cppVar_41934 == 224);
	BIT_VEC cppVar_41937 = PC + 1;
	cppVar_41937 = (cppVar_41937 & cppMask_un_16_);
	BIT_VEC cppVar_41938 = ROM.rd(cppVar_41937);
	bool cppVar_41940 = (cppVar_41938 == 240);
	BIT_VEC cppVar_41942 = (cppVar_41940) ? B : 0;
	BIT_VEC cppVar_41943 = (cppVar_41936) ? ACC : cppVar_41942;
	BIT_VEC cppVar_41944 = (cppVar_41932) ? PSW : cppVar_41943;
	BIT_VEC cppVar_41945 = (cppVar_41928) ? IP : cppVar_41944;
	BIT_VEC cppVar_41946 = (cppVar_41924) ? P3 : cppVar_41945;
	BIT_VEC cppVar_41947 = (cppVar_41920) ? IE : cppVar_41946;
	BIT_VEC cppVar_41948 = (cppVar_41916) ? P2 : cppVar_41947;
	BIT_VEC cppVar_41949 = (cppVar_41912) ? SBUF : cppVar_41948;
	BIT_VEC cppVar_41950 = (cppVar_41908) ? SCON : cppVar_41949;
	BIT_VEC cppVar_41951 = (cppVar_41904) ? P1 : cppVar_41950;
	BIT_VEC cppVar_41952 = (cppVar_41900) ? TH1 : cppVar_41951;
	BIT_VEC cppVar_41953 = (cppVar_41896) ? TL1 : cppVar_41952;
	BIT_VEC cppVar_41954 = (cppVar_41892) ? TH0 : cppVar_41953;
	BIT_VEC cppVar_41955 = (cppVar_41888) ? TL0 : cppVar_41954;
	BIT_VEC cppVar_41956 = (cppVar_41884) ? TMOD : cppVar_41955;
	BIT_VEC cppVar_41957 = (cppVar_41880) ? TCON : cppVar_41956;
	BIT_VEC cppVar_41958 = (cppVar_41876) ? PCON : cppVar_41957;
	BIT_VEC cppVar_41959 = (cppVar_41872) ? DPH : cppVar_41958;
	BIT_VEC cppVar_41960 = (cppVar_41868) ? DPL : cppVar_41959;
	BIT_VEC cppVar_41961 = (cppVar_41864) ? SP : cppVar_41960;
	BIT_VEC cppVar_41962 = (cppVar_41860) ? P0 : cppVar_41961;
	BIT_VEC cppVar_41963 = (cppVar_41853) ? cppVar_41856 : cppVar_41962;
	bool cppVar_41965 = (cppVar_41963 != 1);
	BIT_VEC cppVar_41967 = PC + 3;
	cppVar_41967 = (cppVar_41967 & cppMask_un_16_);
	BIT_VEC cppVar_41969 = PC + 2;
	cppVar_41969 = (cppVar_41969 & cppMask_un_16_);
	BIT_VEC cppVar_41970 = ROM.rd(cppVar_41969);
	BIT_VEC cppVar_41971 = ((cppVar_41970 & cppMask_bit_8_) ? (cppVar_41970 | cppMask_sign_8_) : cppVar_41970);
	BIT_VEC cppVar_41972 = cppVar_41967 + cppVar_41971;
	cppVar_41972 = (cppVar_41972 & cppMask_un_16_);
	BIT_VEC cppVar_41974 = PC + 3;
	cppVar_41974 = (cppVar_41974 & cppMask_un_16_);
	BIT_VEC cppVar_41975 = (cppVar_41965) ? cppVar_41972 : cppVar_41974;
	BIT_VEC cppVar_41976 = ROM.rd(PC);
	bool cppVar_41978 = (cppVar_41976 == 209);
	BIT_VEC cppVar_41979 = ROM.rd(PC);
	bool cppVar_41981 = (cppVar_41979 == 193);
	bool cppVar_41982 = cppVar_41978 || cppVar_41981;
	BIT_VEC cppVar_41984 = PC + 2;
	cppVar_41984 = (cppVar_41984 & cppMask_un_16_);
	BIT_VEC cppVar_41985 = (cppVar_41984 >> 11) & cppMask_un_5_;
	BIT_VEC cppVar_41987 = (cppVar_41985 << 3) | 6;
	cppVar_41987 = (cppVar_41987 & cppMask_un_8_);
	BIT_VEC cppVar_41989 = PC + 1;
	cppVar_41989 = (cppVar_41989 & cppMask_un_16_);
	BIT_VEC cppVar_41990 = ROM.rd(cppVar_41989);
	BIT_VEC cppVar_41991 = (cppVar_41987 << 8) | cppVar_41990;
	cppVar_41991 = (cppVar_41991 & cppMask_un_16_);
	BIT_VEC cppVar_41992 = ROM.rd(PC);
	bool cppVar_41994 = (cppVar_41992 == 191);
	BIT_VEC cppVar_41996 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_41998 = (cppVar_41996 << 3) | 7;
	cppVar_41998 = (cppVar_41998 & cppMask_un_5_);
	BIT_VEC cppVar_41999 = (0 << 5) | cppVar_41998;
	cppVar_41999 = (cppVar_41999 & cppMask_un_8_);
	BIT_VEC cppVar_42000 = IRAM.rd(cppVar_41999);
	BIT_VEC cppVar_42002 = PC + 1;
	cppVar_42002 = (cppVar_42002 & cppMask_un_16_);
	BIT_VEC cppVar_42003 = ROM.rd(cppVar_42002);
	bool cppVar_42004 = (cppVar_42000 != cppVar_42003);
	BIT_VEC cppVar_42006 = PC + 3;
	cppVar_42006 = (cppVar_42006 & cppMask_un_16_);
	BIT_VEC cppVar_42008 = PC + 2;
	cppVar_42008 = (cppVar_42008 & cppMask_un_16_);
	BIT_VEC cppVar_42009 = ROM.rd(cppVar_42008);
	BIT_VEC cppVar_42010 = ((cppVar_42009 & cppMask_bit_8_) ? (cppVar_42009 | cppMask_sign_8_) : cppVar_42009);
	BIT_VEC cppVar_42011 = cppVar_42006 + cppVar_42010;
	cppVar_42011 = (cppVar_42011 & cppMask_un_16_);
	BIT_VEC cppVar_42013 = PC + 3;
	cppVar_42013 = (cppVar_42013 & cppMask_un_16_);
	BIT_VEC cppVar_42014 = (cppVar_42004) ? cppVar_42011 : cppVar_42013;
	BIT_VEC cppVar_42015 = ROM.rd(PC);
	bool cppVar_42017 = (cppVar_42015 == 190);
	BIT_VEC cppVar_42019 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_42021 = (cppVar_42019 << 3) | 6;
	cppVar_42021 = (cppVar_42021 & cppMask_un_5_);
	BIT_VEC cppVar_42022 = (0 << 5) | cppVar_42021;
	cppVar_42022 = (cppVar_42022 & cppMask_un_8_);
	BIT_VEC cppVar_42023 = IRAM.rd(cppVar_42022);
	BIT_VEC cppVar_42025 = PC + 1;
	cppVar_42025 = (cppVar_42025 & cppMask_un_16_);
	BIT_VEC cppVar_42026 = ROM.rd(cppVar_42025);
	bool cppVar_42027 = (cppVar_42023 != cppVar_42026);
	BIT_VEC cppVar_42029 = PC + 3;
	cppVar_42029 = (cppVar_42029 & cppMask_un_16_);
	BIT_VEC cppVar_42031 = PC + 2;
	cppVar_42031 = (cppVar_42031 & cppMask_un_16_);
	BIT_VEC cppVar_42032 = ROM.rd(cppVar_42031);
	BIT_VEC cppVar_42033 = ((cppVar_42032 & cppMask_bit_8_) ? (cppVar_42032 | cppMask_sign_8_) : cppVar_42032);
	BIT_VEC cppVar_42034 = cppVar_42029 + cppVar_42033;
	cppVar_42034 = (cppVar_42034 & cppMask_un_16_);
	BIT_VEC cppVar_42036 = PC + 3;
	cppVar_42036 = (cppVar_42036 & cppMask_un_16_);
	BIT_VEC cppVar_42037 = (cppVar_42027) ? cppVar_42034 : cppVar_42036;
	BIT_VEC cppVar_42038 = ROM.rd(PC);
	bool cppVar_42040 = (cppVar_42038 == 189);
	BIT_VEC cppVar_42042 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_42044 = (cppVar_42042 << 3) | 5;
	cppVar_42044 = (cppVar_42044 & cppMask_un_5_);
	BIT_VEC cppVar_42045 = (0 << 5) | cppVar_42044;
	cppVar_42045 = (cppVar_42045 & cppMask_un_8_);
	BIT_VEC cppVar_42046 = IRAM.rd(cppVar_42045);
	BIT_VEC cppVar_42048 = PC + 1;
	cppVar_42048 = (cppVar_42048 & cppMask_un_16_);
	BIT_VEC cppVar_42049 = ROM.rd(cppVar_42048);
	bool cppVar_42050 = (cppVar_42046 != cppVar_42049);
	BIT_VEC cppVar_42052 = PC + 3;
	cppVar_42052 = (cppVar_42052 & cppMask_un_16_);
	BIT_VEC cppVar_42054 = PC + 2;
	cppVar_42054 = (cppVar_42054 & cppMask_un_16_);
	BIT_VEC cppVar_42055 = ROM.rd(cppVar_42054);
	BIT_VEC cppVar_42056 = ((cppVar_42055 & cppMask_bit_8_) ? (cppVar_42055 | cppMask_sign_8_) : cppVar_42055);
	BIT_VEC cppVar_42057 = cppVar_42052 + cppVar_42056;
	cppVar_42057 = (cppVar_42057 & cppMask_un_16_);
	BIT_VEC cppVar_42059 = PC + 3;
	cppVar_42059 = (cppVar_42059 & cppMask_un_16_);
	BIT_VEC cppVar_42060 = (cppVar_42050) ? cppVar_42057 : cppVar_42059;
	BIT_VEC cppVar_42061 = ROM.rd(PC);
	bool cppVar_42063 = (cppVar_42061 == 188);
	BIT_VEC cppVar_42065 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_42067 = (cppVar_42065 << 3) | 4;
	cppVar_42067 = (cppVar_42067 & cppMask_un_5_);
	BIT_VEC cppVar_42068 = (0 << 5) | cppVar_42067;
	cppVar_42068 = (cppVar_42068 & cppMask_un_8_);
	BIT_VEC cppVar_42069 = IRAM.rd(cppVar_42068);
	BIT_VEC cppVar_42071 = PC + 1;
	cppVar_42071 = (cppVar_42071 & cppMask_un_16_);
	BIT_VEC cppVar_42072 = ROM.rd(cppVar_42071);
	bool cppVar_42073 = (cppVar_42069 != cppVar_42072);
	BIT_VEC cppVar_42075 = PC + 3;
	cppVar_42075 = (cppVar_42075 & cppMask_un_16_);
	BIT_VEC cppVar_42077 = PC + 2;
	cppVar_42077 = (cppVar_42077 & cppMask_un_16_);
	BIT_VEC cppVar_42078 = ROM.rd(cppVar_42077);
	BIT_VEC cppVar_42079 = ((cppVar_42078 & cppMask_bit_8_) ? (cppVar_42078 | cppMask_sign_8_) : cppVar_42078);
	BIT_VEC cppVar_42080 = cppVar_42075 + cppVar_42079;
	cppVar_42080 = (cppVar_42080 & cppMask_un_16_);
	BIT_VEC cppVar_42082 = PC + 3;
	cppVar_42082 = (cppVar_42082 & cppMask_un_16_);
	BIT_VEC cppVar_42083 = (cppVar_42073) ? cppVar_42080 : cppVar_42082;
	BIT_VEC cppVar_42084 = ROM.rd(PC);
	bool cppVar_42086 = (cppVar_42084 == 187);
	BIT_VEC cppVar_42088 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_42090 = (cppVar_42088 << 3) | 3;
	cppVar_42090 = (cppVar_42090 & cppMask_un_5_);
	BIT_VEC cppVar_42091 = (0 << 5) | cppVar_42090;
	cppVar_42091 = (cppVar_42091 & cppMask_un_8_);
	BIT_VEC cppVar_42092 = IRAM.rd(cppVar_42091);
	BIT_VEC cppVar_42094 = PC + 1;
	cppVar_42094 = (cppVar_42094 & cppMask_un_16_);
	BIT_VEC cppVar_42095 = ROM.rd(cppVar_42094);
	bool cppVar_42096 = (cppVar_42092 != cppVar_42095);
	BIT_VEC cppVar_42098 = PC + 3;
	cppVar_42098 = (cppVar_42098 & cppMask_un_16_);
	BIT_VEC cppVar_42100 = PC + 2;
	cppVar_42100 = (cppVar_42100 & cppMask_un_16_);
	BIT_VEC cppVar_42101 = ROM.rd(cppVar_42100);
	BIT_VEC cppVar_42102 = ((cppVar_42101 & cppMask_bit_8_) ? (cppVar_42101 | cppMask_sign_8_) : cppVar_42101);
	BIT_VEC cppVar_42103 = cppVar_42098 + cppVar_42102;
	cppVar_42103 = (cppVar_42103 & cppMask_un_16_);
	BIT_VEC cppVar_42105 = PC + 3;
	cppVar_42105 = (cppVar_42105 & cppMask_un_16_);
	BIT_VEC cppVar_42106 = (cppVar_42096) ? cppVar_42103 : cppVar_42105;
	BIT_VEC cppVar_42107 = ROM.rd(PC);
	bool cppVar_42109 = (cppVar_42107 == 186);
	BIT_VEC cppVar_42111 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_42113 = (cppVar_42111 << 3) | 2;
	cppVar_42113 = (cppVar_42113 & cppMask_un_5_);
	BIT_VEC cppVar_42114 = (0 << 5) | cppVar_42113;
	cppVar_42114 = (cppVar_42114 & cppMask_un_8_);
	BIT_VEC cppVar_42115 = IRAM.rd(cppVar_42114);
	BIT_VEC cppVar_42117 = PC + 1;
	cppVar_42117 = (cppVar_42117 & cppMask_un_16_);
	BIT_VEC cppVar_42118 = ROM.rd(cppVar_42117);
	bool cppVar_42119 = (cppVar_42115 != cppVar_42118);
	BIT_VEC cppVar_42121 = PC + 3;
	cppVar_42121 = (cppVar_42121 & cppMask_un_16_);
	BIT_VEC cppVar_42123 = PC + 2;
	cppVar_42123 = (cppVar_42123 & cppMask_un_16_);
	BIT_VEC cppVar_42124 = ROM.rd(cppVar_42123);
	BIT_VEC cppVar_42125 = ((cppVar_42124 & cppMask_bit_8_) ? (cppVar_42124 | cppMask_sign_8_) : cppVar_42124);
	BIT_VEC cppVar_42126 = cppVar_42121 + cppVar_42125;
	cppVar_42126 = (cppVar_42126 & cppMask_un_16_);
	BIT_VEC cppVar_42128 = PC + 3;
	cppVar_42128 = (cppVar_42128 & cppMask_un_16_);
	BIT_VEC cppVar_42129 = (cppVar_42119) ? cppVar_42126 : cppVar_42128;
	BIT_VEC cppVar_42130 = ROM.rd(PC);
	bool cppVar_42132 = (cppVar_42130 == 185);
	BIT_VEC cppVar_42134 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_42136 = (cppVar_42134 << 3) | 1;
	cppVar_42136 = (cppVar_42136 & cppMask_un_5_);
	BIT_VEC cppVar_42137 = (0 << 5) | cppVar_42136;
	cppVar_42137 = (cppVar_42137 & cppMask_un_8_);
	BIT_VEC cppVar_42138 = IRAM.rd(cppVar_42137);
	BIT_VEC cppVar_42140 = PC + 1;
	cppVar_42140 = (cppVar_42140 & cppMask_un_16_);
	BIT_VEC cppVar_42141 = ROM.rd(cppVar_42140);
	bool cppVar_42142 = (cppVar_42138 != cppVar_42141);
	BIT_VEC cppVar_42144 = PC + 3;
	cppVar_42144 = (cppVar_42144 & cppMask_un_16_);
	BIT_VEC cppVar_42146 = PC + 2;
	cppVar_42146 = (cppVar_42146 & cppMask_un_16_);
	BIT_VEC cppVar_42147 = ROM.rd(cppVar_42146);
	BIT_VEC cppVar_42148 = ((cppVar_42147 & cppMask_bit_8_) ? (cppVar_42147 | cppMask_sign_8_) : cppVar_42147);
	BIT_VEC cppVar_42149 = cppVar_42144 + cppVar_42148;
	cppVar_42149 = (cppVar_42149 & cppMask_un_16_);
	BIT_VEC cppVar_42151 = PC + 3;
	cppVar_42151 = (cppVar_42151 & cppMask_un_16_);
	BIT_VEC cppVar_42152 = (cppVar_42142) ? cppVar_42149 : cppVar_42151;
	BIT_VEC cppVar_42153 = ROM.rd(PC);
	bool cppVar_42155 = (cppVar_42153 == 184);
	BIT_VEC cppVar_42157 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_42159 = (cppVar_42157 << 3) | 0;
	cppVar_42159 = (cppVar_42159 & cppMask_un_5_);
	BIT_VEC cppVar_42160 = (0 << 5) | cppVar_42159;
	cppVar_42160 = (cppVar_42160 & cppMask_un_8_);
	BIT_VEC cppVar_42161 = IRAM.rd(cppVar_42160);
	BIT_VEC cppVar_42163 = PC + 1;
	cppVar_42163 = (cppVar_42163 & cppMask_un_16_);
	BIT_VEC cppVar_42164 = ROM.rd(cppVar_42163);
	bool cppVar_42165 = (cppVar_42161 != cppVar_42164);
	BIT_VEC cppVar_42167 = PC + 3;
	cppVar_42167 = (cppVar_42167 & cppMask_un_16_);
	BIT_VEC cppVar_42169 = PC + 2;
	cppVar_42169 = (cppVar_42169 & cppMask_un_16_);
	BIT_VEC cppVar_42170 = ROM.rd(cppVar_42169);
	BIT_VEC cppVar_42171 = ((cppVar_42170 & cppMask_bit_8_) ? (cppVar_42170 | cppMask_sign_8_) : cppVar_42170);
	BIT_VEC cppVar_42172 = cppVar_42167 + cppVar_42171;
	cppVar_42172 = (cppVar_42172 & cppMask_un_16_);
	BIT_VEC cppVar_42174 = PC + 3;
	cppVar_42174 = (cppVar_42174 & cppMask_un_16_);
	BIT_VEC cppVar_42175 = (cppVar_42165) ? cppVar_42172 : cppVar_42174;
	BIT_VEC cppVar_42176 = ROM.rd(PC);
	bool cppVar_42178 = (cppVar_42176 == 183);
	BIT_VEC cppVar_42180 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_42182 = (cppVar_42180 << 3) | 1;
	cppVar_42182 = (cppVar_42182 & cppMask_un_5_);
	BIT_VEC cppVar_42183 = (0 << 5) | cppVar_42182;
	cppVar_42183 = (cppVar_42183 & cppMask_un_8_);
	BIT_VEC cppVar_42184 = IRAM.rd(cppVar_42183);
	BIT_VEC cppVar_42185 = IRAM.rd(cppVar_42184);
	BIT_VEC cppVar_42187 = PC + 1;
	cppVar_42187 = (cppVar_42187 & cppMask_un_16_);
	BIT_VEC cppVar_42188 = ROM.rd(cppVar_42187);
	bool cppVar_42189 = (cppVar_42185 != cppVar_42188);
	BIT_VEC cppVar_42191 = PC + 3;
	cppVar_42191 = (cppVar_42191 & cppMask_un_16_);
	BIT_VEC cppVar_42193 = PC + 2;
	cppVar_42193 = (cppVar_42193 & cppMask_un_16_);
	BIT_VEC cppVar_42194 = ROM.rd(cppVar_42193);
	BIT_VEC cppVar_42195 = ((cppVar_42194 & cppMask_bit_8_) ? (cppVar_42194 | cppMask_sign_8_) : cppVar_42194);
	BIT_VEC cppVar_42196 = cppVar_42191 + cppVar_42195;
	cppVar_42196 = (cppVar_42196 & cppMask_un_16_);
	BIT_VEC cppVar_42198 = PC + 3;
	cppVar_42198 = (cppVar_42198 & cppMask_un_16_);
	BIT_VEC cppVar_42199 = (cppVar_42189) ? cppVar_42196 : cppVar_42198;
	BIT_VEC cppVar_42200 = ROM.rd(PC);
	bool cppVar_42202 = (cppVar_42200 == 182);
	BIT_VEC cppVar_42204 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_42206 = (cppVar_42204 << 3) | 0;
	cppVar_42206 = (cppVar_42206 & cppMask_un_5_);
	BIT_VEC cppVar_42207 = (0 << 5) | cppVar_42206;
	cppVar_42207 = (cppVar_42207 & cppMask_un_8_);
	BIT_VEC cppVar_42208 = IRAM.rd(cppVar_42207);
	BIT_VEC cppVar_42209 = IRAM.rd(cppVar_42208);
	BIT_VEC cppVar_42211 = PC + 1;
	cppVar_42211 = (cppVar_42211 & cppMask_un_16_);
	BIT_VEC cppVar_42212 = ROM.rd(cppVar_42211);
	bool cppVar_42213 = (cppVar_42209 != cppVar_42212);
	BIT_VEC cppVar_42215 = PC + 3;
	cppVar_42215 = (cppVar_42215 & cppMask_un_16_);
	BIT_VEC cppVar_42217 = PC + 2;
	cppVar_42217 = (cppVar_42217 & cppMask_un_16_);
	BIT_VEC cppVar_42218 = ROM.rd(cppVar_42217);
	BIT_VEC cppVar_42219 = ((cppVar_42218 & cppMask_bit_8_) ? (cppVar_42218 | cppMask_sign_8_) : cppVar_42218);
	BIT_VEC cppVar_42220 = cppVar_42215 + cppVar_42219;
	cppVar_42220 = (cppVar_42220 & cppMask_un_16_);
	BIT_VEC cppVar_42222 = PC + 3;
	cppVar_42222 = (cppVar_42222 & cppMask_un_16_);
	BIT_VEC cppVar_42223 = (cppVar_42213) ? cppVar_42220 : cppVar_42222;
	BIT_VEC cppVar_42224 = ROM.rd(PC);
	bool cppVar_42226 = (cppVar_42224 == 181);
	BIT_VEC cppVar_42228 = PC + 1;
	cppVar_42228 = (cppVar_42228 & cppMask_un_16_);
	BIT_VEC cppVar_42229 = ROM.rd(cppVar_42228);
	BIT_VEC cppVar_42230 = (cppVar_42229 >> 7) & cppMask_un_1_;
	bool cppVar_42232 = (cppVar_42230 == 0);
	BIT_VEC cppVar_42233 = PC + 1;
	cppVar_42233 = (cppVar_42233 & cppMask_un_16_);
	BIT_VEC cppVar_42234 = ROM.rd(cppVar_42233);
	BIT_VEC cppVar_42235 = IRAM.rd(cppVar_42234);
	BIT_VEC cppVar_42236 = PC + 1;
	cppVar_42236 = (cppVar_42236 & cppMask_un_16_);
	BIT_VEC cppVar_42237 = ROM.rd(cppVar_42236);
	bool cppVar_42239 = (cppVar_42237 == 128);
	BIT_VEC cppVar_42240 = PC + 1;
	cppVar_42240 = (cppVar_42240 & cppMask_un_16_);
	BIT_VEC cppVar_42241 = ROM.rd(cppVar_42240);
	bool cppVar_42243 = (cppVar_42241 == 129);
	BIT_VEC cppVar_42244 = PC + 1;
	cppVar_42244 = (cppVar_42244 & cppMask_un_16_);
	BIT_VEC cppVar_42245 = ROM.rd(cppVar_42244);
	bool cppVar_42247 = (cppVar_42245 == 130);
	BIT_VEC cppVar_42248 = PC + 1;
	cppVar_42248 = (cppVar_42248 & cppMask_un_16_);
	BIT_VEC cppVar_42249 = ROM.rd(cppVar_42248);
	bool cppVar_42251 = (cppVar_42249 == 131);
	BIT_VEC cppVar_42252 = PC + 1;
	cppVar_42252 = (cppVar_42252 & cppMask_un_16_);
	BIT_VEC cppVar_42253 = ROM.rd(cppVar_42252);
	bool cppVar_42255 = (cppVar_42253 == 135);
	BIT_VEC cppVar_42256 = PC + 1;
	cppVar_42256 = (cppVar_42256 & cppMask_un_16_);
	BIT_VEC cppVar_42257 = ROM.rd(cppVar_42256);
	bool cppVar_42259 = (cppVar_42257 == 136);
	BIT_VEC cppVar_42260 = PC + 1;
	cppVar_42260 = (cppVar_42260 & cppMask_un_16_);
	BIT_VEC cppVar_42261 = ROM.rd(cppVar_42260);
	bool cppVar_42263 = (cppVar_42261 == 137);
	BIT_VEC cppVar_42264 = PC + 1;
	cppVar_42264 = (cppVar_42264 & cppMask_un_16_);
	BIT_VEC cppVar_42265 = ROM.rd(cppVar_42264);
	bool cppVar_42267 = (cppVar_42265 == 138);
	BIT_VEC cppVar_42268 = PC + 1;
	cppVar_42268 = (cppVar_42268 & cppMask_un_16_);
	BIT_VEC cppVar_42269 = ROM.rd(cppVar_42268);
	bool cppVar_42271 = (cppVar_42269 == 140);
	BIT_VEC cppVar_42272 = PC + 1;
	cppVar_42272 = (cppVar_42272 & cppMask_un_16_);
	BIT_VEC cppVar_42273 = ROM.rd(cppVar_42272);
	bool cppVar_42275 = (cppVar_42273 == 139);
	BIT_VEC cppVar_42276 = PC + 1;
	cppVar_42276 = (cppVar_42276 & cppMask_un_16_);
	BIT_VEC cppVar_42277 = ROM.rd(cppVar_42276);
	bool cppVar_42279 = (cppVar_42277 == 141);
	BIT_VEC cppVar_42280 = PC + 1;
	cppVar_42280 = (cppVar_42280 & cppMask_un_16_);
	BIT_VEC cppVar_42281 = ROM.rd(cppVar_42280);
	bool cppVar_42283 = (cppVar_42281 == 144);
	BIT_VEC cppVar_42284 = PC + 1;
	cppVar_42284 = (cppVar_42284 & cppMask_un_16_);
	BIT_VEC cppVar_42285 = ROM.rd(cppVar_42284);
	bool cppVar_42287 = (cppVar_42285 == 152);
	BIT_VEC cppVar_42288 = PC + 1;
	cppVar_42288 = (cppVar_42288 & cppMask_un_16_);
	BIT_VEC cppVar_42289 = ROM.rd(cppVar_42288);
	bool cppVar_42291 = (cppVar_42289 == 153);
	BIT_VEC cppVar_42292 = PC + 1;
	cppVar_42292 = (cppVar_42292 & cppMask_un_16_);
	BIT_VEC cppVar_42293 = ROM.rd(cppVar_42292);
	bool cppVar_42295 = (cppVar_42293 == 160);
	BIT_VEC cppVar_42296 = PC + 1;
	cppVar_42296 = (cppVar_42296 & cppMask_un_16_);
	BIT_VEC cppVar_42297 = ROM.rd(cppVar_42296);
	bool cppVar_42299 = (cppVar_42297 == 168);
	BIT_VEC cppVar_42300 = PC + 1;
	cppVar_42300 = (cppVar_42300 & cppMask_un_16_);
	BIT_VEC cppVar_42301 = ROM.rd(cppVar_42300);
	bool cppVar_42303 = (cppVar_42301 == 176);
	BIT_VEC cppVar_42304 = PC + 1;
	cppVar_42304 = (cppVar_42304 & cppMask_un_16_);
	BIT_VEC cppVar_42305 = ROM.rd(cppVar_42304);
	bool cppVar_42307 = (cppVar_42305 == 184);
	BIT_VEC cppVar_42308 = PC + 1;
	cppVar_42308 = (cppVar_42308 & cppMask_un_16_);
	BIT_VEC cppVar_42309 = ROM.rd(cppVar_42308);
	bool cppVar_42311 = (cppVar_42309 == 208);
	BIT_VEC cppVar_42312 = PC + 1;
	cppVar_42312 = (cppVar_42312 & cppMask_un_16_);
	BIT_VEC cppVar_42313 = ROM.rd(cppVar_42312);
	bool cppVar_42315 = (cppVar_42313 == 224);
	BIT_VEC cppVar_42316 = PC + 1;
	cppVar_42316 = (cppVar_42316 & cppMask_un_16_);
	BIT_VEC cppVar_42317 = ROM.rd(cppVar_42316);
	bool cppVar_42319 = (cppVar_42317 == 240);
	BIT_VEC cppVar_42321 = (cppVar_42319) ? B : 0;
	BIT_VEC cppVar_42322 = (cppVar_42315) ? ACC : cppVar_42321;
	BIT_VEC cppVar_42323 = (cppVar_42311) ? PSW : cppVar_42322;
	BIT_VEC cppVar_42324 = (cppVar_42307) ? IP : cppVar_42323;
	BIT_VEC cppVar_42325 = (cppVar_42303) ? P3 : cppVar_42324;
	BIT_VEC cppVar_42326 = (cppVar_42299) ? IE : cppVar_42325;
	BIT_VEC cppVar_42327 = (cppVar_42295) ? P2 : cppVar_42326;
	BIT_VEC cppVar_42328 = (cppVar_42291) ? SBUF : cppVar_42327;
	BIT_VEC cppVar_42329 = (cppVar_42287) ? SCON : cppVar_42328;
	BIT_VEC cppVar_42330 = (cppVar_42283) ? P1 : cppVar_42329;
	BIT_VEC cppVar_42331 = (cppVar_42279) ? TH1 : cppVar_42330;
	BIT_VEC cppVar_42332 = (cppVar_42275) ? TL1 : cppVar_42331;
	BIT_VEC cppVar_42333 = (cppVar_42271) ? TH0 : cppVar_42332;
	BIT_VEC cppVar_42334 = (cppVar_42267) ? TL0 : cppVar_42333;
	BIT_VEC cppVar_42335 = (cppVar_42263) ? TMOD : cppVar_42334;
	BIT_VEC cppVar_42336 = (cppVar_42259) ? TCON : cppVar_42335;
	BIT_VEC cppVar_42337 = (cppVar_42255) ? PCON : cppVar_42336;
	BIT_VEC cppVar_42338 = (cppVar_42251) ? DPH : cppVar_42337;
	BIT_VEC cppVar_42339 = (cppVar_42247) ? DPL : cppVar_42338;
	BIT_VEC cppVar_42340 = (cppVar_42243) ? SP : cppVar_42339;
	BIT_VEC cppVar_42341 = (cppVar_42239) ? P0 : cppVar_42340;
	BIT_VEC cppVar_42342 = (cppVar_42232) ? cppVar_42235 : cppVar_42341;
	bool cppVar_42343 = (ACC != cppVar_42342);
	BIT_VEC cppVar_42345 = PC + 3;
	cppVar_42345 = (cppVar_42345 & cppMask_un_16_);
	BIT_VEC cppVar_42347 = PC + 2;
	cppVar_42347 = (cppVar_42347 & cppMask_un_16_);
	BIT_VEC cppVar_42348 = ROM.rd(cppVar_42347);
	BIT_VEC cppVar_42349 = ((cppVar_42348 & cppMask_bit_8_) ? (cppVar_42348 | cppMask_sign_8_) : cppVar_42348);
	BIT_VEC cppVar_42350 = cppVar_42345 + cppVar_42349;
	cppVar_42350 = (cppVar_42350 & cppMask_un_16_);
	BIT_VEC cppVar_42352 = PC + 3;
	cppVar_42352 = (cppVar_42352 & cppMask_un_16_);
	BIT_VEC cppVar_42353 = (cppVar_42343) ? cppVar_42350 : cppVar_42352;
	BIT_VEC cppVar_42354 = ROM.rd(PC);
	bool cppVar_42356 = (cppVar_42354 == 180);
	BIT_VEC cppVar_42358 = PC + 1;
	cppVar_42358 = (cppVar_42358 & cppMask_un_16_);
	BIT_VEC cppVar_42359 = ROM.rd(cppVar_42358);
	bool cppVar_42360 = (ACC != cppVar_42359);
	BIT_VEC cppVar_42362 = PC + 3;
	cppVar_42362 = (cppVar_42362 & cppMask_un_16_);
	BIT_VEC cppVar_42364 = PC + 2;
	cppVar_42364 = (cppVar_42364 & cppMask_un_16_);
	BIT_VEC cppVar_42365 = ROM.rd(cppVar_42364);
	BIT_VEC cppVar_42366 = ((cppVar_42365 & cppMask_bit_8_) ? (cppVar_42365 | cppMask_sign_8_) : cppVar_42365);
	BIT_VEC cppVar_42367 = cppVar_42362 + cppVar_42366;
	cppVar_42367 = (cppVar_42367 & cppMask_un_16_);
	BIT_VEC cppVar_42369 = PC + 3;
	cppVar_42369 = (cppVar_42369 & cppMask_un_16_);
	BIT_VEC cppVar_42370 = (cppVar_42360) ? cppVar_42367 : cppVar_42369;
	BIT_VEC cppVar_42371 = ROM.rd(PC);
	bool cppVar_42373 = (cppVar_42371 == 177);
	BIT_VEC cppVar_42374 = ROM.rd(PC);
	bool cppVar_42376 = (cppVar_42374 == 161);
	bool cppVar_42377 = cppVar_42373 || cppVar_42376;
	BIT_VEC cppVar_42379 = PC + 2;
	cppVar_42379 = (cppVar_42379 & cppMask_un_16_);
	BIT_VEC cppVar_42380 = (cppVar_42379 >> 11) & cppMask_un_5_;
	BIT_VEC cppVar_42382 = (cppVar_42380 << 3) | 5;
	cppVar_42382 = (cppVar_42382 & cppMask_un_8_);
	BIT_VEC cppVar_42384 = PC + 1;
	cppVar_42384 = (cppVar_42384 & cppMask_un_16_);
	BIT_VEC cppVar_42385 = ROM.rd(cppVar_42384);
	BIT_VEC cppVar_42386 = (cppVar_42382 << 8) | cppVar_42385;
	cppVar_42386 = (cppVar_42386 & cppMask_un_16_);
	BIT_VEC cppVar_42387 = ROM.rd(PC);
	bool cppVar_42389 = (cppVar_42387 == 145);
	BIT_VEC cppVar_42390 = ROM.rd(PC);
	bool cppVar_42392 = (cppVar_42390 == 129);
	bool cppVar_42393 = cppVar_42389 || cppVar_42392;
	BIT_VEC cppVar_42395 = PC + 2;
	cppVar_42395 = (cppVar_42395 & cppMask_un_16_);
	BIT_VEC cppVar_42396 = (cppVar_42395 >> 11) & cppMask_un_5_;
	BIT_VEC cppVar_42398 = (cppVar_42396 << 3) | 4;
	cppVar_42398 = (cppVar_42398 & cppMask_un_8_);
	BIT_VEC cppVar_42400 = PC + 1;
	cppVar_42400 = (cppVar_42400 & cppMask_un_16_);
	BIT_VEC cppVar_42401 = ROM.rd(cppVar_42400);
	BIT_VEC cppVar_42402 = (cppVar_42398 << 8) | cppVar_42401;
	cppVar_42402 = (cppVar_42402 & cppMask_un_16_);
	BIT_VEC cppVar_42403 = ROM.rd(PC);
	bool cppVar_42405 = (cppVar_42403 == 128);
	BIT_VEC cppVar_42407 = PC + 2;
	cppVar_42407 = (cppVar_42407 & cppMask_un_16_);
	BIT_VEC cppVar_42409 = PC + 1;
	cppVar_42409 = (cppVar_42409 & cppMask_un_16_);
	BIT_VEC cppVar_42410 = ROM.rd(cppVar_42409);
	BIT_VEC cppVar_42411 = ((cppVar_42410 & cppMask_bit_8_) ? (cppVar_42410 | cppMask_sign_8_) : cppVar_42410);
	BIT_VEC cppVar_42412 = cppVar_42407 + cppVar_42411;
	cppVar_42412 = (cppVar_42412 & cppMask_un_16_);
	BIT_VEC cppVar_42413 = ROM.rd(PC);
	bool cppVar_42415 = (cppVar_42413 == 115);
	BIT_VEC cppVar_42416 = (DPH << 8) | DPL;
	cppVar_42416 = (cppVar_42416 & cppMask_un_16_);
	BIT_VEC cppVar_42417 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_42418 = cppVar_42416 + cppVar_42417;
	cppVar_42418 = (cppVar_42418 & cppMask_un_16_);
	BIT_VEC cppVar_42419 = ROM.rd(PC);
	bool cppVar_42421 = (cppVar_42419 == 112);
	bool cppVar_42423 = (ACC != 0);
	BIT_VEC cppVar_42425 = PC + 2;
	cppVar_42425 = (cppVar_42425 & cppMask_un_16_);
	BIT_VEC cppVar_42427 = PC + 1;
	cppVar_42427 = (cppVar_42427 & cppMask_un_16_);
	BIT_VEC cppVar_42428 = ROM.rd(cppVar_42427);
	BIT_VEC cppVar_42429 = ((cppVar_42428 & cppMask_bit_8_) ? (cppVar_42428 | cppMask_sign_8_) : cppVar_42428);
	BIT_VEC cppVar_42430 = cppVar_42425 + cppVar_42429;
	cppVar_42430 = (cppVar_42430 & cppMask_un_16_);
	BIT_VEC cppVar_42432 = PC + 2;
	cppVar_42432 = (cppVar_42432 & cppMask_un_16_);
	BIT_VEC cppVar_42433 = (cppVar_42423) ? cppVar_42430 : cppVar_42432;
	BIT_VEC cppVar_42434 = ROM.rd(PC);
	bool cppVar_42436 = (cppVar_42434 == 113);
	BIT_VEC cppVar_42437 = ROM.rd(PC);
	bool cppVar_42439 = (cppVar_42437 == 97);
	bool cppVar_42440 = cppVar_42436 || cppVar_42439;
	BIT_VEC cppVar_42442 = PC + 2;
	cppVar_42442 = (cppVar_42442 & cppMask_un_16_);
	BIT_VEC cppVar_42443 = (cppVar_42442 >> 11) & cppMask_un_5_;
	BIT_VEC cppVar_42445 = (cppVar_42443 << 3) | 3;
	cppVar_42445 = (cppVar_42445 & cppMask_un_8_);
	BIT_VEC cppVar_42447 = PC + 1;
	cppVar_42447 = (cppVar_42447 & cppMask_un_16_);
	BIT_VEC cppVar_42448 = ROM.rd(cppVar_42447);
	BIT_VEC cppVar_42449 = (cppVar_42445 << 8) | cppVar_42448;
	cppVar_42449 = (cppVar_42449 & cppMask_un_16_);
	BIT_VEC cppVar_42450 = ROM.rd(PC);
	bool cppVar_42452 = (cppVar_42450 == 96);
	bool cppVar_42454 = (ACC == 0);
	BIT_VEC cppVar_42456 = PC + 2;
	cppVar_42456 = (cppVar_42456 & cppMask_un_16_);
	BIT_VEC cppVar_42458 = PC + 1;
	cppVar_42458 = (cppVar_42458 & cppMask_un_16_);
	BIT_VEC cppVar_42459 = ROM.rd(cppVar_42458);
	BIT_VEC cppVar_42460 = ((cppVar_42459 & cppMask_bit_8_) ? (cppVar_42459 | cppMask_sign_8_) : cppVar_42459);
	BIT_VEC cppVar_42461 = cppVar_42456 + cppVar_42460;
	cppVar_42461 = (cppVar_42461 & cppMask_un_16_);
	BIT_VEC cppVar_42463 = PC + 2;
	cppVar_42463 = (cppVar_42463 & cppMask_un_16_);
	BIT_VEC cppVar_42464 = (cppVar_42454) ? cppVar_42461 : cppVar_42463;
	BIT_VEC cppVar_42465 = ROM.rd(PC);
	bool cppVar_42467 = (cppVar_42465 == 80);
	BIT_VEC cppVar_42468 = (PSW >> 7) & cppMask_un_1_;
	bool cppVar_42470 = (cppVar_42468 == 0);
	BIT_VEC cppVar_42472 = PC + 2;
	cppVar_42472 = (cppVar_42472 & cppMask_un_16_);
	BIT_VEC cppVar_42474 = PC + 1;
	cppVar_42474 = (cppVar_42474 & cppMask_un_16_);
	BIT_VEC cppVar_42475 = ROM.rd(cppVar_42474);
	BIT_VEC cppVar_42476 = ((cppVar_42475 & cppMask_bit_8_) ? (cppVar_42475 | cppMask_sign_8_) : cppVar_42475);
	BIT_VEC cppVar_42477 = cppVar_42472 + cppVar_42476;
	cppVar_42477 = (cppVar_42477 & cppMask_un_16_);
	BIT_VEC cppVar_42479 = PC + 2;
	cppVar_42479 = (cppVar_42479 & cppMask_un_16_);
	BIT_VEC cppVar_42480 = (cppVar_42470) ? cppVar_42477 : cppVar_42479;
	BIT_VEC cppVar_42481 = ROM.rd(PC);
	bool cppVar_42483 = (cppVar_42481 == 144);
	BIT_VEC cppVar_42484 = ROM.rd(PC);
	bool cppVar_42486 = (cppVar_42484 == 133);
	BIT_VEC cppVar_42487 = ROM.rd(PC);
	bool cppVar_42489 = (cppVar_42487 == 117);
	BIT_VEC cppVar_42490 = ROM.rd(PC);
	bool cppVar_42492 = (cppVar_42490 == 99);
	BIT_VEC cppVar_42493 = ROM.rd(PC);
	bool cppVar_42495 = (cppVar_42493 == 83);
	BIT_VEC cppVar_42496 = ROM.rd(PC);
	bool cppVar_42498 = (cppVar_42496 == 67);
	bool cppVar_42499 = cppVar_42495 || cppVar_42498;
	bool cppVar_42500 = cppVar_42492 || cppVar_42499;
	bool cppVar_42501 = cppVar_42489 || cppVar_42500;
	bool cppVar_42502 = cppVar_42486 || cppVar_42501;
	bool cppVar_42503 = cppVar_42483 || cppVar_42502;
	BIT_VEC cppVar_42505 = PC + 3;
	cppVar_42505 = (cppVar_42505 & cppMask_un_16_);
	BIT_VEC cppVar_42506 = ROM.rd(PC);
	bool cppVar_42508 = (cppVar_42506 == 81);
	BIT_VEC cppVar_42509 = ROM.rd(PC);
	bool cppVar_42511 = (cppVar_42509 == 65);
	bool cppVar_42512 = cppVar_42508 || cppVar_42511;
	BIT_VEC cppVar_42514 = PC + 2;
	cppVar_42514 = (cppVar_42514 & cppMask_un_16_);
	BIT_VEC cppVar_42515 = (cppVar_42514 >> 11) & cppMask_un_5_;
	BIT_VEC cppVar_42517 = (cppVar_42515 << 3) | 2;
	cppVar_42517 = (cppVar_42517 & cppMask_un_8_);
	BIT_VEC cppVar_42519 = PC + 1;
	cppVar_42519 = (cppVar_42519 & cppMask_un_16_);
	BIT_VEC cppVar_42520 = ROM.rd(cppVar_42519);
	BIT_VEC cppVar_42521 = (cppVar_42517 << 8) | cppVar_42520;
	cppVar_42521 = (cppVar_42521 & cppMask_un_16_);
	BIT_VEC cppVar_42522 = ROM.rd(PC);
	bool cppVar_42524 = (cppVar_42522 == 64);
	BIT_VEC cppVar_42525 = (PSW >> 7) & cppMask_un_1_;
	bool cppVar_42527 = (cppVar_42525 == 1);
	BIT_VEC cppVar_42529 = PC + 2;
	cppVar_42529 = (cppVar_42529 & cppMask_un_16_);
	BIT_VEC cppVar_42531 = PC + 1;
	cppVar_42531 = (cppVar_42531 & cppMask_un_16_);
	BIT_VEC cppVar_42532 = ROM.rd(cppVar_42531);
	BIT_VEC cppVar_42533 = ((cppVar_42532 & cppMask_bit_8_) ? (cppVar_42532 | cppMask_sign_8_) : cppVar_42532);
	BIT_VEC cppVar_42534 = cppVar_42529 + cppVar_42533;
	cppVar_42534 = (cppVar_42534 & cppMask_un_16_);
	BIT_VEC cppVar_42536 = PC + 2;
	cppVar_42536 = (cppVar_42536 & cppMask_un_16_);
	BIT_VEC cppVar_42537 = (cppVar_42527) ? cppVar_42534 : cppVar_42536;
	BIT_VEC cppVar_42538 = ROM.rd(PC);
	bool cppVar_42540 = (cppVar_42538 == 48);
	BIT_VEC cppVar_42542 = PC + 1;
	cppVar_42542 = (cppVar_42542 & cppMask_un_16_);
	BIT_VEC cppVar_42543 = ROM.rd(cppVar_42542);
	BIT_VEC cppVar_42544 = (cppVar_42543 >> 7) & cppMask_un_1_;
	bool cppVar_42546 = (cppVar_42544 == 1);
	BIT_VEC cppVar_42547 = PC + 1;
	cppVar_42547 = (cppVar_42547 & cppMask_un_16_);
	BIT_VEC cppVar_42548 = ROM.rd(cppVar_42547);
	BIT_VEC cppVar_42549 = (cppVar_42548 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42551 = (cppVar_42549 << 3) | 0;
	cppVar_42551 = (cppVar_42551 & cppMask_un_8_);
	BIT_VEC cppVar_42552 = PC + 1;
	cppVar_42552 = (cppVar_42552 & cppMask_un_16_);
	BIT_VEC cppVar_42553 = ROM.rd(cppVar_42552);
	BIT_VEC cppVar_42554 = (cppVar_42553 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42555 = (cppVar_42554 & cppMask_un_5_);
	BIT_VEC cppVar_42557 = cppVar_42555 + 32;
	cppVar_42557 = (cppVar_42557 & cppMask_un_8_);
	BIT_VEC cppVar_42558 = (cppVar_42546) ? cppVar_42551 : cppVar_42557;
	BIT_VEC cppVar_42559 = (cppVar_42558 >> 7) & cppMask_un_1_;
	bool cppVar_42561 = (cppVar_42559 == 0);
	BIT_VEC cppVar_42562 = PC + 1;
	cppVar_42562 = (cppVar_42562 & cppMask_un_16_);
	BIT_VEC cppVar_42563 = ROM.rd(cppVar_42562);
	BIT_VEC cppVar_42564 = (cppVar_42563 >> 7) & cppMask_un_1_;
	bool cppVar_42565 = (cppVar_42564 == 1);
	BIT_VEC cppVar_42566 = PC + 1;
	cppVar_42566 = (cppVar_42566 & cppMask_un_16_);
	BIT_VEC cppVar_42567 = ROM.rd(cppVar_42566);
	BIT_VEC cppVar_42568 = (cppVar_42567 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42569 = (cppVar_42568 << 3) | 0;
	cppVar_42569 = (cppVar_42569 & cppMask_un_8_);
	BIT_VEC cppVar_42570 = PC + 1;
	cppVar_42570 = (cppVar_42570 & cppMask_un_16_);
	BIT_VEC cppVar_42571 = ROM.rd(cppVar_42570);
	BIT_VEC cppVar_42572 = (cppVar_42571 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42573 = (cppVar_42572 & cppMask_un_5_);
	BIT_VEC cppVar_42574 = cppVar_42573 + 32;
	cppVar_42574 = (cppVar_42574 & cppMask_un_8_);
	BIT_VEC cppVar_42575 = (cppVar_42565) ? cppVar_42569 : cppVar_42574;
	BIT_VEC cppVar_42576 = IRAM.rd(cppVar_42575);
	BIT_VEC cppVar_42577 = PC + 1;
	cppVar_42577 = (cppVar_42577 & cppMask_un_16_);
	BIT_VEC cppVar_42578 = ROM.rd(cppVar_42577);
	BIT_VEC cppVar_42579 = (cppVar_42578 >> 7) & cppMask_un_1_;
	bool cppVar_42580 = (cppVar_42579 == 1);
	BIT_VEC cppVar_42581 = PC + 1;
	cppVar_42581 = (cppVar_42581 & cppMask_un_16_);
	BIT_VEC cppVar_42582 = ROM.rd(cppVar_42581);
	BIT_VEC cppVar_42583 = (cppVar_42582 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42584 = (cppVar_42583 << 3) | 0;
	cppVar_42584 = (cppVar_42584 & cppMask_un_8_);
	BIT_VEC cppVar_42585 = PC + 1;
	cppVar_42585 = (cppVar_42585 & cppMask_un_16_);
	BIT_VEC cppVar_42586 = ROM.rd(cppVar_42585);
	BIT_VEC cppVar_42587 = (cppVar_42586 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42588 = (cppVar_42587 & cppMask_un_5_);
	BIT_VEC cppVar_42589 = cppVar_42588 + 32;
	cppVar_42589 = (cppVar_42589 & cppMask_un_8_);
	BIT_VEC cppVar_42590 = (cppVar_42580) ? cppVar_42584 : cppVar_42589;
	bool cppVar_42592 = (cppVar_42590 == 128);
	BIT_VEC cppVar_42593 = PC + 1;
	cppVar_42593 = (cppVar_42593 & cppMask_un_16_);
	BIT_VEC cppVar_42594 = ROM.rd(cppVar_42593);
	BIT_VEC cppVar_42595 = (cppVar_42594 >> 7) & cppMask_un_1_;
	bool cppVar_42596 = (cppVar_42595 == 1);
	BIT_VEC cppVar_42597 = PC + 1;
	cppVar_42597 = (cppVar_42597 & cppMask_un_16_);
	BIT_VEC cppVar_42598 = ROM.rd(cppVar_42597);
	BIT_VEC cppVar_42599 = (cppVar_42598 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42600 = (cppVar_42599 << 3) | 0;
	cppVar_42600 = (cppVar_42600 & cppMask_un_8_);
	BIT_VEC cppVar_42601 = PC + 1;
	cppVar_42601 = (cppVar_42601 & cppMask_un_16_);
	BIT_VEC cppVar_42602 = ROM.rd(cppVar_42601);
	BIT_VEC cppVar_42603 = (cppVar_42602 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42604 = (cppVar_42603 & cppMask_un_5_);
	BIT_VEC cppVar_42605 = cppVar_42604 + 32;
	cppVar_42605 = (cppVar_42605 & cppMask_un_8_);
	BIT_VEC cppVar_42606 = (cppVar_42596) ? cppVar_42600 : cppVar_42605;
	bool cppVar_42608 = (cppVar_42606 == 129);
	BIT_VEC cppVar_42609 = PC + 1;
	cppVar_42609 = (cppVar_42609 & cppMask_un_16_);
	BIT_VEC cppVar_42610 = ROM.rd(cppVar_42609);
	BIT_VEC cppVar_42611 = (cppVar_42610 >> 7) & cppMask_un_1_;
	bool cppVar_42612 = (cppVar_42611 == 1);
	BIT_VEC cppVar_42613 = PC + 1;
	cppVar_42613 = (cppVar_42613 & cppMask_un_16_);
	BIT_VEC cppVar_42614 = ROM.rd(cppVar_42613);
	BIT_VEC cppVar_42615 = (cppVar_42614 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42616 = (cppVar_42615 << 3) | 0;
	cppVar_42616 = (cppVar_42616 & cppMask_un_8_);
	BIT_VEC cppVar_42617 = PC + 1;
	cppVar_42617 = (cppVar_42617 & cppMask_un_16_);
	BIT_VEC cppVar_42618 = ROM.rd(cppVar_42617);
	BIT_VEC cppVar_42619 = (cppVar_42618 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42620 = (cppVar_42619 & cppMask_un_5_);
	BIT_VEC cppVar_42621 = cppVar_42620 + 32;
	cppVar_42621 = (cppVar_42621 & cppMask_un_8_);
	BIT_VEC cppVar_42622 = (cppVar_42612) ? cppVar_42616 : cppVar_42621;
	bool cppVar_42624 = (cppVar_42622 == 130);
	BIT_VEC cppVar_42625 = PC + 1;
	cppVar_42625 = (cppVar_42625 & cppMask_un_16_);
	BIT_VEC cppVar_42626 = ROM.rd(cppVar_42625);
	BIT_VEC cppVar_42627 = (cppVar_42626 >> 7) & cppMask_un_1_;
	bool cppVar_42628 = (cppVar_42627 == 1);
	BIT_VEC cppVar_42629 = PC + 1;
	cppVar_42629 = (cppVar_42629 & cppMask_un_16_);
	BIT_VEC cppVar_42630 = ROM.rd(cppVar_42629);
	BIT_VEC cppVar_42631 = (cppVar_42630 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42632 = (cppVar_42631 << 3) | 0;
	cppVar_42632 = (cppVar_42632 & cppMask_un_8_);
	BIT_VEC cppVar_42633 = PC + 1;
	cppVar_42633 = (cppVar_42633 & cppMask_un_16_);
	BIT_VEC cppVar_42634 = ROM.rd(cppVar_42633);
	BIT_VEC cppVar_42635 = (cppVar_42634 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42636 = (cppVar_42635 & cppMask_un_5_);
	BIT_VEC cppVar_42637 = cppVar_42636 + 32;
	cppVar_42637 = (cppVar_42637 & cppMask_un_8_);
	BIT_VEC cppVar_42638 = (cppVar_42628) ? cppVar_42632 : cppVar_42637;
	bool cppVar_42640 = (cppVar_42638 == 131);
	BIT_VEC cppVar_42641 = PC + 1;
	cppVar_42641 = (cppVar_42641 & cppMask_un_16_);
	BIT_VEC cppVar_42642 = ROM.rd(cppVar_42641);
	BIT_VEC cppVar_42643 = (cppVar_42642 >> 7) & cppMask_un_1_;
	bool cppVar_42644 = (cppVar_42643 == 1);
	BIT_VEC cppVar_42645 = PC + 1;
	cppVar_42645 = (cppVar_42645 & cppMask_un_16_);
	BIT_VEC cppVar_42646 = ROM.rd(cppVar_42645);
	BIT_VEC cppVar_42647 = (cppVar_42646 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42648 = (cppVar_42647 << 3) | 0;
	cppVar_42648 = (cppVar_42648 & cppMask_un_8_);
	BIT_VEC cppVar_42649 = PC + 1;
	cppVar_42649 = (cppVar_42649 & cppMask_un_16_);
	BIT_VEC cppVar_42650 = ROM.rd(cppVar_42649);
	BIT_VEC cppVar_42651 = (cppVar_42650 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42652 = (cppVar_42651 & cppMask_un_5_);
	BIT_VEC cppVar_42653 = cppVar_42652 + 32;
	cppVar_42653 = (cppVar_42653 & cppMask_un_8_);
	BIT_VEC cppVar_42654 = (cppVar_42644) ? cppVar_42648 : cppVar_42653;
	bool cppVar_42656 = (cppVar_42654 == 135);
	BIT_VEC cppVar_42657 = PC + 1;
	cppVar_42657 = (cppVar_42657 & cppMask_un_16_);
	BIT_VEC cppVar_42658 = ROM.rd(cppVar_42657);
	BIT_VEC cppVar_42659 = (cppVar_42658 >> 7) & cppMask_un_1_;
	bool cppVar_42660 = (cppVar_42659 == 1);
	BIT_VEC cppVar_42661 = PC + 1;
	cppVar_42661 = (cppVar_42661 & cppMask_un_16_);
	BIT_VEC cppVar_42662 = ROM.rd(cppVar_42661);
	BIT_VEC cppVar_42663 = (cppVar_42662 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42664 = (cppVar_42663 << 3) | 0;
	cppVar_42664 = (cppVar_42664 & cppMask_un_8_);
	BIT_VEC cppVar_42665 = PC + 1;
	cppVar_42665 = (cppVar_42665 & cppMask_un_16_);
	BIT_VEC cppVar_42666 = ROM.rd(cppVar_42665);
	BIT_VEC cppVar_42667 = (cppVar_42666 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42668 = (cppVar_42667 & cppMask_un_5_);
	BIT_VEC cppVar_42669 = cppVar_42668 + 32;
	cppVar_42669 = (cppVar_42669 & cppMask_un_8_);
	BIT_VEC cppVar_42670 = (cppVar_42660) ? cppVar_42664 : cppVar_42669;
	bool cppVar_42672 = (cppVar_42670 == 136);
	BIT_VEC cppVar_42673 = PC + 1;
	cppVar_42673 = (cppVar_42673 & cppMask_un_16_);
	BIT_VEC cppVar_42674 = ROM.rd(cppVar_42673);
	BIT_VEC cppVar_42675 = (cppVar_42674 >> 7) & cppMask_un_1_;
	bool cppVar_42676 = (cppVar_42675 == 1);
	BIT_VEC cppVar_42677 = PC + 1;
	cppVar_42677 = (cppVar_42677 & cppMask_un_16_);
	BIT_VEC cppVar_42678 = ROM.rd(cppVar_42677);
	BIT_VEC cppVar_42679 = (cppVar_42678 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42680 = (cppVar_42679 << 3) | 0;
	cppVar_42680 = (cppVar_42680 & cppMask_un_8_);
	BIT_VEC cppVar_42681 = PC + 1;
	cppVar_42681 = (cppVar_42681 & cppMask_un_16_);
	BIT_VEC cppVar_42682 = ROM.rd(cppVar_42681);
	BIT_VEC cppVar_42683 = (cppVar_42682 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42684 = (cppVar_42683 & cppMask_un_5_);
	BIT_VEC cppVar_42685 = cppVar_42684 + 32;
	cppVar_42685 = (cppVar_42685 & cppMask_un_8_);
	BIT_VEC cppVar_42686 = (cppVar_42676) ? cppVar_42680 : cppVar_42685;
	bool cppVar_42688 = (cppVar_42686 == 137);
	BIT_VEC cppVar_42689 = PC + 1;
	cppVar_42689 = (cppVar_42689 & cppMask_un_16_);
	BIT_VEC cppVar_42690 = ROM.rd(cppVar_42689);
	BIT_VEC cppVar_42691 = (cppVar_42690 >> 7) & cppMask_un_1_;
	bool cppVar_42692 = (cppVar_42691 == 1);
	BIT_VEC cppVar_42693 = PC + 1;
	cppVar_42693 = (cppVar_42693 & cppMask_un_16_);
	BIT_VEC cppVar_42694 = ROM.rd(cppVar_42693);
	BIT_VEC cppVar_42695 = (cppVar_42694 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42696 = (cppVar_42695 << 3) | 0;
	cppVar_42696 = (cppVar_42696 & cppMask_un_8_);
	BIT_VEC cppVar_42697 = PC + 1;
	cppVar_42697 = (cppVar_42697 & cppMask_un_16_);
	BIT_VEC cppVar_42698 = ROM.rd(cppVar_42697);
	BIT_VEC cppVar_42699 = (cppVar_42698 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42700 = (cppVar_42699 & cppMask_un_5_);
	BIT_VEC cppVar_42701 = cppVar_42700 + 32;
	cppVar_42701 = (cppVar_42701 & cppMask_un_8_);
	BIT_VEC cppVar_42702 = (cppVar_42692) ? cppVar_42696 : cppVar_42701;
	bool cppVar_42704 = (cppVar_42702 == 138);
	BIT_VEC cppVar_42705 = PC + 1;
	cppVar_42705 = (cppVar_42705 & cppMask_un_16_);
	BIT_VEC cppVar_42706 = ROM.rd(cppVar_42705);
	BIT_VEC cppVar_42707 = (cppVar_42706 >> 7) & cppMask_un_1_;
	bool cppVar_42708 = (cppVar_42707 == 1);
	BIT_VEC cppVar_42709 = PC + 1;
	cppVar_42709 = (cppVar_42709 & cppMask_un_16_);
	BIT_VEC cppVar_42710 = ROM.rd(cppVar_42709);
	BIT_VEC cppVar_42711 = (cppVar_42710 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42712 = (cppVar_42711 << 3) | 0;
	cppVar_42712 = (cppVar_42712 & cppMask_un_8_);
	BIT_VEC cppVar_42713 = PC + 1;
	cppVar_42713 = (cppVar_42713 & cppMask_un_16_);
	BIT_VEC cppVar_42714 = ROM.rd(cppVar_42713);
	BIT_VEC cppVar_42715 = (cppVar_42714 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42716 = (cppVar_42715 & cppMask_un_5_);
	BIT_VEC cppVar_42717 = cppVar_42716 + 32;
	cppVar_42717 = (cppVar_42717 & cppMask_un_8_);
	BIT_VEC cppVar_42718 = (cppVar_42708) ? cppVar_42712 : cppVar_42717;
	bool cppVar_42720 = (cppVar_42718 == 140);
	BIT_VEC cppVar_42721 = PC + 1;
	cppVar_42721 = (cppVar_42721 & cppMask_un_16_);
	BIT_VEC cppVar_42722 = ROM.rd(cppVar_42721);
	BIT_VEC cppVar_42723 = (cppVar_42722 >> 7) & cppMask_un_1_;
	bool cppVar_42724 = (cppVar_42723 == 1);
	BIT_VEC cppVar_42725 = PC + 1;
	cppVar_42725 = (cppVar_42725 & cppMask_un_16_);
	BIT_VEC cppVar_42726 = ROM.rd(cppVar_42725);
	BIT_VEC cppVar_42727 = (cppVar_42726 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42728 = (cppVar_42727 << 3) | 0;
	cppVar_42728 = (cppVar_42728 & cppMask_un_8_);
	BIT_VEC cppVar_42729 = PC + 1;
	cppVar_42729 = (cppVar_42729 & cppMask_un_16_);
	BIT_VEC cppVar_42730 = ROM.rd(cppVar_42729);
	BIT_VEC cppVar_42731 = (cppVar_42730 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42732 = (cppVar_42731 & cppMask_un_5_);
	BIT_VEC cppVar_42733 = cppVar_42732 + 32;
	cppVar_42733 = (cppVar_42733 & cppMask_un_8_);
	BIT_VEC cppVar_42734 = (cppVar_42724) ? cppVar_42728 : cppVar_42733;
	bool cppVar_42736 = (cppVar_42734 == 139);
	BIT_VEC cppVar_42737 = PC + 1;
	cppVar_42737 = (cppVar_42737 & cppMask_un_16_);
	BIT_VEC cppVar_42738 = ROM.rd(cppVar_42737);
	BIT_VEC cppVar_42739 = (cppVar_42738 >> 7) & cppMask_un_1_;
	bool cppVar_42740 = (cppVar_42739 == 1);
	BIT_VEC cppVar_42741 = PC + 1;
	cppVar_42741 = (cppVar_42741 & cppMask_un_16_);
	BIT_VEC cppVar_42742 = ROM.rd(cppVar_42741);
	BIT_VEC cppVar_42743 = (cppVar_42742 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42744 = (cppVar_42743 << 3) | 0;
	cppVar_42744 = (cppVar_42744 & cppMask_un_8_);
	BIT_VEC cppVar_42745 = PC + 1;
	cppVar_42745 = (cppVar_42745 & cppMask_un_16_);
	BIT_VEC cppVar_42746 = ROM.rd(cppVar_42745);
	BIT_VEC cppVar_42747 = (cppVar_42746 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42748 = (cppVar_42747 & cppMask_un_5_);
	BIT_VEC cppVar_42749 = cppVar_42748 + 32;
	cppVar_42749 = (cppVar_42749 & cppMask_un_8_);
	BIT_VEC cppVar_42750 = (cppVar_42740) ? cppVar_42744 : cppVar_42749;
	bool cppVar_42752 = (cppVar_42750 == 141);
	BIT_VEC cppVar_42753 = PC + 1;
	cppVar_42753 = (cppVar_42753 & cppMask_un_16_);
	BIT_VEC cppVar_42754 = ROM.rd(cppVar_42753);
	BIT_VEC cppVar_42755 = (cppVar_42754 >> 7) & cppMask_un_1_;
	bool cppVar_42756 = (cppVar_42755 == 1);
	BIT_VEC cppVar_42757 = PC + 1;
	cppVar_42757 = (cppVar_42757 & cppMask_un_16_);
	BIT_VEC cppVar_42758 = ROM.rd(cppVar_42757);
	BIT_VEC cppVar_42759 = (cppVar_42758 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42760 = (cppVar_42759 << 3) | 0;
	cppVar_42760 = (cppVar_42760 & cppMask_un_8_);
	BIT_VEC cppVar_42761 = PC + 1;
	cppVar_42761 = (cppVar_42761 & cppMask_un_16_);
	BIT_VEC cppVar_42762 = ROM.rd(cppVar_42761);
	BIT_VEC cppVar_42763 = (cppVar_42762 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42764 = (cppVar_42763 & cppMask_un_5_);
	BIT_VEC cppVar_42765 = cppVar_42764 + 32;
	cppVar_42765 = (cppVar_42765 & cppMask_un_8_);
	BIT_VEC cppVar_42766 = (cppVar_42756) ? cppVar_42760 : cppVar_42765;
	bool cppVar_42768 = (cppVar_42766 == 144);
	BIT_VEC cppVar_42769 = PC + 1;
	cppVar_42769 = (cppVar_42769 & cppMask_un_16_);
	BIT_VEC cppVar_42770 = ROM.rd(cppVar_42769);
	BIT_VEC cppVar_42771 = (cppVar_42770 >> 7) & cppMask_un_1_;
	bool cppVar_42772 = (cppVar_42771 == 1);
	BIT_VEC cppVar_42773 = PC + 1;
	cppVar_42773 = (cppVar_42773 & cppMask_un_16_);
	BIT_VEC cppVar_42774 = ROM.rd(cppVar_42773);
	BIT_VEC cppVar_42775 = (cppVar_42774 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42776 = (cppVar_42775 << 3) | 0;
	cppVar_42776 = (cppVar_42776 & cppMask_un_8_);
	BIT_VEC cppVar_42777 = PC + 1;
	cppVar_42777 = (cppVar_42777 & cppMask_un_16_);
	BIT_VEC cppVar_42778 = ROM.rd(cppVar_42777);
	BIT_VEC cppVar_42779 = (cppVar_42778 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42780 = (cppVar_42779 & cppMask_un_5_);
	BIT_VEC cppVar_42781 = cppVar_42780 + 32;
	cppVar_42781 = (cppVar_42781 & cppMask_un_8_);
	BIT_VEC cppVar_42782 = (cppVar_42772) ? cppVar_42776 : cppVar_42781;
	bool cppVar_42784 = (cppVar_42782 == 152);
	BIT_VEC cppVar_42785 = PC + 1;
	cppVar_42785 = (cppVar_42785 & cppMask_un_16_);
	BIT_VEC cppVar_42786 = ROM.rd(cppVar_42785);
	BIT_VEC cppVar_42787 = (cppVar_42786 >> 7) & cppMask_un_1_;
	bool cppVar_42788 = (cppVar_42787 == 1);
	BIT_VEC cppVar_42789 = PC + 1;
	cppVar_42789 = (cppVar_42789 & cppMask_un_16_);
	BIT_VEC cppVar_42790 = ROM.rd(cppVar_42789);
	BIT_VEC cppVar_42791 = (cppVar_42790 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42792 = (cppVar_42791 << 3) | 0;
	cppVar_42792 = (cppVar_42792 & cppMask_un_8_);
	BIT_VEC cppVar_42793 = PC + 1;
	cppVar_42793 = (cppVar_42793 & cppMask_un_16_);
	BIT_VEC cppVar_42794 = ROM.rd(cppVar_42793);
	BIT_VEC cppVar_42795 = (cppVar_42794 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42796 = (cppVar_42795 & cppMask_un_5_);
	BIT_VEC cppVar_42797 = cppVar_42796 + 32;
	cppVar_42797 = (cppVar_42797 & cppMask_un_8_);
	BIT_VEC cppVar_42798 = (cppVar_42788) ? cppVar_42792 : cppVar_42797;
	bool cppVar_42800 = (cppVar_42798 == 153);
	BIT_VEC cppVar_42801 = PC + 1;
	cppVar_42801 = (cppVar_42801 & cppMask_un_16_);
	BIT_VEC cppVar_42802 = ROM.rd(cppVar_42801);
	BIT_VEC cppVar_42803 = (cppVar_42802 >> 7) & cppMask_un_1_;
	bool cppVar_42804 = (cppVar_42803 == 1);
	BIT_VEC cppVar_42805 = PC + 1;
	cppVar_42805 = (cppVar_42805 & cppMask_un_16_);
	BIT_VEC cppVar_42806 = ROM.rd(cppVar_42805);
	BIT_VEC cppVar_42807 = (cppVar_42806 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42808 = (cppVar_42807 << 3) | 0;
	cppVar_42808 = (cppVar_42808 & cppMask_un_8_);
	BIT_VEC cppVar_42809 = PC + 1;
	cppVar_42809 = (cppVar_42809 & cppMask_un_16_);
	BIT_VEC cppVar_42810 = ROM.rd(cppVar_42809);
	BIT_VEC cppVar_42811 = (cppVar_42810 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42812 = (cppVar_42811 & cppMask_un_5_);
	BIT_VEC cppVar_42813 = cppVar_42812 + 32;
	cppVar_42813 = (cppVar_42813 & cppMask_un_8_);
	BIT_VEC cppVar_42814 = (cppVar_42804) ? cppVar_42808 : cppVar_42813;
	bool cppVar_42816 = (cppVar_42814 == 160);
	BIT_VEC cppVar_42817 = PC + 1;
	cppVar_42817 = (cppVar_42817 & cppMask_un_16_);
	BIT_VEC cppVar_42818 = ROM.rd(cppVar_42817);
	BIT_VEC cppVar_42819 = (cppVar_42818 >> 7) & cppMask_un_1_;
	bool cppVar_42820 = (cppVar_42819 == 1);
	BIT_VEC cppVar_42821 = PC + 1;
	cppVar_42821 = (cppVar_42821 & cppMask_un_16_);
	BIT_VEC cppVar_42822 = ROM.rd(cppVar_42821);
	BIT_VEC cppVar_42823 = (cppVar_42822 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42824 = (cppVar_42823 << 3) | 0;
	cppVar_42824 = (cppVar_42824 & cppMask_un_8_);
	BIT_VEC cppVar_42825 = PC + 1;
	cppVar_42825 = (cppVar_42825 & cppMask_un_16_);
	BIT_VEC cppVar_42826 = ROM.rd(cppVar_42825);
	BIT_VEC cppVar_42827 = (cppVar_42826 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42828 = (cppVar_42827 & cppMask_un_5_);
	BIT_VEC cppVar_42829 = cppVar_42828 + 32;
	cppVar_42829 = (cppVar_42829 & cppMask_un_8_);
	BIT_VEC cppVar_42830 = (cppVar_42820) ? cppVar_42824 : cppVar_42829;
	bool cppVar_42832 = (cppVar_42830 == 168);
	BIT_VEC cppVar_42833 = PC + 1;
	cppVar_42833 = (cppVar_42833 & cppMask_un_16_);
	BIT_VEC cppVar_42834 = ROM.rd(cppVar_42833);
	BIT_VEC cppVar_42835 = (cppVar_42834 >> 7) & cppMask_un_1_;
	bool cppVar_42836 = (cppVar_42835 == 1);
	BIT_VEC cppVar_42837 = PC + 1;
	cppVar_42837 = (cppVar_42837 & cppMask_un_16_);
	BIT_VEC cppVar_42838 = ROM.rd(cppVar_42837);
	BIT_VEC cppVar_42839 = (cppVar_42838 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42840 = (cppVar_42839 << 3) | 0;
	cppVar_42840 = (cppVar_42840 & cppMask_un_8_);
	BIT_VEC cppVar_42841 = PC + 1;
	cppVar_42841 = (cppVar_42841 & cppMask_un_16_);
	BIT_VEC cppVar_42842 = ROM.rd(cppVar_42841);
	BIT_VEC cppVar_42843 = (cppVar_42842 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42844 = (cppVar_42843 & cppMask_un_5_);
	BIT_VEC cppVar_42845 = cppVar_42844 + 32;
	cppVar_42845 = (cppVar_42845 & cppMask_un_8_);
	BIT_VEC cppVar_42846 = (cppVar_42836) ? cppVar_42840 : cppVar_42845;
	bool cppVar_42848 = (cppVar_42846 == 176);
	BIT_VEC cppVar_42849 = PC + 1;
	cppVar_42849 = (cppVar_42849 & cppMask_un_16_);
	BIT_VEC cppVar_42850 = ROM.rd(cppVar_42849);
	BIT_VEC cppVar_42851 = (cppVar_42850 >> 7) & cppMask_un_1_;
	bool cppVar_42852 = (cppVar_42851 == 1);
	BIT_VEC cppVar_42853 = PC + 1;
	cppVar_42853 = (cppVar_42853 & cppMask_un_16_);
	BIT_VEC cppVar_42854 = ROM.rd(cppVar_42853);
	BIT_VEC cppVar_42855 = (cppVar_42854 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42856 = (cppVar_42855 << 3) | 0;
	cppVar_42856 = (cppVar_42856 & cppMask_un_8_);
	BIT_VEC cppVar_42857 = PC + 1;
	cppVar_42857 = (cppVar_42857 & cppMask_un_16_);
	BIT_VEC cppVar_42858 = ROM.rd(cppVar_42857);
	BIT_VEC cppVar_42859 = (cppVar_42858 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42860 = (cppVar_42859 & cppMask_un_5_);
	BIT_VEC cppVar_42861 = cppVar_42860 + 32;
	cppVar_42861 = (cppVar_42861 & cppMask_un_8_);
	BIT_VEC cppVar_42862 = (cppVar_42852) ? cppVar_42856 : cppVar_42861;
	bool cppVar_42864 = (cppVar_42862 == 184);
	BIT_VEC cppVar_42865 = PC + 1;
	cppVar_42865 = (cppVar_42865 & cppMask_un_16_);
	BIT_VEC cppVar_42866 = ROM.rd(cppVar_42865);
	BIT_VEC cppVar_42867 = (cppVar_42866 >> 7) & cppMask_un_1_;
	bool cppVar_42868 = (cppVar_42867 == 1);
	BIT_VEC cppVar_42869 = PC + 1;
	cppVar_42869 = (cppVar_42869 & cppMask_un_16_);
	BIT_VEC cppVar_42870 = ROM.rd(cppVar_42869);
	BIT_VEC cppVar_42871 = (cppVar_42870 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42872 = (cppVar_42871 << 3) | 0;
	cppVar_42872 = (cppVar_42872 & cppMask_un_8_);
	BIT_VEC cppVar_42873 = PC + 1;
	cppVar_42873 = (cppVar_42873 & cppMask_un_16_);
	BIT_VEC cppVar_42874 = ROM.rd(cppVar_42873);
	BIT_VEC cppVar_42875 = (cppVar_42874 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42876 = (cppVar_42875 & cppMask_un_5_);
	BIT_VEC cppVar_42877 = cppVar_42876 + 32;
	cppVar_42877 = (cppVar_42877 & cppMask_un_8_);
	BIT_VEC cppVar_42878 = (cppVar_42868) ? cppVar_42872 : cppVar_42877;
	bool cppVar_42880 = (cppVar_42878 == 208);
	BIT_VEC cppVar_42881 = PC + 1;
	cppVar_42881 = (cppVar_42881 & cppMask_un_16_);
	BIT_VEC cppVar_42882 = ROM.rd(cppVar_42881);
	BIT_VEC cppVar_42883 = (cppVar_42882 >> 7) & cppMask_un_1_;
	bool cppVar_42884 = (cppVar_42883 == 1);
	BIT_VEC cppVar_42885 = PC + 1;
	cppVar_42885 = (cppVar_42885 & cppMask_un_16_);
	BIT_VEC cppVar_42886 = ROM.rd(cppVar_42885);
	BIT_VEC cppVar_42887 = (cppVar_42886 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42888 = (cppVar_42887 << 3) | 0;
	cppVar_42888 = (cppVar_42888 & cppMask_un_8_);
	BIT_VEC cppVar_42889 = PC + 1;
	cppVar_42889 = (cppVar_42889 & cppMask_un_16_);
	BIT_VEC cppVar_42890 = ROM.rd(cppVar_42889);
	BIT_VEC cppVar_42891 = (cppVar_42890 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42892 = (cppVar_42891 & cppMask_un_5_);
	BIT_VEC cppVar_42893 = cppVar_42892 + 32;
	cppVar_42893 = (cppVar_42893 & cppMask_un_8_);
	BIT_VEC cppVar_42894 = (cppVar_42884) ? cppVar_42888 : cppVar_42893;
	bool cppVar_42896 = (cppVar_42894 == 224);
	BIT_VEC cppVar_42897 = PC + 1;
	cppVar_42897 = (cppVar_42897 & cppMask_un_16_);
	BIT_VEC cppVar_42898 = ROM.rd(cppVar_42897);
	BIT_VEC cppVar_42899 = (cppVar_42898 >> 7) & cppMask_un_1_;
	bool cppVar_42900 = (cppVar_42899 == 1);
	BIT_VEC cppVar_42901 = PC + 1;
	cppVar_42901 = (cppVar_42901 & cppMask_un_16_);
	BIT_VEC cppVar_42902 = ROM.rd(cppVar_42901);
	BIT_VEC cppVar_42903 = (cppVar_42902 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42904 = (cppVar_42903 << 3) | 0;
	cppVar_42904 = (cppVar_42904 & cppMask_un_8_);
	BIT_VEC cppVar_42905 = PC + 1;
	cppVar_42905 = (cppVar_42905 & cppMask_un_16_);
	BIT_VEC cppVar_42906 = ROM.rd(cppVar_42905);
	BIT_VEC cppVar_42907 = (cppVar_42906 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42908 = (cppVar_42907 & cppMask_un_5_);
	BIT_VEC cppVar_42909 = cppVar_42908 + 32;
	cppVar_42909 = (cppVar_42909 & cppMask_un_8_);
	BIT_VEC cppVar_42910 = (cppVar_42900) ? cppVar_42904 : cppVar_42909;
	bool cppVar_42912 = (cppVar_42910 == 240);
	BIT_VEC cppVar_42914 = (cppVar_42912) ? B : 0;
	BIT_VEC cppVar_42915 = (cppVar_42896) ? ACC : cppVar_42914;
	BIT_VEC cppVar_42916 = (cppVar_42880) ? PSW : cppVar_42915;
	BIT_VEC cppVar_42917 = (cppVar_42864) ? IP : cppVar_42916;
	BIT_VEC cppVar_42918 = (cppVar_42848) ? P3 : cppVar_42917;
	BIT_VEC cppVar_42919 = (cppVar_42832) ? IE : cppVar_42918;
	BIT_VEC cppVar_42920 = (cppVar_42816) ? P2 : cppVar_42919;
	BIT_VEC cppVar_42921 = (cppVar_42800) ? SBUF : cppVar_42920;
	BIT_VEC cppVar_42922 = (cppVar_42784) ? SCON : cppVar_42921;
	BIT_VEC cppVar_42923 = (cppVar_42768) ? P1 : cppVar_42922;
	BIT_VEC cppVar_42924 = (cppVar_42752) ? TH1 : cppVar_42923;
	BIT_VEC cppVar_42925 = (cppVar_42736) ? TL1 : cppVar_42924;
	BIT_VEC cppVar_42926 = (cppVar_42720) ? TH0 : cppVar_42925;
	BIT_VEC cppVar_42927 = (cppVar_42704) ? TL0 : cppVar_42926;
	BIT_VEC cppVar_42928 = (cppVar_42688) ? TMOD : cppVar_42927;
	BIT_VEC cppVar_42929 = (cppVar_42672) ? TCON : cppVar_42928;
	BIT_VEC cppVar_42930 = (cppVar_42656) ? PCON : cppVar_42929;
	BIT_VEC cppVar_42931 = (cppVar_42640) ? DPH : cppVar_42930;
	BIT_VEC cppVar_42932 = (cppVar_42624) ? DPL : cppVar_42931;
	BIT_VEC cppVar_42933 = (cppVar_42608) ? SP : cppVar_42932;
	BIT_VEC cppVar_42934 = (cppVar_42592) ? P0 : cppVar_42933;
	BIT_VEC cppVar_42935 = (cppVar_42561) ? cppVar_42576 : cppVar_42934;
	BIT_VEC cppVar_42936 = PC + 1;
	cppVar_42936 = (cppVar_42936 & cppMask_un_16_);
	BIT_VEC cppVar_42937 = ROM.rd(cppVar_42936);
	BIT_VEC cppVar_42938 = (cppVar_42937 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_42939 = (cppVar_42935 >> static_cast<unsigned>(cppVar_42938)) & 0x1;
	bool cppVar_42941 = (cppVar_42939 == 0);
	BIT_VEC cppVar_42943 = PC + 3;
	cppVar_42943 = (cppVar_42943 & cppMask_un_16_);
	BIT_VEC cppVar_42945 = PC + 2;
	cppVar_42945 = (cppVar_42945 & cppMask_un_16_);
	BIT_VEC cppVar_42946 = ROM.rd(cppVar_42945);
	BIT_VEC cppVar_42947 = ((cppVar_42946 & cppMask_bit_8_) ? (cppVar_42946 | cppMask_sign_8_) : cppVar_42946);
	BIT_VEC cppVar_42948 = cppVar_42943 + cppVar_42947;
	cppVar_42948 = (cppVar_42948 & cppMask_un_16_);
	BIT_VEC cppVar_42950 = PC + 3;
	cppVar_42950 = (cppVar_42950 & cppMask_un_16_);
	BIT_VEC cppVar_42951 = (cppVar_42941) ? cppVar_42948 : cppVar_42950;
	BIT_VEC cppVar_42952 = ROM.rd(PC);
	bool cppVar_42954 = (cppVar_42952 == 50);
	BIT_VEC cppVar_42955 = ROM.rd(PC);
	bool cppVar_42957 = (cppVar_42955 == 34);
	bool cppVar_42958 = cppVar_42954 || cppVar_42957;
	BIT_VEC cppVar_42959 = IRAM.rd(SP);
	BIT_VEC cppVar_42961 = SP - 1;
	cppVar_42961 = (cppVar_42961 & cppMask_un_8_);
	BIT_VEC cppVar_42962 = IRAM.rd(cppVar_42961);
	BIT_VEC cppVar_42963 = (cppVar_42959 << 8) | cppVar_42962;
	cppVar_42963 = (cppVar_42963 & cppMask_un_16_);
	BIT_VEC cppVar_42964 = ROM.rd(PC);
	bool cppVar_42966 = (cppVar_42964 == 49);
	BIT_VEC cppVar_42967 = ROM.rd(PC);
	bool cppVar_42969 = (cppVar_42967 == 33);
	bool cppVar_42970 = cppVar_42966 || cppVar_42969;
	BIT_VEC cppVar_42972 = PC + 2;
	cppVar_42972 = (cppVar_42972 & cppMask_un_16_);
	BIT_VEC cppVar_42973 = (cppVar_42972 >> 11) & cppMask_un_5_;
	BIT_VEC cppVar_42975 = (cppVar_42973 << 3) | 1;
	cppVar_42975 = (cppVar_42975 & cppMask_un_8_);
	BIT_VEC cppVar_42977 = PC + 1;
	cppVar_42977 = (cppVar_42977 & cppMask_un_16_);
	BIT_VEC cppVar_42978 = ROM.rd(cppVar_42977);
	BIT_VEC cppVar_42979 = (cppVar_42975 << 8) | cppVar_42978;
	cppVar_42979 = (cppVar_42979 & cppMask_un_16_);
	BIT_VEC cppVar_42980 = ROM.rd(PC);
	bool cppVar_42982 = (cppVar_42980 == 32);
	BIT_VEC cppVar_42983 = ROM.rd(PC);
	bool cppVar_42985 = (cppVar_42983 == 16);
	bool cppVar_42986 = cppVar_42982 || cppVar_42985;
	BIT_VEC cppVar_42988 = PC + 1;
	cppVar_42988 = (cppVar_42988 & cppMask_un_16_);
	BIT_VEC cppVar_42989 = ROM.rd(cppVar_42988);
	BIT_VEC cppVar_42990 = (cppVar_42989 >> 7) & cppMask_un_1_;
	bool cppVar_42992 = (cppVar_42990 == 1);
	BIT_VEC cppVar_42993 = PC + 1;
	cppVar_42993 = (cppVar_42993 & cppMask_un_16_);
	BIT_VEC cppVar_42994 = ROM.rd(cppVar_42993);
	BIT_VEC cppVar_42995 = (cppVar_42994 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_42997 = (cppVar_42995 << 3) | 0;
	cppVar_42997 = (cppVar_42997 & cppMask_un_8_);
	BIT_VEC cppVar_42998 = PC + 1;
	cppVar_42998 = (cppVar_42998 & cppMask_un_16_);
	BIT_VEC cppVar_42999 = ROM.rd(cppVar_42998);
	BIT_VEC cppVar_43000 = (cppVar_42999 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43001 = (cppVar_43000 & cppMask_un_5_);
	BIT_VEC cppVar_43003 = cppVar_43001 + 32;
	cppVar_43003 = (cppVar_43003 & cppMask_un_8_);
	BIT_VEC cppVar_43004 = (cppVar_42992) ? cppVar_42997 : cppVar_43003;
	BIT_VEC cppVar_43005 = (cppVar_43004 >> 7) & cppMask_un_1_;
	bool cppVar_43007 = (cppVar_43005 == 0);
	BIT_VEC cppVar_43008 = PC + 1;
	cppVar_43008 = (cppVar_43008 & cppMask_un_16_);
	BIT_VEC cppVar_43009 = ROM.rd(cppVar_43008);
	BIT_VEC cppVar_43010 = (cppVar_43009 >> 7) & cppMask_un_1_;
	bool cppVar_43011 = (cppVar_43010 == 1);
	BIT_VEC cppVar_43012 = PC + 1;
	cppVar_43012 = (cppVar_43012 & cppMask_un_16_);
	BIT_VEC cppVar_43013 = ROM.rd(cppVar_43012);
	BIT_VEC cppVar_43014 = (cppVar_43013 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43015 = (cppVar_43014 << 3) | 0;
	cppVar_43015 = (cppVar_43015 & cppMask_un_8_);
	BIT_VEC cppVar_43016 = PC + 1;
	cppVar_43016 = (cppVar_43016 & cppMask_un_16_);
	BIT_VEC cppVar_43017 = ROM.rd(cppVar_43016);
	BIT_VEC cppVar_43018 = (cppVar_43017 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43019 = (cppVar_43018 & cppMask_un_5_);
	BIT_VEC cppVar_43020 = cppVar_43019 + 32;
	cppVar_43020 = (cppVar_43020 & cppMask_un_8_);
	BIT_VEC cppVar_43021 = (cppVar_43011) ? cppVar_43015 : cppVar_43020;
	BIT_VEC cppVar_43022 = IRAM.rd(cppVar_43021);
	BIT_VEC cppVar_43023 = PC + 1;
	cppVar_43023 = (cppVar_43023 & cppMask_un_16_);
	BIT_VEC cppVar_43024 = ROM.rd(cppVar_43023);
	BIT_VEC cppVar_43025 = (cppVar_43024 >> 7) & cppMask_un_1_;
	bool cppVar_43026 = (cppVar_43025 == 1);
	BIT_VEC cppVar_43027 = PC + 1;
	cppVar_43027 = (cppVar_43027 & cppMask_un_16_);
	BIT_VEC cppVar_43028 = ROM.rd(cppVar_43027);
	BIT_VEC cppVar_43029 = (cppVar_43028 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43030 = (cppVar_43029 << 3) | 0;
	cppVar_43030 = (cppVar_43030 & cppMask_un_8_);
	BIT_VEC cppVar_43031 = PC + 1;
	cppVar_43031 = (cppVar_43031 & cppMask_un_16_);
	BIT_VEC cppVar_43032 = ROM.rd(cppVar_43031);
	BIT_VEC cppVar_43033 = (cppVar_43032 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43034 = (cppVar_43033 & cppMask_un_5_);
	BIT_VEC cppVar_43035 = cppVar_43034 + 32;
	cppVar_43035 = (cppVar_43035 & cppMask_un_8_);
	BIT_VEC cppVar_43036 = (cppVar_43026) ? cppVar_43030 : cppVar_43035;
	bool cppVar_43038 = (cppVar_43036 == 128);
	BIT_VEC cppVar_43039 = PC + 1;
	cppVar_43039 = (cppVar_43039 & cppMask_un_16_);
	BIT_VEC cppVar_43040 = ROM.rd(cppVar_43039);
	BIT_VEC cppVar_43041 = (cppVar_43040 >> 7) & cppMask_un_1_;
	bool cppVar_43042 = (cppVar_43041 == 1);
	BIT_VEC cppVar_43043 = PC + 1;
	cppVar_43043 = (cppVar_43043 & cppMask_un_16_);
	BIT_VEC cppVar_43044 = ROM.rd(cppVar_43043);
	BIT_VEC cppVar_43045 = (cppVar_43044 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43046 = (cppVar_43045 << 3) | 0;
	cppVar_43046 = (cppVar_43046 & cppMask_un_8_);
	BIT_VEC cppVar_43047 = PC + 1;
	cppVar_43047 = (cppVar_43047 & cppMask_un_16_);
	BIT_VEC cppVar_43048 = ROM.rd(cppVar_43047);
	BIT_VEC cppVar_43049 = (cppVar_43048 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43050 = (cppVar_43049 & cppMask_un_5_);
	BIT_VEC cppVar_43051 = cppVar_43050 + 32;
	cppVar_43051 = (cppVar_43051 & cppMask_un_8_);
	BIT_VEC cppVar_43052 = (cppVar_43042) ? cppVar_43046 : cppVar_43051;
	bool cppVar_43054 = (cppVar_43052 == 129);
	BIT_VEC cppVar_43055 = PC + 1;
	cppVar_43055 = (cppVar_43055 & cppMask_un_16_);
	BIT_VEC cppVar_43056 = ROM.rd(cppVar_43055);
	BIT_VEC cppVar_43057 = (cppVar_43056 >> 7) & cppMask_un_1_;
	bool cppVar_43058 = (cppVar_43057 == 1);
	BIT_VEC cppVar_43059 = PC + 1;
	cppVar_43059 = (cppVar_43059 & cppMask_un_16_);
	BIT_VEC cppVar_43060 = ROM.rd(cppVar_43059);
	BIT_VEC cppVar_43061 = (cppVar_43060 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43062 = (cppVar_43061 << 3) | 0;
	cppVar_43062 = (cppVar_43062 & cppMask_un_8_);
	BIT_VEC cppVar_43063 = PC + 1;
	cppVar_43063 = (cppVar_43063 & cppMask_un_16_);
	BIT_VEC cppVar_43064 = ROM.rd(cppVar_43063);
	BIT_VEC cppVar_43065 = (cppVar_43064 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43066 = (cppVar_43065 & cppMask_un_5_);
	BIT_VEC cppVar_43067 = cppVar_43066 + 32;
	cppVar_43067 = (cppVar_43067 & cppMask_un_8_);
	BIT_VEC cppVar_43068 = (cppVar_43058) ? cppVar_43062 : cppVar_43067;
	bool cppVar_43070 = (cppVar_43068 == 130);
	BIT_VEC cppVar_43071 = PC + 1;
	cppVar_43071 = (cppVar_43071 & cppMask_un_16_);
	BIT_VEC cppVar_43072 = ROM.rd(cppVar_43071);
	BIT_VEC cppVar_43073 = (cppVar_43072 >> 7) & cppMask_un_1_;
	bool cppVar_43074 = (cppVar_43073 == 1);
	BIT_VEC cppVar_43075 = PC + 1;
	cppVar_43075 = (cppVar_43075 & cppMask_un_16_);
	BIT_VEC cppVar_43076 = ROM.rd(cppVar_43075);
	BIT_VEC cppVar_43077 = (cppVar_43076 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43078 = (cppVar_43077 << 3) | 0;
	cppVar_43078 = (cppVar_43078 & cppMask_un_8_);
	BIT_VEC cppVar_43079 = PC + 1;
	cppVar_43079 = (cppVar_43079 & cppMask_un_16_);
	BIT_VEC cppVar_43080 = ROM.rd(cppVar_43079);
	BIT_VEC cppVar_43081 = (cppVar_43080 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43082 = (cppVar_43081 & cppMask_un_5_);
	BIT_VEC cppVar_43083 = cppVar_43082 + 32;
	cppVar_43083 = (cppVar_43083 & cppMask_un_8_);
	BIT_VEC cppVar_43084 = (cppVar_43074) ? cppVar_43078 : cppVar_43083;
	bool cppVar_43086 = (cppVar_43084 == 131);
	BIT_VEC cppVar_43087 = PC + 1;
	cppVar_43087 = (cppVar_43087 & cppMask_un_16_);
	BIT_VEC cppVar_43088 = ROM.rd(cppVar_43087);
	BIT_VEC cppVar_43089 = (cppVar_43088 >> 7) & cppMask_un_1_;
	bool cppVar_43090 = (cppVar_43089 == 1);
	BIT_VEC cppVar_43091 = PC + 1;
	cppVar_43091 = (cppVar_43091 & cppMask_un_16_);
	BIT_VEC cppVar_43092 = ROM.rd(cppVar_43091);
	BIT_VEC cppVar_43093 = (cppVar_43092 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43094 = (cppVar_43093 << 3) | 0;
	cppVar_43094 = (cppVar_43094 & cppMask_un_8_);
	BIT_VEC cppVar_43095 = PC + 1;
	cppVar_43095 = (cppVar_43095 & cppMask_un_16_);
	BIT_VEC cppVar_43096 = ROM.rd(cppVar_43095);
	BIT_VEC cppVar_43097 = (cppVar_43096 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43098 = (cppVar_43097 & cppMask_un_5_);
	BIT_VEC cppVar_43099 = cppVar_43098 + 32;
	cppVar_43099 = (cppVar_43099 & cppMask_un_8_);
	BIT_VEC cppVar_43100 = (cppVar_43090) ? cppVar_43094 : cppVar_43099;
	bool cppVar_43102 = (cppVar_43100 == 135);
	BIT_VEC cppVar_43103 = PC + 1;
	cppVar_43103 = (cppVar_43103 & cppMask_un_16_);
	BIT_VEC cppVar_43104 = ROM.rd(cppVar_43103);
	BIT_VEC cppVar_43105 = (cppVar_43104 >> 7) & cppMask_un_1_;
	bool cppVar_43106 = (cppVar_43105 == 1);
	BIT_VEC cppVar_43107 = PC + 1;
	cppVar_43107 = (cppVar_43107 & cppMask_un_16_);
	BIT_VEC cppVar_43108 = ROM.rd(cppVar_43107);
	BIT_VEC cppVar_43109 = (cppVar_43108 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43110 = (cppVar_43109 << 3) | 0;
	cppVar_43110 = (cppVar_43110 & cppMask_un_8_);
	BIT_VEC cppVar_43111 = PC + 1;
	cppVar_43111 = (cppVar_43111 & cppMask_un_16_);
	BIT_VEC cppVar_43112 = ROM.rd(cppVar_43111);
	BIT_VEC cppVar_43113 = (cppVar_43112 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43114 = (cppVar_43113 & cppMask_un_5_);
	BIT_VEC cppVar_43115 = cppVar_43114 + 32;
	cppVar_43115 = (cppVar_43115 & cppMask_un_8_);
	BIT_VEC cppVar_43116 = (cppVar_43106) ? cppVar_43110 : cppVar_43115;
	bool cppVar_43118 = (cppVar_43116 == 136);
	BIT_VEC cppVar_43119 = PC + 1;
	cppVar_43119 = (cppVar_43119 & cppMask_un_16_);
	BIT_VEC cppVar_43120 = ROM.rd(cppVar_43119);
	BIT_VEC cppVar_43121 = (cppVar_43120 >> 7) & cppMask_un_1_;
	bool cppVar_43122 = (cppVar_43121 == 1);
	BIT_VEC cppVar_43123 = PC + 1;
	cppVar_43123 = (cppVar_43123 & cppMask_un_16_);
	BIT_VEC cppVar_43124 = ROM.rd(cppVar_43123);
	BIT_VEC cppVar_43125 = (cppVar_43124 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43126 = (cppVar_43125 << 3) | 0;
	cppVar_43126 = (cppVar_43126 & cppMask_un_8_);
	BIT_VEC cppVar_43127 = PC + 1;
	cppVar_43127 = (cppVar_43127 & cppMask_un_16_);
	BIT_VEC cppVar_43128 = ROM.rd(cppVar_43127);
	BIT_VEC cppVar_43129 = (cppVar_43128 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43130 = (cppVar_43129 & cppMask_un_5_);
	BIT_VEC cppVar_43131 = cppVar_43130 + 32;
	cppVar_43131 = (cppVar_43131 & cppMask_un_8_);
	BIT_VEC cppVar_43132 = (cppVar_43122) ? cppVar_43126 : cppVar_43131;
	bool cppVar_43134 = (cppVar_43132 == 137);
	BIT_VEC cppVar_43135 = PC + 1;
	cppVar_43135 = (cppVar_43135 & cppMask_un_16_);
	BIT_VEC cppVar_43136 = ROM.rd(cppVar_43135);
	BIT_VEC cppVar_43137 = (cppVar_43136 >> 7) & cppMask_un_1_;
	bool cppVar_43138 = (cppVar_43137 == 1);
	BIT_VEC cppVar_43139 = PC + 1;
	cppVar_43139 = (cppVar_43139 & cppMask_un_16_);
	BIT_VEC cppVar_43140 = ROM.rd(cppVar_43139);
	BIT_VEC cppVar_43141 = (cppVar_43140 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43142 = (cppVar_43141 << 3) | 0;
	cppVar_43142 = (cppVar_43142 & cppMask_un_8_);
	BIT_VEC cppVar_43143 = PC + 1;
	cppVar_43143 = (cppVar_43143 & cppMask_un_16_);
	BIT_VEC cppVar_43144 = ROM.rd(cppVar_43143);
	BIT_VEC cppVar_43145 = (cppVar_43144 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43146 = (cppVar_43145 & cppMask_un_5_);
	BIT_VEC cppVar_43147 = cppVar_43146 + 32;
	cppVar_43147 = (cppVar_43147 & cppMask_un_8_);
	BIT_VEC cppVar_43148 = (cppVar_43138) ? cppVar_43142 : cppVar_43147;
	bool cppVar_43150 = (cppVar_43148 == 138);
	BIT_VEC cppVar_43151 = PC + 1;
	cppVar_43151 = (cppVar_43151 & cppMask_un_16_);
	BIT_VEC cppVar_43152 = ROM.rd(cppVar_43151);
	BIT_VEC cppVar_43153 = (cppVar_43152 >> 7) & cppMask_un_1_;
	bool cppVar_43154 = (cppVar_43153 == 1);
	BIT_VEC cppVar_43155 = PC + 1;
	cppVar_43155 = (cppVar_43155 & cppMask_un_16_);
	BIT_VEC cppVar_43156 = ROM.rd(cppVar_43155);
	BIT_VEC cppVar_43157 = (cppVar_43156 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43158 = (cppVar_43157 << 3) | 0;
	cppVar_43158 = (cppVar_43158 & cppMask_un_8_);
	BIT_VEC cppVar_43159 = PC + 1;
	cppVar_43159 = (cppVar_43159 & cppMask_un_16_);
	BIT_VEC cppVar_43160 = ROM.rd(cppVar_43159);
	BIT_VEC cppVar_43161 = (cppVar_43160 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43162 = (cppVar_43161 & cppMask_un_5_);
	BIT_VEC cppVar_43163 = cppVar_43162 + 32;
	cppVar_43163 = (cppVar_43163 & cppMask_un_8_);
	BIT_VEC cppVar_43164 = (cppVar_43154) ? cppVar_43158 : cppVar_43163;
	bool cppVar_43166 = (cppVar_43164 == 140);
	BIT_VEC cppVar_43167 = PC + 1;
	cppVar_43167 = (cppVar_43167 & cppMask_un_16_);
	BIT_VEC cppVar_43168 = ROM.rd(cppVar_43167);
	BIT_VEC cppVar_43169 = (cppVar_43168 >> 7) & cppMask_un_1_;
	bool cppVar_43170 = (cppVar_43169 == 1);
	BIT_VEC cppVar_43171 = PC + 1;
	cppVar_43171 = (cppVar_43171 & cppMask_un_16_);
	BIT_VEC cppVar_43172 = ROM.rd(cppVar_43171);
	BIT_VEC cppVar_43173 = (cppVar_43172 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43174 = (cppVar_43173 << 3) | 0;
	cppVar_43174 = (cppVar_43174 & cppMask_un_8_);
	BIT_VEC cppVar_43175 = PC + 1;
	cppVar_43175 = (cppVar_43175 & cppMask_un_16_);
	BIT_VEC cppVar_43176 = ROM.rd(cppVar_43175);
	BIT_VEC cppVar_43177 = (cppVar_43176 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43178 = (cppVar_43177 & cppMask_un_5_);
	BIT_VEC cppVar_43179 = cppVar_43178 + 32;
	cppVar_43179 = (cppVar_43179 & cppMask_un_8_);
	BIT_VEC cppVar_43180 = (cppVar_43170) ? cppVar_43174 : cppVar_43179;
	bool cppVar_43182 = (cppVar_43180 == 139);
	BIT_VEC cppVar_43183 = PC + 1;
	cppVar_43183 = (cppVar_43183 & cppMask_un_16_);
	BIT_VEC cppVar_43184 = ROM.rd(cppVar_43183);
	BIT_VEC cppVar_43185 = (cppVar_43184 >> 7) & cppMask_un_1_;
	bool cppVar_43186 = (cppVar_43185 == 1);
	BIT_VEC cppVar_43187 = PC + 1;
	cppVar_43187 = (cppVar_43187 & cppMask_un_16_);
	BIT_VEC cppVar_43188 = ROM.rd(cppVar_43187);
	BIT_VEC cppVar_43189 = (cppVar_43188 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43190 = (cppVar_43189 << 3) | 0;
	cppVar_43190 = (cppVar_43190 & cppMask_un_8_);
	BIT_VEC cppVar_43191 = PC + 1;
	cppVar_43191 = (cppVar_43191 & cppMask_un_16_);
	BIT_VEC cppVar_43192 = ROM.rd(cppVar_43191);
	BIT_VEC cppVar_43193 = (cppVar_43192 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43194 = (cppVar_43193 & cppMask_un_5_);
	BIT_VEC cppVar_43195 = cppVar_43194 + 32;
	cppVar_43195 = (cppVar_43195 & cppMask_un_8_);
	BIT_VEC cppVar_43196 = (cppVar_43186) ? cppVar_43190 : cppVar_43195;
	bool cppVar_43198 = (cppVar_43196 == 141);
	BIT_VEC cppVar_43199 = PC + 1;
	cppVar_43199 = (cppVar_43199 & cppMask_un_16_);
	BIT_VEC cppVar_43200 = ROM.rd(cppVar_43199);
	BIT_VEC cppVar_43201 = (cppVar_43200 >> 7) & cppMask_un_1_;
	bool cppVar_43202 = (cppVar_43201 == 1);
	BIT_VEC cppVar_43203 = PC + 1;
	cppVar_43203 = (cppVar_43203 & cppMask_un_16_);
	BIT_VEC cppVar_43204 = ROM.rd(cppVar_43203);
	BIT_VEC cppVar_43205 = (cppVar_43204 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43206 = (cppVar_43205 << 3) | 0;
	cppVar_43206 = (cppVar_43206 & cppMask_un_8_);
	BIT_VEC cppVar_43207 = PC + 1;
	cppVar_43207 = (cppVar_43207 & cppMask_un_16_);
	BIT_VEC cppVar_43208 = ROM.rd(cppVar_43207);
	BIT_VEC cppVar_43209 = (cppVar_43208 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43210 = (cppVar_43209 & cppMask_un_5_);
	BIT_VEC cppVar_43211 = cppVar_43210 + 32;
	cppVar_43211 = (cppVar_43211 & cppMask_un_8_);
	BIT_VEC cppVar_43212 = (cppVar_43202) ? cppVar_43206 : cppVar_43211;
	bool cppVar_43214 = (cppVar_43212 == 144);
	BIT_VEC cppVar_43215 = PC + 1;
	cppVar_43215 = (cppVar_43215 & cppMask_un_16_);
	BIT_VEC cppVar_43216 = ROM.rd(cppVar_43215);
	BIT_VEC cppVar_43217 = (cppVar_43216 >> 7) & cppMask_un_1_;
	bool cppVar_43218 = (cppVar_43217 == 1);
	BIT_VEC cppVar_43219 = PC + 1;
	cppVar_43219 = (cppVar_43219 & cppMask_un_16_);
	BIT_VEC cppVar_43220 = ROM.rd(cppVar_43219);
	BIT_VEC cppVar_43221 = (cppVar_43220 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43222 = (cppVar_43221 << 3) | 0;
	cppVar_43222 = (cppVar_43222 & cppMask_un_8_);
	BIT_VEC cppVar_43223 = PC + 1;
	cppVar_43223 = (cppVar_43223 & cppMask_un_16_);
	BIT_VEC cppVar_43224 = ROM.rd(cppVar_43223);
	BIT_VEC cppVar_43225 = (cppVar_43224 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43226 = (cppVar_43225 & cppMask_un_5_);
	BIT_VEC cppVar_43227 = cppVar_43226 + 32;
	cppVar_43227 = (cppVar_43227 & cppMask_un_8_);
	BIT_VEC cppVar_43228 = (cppVar_43218) ? cppVar_43222 : cppVar_43227;
	bool cppVar_43230 = (cppVar_43228 == 152);
	BIT_VEC cppVar_43231 = PC + 1;
	cppVar_43231 = (cppVar_43231 & cppMask_un_16_);
	BIT_VEC cppVar_43232 = ROM.rd(cppVar_43231);
	BIT_VEC cppVar_43233 = (cppVar_43232 >> 7) & cppMask_un_1_;
	bool cppVar_43234 = (cppVar_43233 == 1);
	BIT_VEC cppVar_43235 = PC + 1;
	cppVar_43235 = (cppVar_43235 & cppMask_un_16_);
	BIT_VEC cppVar_43236 = ROM.rd(cppVar_43235);
	BIT_VEC cppVar_43237 = (cppVar_43236 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43238 = (cppVar_43237 << 3) | 0;
	cppVar_43238 = (cppVar_43238 & cppMask_un_8_);
	BIT_VEC cppVar_43239 = PC + 1;
	cppVar_43239 = (cppVar_43239 & cppMask_un_16_);
	BIT_VEC cppVar_43240 = ROM.rd(cppVar_43239);
	BIT_VEC cppVar_43241 = (cppVar_43240 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43242 = (cppVar_43241 & cppMask_un_5_);
	BIT_VEC cppVar_43243 = cppVar_43242 + 32;
	cppVar_43243 = (cppVar_43243 & cppMask_un_8_);
	BIT_VEC cppVar_43244 = (cppVar_43234) ? cppVar_43238 : cppVar_43243;
	bool cppVar_43246 = (cppVar_43244 == 153);
	BIT_VEC cppVar_43247 = PC + 1;
	cppVar_43247 = (cppVar_43247 & cppMask_un_16_);
	BIT_VEC cppVar_43248 = ROM.rd(cppVar_43247);
	BIT_VEC cppVar_43249 = (cppVar_43248 >> 7) & cppMask_un_1_;
	bool cppVar_43250 = (cppVar_43249 == 1);
	BIT_VEC cppVar_43251 = PC + 1;
	cppVar_43251 = (cppVar_43251 & cppMask_un_16_);
	BIT_VEC cppVar_43252 = ROM.rd(cppVar_43251);
	BIT_VEC cppVar_43253 = (cppVar_43252 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43254 = (cppVar_43253 << 3) | 0;
	cppVar_43254 = (cppVar_43254 & cppMask_un_8_);
	BIT_VEC cppVar_43255 = PC + 1;
	cppVar_43255 = (cppVar_43255 & cppMask_un_16_);
	BIT_VEC cppVar_43256 = ROM.rd(cppVar_43255);
	BIT_VEC cppVar_43257 = (cppVar_43256 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43258 = (cppVar_43257 & cppMask_un_5_);
	BIT_VEC cppVar_43259 = cppVar_43258 + 32;
	cppVar_43259 = (cppVar_43259 & cppMask_un_8_);
	BIT_VEC cppVar_43260 = (cppVar_43250) ? cppVar_43254 : cppVar_43259;
	bool cppVar_43262 = (cppVar_43260 == 160);
	BIT_VEC cppVar_43263 = PC + 1;
	cppVar_43263 = (cppVar_43263 & cppMask_un_16_);
	BIT_VEC cppVar_43264 = ROM.rd(cppVar_43263);
	BIT_VEC cppVar_43265 = (cppVar_43264 >> 7) & cppMask_un_1_;
	bool cppVar_43266 = (cppVar_43265 == 1);
	BIT_VEC cppVar_43267 = PC + 1;
	cppVar_43267 = (cppVar_43267 & cppMask_un_16_);
	BIT_VEC cppVar_43268 = ROM.rd(cppVar_43267);
	BIT_VEC cppVar_43269 = (cppVar_43268 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43270 = (cppVar_43269 << 3) | 0;
	cppVar_43270 = (cppVar_43270 & cppMask_un_8_);
	BIT_VEC cppVar_43271 = PC + 1;
	cppVar_43271 = (cppVar_43271 & cppMask_un_16_);
	BIT_VEC cppVar_43272 = ROM.rd(cppVar_43271);
	BIT_VEC cppVar_43273 = (cppVar_43272 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43274 = (cppVar_43273 & cppMask_un_5_);
	BIT_VEC cppVar_43275 = cppVar_43274 + 32;
	cppVar_43275 = (cppVar_43275 & cppMask_un_8_);
	BIT_VEC cppVar_43276 = (cppVar_43266) ? cppVar_43270 : cppVar_43275;
	bool cppVar_43278 = (cppVar_43276 == 168);
	BIT_VEC cppVar_43279 = PC + 1;
	cppVar_43279 = (cppVar_43279 & cppMask_un_16_);
	BIT_VEC cppVar_43280 = ROM.rd(cppVar_43279);
	BIT_VEC cppVar_43281 = (cppVar_43280 >> 7) & cppMask_un_1_;
	bool cppVar_43282 = (cppVar_43281 == 1);
	BIT_VEC cppVar_43283 = PC + 1;
	cppVar_43283 = (cppVar_43283 & cppMask_un_16_);
	BIT_VEC cppVar_43284 = ROM.rd(cppVar_43283);
	BIT_VEC cppVar_43285 = (cppVar_43284 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43286 = (cppVar_43285 << 3) | 0;
	cppVar_43286 = (cppVar_43286 & cppMask_un_8_);
	BIT_VEC cppVar_43287 = PC + 1;
	cppVar_43287 = (cppVar_43287 & cppMask_un_16_);
	BIT_VEC cppVar_43288 = ROM.rd(cppVar_43287);
	BIT_VEC cppVar_43289 = (cppVar_43288 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43290 = (cppVar_43289 & cppMask_un_5_);
	BIT_VEC cppVar_43291 = cppVar_43290 + 32;
	cppVar_43291 = (cppVar_43291 & cppMask_un_8_);
	BIT_VEC cppVar_43292 = (cppVar_43282) ? cppVar_43286 : cppVar_43291;
	bool cppVar_43294 = (cppVar_43292 == 176);
	BIT_VEC cppVar_43295 = PC + 1;
	cppVar_43295 = (cppVar_43295 & cppMask_un_16_);
	BIT_VEC cppVar_43296 = ROM.rd(cppVar_43295);
	BIT_VEC cppVar_43297 = (cppVar_43296 >> 7) & cppMask_un_1_;
	bool cppVar_43298 = (cppVar_43297 == 1);
	BIT_VEC cppVar_43299 = PC + 1;
	cppVar_43299 = (cppVar_43299 & cppMask_un_16_);
	BIT_VEC cppVar_43300 = ROM.rd(cppVar_43299);
	BIT_VEC cppVar_43301 = (cppVar_43300 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43302 = (cppVar_43301 << 3) | 0;
	cppVar_43302 = (cppVar_43302 & cppMask_un_8_);
	BIT_VEC cppVar_43303 = PC + 1;
	cppVar_43303 = (cppVar_43303 & cppMask_un_16_);
	BIT_VEC cppVar_43304 = ROM.rd(cppVar_43303);
	BIT_VEC cppVar_43305 = (cppVar_43304 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43306 = (cppVar_43305 & cppMask_un_5_);
	BIT_VEC cppVar_43307 = cppVar_43306 + 32;
	cppVar_43307 = (cppVar_43307 & cppMask_un_8_);
	BIT_VEC cppVar_43308 = (cppVar_43298) ? cppVar_43302 : cppVar_43307;
	bool cppVar_43310 = (cppVar_43308 == 184);
	BIT_VEC cppVar_43311 = PC + 1;
	cppVar_43311 = (cppVar_43311 & cppMask_un_16_);
	BIT_VEC cppVar_43312 = ROM.rd(cppVar_43311);
	BIT_VEC cppVar_43313 = (cppVar_43312 >> 7) & cppMask_un_1_;
	bool cppVar_43314 = (cppVar_43313 == 1);
	BIT_VEC cppVar_43315 = PC + 1;
	cppVar_43315 = (cppVar_43315 & cppMask_un_16_);
	BIT_VEC cppVar_43316 = ROM.rd(cppVar_43315);
	BIT_VEC cppVar_43317 = (cppVar_43316 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43318 = (cppVar_43317 << 3) | 0;
	cppVar_43318 = (cppVar_43318 & cppMask_un_8_);
	BIT_VEC cppVar_43319 = PC + 1;
	cppVar_43319 = (cppVar_43319 & cppMask_un_16_);
	BIT_VEC cppVar_43320 = ROM.rd(cppVar_43319);
	BIT_VEC cppVar_43321 = (cppVar_43320 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43322 = (cppVar_43321 & cppMask_un_5_);
	BIT_VEC cppVar_43323 = cppVar_43322 + 32;
	cppVar_43323 = (cppVar_43323 & cppMask_un_8_);
	BIT_VEC cppVar_43324 = (cppVar_43314) ? cppVar_43318 : cppVar_43323;
	bool cppVar_43326 = (cppVar_43324 == 208);
	BIT_VEC cppVar_43327 = PC + 1;
	cppVar_43327 = (cppVar_43327 & cppMask_un_16_);
	BIT_VEC cppVar_43328 = ROM.rd(cppVar_43327);
	BIT_VEC cppVar_43329 = (cppVar_43328 >> 7) & cppMask_un_1_;
	bool cppVar_43330 = (cppVar_43329 == 1);
	BIT_VEC cppVar_43331 = PC + 1;
	cppVar_43331 = (cppVar_43331 & cppMask_un_16_);
	BIT_VEC cppVar_43332 = ROM.rd(cppVar_43331);
	BIT_VEC cppVar_43333 = (cppVar_43332 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43334 = (cppVar_43333 << 3) | 0;
	cppVar_43334 = (cppVar_43334 & cppMask_un_8_);
	BIT_VEC cppVar_43335 = PC + 1;
	cppVar_43335 = (cppVar_43335 & cppMask_un_16_);
	BIT_VEC cppVar_43336 = ROM.rd(cppVar_43335);
	BIT_VEC cppVar_43337 = (cppVar_43336 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43338 = (cppVar_43337 & cppMask_un_5_);
	BIT_VEC cppVar_43339 = cppVar_43338 + 32;
	cppVar_43339 = (cppVar_43339 & cppMask_un_8_);
	BIT_VEC cppVar_43340 = (cppVar_43330) ? cppVar_43334 : cppVar_43339;
	bool cppVar_43342 = (cppVar_43340 == 224);
	BIT_VEC cppVar_43343 = PC + 1;
	cppVar_43343 = (cppVar_43343 & cppMask_un_16_);
	BIT_VEC cppVar_43344 = ROM.rd(cppVar_43343);
	BIT_VEC cppVar_43345 = (cppVar_43344 >> 7) & cppMask_un_1_;
	bool cppVar_43346 = (cppVar_43345 == 1);
	BIT_VEC cppVar_43347 = PC + 1;
	cppVar_43347 = (cppVar_43347 & cppMask_un_16_);
	BIT_VEC cppVar_43348 = ROM.rd(cppVar_43347);
	BIT_VEC cppVar_43349 = (cppVar_43348 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43350 = (cppVar_43349 << 3) | 0;
	cppVar_43350 = (cppVar_43350 & cppMask_un_8_);
	BIT_VEC cppVar_43351 = PC + 1;
	cppVar_43351 = (cppVar_43351 & cppMask_un_16_);
	BIT_VEC cppVar_43352 = ROM.rd(cppVar_43351);
	BIT_VEC cppVar_43353 = (cppVar_43352 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_43354 = (cppVar_43353 & cppMask_un_5_);
	BIT_VEC cppVar_43355 = cppVar_43354 + 32;
	cppVar_43355 = (cppVar_43355 & cppMask_un_8_);
	BIT_VEC cppVar_43356 = (cppVar_43346) ? cppVar_43350 : cppVar_43355;
	bool cppVar_43358 = (cppVar_43356 == 240);
	BIT_VEC cppVar_43360 = (cppVar_43358) ? B : 0;
	BIT_VEC cppVar_43361 = (cppVar_43342) ? ACC : cppVar_43360;
	BIT_VEC cppVar_43362 = (cppVar_43326) ? PSW : cppVar_43361;
	BIT_VEC cppVar_43363 = (cppVar_43310) ? IP : cppVar_43362;
	BIT_VEC cppVar_43364 = (cppVar_43294) ? P3 : cppVar_43363;
	BIT_VEC cppVar_43365 = (cppVar_43278) ? IE : cppVar_43364;
	BIT_VEC cppVar_43366 = (cppVar_43262) ? P2 : cppVar_43365;
	BIT_VEC cppVar_43367 = (cppVar_43246) ? SBUF : cppVar_43366;
	BIT_VEC cppVar_43368 = (cppVar_43230) ? SCON : cppVar_43367;
	BIT_VEC cppVar_43369 = (cppVar_43214) ? P1 : cppVar_43368;
	BIT_VEC cppVar_43370 = (cppVar_43198) ? TH1 : cppVar_43369;
	BIT_VEC cppVar_43371 = (cppVar_43182) ? TL1 : cppVar_43370;
	BIT_VEC cppVar_43372 = (cppVar_43166) ? TH0 : cppVar_43371;
	BIT_VEC cppVar_43373 = (cppVar_43150) ? TL0 : cppVar_43372;
	BIT_VEC cppVar_43374 = (cppVar_43134) ? TMOD : cppVar_43373;
	BIT_VEC cppVar_43375 = (cppVar_43118) ? TCON : cppVar_43374;
	BIT_VEC cppVar_43376 = (cppVar_43102) ? PCON : cppVar_43375;
	BIT_VEC cppVar_43377 = (cppVar_43086) ? DPH : cppVar_43376;
	BIT_VEC cppVar_43378 = (cppVar_43070) ? DPL : cppVar_43377;
	BIT_VEC cppVar_43379 = (cppVar_43054) ? SP : cppVar_43378;
	BIT_VEC cppVar_43380 = (cppVar_43038) ? P0 : cppVar_43379;
	BIT_VEC cppVar_43381 = (cppVar_43007) ? cppVar_43022 : cppVar_43380;
	BIT_VEC cppVar_43382 = PC + 1;
	cppVar_43382 = (cppVar_43382 & cppMask_un_16_);
	BIT_VEC cppVar_43383 = ROM.rd(cppVar_43382);
	BIT_VEC cppVar_43384 = (cppVar_43383 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_43385 = (cppVar_43381 >> static_cast<unsigned>(cppVar_43384)) & 0x1;
	bool cppVar_43387 = (cppVar_43385 == 1);
	BIT_VEC cppVar_43389 = PC + 3;
	cppVar_43389 = (cppVar_43389 & cppMask_un_16_);
	BIT_VEC cppVar_43391 = PC + 2;
	cppVar_43391 = (cppVar_43391 & cppMask_un_16_);
	BIT_VEC cppVar_43392 = ROM.rd(cppVar_43391);
	BIT_VEC cppVar_43393 = ((cppVar_43392 & cppMask_bit_8_) ? (cppVar_43392 | cppMask_sign_8_) : cppVar_43392);
	BIT_VEC cppVar_43394 = cppVar_43389 + cppVar_43393;
	cppVar_43394 = (cppVar_43394 & cppMask_un_16_);
	BIT_VEC cppVar_43396 = PC + 3;
	cppVar_43396 = (cppVar_43396 & cppMask_un_16_);
	BIT_VEC cppVar_43397 = (cppVar_43387) ? cppVar_43394 : cppVar_43396;
	BIT_VEC cppVar_43398 = ROM.rd(PC);
	bool cppVar_43400 = (cppVar_43398 == 245);
	BIT_VEC cppVar_43401 = ROM.rd(PC);
	bool cppVar_43403 = (cppVar_43401 == 229);
	BIT_VEC cppVar_43404 = ROM.rd(PC);
	bool cppVar_43406 = (cppVar_43404 == 210);
	BIT_VEC cppVar_43407 = ROM.rd(PC);
	bool cppVar_43409 = (cppVar_43407 == 208);
	BIT_VEC cppVar_43410 = ROM.rd(PC);
	bool cppVar_43412 = (cppVar_43410 == 197);
	BIT_VEC cppVar_43413 = ROM.rd(PC);
	bool cppVar_43415 = (cppVar_43413 == 194);
	BIT_VEC cppVar_43416 = ROM.rd(PC);
	bool cppVar_43418 = (cppVar_43416 == 192);
	BIT_VEC cppVar_43419 = ROM.rd(PC);
	bool cppVar_43421 = (cppVar_43419 == 178);
	BIT_VEC cppVar_43422 = ROM.rd(PC);
	bool cppVar_43424 = (cppVar_43422 == 176);
	BIT_VEC cppVar_43425 = ROM.rd(PC);
	bool cppVar_43427 = (cppVar_43425 == 175);
	BIT_VEC cppVar_43428 = ROM.rd(PC);
	bool cppVar_43430 = (cppVar_43428 == 174);
	BIT_VEC cppVar_43431 = ROM.rd(PC);
	bool cppVar_43433 = (cppVar_43431 == 173);
	BIT_VEC cppVar_43434 = ROM.rd(PC);
	bool cppVar_43436 = (cppVar_43434 == 172);
	BIT_VEC cppVar_43437 = ROM.rd(PC);
	bool cppVar_43439 = (cppVar_43437 == 171);
	BIT_VEC cppVar_43440 = ROM.rd(PC);
	bool cppVar_43442 = (cppVar_43440 == 170);
	BIT_VEC cppVar_43443 = ROM.rd(PC);
	bool cppVar_43445 = (cppVar_43443 == 169);
	BIT_VEC cppVar_43446 = ROM.rd(PC);
	bool cppVar_43448 = (cppVar_43446 == 168);
	BIT_VEC cppVar_43449 = ROM.rd(PC);
	bool cppVar_43451 = (cppVar_43449 == 167);
	BIT_VEC cppVar_43452 = ROM.rd(PC);
	bool cppVar_43454 = (cppVar_43452 == 166);
	BIT_VEC cppVar_43455 = ROM.rd(PC);
	bool cppVar_43457 = (cppVar_43455 == 162);
	BIT_VEC cppVar_43458 = ROM.rd(PC);
	bool cppVar_43460 = (cppVar_43458 == 160);
	BIT_VEC cppVar_43461 = ROM.rd(PC);
	bool cppVar_43463 = (cppVar_43461 == 149);
	BIT_VEC cppVar_43464 = ROM.rd(PC);
	bool cppVar_43466 = (cppVar_43464 == 148);
	BIT_VEC cppVar_43467 = ROM.rd(PC);
	bool cppVar_43469 = (cppVar_43467 == 146);
	BIT_VEC cppVar_43470 = ROM.rd(PC);
	bool cppVar_43472 = (cppVar_43470 == 143);
	BIT_VEC cppVar_43473 = ROM.rd(PC);
	bool cppVar_43475 = (cppVar_43473 == 142);
	BIT_VEC cppVar_43476 = ROM.rd(PC);
	bool cppVar_43478 = (cppVar_43476 == 141);
	BIT_VEC cppVar_43479 = ROM.rd(PC);
	bool cppVar_43481 = (cppVar_43479 == 140);
	BIT_VEC cppVar_43482 = ROM.rd(PC);
	bool cppVar_43484 = (cppVar_43482 == 139);
	BIT_VEC cppVar_43485 = ROM.rd(PC);
	bool cppVar_43487 = (cppVar_43485 == 138);
	BIT_VEC cppVar_43488 = ROM.rd(PC);
	bool cppVar_43490 = (cppVar_43488 == 137);
	BIT_VEC cppVar_43491 = ROM.rd(PC);
	bool cppVar_43493 = (cppVar_43491 == 136);
	BIT_VEC cppVar_43494 = ROM.rd(PC);
	bool cppVar_43496 = (cppVar_43494 == 135);
	BIT_VEC cppVar_43497 = ROM.rd(PC);
	bool cppVar_43499 = (cppVar_43497 == 134);
	BIT_VEC cppVar_43500 = ROM.rd(PC);
	bool cppVar_43502 = (cppVar_43500 == 130);
	BIT_VEC cppVar_43503 = ROM.rd(PC);
	bool cppVar_43505 = (cppVar_43503 == 127);
	BIT_VEC cppVar_43506 = ROM.rd(PC);
	bool cppVar_43508 = (cppVar_43506 == 126);
	BIT_VEC cppVar_43509 = ROM.rd(PC);
	bool cppVar_43511 = (cppVar_43509 == 125);
	BIT_VEC cppVar_43512 = ROM.rd(PC);
	bool cppVar_43514 = (cppVar_43512 == 124);
	BIT_VEC cppVar_43515 = ROM.rd(PC);
	bool cppVar_43517 = (cppVar_43515 == 123);
	BIT_VEC cppVar_43518 = ROM.rd(PC);
	bool cppVar_43520 = (cppVar_43518 == 122);
	BIT_VEC cppVar_43521 = ROM.rd(PC);
	bool cppVar_43523 = (cppVar_43521 == 121);
	BIT_VEC cppVar_43524 = ROM.rd(PC);
	bool cppVar_43526 = (cppVar_43524 == 120);
	BIT_VEC cppVar_43527 = ROM.rd(PC);
	bool cppVar_43529 = (cppVar_43527 == 119);
	BIT_VEC cppVar_43530 = ROM.rd(PC);
	bool cppVar_43532 = (cppVar_43530 == 118);
	BIT_VEC cppVar_43533 = ROM.rd(PC);
	bool cppVar_43535 = (cppVar_43533 == 116);
	BIT_VEC cppVar_43536 = ROM.rd(PC);
	bool cppVar_43538 = (cppVar_43536 == 114);
	BIT_VEC cppVar_43539 = ROM.rd(PC);
	bool cppVar_43541 = (cppVar_43539 == 101);
	BIT_VEC cppVar_43542 = ROM.rd(PC);
	bool cppVar_43544 = (cppVar_43542 == 100);
	BIT_VEC cppVar_43545 = ROM.rd(PC);
	bool cppVar_43547 = (cppVar_43545 == 98);
	BIT_VEC cppVar_43548 = ROM.rd(PC);
	bool cppVar_43550 = (cppVar_43548 == 85);
	BIT_VEC cppVar_43551 = ROM.rd(PC);
	bool cppVar_43553 = (cppVar_43551 == 84);
	BIT_VEC cppVar_43554 = ROM.rd(PC);
	bool cppVar_43556 = (cppVar_43554 == 82);
	BIT_VEC cppVar_43557 = ROM.rd(PC);
	bool cppVar_43559 = (cppVar_43557 == 69);
	BIT_VEC cppVar_43560 = ROM.rd(PC);
	bool cppVar_43562 = (cppVar_43560 == 68);
	BIT_VEC cppVar_43563 = ROM.rd(PC);
	bool cppVar_43565 = (cppVar_43563 == 66);
	BIT_VEC cppVar_43566 = ROM.rd(PC);
	bool cppVar_43568 = (cppVar_43566 == 53);
	BIT_VEC cppVar_43569 = ROM.rd(PC);
	bool cppVar_43571 = (cppVar_43569 == 52);
	BIT_VEC cppVar_43572 = ROM.rd(PC);
	bool cppVar_43574 = (cppVar_43572 == 37);
	BIT_VEC cppVar_43575 = ROM.rd(PC);
	bool cppVar_43577 = (cppVar_43575 == 36);
	BIT_VEC cppVar_43578 = ROM.rd(PC);
	bool cppVar_43580 = (cppVar_43578 == 21);
	BIT_VEC cppVar_43581 = ROM.rd(PC);
	bool cppVar_43583 = (cppVar_43581 == 5);
	bool cppVar_43584 = cppVar_43580 || cppVar_43583;
	bool cppVar_43585 = cppVar_43577 || cppVar_43584;
	bool cppVar_43586 = cppVar_43574 || cppVar_43585;
	bool cppVar_43587 = cppVar_43571 || cppVar_43586;
	bool cppVar_43588 = cppVar_43568 || cppVar_43587;
	bool cppVar_43589 = cppVar_43565 || cppVar_43588;
	bool cppVar_43590 = cppVar_43562 || cppVar_43589;
	bool cppVar_43591 = cppVar_43559 || cppVar_43590;
	bool cppVar_43592 = cppVar_43556 || cppVar_43591;
	bool cppVar_43593 = cppVar_43553 || cppVar_43592;
	bool cppVar_43594 = cppVar_43550 || cppVar_43593;
	bool cppVar_43595 = cppVar_43547 || cppVar_43594;
	bool cppVar_43596 = cppVar_43544 || cppVar_43595;
	bool cppVar_43597 = cppVar_43541 || cppVar_43596;
	bool cppVar_43598 = cppVar_43538 || cppVar_43597;
	bool cppVar_43599 = cppVar_43535 || cppVar_43598;
	bool cppVar_43600 = cppVar_43532 || cppVar_43599;
	bool cppVar_43601 = cppVar_43529 || cppVar_43600;
	bool cppVar_43602 = cppVar_43526 || cppVar_43601;
	bool cppVar_43603 = cppVar_43523 || cppVar_43602;
	bool cppVar_43604 = cppVar_43520 || cppVar_43603;
	bool cppVar_43605 = cppVar_43517 || cppVar_43604;
	bool cppVar_43606 = cppVar_43514 || cppVar_43605;
	bool cppVar_43607 = cppVar_43511 || cppVar_43606;
	bool cppVar_43608 = cppVar_43508 || cppVar_43607;
	bool cppVar_43609 = cppVar_43505 || cppVar_43608;
	bool cppVar_43610 = cppVar_43502 || cppVar_43609;
	bool cppVar_43611 = cppVar_43499 || cppVar_43610;
	bool cppVar_43612 = cppVar_43496 || cppVar_43611;
	bool cppVar_43613 = cppVar_43493 || cppVar_43612;
	bool cppVar_43614 = cppVar_43490 || cppVar_43613;
	bool cppVar_43615 = cppVar_43487 || cppVar_43614;
	bool cppVar_43616 = cppVar_43484 || cppVar_43615;
	bool cppVar_43617 = cppVar_43481 || cppVar_43616;
	bool cppVar_43618 = cppVar_43478 || cppVar_43617;
	bool cppVar_43619 = cppVar_43475 || cppVar_43618;
	bool cppVar_43620 = cppVar_43472 || cppVar_43619;
	bool cppVar_43621 = cppVar_43469 || cppVar_43620;
	bool cppVar_43622 = cppVar_43466 || cppVar_43621;
	bool cppVar_43623 = cppVar_43463 || cppVar_43622;
	bool cppVar_43624 = cppVar_43460 || cppVar_43623;
	bool cppVar_43625 = cppVar_43457 || cppVar_43624;
	bool cppVar_43626 = cppVar_43454 || cppVar_43625;
	bool cppVar_43627 = cppVar_43451 || cppVar_43626;
	bool cppVar_43628 = cppVar_43448 || cppVar_43627;
	bool cppVar_43629 = cppVar_43445 || cppVar_43628;
	bool cppVar_43630 = cppVar_43442 || cppVar_43629;
	bool cppVar_43631 = cppVar_43439 || cppVar_43630;
	bool cppVar_43632 = cppVar_43436 || cppVar_43631;
	bool cppVar_43633 = cppVar_43433 || cppVar_43632;
	bool cppVar_43634 = cppVar_43430 || cppVar_43633;
	bool cppVar_43635 = cppVar_43427 || cppVar_43634;
	bool cppVar_43636 = cppVar_43424 || cppVar_43635;
	bool cppVar_43637 = cppVar_43421 || cppVar_43636;
	bool cppVar_43638 = cppVar_43418 || cppVar_43637;
	bool cppVar_43639 = cppVar_43415 || cppVar_43638;
	bool cppVar_43640 = cppVar_43412 || cppVar_43639;
	bool cppVar_43641 = cppVar_43409 || cppVar_43640;
	bool cppVar_43642 = cppVar_43406 || cppVar_43641;
	bool cppVar_43643 = cppVar_43403 || cppVar_43642;
	bool cppVar_43644 = cppVar_43400 || cppVar_43643;
	BIT_VEC cppVar_43646 = PC + 2;
	cppVar_43646 = (cppVar_43646 & cppMask_un_16_);
	BIT_VEC cppVar_43647 = ROM.rd(PC);
	bool cppVar_43649 = (cppVar_43647 == 18);
	BIT_VEC cppVar_43650 = ROM.rd(PC);
	bool cppVar_43652 = (cppVar_43650 == 2);
	bool cppVar_43653 = cppVar_43649 || cppVar_43652;
	BIT_VEC cppVar_43655 = PC + 1;
	cppVar_43655 = (cppVar_43655 & cppMask_un_16_);
	BIT_VEC cppVar_43656 = ROM.rd(cppVar_43655);
	BIT_VEC cppVar_43658 = PC + 2;
	cppVar_43658 = (cppVar_43658 & cppMask_un_16_);
	BIT_VEC cppVar_43659 = ROM.rd(cppVar_43658);
	BIT_VEC cppVar_43660 = (cppVar_43656 << 8) | cppVar_43659;
	cppVar_43660 = (cppVar_43660 & cppMask_un_16_);
	BIT_VEC cppVar_43661 = ROM.rd(PC);
	bool cppVar_43663 = (cppVar_43661 == 17);
	BIT_VEC cppVar_43664 = ROM.rd(PC);
	bool cppVar_43666 = (cppVar_43664 == 1);
	bool cppVar_43667 = cppVar_43663 || cppVar_43666;
	BIT_VEC cppVar_43669 = PC + 2;
	cppVar_43669 = (cppVar_43669 & cppMask_un_16_);
	BIT_VEC cppVar_43670 = (cppVar_43669 >> 11) & cppMask_un_5_;
	BIT_VEC cppVar_43672 = (cppVar_43670 << 3) | 0;
	cppVar_43672 = (cppVar_43672 & cppMask_un_8_);
	BIT_VEC cppVar_43674 = PC + 1;
	cppVar_43674 = (cppVar_43674 & cppMask_un_16_);
	BIT_VEC cppVar_43675 = ROM.rd(cppVar_43674);
	BIT_VEC cppVar_43676 = (cppVar_43672 << 8) | cppVar_43675;
	cppVar_43676 = (cppVar_43676 & cppMask_un_16_);
	BIT_VEC cppVar_43677 = ROM.rd(PC);
	bool cppVar_43679 = (cppVar_43677 == 255);
	BIT_VEC cppVar_43680 = ROM.rd(PC);
	bool cppVar_43682 = (cppVar_43680 == 254);
	BIT_VEC cppVar_43683 = ROM.rd(PC);
	bool cppVar_43685 = (cppVar_43683 == 253);
	BIT_VEC cppVar_43686 = ROM.rd(PC);
	bool cppVar_43688 = (cppVar_43686 == 252);
	BIT_VEC cppVar_43689 = ROM.rd(PC);
	bool cppVar_43691 = (cppVar_43689 == 251);
	BIT_VEC cppVar_43692 = ROM.rd(PC);
	bool cppVar_43694 = (cppVar_43692 == 250);
	BIT_VEC cppVar_43695 = ROM.rd(PC);
	bool cppVar_43697 = (cppVar_43695 == 249);
	BIT_VEC cppVar_43698 = ROM.rd(PC);
	bool cppVar_43700 = (cppVar_43698 == 248);
	BIT_VEC cppVar_43701 = ROM.rd(PC);
	bool cppVar_43703 = (cppVar_43701 == 247);
	BIT_VEC cppVar_43704 = ROM.rd(PC);
	bool cppVar_43706 = (cppVar_43704 == 246);
	BIT_VEC cppVar_43707 = ROM.rd(PC);
	bool cppVar_43709 = (cppVar_43707 == 244);
	BIT_VEC cppVar_43710 = ROM.rd(PC);
	bool cppVar_43712 = (cppVar_43710 == 243);
	BIT_VEC cppVar_43713 = ROM.rd(PC);
	bool cppVar_43715 = (cppVar_43713 == 242);
	BIT_VEC cppVar_43716 = ROM.rd(PC);
	bool cppVar_43718 = (cppVar_43716 == 240);
	BIT_VEC cppVar_43719 = ROM.rd(PC);
	bool cppVar_43721 = (cppVar_43719 == 239);
	BIT_VEC cppVar_43722 = ROM.rd(PC);
	bool cppVar_43724 = (cppVar_43722 == 238);
	BIT_VEC cppVar_43725 = ROM.rd(PC);
	bool cppVar_43727 = (cppVar_43725 == 237);
	BIT_VEC cppVar_43728 = ROM.rd(PC);
	bool cppVar_43730 = (cppVar_43728 == 236);
	BIT_VEC cppVar_43731 = ROM.rd(PC);
	bool cppVar_43733 = (cppVar_43731 == 235);
	BIT_VEC cppVar_43734 = ROM.rd(PC);
	bool cppVar_43736 = (cppVar_43734 == 234);
	BIT_VEC cppVar_43737 = ROM.rd(PC);
	bool cppVar_43739 = (cppVar_43737 == 233);
	BIT_VEC cppVar_43740 = ROM.rd(PC);
	bool cppVar_43742 = (cppVar_43740 == 232);
	BIT_VEC cppVar_43743 = ROM.rd(PC);
	bool cppVar_43745 = (cppVar_43743 == 231);
	BIT_VEC cppVar_43746 = ROM.rd(PC);
	bool cppVar_43748 = (cppVar_43746 == 230);
	BIT_VEC cppVar_43749 = ROM.rd(PC);
	bool cppVar_43751 = (cppVar_43749 == 228);
	BIT_VEC cppVar_43752 = ROM.rd(PC);
	bool cppVar_43754 = (cppVar_43752 == 227);
	BIT_VEC cppVar_43755 = ROM.rd(PC);
	bool cppVar_43757 = (cppVar_43755 == 226);
	BIT_VEC cppVar_43758 = ROM.rd(PC);
	bool cppVar_43760 = (cppVar_43758 == 224);
	BIT_VEC cppVar_43761 = ROM.rd(PC);
	bool cppVar_43763 = (cppVar_43761 == 215);
	BIT_VEC cppVar_43764 = ROM.rd(PC);
	bool cppVar_43766 = (cppVar_43764 == 214);
	BIT_VEC cppVar_43767 = ROM.rd(PC);
	bool cppVar_43769 = (cppVar_43767 == 212);
	BIT_VEC cppVar_43770 = ROM.rd(PC);
	bool cppVar_43772 = (cppVar_43770 == 211);
	BIT_VEC cppVar_43773 = ROM.rd(PC);
	bool cppVar_43775 = (cppVar_43773 == 207);
	BIT_VEC cppVar_43776 = ROM.rd(PC);
	bool cppVar_43778 = (cppVar_43776 == 206);
	BIT_VEC cppVar_43779 = ROM.rd(PC);
	bool cppVar_43781 = (cppVar_43779 == 205);
	BIT_VEC cppVar_43782 = ROM.rd(PC);
	bool cppVar_43784 = (cppVar_43782 == 204);
	BIT_VEC cppVar_43785 = ROM.rd(PC);
	bool cppVar_43787 = (cppVar_43785 == 203);
	BIT_VEC cppVar_43788 = ROM.rd(PC);
	bool cppVar_43790 = (cppVar_43788 == 202);
	BIT_VEC cppVar_43791 = ROM.rd(PC);
	bool cppVar_43793 = (cppVar_43791 == 201);
	BIT_VEC cppVar_43794 = ROM.rd(PC);
	bool cppVar_43796 = (cppVar_43794 == 200);
	BIT_VEC cppVar_43797 = ROM.rd(PC);
	bool cppVar_43799 = (cppVar_43797 == 199);
	BIT_VEC cppVar_43800 = ROM.rd(PC);
	bool cppVar_43802 = (cppVar_43800 == 198);
	BIT_VEC cppVar_43803 = ROM.rd(PC);
	bool cppVar_43805 = (cppVar_43803 == 196);
	BIT_VEC cppVar_43806 = ROM.rd(PC);
	bool cppVar_43808 = (cppVar_43806 == 195);
	BIT_VEC cppVar_43809 = ROM.rd(PC);
	bool cppVar_43811 = (cppVar_43809 == 179);
	BIT_VEC cppVar_43812 = ROM.rd(PC);
	bool cppVar_43814 = (cppVar_43812 == 165);
	BIT_VEC cppVar_43815 = ROM.rd(PC);
	bool cppVar_43817 = (cppVar_43815 == 164);
	BIT_VEC cppVar_43818 = ROM.rd(PC);
	bool cppVar_43820 = (cppVar_43818 == 163);
	BIT_VEC cppVar_43821 = ROM.rd(PC);
	bool cppVar_43823 = (cppVar_43821 == 159);
	BIT_VEC cppVar_43824 = ROM.rd(PC);
	bool cppVar_43826 = (cppVar_43824 == 158);
	BIT_VEC cppVar_43827 = ROM.rd(PC);
	bool cppVar_43829 = (cppVar_43827 == 157);
	BIT_VEC cppVar_43830 = ROM.rd(PC);
	bool cppVar_43832 = (cppVar_43830 == 156);
	BIT_VEC cppVar_43833 = ROM.rd(PC);
	bool cppVar_43835 = (cppVar_43833 == 155);
	BIT_VEC cppVar_43836 = ROM.rd(PC);
	bool cppVar_43838 = (cppVar_43836 == 154);
	BIT_VEC cppVar_43839 = ROM.rd(PC);
	bool cppVar_43841 = (cppVar_43839 == 153);
	BIT_VEC cppVar_43842 = ROM.rd(PC);
	bool cppVar_43844 = (cppVar_43842 == 152);
	BIT_VEC cppVar_43845 = ROM.rd(PC);
	bool cppVar_43847 = (cppVar_43845 == 151);
	BIT_VEC cppVar_43848 = ROM.rd(PC);
	bool cppVar_43850 = (cppVar_43848 == 150);
	BIT_VEC cppVar_43851 = ROM.rd(PC);
	bool cppVar_43853 = (cppVar_43851 == 147);
	BIT_VEC cppVar_43854 = ROM.rd(PC);
	bool cppVar_43856 = (cppVar_43854 == 132);
	BIT_VEC cppVar_43857 = ROM.rd(PC);
	bool cppVar_43859 = (cppVar_43857 == 131);
	BIT_VEC cppVar_43860 = ROM.rd(PC);
	bool cppVar_43862 = (cppVar_43860 == 111);
	BIT_VEC cppVar_43863 = ROM.rd(PC);
	bool cppVar_43865 = (cppVar_43863 == 110);
	BIT_VEC cppVar_43866 = ROM.rd(PC);
	bool cppVar_43868 = (cppVar_43866 == 109);
	BIT_VEC cppVar_43869 = ROM.rd(PC);
	bool cppVar_43871 = (cppVar_43869 == 108);
	BIT_VEC cppVar_43872 = ROM.rd(PC);
	bool cppVar_43874 = (cppVar_43872 == 107);
	BIT_VEC cppVar_43875 = ROM.rd(PC);
	bool cppVar_43877 = (cppVar_43875 == 106);
	BIT_VEC cppVar_43878 = ROM.rd(PC);
	bool cppVar_43880 = (cppVar_43878 == 105);
	BIT_VEC cppVar_43881 = ROM.rd(PC);
	bool cppVar_43883 = (cppVar_43881 == 104);
	BIT_VEC cppVar_43884 = ROM.rd(PC);
	bool cppVar_43886 = (cppVar_43884 == 103);
	BIT_VEC cppVar_43887 = ROM.rd(PC);
	bool cppVar_43889 = (cppVar_43887 == 102);
	BIT_VEC cppVar_43890 = ROM.rd(PC);
	bool cppVar_43892 = (cppVar_43890 == 95);
	BIT_VEC cppVar_43893 = ROM.rd(PC);
	bool cppVar_43895 = (cppVar_43893 == 94);
	BIT_VEC cppVar_43896 = ROM.rd(PC);
	bool cppVar_43898 = (cppVar_43896 == 93);
	BIT_VEC cppVar_43899 = ROM.rd(PC);
	bool cppVar_43901 = (cppVar_43899 == 92);
	BIT_VEC cppVar_43902 = ROM.rd(PC);
	bool cppVar_43904 = (cppVar_43902 == 91);
	BIT_VEC cppVar_43905 = ROM.rd(PC);
	bool cppVar_43907 = (cppVar_43905 == 90);
	BIT_VEC cppVar_43908 = ROM.rd(PC);
	bool cppVar_43910 = (cppVar_43908 == 89);
	BIT_VEC cppVar_43911 = ROM.rd(PC);
	bool cppVar_43913 = (cppVar_43911 == 88);
	BIT_VEC cppVar_43914 = ROM.rd(PC);
	bool cppVar_43916 = (cppVar_43914 == 87);
	BIT_VEC cppVar_43917 = ROM.rd(PC);
	bool cppVar_43919 = (cppVar_43917 == 86);
	BIT_VEC cppVar_43920 = ROM.rd(PC);
	bool cppVar_43922 = (cppVar_43920 == 79);
	BIT_VEC cppVar_43923 = ROM.rd(PC);
	bool cppVar_43925 = (cppVar_43923 == 78);
	BIT_VEC cppVar_43926 = ROM.rd(PC);
	bool cppVar_43928 = (cppVar_43926 == 77);
	BIT_VEC cppVar_43929 = ROM.rd(PC);
	bool cppVar_43931 = (cppVar_43929 == 76);
	BIT_VEC cppVar_43932 = ROM.rd(PC);
	bool cppVar_43934 = (cppVar_43932 == 75);
	BIT_VEC cppVar_43935 = ROM.rd(PC);
	bool cppVar_43937 = (cppVar_43935 == 74);
	BIT_VEC cppVar_43938 = ROM.rd(PC);
	bool cppVar_43940 = (cppVar_43938 == 73);
	BIT_VEC cppVar_43941 = ROM.rd(PC);
	bool cppVar_43943 = (cppVar_43941 == 72);
	BIT_VEC cppVar_43944 = ROM.rd(PC);
	bool cppVar_43946 = (cppVar_43944 == 71);
	BIT_VEC cppVar_43947 = ROM.rd(PC);
	bool cppVar_43949 = (cppVar_43947 == 70);
	BIT_VEC cppVar_43950 = ROM.rd(PC);
	bool cppVar_43952 = (cppVar_43950 == 63);
	BIT_VEC cppVar_43953 = ROM.rd(PC);
	bool cppVar_43955 = (cppVar_43953 == 62);
	BIT_VEC cppVar_43956 = ROM.rd(PC);
	bool cppVar_43958 = (cppVar_43956 == 61);
	BIT_VEC cppVar_43959 = ROM.rd(PC);
	bool cppVar_43961 = (cppVar_43959 == 60);
	BIT_VEC cppVar_43962 = ROM.rd(PC);
	bool cppVar_43964 = (cppVar_43962 == 59);
	BIT_VEC cppVar_43965 = ROM.rd(PC);
	bool cppVar_43967 = (cppVar_43965 == 58);
	BIT_VEC cppVar_43968 = ROM.rd(PC);
	bool cppVar_43970 = (cppVar_43968 == 57);
	BIT_VEC cppVar_43971 = ROM.rd(PC);
	bool cppVar_43973 = (cppVar_43971 == 56);
	BIT_VEC cppVar_43974 = ROM.rd(PC);
	bool cppVar_43976 = (cppVar_43974 == 55);
	BIT_VEC cppVar_43977 = ROM.rd(PC);
	bool cppVar_43979 = (cppVar_43977 == 54);
	BIT_VEC cppVar_43980 = ROM.rd(PC);
	bool cppVar_43982 = (cppVar_43980 == 51);
	BIT_VEC cppVar_43983 = ROM.rd(PC);
	bool cppVar_43985 = (cppVar_43983 == 47);
	BIT_VEC cppVar_43986 = ROM.rd(PC);
	bool cppVar_43988 = (cppVar_43986 == 46);
	BIT_VEC cppVar_43989 = ROM.rd(PC);
	bool cppVar_43991 = (cppVar_43989 == 45);
	BIT_VEC cppVar_43992 = ROM.rd(PC);
	bool cppVar_43994 = (cppVar_43992 == 44);
	BIT_VEC cppVar_43995 = ROM.rd(PC);
	bool cppVar_43997 = (cppVar_43995 == 43);
	BIT_VEC cppVar_43998 = ROM.rd(PC);
	bool cppVar_44000 = (cppVar_43998 == 42);
	BIT_VEC cppVar_44001 = ROM.rd(PC);
	bool cppVar_44003 = (cppVar_44001 == 41);
	BIT_VEC cppVar_44004 = ROM.rd(PC);
	bool cppVar_44006 = (cppVar_44004 == 40);
	BIT_VEC cppVar_44007 = ROM.rd(PC);
	bool cppVar_44009 = (cppVar_44007 == 39);
	BIT_VEC cppVar_44010 = ROM.rd(PC);
	bool cppVar_44012 = (cppVar_44010 == 38);
	BIT_VEC cppVar_44013 = ROM.rd(PC);
	bool cppVar_44015 = (cppVar_44013 == 35);
	BIT_VEC cppVar_44016 = ROM.rd(PC);
	bool cppVar_44018 = (cppVar_44016 == 31);
	BIT_VEC cppVar_44019 = ROM.rd(PC);
	bool cppVar_44021 = (cppVar_44019 == 30);
	BIT_VEC cppVar_44022 = ROM.rd(PC);
	bool cppVar_44024 = (cppVar_44022 == 29);
	BIT_VEC cppVar_44025 = ROM.rd(PC);
	bool cppVar_44027 = (cppVar_44025 == 28);
	BIT_VEC cppVar_44028 = ROM.rd(PC);
	bool cppVar_44030 = (cppVar_44028 == 27);
	BIT_VEC cppVar_44031 = ROM.rd(PC);
	bool cppVar_44033 = (cppVar_44031 == 26);
	BIT_VEC cppVar_44034 = ROM.rd(PC);
	bool cppVar_44036 = (cppVar_44034 == 25);
	BIT_VEC cppVar_44037 = ROM.rd(PC);
	bool cppVar_44039 = (cppVar_44037 == 24);
	BIT_VEC cppVar_44040 = ROM.rd(PC);
	bool cppVar_44042 = (cppVar_44040 == 23);
	BIT_VEC cppVar_44043 = ROM.rd(PC);
	bool cppVar_44045 = (cppVar_44043 == 22);
	BIT_VEC cppVar_44046 = ROM.rd(PC);
	bool cppVar_44048 = (cppVar_44046 == 20);
	BIT_VEC cppVar_44049 = ROM.rd(PC);
	bool cppVar_44051 = (cppVar_44049 == 19);
	BIT_VEC cppVar_44052 = ROM.rd(PC);
	bool cppVar_44054 = (cppVar_44052 == 15);
	BIT_VEC cppVar_44055 = ROM.rd(PC);
	bool cppVar_44057 = (cppVar_44055 == 14);
	BIT_VEC cppVar_44058 = ROM.rd(PC);
	bool cppVar_44060 = (cppVar_44058 == 13);
	BIT_VEC cppVar_44061 = ROM.rd(PC);
	bool cppVar_44063 = (cppVar_44061 == 12);
	BIT_VEC cppVar_44064 = ROM.rd(PC);
	bool cppVar_44066 = (cppVar_44064 == 11);
	BIT_VEC cppVar_44067 = ROM.rd(PC);
	bool cppVar_44069 = (cppVar_44067 == 10);
	BIT_VEC cppVar_44070 = ROM.rd(PC);
	bool cppVar_44072 = (cppVar_44070 == 9);
	BIT_VEC cppVar_44073 = ROM.rd(PC);
	bool cppVar_44075 = (cppVar_44073 == 8);
	BIT_VEC cppVar_44076 = ROM.rd(PC);
	bool cppVar_44078 = (cppVar_44076 == 7);
	BIT_VEC cppVar_44079 = ROM.rd(PC);
	bool cppVar_44081 = (cppVar_44079 == 6);
	BIT_VEC cppVar_44082 = ROM.rd(PC);
	bool cppVar_44084 = (cppVar_44082 == 4);
	BIT_VEC cppVar_44085 = ROM.rd(PC);
	bool cppVar_44087 = (cppVar_44085 == 3);
	BIT_VEC cppVar_44088 = ROM.rd(PC);
	bool cppVar_44090 = (cppVar_44088 == 0);
	bool cppVar_44091 = cppVar_44087 || cppVar_44090;
	bool cppVar_44092 = cppVar_44084 || cppVar_44091;
	bool cppVar_44093 = cppVar_44081 || cppVar_44092;
	bool cppVar_44094 = cppVar_44078 || cppVar_44093;
	bool cppVar_44095 = cppVar_44075 || cppVar_44094;
	bool cppVar_44096 = cppVar_44072 || cppVar_44095;
	bool cppVar_44097 = cppVar_44069 || cppVar_44096;
	bool cppVar_44098 = cppVar_44066 || cppVar_44097;
	bool cppVar_44099 = cppVar_44063 || cppVar_44098;
	bool cppVar_44100 = cppVar_44060 || cppVar_44099;
	bool cppVar_44101 = cppVar_44057 || cppVar_44100;
	bool cppVar_44102 = cppVar_44054 || cppVar_44101;
	bool cppVar_44103 = cppVar_44051 || cppVar_44102;
	bool cppVar_44104 = cppVar_44048 || cppVar_44103;
	bool cppVar_44105 = cppVar_44045 || cppVar_44104;
	bool cppVar_44106 = cppVar_44042 || cppVar_44105;
	bool cppVar_44107 = cppVar_44039 || cppVar_44106;
	bool cppVar_44108 = cppVar_44036 || cppVar_44107;
	bool cppVar_44109 = cppVar_44033 || cppVar_44108;
	bool cppVar_44110 = cppVar_44030 || cppVar_44109;
	bool cppVar_44111 = cppVar_44027 || cppVar_44110;
	bool cppVar_44112 = cppVar_44024 || cppVar_44111;
	bool cppVar_44113 = cppVar_44021 || cppVar_44112;
	bool cppVar_44114 = cppVar_44018 || cppVar_44113;
	bool cppVar_44115 = cppVar_44015 || cppVar_44114;
	bool cppVar_44116 = cppVar_44012 || cppVar_44115;
	bool cppVar_44117 = cppVar_44009 || cppVar_44116;
	bool cppVar_44118 = cppVar_44006 || cppVar_44117;
	bool cppVar_44119 = cppVar_44003 || cppVar_44118;
	bool cppVar_44120 = cppVar_44000 || cppVar_44119;
	bool cppVar_44121 = cppVar_43997 || cppVar_44120;
	bool cppVar_44122 = cppVar_43994 || cppVar_44121;
	bool cppVar_44123 = cppVar_43991 || cppVar_44122;
	bool cppVar_44124 = cppVar_43988 || cppVar_44123;
	bool cppVar_44125 = cppVar_43985 || cppVar_44124;
	bool cppVar_44126 = cppVar_43982 || cppVar_44125;
	bool cppVar_44127 = cppVar_43979 || cppVar_44126;
	bool cppVar_44128 = cppVar_43976 || cppVar_44127;
	bool cppVar_44129 = cppVar_43973 || cppVar_44128;
	bool cppVar_44130 = cppVar_43970 || cppVar_44129;
	bool cppVar_44131 = cppVar_43967 || cppVar_44130;
	bool cppVar_44132 = cppVar_43964 || cppVar_44131;
	bool cppVar_44133 = cppVar_43961 || cppVar_44132;
	bool cppVar_44134 = cppVar_43958 || cppVar_44133;
	bool cppVar_44135 = cppVar_43955 || cppVar_44134;
	bool cppVar_44136 = cppVar_43952 || cppVar_44135;
	bool cppVar_44137 = cppVar_43949 || cppVar_44136;
	bool cppVar_44138 = cppVar_43946 || cppVar_44137;
	bool cppVar_44139 = cppVar_43943 || cppVar_44138;
	bool cppVar_44140 = cppVar_43940 || cppVar_44139;
	bool cppVar_44141 = cppVar_43937 || cppVar_44140;
	bool cppVar_44142 = cppVar_43934 || cppVar_44141;
	bool cppVar_44143 = cppVar_43931 || cppVar_44142;
	bool cppVar_44144 = cppVar_43928 || cppVar_44143;
	bool cppVar_44145 = cppVar_43925 || cppVar_44144;
	bool cppVar_44146 = cppVar_43922 || cppVar_44145;
	bool cppVar_44147 = cppVar_43919 || cppVar_44146;
	bool cppVar_44148 = cppVar_43916 || cppVar_44147;
	bool cppVar_44149 = cppVar_43913 || cppVar_44148;
	bool cppVar_44150 = cppVar_43910 || cppVar_44149;
	bool cppVar_44151 = cppVar_43907 || cppVar_44150;
	bool cppVar_44152 = cppVar_43904 || cppVar_44151;
	bool cppVar_44153 = cppVar_43901 || cppVar_44152;
	bool cppVar_44154 = cppVar_43898 || cppVar_44153;
	bool cppVar_44155 = cppVar_43895 || cppVar_44154;
	bool cppVar_44156 = cppVar_43892 || cppVar_44155;
	bool cppVar_44157 = cppVar_43889 || cppVar_44156;
	bool cppVar_44158 = cppVar_43886 || cppVar_44157;
	bool cppVar_44159 = cppVar_43883 || cppVar_44158;
	bool cppVar_44160 = cppVar_43880 || cppVar_44159;
	bool cppVar_44161 = cppVar_43877 || cppVar_44160;
	bool cppVar_44162 = cppVar_43874 || cppVar_44161;
	bool cppVar_44163 = cppVar_43871 || cppVar_44162;
	bool cppVar_44164 = cppVar_43868 || cppVar_44163;
	bool cppVar_44165 = cppVar_43865 || cppVar_44164;
	bool cppVar_44166 = cppVar_43862 || cppVar_44165;
	bool cppVar_44167 = cppVar_43859 || cppVar_44166;
	bool cppVar_44168 = cppVar_43856 || cppVar_44167;
	bool cppVar_44169 = cppVar_43853 || cppVar_44168;
	bool cppVar_44170 = cppVar_43850 || cppVar_44169;
	bool cppVar_44171 = cppVar_43847 || cppVar_44170;
	bool cppVar_44172 = cppVar_43844 || cppVar_44171;
	bool cppVar_44173 = cppVar_43841 || cppVar_44172;
	bool cppVar_44174 = cppVar_43838 || cppVar_44173;
	bool cppVar_44175 = cppVar_43835 || cppVar_44174;
	bool cppVar_44176 = cppVar_43832 || cppVar_44175;
	bool cppVar_44177 = cppVar_43829 || cppVar_44176;
	bool cppVar_44178 = cppVar_43826 || cppVar_44177;
	bool cppVar_44179 = cppVar_43823 || cppVar_44178;
	bool cppVar_44180 = cppVar_43820 || cppVar_44179;
	bool cppVar_44181 = cppVar_43817 || cppVar_44180;
	bool cppVar_44182 = cppVar_43814 || cppVar_44181;
	bool cppVar_44183 = cppVar_43811 || cppVar_44182;
	bool cppVar_44184 = cppVar_43808 || cppVar_44183;
	bool cppVar_44185 = cppVar_43805 || cppVar_44184;
	bool cppVar_44186 = cppVar_43802 || cppVar_44185;
	bool cppVar_44187 = cppVar_43799 || cppVar_44186;
	bool cppVar_44188 = cppVar_43796 || cppVar_44187;
	bool cppVar_44189 = cppVar_43793 || cppVar_44188;
	bool cppVar_44190 = cppVar_43790 || cppVar_44189;
	bool cppVar_44191 = cppVar_43787 || cppVar_44190;
	bool cppVar_44192 = cppVar_43784 || cppVar_44191;
	bool cppVar_44193 = cppVar_43781 || cppVar_44192;
	bool cppVar_44194 = cppVar_43778 || cppVar_44193;
	bool cppVar_44195 = cppVar_43775 || cppVar_44194;
	bool cppVar_44196 = cppVar_43772 || cppVar_44195;
	bool cppVar_44197 = cppVar_43769 || cppVar_44196;
	bool cppVar_44198 = cppVar_43766 || cppVar_44197;
	bool cppVar_44199 = cppVar_43763 || cppVar_44198;
	bool cppVar_44200 = cppVar_43760 || cppVar_44199;
	bool cppVar_44201 = cppVar_43757 || cppVar_44200;
	bool cppVar_44202 = cppVar_43754 || cppVar_44201;
	bool cppVar_44203 = cppVar_43751 || cppVar_44202;
	bool cppVar_44204 = cppVar_43748 || cppVar_44203;
	bool cppVar_44205 = cppVar_43745 || cppVar_44204;
	bool cppVar_44206 = cppVar_43742 || cppVar_44205;
	bool cppVar_44207 = cppVar_43739 || cppVar_44206;
	bool cppVar_44208 = cppVar_43736 || cppVar_44207;
	bool cppVar_44209 = cppVar_43733 || cppVar_44208;
	bool cppVar_44210 = cppVar_43730 || cppVar_44209;
	bool cppVar_44211 = cppVar_43727 || cppVar_44210;
	bool cppVar_44212 = cppVar_43724 || cppVar_44211;
	bool cppVar_44213 = cppVar_43721 || cppVar_44212;
	bool cppVar_44214 = cppVar_43718 || cppVar_44213;
	bool cppVar_44215 = cppVar_43715 || cppVar_44214;
	bool cppVar_44216 = cppVar_43712 || cppVar_44215;
	bool cppVar_44217 = cppVar_43709 || cppVar_44216;
	bool cppVar_44218 = cppVar_43706 || cppVar_44217;
	bool cppVar_44219 = cppVar_43703 || cppVar_44218;
	bool cppVar_44220 = cppVar_43700 || cppVar_44219;
	bool cppVar_44221 = cppVar_43697 || cppVar_44220;
	bool cppVar_44222 = cppVar_43694 || cppVar_44221;
	bool cppVar_44223 = cppVar_43691 || cppVar_44222;
	bool cppVar_44224 = cppVar_43688 || cppVar_44223;
	bool cppVar_44225 = cppVar_43685 || cppVar_44224;
	bool cppVar_44226 = cppVar_43682 || cppVar_44225;
	bool cppVar_44227 = cppVar_43679 || cppVar_44226;
	BIT_VEC cppVar_44229 = PC + 1;
	cppVar_44229 = (cppVar_44229 & cppMask_un_16_);
	BIT_VEC cppVar_44230 = (cppVar_44227) ? cppVar_44229 : PC;
	BIT_VEC cppVar_44231 = (cppVar_43667) ? cppVar_43676 : cppVar_44230;
	BIT_VEC cppVar_44232 = (cppVar_43653) ? cppVar_43660 : cppVar_44231;
	BIT_VEC cppVar_44233 = (cppVar_43644) ? cppVar_43646 : cppVar_44232;
	BIT_VEC cppVar_44234 = (cppVar_42986) ? cppVar_43397 : cppVar_44233;
	BIT_VEC cppVar_44235 = (cppVar_42970) ? cppVar_42979 : cppVar_44234;
	BIT_VEC cppVar_44236 = (cppVar_42958) ? cppVar_42963 : cppVar_44235;
	BIT_VEC cppVar_44237 = (cppVar_42540) ? cppVar_42951 : cppVar_44236;
	BIT_VEC cppVar_44238 = (cppVar_42524) ? cppVar_42537 : cppVar_44237;
	BIT_VEC cppVar_44239 = (cppVar_42512) ? cppVar_42521 : cppVar_44238;
	BIT_VEC cppVar_44240 = (cppVar_42503) ? cppVar_42505 : cppVar_44239;
	BIT_VEC cppVar_44241 = (cppVar_42467) ? cppVar_42480 : cppVar_44240;
	BIT_VEC cppVar_44242 = (cppVar_42452) ? cppVar_42464 : cppVar_44241;
	BIT_VEC cppVar_44243 = (cppVar_42440) ? cppVar_42449 : cppVar_44242;
	BIT_VEC cppVar_44244 = (cppVar_42421) ? cppVar_42433 : cppVar_44243;
	BIT_VEC cppVar_44245 = (cppVar_42415) ? cppVar_42418 : cppVar_44244;
	BIT_VEC cppVar_44246 = (cppVar_42405) ? cppVar_42412 : cppVar_44245;
	BIT_VEC cppVar_44247 = (cppVar_42393) ? cppVar_42402 : cppVar_44246;
	BIT_VEC cppVar_44248 = (cppVar_42377) ? cppVar_42386 : cppVar_44247;
	BIT_VEC cppVar_44249 = (cppVar_42356) ? cppVar_42370 : cppVar_44248;
	BIT_VEC cppVar_44250 = (cppVar_42226) ? cppVar_42353 : cppVar_44249;
	BIT_VEC cppVar_44251 = (cppVar_42202) ? cppVar_42223 : cppVar_44250;
	BIT_VEC cppVar_44252 = (cppVar_42178) ? cppVar_42199 : cppVar_44251;
	BIT_VEC cppVar_44253 = (cppVar_42155) ? cppVar_42175 : cppVar_44252;
	BIT_VEC cppVar_44254 = (cppVar_42132) ? cppVar_42152 : cppVar_44253;
	BIT_VEC cppVar_44255 = (cppVar_42109) ? cppVar_42129 : cppVar_44254;
	BIT_VEC cppVar_44256 = (cppVar_42086) ? cppVar_42106 : cppVar_44255;
	BIT_VEC cppVar_44257 = (cppVar_42063) ? cppVar_42083 : cppVar_44256;
	BIT_VEC cppVar_44258 = (cppVar_42040) ? cppVar_42060 : cppVar_44257;
	BIT_VEC cppVar_44259 = (cppVar_42017) ? cppVar_42037 : cppVar_44258;
	BIT_VEC cppVar_44260 = (cppVar_41994) ? cppVar_42014 : cppVar_44259;
	BIT_VEC cppVar_44261 = (cppVar_41982) ? cppVar_41991 : cppVar_44260;
	BIT_VEC cppVar_44262 = (cppVar_41847) ? cppVar_41975 : cppVar_44261;
	BIT_VEC cppVar_44263 = (cppVar_41826) ? cppVar_41844 : cppVar_44262;
	BIT_VEC cppVar_44264 = (cppVar_41805) ? cppVar_41823 : cppVar_44263;
	BIT_VEC cppVar_44265 = (cppVar_41784) ? cppVar_41802 : cppVar_44264;
	BIT_VEC cppVar_44266 = (cppVar_41763) ? cppVar_41781 : cppVar_44265;
	BIT_VEC cppVar_44267 = (cppVar_41742) ? cppVar_41760 : cppVar_44266;
	BIT_VEC cppVar_44268 = (cppVar_41721) ? cppVar_41739 : cppVar_44267;
	BIT_VEC cppVar_44269 = (cppVar_41700) ? cppVar_41718 : cppVar_44268;
	BIT_VEC cppVar_44270 = (cppVar_41679) ? cppVar_41697 : cppVar_44269;
	BIT_VEC cppVar_44271 = (cppVar_41667) ? cppVar_41676 : cppVar_44270;
	return cppVar_44271;
}
