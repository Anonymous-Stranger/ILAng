#include "common.hpp"
#include "model_oc8051_class.hpp"

BIT_VEC model_oc8051::cppUpdateFun_TMOD()
{
	BIT_VEC cppVar_82114 = ROM.rd(PC);
	bool cppVar_82116 = (cppVar_82114 == 208);
	BIT_VEC cppVar_82118 = PC + 1;
	cppVar_82118 = (cppVar_82118 & cppMask_un_16_);
	BIT_VEC cppVar_82119 = ROM.rd(cppVar_82118);
	bool cppVar_82121 = (cppVar_82119 == 137);
	BIT_VEC cppVar_82122 = IRAM.rd(SP);
	BIT_VEC cppVar_82123 = (cppVar_82121) ? cppVar_82122 : TMOD;
	BIT_VEC cppVar_82124 = ROM.rd(PC);
	bool cppVar_82126 = (cppVar_82124 == 245);
	BIT_VEC cppVar_82127 = ROM.rd(PC);
	bool cppVar_82129 = (cppVar_82127 == 197);
	bool cppVar_82130 = cppVar_82126 || cppVar_82129;
	BIT_VEC cppVar_82132 = PC + 1;
	cppVar_82132 = (cppVar_82132 & cppMask_un_16_);
	BIT_VEC cppVar_82133 = ROM.rd(cppVar_82132);
	bool cppVar_82135 = (cppVar_82133 == 137);
	BIT_VEC cppVar_82136 = (cppVar_82135) ? ACC : TMOD;
	BIT_VEC cppVar_82137 = ROM.rd(PC);
	bool cppVar_82139 = (cppVar_82137 == 143);
	BIT_VEC cppVar_82141 = PC + 1;
	cppVar_82141 = (cppVar_82141 & cppMask_un_16_);
	BIT_VEC cppVar_82142 = ROM.rd(cppVar_82141);
	bool cppVar_82144 = (cppVar_82142 == 137);
	BIT_VEC cppVar_82146 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82148 = (cppVar_82146 << 3) | 7;
	cppVar_82148 = (cppVar_82148 & cppMask_un_5_);
	BIT_VEC cppVar_82149 = (0 << 5) | cppVar_82148;
	cppVar_82149 = (cppVar_82149 & cppMask_un_8_);
	BIT_VEC cppVar_82150 = (cppVar_82149 >> 7) & cppMask_un_1_;
	bool cppVar_82152 = (cppVar_82150 == 0);
	BIT_VEC cppVar_82153 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82154 = (cppVar_82153 << 3) | 7;
	cppVar_82154 = (cppVar_82154 & cppMask_un_5_);
	BIT_VEC cppVar_82155 = (0 << 5) | cppVar_82154;
	cppVar_82155 = (cppVar_82155 & cppMask_un_8_);
	BIT_VEC cppVar_82156 = IRAM.rd(cppVar_82155);
	BIT_VEC cppVar_82157 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82158 = (cppVar_82157 << 3) | 7;
	cppVar_82158 = (cppVar_82158 & cppMask_un_5_);
	BIT_VEC cppVar_82159 = (0 << 5) | cppVar_82158;
	cppVar_82159 = (cppVar_82159 & cppMask_un_8_);
	bool cppVar_82161 = (cppVar_82159 == 128);
	BIT_VEC cppVar_82162 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82163 = (cppVar_82162 << 3) | 7;
	cppVar_82163 = (cppVar_82163 & cppMask_un_5_);
	BIT_VEC cppVar_82164 = (0 << 5) | cppVar_82163;
	cppVar_82164 = (cppVar_82164 & cppMask_un_8_);
	bool cppVar_82166 = (cppVar_82164 == 129);
	BIT_VEC cppVar_82167 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82168 = (cppVar_82167 << 3) | 7;
	cppVar_82168 = (cppVar_82168 & cppMask_un_5_);
	BIT_VEC cppVar_82169 = (0 << 5) | cppVar_82168;
	cppVar_82169 = (cppVar_82169 & cppMask_un_8_);
	bool cppVar_82171 = (cppVar_82169 == 130);
	BIT_VEC cppVar_82172 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82173 = (cppVar_82172 << 3) | 7;
	cppVar_82173 = (cppVar_82173 & cppMask_un_5_);
	BIT_VEC cppVar_82174 = (0 << 5) | cppVar_82173;
	cppVar_82174 = (cppVar_82174 & cppMask_un_8_);
	bool cppVar_82176 = (cppVar_82174 == 131);
	BIT_VEC cppVar_82177 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82178 = (cppVar_82177 << 3) | 7;
	cppVar_82178 = (cppVar_82178 & cppMask_un_5_);
	BIT_VEC cppVar_82179 = (0 << 5) | cppVar_82178;
	cppVar_82179 = (cppVar_82179 & cppMask_un_8_);
	bool cppVar_82181 = (cppVar_82179 == 135);
	BIT_VEC cppVar_82182 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82183 = (cppVar_82182 << 3) | 7;
	cppVar_82183 = (cppVar_82183 & cppMask_un_5_);
	BIT_VEC cppVar_82184 = (0 << 5) | cppVar_82183;
	cppVar_82184 = (cppVar_82184 & cppMask_un_8_);
	bool cppVar_82186 = (cppVar_82184 == 136);
	BIT_VEC cppVar_82187 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82188 = (cppVar_82187 << 3) | 7;
	cppVar_82188 = (cppVar_82188 & cppMask_un_5_);
	BIT_VEC cppVar_82189 = (0 << 5) | cppVar_82188;
	cppVar_82189 = (cppVar_82189 & cppMask_un_8_);
	bool cppVar_82191 = (cppVar_82189 == 137);
	BIT_VEC cppVar_82192 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82193 = (cppVar_82192 << 3) | 7;
	cppVar_82193 = (cppVar_82193 & cppMask_un_5_);
	BIT_VEC cppVar_82194 = (0 << 5) | cppVar_82193;
	cppVar_82194 = (cppVar_82194 & cppMask_un_8_);
	bool cppVar_82196 = (cppVar_82194 == 138);
	BIT_VEC cppVar_82197 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82198 = (cppVar_82197 << 3) | 7;
	cppVar_82198 = (cppVar_82198 & cppMask_un_5_);
	BIT_VEC cppVar_82199 = (0 << 5) | cppVar_82198;
	cppVar_82199 = (cppVar_82199 & cppMask_un_8_);
	bool cppVar_82201 = (cppVar_82199 == 140);
	BIT_VEC cppVar_82202 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82203 = (cppVar_82202 << 3) | 7;
	cppVar_82203 = (cppVar_82203 & cppMask_un_5_);
	BIT_VEC cppVar_82204 = (0 << 5) | cppVar_82203;
	cppVar_82204 = (cppVar_82204 & cppMask_un_8_);
	bool cppVar_82206 = (cppVar_82204 == 139);
	BIT_VEC cppVar_82207 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82208 = (cppVar_82207 << 3) | 7;
	cppVar_82208 = (cppVar_82208 & cppMask_un_5_);
	BIT_VEC cppVar_82209 = (0 << 5) | cppVar_82208;
	cppVar_82209 = (cppVar_82209 & cppMask_un_8_);
	bool cppVar_82211 = (cppVar_82209 == 141);
	BIT_VEC cppVar_82212 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82213 = (cppVar_82212 << 3) | 7;
	cppVar_82213 = (cppVar_82213 & cppMask_un_5_);
	BIT_VEC cppVar_82214 = (0 << 5) | cppVar_82213;
	cppVar_82214 = (cppVar_82214 & cppMask_un_8_);
	bool cppVar_82216 = (cppVar_82214 == 144);
	BIT_VEC cppVar_82217 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82218 = (cppVar_82217 << 3) | 7;
	cppVar_82218 = (cppVar_82218 & cppMask_un_5_);
	BIT_VEC cppVar_82219 = (0 << 5) | cppVar_82218;
	cppVar_82219 = (cppVar_82219 & cppMask_un_8_);
	bool cppVar_82221 = (cppVar_82219 == 152);
	BIT_VEC cppVar_82222 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82223 = (cppVar_82222 << 3) | 7;
	cppVar_82223 = (cppVar_82223 & cppMask_un_5_);
	BIT_VEC cppVar_82224 = (0 << 5) | cppVar_82223;
	cppVar_82224 = (cppVar_82224 & cppMask_un_8_);
	bool cppVar_82226 = (cppVar_82224 == 153);
	BIT_VEC cppVar_82227 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82228 = (cppVar_82227 << 3) | 7;
	cppVar_82228 = (cppVar_82228 & cppMask_un_5_);
	BIT_VEC cppVar_82229 = (0 << 5) | cppVar_82228;
	cppVar_82229 = (cppVar_82229 & cppMask_un_8_);
	bool cppVar_82231 = (cppVar_82229 == 160);
	BIT_VEC cppVar_82232 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82233 = (cppVar_82232 << 3) | 7;
	cppVar_82233 = (cppVar_82233 & cppMask_un_5_);
	BIT_VEC cppVar_82234 = (0 << 5) | cppVar_82233;
	cppVar_82234 = (cppVar_82234 & cppMask_un_8_);
	bool cppVar_82236 = (cppVar_82234 == 168);
	BIT_VEC cppVar_82237 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82238 = (cppVar_82237 << 3) | 7;
	cppVar_82238 = (cppVar_82238 & cppMask_un_5_);
	BIT_VEC cppVar_82239 = (0 << 5) | cppVar_82238;
	cppVar_82239 = (cppVar_82239 & cppMask_un_8_);
	bool cppVar_82241 = (cppVar_82239 == 176);
	BIT_VEC cppVar_82242 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82243 = (cppVar_82242 << 3) | 7;
	cppVar_82243 = (cppVar_82243 & cppMask_un_5_);
	BIT_VEC cppVar_82244 = (0 << 5) | cppVar_82243;
	cppVar_82244 = (cppVar_82244 & cppMask_un_8_);
	bool cppVar_82246 = (cppVar_82244 == 184);
	BIT_VEC cppVar_82247 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82248 = (cppVar_82247 << 3) | 7;
	cppVar_82248 = (cppVar_82248 & cppMask_un_5_);
	BIT_VEC cppVar_82249 = (0 << 5) | cppVar_82248;
	cppVar_82249 = (cppVar_82249 & cppMask_un_8_);
	bool cppVar_82251 = (cppVar_82249 == 208);
	BIT_VEC cppVar_82252 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82253 = (cppVar_82252 << 3) | 7;
	cppVar_82253 = (cppVar_82253 & cppMask_un_5_);
	BIT_VEC cppVar_82254 = (0 << 5) | cppVar_82253;
	cppVar_82254 = (cppVar_82254 & cppMask_un_8_);
	bool cppVar_82256 = (cppVar_82254 == 224);
	BIT_VEC cppVar_82257 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82258 = (cppVar_82257 << 3) | 7;
	cppVar_82258 = (cppVar_82258 & cppMask_un_5_);
	BIT_VEC cppVar_82259 = (0 << 5) | cppVar_82258;
	cppVar_82259 = (cppVar_82259 & cppMask_un_8_);
	bool cppVar_82261 = (cppVar_82259 == 240);
	BIT_VEC cppVar_82263 = (cppVar_82261) ? B : 0;
	BIT_VEC cppVar_82264 = (cppVar_82256) ? ACC : cppVar_82263;
	BIT_VEC cppVar_82265 = (cppVar_82251) ? PSW : cppVar_82264;
	BIT_VEC cppVar_82266 = (cppVar_82246) ? IP : cppVar_82265;
	BIT_VEC cppVar_82267 = (cppVar_82241) ? P3 : cppVar_82266;
	BIT_VEC cppVar_82268 = (cppVar_82236) ? IE : cppVar_82267;
	BIT_VEC cppVar_82269 = (cppVar_82231) ? P2 : cppVar_82268;
	BIT_VEC cppVar_82270 = (cppVar_82226) ? SBUF : cppVar_82269;
	BIT_VEC cppVar_82271 = (cppVar_82221) ? SCON : cppVar_82270;
	BIT_VEC cppVar_82272 = (cppVar_82216) ? P1 : cppVar_82271;
	BIT_VEC cppVar_82273 = (cppVar_82211) ? TH1 : cppVar_82272;
	BIT_VEC cppVar_82274 = (cppVar_82206) ? TL1 : cppVar_82273;
	BIT_VEC cppVar_82275 = (cppVar_82201) ? TH0 : cppVar_82274;
	BIT_VEC cppVar_82276 = (cppVar_82196) ? TL0 : cppVar_82275;
	BIT_VEC cppVar_82277 = (cppVar_82191) ? TMOD : cppVar_82276;
	BIT_VEC cppVar_82278 = (cppVar_82186) ? TCON : cppVar_82277;
	BIT_VEC cppVar_82279 = (cppVar_82181) ? PCON : cppVar_82278;
	BIT_VEC cppVar_82280 = (cppVar_82176) ? DPH : cppVar_82279;
	BIT_VEC cppVar_82281 = (cppVar_82171) ? DPL : cppVar_82280;
	BIT_VEC cppVar_82282 = (cppVar_82166) ? SP : cppVar_82281;
	BIT_VEC cppVar_82283 = (cppVar_82161) ? P0 : cppVar_82282;
	BIT_VEC cppVar_82284 = (cppVar_82152) ? cppVar_82156 : cppVar_82283;
	BIT_VEC cppVar_82285 = (cppVar_82144) ? cppVar_82284 : TMOD;
	BIT_VEC cppVar_82286 = ROM.rd(PC);
	bool cppVar_82288 = (cppVar_82286 == 142);
	BIT_VEC cppVar_82290 = PC + 1;
	cppVar_82290 = (cppVar_82290 & cppMask_un_16_);
	BIT_VEC cppVar_82291 = ROM.rd(cppVar_82290);
	bool cppVar_82293 = (cppVar_82291 == 137);
	BIT_VEC cppVar_82295 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82297 = (cppVar_82295 << 3) | 6;
	cppVar_82297 = (cppVar_82297 & cppMask_un_5_);
	BIT_VEC cppVar_82298 = (0 << 5) | cppVar_82297;
	cppVar_82298 = (cppVar_82298 & cppMask_un_8_);
	BIT_VEC cppVar_82299 = (cppVar_82298 >> 7) & cppMask_un_1_;
	bool cppVar_82301 = (cppVar_82299 == 0);
	BIT_VEC cppVar_82302 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82303 = (cppVar_82302 << 3) | 6;
	cppVar_82303 = (cppVar_82303 & cppMask_un_5_);
	BIT_VEC cppVar_82304 = (0 << 5) | cppVar_82303;
	cppVar_82304 = (cppVar_82304 & cppMask_un_8_);
	BIT_VEC cppVar_82305 = IRAM.rd(cppVar_82304);
	BIT_VEC cppVar_82306 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82307 = (cppVar_82306 << 3) | 6;
	cppVar_82307 = (cppVar_82307 & cppMask_un_5_);
	BIT_VEC cppVar_82308 = (0 << 5) | cppVar_82307;
	cppVar_82308 = (cppVar_82308 & cppMask_un_8_);
	bool cppVar_82310 = (cppVar_82308 == 128);
	BIT_VEC cppVar_82311 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82312 = (cppVar_82311 << 3) | 6;
	cppVar_82312 = (cppVar_82312 & cppMask_un_5_);
	BIT_VEC cppVar_82313 = (0 << 5) | cppVar_82312;
	cppVar_82313 = (cppVar_82313 & cppMask_un_8_);
	bool cppVar_82315 = (cppVar_82313 == 129);
	BIT_VEC cppVar_82316 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82317 = (cppVar_82316 << 3) | 6;
	cppVar_82317 = (cppVar_82317 & cppMask_un_5_);
	BIT_VEC cppVar_82318 = (0 << 5) | cppVar_82317;
	cppVar_82318 = (cppVar_82318 & cppMask_un_8_);
	bool cppVar_82320 = (cppVar_82318 == 130);
	BIT_VEC cppVar_82321 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82322 = (cppVar_82321 << 3) | 6;
	cppVar_82322 = (cppVar_82322 & cppMask_un_5_);
	BIT_VEC cppVar_82323 = (0 << 5) | cppVar_82322;
	cppVar_82323 = (cppVar_82323 & cppMask_un_8_);
	bool cppVar_82325 = (cppVar_82323 == 131);
	BIT_VEC cppVar_82326 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82327 = (cppVar_82326 << 3) | 6;
	cppVar_82327 = (cppVar_82327 & cppMask_un_5_);
	BIT_VEC cppVar_82328 = (0 << 5) | cppVar_82327;
	cppVar_82328 = (cppVar_82328 & cppMask_un_8_);
	bool cppVar_82330 = (cppVar_82328 == 135);
	BIT_VEC cppVar_82331 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82332 = (cppVar_82331 << 3) | 6;
	cppVar_82332 = (cppVar_82332 & cppMask_un_5_);
	BIT_VEC cppVar_82333 = (0 << 5) | cppVar_82332;
	cppVar_82333 = (cppVar_82333 & cppMask_un_8_);
	bool cppVar_82335 = (cppVar_82333 == 136);
	BIT_VEC cppVar_82336 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82337 = (cppVar_82336 << 3) | 6;
	cppVar_82337 = (cppVar_82337 & cppMask_un_5_);
	BIT_VEC cppVar_82338 = (0 << 5) | cppVar_82337;
	cppVar_82338 = (cppVar_82338 & cppMask_un_8_);
	bool cppVar_82340 = (cppVar_82338 == 137);
	BIT_VEC cppVar_82341 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82342 = (cppVar_82341 << 3) | 6;
	cppVar_82342 = (cppVar_82342 & cppMask_un_5_);
	BIT_VEC cppVar_82343 = (0 << 5) | cppVar_82342;
	cppVar_82343 = (cppVar_82343 & cppMask_un_8_);
	bool cppVar_82345 = (cppVar_82343 == 138);
	BIT_VEC cppVar_82346 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82347 = (cppVar_82346 << 3) | 6;
	cppVar_82347 = (cppVar_82347 & cppMask_un_5_);
	BIT_VEC cppVar_82348 = (0 << 5) | cppVar_82347;
	cppVar_82348 = (cppVar_82348 & cppMask_un_8_);
	bool cppVar_82350 = (cppVar_82348 == 140);
	BIT_VEC cppVar_82351 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82352 = (cppVar_82351 << 3) | 6;
	cppVar_82352 = (cppVar_82352 & cppMask_un_5_);
	BIT_VEC cppVar_82353 = (0 << 5) | cppVar_82352;
	cppVar_82353 = (cppVar_82353 & cppMask_un_8_);
	bool cppVar_82355 = (cppVar_82353 == 139);
	BIT_VEC cppVar_82356 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82357 = (cppVar_82356 << 3) | 6;
	cppVar_82357 = (cppVar_82357 & cppMask_un_5_);
	BIT_VEC cppVar_82358 = (0 << 5) | cppVar_82357;
	cppVar_82358 = (cppVar_82358 & cppMask_un_8_);
	bool cppVar_82360 = (cppVar_82358 == 141);
	BIT_VEC cppVar_82361 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82362 = (cppVar_82361 << 3) | 6;
	cppVar_82362 = (cppVar_82362 & cppMask_un_5_);
	BIT_VEC cppVar_82363 = (0 << 5) | cppVar_82362;
	cppVar_82363 = (cppVar_82363 & cppMask_un_8_);
	bool cppVar_82365 = (cppVar_82363 == 144);
	BIT_VEC cppVar_82366 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82367 = (cppVar_82366 << 3) | 6;
	cppVar_82367 = (cppVar_82367 & cppMask_un_5_);
	BIT_VEC cppVar_82368 = (0 << 5) | cppVar_82367;
	cppVar_82368 = (cppVar_82368 & cppMask_un_8_);
	bool cppVar_82370 = (cppVar_82368 == 152);
	BIT_VEC cppVar_82371 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82372 = (cppVar_82371 << 3) | 6;
	cppVar_82372 = (cppVar_82372 & cppMask_un_5_);
	BIT_VEC cppVar_82373 = (0 << 5) | cppVar_82372;
	cppVar_82373 = (cppVar_82373 & cppMask_un_8_);
	bool cppVar_82375 = (cppVar_82373 == 153);
	BIT_VEC cppVar_82376 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82377 = (cppVar_82376 << 3) | 6;
	cppVar_82377 = (cppVar_82377 & cppMask_un_5_);
	BIT_VEC cppVar_82378 = (0 << 5) | cppVar_82377;
	cppVar_82378 = (cppVar_82378 & cppMask_un_8_);
	bool cppVar_82380 = (cppVar_82378 == 160);
	BIT_VEC cppVar_82381 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82382 = (cppVar_82381 << 3) | 6;
	cppVar_82382 = (cppVar_82382 & cppMask_un_5_);
	BIT_VEC cppVar_82383 = (0 << 5) | cppVar_82382;
	cppVar_82383 = (cppVar_82383 & cppMask_un_8_);
	bool cppVar_82385 = (cppVar_82383 == 168);
	BIT_VEC cppVar_82386 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82387 = (cppVar_82386 << 3) | 6;
	cppVar_82387 = (cppVar_82387 & cppMask_un_5_);
	BIT_VEC cppVar_82388 = (0 << 5) | cppVar_82387;
	cppVar_82388 = (cppVar_82388 & cppMask_un_8_);
	bool cppVar_82390 = (cppVar_82388 == 176);
	BIT_VEC cppVar_82391 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82392 = (cppVar_82391 << 3) | 6;
	cppVar_82392 = (cppVar_82392 & cppMask_un_5_);
	BIT_VEC cppVar_82393 = (0 << 5) | cppVar_82392;
	cppVar_82393 = (cppVar_82393 & cppMask_un_8_);
	bool cppVar_82395 = (cppVar_82393 == 184);
	BIT_VEC cppVar_82396 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82397 = (cppVar_82396 << 3) | 6;
	cppVar_82397 = (cppVar_82397 & cppMask_un_5_);
	BIT_VEC cppVar_82398 = (0 << 5) | cppVar_82397;
	cppVar_82398 = (cppVar_82398 & cppMask_un_8_);
	bool cppVar_82400 = (cppVar_82398 == 208);
	BIT_VEC cppVar_82401 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82402 = (cppVar_82401 << 3) | 6;
	cppVar_82402 = (cppVar_82402 & cppMask_un_5_);
	BIT_VEC cppVar_82403 = (0 << 5) | cppVar_82402;
	cppVar_82403 = (cppVar_82403 & cppMask_un_8_);
	bool cppVar_82405 = (cppVar_82403 == 224);
	BIT_VEC cppVar_82406 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82407 = (cppVar_82406 << 3) | 6;
	cppVar_82407 = (cppVar_82407 & cppMask_un_5_);
	BIT_VEC cppVar_82408 = (0 << 5) | cppVar_82407;
	cppVar_82408 = (cppVar_82408 & cppMask_un_8_);
	bool cppVar_82410 = (cppVar_82408 == 240);
	BIT_VEC cppVar_82412 = (cppVar_82410) ? B : 0;
	BIT_VEC cppVar_82413 = (cppVar_82405) ? ACC : cppVar_82412;
	BIT_VEC cppVar_82414 = (cppVar_82400) ? PSW : cppVar_82413;
	BIT_VEC cppVar_82415 = (cppVar_82395) ? IP : cppVar_82414;
	BIT_VEC cppVar_82416 = (cppVar_82390) ? P3 : cppVar_82415;
	BIT_VEC cppVar_82417 = (cppVar_82385) ? IE : cppVar_82416;
	BIT_VEC cppVar_82418 = (cppVar_82380) ? P2 : cppVar_82417;
	BIT_VEC cppVar_82419 = (cppVar_82375) ? SBUF : cppVar_82418;
	BIT_VEC cppVar_82420 = (cppVar_82370) ? SCON : cppVar_82419;
	BIT_VEC cppVar_82421 = (cppVar_82365) ? P1 : cppVar_82420;
	BIT_VEC cppVar_82422 = (cppVar_82360) ? TH1 : cppVar_82421;
	BIT_VEC cppVar_82423 = (cppVar_82355) ? TL1 : cppVar_82422;
	BIT_VEC cppVar_82424 = (cppVar_82350) ? TH0 : cppVar_82423;
	BIT_VEC cppVar_82425 = (cppVar_82345) ? TL0 : cppVar_82424;
	BIT_VEC cppVar_82426 = (cppVar_82340) ? TMOD : cppVar_82425;
	BIT_VEC cppVar_82427 = (cppVar_82335) ? TCON : cppVar_82426;
	BIT_VEC cppVar_82428 = (cppVar_82330) ? PCON : cppVar_82427;
	BIT_VEC cppVar_82429 = (cppVar_82325) ? DPH : cppVar_82428;
	BIT_VEC cppVar_82430 = (cppVar_82320) ? DPL : cppVar_82429;
	BIT_VEC cppVar_82431 = (cppVar_82315) ? SP : cppVar_82430;
	BIT_VEC cppVar_82432 = (cppVar_82310) ? P0 : cppVar_82431;
	BIT_VEC cppVar_82433 = (cppVar_82301) ? cppVar_82305 : cppVar_82432;
	BIT_VEC cppVar_82434 = (cppVar_82293) ? cppVar_82433 : TMOD;
	BIT_VEC cppVar_82435 = ROM.rd(PC);
	bool cppVar_82437 = (cppVar_82435 == 141);
	BIT_VEC cppVar_82439 = PC + 1;
	cppVar_82439 = (cppVar_82439 & cppMask_un_16_);
	BIT_VEC cppVar_82440 = ROM.rd(cppVar_82439);
	bool cppVar_82442 = (cppVar_82440 == 137);
	BIT_VEC cppVar_82444 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82446 = (cppVar_82444 << 3) | 5;
	cppVar_82446 = (cppVar_82446 & cppMask_un_5_);
	BIT_VEC cppVar_82447 = (0 << 5) | cppVar_82446;
	cppVar_82447 = (cppVar_82447 & cppMask_un_8_);
	BIT_VEC cppVar_82448 = (cppVar_82447 >> 7) & cppMask_un_1_;
	bool cppVar_82450 = (cppVar_82448 == 0);
	BIT_VEC cppVar_82451 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82452 = (cppVar_82451 << 3) | 5;
	cppVar_82452 = (cppVar_82452 & cppMask_un_5_);
	BIT_VEC cppVar_82453 = (0 << 5) | cppVar_82452;
	cppVar_82453 = (cppVar_82453 & cppMask_un_8_);
	BIT_VEC cppVar_82454 = IRAM.rd(cppVar_82453);
	BIT_VEC cppVar_82455 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82456 = (cppVar_82455 << 3) | 5;
	cppVar_82456 = (cppVar_82456 & cppMask_un_5_);
	BIT_VEC cppVar_82457 = (0 << 5) | cppVar_82456;
	cppVar_82457 = (cppVar_82457 & cppMask_un_8_);
	bool cppVar_82459 = (cppVar_82457 == 128);
	BIT_VEC cppVar_82460 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82461 = (cppVar_82460 << 3) | 5;
	cppVar_82461 = (cppVar_82461 & cppMask_un_5_);
	BIT_VEC cppVar_82462 = (0 << 5) | cppVar_82461;
	cppVar_82462 = (cppVar_82462 & cppMask_un_8_);
	bool cppVar_82464 = (cppVar_82462 == 129);
	BIT_VEC cppVar_82465 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82466 = (cppVar_82465 << 3) | 5;
	cppVar_82466 = (cppVar_82466 & cppMask_un_5_);
	BIT_VEC cppVar_82467 = (0 << 5) | cppVar_82466;
	cppVar_82467 = (cppVar_82467 & cppMask_un_8_);
	bool cppVar_82469 = (cppVar_82467 == 130);
	BIT_VEC cppVar_82470 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82471 = (cppVar_82470 << 3) | 5;
	cppVar_82471 = (cppVar_82471 & cppMask_un_5_);
	BIT_VEC cppVar_82472 = (0 << 5) | cppVar_82471;
	cppVar_82472 = (cppVar_82472 & cppMask_un_8_);
	bool cppVar_82474 = (cppVar_82472 == 131);
	BIT_VEC cppVar_82475 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82476 = (cppVar_82475 << 3) | 5;
	cppVar_82476 = (cppVar_82476 & cppMask_un_5_);
	BIT_VEC cppVar_82477 = (0 << 5) | cppVar_82476;
	cppVar_82477 = (cppVar_82477 & cppMask_un_8_);
	bool cppVar_82479 = (cppVar_82477 == 135);
	BIT_VEC cppVar_82480 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82481 = (cppVar_82480 << 3) | 5;
	cppVar_82481 = (cppVar_82481 & cppMask_un_5_);
	BIT_VEC cppVar_82482 = (0 << 5) | cppVar_82481;
	cppVar_82482 = (cppVar_82482 & cppMask_un_8_);
	bool cppVar_82484 = (cppVar_82482 == 136);
	BIT_VEC cppVar_82485 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82486 = (cppVar_82485 << 3) | 5;
	cppVar_82486 = (cppVar_82486 & cppMask_un_5_);
	BIT_VEC cppVar_82487 = (0 << 5) | cppVar_82486;
	cppVar_82487 = (cppVar_82487 & cppMask_un_8_);
	bool cppVar_82489 = (cppVar_82487 == 137);
	BIT_VEC cppVar_82490 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82491 = (cppVar_82490 << 3) | 5;
	cppVar_82491 = (cppVar_82491 & cppMask_un_5_);
	BIT_VEC cppVar_82492 = (0 << 5) | cppVar_82491;
	cppVar_82492 = (cppVar_82492 & cppMask_un_8_);
	bool cppVar_82494 = (cppVar_82492 == 138);
	BIT_VEC cppVar_82495 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82496 = (cppVar_82495 << 3) | 5;
	cppVar_82496 = (cppVar_82496 & cppMask_un_5_);
	BIT_VEC cppVar_82497 = (0 << 5) | cppVar_82496;
	cppVar_82497 = (cppVar_82497 & cppMask_un_8_);
	bool cppVar_82499 = (cppVar_82497 == 140);
	BIT_VEC cppVar_82500 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82501 = (cppVar_82500 << 3) | 5;
	cppVar_82501 = (cppVar_82501 & cppMask_un_5_);
	BIT_VEC cppVar_82502 = (0 << 5) | cppVar_82501;
	cppVar_82502 = (cppVar_82502 & cppMask_un_8_);
	bool cppVar_82504 = (cppVar_82502 == 139);
	BIT_VEC cppVar_82505 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82506 = (cppVar_82505 << 3) | 5;
	cppVar_82506 = (cppVar_82506 & cppMask_un_5_);
	BIT_VEC cppVar_82507 = (0 << 5) | cppVar_82506;
	cppVar_82507 = (cppVar_82507 & cppMask_un_8_);
	bool cppVar_82509 = (cppVar_82507 == 141);
	BIT_VEC cppVar_82510 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82511 = (cppVar_82510 << 3) | 5;
	cppVar_82511 = (cppVar_82511 & cppMask_un_5_);
	BIT_VEC cppVar_82512 = (0 << 5) | cppVar_82511;
	cppVar_82512 = (cppVar_82512 & cppMask_un_8_);
	bool cppVar_82514 = (cppVar_82512 == 144);
	BIT_VEC cppVar_82515 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82516 = (cppVar_82515 << 3) | 5;
	cppVar_82516 = (cppVar_82516 & cppMask_un_5_);
	BIT_VEC cppVar_82517 = (0 << 5) | cppVar_82516;
	cppVar_82517 = (cppVar_82517 & cppMask_un_8_);
	bool cppVar_82519 = (cppVar_82517 == 152);
	BIT_VEC cppVar_82520 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82521 = (cppVar_82520 << 3) | 5;
	cppVar_82521 = (cppVar_82521 & cppMask_un_5_);
	BIT_VEC cppVar_82522 = (0 << 5) | cppVar_82521;
	cppVar_82522 = (cppVar_82522 & cppMask_un_8_);
	bool cppVar_82524 = (cppVar_82522 == 153);
	BIT_VEC cppVar_82525 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82526 = (cppVar_82525 << 3) | 5;
	cppVar_82526 = (cppVar_82526 & cppMask_un_5_);
	BIT_VEC cppVar_82527 = (0 << 5) | cppVar_82526;
	cppVar_82527 = (cppVar_82527 & cppMask_un_8_);
	bool cppVar_82529 = (cppVar_82527 == 160);
	BIT_VEC cppVar_82530 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82531 = (cppVar_82530 << 3) | 5;
	cppVar_82531 = (cppVar_82531 & cppMask_un_5_);
	BIT_VEC cppVar_82532 = (0 << 5) | cppVar_82531;
	cppVar_82532 = (cppVar_82532 & cppMask_un_8_);
	bool cppVar_82534 = (cppVar_82532 == 168);
	BIT_VEC cppVar_82535 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82536 = (cppVar_82535 << 3) | 5;
	cppVar_82536 = (cppVar_82536 & cppMask_un_5_);
	BIT_VEC cppVar_82537 = (0 << 5) | cppVar_82536;
	cppVar_82537 = (cppVar_82537 & cppMask_un_8_);
	bool cppVar_82539 = (cppVar_82537 == 176);
	BIT_VEC cppVar_82540 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82541 = (cppVar_82540 << 3) | 5;
	cppVar_82541 = (cppVar_82541 & cppMask_un_5_);
	BIT_VEC cppVar_82542 = (0 << 5) | cppVar_82541;
	cppVar_82542 = (cppVar_82542 & cppMask_un_8_);
	bool cppVar_82544 = (cppVar_82542 == 184);
	BIT_VEC cppVar_82545 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82546 = (cppVar_82545 << 3) | 5;
	cppVar_82546 = (cppVar_82546 & cppMask_un_5_);
	BIT_VEC cppVar_82547 = (0 << 5) | cppVar_82546;
	cppVar_82547 = (cppVar_82547 & cppMask_un_8_);
	bool cppVar_82549 = (cppVar_82547 == 208);
	BIT_VEC cppVar_82550 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82551 = (cppVar_82550 << 3) | 5;
	cppVar_82551 = (cppVar_82551 & cppMask_un_5_);
	BIT_VEC cppVar_82552 = (0 << 5) | cppVar_82551;
	cppVar_82552 = (cppVar_82552 & cppMask_un_8_);
	bool cppVar_82554 = (cppVar_82552 == 224);
	BIT_VEC cppVar_82555 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82556 = (cppVar_82555 << 3) | 5;
	cppVar_82556 = (cppVar_82556 & cppMask_un_5_);
	BIT_VEC cppVar_82557 = (0 << 5) | cppVar_82556;
	cppVar_82557 = (cppVar_82557 & cppMask_un_8_);
	bool cppVar_82559 = (cppVar_82557 == 240);
	BIT_VEC cppVar_82561 = (cppVar_82559) ? B : 0;
	BIT_VEC cppVar_82562 = (cppVar_82554) ? ACC : cppVar_82561;
	BIT_VEC cppVar_82563 = (cppVar_82549) ? PSW : cppVar_82562;
	BIT_VEC cppVar_82564 = (cppVar_82544) ? IP : cppVar_82563;
	BIT_VEC cppVar_82565 = (cppVar_82539) ? P3 : cppVar_82564;
	BIT_VEC cppVar_82566 = (cppVar_82534) ? IE : cppVar_82565;
	BIT_VEC cppVar_82567 = (cppVar_82529) ? P2 : cppVar_82566;
	BIT_VEC cppVar_82568 = (cppVar_82524) ? SBUF : cppVar_82567;
	BIT_VEC cppVar_82569 = (cppVar_82519) ? SCON : cppVar_82568;
	BIT_VEC cppVar_82570 = (cppVar_82514) ? P1 : cppVar_82569;
	BIT_VEC cppVar_82571 = (cppVar_82509) ? TH1 : cppVar_82570;
	BIT_VEC cppVar_82572 = (cppVar_82504) ? TL1 : cppVar_82571;
	BIT_VEC cppVar_82573 = (cppVar_82499) ? TH0 : cppVar_82572;
	BIT_VEC cppVar_82574 = (cppVar_82494) ? TL0 : cppVar_82573;
	BIT_VEC cppVar_82575 = (cppVar_82489) ? TMOD : cppVar_82574;
	BIT_VEC cppVar_82576 = (cppVar_82484) ? TCON : cppVar_82575;
	BIT_VEC cppVar_82577 = (cppVar_82479) ? PCON : cppVar_82576;
	BIT_VEC cppVar_82578 = (cppVar_82474) ? DPH : cppVar_82577;
	BIT_VEC cppVar_82579 = (cppVar_82469) ? DPL : cppVar_82578;
	BIT_VEC cppVar_82580 = (cppVar_82464) ? SP : cppVar_82579;
	BIT_VEC cppVar_82581 = (cppVar_82459) ? P0 : cppVar_82580;
	BIT_VEC cppVar_82582 = (cppVar_82450) ? cppVar_82454 : cppVar_82581;
	BIT_VEC cppVar_82583 = (cppVar_82442) ? cppVar_82582 : TMOD;
	BIT_VEC cppVar_82584 = ROM.rd(PC);
	bool cppVar_82586 = (cppVar_82584 == 140);
	BIT_VEC cppVar_82588 = PC + 1;
	cppVar_82588 = (cppVar_82588 & cppMask_un_16_);
	BIT_VEC cppVar_82589 = ROM.rd(cppVar_82588);
	bool cppVar_82591 = (cppVar_82589 == 137);
	BIT_VEC cppVar_82593 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82595 = (cppVar_82593 << 3) | 4;
	cppVar_82595 = (cppVar_82595 & cppMask_un_5_);
	BIT_VEC cppVar_82596 = (0 << 5) | cppVar_82595;
	cppVar_82596 = (cppVar_82596 & cppMask_un_8_);
	BIT_VEC cppVar_82597 = (cppVar_82596 >> 7) & cppMask_un_1_;
	bool cppVar_82599 = (cppVar_82597 == 0);
	BIT_VEC cppVar_82600 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82601 = (cppVar_82600 << 3) | 4;
	cppVar_82601 = (cppVar_82601 & cppMask_un_5_);
	BIT_VEC cppVar_82602 = (0 << 5) | cppVar_82601;
	cppVar_82602 = (cppVar_82602 & cppMask_un_8_);
	BIT_VEC cppVar_82603 = IRAM.rd(cppVar_82602);
	BIT_VEC cppVar_82604 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82605 = (cppVar_82604 << 3) | 4;
	cppVar_82605 = (cppVar_82605 & cppMask_un_5_);
	BIT_VEC cppVar_82606 = (0 << 5) | cppVar_82605;
	cppVar_82606 = (cppVar_82606 & cppMask_un_8_);
	bool cppVar_82608 = (cppVar_82606 == 128);
	BIT_VEC cppVar_82609 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82610 = (cppVar_82609 << 3) | 4;
	cppVar_82610 = (cppVar_82610 & cppMask_un_5_);
	BIT_VEC cppVar_82611 = (0 << 5) | cppVar_82610;
	cppVar_82611 = (cppVar_82611 & cppMask_un_8_);
	bool cppVar_82613 = (cppVar_82611 == 129);
	BIT_VEC cppVar_82614 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82615 = (cppVar_82614 << 3) | 4;
	cppVar_82615 = (cppVar_82615 & cppMask_un_5_);
	BIT_VEC cppVar_82616 = (0 << 5) | cppVar_82615;
	cppVar_82616 = (cppVar_82616 & cppMask_un_8_);
	bool cppVar_82618 = (cppVar_82616 == 130);
	BIT_VEC cppVar_82619 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82620 = (cppVar_82619 << 3) | 4;
	cppVar_82620 = (cppVar_82620 & cppMask_un_5_);
	BIT_VEC cppVar_82621 = (0 << 5) | cppVar_82620;
	cppVar_82621 = (cppVar_82621 & cppMask_un_8_);
	bool cppVar_82623 = (cppVar_82621 == 131);
	BIT_VEC cppVar_82624 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82625 = (cppVar_82624 << 3) | 4;
	cppVar_82625 = (cppVar_82625 & cppMask_un_5_);
	BIT_VEC cppVar_82626 = (0 << 5) | cppVar_82625;
	cppVar_82626 = (cppVar_82626 & cppMask_un_8_);
	bool cppVar_82628 = (cppVar_82626 == 135);
	BIT_VEC cppVar_82629 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82630 = (cppVar_82629 << 3) | 4;
	cppVar_82630 = (cppVar_82630 & cppMask_un_5_);
	BIT_VEC cppVar_82631 = (0 << 5) | cppVar_82630;
	cppVar_82631 = (cppVar_82631 & cppMask_un_8_);
	bool cppVar_82633 = (cppVar_82631 == 136);
	BIT_VEC cppVar_82634 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82635 = (cppVar_82634 << 3) | 4;
	cppVar_82635 = (cppVar_82635 & cppMask_un_5_);
	BIT_VEC cppVar_82636 = (0 << 5) | cppVar_82635;
	cppVar_82636 = (cppVar_82636 & cppMask_un_8_);
	bool cppVar_82638 = (cppVar_82636 == 137);
	BIT_VEC cppVar_82639 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82640 = (cppVar_82639 << 3) | 4;
	cppVar_82640 = (cppVar_82640 & cppMask_un_5_);
	BIT_VEC cppVar_82641 = (0 << 5) | cppVar_82640;
	cppVar_82641 = (cppVar_82641 & cppMask_un_8_);
	bool cppVar_82643 = (cppVar_82641 == 138);
	BIT_VEC cppVar_82644 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82645 = (cppVar_82644 << 3) | 4;
	cppVar_82645 = (cppVar_82645 & cppMask_un_5_);
	BIT_VEC cppVar_82646 = (0 << 5) | cppVar_82645;
	cppVar_82646 = (cppVar_82646 & cppMask_un_8_);
	bool cppVar_82648 = (cppVar_82646 == 140);
	BIT_VEC cppVar_82649 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82650 = (cppVar_82649 << 3) | 4;
	cppVar_82650 = (cppVar_82650 & cppMask_un_5_);
	BIT_VEC cppVar_82651 = (0 << 5) | cppVar_82650;
	cppVar_82651 = (cppVar_82651 & cppMask_un_8_);
	bool cppVar_82653 = (cppVar_82651 == 139);
	BIT_VEC cppVar_82654 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82655 = (cppVar_82654 << 3) | 4;
	cppVar_82655 = (cppVar_82655 & cppMask_un_5_);
	BIT_VEC cppVar_82656 = (0 << 5) | cppVar_82655;
	cppVar_82656 = (cppVar_82656 & cppMask_un_8_);
	bool cppVar_82658 = (cppVar_82656 == 141);
	BIT_VEC cppVar_82659 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82660 = (cppVar_82659 << 3) | 4;
	cppVar_82660 = (cppVar_82660 & cppMask_un_5_);
	BIT_VEC cppVar_82661 = (0 << 5) | cppVar_82660;
	cppVar_82661 = (cppVar_82661 & cppMask_un_8_);
	bool cppVar_82663 = (cppVar_82661 == 144);
	BIT_VEC cppVar_82664 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82665 = (cppVar_82664 << 3) | 4;
	cppVar_82665 = (cppVar_82665 & cppMask_un_5_);
	BIT_VEC cppVar_82666 = (0 << 5) | cppVar_82665;
	cppVar_82666 = (cppVar_82666 & cppMask_un_8_);
	bool cppVar_82668 = (cppVar_82666 == 152);
	BIT_VEC cppVar_82669 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82670 = (cppVar_82669 << 3) | 4;
	cppVar_82670 = (cppVar_82670 & cppMask_un_5_);
	BIT_VEC cppVar_82671 = (0 << 5) | cppVar_82670;
	cppVar_82671 = (cppVar_82671 & cppMask_un_8_);
	bool cppVar_82673 = (cppVar_82671 == 153);
	BIT_VEC cppVar_82674 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82675 = (cppVar_82674 << 3) | 4;
	cppVar_82675 = (cppVar_82675 & cppMask_un_5_);
	BIT_VEC cppVar_82676 = (0 << 5) | cppVar_82675;
	cppVar_82676 = (cppVar_82676 & cppMask_un_8_);
	bool cppVar_82678 = (cppVar_82676 == 160);
	BIT_VEC cppVar_82679 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82680 = (cppVar_82679 << 3) | 4;
	cppVar_82680 = (cppVar_82680 & cppMask_un_5_);
	BIT_VEC cppVar_82681 = (0 << 5) | cppVar_82680;
	cppVar_82681 = (cppVar_82681 & cppMask_un_8_);
	bool cppVar_82683 = (cppVar_82681 == 168);
	BIT_VEC cppVar_82684 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82685 = (cppVar_82684 << 3) | 4;
	cppVar_82685 = (cppVar_82685 & cppMask_un_5_);
	BIT_VEC cppVar_82686 = (0 << 5) | cppVar_82685;
	cppVar_82686 = (cppVar_82686 & cppMask_un_8_);
	bool cppVar_82688 = (cppVar_82686 == 176);
	BIT_VEC cppVar_82689 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82690 = (cppVar_82689 << 3) | 4;
	cppVar_82690 = (cppVar_82690 & cppMask_un_5_);
	BIT_VEC cppVar_82691 = (0 << 5) | cppVar_82690;
	cppVar_82691 = (cppVar_82691 & cppMask_un_8_);
	bool cppVar_82693 = (cppVar_82691 == 184);
	BIT_VEC cppVar_82694 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82695 = (cppVar_82694 << 3) | 4;
	cppVar_82695 = (cppVar_82695 & cppMask_un_5_);
	BIT_VEC cppVar_82696 = (0 << 5) | cppVar_82695;
	cppVar_82696 = (cppVar_82696 & cppMask_un_8_);
	bool cppVar_82698 = (cppVar_82696 == 208);
	BIT_VEC cppVar_82699 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82700 = (cppVar_82699 << 3) | 4;
	cppVar_82700 = (cppVar_82700 & cppMask_un_5_);
	BIT_VEC cppVar_82701 = (0 << 5) | cppVar_82700;
	cppVar_82701 = (cppVar_82701 & cppMask_un_8_);
	bool cppVar_82703 = (cppVar_82701 == 224);
	BIT_VEC cppVar_82704 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82705 = (cppVar_82704 << 3) | 4;
	cppVar_82705 = (cppVar_82705 & cppMask_un_5_);
	BIT_VEC cppVar_82706 = (0 << 5) | cppVar_82705;
	cppVar_82706 = (cppVar_82706 & cppMask_un_8_);
	bool cppVar_82708 = (cppVar_82706 == 240);
	BIT_VEC cppVar_82710 = (cppVar_82708) ? B : 0;
	BIT_VEC cppVar_82711 = (cppVar_82703) ? ACC : cppVar_82710;
	BIT_VEC cppVar_82712 = (cppVar_82698) ? PSW : cppVar_82711;
	BIT_VEC cppVar_82713 = (cppVar_82693) ? IP : cppVar_82712;
	BIT_VEC cppVar_82714 = (cppVar_82688) ? P3 : cppVar_82713;
	BIT_VEC cppVar_82715 = (cppVar_82683) ? IE : cppVar_82714;
	BIT_VEC cppVar_82716 = (cppVar_82678) ? P2 : cppVar_82715;
	BIT_VEC cppVar_82717 = (cppVar_82673) ? SBUF : cppVar_82716;
	BIT_VEC cppVar_82718 = (cppVar_82668) ? SCON : cppVar_82717;
	BIT_VEC cppVar_82719 = (cppVar_82663) ? P1 : cppVar_82718;
	BIT_VEC cppVar_82720 = (cppVar_82658) ? TH1 : cppVar_82719;
	BIT_VEC cppVar_82721 = (cppVar_82653) ? TL1 : cppVar_82720;
	BIT_VEC cppVar_82722 = (cppVar_82648) ? TH0 : cppVar_82721;
	BIT_VEC cppVar_82723 = (cppVar_82643) ? TL0 : cppVar_82722;
	BIT_VEC cppVar_82724 = (cppVar_82638) ? TMOD : cppVar_82723;
	BIT_VEC cppVar_82725 = (cppVar_82633) ? TCON : cppVar_82724;
	BIT_VEC cppVar_82726 = (cppVar_82628) ? PCON : cppVar_82725;
	BIT_VEC cppVar_82727 = (cppVar_82623) ? DPH : cppVar_82726;
	BIT_VEC cppVar_82728 = (cppVar_82618) ? DPL : cppVar_82727;
	BIT_VEC cppVar_82729 = (cppVar_82613) ? SP : cppVar_82728;
	BIT_VEC cppVar_82730 = (cppVar_82608) ? P0 : cppVar_82729;
	BIT_VEC cppVar_82731 = (cppVar_82599) ? cppVar_82603 : cppVar_82730;
	BIT_VEC cppVar_82732 = (cppVar_82591) ? cppVar_82731 : TMOD;
	BIT_VEC cppVar_82733 = ROM.rd(PC);
	bool cppVar_82735 = (cppVar_82733 == 139);
	BIT_VEC cppVar_82737 = PC + 1;
	cppVar_82737 = (cppVar_82737 & cppMask_un_16_);
	BIT_VEC cppVar_82738 = ROM.rd(cppVar_82737);
	bool cppVar_82740 = (cppVar_82738 == 137);
	BIT_VEC cppVar_82742 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82744 = (cppVar_82742 << 3) | 3;
	cppVar_82744 = (cppVar_82744 & cppMask_un_5_);
	BIT_VEC cppVar_82745 = (0 << 5) | cppVar_82744;
	cppVar_82745 = (cppVar_82745 & cppMask_un_8_);
	BIT_VEC cppVar_82746 = (cppVar_82745 >> 7) & cppMask_un_1_;
	bool cppVar_82748 = (cppVar_82746 == 0);
	BIT_VEC cppVar_82749 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82750 = (cppVar_82749 << 3) | 3;
	cppVar_82750 = (cppVar_82750 & cppMask_un_5_);
	BIT_VEC cppVar_82751 = (0 << 5) | cppVar_82750;
	cppVar_82751 = (cppVar_82751 & cppMask_un_8_);
	BIT_VEC cppVar_82752 = IRAM.rd(cppVar_82751);
	BIT_VEC cppVar_82753 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82754 = (cppVar_82753 << 3) | 3;
	cppVar_82754 = (cppVar_82754 & cppMask_un_5_);
	BIT_VEC cppVar_82755 = (0 << 5) | cppVar_82754;
	cppVar_82755 = (cppVar_82755 & cppMask_un_8_);
	bool cppVar_82757 = (cppVar_82755 == 128);
	BIT_VEC cppVar_82758 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82759 = (cppVar_82758 << 3) | 3;
	cppVar_82759 = (cppVar_82759 & cppMask_un_5_);
	BIT_VEC cppVar_82760 = (0 << 5) | cppVar_82759;
	cppVar_82760 = (cppVar_82760 & cppMask_un_8_);
	bool cppVar_82762 = (cppVar_82760 == 129);
	BIT_VEC cppVar_82763 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82764 = (cppVar_82763 << 3) | 3;
	cppVar_82764 = (cppVar_82764 & cppMask_un_5_);
	BIT_VEC cppVar_82765 = (0 << 5) | cppVar_82764;
	cppVar_82765 = (cppVar_82765 & cppMask_un_8_);
	bool cppVar_82767 = (cppVar_82765 == 130);
	BIT_VEC cppVar_82768 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82769 = (cppVar_82768 << 3) | 3;
	cppVar_82769 = (cppVar_82769 & cppMask_un_5_);
	BIT_VEC cppVar_82770 = (0 << 5) | cppVar_82769;
	cppVar_82770 = (cppVar_82770 & cppMask_un_8_);
	bool cppVar_82772 = (cppVar_82770 == 131);
	BIT_VEC cppVar_82773 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82774 = (cppVar_82773 << 3) | 3;
	cppVar_82774 = (cppVar_82774 & cppMask_un_5_);
	BIT_VEC cppVar_82775 = (0 << 5) | cppVar_82774;
	cppVar_82775 = (cppVar_82775 & cppMask_un_8_);
	bool cppVar_82777 = (cppVar_82775 == 135);
	BIT_VEC cppVar_82778 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82779 = (cppVar_82778 << 3) | 3;
	cppVar_82779 = (cppVar_82779 & cppMask_un_5_);
	BIT_VEC cppVar_82780 = (0 << 5) | cppVar_82779;
	cppVar_82780 = (cppVar_82780 & cppMask_un_8_);
	bool cppVar_82782 = (cppVar_82780 == 136);
	BIT_VEC cppVar_82783 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82784 = (cppVar_82783 << 3) | 3;
	cppVar_82784 = (cppVar_82784 & cppMask_un_5_);
	BIT_VEC cppVar_82785 = (0 << 5) | cppVar_82784;
	cppVar_82785 = (cppVar_82785 & cppMask_un_8_);
	bool cppVar_82787 = (cppVar_82785 == 137);
	BIT_VEC cppVar_82788 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82789 = (cppVar_82788 << 3) | 3;
	cppVar_82789 = (cppVar_82789 & cppMask_un_5_);
	BIT_VEC cppVar_82790 = (0 << 5) | cppVar_82789;
	cppVar_82790 = (cppVar_82790 & cppMask_un_8_);
	bool cppVar_82792 = (cppVar_82790 == 138);
	BIT_VEC cppVar_82793 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82794 = (cppVar_82793 << 3) | 3;
	cppVar_82794 = (cppVar_82794 & cppMask_un_5_);
	BIT_VEC cppVar_82795 = (0 << 5) | cppVar_82794;
	cppVar_82795 = (cppVar_82795 & cppMask_un_8_);
	bool cppVar_82797 = (cppVar_82795 == 140);
	BIT_VEC cppVar_82798 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82799 = (cppVar_82798 << 3) | 3;
	cppVar_82799 = (cppVar_82799 & cppMask_un_5_);
	BIT_VEC cppVar_82800 = (0 << 5) | cppVar_82799;
	cppVar_82800 = (cppVar_82800 & cppMask_un_8_);
	bool cppVar_82802 = (cppVar_82800 == 139);
	BIT_VEC cppVar_82803 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82804 = (cppVar_82803 << 3) | 3;
	cppVar_82804 = (cppVar_82804 & cppMask_un_5_);
	BIT_VEC cppVar_82805 = (0 << 5) | cppVar_82804;
	cppVar_82805 = (cppVar_82805 & cppMask_un_8_);
	bool cppVar_82807 = (cppVar_82805 == 141);
	BIT_VEC cppVar_82808 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82809 = (cppVar_82808 << 3) | 3;
	cppVar_82809 = (cppVar_82809 & cppMask_un_5_);
	BIT_VEC cppVar_82810 = (0 << 5) | cppVar_82809;
	cppVar_82810 = (cppVar_82810 & cppMask_un_8_);
	bool cppVar_82812 = (cppVar_82810 == 144);
	BIT_VEC cppVar_82813 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82814 = (cppVar_82813 << 3) | 3;
	cppVar_82814 = (cppVar_82814 & cppMask_un_5_);
	BIT_VEC cppVar_82815 = (0 << 5) | cppVar_82814;
	cppVar_82815 = (cppVar_82815 & cppMask_un_8_);
	bool cppVar_82817 = (cppVar_82815 == 152);
	BIT_VEC cppVar_82818 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82819 = (cppVar_82818 << 3) | 3;
	cppVar_82819 = (cppVar_82819 & cppMask_un_5_);
	BIT_VEC cppVar_82820 = (0 << 5) | cppVar_82819;
	cppVar_82820 = (cppVar_82820 & cppMask_un_8_);
	bool cppVar_82822 = (cppVar_82820 == 153);
	BIT_VEC cppVar_82823 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82824 = (cppVar_82823 << 3) | 3;
	cppVar_82824 = (cppVar_82824 & cppMask_un_5_);
	BIT_VEC cppVar_82825 = (0 << 5) | cppVar_82824;
	cppVar_82825 = (cppVar_82825 & cppMask_un_8_);
	bool cppVar_82827 = (cppVar_82825 == 160);
	BIT_VEC cppVar_82828 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82829 = (cppVar_82828 << 3) | 3;
	cppVar_82829 = (cppVar_82829 & cppMask_un_5_);
	BIT_VEC cppVar_82830 = (0 << 5) | cppVar_82829;
	cppVar_82830 = (cppVar_82830 & cppMask_un_8_);
	bool cppVar_82832 = (cppVar_82830 == 168);
	BIT_VEC cppVar_82833 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82834 = (cppVar_82833 << 3) | 3;
	cppVar_82834 = (cppVar_82834 & cppMask_un_5_);
	BIT_VEC cppVar_82835 = (0 << 5) | cppVar_82834;
	cppVar_82835 = (cppVar_82835 & cppMask_un_8_);
	bool cppVar_82837 = (cppVar_82835 == 176);
	BIT_VEC cppVar_82838 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82839 = (cppVar_82838 << 3) | 3;
	cppVar_82839 = (cppVar_82839 & cppMask_un_5_);
	BIT_VEC cppVar_82840 = (0 << 5) | cppVar_82839;
	cppVar_82840 = (cppVar_82840 & cppMask_un_8_);
	bool cppVar_82842 = (cppVar_82840 == 184);
	BIT_VEC cppVar_82843 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82844 = (cppVar_82843 << 3) | 3;
	cppVar_82844 = (cppVar_82844 & cppMask_un_5_);
	BIT_VEC cppVar_82845 = (0 << 5) | cppVar_82844;
	cppVar_82845 = (cppVar_82845 & cppMask_un_8_);
	bool cppVar_82847 = (cppVar_82845 == 208);
	BIT_VEC cppVar_82848 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82849 = (cppVar_82848 << 3) | 3;
	cppVar_82849 = (cppVar_82849 & cppMask_un_5_);
	BIT_VEC cppVar_82850 = (0 << 5) | cppVar_82849;
	cppVar_82850 = (cppVar_82850 & cppMask_un_8_);
	bool cppVar_82852 = (cppVar_82850 == 224);
	BIT_VEC cppVar_82853 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82854 = (cppVar_82853 << 3) | 3;
	cppVar_82854 = (cppVar_82854 & cppMask_un_5_);
	BIT_VEC cppVar_82855 = (0 << 5) | cppVar_82854;
	cppVar_82855 = (cppVar_82855 & cppMask_un_8_);
	bool cppVar_82857 = (cppVar_82855 == 240);
	BIT_VEC cppVar_82859 = (cppVar_82857) ? B : 0;
	BIT_VEC cppVar_82860 = (cppVar_82852) ? ACC : cppVar_82859;
	BIT_VEC cppVar_82861 = (cppVar_82847) ? PSW : cppVar_82860;
	BIT_VEC cppVar_82862 = (cppVar_82842) ? IP : cppVar_82861;
	BIT_VEC cppVar_82863 = (cppVar_82837) ? P3 : cppVar_82862;
	BIT_VEC cppVar_82864 = (cppVar_82832) ? IE : cppVar_82863;
	BIT_VEC cppVar_82865 = (cppVar_82827) ? P2 : cppVar_82864;
	BIT_VEC cppVar_82866 = (cppVar_82822) ? SBUF : cppVar_82865;
	BIT_VEC cppVar_82867 = (cppVar_82817) ? SCON : cppVar_82866;
	BIT_VEC cppVar_82868 = (cppVar_82812) ? P1 : cppVar_82867;
	BIT_VEC cppVar_82869 = (cppVar_82807) ? TH1 : cppVar_82868;
	BIT_VEC cppVar_82870 = (cppVar_82802) ? TL1 : cppVar_82869;
	BIT_VEC cppVar_82871 = (cppVar_82797) ? TH0 : cppVar_82870;
	BIT_VEC cppVar_82872 = (cppVar_82792) ? TL0 : cppVar_82871;
	BIT_VEC cppVar_82873 = (cppVar_82787) ? TMOD : cppVar_82872;
	BIT_VEC cppVar_82874 = (cppVar_82782) ? TCON : cppVar_82873;
	BIT_VEC cppVar_82875 = (cppVar_82777) ? PCON : cppVar_82874;
	BIT_VEC cppVar_82876 = (cppVar_82772) ? DPH : cppVar_82875;
	BIT_VEC cppVar_82877 = (cppVar_82767) ? DPL : cppVar_82876;
	BIT_VEC cppVar_82878 = (cppVar_82762) ? SP : cppVar_82877;
	BIT_VEC cppVar_82879 = (cppVar_82757) ? P0 : cppVar_82878;
	BIT_VEC cppVar_82880 = (cppVar_82748) ? cppVar_82752 : cppVar_82879;
	BIT_VEC cppVar_82881 = (cppVar_82740) ? cppVar_82880 : TMOD;
	BIT_VEC cppVar_82882 = ROM.rd(PC);
	bool cppVar_82884 = (cppVar_82882 == 138);
	BIT_VEC cppVar_82886 = PC + 1;
	cppVar_82886 = (cppVar_82886 & cppMask_un_16_);
	BIT_VEC cppVar_82887 = ROM.rd(cppVar_82886);
	bool cppVar_82889 = (cppVar_82887 == 137);
	BIT_VEC cppVar_82891 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82893 = (cppVar_82891 << 3) | 2;
	cppVar_82893 = (cppVar_82893 & cppMask_un_5_);
	BIT_VEC cppVar_82894 = (0 << 5) | cppVar_82893;
	cppVar_82894 = (cppVar_82894 & cppMask_un_8_);
	BIT_VEC cppVar_82895 = (cppVar_82894 >> 7) & cppMask_un_1_;
	bool cppVar_82897 = (cppVar_82895 == 0);
	BIT_VEC cppVar_82898 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82899 = (cppVar_82898 << 3) | 2;
	cppVar_82899 = (cppVar_82899 & cppMask_un_5_);
	BIT_VEC cppVar_82900 = (0 << 5) | cppVar_82899;
	cppVar_82900 = (cppVar_82900 & cppMask_un_8_);
	BIT_VEC cppVar_82901 = IRAM.rd(cppVar_82900);
	BIT_VEC cppVar_82902 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82903 = (cppVar_82902 << 3) | 2;
	cppVar_82903 = (cppVar_82903 & cppMask_un_5_);
	BIT_VEC cppVar_82904 = (0 << 5) | cppVar_82903;
	cppVar_82904 = (cppVar_82904 & cppMask_un_8_);
	bool cppVar_82906 = (cppVar_82904 == 128);
	BIT_VEC cppVar_82907 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82908 = (cppVar_82907 << 3) | 2;
	cppVar_82908 = (cppVar_82908 & cppMask_un_5_);
	BIT_VEC cppVar_82909 = (0 << 5) | cppVar_82908;
	cppVar_82909 = (cppVar_82909 & cppMask_un_8_);
	bool cppVar_82911 = (cppVar_82909 == 129);
	BIT_VEC cppVar_82912 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82913 = (cppVar_82912 << 3) | 2;
	cppVar_82913 = (cppVar_82913 & cppMask_un_5_);
	BIT_VEC cppVar_82914 = (0 << 5) | cppVar_82913;
	cppVar_82914 = (cppVar_82914 & cppMask_un_8_);
	bool cppVar_82916 = (cppVar_82914 == 130);
	BIT_VEC cppVar_82917 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82918 = (cppVar_82917 << 3) | 2;
	cppVar_82918 = (cppVar_82918 & cppMask_un_5_);
	BIT_VEC cppVar_82919 = (0 << 5) | cppVar_82918;
	cppVar_82919 = (cppVar_82919 & cppMask_un_8_);
	bool cppVar_82921 = (cppVar_82919 == 131);
	BIT_VEC cppVar_82922 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82923 = (cppVar_82922 << 3) | 2;
	cppVar_82923 = (cppVar_82923 & cppMask_un_5_);
	BIT_VEC cppVar_82924 = (0 << 5) | cppVar_82923;
	cppVar_82924 = (cppVar_82924 & cppMask_un_8_);
	bool cppVar_82926 = (cppVar_82924 == 135);
	BIT_VEC cppVar_82927 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82928 = (cppVar_82927 << 3) | 2;
	cppVar_82928 = (cppVar_82928 & cppMask_un_5_);
	BIT_VEC cppVar_82929 = (0 << 5) | cppVar_82928;
	cppVar_82929 = (cppVar_82929 & cppMask_un_8_);
	bool cppVar_82931 = (cppVar_82929 == 136);
	BIT_VEC cppVar_82932 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82933 = (cppVar_82932 << 3) | 2;
	cppVar_82933 = (cppVar_82933 & cppMask_un_5_);
	BIT_VEC cppVar_82934 = (0 << 5) | cppVar_82933;
	cppVar_82934 = (cppVar_82934 & cppMask_un_8_);
	bool cppVar_82936 = (cppVar_82934 == 137);
	BIT_VEC cppVar_82937 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82938 = (cppVar_82937 << 3) | 2;
	cppVar_82938 = (cppVar_82938 & cppMask_un_5_);
	BIT_VEC cppVar_82939 = (0 << 5) | cppVar_82938;
	cppVar_82939 = (cppVar_82939 & cppMask_un_8_);
	bool cppVar_82941 = (cppVar_82939 == 138);
	BIT_VEC cppVar_82942 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82943 = (cppVar_82942 << 3) | 2;
	cppVar_82943 = (cppVar_82943 & cppMask_un_5_);
	BIT_VEC cppVar_82944 = (0 << 5) | cppVar_82943;
	cppVar_82944 = (cppVar_82944 & cppMask_un_8_);
	bool cppVar_82946 = (cppVar_82944 == 140);
	BIT_VEC cppVar_82947 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82948 = (cppVar_82947 << 3) | 2;
	cppVar_82948 = (cppVar_82948 & cppMask_un_5_);
	BIT_VEC cppVar_82949 = (0 << 5) | cppVar_82948;
	cppVar_82949 = (cppVar_82949 & cppMask_un_8_);
	bool cppVar_82951 = (cppVar_82949 == 139);
	BIT_VEC cppVar_82952 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82953 = (cppVar_82952 << 3) | 2;
	cppVar_82953 = (cppVar_82953 & cppMask_un_5_);
	BIT_VEC cppVar_82954 = (0 << 5) | cppVar_82953;
	cppVar_82954 = (cppVar_82954 & cppMask_un_8_);
	bool cppVar_82956 = (cppVar_82954 == 141);
	BIT_VEC cppVar_82957 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82958 = (cppVar_82957 << 3) | 2;
	cppVar_82958 = (cppVar_82958 & cppMask_un_5_);
	BIT_VEC cppVar_82959 = (0 << 5) | cppVar_82958;
	cppVar_82959 = (cppVar_82959 & cppMask_un_8_);
	bool cppVar_82961 = (cppVar_82959 == 144);
	BIT_VEC cppVar_82962 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82963 = (cppVar_82962 << 3) | 2;
	cppVar_82963 = (cppVar_82963 & cppMask_un_5_);
	BIT_VEC cppVar_82964 = (0 << 5) | cppVar_82963;
	cppVar_82964 = (cppVar_82964 & cppMask_un_8_);
	bool cppVar_82966 = (cppVar_82964 == 152);
	BIT_VEC cppVar_82967 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82968 = (cppVar_82967 << 3) | 2;
	cppVar_82968 = (cppVar_82968 & cppMask_un_5_);
	BIT_VEC cppVar_82969 = (0 << 5) | cppVar_82968;
	cppVar_82969 = (cppVar_82969 & cppMask_un_8_);
	bool cppVar_82971 = (cppVar_82969 == 153);
	BIT_VEC cppVar_82972 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82973 = (cppVar_82972 << 3) | 2;
	cppVar_82973 = (cppVar_82973 & cppMask_un_5_);
	BIT_VEC cppVar_82974 = (0 << 5) | cppVar_82973;
	cppVar_82974 = (cppVar_82974 & cppMask_un_8_);
	bool cppVar_82976 = (cppVar_82974 == 160);
	BIT_VEC cppVar_82977 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82978 = (cppVar_82977 << 3) | 2;
	cppVar_82978 = (cppVar_82978 & cppMask_un_5_);
	BIT_VEC cppVar_82979 = (0 << 5) | cppVar_82978;
	cppVar_82979 = (cppVar_82979 & cppMask_un_8_);
	bool cppVar_82981 = (cppVar_82979 == 168);
	BIT_VEC cppVar_82982 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82983 = (cppVar_82982 << 3) | 2;
	cppVar_82983 = (cppVar_82983 & cppMask_un_5_);
	BIT_VEC cppVar_82984 = (0 << 5) | cppVar_82983;
	cppVar_82984 = (cppVar_82984 & cppMask_un_8_);
	bool cppVar_82986 = (cppVar_82984 == 176);
	BIT_VEC cppVar_82987 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82988 = (cppVar_82987 << 3) | 2;
	cppVar_82988 = (cppVar_82988 & cppMask_un_5_);
	BIT_VEC cppVar_82989 = (0 << 5) | cppVar_82988;
	cppVar_82989 = (cppVar_82989 & cppMask_un_8_);
	bool cppVar_82991 = (cppVar_82989 == 184);
	BIT_VEC cppVar_82992 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82993 = (cppVar_82992 << 3) | 2;
	cppVar_82993 = (cppVar_82993 & cppMask_un_5_);
	BIT_VEC cppVar_82994 = (0 << 5) | cppVar_82993;
	cppVar_82994 = (cppVar_82994 & cppMask_un_8_);
	bool cppVar_82996 = (cppVar_82994 == 208);
	BIT_VEC cppVar_82997 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_82998 = (cppVar_82997 << 3) | 2;
	cppVar_82998 = (cppVar_82998 & cppMask_un_5_);
	BIT_VEC cppVar_82999 = (0 << 5) | cppVar_82998;
	cppVar_82999 = (cppVar_82999 & cppMask_un_8_);
	bool cppVar_83001 = (cppVar_82999 == 224);
	BIT_VEC cppVar_83002 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83003 = (cppVar_83002 << 3) | 2;
	cppVar_83003 = (cppVar_83003 & cppMask_un_5_);
	BIT_VEC cppVar_83004 = (0 << 5) | cppVar_83003;
	cppVar_83004 = (cppVar_83004 & cppMask_un_8_);
	bool cppVar_83006 = (cppVar_83004 == 240);
	BIT_VEC cppVar_83008 = (cppVar_83006) ? B : 0;
	BIT_VEC cppVar_83009 = (cppVar_83001) ? ACC : cppVar_83008;
	BIT_VEC cppVar_83010 = (cppVar_82996) ? PSW : cppVar_83009;
	BIT_VEC cppVar_83011 = (cppVar_82991) ? IP : cppVar_83010;
	BIT_VEC cppVar_83012 = (cppVar_82986) ? P3 : cppVar_83011;
	BIT_VEC cppVar_83013 = (cppVar_82981) ? IE : cppVar_83012;
	BIT_VEC cppVar_83014 = (cppVar_82976) ? P2 : cppVar_83013;
	BIT_VEC cppVar_83015 = (cppVar_82971) ? SBUF : cppVar_83014;
	BIT_VEC cppVar_83016 = (cppVar_82966) ? SCON : cppVar_83015;
	BIT_VEC cppVar_83017 = (cppVar_82961) ? P1 : cppVar_83016;
	BIT_VEC cppVar_83018 = (cppVar_82956) ? TH1 : cppVar_83017;
	BIT_VEC cppVar_83019 = (cppVar_82951) ? TL1 : cppVar_83018;
	BIT_VEC cppVar_83020 = (cppVar_82946) ? TH0 : cppVar_83019;
	BIT_VEC cppVar_83021 = (cppVar_82941) ? TL0 : cppVar_83020;
	BIT_VEC cppVar_83022 = (cppVar_82936) ? TMOD : cppVar_83021;
	BIT_VEC cppVar_83023 = (cppVar_82931) ? TCON : cppVar_83022;
	BIT_VEC cppVar_83024 = (cppVar_82926) ? PCON : cppVar_83023;
	BIT_VEC cppVar_83025 = (cppVar_82921) ? DPH : cppVar_83024;
	BIT_VEC cppVar_83026 = (cppVar_82916) ? DPL : cppVar_83025;
	BIT_VEC cppVar_83027 = (cppVar_82911) ? SP : cppVar_83026;
	BIT_VEC cppVar_83028 = (cppVar_82906) ? P0 : cppVar_83027;
	BIT_VEC cppVar_83029 = (cppVar_82897) ? cppVar_82901 : cppVar_83028;
	BIT_VEC cppVar_83030 = (cppVar_82889) ? cppVar_83029 : TMOD;
	BIT_VEC cppVar_83031 = ROM.rd(PC);
	bool cppVar_83033 = (cppVar_83031 == 137);
	BIT_VEC cppVar_83035 = PC + 1;
	cppVar_83035 = (cppVar_83035 & cppMask_un_16_);
	BIT_VEC cppVar_83036 = ROM.rd(cppVar_83035);
	bool cppVar_83038 = (cppVar_83036 == 137);
	BIT_VEC cppVar_83040 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83042 = (cppVar_83040 << 3) | 1;
	cppVar_83042 = (cppVar_83042 & cppMask_un_5_);
	BIT_VEC cppVar_83043 = (0 << 5) | cppVar_83042;
	cppVar_83043 = (cppVar_83043 & cppMask_un_8_);
	BIT_VEC cppVar_83044 = (cppVar_83043 >> 7) & cppMask_un_1_;
	bool cppVar_83046 = (cppVar_83044 == 0);
	BIT_VEC cppVar_83047 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83048 = (cppVar_83047 << 3) | 1;
	cppVar_83048 = (cppVar_83048 & cppMask_un_5_);
	BIT_VEC cppVar_83049 = (0 << 5) | cppVar_83048;
	cppVar_83049 = (cppVar_83049 & cppMask_un_8_);
	BIT_VEC cppVar_83050 = IRAM.rd(cppVar_83049);
	BIT_VEC cppVar_83051 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83052 = (cppVar_83051 << 3) | 1;
	cppVar_83052 = (cppVar_83052 & cppMask_un_5_);
	BIT_VEC cppVar_83053 = (0 << 5) | cppVar_83052;
	cppVar_83053 = (cppVar_83053 & cppMask_un_8_);
	bool cppVar_83055 = (cppVar_83053 == 128);
	BIT_VEC cppVar_83056 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83057 = (cppVar_83056 << 3) | 1;
	cppVar_83057 = (cppVar_83057 & cppMask_un_5_);
	BIT_VEC cppVar_83058 = (0 << 5) | cppVar_83057;
	cppVar_83058 = (cppVar_83058 & cppMask_un_8_);
	bool cppVar_83060 = (cppVar_83058 == 129);
	BIT_VEC cppVar_83061 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83062 = (cppVar_83061 << 3) | 1;
	cppVar_83062 = (cppVar_83062 & cppMask_un_5_);
	BIT_VEC cppVar_83063 = (0 << 5) | cppVar_83062;
	cppVar_83063 = (cppVar_83063 & cppMask_un_8_);
	bool cppVar_83065 = (cppVar_83063 == 130);
	BIT_VEC cppVar_83066 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83067 = (cppVar_83066 << 3) | 1;
	cppVar_83067 = (cppVar_83067 & cppMask_un_5_);
	BIT_VEC cppVar_83068 = (0 << 5) | cppVar_83067;
	cppVar_83068 = (cppVar_83068 & cppMask_un_8_);
	bool cppVar_83070 = (cppVar_83068 == 131);
	BIT_VEC cppVar_83071 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83072 = (cppVar_83071 << 3) | 1;
	cppVar_83072 = (cppVar_83072 & cppMask_un_5_);
	BIT_VEC cppVar_83073 = (0 << 5) | cppVar_83072;
	cppVar_83073 = (cppVar_83073 & cppMask_un_8_);
	bool cppVar_83075 = (cppVar_83073 == 135);
	BIT_VEC cppVar_83076 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83077 = (cppVar_83076 << 3) | 1;
	cppVar_83077 = (cppVar_83077 & cppMask_un_5_);
	BIT_VEC cppVar_83078 = (0 << 5) | cppVar_83077;
	cppVar_83078 = (cppVar_83078 & cppMask_un_8_);
	bool cppVar_83080 = (cppVar_83078 == 136);
	BIT_VEC cppVar_83081 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83082 = (cppVar_83081 << 3) | 1;
	cppVar_83082 = (cppVar_83082 & cppMask_un_5_);
	BIT_VEC cppVar_83083 = (0 << 5) | cppVar_83082;
	cppVar_83083 = (cppVar_83083 & cppMask_un_8_);
	bool cppVar_83085 = (cppVar_83083 == 137);
	BIT_VEC cppVar_83086 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83087 = (cppVar_83086 << 3) | 1;
	cppVar_83087 = (cppVar_83087 & cppMask_un_5_);
	BIT_VEC cppVar_83088 = (0 << 5) | cppVar_83087;
	cppVar_83088 = (cppVar_83088 & cppMask_un_8_);
	bool cppVar_83090 = (cppVar_83088 == 138);
	BIT_VEC cppVar_83091 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83092 = (cppVar_83091 << 3) | 1;
	cppVar_83092 = (cppVar_83092 & cppMask_un_5_);
	BIT_VEC cppVar_83093 = (0 << 5) | cppVar_83092;
	cppVar_83093 = (cppVar_83093 & cppMask_un_8_);
	bool cppVar_83095 = (cppVar_83093 == 140);
	BIT_VEC cppVar_83096 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83097 = (cppVar_83096 << 3) | 1;
	cppVar_83097 = (cppVar_83097 & cppMask_un_5_);
	BIT_VEC cppVar_83098 = (0 << 5) | cppVar_83097;
	cppVar_83098 = (cppVar_83098 & cppMask_un_8_);
	bool cppVar_83100 = (cppVar_83098 == 139);
	BIT_VEC cppVar_83101 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83102 = (cppVar_83101 << 3) | 1;
	cppVar_83102 = (cppVar_83102 & cppMask_un_5_);
	BIT_VEC cppVar_83103 = (0 << 5) | cppVar_83102;
	cppVar_83103 = (cppVar_83103 & cppMask_un_8_);
	bool cppVar_83105 = (cppVar_83103 == 141);
	BIT_VEC cppVar_83106 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83107 = (cppVar_83106 << 3) | 1;
	cppVar_83107 = (cppVar_83107 & cppMask_un_5_);
	BIT_VEC cppVar_83108 = (0 << 5) | cppVar_83107;
	cppVar_83108 = (cppVar_83108 & cppMask_un_8_);
	bool cppVar_83110 = (cppVar_83108 == 144);
	BIT_VEC cppVar_83111 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83112 = (cppVar_83111 << 3) | 1;
	cppVar_83112 = (cppVar_83112 & cppMask_un_5_);
	BIT_VEC cppVar_83113 = (0 << 5) | cppVar_83112;
	cppVar_83113 = (cppVar_83113 & cppMask_un_8_);
	bool cppVar_83115 = (cppVar_83113 == 152);
	BIT_VEC cppVar_83116 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83117 = (cppVar_83116 << 3) | 1;
	cppVar_83117 = (cppVar_83117 & cppMask_un_5_);
	BIT_VEC cppVar_83118 = (0 << 5) | cppVar_83117;
	cppVar_83118 = (cppVar_83118 & cppMask_un_8_);
	bool cppVar_83120 = (cppVar_83118 == 153);
	BIT_VEC cppVar_83121 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83122 = (cppVar_83121 << 3) | 1;
	cppVar_83122 = (cppVar_83122 & cppMask_un_5_);
	BIT_VEC cppVar_83123 = (0 << 5) | cppVar_83122;
	cppVar_83123 = (cppVar_83123 & cppMask_un_8_);
	bool cppVar_83125 = (cppVar_83123 == 160);
	BIT_VEC cppVar_83126 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83127 = (cppVar_83126 << 3) | 1;
	cppVar_83127 = (cppVar_83127 & cppMask_un_5_);
	BIT_VEC cppVar_83128 = (0 << 5) | cppVar_83127;
	cppVar_83128 = (cppVar_83128 & cppMask_un_8_);
	bool cppVar_83130 = (cppVar_83128 == 168);
	BIT_VEC cppVar_83131 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83132 = (cppVar_83131 << 3) | 1;
	cppVar_83132 = (cppVar_83132 & cppMask_un_5_);
	BIT_VEC cppVar_83133 = (0 << 5) | cppVar_83132;
	cppVar_83133 = (cppVar_83133 & cppMask_un_8_);
	bool cppVar_83135 = (cppVar_83133 == 176);
	BIT_VEC cppVar_83136 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83137 = (cppVar_83136 << 3) | 1;
	cppVar_83137 = (cppVar_83137 & cppMask_un_5_);
	BIT_VEC cppVar_83138 = (0 << 5) | cppVar_83137;
	cppVar_83138 = (cppVar_83138 & cppMask_un_8_);
	bool cppVar_83140 = (cppVar_83138 == 184);
	BIT_VEC cppVar_83141 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83142 = (cppVar_83141 << 3) | 1;
	cppVar_83142 = (cppVar_83142 & cppMask_un_5_);
	BIT_VEC cppVar_83143 = (0 << 5) | cppVar_83142;
	cppVar_83143 = (cppVar_83143 & cppMask_un_8_);
	bool cppVar_83145 = (cppVar_83143 == 208);
	BIT_VEC cppVar_83146 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83147 = (cppVar_83146 << 3) | 1;
	cppVar_83147 = (cppVar_83147 & cppMask_un_5_);
	BIT_VEC cppVar_83148 = (0 << 5) | cppVar_83147;
	cppVar_83148 = (cppVar_83148 & cppMask_un_8_);
	bool cppVar_83150 = (cppVar_83148 == 224);
	BIT_VEC cppVar_83151 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83152 = (cppVar_83151 << 3) | 1;
	cppVar_83152 = (cppVar_83152 & cppMask_un_5_);
	BIT_VEC cppVar_83153 = (0 << 5) | cppVar_83152;
	cppVar_83153 = (cppVar_83153 & cppMask_un_8_);
	bool cppVar_83155 = (cppVar_83153 == 240);
	BIT_VEC cppVar_83157 = (cppVar_83155) ? B : 0;
	BIT_VEC cppVar_83158 = (cppVar_83150) ? ACC : cppVar_83157;
	BIT_VEC cppVar_83159 = (cppVar_83145) ? PSW : cppVar_83158;
	BIT_VEC cppVar_83160 = (cppVar_83140) ? IP : cppVar_83159;
	BIT_VEC cppVar_83161 = (cppVar_83135) ? P3 : cppVar_83160;
	BIT_VEC cppVar_83162 = (cppVar_83130) ? IE : cppVar_83161;
	BIT_VEC cppVar_83163 = (cppVar_83125) ? P2 : cppVar_83162;
	BIT_VEC cppVar_83164 = (cppVar_83120) ? SBUF : cppVar_83163;
	BIT_VEC cppVar_83165 = (cppVar_83115) ? SCON : cppVar_83164;
	BIT_VEC cppVar_83166 = (cppVar_83110) ? P1 : cppVar_83165;
	BIT_VEC cppVar_83167 = (cppVar_83105) ? TH1 : cppVar_83166;
	BIT_VEC cppVar_83168 = (cppVar_83100) ? TL1 : cppVar_83167;
	BIT_VEC cppVar_83169 = (cppVar_83095) ? TH0 : cppVar_83168;
	BIT_VEC cppVar_83170 = (cppVar_83090) ? TL0 : cppVar_83169;
	BIT_VEC cppVar_83171 = (cppVar_83085) ? TMOD : cppVar_83170;
	BIT_VEC cppVar_83172 = (cppVar_83080) ? TCON : cppVar_83171;
	BIT_VEC cppVar_83173 = (cppVar_83075) ? PCON : cppVar_83172;
	BIT_VEC cppVar_83174 = (cppVar_83070) ? DPH : cppVar_83173;
	BIT_VEC cppVar_83175 = (cppVar_83065) ? DPL : cppVar_83174;
	BIT_VEC cppVar_83176 = (cppVar_83060) ? SP : cppVar_83175;
	BIT_VEC cppVar_83177 = (cppVar_83055) ? P0 : cppVar_83176;
	BIT_VEC cppVar_83178 = (cppVar_83046) ? cppVar_83050 : cppVar_83177;
	BIT_VEC cppVar_83179 = (cppVar_83038) ? cppVar_83178 : TMOD;
	BIT_VEC cppVar_83180 = ROM.rd(PC);
	bool cppVar_83182 = (cppVar_83180 == 136);
	BIT_VEC cppVar_83184 = PC + 1;
	cppVar_83184 = (cppVar_83184 & cppMask_un_16_);
	BIT_VEC cppVar_83185 = ROM.rd(cppVar_83184);
	bool cppVar_83187 = (cppVar_83185 == 137);
	BIT_VEC cppVar_83189 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83191 = (cppVar_83189 << 3) | 0;
	cppVar_83191 = (cppVar_83191 & cppMask_un_5_);
	BIT_VEC cppVar_83192 = (0 << 5) | cppVar_83191;
	cppVar_83192 = (cppVar_83192 & cppMask_un_8_);
	BIT_VEC cppVar_83193 = (cppVar_83192 >> 7) & cppMask_un_1_;
	bool cppVar_83195 = (cppVar_83193 == 0);
	BIT_VEC cppVar_83196 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83197 = (cppVar_83196 << 3) | 0;
	cppVar_83197 = (cppVar_83197 & cppMask_un_5_);
	BIT_VEC cppVar_83198 = (0 << 5) | cppVar_83197;
	cppVar_83198 = (cppVar_83198 & cppMask_un_8_);
	BIT_VEC cppVar_83199 = IRAM.rd(cppVar_83198);
	BIT_VEC cppVar_83200 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83201 = (cppVar_83200 << 3) | 0;
	cppVar_83201 = (cppVar_83201 & cppMask_un_5_);
	BIT_VEC cppVar_83202 = (0 << 5) | cppVar_83201;
	cppVar_83202 = (cppVar_83202 & cppMask_un_8_);
	bool cppVar_83204 = (cppVar_83202 == 128);
	BIT_VEC cppVar_83205 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83206 = (cppVar_83205 << 3) | 0;
	cppVar_83206 = (cppVar_83206 & cppMask_un_5_);
	BIT_VEC cppVar_83207 = (0 << 5) | cppVar_83206;
	cppVar_83207 = (cppVar_83207 & cppMask_un_8_);
	bool cppVar_83209 = (cppVar_83207 == 129);
	BIT_VEC cppVar_83210 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83211 = (cppVar_83210 << 3) | 0;
	cppVar_83211 = (cppVar_83211 & cppMask_un_5_);
	BIT_VEC cppVar_83212 = (0 << 5) | cppVar_83211;
	cppVar_83212 = (cppVar_83212 & cppMask_un_8_);
	bool cppVar_83214 = (cppVar_83212 == 130);
	BIT_VEC cppVar_83215 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83216 = (cppVar_83215 << 3) | 0;
	cppVar_83216 = (cppVar_83216 & cppMask_un_5_);
	BIT_VEC cppVar_83217 = (0 << 5) | cppVar_83216;
	cppVar_83217 = (cppVar_83217 & cppMask_un_8_);
	bool cppVar_83219 = (cppVar_83217 == 131);
	BIT_VEC cppVar_83220 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83221 = (cppVar_83220 << 3) | 0;
	cppVar_83221 = (cppVar_83221 & cppMask_un_5_);
	BIT_VEC cppVar_83222 = (0 << 5) | cppVar_83221;
	cppVar_83222 = (cppVar_83222 & cppMask_un_8_);
	bool cppVar_83224 = (cppVar_83222 == 135);
	BIT_VEC cppVar_83225 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83226 = (cppVar_83225 << 3) | 0;
	cppVar_83226 = (cppVar_83226 & cppMask_un_5_);
	BIT_VEC cppVar_83227 = (0 << 5) | cppVar_83226;
	cppVar_83227 = (cppVar_83227 & cppMask_un_8_);
	bool cppVar_83229 = (cppVar_83227 == 136);
	BIT_VEC cppVar_83230 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83231 = (cppVar_83230 << 3) | 0;
	cppVar_83231 = (cppVar_83231 & cppMask_un_5_);
	BIT_VEC cppVar_83232 = (0 << 5) | cppVar_83231;
	cppVar_83232 = (cppVar_83232 & cppMask_un_8_);
	bool cppVar_83234 = (cppVar_83232 == 137);
	BIT_VEC cppVar_83235 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83236 = (cppVar_83235 << 3) | 0;
	cppVar_83236 = (cppVar_83236 & cppMask_un_5_);
	BIT_VEC cppVar_83237 = (0 << 5) | cppVar_83236;
	cppVar_83237 = (cppVar_83237 & cppMask_un_8_);
	bool cppVar_83239 = (cppVar_83237 == 138);
	BIT_VEC cppVar_83240 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83241 = (cppVar_83240 << 3) | 0;
	cppVar_83241 = (cppVar_83241 & cppMask_un_5_);
	BIT_VEC cppVar_83242 = (0 << 5) | cppVar_83241;
	cppVar_83242 = (cppVar_83242 & cppMask_un_8_);
	bool cppVar_83244 = (cppVar_83242 == 140);
	BIT_VEC cppVar_83245 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83246 = (cppVar_83245 << 3) | 0;
	cppVar_83246 = (cppVar_83246 & cppMask_un_5_);
	BIT_VEC cppVar_83247 = (0 << 5) | cppVar_83246;
	cppVar_83247 = (cppVar_83247 & cppMask_un_8_);
	bool cppVar_83249 = (cppVar_83247 == 139);
	BIT_VEC cppVar_83250 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83251 = (cppVar_83250 << 3) | 0;
	cppVar_83251 = (cppVar_83251 & cppMask_un_5_);
	BIT_VEC cppVar_83252 = (0 << 5) | cppVar_83251;
	cppVar_83252 = (cppVar_83252 & cppMask_un_8_);
	bool cppVar_83254 = (cppVar_83252 == 141);
	BIT_VEC cppVar_83255 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83256 = (cppVar_83255 << 3) | 0;
	cppVar_83256 = (cppVar_83256 & cppMask_un_5_);
	BIT_VEC cppVar_83257 = (0 << 5) | cppVar_83256;
	cppVar_83257 = (cppVar_83257 & cppMask_un_8_);
	bool cppVar_83259 = (cppVar_83257 == 144);
	BIT_VEC cppVar_83260 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83261 = (cppVar_83260 << 3) | 0;
	cppVar_83261 = (cppVar_83261 & cppMask_un_5_);
	BIT_VEC cppVar_83262 = (0 << 5) | cppVar_83261;
	cppVar_83262 = (cppVar_83262 & cppMask_un_8_);
	bool cppVar_83264 = (cppVar_83262 == 152);
	BIT_VEC cppVar_83265 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83266 = (cppVar_83265 << 3) | 0;
	cppVar_83266 = (cppVar_83266 & cppMask_un_5_);
	BIT_VEC cppVar_83267 = (0 << 5) | cppVar_83266;
	cppVar_83267 = (cppVar_83267 & cppMask_un_8_);
	bool cppVar_83269 = (cppVar_83267 == 153);
	BIT_VEC cppVar_83270 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83271 = (cppVar_83270 << 3) | 0;
	cppVar_83271 = (cppVar_83271 & cppMask_un_5_);
	BIT_VEC cppVar_83272 = (0 << 5) | cppVar_83271;
	cppVar_83272 = (cppVar_83272 & cppMask_un_8_);
	bool cppVar_83274 = (cppVar_83272 == 160);
	BIT_VEC cppVar_83275 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83276 = (cppVar_83275 << 3) | 0;
	cppVar_83276 = (cppVar_83276 & cppMask_un_5_);
	BIT_VEC cppVar_83277 = (0 << 5) | cppVar_83276;
	cppVar_83277 = (cppVar_83277 & cppMask_un_8_);
	bool cppVar_83279 = (cppVar_83277 == 168);
	BIT_VEC cppVar_83280 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83281 = (cppVar_83280 << 3) | 0;
	cppVar_83281 = (cppVar_83281 & cppMask_un_5_);
	BIT_VEC cppVar_83282 = (0 << 5) | cppVar_83281;
	cppVar_83282 = (cppVar_83282 & cppMask_un_8_);
	bool cppVar_83284 = (cppVar_83282 == 176);
	BIT_VEC cppVar_83285 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83286 = (cppVar_83285 << 3) | 0;
	cppVar_83286 = (cppVar_83286 & cppMask_un_5_);
	BIT_VEC cppVar_83287 = (0 << 5) | cppVar_83286;
	cppVar_83287 = (cppVar_83287 & cppMask_un_8_);
	bool cppVar_83289 = (cppVar_83287 == 184);
	BIT_VEC cppVar_83290 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83291 = (cppVar_83290 << 3) | 0;
	cppVar_83291 = (cppVar_83291 & cppMask_un_5_);
	BIT_VEC cppVar_83292 = (0 << 5) | cppVar_83291;
	cppVar_83292 = (cppVar_83292 & cppMask_un_8_);
	bool cppVar_83294 = (cppVar_83292 == 208);
	BIT_VEC cppVar_83295 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83296 = (cppVar_83295 << 3) | 0;
	cppVar_83296 = (cppVar_83296 & cppMask_un_5_);
	BIT_VEC cppVar_83297 = (0 << 5) | cppVar_83296;
	cppVar_83297 = (cppVar_83297 & cppMask_un_8_);
	bool cppVar_83299 = (cppVar_83297 == 224);
	BIT_VEC cppVar_83300 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83301 = (cppVar_83300 << 3) | 0;
	cppVar_83301 = (cppVar_83301 & cppMask_un_5_);
	BIT_VEC cppVar_83302 = (0 << 5) | cppVar_83301;
	cppVar_83302 = (cppVar_83302 & cppMask_un_8_);
	bool cppVar_83304 = (cppVar_83302 == 240);
	BIT_VEC cppVar_83306 = (cppVar_83304) ? B : 0;
	BIT_VEC cppVar_83307 = (cppVar_83299) ? ACC : cppVar_83306;
	BIT_VEC cppVar_83308 = (cppVar_83294) ? PSW : cppVar_83307;
	BIT_VEC cppVar_83309 = (cppVar_83289) ? IP : cppVar_83308;
	BIT_VEC cppVar_83310 = (cppVar_83284) ? P3 : cppVar_83309;
	BIT_VEC cppVar_83311 = (cppVar_83279) ? IE : cppVar_83310;
	BIT_VEC cppVar_83312 = (cppVar_83274) ? P2 : cppVar_83311;
	BIT_VEC cppVar_83313 = (cppVar_83269) ? SBUF : cppVar_83312;
	BIT_VEC cppVar_83314 = (cppVar_83264) ? SCON : cppVar_83313;
	BIT_VEC cppVar_83315 = (cppVar_83259) ? P1 : cppVar_83314;
	BIT_VEC cppVar_83316 = (cppVar_83254) ? TH1 : cppVar_83315;
	BIT_VEC cppVar_83317 = (cppVar_83249) ? TL1 : cppVar_83316;
	BIT_VEC cppVar_83318 = (cppVar_83244) ? TH0 : cppVar_83317;
	BIT_VEC cppVar_83319 = (cppVar_83239) ? TL0 : cppVar_83318;
	BIT_VEC cppVar_83320 = (cppVar_83234) ? TMOD : cppVar_83319;
	BIT_VEC cppVar_83321 = (cppVar_83229) ? TCON : cppVar_83320;
	BIT_VEC cppVar_83322 = (cppVar_83224) ? PCON : cppVar_83321;
	BIT_VEC cppVar_83323 = (cppVar_83219) ? DPH : cppVar_83322;
	BIT_VEC cppVar_83324 = (cppVar_83214) ? DPL : cppVar_83323;
	BIT_VEC cppVar_83325 = (cppVar_83209) ? SP : cppVar_83324;
	BIT_VEC cppVar_83326 = (cppVar_83204) ? P0 : cppVar_83325;
	BIT_VEC cppVar_83327 = (cppVar_83195) ? cppVar_83199 : cppVar_83326;
	BIT_VEC cppVar_83328 = (cppVar_83187) ? cppVar_83327 : TMOD;
	BIT_VEC cppVar_83329 = ROM.rd(PC);
	bool cppVar_83331 = (cppVar_83329 == 135);
	BIT_VEC cppVar_83333 = PC + 1;
	cppVar_83333 = (cppVar_83333 & cppMask_un_16_);
	BIT_VEC cppVar_83334 = ROM.rd(cppVar_83333);
	bool cppVar_83336 = (cppVar_83334 == 137);
	BIT_VEC cppVar_83338 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83340 = (cppVar_83338 << 3) | 1;
	cppVar_83340 = (cppVar_83340 & cppMask_un_5_);
	BIT_VEC cppVar_83341 = (0 << 5) | cppVar_83340;
	cppVar_83341 = (cppVar_83341 & cppMask_un_8_);
	BIT_VEC cppVar_83342 = IRAM.rd(cppVar_83341);
	BIT_VEC cppVar_83343 = IRAM.rd(cppVar_83342);
	BIT_VEC cppVar_83344 = (cppVar_83336) ? cppVar_83343 : TMOD;
	BIT_VEC cppVar_83345 = ROM.rd(PC);
	bool cppVar_83347 = (cppVar_83345 == 134);
	BIT_VEC cppVar_83349 = PC + 1;
	cppVar_83349 = (cppVar_83349 & cppMask_un_16_);
	BIT_VEC cppVar_83350 = ROM.rd(cppVar_83349);
	bool cppVar_83352 = (cppVar_83350 == 137);
	BIT_VEC cppVar_83354 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_83356 = (cppVar_83354 << 3) | 0;
	cppVar_83356 = (cppVar_83356 & cppMask_un_5_);
	BIT_VEC cppVar_83357 = (0 << 5) | cppVar_83356;
	cppVar_83357 = (cppVar_83357 & cppMask_un_8_);
	BIT_VEC cppVar_83358 = IRAM.rd(cppVar_83357);
	BIT_VEC cppVar_83359 = IRAM.rd(cppVar_83358);
	BIT_VEC cppVar_83360 = (cppVar_83352) ? cppVar_83359 : TMOD;
	BIT_VEC cppVar_83361 = ROM.rd(PC);
	bool cppVar_83363 = (cppVar_83361 == 133);
	BIT_VEC cppVar_83365 = PC + 2;
	cppVar_83365 = (cppVar_83365 & cppMask_un_16_);
	BIT_VEC cppVar_83366 = ROM.rd(cppVar_83365);
	bool cppVar_83368 = (cppVar_83366 == 137);
	BIT_VEC cppVar_83370 = PC + 1;
	cppVar_83370 = (cppVar_83370 & cppMask_un_16_);
	BIT_VEC cppVar_83371 = ROM.rd(cppVar_83370);
	BIT_VEC cppVar_83372 = (cppVar_83371 >> 7) & cppMask_un_1_;
	bool cppVar_83374 = (cppVar_83372 == 0);
	BIT_VEC cppVar_83375 = PC + 1;
	cppVar_83375 = (cppVar_83375 & cppMask_un_16_);
	BIT_VEC cppVar_83376 = ROM.rd(cppVar_83375);
	BIT_VEC cppVar_83377 = IRAM.rd(cppVar_83376);
	BIT_VEC cppVar_83378 = PC + 1;
	cppVar_83378 = (cppVar_83378 & cppMask_un_16_);
	BIT_VEC cppVar_83379 = ROM.rd(cppVar_83378);
	bool cppVar_83381 = (cppVar_83379 == 128);
	BIT_VEC cppVar_83382 = PC + 1;
	cppVar_83382 = (cppVar_83382 & cppMask_un_16_);
	BIT_VEC cppVar_83383 = ROM.rd(cppVar_83382);
	bool cppVar_83385 = (cppVar_83383 == 129);
	BIT_VEC cppVar_83386 = PC + 1;
	cppVar_83386 = (cppVar_83386 & cppMask_un_16_);
	BIT_VEC cppVar_83387 = ROM.rd(cppVar_83386);
	bool cppVar_83389 = (cppVar_83387 == 130);
	BIT_VEC cppVar_83390 = PC + 1;
	cppVar_83390 = (cppVar_83390 & cppMask_un_16_);
	BIT_VEC cppVar_83391 = ROM.rd(cppVar_83390);
	bool cppVar_83393 = (cppVar_83391 == 131);
	BIT_VEC cppVar_83394 = PC + 1;
	cppVar_83394 = (cppVar_83394 & cppMask_un_16_);
	BIT_VEC cppVar_83395 = ROM.rd(cppVar_83394);
	bool cppVar_83397 = (cppVar_83395 == 135);
	BIT_VEC cppVar_83398 = PC + 1;
	cppVar_83398 = (cppVar_83398 & cppMask_un_16_);
	BIT_VEC cppVar_83399 = ROM.rd(cppVar_83398);
	bool cppVar_83401 = (cppVar_83399 == 136);
	BIT_VEC cppVar_83402 = PC + 1;
	cppVar_83402 = (cppVar_83402 & cppMask_un_16_);
	BIT_VEC cppVar_83403 = ROM.rd(cppVar_83402);
	bool cppVar_83405 = (cppVar_83403 == 137);
	BIT_VEC cppVar_83406 = PC + 1;
	cppVar_83406 = (cppVar_83406 & cppMask_un_16_);
	BIT_VEC cppVar_83407 = ROM.rd(cppVar_83406);
	bool cppVar_83409 = (cppVar_83407 == 138);
	BIT_VEC cppVar_83410 = PC + 1;
	cppVar_83410 = (cppVar_83410 & cppMask_un_16_);
	BIT_VEC cppVar_83411 = ROM.rd(cppVar_83410);
	bool cppVar_83413 = (cppVar_83411 == 140);
	BIT_VEC cppVar_83414 = PC + 1;
	cppVar_83414 = (cppVar_83414 & cppMask_un_16_);
	BIT_VEC cppVar_83415 = ROM.rd(cppVar_83414);
	bool cppVar_83417 = (cppVar_83415 == 139);
	BIT_VEC cppVar_83418 = PC + 1;
	cppVar_83418 = (cppVar_83418 & cppMask_un_16_);
	BIT_VEC cppVar_83419 = ROM.rd(cppVar_83418);
	bool cppVar_83421 = (cppVar_83419 == 141);
	BIT_VEC cppVar_83422 = PC + 1;
	cppVar_83422 = (cppVar_83422 & cppMask_un_16_);
	BIT_VEC cppVar_83423 = ROM.rd(cppVar_83422);
	bool cppVar_83425 = (cppVar_83423 == 144);
	BIT_VEC cppVar_83426 = PC + 1;
	cppVar_83426 = (cppVar_83426 & cppMask_un_16_);
	BIT_VEC cppVar_83427 = ROM.rd(cppVar_83426);
	bool cppVar_83429 = (cppVar_83427 == 152);
	BIT_VEC cppVar_83430 = PC + 1;
	cppVar_83430 = (cppVar_83430 & cppMask_un_16_);
	BIT_VEC cppVar_83431 = ROM.rd(cppVar_83430);
	bool cppVar_83433 = (cppVar_83431 == 153);
	BIT_VEC cppVar_83434 = PC + 1;
	cppVar_83434 = (cppVar_83434 & cppMask_un_16_);
	BIT_VEC cppVar_83435 = ROM.rd(cppVar_83434);
	bool cppVar_83437 = (cppVar_83435 == 160);
	BIT_VEC cppVar_83438 = PC + 1;
	cppVar_83438 = (cppVar_83438 & cppMask_un_16_);
	BIT_VEC cppVar_83439 = ROM.rd(cppVar_83438);
	bool cppVar_83441 = (cppVar_83439 == 168);
	BIT_VEC cppVar_83442 = PC + 1;
	cppVar_83442 = (cppVar_83442 & cppMask_un_16_);
	BIT_VEC cppVar_83443 = ROM.rd(cppVar_83442);
	bool cppVar_83445 = (cppVar_83443 == 176);
	BIT_VEC cppVar_83446 = PC + 1;
	cppVar_83446 = (cppVar_83446 & cppMask_un_16_);
	BIT_VEC cppVar_83447 = ROM.rd(cppVar_83446);
	bool cppVar_83449 = (cppVar_83447 == 184);
	BIT_VEC cppVar_83450 = PC + 1;
	cppVar_83450 = (cppVar_83450 & cppMask_un_16_);
	BIT_VEC cppVar_83451 = ROM.rd(cppVar_83450);
	bool cppVar_83453 = (cppVar_83451 == 208);
	BIT_VEC cppVar_83454 = PC + 1;
	cppVar_83454 = (cppVar_83454 & cppMask_un_16_);
	BIT_VEC cppVar_83455 = ROM.rd(cppVar_83454);
	bool cppVar_83457 = (cppVar_83455 == 224);
	BIT_VEC cppVar_83458 = PC + 1;
	cppVar_83458 = (cppVar_83458 & cppMask_un_16_);
	BIT_VEC cppVar_83459 = ROM.rd(cppVar_83458);
	bool cppVar_83461 = (cppVar_83459 == 240);
	BIT_VEC cppVar_83463 = (cppVar_83461) ? B : 0;
	BIT_VEC cppVar_83464 = (cppVar_83457) ? ACC : cppVar_83463;
	BIT_VEC cppVar_83465 = (cppVar_83453) ? PSW : cppVar_83464;
	BIT_VEC cppVar_83466 = (cppVar_83449) ? IP : cppVar_83465;
	BIT_VEC cppVar_83467 = (cppVar_83445) ? P3 : cppVar_83466;
	BIT_VEC cppVar_83468 = (cppVar_83441) ? IE : cppVar_83467;
	BIT_VEC cppVar_83469 = (cppVar_83437) ? P2 : cppVar_83468;
	BIT_VEC cppVar_83470 = (cppVar_83433) ? SBUF : cppVar_83469;
	BIT_VEC cppVar_83471 = (cppVar_83429) ? SCON : cppVar_83470;
	BIT_VEC cppVar_83472 = (cppVar_83425) ? P1 : cppVar_83471;
	BIT_VEC cppVar_83473 = (cppVar_83421) ? TH1 : cppVar_83472;
	BIT_VEC cppVar_83474 = (cppVar_83417) ? TL1 : cppVar_83473;
	BIT_VEC cppVar_83475 = (cppVar_83413) ? TH0 : cppVar_83474;
	BIT_VEC cppVar_83476 = (cppVar_83409) ? TL0 : cppVar_83475;
	BIT_VEC cppVar_83477 = (cppVar_83405) ? TMOD : cppVar_83476;
	BIT_VEC cppVar_83478 = (cppVar_83401) ? TCON : cppVar_83477;
	BIT_VEC cppVar_83479 = (cppVar_83397) ? PCON : cppVar_83478;
	BIT_VEC cppVar_83480 = (cppVar_83393) ? DPH : cppVar_83479;
	BIT_VEC cppVar_83481 = (cppVar_83389) ? DPL : cppVar_83480;
	BIT_VEC cppVar_83482 = (cppVar_83385) ? SP : cppVar_83481;
	BIT_VEC cppVar_83483 = (cppVar_83381) ? P0 : cppVar_83482;
	BIT_VEC cppVar_83484 = (cppVar_83374) ? cppVar_83377 : cppVar_83483;
	BIT_VEC cppVar_83485 = (cppVar_83368) ? cppVar_83484 : TMOD;
	BIT_VEC cppVar_83486 = ROM.rd(PC);
	bool cppVar_83488 = (cppVar_83486 == 117);
	BIT_VEC cppVar_83490 = PC + 1;
	cppVar_83490 = (cppVar_83490 & cppMask_un_16_);
	BIT_VEC cppVar_83491 = ROM.rd(cppVar_83490);
	bool cppVar_83493 = (cppVar_83491 == 137);
	BIT_VEC cppVar_83495 = PC + 2;
	cppVar_83495 = (cppVar_83495 & cppMask_un_16_);
	BIT_VEC cppVar_83496 = ROM.rd(cppVar_83495);
	BIT_VEC cppVar_83497 = (cppVar_83493) ? cppVar_83496 : TMOD;
	BIT_VEC cppVar_83498 = ROM.rd(PC);
	bool cppVar_83500 = (cppVar_83498 == 99);
	BIT_VEC cppVar_83502 = PC + 1;
	cppVar_83502 = (cppVar_83502 & cppMask_un_16_);
	BIT_VEC cppVar_83503 = ROM.rd(cppVar_83502);
	bool cppVar_83505 = (cppVar_83503 == 137);
	BIT_VEC cppVar_83506 = PC + 1;
	cppVar_83506 = (cppVar_83506 & cppMask_un_16_);
	BIT_VEC cppVar_83507 = ROM.rd(cppVar_83506);
	BIT_VEC cppVar_83508 = (cppVar_83507 >> 7) & cppMask_un_1_;
	bool cppVar_83510 = (cppVar_83508 == 0);
	BIT_VEC cppVar_83511 = PC + 1;
	cppVar_83511 = (cppVar_83511 & cppMask_un_16_);
	BIT_VEC cppVar_83512 = ROM.rd(cppVar_83511);
	BIT_VEC cppVar_83513 = IRAM.rd(cppVar_83512);
	BIT_VEC cppVar_83514 = PC + 1;
	cppVar_83514 = (cppVar_83514 & cppMask_un_16_);
	BIT_VEC cppVar_83515 = ROM.rd(cppVar_83514);
	bool cppVar_83517 = (cppVar_83515 == 128);
	BIT_VEC cppVar_83518 = PC + 1;
	cppVar_83518 = (cppVar_83518 & cppMask_un_16_);
	BIT_VEC cppVar_83519 = ROM.rd(cppVar_83518);
	bool cppVar_83521 = (cppVar_83519 == 129);
	BIT_VEC cppVar_83522 = PC + 1;
	cppVar_83522 = (cppVar_83522 & cppMask_un_16_);
	BIT_VEC cppVar_83523 = ROM.rd(cppVar_83522);
	bool cppVar_83525 = (cppVar_83523 == 130);
	BIT_VEC cppVar_83526 = PC + 1;
	cppVar_83526 = (cppVar_83526 & cppMask_un_16_);
	BIT_VEC cppVar_83527 = ROM.rd(cppVar_83526);
	bool cppVar_83529 = (cppVar_83527 == 131);
	BIT_VEC cppVar_83530 = PC + 1;
	cppVar_83530 = (cppVar_83530 & cppMask_un_16_);
	BIT_VEC cppVar_83531 = ROM.rd(cppVar_83530);
	bool cppVar_83533 = (cppVar_83531 == 135);
	BIT_VEC cppVar_83534 = PC + 1;
	cppVar_83534 = (cppVar_83534 & cppMask_un_16_);
	BIT_VEC cppVar_83535 = ROM.rd(cppVar_83534);
	bool cppVar_83537 = (cppVar_83535 == 136);
	BIT_VEC cppVar_83538 = PC + 1;
	cppVar_83538 = (cppVar_83538 & cppMask_un_16_);
	BIT_VEC cppVar_83539 = ROM.rd(cppVar_83538);
	bool cppVar_83541 = (cppVar_83539 == 137);
	BIT_VEC cppVar_83542 = PC + 1;
	cppVar_83542 = (cppVar_83542 & cppMask_un_16_);
	BIT_VEC cppVar_83543 = ROM.rd(cppVar_83542);
	bool cppVar_83545 = (cppVar_83543 == 138);
	BIT_VEC cppVar_83546 = PC + 1;
	cppVar_83546 = (cppVar_83546 & cppMask_un_16_);
	BIT_VEC cppVar_83547 = ROM.rd(cppVar_83546);
	bool cppVar_83549 = (cppVar_83547 == 140);
	BIT_VEC cppVar_83550 = PC + 1;
	cppVar_83550 = (cppVar_83550 & cppMask_un_16_);
	BIT_VEC cppVar_83551 = ROM.rd(cppVar_83550);
	bool cppVar_83553 = (cppVar_83551 == 139);
	BIT_VEC cppVar_83554 = PC + 1;
	cppVar_83554 = (cppVar_83554 & cppMask_un_16_);
	BIT_VEC cppVar_83555 = ROM.rd(cppVar_83554);
	bool cppVar_83557 = (cppVar_83555 == 141);
	BIT_VEC cppVar_83558 = PC + 1;
	cppVar_83558 = (cppVar_83558 & cppMask_un_16_);
	BIT_VEC cppVar_83559 = ROM.rd(cppVar_83558);
	bool cppVar_83561 = (cppVar_83559 == 144);
	BIT_VEC cppVar_83562 = PC + 1;
	cppVar_83562 = (cppVar_83562 & cppMask_un_16_);
	BIT_VEC cppVar_83563 = ROM.rd(cppVar_83562);
	bool cppVar_83565 = (cppVar_83563 == 152);
	BIT_VEC cppVar_83566 = PC + 1;
	cppVar_83566 = (cppVar_83566 & cppMask_un_16_);
	BIT_VEC cppVar_83567 = ROM.rd(cppVar_83566);
	bool cppVar_83569 = (cppVar_83567 == 153);
	BIT_VEC cppVar_83570 = PC + 1;
	cppVar_83570 = (cppVar_83570 & cppMask_un_16_);
	BIT_VEC cppVar_83571 = ROM.rd(cppVar_83570);
	bool cppVar_83573 = (cppVar_83571 == 160);
	BIT_VEC cppVar_83574 = PC + 1;
	cppVar_83574 = (cppVar_83574 & cppMask_un_16_);
	BIT_VEC cppVar_83575 = ROM.rd(cppVar_83574);
	bool cppVar_83577 = (cppVar_83575 == 168);
	BIT_VEC cppVar_83578 = PC + 1;
	cppVar_83578 = (cppVar_83578 & cppMask_un_16_);
	BIT_VEC cppVar_83579 = ROM.rd(cppVar_83578);
	bool cppVar_83581 = (cppVar_83579 == 176);
	BIT_VEC cppVar_83582 = PC + 1;
	cppVar_83582 = (cppVar_83582 & cppMask_un_16_);
	BIT_VEC cppVar_83583 = ROM.rd(cppVar_83582);
	bool cppVar_83585 = (cppVar_83583 == 184);
	BIT_VEC cppVar_83586 = PC + 1;
	cppVar_83586 = (cppVar_83586 & cppMask_un_16_);
	BIT_VEC cppVar_83587 = ROM.rd(cppVar_83586);
	bool cppVar_83589 = (cppVar_83587 == 208);
	BIT_VEC cppVar_83590 = PC + 1;
	cppVar_83590 = (cppVar_83590 & cppMask_un_16_);
	BIT_VEC cppVar_83591 = ROM.rd(cppVar_83590);
	bool cppVar_83593 = (cppVar_83591 == 224);
	BIT_VEC cppVar_83594 = PC + 1;
	cppVar_83594 = (cppVar_83594 & cppMask_un_16_);
	BIT_VEC cppVar_83595 = ROM.rd(cppVar_83594);
	bool cppVar_83597 = (cppVar_83595 == 240);
	BIT_VEC cppVar_83599 = (cppVar_83597) ? B : 0;
	BIT_VEC cppVar_83600 = (cppVar_83593) ? ACC : cppVar_83599;
	BIT_VEC cppVar_83601 = (cppVar_83589) ? PSW : cppVar_83600;
	BIT_VEC cppVar_83602 = (cppVar_83585) ? IP : cppVar_83601;
	BIT_VEC cppVar_83603 = (cppVar_83581) ? P3 : cppVar_83602;
	BIT_VEC cppVar_83604 = (cppVar_83577) ? IE : cppVar_83603;
	BIT_VEC cppVar_83605 = (cppVar_83573) ? P2 : cppVar_83604;
	BIT_VEC cppVar_83606 = (cppVar_83569) ? SBUF : cppVar_83605;
	BIT_VEC cppVar_83607 = (cppVar_83565) ? SCON : cppVar_83606;
	BIT_VEC cppVar_83608 = (cppVar_83561) ? P1 : cppVar_83607;
	BIT_VEC cppVar_83609 = (cppVar_83557) ? TH1 : cppVar_83608;
	BIT_VEC cppVar_83610 = (cppVar_83553) ? TL1 : cppVar_83609;
	BIT_VEC cppVar_83611 = (cppVar_83549) ? TH0 : cppVar_83610;
	BIT_VEC cppVar_83612 = (cppVar_83545) ? TL0 : cppVar_83611;
	BIT_VEC cppVar_83613 = (cppVar_83541) ? TMOD : cppVar_83612;
	BIT_VEC cppVar_83614 = (cppVar_83537) ? TCON : cppVar_83613;
	BIT_VEC cppVar_83615 = (cppVar_83533) ? PCON : cppVar_83614;
	BIT_VEC cppVar_83616 = (cppVar_83529) ? DPH : cppVar_83615;
	BIT_VEC cppVar_83617 = (cppVar_83525) ? DPL : cppVar_83616;
	BIT_VEC cppVar_83618 = (cppVar_83521) ? SP : cppVar_83617;
	BIT_VEC cppVar_83619 = (cppVar_83517) ? P0 : cppVar_83618;
	BIT_VEC cppVar_83620 = (cppVar_83510) ? cppVar_83513 : cppVar_83619;
	BIT_VEC cppVar_83622 = PC + 2;
	cppVar_83622 = (cppVar_83622 & cppMask_un_16_);
	BIT_VEC cppVar_83623 = ROM.rd(cppVar_83622);
	BIT_VEC cppVar_83624 = cppVar_83620 ^ cppVar_83623;
	BIT_VEC cppVar_83625 = (cppVar_83505) ? cppVar_83624 : TMOD;
	BIT_VEC cppVar_83626 = ROM.rd(PC);
	bool cppVar_83628 = (cppVar_83626 == 98);
	BIT_VEC cppVar_83630 = PC + 1;
	cppVar_83630 = (cppVar_83630 & cppMask_un_16_);
	BIT_VEC cppVar_83631 = ROM.rd(cppVar_83630);
	bool cppVar_83633 = (cppVar_83631 == 137);
	BIT_VEC cppVar_83634 = PC + 1;
	cppVar_83634 = (cppVar_83634 & cppMask_un_16_);
	BIT_VEC cppVar_83635 = ROM.rd(cppVar_83634);
	BIT_VEC cppVar_83636 = (cppVar_83635 >> 7) & cppMask_un_1_;
	bool cppVar_83638 = (cppVar_83636 == 0);
	BIT_VEC cppVar_83639 = PC + 1;
	cppVar_83639 = (cppVar_83639 & cppMask_un_16_);
	BIT_VEC cppVar_83640 = ROM.rd(cppVar_83639);
	BIT_VEC cppVar_83641 = IRAM.rd(cppVar_83640);
	BIT_VEC cppVar_83642 = PC + 1;
	cppVar_83642 = (cppVar_83642 & cppMask_un_16_);
	BIT_VEC cppVar_83643 = ROM.rd(cppVar_83642);
	bool cppVar_83645 = (cppVar_83643 == 128);
	BIT_VEC cppVar_83646 = PC + 1;
	cppVar_83646 = (cppVar_83646 & cppMask_un_16_);
	BIT_VEC cppVar_83647 = ROM.rd(cppVar_83646);
	bool cppVar_83649 = (cppVar_83647 == 129);
	BIT_VEC cppVar_83650 = PC + 1;
	cppVar_83650 = (cppVar_83650 & cppMask_un_16_);
	BIT_VEC cppVar_83651 = ROM.rd(cppVar_83650);
	bool cppVar_83653 = (cppVar_83651 == 130);
	BIT_VEC cppVar_83654 = PC + 1;
	cppVar_83654 = (cppVar_83654 & cppMask_un_16_);
	BIT_VEC cppVar_83655 = ROM.rd(cppVar_83654);
	bool cppVar_83657 = (cppVar_83655 == 131);
	BIT_VEC cppVar_83658 = PC + 1;
	cppVar_83658 = (cppVar_83658 & cppMask_un_16_);
	BIT_VEC cppVar_83659 = ROM.rd(cppVar_83658);
	bool cppVar_83661 = (cppVar_83659 == 135);
	BIT_VEC cppVar_83662 = PC + 1;
	cppVar_83662 = (cppVar_83662 & cppMask_un_16_);
	BIT_VEC cppVar_83663 = ROM.rd(cppVar_83662);
	bool cppVar_83665 = (cppVar_83663 == 136);
	BIT_VEC cppVar_83666 = PC + 1;
	cppVar_83666 = (cppVar_83666 & cppMask_un_16_);
	BIT_VEC cppVar_83667 = ROM.rd(cppVar_83666);
	bool cppVar_83669 = (cppVar_83667 == 137);
	BIT_VEC cppVar_83670 = PC + 1;
	cppVar_83670 = (cppVar_83670 & cppMask_un_16_);
	BIT_VEC cppVar_83671 = ROM.rd(cppVar_83670);
	bool cppVar_83673 = (cppVar_83671 == 138);
	BIT_VEC cppVar_83674 = PC + 1;
	cppVar_83674 = (cppVar_83674 & cppMask_un_16_);
	BIT_VEC cppVar_83675 = ROM.rd(cppVar_83674);
	bool cppVar_83677 = (cppVar_83675 == 140);
	BIT_VEC cppVar_83678 = PC + 1;
	cppVar_83678 = (cppVar_83678 & cppMask_un_16_);
	BIT_VEC cppVar_83679 = ROM.rd(cppVar_83678);
	bool cppVar_83681 = (cppVar_83679 == 139);
	BIT_VEC cppVar_83682 = PC + 1;
	cppVar_83682 = (cppVar_83682 & cppMask_un_16_);
	BIT_VEC cppVar_83683 = ROM.rd(cppVar_83682);
	bool cppVar_83685 = (cppVar_83683 == 141);
	BIT_VEC cppVar_83686 = PC + 1;
	cppVar_83686 = (cppVar_83686 & cppMask_un_16_);
	BIT_VEC cppVar_83687 = ROM.rd(cppVar_83686);
	bool cppVar_83689 = (cppVar_83687 == 144);
	BIT_VEC cppVar_83690 = PC + 1;
	cppVar_83690 = (cppVar_83690 & cppMask_un_16_);
	BIT_VEC cppVar_83691 = ROM.rd(cppVar_83690);
	bool cppVar_83693 = (cppVar_83691 == 152);
	BIT_VEC cppVar_83694 = PC + 1;
	cppVar_83694 = (cppVar_83694 & cppMask_un_16_);
	BIT_VEC cppVar_83695 = ROM.rd(cppVar_83694);
	bool cppVar_83697 = (cppVar_83695 == 153);
	BIT_VEC cppVar_83698 = PC + 1;
	cppVar_83698 = (cppVar_83698 & cppMask_un_16_);
	BIT_VEC cppVar_83699 = ROM.rd(cppVar_83698);
	bool cppVar_83701 = (cppVar_83699 == 160);
	BIT_VEC cppVar_83702 = PC + 1;
	cppVar_83702 = (cppVar_83702 & cppMask_un_16_);
	BIT_VEC cppVar_83703 = ROM.rd(cppVar_83702);
	bool cppVar_83705 = (cppVar_83703 == 168);
	BIT_VEC cppVar_83706 = PC + 1;
	cppVar_83706 = (cppVar_83706 & cppMask_un_16_);
	BIT_VEC cppVar_83707 = ROM.rd(cppVar_83706);
	bool cppVar_83709 = (cppVar_83707 == 176);
	BIT_VEC cppVar_83710 = PC + 1;
	cppVar_83710 = (cppVar_83710 & cppMask_un_16_);
	BIT_VEC cppVar_83711 = ROM.rd(cppVar_83710);
	bool cppVar_83713 = (cppVar_83711 == 184);
	BIT_VEC cppVar_83714 = PC + 1;
	cppVar_83714 = (cppVar_83714 & cppMask_un_16_);
	BIT_VEC cppVar_83715 = ROM.rd(cppVar_83714);
	bool cppVar_83717 = (cppVar_83715 == 208);
	BIT_VEC cppVar_83718 = PC + 1;
	cppVar_83718 = (cppVar_83718 & cppMask_un_16_);
	BIT_VEC cppVar_83719 = ROM.rd(cppVar_83718);
	bool cppVar_83721 = (cppVar_83719 == 224);
	BIT_VEC cppVar_83722 = PC + 1;
	cppVar_83722 = (cppVar_83722 & cppMask_un_16_);
	BIT_VEC cppVar_83723 = ROM.rd(cppVar_83722);
	bool cppVar_83725 = (cppVar_83723 == 240);
	BIT_VEC cppVar_83727 = (cppVar_83725) ? B : 0;
	BIT_VEC cppVar_83728 = (cppVar_83721) ? ACC : cppVar_83727;
	BIT_VEC cppVar_83729 = (cppVar_83717) ? PSW : cppVar_83728;
	BIT_VEC cppVar_83730 = (cppVar_83713) ? IP : cppVar_83729;
	BIT_VEC cppVar_83731 = (cppVar_83709) ? P3 : cppVar_83730;
	BIT_VEC cppVar_83732 = (cppVar_83705) ? IE : cppVar_83731;
	BIT_VEC cppVar_83733 = (cppVar_83701) ? P2 : cppVar_83732;
	BIT_VEC cppVar_83734 = (cppVar_83697) ? SBUF : cppVar_83733;
	BIT_VEC cppVar_83735 = (cppVar_83693) ? SCON : cppVar_83734;
	BIT_VEC cppVar_83736 = (cppVar_83689) ? P1 : cppVar_83735;
	BIT_VEC cppVar_83737 = (cppVar_83685) ? TH1 : cppVar_83736;
	BIT_VEC cppVar_83738 = (cppVar_83681) ? TL1 : cppVar_83737;
	BIT_VEC cppVar_83739 = (cppVar_83677) ? TH0 : cppVar_83738;
	BIT_VEC cppVar_83740 = (cppVar_83673) ? TL0 : cppVar_83739;
	BIT_VEC cppVar_83741 = (cppVar_83669) ? TMOD : cppVar_83740;
	BIT_VEC cppVar_83742 = (cppVar_83665) ? TCON : cppVar_83741;
	BIT_VEC cppVar_83743 = (cppVar_83661) ? PCON : cppVar_83742;
	BIT_VEC cppVar_83744 = (cppVar_83657) ? DPH : cppVar_83743;
	BIT_VEC cppVar_83745 = (cppVar_83653) ? DPL : cppVar_83744;
	BIT_VEC cppVar_83746 = (cppVar_83649) ? SP : cppVar_83745;
	BIT_VEC cppVar_83747 = (cppVar_83645) ? P0 : cppVar_83746;
	BIT_VEC cppVar_83748 = (cppVar_83638) ? cppVar_83641 : cppVar_83747;
	BIT_VEC cppVar_83749 = cppVar_83748 ^ ACC;
	BIT_VEC cppVar_83750 = (cppVar_83633) ? cppVar_83749 : TMOD;
	BIT_VEC cppVar_83751 = ROM.rd(PC);
	bool cppVar_83753 = (cppVar_83751 == 83);
	BIT_VEC cppVar_83755 = PC + 1;
	cppVar_83755 = (cppVar_83755 & cppMask_un_16_);
	BIT_VEC cppVar_83756 = ROM.rd(cppVar_83755);
	bool cppVar_83758 = (cppVar_83756 == 137);
	BIT_VEC cppVar_83759 = PC + 1;
	cppVar_83759 = (cppVar_83759 & cppMask_un_16_);
	BIT_VEC cppVar_83760 = ROM.rd(cppVar_83759);
	BIT_VEC cppVar_83761 = (cppVar_83760 >> 7) & cppMask_un_1_;
	bool cppVar_83763 = (cppVar_83761 == 0);
	BIT_VEC cppVar_83764 = PC + 1;
	cppVar_83764 = (cppVar_83764 & cppMask_un_16_);
	BIT_VEC cppVar_83765 = ROM.rd(cppVar_83764);
	BIT_VEC cppVar_83766 = IRAM.rd(cppVar_83765);
	BIT_VEC cppVar_83767 = PC + 1;
	cppVar_83767 = (cppVar_83767 & cppMask_un_16_);
	BIT_VEC cppVar_83768 = ROM.rd(cppVar_83767);
	bool cppVar_83770 = (cppVar_83768 == 128);
	BIT_VEC cppVar_83771 = PC + 1;
	cppVar_83771 = (cppVar_83771 & cppMask_un_16_);
	BIT_VEC cppVar_83772 = ROM.rd(cppVar_83771);
	bool cppVar_83774 = (cppVar_83772 == 129);
	BIT_VEC cppVar_83775 = PC + 1;
	cppVar_83775 = (cppVar_83775 & cppMask_un_16_);
	BIT_VEC cppVar_83776 = ROM.rd(cppVar_83775);
	bool cppVar_83778 = (cppVar_83776 == 130);
	BIT_VEC cppVar_83779 = PC + 1;
	cppVar_83779 = (cppVar_83779 & cppMask_un_16_);
	BIT_VEC cppVar_83780 = ROM.rd(cppVar_83779);
	bool cppVar_83782 = (cppVar_83780 == 131);
	BIT_VEC cppVar_83783 = PC + 1;
	cppVar_83783 = (cppVar_83783 & cppMask_un_16_);
	BIT_VEC cppVar_83784 = ROM.rd(cppVar_83783);
	bool cppVar_83786 = (cppVar_83784 == 135);
	BIT_VEC cppVar_83787 = PC + 1;
	cppVar_83787 = (cppVar_83787 & cppMask_un_16_);
	BIT_VEC cppVar_83788 = ROM.rd(cppVar_83787);
	bool cppVar_83790 = (cppVar_83788 == 136);
	BIT_VEC cppVar_83791 = PC + 1;
	cppVar_83791 = (cppVar_83791 & cppMask_un_16_);
	BIT_VEC cppVar_83792 = ROM.rd(cppVar_83791);
	bool cppVar_83794 = (cppVar_83792 == 137);
	BIT_VEC cppVar_83795 = PC + 1;
	cppVar_83795 = (cppVar_83795 & cppMask_un_16_);
	BIT_VEC cppVar_83796 = ROM.rd(cppVar_83795);
	bool cppVar_83798 = (cppVar_83796 == 138);
	BIT_VEC cppVar_83799 = PC + 1;
	cppVar_83799 = (cppVar_83799 & cppMask_un_16_);
	BIT_VEC cppVar_83800 = ROM.rd(cppVar_83799);
	bool cppVar_83802 = (cppVar_83800 == 140);
	BIT_VEC cppVar_83803 = PC + 1;
	cppVar_83803 = (cppVar_83803 & cppMask_un_16_);
	BIT_VEC cppVar_83804 = ROM.rd(cppVar_83803);
	bool cppVar_83806 = (cppVar_83804 == 139);
	BIT_VEC cppVar_83807 = PC + 1;
	cppVar_83807 = (cppVar_83807 & cppMask_un_16_);
	BIT_VEC cppVar_83808 = ROM.rd(cppVar_83807);
	bool cppVar_83810 = (cppVar_83808 == 141);
	BIT_VEC cppVar_83811 = PC + 1;
	cppVar_83811 = (cppVar_83811 & cppMask_un_16_);
	BIT_VEC cppVar_83812 = ROM.rd(cppVar_83811);
	bool cppVar_83814 = (cppVar_83812 == 144);
	BIT_VEC cppVar_83815 = PC + 1;
	cppVar_83815 = (cppVar_83815 & cppMask_un_16_);
	BIT_VEC cppVar_83816 = ROM.rd(cppVar_83815);
	bool cppVar_83818 = (cppVar_83816 == 152);
	BIT_VEC cppVar_83819 = PC + 1;
	cppVar_83819 = (cppVar_83819 & cppMask_un_16_);
	BIT_VEC cppVar_83820 = ROM.rd(cppVar_83819);
	bool cppVar_83822 = (cppVar_83820 == 153);
	BIT_VEC cppVar_83823 = PC + 1;
	cppVar_83823 = (cppVar_83823 & cppMask_un_16_);
	BIT_VEC cppVar_83824 = ROM.rd(cppVar_83823);
	bool cppVar_83826 = (cppVar_83824 == 160);
	BIT_VEC cppVar_83827 = PC + 1;
	cppVar_83827 = (cppVar_83827 & cppMask_un_16_);
	BIT_VEC cppVar_83828 = ROM.rd(cppVar_83827);
	bool cppVar_83830 = (cppVar_83828 == 168);
	BIT_VEC cppVar_83831 = PC + 1;
	cppVar_83831 = (cppVar_83831 & cppMask_un_16_);
	BIT_VEC cppVar_83832 = ROM.rd(cppVar_83831);
	bool cppVar_83834 = (cppVar_83832 == 176);
	BIT_VEC cppVar_83835 = PC + 1;
	cppVar_83835 = (cppVar_83835 & cppMask_un_16_);
	BIT_VEC cppVar_83836 = ROM.rd(cppVar_83835);
	bool cppVar_83838 = (cppVar_83836 == 184);
	BIT_VEC cppVar_83839 = PC + 1;
	cppVar_83839 = (cppVar_83839 & cppMask_un_16_);
	BIT_VEC cppVar_83840 = ROM.rd(cppVar_83839);
	bool cppVar_83842 = (cppVar_83840 == 208);
	BIT_VEC cppVar_83843 = PC + 1;
	cppVar_83843 = (cppVar_83843 & cppMask_un_16_);
	BIT_VEC cppVar_83844 = ROM.rd(cppVar_83843);
	bool cppVar_83846 = (cppVar_83844 == 224);
	BIT_VEC cppVar_83847 = PC + 1;
	cppVar_83847 = (cppVar_83847 & cppMask_un_16_);
	BIT_VEC cppVar_83848 = ROM.rd(cppVar_83847);
	bool cppVar_83850 = (cppVar_83848 == 240);
	BIT_VEC cppVar_83852 = (cppVar_83850) ? B : 0;
	BIT_VEC cppVar_83853 = (cppVar_83846) ? ACC : cppVar_83852;
	BIT_VEC cppVar_83854 = (cppVar_83842) ? PSW : cppVar_83853;
	BIT_VEC cppVar_83855 = (cppVar_83838) ? IP : cppVar_83854;
	BIT_VEC cppVar_83856 = (cppVar_83834) ? P3 : cppVar_83855;
	BIT_VEC cppVar_83857 = (cppVar_83830) ? IE : cppVar_83856;
	BIT_VEC cppVar_83858 = (cppVar_83826) ? P2 : cppVar_83857;
	BIT_VEC cppVar_83859 = (cppVar_83822) ? SBUF : cppVar_83858;
	BIT_VEC cppVar_83860 = (cppVar_83818) ? SCON : cppVar_83859;
	BIT_VEC cppVar_83861 = (cppVar_83814) ? P1 : cppVar_83860;
	BIT_VEC cppVar_83862 = (cppVar_83810) ? TH1 : cppVar_83861;
	BIT_VEC cppVar_83863 = (cppVar_83806) ? TL1 : cppVar_83862;
	BIT_VEC cppVar_83864 = (cppVar_83802) ? TH0 : cppVar_83863;
	BIT_VEC cppVar_83865 = (cppVar_83798) ? TL0 : cppVar_83864;
	BIT_VEC cppVar_83866 = (cppVar_83794) ? TMOD : cppVar_83865;
	BIT_VEC cppVar_83867 = (cppVar_83790) ? TCON : cppVar_83866;
	BIT_VEC cppVar_83868 = (cppVar_83786) ? PCON : cppVar_83867;
	BIT_VEC cppVar_83869 = (cppVar_83782) ? DPH : cppVar_83868;
	BIT_VEC cppVar_83870 = (cppVar_83778) ? DPL : cppVar_83869;
	BIT_VEC cppVar_83871 = (cppVar_83774) ? SP : cppVar_83870;
	BIT_VEC cppVar_83872 = (cppVar_83770) ? P0 : cppVar_83871;
	BIT_VEC cppVar_83873 = (cppVar_83763) ? cppVar_83766 : cppVar_83872;
	BIT_VEC cppVar_83875 = PC + 2;
	cppVar_83875 = (cppVar_83875 & cppMask_un_16_);
	BIT_VEC cppVar_83876 = ROM.rd(cppVar_83875);
	BIT_VEC cppVar_83877 = cppVar_83873 & cppVar_83876;
	BIT_VEC cppVar_83878 = (cppVar_83758) ? cppVar_83877 : TMOD;
	BIT_VEC cppVar_83879 = ROM.rd(PC);
	bool cppVar_83881 = (cppVar_83879 == 82);
	BIT_VEC cppVar_83883 = PC + 1;
	cppVar_83883 = (cppVar_83883 & cppMask_un_16_);
	BIT_VEC cppVar_83884 = ROM.rd(cppVar_83883);
	bool cppVar_83886 = (cppVar_83884 == 137);
	BIT_VEC cppVar_83887 = PC + 1;
	cppVar_83887 = (cppVar_83887 & cppMask_un_16_);
	BIT_VEC cppVar_83888 = ROM.rd(cppVar_83887);
	BIT_VEC cppVar_83889 = (cppVar_83888 >> 7) & cppMask_un_1_;
	bool cppVar_83891 = (cppVar_83889 == 0);
	BIT_VEC cppVar_83892 = PC + 1;
	cppVar_83892 = (cppVar_83892 & cppMask_un_16_);
	BIT_VEC cppVar_83893 = ROM.rd(cppVar_83892);
	BIT_VEC cppVar_83894 = IRAM.rd(cppVar_83893);
	BIT_VEC cppVar_83895 = PC + 1;
	cppVar_83895 = (cppVar_83895 & cppMask_un_16_);
	BIT_VEC cppVar_83896 = ROM.rd(cppVar_83895);
	bool cppVar_83898 = (cppVar_83896 == 128);
	BIT_VEC cppVar_83899 = PC + 1;
	cppVar_83899 = (cppVar_83899 & cppMask_un_16_);
	BIT_VEC cppVar_83900 = ROM.rd(cppVar_83899);
	bool cppVar_83902 = (cppVar_83900 == 129);
	BIT_VEC cppVar_83903 = PC + 1;
	cppVar_83903 = (cppVar_83903 & cppMask_un_16_);
	BIT_VEC cppVar_83904 = ROM.rd(cppVar_83903);
	bool cppVar_83906 = (cppVar_83904 == 130);
	BIT_VEC cppVar_83907 = PC + 1;
	cppVar_83907 = (cppVar_83907 & cppMask_un_16_);
	BIT_VEC cppVar_83908 = ROM.rd(cppVar_83907);
	bool cppVar_83910 = (cppVar_83908 == 131);
	BIT_VEC cppVar_83911 = PC + 1;
	cppVar_83911 = (cppVar_83911 & cppMask_un_16_);
	BIT_VEC cppVar_83912 = ROM.rd(cppVar_83911);
	bool cppVar_83914 = (cppVar_83912 == 135);
	BIT_VEC cppVar_83915 = PC + 1;
	cppVar_83915 = (cppVar_83915 & cppMask_un_16_);
	BIT_VEC cppVar_83916 = ROM.rd(cppVar_83915);
	bool cppVar_83918 = (cppVar_83916 == 136);
	BIT_VEC cppVar_83919 = PC + 1;
	cppVar_83919 = (cppVar_83919 & cppMask_un_16_);
	BIT_VEC cppVar_83920 = ROM.rd(cppVar_83919);
	bool cppVar_83922 = (cppVar_83920 == 137);
	BIT_VEC cppVar_83923 = PC + 1;
	cppVar_83923 = (cppVar_83923 & cppMask_un_16_);
	BIT_VEC cppVar_83924 = ROM.rd(cppVar_83923);
	bool cppVar_83926 = (cppVar_83924 == 138);
	BIT_VEC cppVar_83927 = PC + 1;
	cppVar_83927 = (cppVar_83927 & cppMask_un_16_);
	BIT_VEC cppVar_83928 = ROM.rd(cppVar_83927);
	bool cppVar_83930 = (cppVar_83928 == 140);
	BIT_VEC cppVar_83931 = PC + 1;
	cppVar_83931 = (cppVar_83931 & cppMask_un_16_);
	BIT_VEC cppVar_83932 = ROM.rd(cppVar_83931);
	bool cppVar_83934 = (cppVar_83932 == 139);
	BIT_VEC cppVar_83935 = PC + 1;
	cppVar_83935 = (cppVar_83935 & cppMask_un_16_);
	BIT_VEC cppVar_83936 = ROM.rd(cppVar_83935);
	bool cppVar_83938 = (cppVar_83936 == 141);
	BIT_VEC cppVar_83939 = PC + 1;
	cppVar_83939 = (cppVar_83939 & cppMask_un_16_);
	BIT_VEC cppVar_83940 = ROM.rd(cppVar_83939);
	bool cppVar_83942 = (cppVar_83940 == 144);
	BIT_VEC cppVar_83943 = PC + 1;
	cppVar_83943 = (cppVar_83943 & cppMask_un_16_);
	BIT_VEC cppVar_83944 = ROM.rd(cppVar_83943);
	bool cppVar_83946 = (cppVar_83944 == 152);
	BIT_VEC cppVar_83947 = PC + 1;
	cppVar_83947 = (cppVar_83947 & cppMask_un_16_);
	BIT_VEC cppVar_83948 = ROM.rd(cppVar_83947);
	bool cppVar_83950 = (cppVar_83948 == 153);
	BIT_VEC cppVar_83951 = PC + 1;
	cppVar_83951 = (cppVar_83951 & cppMask_un_16_);
	BIT_VEC cppVar_83952 = ROM.rd(cppVar_83951);
	bool cppVar_83954 = (cppVar_83952 == 160);
	BIT_VEC cppVar_83955 = PC + 1;
	cppVar_83955 = (cppVar_83955 & cppMask_un_16_);
	BIT_VEC cppVar_83956 = ROM.rd(cppVar_83955);
	bool cppVar_83958 = (cppVar_83956 == 168);
	BIT_VEC cppVar_83959 = PC + 1;
	cppVar_83959 = (cppVar_83959 & cppMask_un_16_);
	BIT_VEC cppVar_83960 = ROM.rd(cppVar_83959);
	bool cppVar_83962 = (cppVar_83960 == 176);
	BIT_VEC cppVar_83963 = PC + 1;
	cppVar_83963 = (cppVar_83963 & cppMask_un_16_);
	BIT_VEC cppVar_83964 = ROM.rd(cppVar_83963);
	bool cppVar_83966 = (cppVar_83964 == 184);
	BIT_VEC cppVar_83967 = PC + 1;
	cppVar_83967 = (cppVar_83967 & cppMask_un_16_);
	BIT_VEC cppVar_83968 = ROM.rd(cppVar_83967);
	bool cppVar_83970 = (cppVar_83968 == 208);
	BIT_VEC cppVar_83971 = PC + 1;
	cppVar_83971 = (cppVar_83971 & cppMask_un_16_);
	BIT_VEC cppVar_83972 = ROM.rd(cppVar_83971);
	bool cppVar_83974 = (cppVar_83972 == 224);
	BIT_VEC cppVar_83975 = PC + 1;
	cppVar_83975 = (cppVar_83975 & cppMask_un_16_);
	BIT_VEC cppVar_83976 = ROM.rd(cppVar_83975);
	bool cppVar_83978 = (cppVar_83976 == 240);
	BIT_VEC cppVar_83980 = (cppVar_83978) ? B : 0;
	BIT_VEC cppVar_83981 = (cppVar_83974) ? ACC : cppVar_83980;
	BIT_VEC cppVar_83982 = (cppVar_83970) ? PSW : cppVar_83981;
	BIT_VEC cppVar_83983 = (cppVar_83966) ? IP : cppVar_83982;
	BIT_VEC cppVar_83984 = (cppVar_83962) ? P3 : cppVar_83983;
	BIT_VEC cppVar_83985 = (cppVar_83958) ? IE : cppVar_83984;
	BIT_VEC cppVar_83986 = (cppVar_83954) ? P2 : cppVar_83985;
	BIT_VEC cppVar_83987 = (cppVar_83950) ? SBUF : cppVar_83986;
	BIT_VEC cppVar_83988 = (cppVar_83946) ? SCON : cppVar_83987;
	BIT_VEC cppVar_83989 = (cppVar_83942) ? P1 : cppVar_83988;
	BIT_VEC cppVar_83990 = (cppVar_83938) ? TH1 : cppVar_83989;
	BIT_VEC cppVar_83991 = (cppVar_83934) ? TL1 : cppVar_83990;
	BIT_VEC cppVar_83992 = (cppVar_83930) ? TH0 : cppVar_83991;
	BIT_VEC cppVar_83993 = (cppVar_83926) ? TL0 : cppVar_83992;
	BIT_VEC cppVar_83994 = (cppVar_83922) ? TMOD : cppVar_83993;
	BIT_VEC cppVar_83995 = (cppVar_83918) ? TCON : cppVar_83994;
	BIT_VEC cppVar_83996 = (cppVar_83914) ? PCON : cppVar_83995;
	BIT_VEC cppVar_83997 = (cppVar_83910) ? DPH : cppVar_83996;
	BIT_VEC cppVar_83998 = (cppVar_83906) ? DPL : cppVar_83997;
	BIT_VEC cppVar_83999 = (cppVar_83902) ? SP : cppVar_83998;
	BIT_VEC cppVar_84000 = (cppVar_83898) ? P0 : cppVar_83999;
	BIT_VEC cppVar_84001 = (cppVar_83891) ? cppVar_83894 : cppVar_84000;
	BIT_VEC cppVar_84002 = cppVar_84001 & ACC;
	BIT_VEC cppVar_84003 = (cppVar_83886) ? cppVar_84002 : TMOD;
	BIT_VEC cppVar_84004 = ROM.rd(PC);
	bool cppVar_84006 = (cppVar_84004 == 67);
	BIT_VEC cppVar_84008 = PC + 1;
	cppVar_84008 = (cppVar_84008 & cppMask_un_16_);
	BIT_VEC cppVar_84009 = ROM.rd(cppVar_84008);
	bool cppVar_84011 = (cppVar_84009 == 137);
	BIT_VEC cppVar_84012 = PC + 1;
	cppVar_84012 = (cppVar_84012 & cppMask_un_16_);
	BIT_VEC cppVar_84013 = ROM.rd(cppVar_84012);
	BIT_VEC cppVar_84014 = (cppVar_84013 >> 7) & cppMask_un_1_;
	bool cppVar_84016 = (cppVar_84014 == 0);
	BIT_VEC cppVar_84017 = PC + 1;
	cppVar_84017 = (cppVar_84017 & cppMask_un_16_);
	BIT_VEC cppVar_84018 = ROM.rd(cppVar_84017);
	BIT_VEC cppVar_84019 = IRAM.rd(cppVar_84018);
	BIT_VEC cppVar_84020 = PC + 1;
	cppVar_84020 = (cppVar_84020 & cppMask_un_16_);
	BIT_VEC cppVar_84021 = ROM.rd(cppVar_84020);
	bool cppVar_84023 = (cppVar_84021 == 128);
	BIT_VEC cppVar_84024 = PC + 1;
	cppVar_84024 = (cppVar_84024 & cppMask_un_16_);
	BIT_VEC cppVar_84025 = ROM.rd(cppVar_84024);
	bool cppVar_84027 = (cppVar_84025 == 129);
	BIT_VEC cppVar_84028 = PC + 1;
	cppVar_84028 = (cppVar_84028 & cppMask_un_16_);
	BIT_VEC cppVar_84029 = ROM.rd(cppVar_84028);
	bool cppVar_84031 = (cppVar_84029 == 130);
	BIT_VEC cppVar_84032 = PC + 1;
	cppVar_84032 = (cppVar_84032 & cppMask_un_16_);
	BIT_VEC cppVar_84033 = ROM.rd(cppVar_84032);
	bool cppVar_84035 = (cppVar_84033 == 131);
	BIT_VEC cppVar_84036 = PC + 1;
	cppVar_84036 = (cppVar_84036 & cppMask_un_16_);
	BIT_VEC cppVar_84037 = ROM.rd(cppVar_84036);
	bool cppVar_84039 = (cppVar_84037 == 135);
	BIT_VEC cppVar_84040 = PC + 1;
	cppVar_84040 = (cppVar_84040 & cppMask_un_16_);
	BIT_VEC cppVar_84041 = ROM.rd(cppVar_84040);
	bool cppVar_84043 = (cppVar_84041 == 136);
	BIT_VEC cppVar_84044 = PC + 1;
	cppVar_84044 = (cppVar_84044 & cppMask_un_16_);
	BIT_VEC cppVar_84045 = ROM.rd(cppVar_84044);
	bool cppVar_84047 = (cppVar_84045 == 137);
	BIT_VEC cppVar_84048 = PC + 1;
	cppVar_84048 = (cppVar_84048 & cppMask_un_16_);
	BIT_VEC cppVar_84049 = ROM.rd(cppVar_84048);
	bool cppVar_84051 = (cppVar_84049 == 138);
	BIT_VEC cppVar_84052 = PC + 1;
	cppVar_84052 = (cppVar_84052 & cppMask_un_16_);
	BIT_VEC cppVar_84053 = ROM.rd(cppVar_84052);
	bool cppVar_84055 = (cppVar_84053 == 140);
	BIT_VEC cppVar_84056 = PC + 1;
	cppVar_84056 = (cppVar_84056 & cppMask_un_16_);
	BIT_VEC cppVar_84057 = ROM.rd(cppVar_84056);
	bool cppVar_84059 = (cppVar_84057 == 139);
	BIT_VEC cppVar_84060 = PC + 1;
	cppVar_84060 = (cppVar_84060 & cppMask_un_16_);
	BIT_VEC cppVar_84061 = ROM.rd(cppVar_84060);
	bool cppVar_84063 = (cppVar_84061 == 141);
	BIT_VEC cppVar_84064 = PC + 1;
	cppVar_84064 = (cppVar_84064 & cppMask_un_16_);
	BIT_VEC cppVar_84065 = ROM.rd(cppVar_84064);
	bool cppVar_84067 = (cppVar_84065 == 144);
	BIT_VEC cppVar_84068 = PC + 1;
	cppVar_84068 = (cppVar_84068 & cppMask_un_16_);
	BIT_VEC cppVar_84069 = ROM.rd(cppVar_84068);
	bool cppVar_84071 = (cppVar_84069 == 152);
	BIT_VEC cppVar_84072 = PC + 1;
	cppVar_84072 = (cppVar_84072 & cppMask_un_16_);
	BIT_VEC cppVar_84073 = ROM.rd(cppVar_84072);
	bool cppVar_84075 = (cppVar_84073 == 153);
	BIT_VEC cppVar_84076 = PC + 1;
	cppVar_84076 = (cppVar_84076 & cppMask_un_16_);
	BIT_VEC cppVar_84077 = ROM.rd(cppVar_84076);
	bool cppVar_84079 = (cppVar_84077 == 160);
	BIT_VEC cppVar_84080 = PC + 1;
	cppVar_84080 = (cppVar_84080 & cppMask_un_16_);
	BIT_VEC cppVar_84081 = ROM.rd(cppVar_84080);
	bool cppVar_84083 = (cppVar_84081 == 168);
	BIT_VEC cppVar_84084 = PC + 1;
	cppVar_84084 = (cppVar_84084 & cppMask_un_16_);
	BIT_VEC cppVar_84085 = ROM.rd(cppVar_84084);
	bool cppVar_84087 = (cppVar_84085 == 176);
	BIT_VEC cppVar_84088 = PC + 1;
	cppVar_84088 = (cppVar_84088 & cppMask_un_16_);
	BIT_VEC cppVar_84089 = ROM.rd(cppVar_84088);
	bool cppVar_84091 = (cppVar_84089 == 184);
	BIT_VEC cppVar_84092 = PC + 1;
	cppVar_84092 = (cppVar_84092 & cppMask_un_16_);
	BIT_VEC cppVar_84093 = ROM.rd(cppVar_84092);
	bool cppVar_84095 = (cppVar_84093 == 208);
	BIT_VEC cppVar_84096 = PC + 1;
	cppVar_84096 = (cppVar_84096 & cppMask_un_16_);
	BIT_VEC cppVar_84097 = ROM.rd(cppVar_84096);
	bool cppVar_84099 = (cppVar_84097 == 224);
	BIT_VEC cppVar_84100 = PC + 1;
	cppVar_84100 = (cppVar_84100 & cppMask_un_16_);
	BIT_VEC cppVar_84101 = ROM.rd(cppVar_84100);
	bool cppVar_84103 = (cppVar_84101 == 240);
	BIT_VEC cppVar_84105 = (cppVar_84103) ? B : 0;
	BIT_VEC cppVar_84106 = (cppVar_84099) ? ACC : cppVar_84105;
	BIT_VEC cppVar_84107 = (cppVar_84095) ? PSW : cppVar_84106;
	BIT_VEC cppVar_84108 = (cppVar_84091) ? IP : cppVar_84107;
	BIT_VEC cppVar_84109 = (cppVar_84087) ? P3 : cppVar_84108;
	BIT_VEC cppVar_84110 = (cppVar_84083) ? IE : cppVar_84109;
	BIT_VEC cppVar_84111 = (cppVar_84079) ? P2 : cppVar_84110;
	BIT_VEC cppVar_84112 = (cppVar_84075) ? SBUF : cppVar_84111;
	BIT_VEC cppVar_84113 = (cppVar_84071) ? SCON : cppVar_84112;
	BIT_VEC cppVar_84114 = (cppVar_84067) ? P1 : cppVar_84113;
	BIT_VEC cppVar_84115 = (cppVar_84063) ? TH1 : cppVar_84114;
	BIT_VEC cppVar_84116 = (cppVar_84059) ? TL1 : cppVar_84115;
	BIT_VEC cppVar_84117 = (cppVar_84055) ? TH0 : cppVar_84116;
	BIT_VEC cppVar_84118 = (cppVar_84051) ? TL0 : cppVar_84117;
	BIT_VEC cppVar_84119 = (cppVar_84047) ? TMOD : cppVar_84118;
	BIT_VEC cppVar_84120 = (cppVar_84043) ? TCON : cppVar_84119;
	BIT_VEC cppVar_84121 = (cppVar_84039) ? PCON : cppVar_84120;
	BIT_VEC cppVar_84122 = (cppVar_84035) ? DPH : cppVar_84121;
	BIT_VEC cppVar_84123 = (cppVar_84031) ? DPL : cppVar_84122;
	BIT_VEC cppVar_84124 = (cppVar_84027) ? SP : cppVar_84123;
	BIT_VEC cppVar_84125 = (cppVar_84023) ? P0 : cppVar_84124;
	BIT_VEC cppVar_84126 = (cppVar_84016) ? cppVar_84019 : cppVar_84125;
	BIT_VEC cppVar_84128 = PC + 2;
	cppVar_84128 = (cppVar_84128 & cppMask_un_16_);
	BIT_VEC cppVar_84129 = ROM.rd(cppVar_84128);
	BIT_VEC cppVar_84130 = cppVar_84126 | cppVar_84129;
	BIT_VEC cppVar_84131 = (cppVar_84011) ? cppVar_84130 : TMOD;
	BIT_VEC cppVar_84132 = ROM.rd(PC);
	bool cppVar_84134 = (cppVar_84132 == 66);
	BIT_VEC cppVar_84136 = PC + 1;
	cppVar_84136 = (cppVar_84136 & cppMask_un_16_);
	BIT_VEC cppVar_84137 = ROM.rd(cppVar_84136);
	bool cppVar_84139 = (cppVar_84137 == 137);
	BIT_VEC cppVar_84140 = PC + 1;
	cppVar_84140 = (cppVar_84140 & cppMask_un_16_);
	BIT_VEC cppVar_84141 = ROM.rd(cppVar_84140);
	BIT_VEC cppVar_84142 = (cppVar_84141 >> 7) & cppMask_un_1_;
	bool cppVar_84144 = (cppVar_84142 == 0);
	BIT_VEC cppVar_84145 = PC + 1;
	cppVar_84145 = (cppVar_84145 & cppMask_un_16_);
	BIT_VEC cppVar_84146 = ROM.rd(cppVar_84145);
	BIT_VEC cppVar_84147 = IRAM.rd(cppVar_84146);
	BIT_VEC cppVar_84148 = PC + 1;
	cppVar_84148 = (cppVar_84148 & cppMask_un_16_);
	BIT_VEC cppVar_84149 = ROM.rd(cppVar_84148);
	bool cppVar_84151 = (cppVar_84149 == 128);
	BIT_VEC cppVar_84152 = PC + 1;
	cppVar_84152 = (cppVar_84152 & cppMask_un_16_);
	BIT_VEC cppVar_84153 = ROM.rd(cppVar_84152);
	bool cppVar_84155 = (cppVar_84153 == 129);
	BIT_VEC cppVar_84156 = PC + 1;
	cppVar_84156 = (cppVar_84156 & cppMask_un_16_);
	BIT_VEC cppVar_84157 = ROM.rd(cppVar_84156);
	bool cppVar_84159 = (cppVar_84157 == 130);
	BIT_VEC cppVar_84160 = PC + 1;
	cppVar_84160 = (cppVar_84160 & cppMask_un_16_);
	BIT_VEC cppVar_84161 = ROM.rd(cppVar_84160);
	bool cppVar_84163 = (cppVar_84161 == 131);
	BIT_VEC cppVar_84164 = PC + 1;
	cppVar_84164 = (cppVar_84164 & cppMask_un_16_);
	BIT_VEC cppVar_84165 = ROM.rd(cppVar_84164);
	bool cppVar_84167 = (cppVar_84165 == 135);
	BIT_VEC cppVar_84168 = PC + 1;
	cppVar_84168 = (cppVar_84168 & cppMask_un_16_);
	BIT_VEC cppVar_84169 = ROM.rd(cppVar_84168);
	bool cppVar_84171 = (cppVar_84169 == 136);
	BIT_VEC cppVar_84172 = PC + 1;
	cppVar_84172 = (cppVar_84172 & cppMask_un_16_);
	BIT_VEC cppVar_84173 = ROM.rd(cppVar_84172);
	bool cppVar_84175 = (cppVar_84173 == 137);
	BIT_VEC cppVar_84176 = PC + 1;
	cppVar_84176 = (cppVar_84176 & cppMask_un_16_);
	BIT_VEC cppVar_84177 = ROM.rd(cppVar_84176);
	bool cppVar_84179 = (cppVar_84177 == 138);
	BIT_VEC cppVar_84180 = PC + 1;
	cppVar_84180 = (cppVar_84180 & cppMask_un_16_);
	BIT_VEC cppVar_84181 = ROM.rd(cppVar_84180);
	bool cppVar_84183 = (cppVar_84181 == 140);
	BIT_VEC cppVar_84184 = PC + 1;
	cppVar_84184 = (cppVar_84184 & cppMask_un_16_);
	BIT_VEC cppVar_84185 = ROM.rd(cppVar_84184);
	bool cppVar_84187 = (cppVar_84185 == 139);
	BIT_VEC cppVar_84188 = PC + 1;
	cppVar_84188 = (cppVar_84188 & cppMask_un_16_);
	BIT_VEC cppVar_84189 = ROM.rd(cppVar_84188);
	bool cppVar_84191 = (cppVar_84189 == 141);
	BIT_VEC cppVar_84192 = PC + 1;
	cppVar_84192 = (cppVar_84192 & cppMask_un_16_);
	BIT_VEC cppVar_84193 = ROM.rd(cppVar_84192);
	bool cppVar_84195 = (cppVar_84193 == 144);
	BIT_VEC cppVar_84196 = PC + 1;
	cppVar_84196 = (cppVar_84196 & cppMask_un_16_);
	BIT_VEC cppVar_84197 = ROM.rd(cppVar_84196);
	bool cppVar_84199 = (cppVar_84197 == 152);
	BIT_VEC cppVar_84200 = PC + 1;
	cppVar_84200 = (cppVar_84200 & cppMask_un_16_);
	BIT_VEC cppVar_84201 = ROM.rd(cppVar_84200);
	bool cppVar_84203 = (cppVar_84201 == 153);
	BIT_VEC cppVar_84204 = PC + 1;
	cppVar_84204 = (cppVar_84204 & cppMask_un_16_);
	BIT_VEC cppVar_84205 = ROM.rd(cppVar_84204);
	bool cppVar_84207 = (cppVar_84205 == 160);
	BIT_VEC cppVar_84208 = PC + 1;
	cppVar_84208 = (cppVar_84208 & cppMask_un_16_);
	BIT_VEC cppVar_84209 = ROM.rd(cppVar_84208);
	bool cppVar_84211 = (cppVar_84209 == 168);
	BIT_VEC cppVar_84212 = PC + 1;
	cppVar_84212 = (cppVar_84212 & cppMask_un_16_);
	BIT_VEC cppVar_84213 = ROM.rd(cppVar_84212);
	bool cppVar_84215 = (cppVar_84213 == 176);
	BIT_VEC cppVar_84216 = PC + 1;
	cppVar_84216 = (cppVar_84216 & cppMask_un_16_);
	BIT_VEC cppVar_84217 = ROM.rd(cppVar_84216);
	bool cppVar_84219 = (cppVar_84217 == 184);
	BIT_VEC cppVar_84220 = PC + 1;
	cppVar_84220 = (cppVar_84220 & cppMask_un_16_);
	BIT_VEC cppVar_84221 = ROM.rd(cppVar_84220);
	bool cppVar_84223 = (cppVar_84221 == 208);
	BIT_VEC cppVar_84224 = PC + 1;
	cppVar_84224 = (cppVar_84224 & cppMask_un_16_);
	BIT_VEC cppVar_84225 = ROM.rd(cppVar_84224);
	bool cppVar_84227 = (cppVar_84225 == 224);
	BIT_VEC cppVar_84228 = PC + 1;
	cppVar_84228 = (cppVar_84228 & cppMask_un_16_);
	BIT_VEC cppVar_84229 = ROM.rd(cppVar_84228);
	bool cppVar_84231 = (cppVar_84229 == 240);
	BIT_VEC cppVar_84233 = (cppVar_84231) ? B : 0;
	BIT_VEC cppVar_84234 = (cppVar_84227) ? ACC : cppVar_84233;
	BIT_VEC cppVar_84235 = (cppVar_84223) ? PSW : cppVar_84234;
	BIT_VEC cppVar_84236 = (cppVar_84219) ? IP : cppVar_84235;
	BIT_VEC cppVar_84237 = (cppVar_84215) ? P3 : cppVar_84236;
	BIT_VEC cppVar_84238 = (cppVar_84211) ? IE : cppVar_84237;
	BIT_VEC cppVar_84239 = (cppVar_84207) ? P2 : cppVar_84238;
	BIT_VEC cppVar_84240 = (cppVar_84203) ? SBUF : cppVar_84239;
	BIT_VEC cppVar_84241 = (cppVar_84199) ? SCON : cppVar_84240;
	BIT_VEC cppVar_84242 = (cppVar_84195) ? P1 : cppVar_84241;
	BIT_VEC cppVar_84243 = (cppVar_84191) ? TH1 : cppVar_84242;
	BIT_VEC cppVar_84244 = (cppVar_84187) ? TL1 : cppVar_84243;
	BIT_VEC cppVar_84245 = (cppVar_84183) ? TH0 : cppVar_84244;
	BIT_VEC cppVar_84246 = (cppVar_84179) ? TL0 : cppVar_84245;
	BIT_VEC cppVar_84247 = (cppVar_84175) ? TMOD : cppVar_84246;
	BIT_VEC cppVar_84248 = (cppVar_84171) ? TCON : cppVar_84247;
	BIT_VEC cppVar_84249 = (cppVar_84167) ? PCON : cppVar_84248;
	BIT_VEC cppVar_84250 = (cppVar_84163) ? DPH : cppVar_84249;
	BIT_VEC cppVar_84251 = (cppVar_84159) ? DPL : cppVar_84250;
	BIT_VEC cppVar_84252 = (cppVar_84155) ? SP : cppVar_84251;
	BIT_VEC cppVar_84253 = (cppVar_84151) ? P0 : cppVar_84252;
	BIT_VEC cppVar_84254 = (cppVar_84144) ? cppVar_84147 : cppVar_84253;
	BIT_VEC cppVar_84255 = cppVar_84254 | ACC;
	BIT_VEC cppVar_84256 = (cppVar_84139) ? cppVar_84255 : TMOD;
	BIT_VEC cppVar_84257 = ROM.rd(PC);
	bool cppVar_84259 = (cppVar_84257 == 213);
	BIT_VEC cppVar_84260 = ROM.rd(PC);
	bool cppVar_84262 = (cppVar_84260 == 21);
	bool cppVar_84263 = cppVar_84259 || cppVar_84262;
	BIT_VEC cppVar_84265 = PC + 1;
	cppVar_84265 = (cppVar_84265 & cppMask_un_16_);
	BIT_VEC cppVar_84266 = ROM.rd(cppVar_84265);
	bool cppVar_84268 = (cppVar_84266 == 137);
	BIT_VEC cppVar_84269 = PC + 1;
	cppVar_84269 = (cppVar_84269 & cppMask_un_16_);
	BIT_VEC cppVar_84270 = ROM.rd(cppVar_84269);
	BIT_VEC cppVar_84271 = (cppVar_84270 >> 7) & cppMask_un_1_;
	bool cppVar_84273 = (cppVar_84271 == 0);
	BIT_VEC cppVar_84274 = PC + 1;
	cppVar_84274 = (cppVar_84274 & cppMask_un_16_);
	BIT_VEC cppVar_84275 = ROM.rd(cppVar_84274);
	BIT_VEC cppVar_84276 = IRAM.rd(cppVar_84275);
	BIT_VEC cppVar_84277 = PC + 1;
	cppVar_84277 = (cppVar_84277 & cppMask_un_16_);
	BIT_VEC cppVar_84278 = ROM.rd(cppVar_84277);
	bool cppVar_84280 = (cppVar_84278 == 128);
	BIT_VEC cppVar_84281 = PC + 1;
	cppVar_84281 = (cppVar_84281 & cppMask_un_16_);
	BIT_VEC cppVar_84282 = ROM.rd(cppVar_84281);
	bool cppVar_84284 = (cppVar_84282 == 129);
	BIT_VEC cppVar_84285 = PC + 1;
	cppVar_84285 = (cppVar_84285 & cppMask_un_16_);
	BIT_VEC cppVar_84286 = ROM.rd(cppVar_84285);
	bool cppVar_84288 = (cppVar_84286 == 130);
	BIT_VEC cppVar_84289 = PC + 1;
	cppVar_84289 = (cppVar_84289 & cppMask_un_16_);
	BIT_VEC cppVar_84290 = ROM.rd(cppVar_84289);
	bool cppVar_84292 = (cppVar_84290 == 131);
	BIT_VEC cppVar_84293 = PC + 1;
	cppVar_84293 = (cppVar_84293 & cppMask_un_16_);
	BIT_VEC cppVar_84294 = ROM.rd(cppVar_84293);
	bool cppVar_84296 = (cppVar_84294 == 135);
	BIT_VEC cppVar_84297 = PC + 1;
	cppVar_84297 = (cppVar_84297 & cppMask_un_16_);
	BIT_VEC cppVar_84298 = ROM.rd(cppVar_84297);
	bool cppVar_84300 = (cppVar_84298 == 136);
	BIT_VEC cppVar_84301 = PC + 1;
	cppVar_84301 = (cppVar_84301 & cppMask_un_16_);
	BIT_VEC cppVar_84302 = ROM.rd(cppVar_84301);
	bool cppVar_84304 = (cppVar_84302 == 137);
	BIT_VEC cppVar_84305 = PC + 1;
	cppVar_84305 = (cppVar_84305 & cppMask_un_16_);
	BIT_VEC cppVar_84306 = ROM.rd(cppVar_84305);
	bool cppVar_84308 = (cppVar_84306 == 138);
	BIT_VEC cppVar_84309 = PC + 1;
	cppVar_84309 = (cppVar_84309 & cppMask_un_16_);
	BIT_VEC cppVar_84310 = ROM.rd(cppVar_84309);
	bool cppVar_84312 = (cppVar_84310 == 140);
	BIT_VEC cppVar_84313 = PC + 1;
	cppVar_84313 = (cppVar_84313 & cppMask_un_16_);
	BIT_VEC cppVar_84314 = ROM.rd(cppVar_84313);
	bool cppVar_84316 = (cppVar_84314 == 139);
	BIT_VEC cppVar_84317 = PC + 1;
	cppVar_84317 = (cppVar_84317 & cppMask_un_16_);
	BIT_VEC cppVar_84318 = ROM.rd(cppVar_84317);
	bool cppVar_84320 = (cppVar_84318 == 141);
	BIT_VEC cppVar_84321 = PC + 1;
	cppVar_84321 = (cppVar_84321 & cppMask_un_16_);
	BIT_VEC cppVar_84322 = ROM.rd(cppVar_84321);
	bool cppVar_84324 = (cppVar_84322 == 144);
	BIT_VEC cppVar_84325 = PC + 1;
	cppVar_84325 = (cppVar_84325 & cppMask_un_16_);
	BIT_VEC cppVar_84326 = ROM.rd(cppVar_84325);
	bool cppVar_84328 = (cppVar_84326 == 152);
	BIT_VEC cppVar_84329 = PC + 1;
	cppVar_84329 = (cppVar_84329 & cppMask_un_16_);
	BIT_VEC cppVar_84330 = ROM.rd(cppVar_84329);
	bool cppVar_84332 = (cppVar_84330 == 153);
	BIT_VEC cppVar_84333 = PC + 1;
	cppVar_84333 = (cppVar_84333 & cppMask_un_16_);
	BIT_VEC cppVar_84334 = ROM.rd(cppVar_84333);
	bool cppVar_84336 = (cppVar_84334 == 160);
	BIT_VEC cppVar_84337 = PC + 1;
	cppVar_84337 = (cppVar_84337 & cppMask_un_16_);
	BIT_VEC cppVar_84338 = ROM.rd(cppVar_84337);
	bool cppVar_84340 = (cppVar_84338 == 168);
	BIT_VEC cppVar_84341 = PC + 1;
	cppVar_84341 = (cppVar_84341 & cppMask_un_16_);
	BIT_VEC cppVar_84342 = ROM.rd(cppVar_84341);
	bool cppVar_84344 = (cppVar_84342 == 176);
	BIT_VEC cppVar_84345 = PC + 1;
	cppVar_84345 = (cppVar_84345 & cppMask_un_16_);
	BIT_VEC cppVar_84346 = ROM.rd(cppVar_84345);
	bool cppVar_84348 = (cppVar_84346 == 184);
	BIT_VEC cppVar_84349 = PC + 1;
	cppVar_84349 = (cppVar_84349 & cppMask_un_16_);
	BIT_VEC cppVar_84350 = ROM.rd(cppVar_84349);
	bool cppVar_84352 = (cppVar_84350 == 208);
	BIT_VEC cppVar_84353 = PC + 1;
	cppVar_84353 = (cppVar_84353 & cppMask_un_16_);
	BIT_VEC cppVar_84354 = ROM.rd(cppVar_84353);
	bool cppVar_84356 = (cppVar_84354 == 224);
	BIT_VEC cppVar_84357 = PC + 1;
	cppVar_84357 = (cppVar_84357 & cppMask_un_16_);
	BIT_VEC cppVar_84358 = ROM.rd(cppVar_84357);
	bool cppVar_84360 = (cppVar_84358 == 240);
	BIT_VEC cppVar_84362 = (cppVar_84360) ? B : 0;
	BIT_VEC cppVar_84363 = (cppVar_84356) ? ACC : cppVar_84362;
	BIT_VEC cppVar_84364 = (cppVar_84352) ? PSW : cppVar_84363;
	BIT_VEC cppVar_84365 = (cppVar_84348) ? IP : cppVar_84364;
	BIT_VEC cppVar_84366 = (cppVar_84344) ? P3 : cppVar_84365;
	BIT_VEC cppVar_84367 = (cppVar_84340) ? IE : cppVar_84366;
	BIT_VEC cppVar_84368 = (cppVar_84336) ? P2 : cppVar_84367;
	BIT_VEC cppVar_84369 = (cppVar_84332) ? SBUF : cppVar_84368;
	BIT_VEC cppVar_84370 = (cppVar_84328) ? SCON : cppVar_84369;
	BIT_VEC cppVar_84371 = (cppVar_84324) ? P1 : cppVar_84370;
	BIT_VEC cppVar_84372 = (cppVar_84320) ? TH1 : cppVar_84371;
	BIT_VEC cppVar_84373 = (cppVar_84316) ? TL1 : cppVar_84372;
	BIT_VEC cppVar_84374 = (cppVar_84312) ? TH0 : cppVar_84373;
	BIT_VEC cppVar_84375 = (cppVar_84308) ? TL0 : cppVar_84374;
	BIT_VEC cppVar_84376 = (cppVar_84304) ? TMOD : cppVar_84375;
	BIT_VEC cppVar_84377 = (cppVar_84300) ? TCON : cppVar_84376;
	BIT_VEC cppVar_84378 = (cppVar_84296) ? PCON : cppVar_84377;
	BIT_VEC cppVar_84379 = (cppVar_84292) ? DPH : cppVar_84378;
	BIT_VEC cppVar_84380 = (cppVar_84288) ? DPL : cppVar_84379;
	BIT_VEC cppVar_84381 = (cppVar_84284) ? SP : cppVar_84380;
	BIT_VEC cppVar_84382 = (cppVar_84280) ? P0 : cppVar_84381;
	BIT_VEC cppVar_84383 = (cppVar_84273) ? cppVar_84276 : cppVar_84382;
	BIT_VEC cppVar_84385 = cppVar_84383 - 1;
	cppVar_84385 = (cppVar_84385 & cppMask_un_8_);
	BIT_VEC cppVar_84386 = (cppVar_84268) ? cppVar_84385 : TMOD;
	BIT_VEC cppVar_84387 = ROM.rd(PC);
	bool cppVar_84389 = (cppVar_84387 == 5);
	BIT_VEC cppVar_84391 = PC + 1;
	cppVar_84391 = (cppVar_84391 & cppMask_un_16_);
	BIT_VEC cppVar_84392 = ROM.rd(cppVar_84391);
	bool cppVar_84394 = (cppVar_84392 == 137);
	BIT_VEC cppVar_84395 = PC + 1;
	cppVar_84395 = (cppVar_84395 & cppMask_un_16_);
	BIT_VEC cppVar_84396 = ROM.rd(cppVar_84395);
	BIT_VEC cppVar_84397 = (cppVar_84396 >> 7) & cppMask_un_1_;
	bool cppVar_84399 = (cppVar_84397 == 0);
	BIT_VEC cppVar_84400 = PC + 1;
	cppVar_84400 = (cppVar_84400 & cppMask_un_16_);
	BIT_VEC cppVar_84401 = ROM.rd(cppVar_84400);
	BIT_VEC cppVar_84402 = IRAM.rd(cppVar_84401);
	BIT_VEC cppVar_84403 = PC + 1;
	cppVar_84403 = (cppVar_84403 & cppMask_un_16_);
	BIT_VEC cppVar_84404 = ROM.rd(cppVar_84403);
	bool cppVar_84406 = (cppVar_84404 == 128);
	BIT_VEC cppVar_84407 = PC + 1;
	cppVar_84407 = (cppVar_84407 & cppMask_un_16_);
	BIT_VEC cppVar_84408 = ROM.rd(cppVar_84407);
	bool cppVar_84410 = (cppVar_84408 == 129);
	BIT_VEC cppVar_84411 = PC + 1;
	cppVar_84411 = (cppVar_84411 & cppMask_un_16_);
	BIT_VEC cppVar_84412 = ROM.rd(cppVar_84411);
	bool cppVar_84414 = (cppVar_84412 == 130);
	BIT_VEC cppVar_84415 = PC + 1;
	cppVar_84415 = (cppVar_84415 & cppMask_un_16_);
	BIT_VEC cppVar_84416 = ROM.rd(cppVar_84415);
	bool cppVar_84418 = (cppVar_84416 == 131);
	BIT_VEC cppVar_84419 = PC + 1;
	cppVar_84419 = (cppVar_84419 & cppMask_un_16_);
	BIT_VEC cppVar_84420 = ROM.rd(cppVar_84419);
	bool cppVar_84422 = (cppVar_84420 == 135);
	BIT_VEC cppVar_84423 = PC + 1;
	cppVar_84423 = (cppVar_84423 & cppMask_un_16_);
	BIT_VEC cppVar_84424 = ROM.rd(cppVar_84423);
	bool cppVar_84426 = (cppVar_84424 == 136);
	BIT_VEC cppVar_84427 = PC + 1;
	cppVar_84427 = (cppVar_84427 & cppMask_un_16_);
	BIT_VEC cppVar_84428 = ROM.rd(cppVar_84427);
	bool cppVar_84430 = (cppVar_84428 == 137);
	BIT_VEC cppVar_84431 = PC + 1;
	cppVar_84431 = (cppVar_84431 & cppMask_un_16_);
	BIT_VEC cppVar_84432 = ROM.rd(cppVar_84431);
	bool cppVar_84434 = (cppVar_84432 == 138);
	BIT_VEC cppVar_84435 = PC + 1;
	cppVar_84435 = (cppVar_84435 & cppMask_un_16_);
	BIT_VEC cppVar_84436 = ROM.rd(cppVar_84435);
	bool cppVar_84438 = (cppVar_84436 == 140);
	BIT_VEC cppVar_84439 = PC + 1;
	cppVar_84439 = (cppVar_84439 & cppMask_un_16_);
	BIT_VEC cppVar_84440 = ROM.rd(cppVar_84439);
	bool cppVar_84442 = (cppVar_84440 == 139);
	BIT_VEC cppVar_84443 = PC + 1;
	cppVar_84443 = (cppVar_84443 & cppMask_un_16_);
	BIT_VEC cppVar_84444 = ROM.rd(cppVar_84443);
	bool cppVar_84446 = (cppVar_84444 == 141);
	BIT_VEC cppVar_84447 = PC + 1;
	cppVar_84447 = (cppVar_84447 & cppMask_un_16_);
	BIT_VEC cppVar_84448 = ROM.rd(cppVar_84447);
	bool cppVar_84450 = (cppVar_84448 == 144);
	BIT_VEC cppVar_84451 = PC + 1;
	cppVar_84451 = (cppVar_84451 & cppMask_un_16_);
	BIT_VEC cppVar_84452 = ROM.rd(cppVar_84451);
	bool cppVar_84454 = (cppVar_84452 == 152);
	BIT_VEC cppVar_84455 = PC + 1;
	cppVar_84455 = (cppVar_84455 & cppMask_un_16_);
	BIT_VEC cppVar_84456 = ROM.rd(cppVar_84455);
	bool cppVar_84458 = (cppVar_84456 == 153);
	BIT_VEC cppVar_84459 = PC + 1;
	cppVar_84459 = (cppVar_84459 & cppMask_un_16_);
	BIT_VEC cppVar_84460 = ROM.rd(cppVar_84459);
	bool cppVar_84462 = (cppVar_84460 == 160);
	BIT_VEC cppVar_84463 = PC + 1;
	cppVar_84463 = (cppVar_84463 & cppMask_un_16_);
	BIT_VEC cppVar_84464 = ROM.rd(cppVar_84463);
	bool cppVar_84466 = (cppVar_84464 == 168);
	BIT_VEC cppVar_84467 = PC + 1;
	cppVar_84467 = (cppVar_84467 & cppMask_un_16_);
	BIT_VEC cppVar_84468 = ROM.rd(cppVar_84467);
	bool cppVar_84470 = (cppVar_84468 == 176);
	BIT_VEC cppVar_84471 = PC + 1;
	cppVar_84471 = (cppVar_84471 & cppMask_un_16_);
	BIT_VEC cppVar_84472 = ROM.rd(cppVar_84471);
	bool cppVar_84474 = (cppVar_84472 == 184);
	BIT_VEC cppVar_84475 = PC + 1;
	cppVar_84475 = (cppVar_84475 & cppMask_un_16_);
	BIT_VEC cppVar_84476 = ROM.rd(cppVar_84475);
	bool cppVar_84478 = (cppVar_84476 == 208);
	BIT_VEC cppVar_84479 = PC + 1;
	cppVar_84479 = (cppVar_84479 & cppMask_un_16_);
	BIT_VEC cppVar_84480 = ROM.rd(cppVar_84479);
	bool cppVar_84482 = (cppVar_84480 == 224);
	BIT_VEC cppVar_84483 = PC + 1;
	cppVar_84483 = (cppVar_84483 & cppMask_un_16_);
	BIT_VEC cppVar_84484 = ROM.rd(cppVar_84483);
	bool cppVar_84486 = (cppVar_84484 == 240);
	BIT_VEC cppVar_84488 = (cppVar_84486) ? B : 0;
	BIT_VEC cppVar_84489 = (cppVar_84482) ? ACC : cppVar_84488;
	BIT_VEC cppVar_84490 = (cppVar_84478) ? PSW : cppVar_84489;
	BIT_VEC cppVar_84491 = (cppVar_84474) ? IP : cppVar_84490;
	BIT_VEC cppVar_84492 = (cppVar_84470) ? P3 : cppVar_84491;
	BIT_VEC cppVar_84493 = (cppVar_84466) ? IE : cppVar_84492;
	BIT_VEC cppVar_84494 = (cppVar_84462) ? P2 : cppVar_84493;
	BIT_VEC cppVar_84495 = (cppVar_84458) ? SBUF : cppVar_84494;
	BIT_VEC cppVar_84496 = (cppVar_84454) ? SCON : cppVar_84495;
	BIT_VEC cppVar_84497 = (cppVar_84450) ? P1 : cppVar_84496;
	BIT_VEC cppVar_84498 = (cppVar_84446) ? TH1 : cppVar_84497;
	BIT_VEC cppVar_84499 = (cppVar_84442) ? TL1 : cppVar_84498;
	BIT_VEC cppVar_84500 = (cppVar_84438) ? TH0 : cppVar_84499;
	BIT_VEC cppVar_84501 = (cppVar_84434) ? TL0 : cppVar_84500;
	BIT_VEC cppVar_84502 = (cppVar_84430) ? TMOD : cppVar_84501;
	BIT_VEC cppVar_84503 = (cppVar_84426) ? TCON : cppVar_84502;
	BIT_VEC cppVar_84504 = (cppVar_84422) ? PCON : cppVar_84503;
	BIT_VEC cppVar_84505 = (cppVar_84418) ? DPH : cppVar_84504;
	BIT_VEC cppVar_84506 = (cppVar_84414) ? DPL : cppVar_84505;
	BIT_VEC cppVar_84507 = (cppVar_84410) ? SP : cppVar_84506;
	BIT_VEC cppVar_84508 = (cppVar_84406) ? P0 : cppVar_84507;
	BIT_VEC cppVar_84509 = (cppVar_84399) ? cppVar_84402 : cppVar_84508;
	BIT_VEC cppVar_84511 = cppVar_84509 + 1;
	cppVar_84511 = (cppVar_84511 & cppMask_un_8_);
	BIT_VEC cppVar_84512 = (cppVar_84394) ? cppVar_84511 : TMOD;
	BIT_VEC cppVar_84513 = (cppVar_84389) ? cppVar_84512 : TMOD;
	BIT_VEC cppVar_84514 = (cppVar_84263) ? cppVar_84386 : cppVar_84513;
	BIT_VEC cppVar_84515 = (cppVar_84134) ? cppVar_84256 : cppVar_84514;
	BIT_VEC cppVar_84516 = (cppVar_84006) ? cppVar_84131 : cppVar_84515;
	BIT_VEC cppVar_84517 = (cppVar_83881) ? cppVar_84003 : cppVar_84516;
	BIT_VEC cppVar_84518 = (cppVar_83753) ? cppVar_83878 : cppVar_84517;
	BIT_VEC cppVar_84519 = (cppVar_83628) ? cppVar_83750 : cppVar_84518;
	BIT_VEC cppVar_84520 = (cppVar_83500) ? cppVar_83625 : cppVar_84519;
	BIT_VEC cppVar_84521 = (cppVar_83488) ? cppVar_83497 : cppVar_84520;
	BIT_VEC cppVar_84522 = (cppVar_83363) ? cppVar_83485 : cppVar_84521;
	BIT_VEC cppVar_84523 = (cppVar_83347) ? cppVar_83360 : cppVar_84522;
	BIT_VEC cppVar_84524 = (cppVar_83331) ? cppVar_83344 : cppVar_84523;
	BIT_VEC cppVar_84525 = (cppVar_83182) ? cppVar_83328 : cppVar_84524;
	BIT_VEC cppVar_84526 = (cppVar_83033) ? cppVar_83179 : cppVar_84525;
	BIT_VEC cppVar_84527 = (cppVar_82884) ? cppVar_83030 : cppVar_84526;
	BIT_VEC cppVar_84528 = (cppVar_82735) ? cppVar_82881 : cppVar_84527;
	BIT_VEC cppVar_84529 = (cppVar_82586) ? cppVar_82732 : cppVar_84528;
	BIT_VEC cppVar_84530 = (cppVar_82437) ? cppVar_82583 : cppVar_84529;
	BIT_VEC cppVar_84531 = (cppVar_82288) ? cppVar_82434 : cppVar_84530;
	BIT_VEC cppVar_84532 = (cppVar_82139) ? cppVar_82285 : cppVar_84531;
	BIT_VEC cppVar_84533 = (cppVar_82130) ? cppVar_82136 : cppVar_84532;
	BIT_VEC cppVar_84534 = (cppVar_82116) ? cppVar_82123 : cppVar_84533;
	return cppVar_84534;
}
