#include "common.hpp"
#include "model_oc8051_class.hpp"

BIT_VEC model_oc8051::cppUpdateFun_TH0()
{
	BIT_VEC cppVar_72426 = ROM.rd(PC);
	bool cppVar_72428 = (cppVar_72426 == 208);
	BIT_VEC cppVar_72430 = PC + 1;
	cppVar_72430 = (cppVar_72430 & cppMask_un_16_);
	BIT_VEC cppVar_72431 = ROM.rd(cppVar_72430);
	bool cppVar_72433 = (cppVar_72431 == 140);
	BIT_VEC cppVar_72434 = IRAM.rd(SP);
	BIT_VEC cppVar_72435 = (cppVar_72433) ? cppVar_72434 : TH0;
	BIT_VEC cppVar_72436 = ROM.rd(PC);
	bool cppVar_72438 = (cppVar_72436 == 245);
	BIT_VEC cppVar_72439 = ROM.rd(PC);
	bool cppVar_72441 = (cppVar_72439 == 197);
	bool cppVar_72442 = cppVar_72438 || cppVar_72441;
	BIT_VEC cppVar_72444 = PC + 1;
	cppVar_72444 = (cppVar_72444 & cppMask_un_16_);
	BIT_VEC cppVar_72445 = ROM.rd(cppVar_72444);
	bool cppVar_72447 = (cppVar_72445 == 140);
	BIT_VEC cppVar_72448 = (cppVar_72447) ? ACC : TH0;
	BIT_VEC cppVar_72449 = ROM.rd(PC);
	bool cppVar_72451 = (cppVar_72449 == 143);
	BIT_VEC cppVar_72453 = PC + 1;
	cppVar_72453 = (cppVar_72453 & cppMask_un_16_);
	BIT_VEC cppVar_72454 = ROM.rd(cppVar_72453);
	bool cppVar_72456 = (cppVar_72454 == 140);
	BIT_VEC cppVar_72458 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72460 = (cppVar_72458 << 3) | 7;
	cppVar_72460 = (cppVar_72460 & cppMask_un_5_);
	BIT_VEC cppVar_72461 = (0 << 5) | cppVar_72460;
	cppVar_72461 = (cppVar_72461 & cppMask_un_8_);
	BIT_VEC cppVar_72462 = (cppVar_72461 >> 7) & cppMask_un_1_;
	bool cppVar_72464 = (cppVar_72462 == 0);
	BIT_VEC cppVar_72465 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72466 = (cppVar_72465 << 3) | 7;
	cppVar_72466 = (cppVar_72466 & cppMask_un_5_);
	BIT_VEC cppVar_72467 = (0 << 5) | cppVar_72466;
	cppVar_72467 = (cppVar_72467 & cppMask_un_8_);
	BIT_VEC cppVar_72468 = IRAM.rd(cppVar_72467);
	BIT_VEC cppVar_72469 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72470 = (cppVar_72469 << 3) | 7;
	cppVar_72470 = (cppVar_72470 & cppMask_un_5_);
	BIT_VEC cppVar_72471 = (0 << 5) | cppVar_72470;
	cppVar_72471 = (cppVar_72471 & cppMask_un_8_);
	bool cppVar_72473 = (cppVar_72471 == 128);
	BIT_VEC cppVar_72474 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72475 = (cppVar_72474 << 3) | 7;
	cppVar_72475 = (cppVar_72475 & cppMask_un_5_);
	BIT_VEC cppVar_72476 = (0 << 5) | cppVar_72475;
	cppVar_72476 = (cppVar_72476 & cppMask_un_8_);
	bool cppVar_72478 = (cppVar_72476 == 129);
	BIT_VEC cppVar_72479 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72480 = (cppVar_72479 << 3) | 7;
	cppVar_72480 = (cppVar_72480 & cppMask_un_5_);
	BIT_VEC cppVar_72481 = (0 << 5) | cppVar_72480;
	cppVar_72481 = (cppVar_72481 & cppMask_un_8_);
	bool cppVar_72483 = (cppVar_72481 == 130);
	BIT_VEC cppVar_72484 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72485 = (cppVar_72484 << 3) | 7;
	cppVar_72485 = (cppVar_72485 & cppMask_un_5_);
	BIT_VEC cppVar_72486 = (0 << 5) | cppVar_72485;
	cppVar_72486 = (cppVar_72486 & cppMask_un_8_);
	bool cppVar_72488 = (cppVar_72486 == 131);
	BIT_VEC cppVar_72489 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72490 = (cppVar_72489 << 3) | 7;
	cppVar_72490 = (cppVar_72490 & cppMask_un_5_);
	BIT_VEC cppVar_72491 = (0 << 5) | cppVar_72490;
	cppVar_72491 = (cppVar_72491 & cppMask_un_8_);
	bool cppVar_72493 = (cppVar_72491 == 135);
	BIT_VEC cppVar_72494 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72495 = (cppVar_72494 << 3) | 7;
	cppVar_72495 = (cppVar_72495 & cppMask_un_5_);
	BIT_VEC cppVar_72496 = (0 << 5) | cppVar_72495;
	cppVar_72496 = (cppVar_72496 & cppMask_un_8_);
	bool cppVar_72498 = (cppVar_72496 == 136);
	BIT_VEC cppVar_72499 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72500 = (cppVar_72499 << 3) | 7;
	cppVar_72500 = (cppVar_72500 & cppMask_un_5_);
	BIT_VEC cppVar_72501 = (0 << 5) | cppVar_72500;
	cppVar_72501 = (cppVar_72501 & cppMask_un_8_);
	bool cppVar_72503 = (cppVar_72501 == 137);
	BIT_VEC cppVar_72504 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72505 = (cppVar_72504 << 3) | 7;
	cppVar_72505 = (cppVar_72505 & cppMask_un_5_);
	BIT_VEC cppVar_72506 = (0 << 5) | cppVar_72505;
	cppVar_72506 = (cppVar_72506 & cppMask_un_8_);
	bool cppVar_72508 = (cppVar_72506 == 138);
	BIT_VEC cppVar_72509 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72510 = (cppVar_72509 << 3) | 7;
	cppVar_72510 = (cppVar_72510 & cppMask_un_5_);
	BIT_VEC cppVar_72511 = (0 << 5) | cppVar_72510;
	cppVar_72511 = (cppVar_72511 & cppMask_un_8_);
	bool cppVar_72513 = (cppVar_72511 == 140);
	BIT_VEC cppVar_72514 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72515 = (cppVar_72514 << 3) | 7;
	cppVar_72515 = (cppVar_72515 & cppMask_un_5_);
	BIT_VEC cppVar_72516 = (0 << 5) | cppVar_72515;
	cppVar_72516 = (cppVar_72516 & cppMask_un_8_);
	bool cppVar_72518 = (cppVar_72516 == 139);
	BIT_VEC cppVar_72519 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72520 = (cppVar_72519 << 3) | 7;
	cppVar_72520 = (cppVar_72520 & cppMask_un_5_);
	BIT_VEC cppVar_72521 = (0 << 5) | cppVar_72520;
	cppVar_72521 = (cppVar_72521 & cppMask_un_8_);
	bool cppVar_72523 = (cppVar_72521 == 141);
	BIT_VEC cppVar_72524 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72525 = (cppVar_72524 << 3) | 7;
	cppVar_72525 = (cppVar_72525 & cppMask_un_5_);
	BIT_VEC cppVar_72526 = (0 << 5) | cppVar_72525;
	cppVar_72526 = (cppVar_72526 & cppMask_un_8_);
	bool cppVar_72528 = (cppVar_72526 == 144);
	BIT_VEC cppVar_72529 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72530 = (cppVar_72529 << 3) | 7;
	cppVar_72530 = (cppVar_72530 & cppMask_un_5_);
	BIT_VEC cppVar_72531 = (0 << 5) | cppVar_72530;
	cppVar_72531 = (cppVar_72531 & cppMask_un_8_);
	bool cppVar_72533 = (cppVar_72531 == 152);
	BIT_VEC cppVar_72534 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72535 = (cppVar_72534 << 3) | 7;
	cppVar_72535 = (cppVar_72535 & cppMask_un_5_);
	BIT_VEC cppVar_72536 = (0 << 5) | cppVar_72535;
	cppVar_72536 = (cppVar_72536 & cppMask_un_8_);
	bool cppVar_72538 = (cppVar_72536 == 153);
	BIT_VEC cppVar_72539 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72540 = (cppVar_72539 << 3) | 7;
	cppVar_72540 = (cppVar_72540 & cppMask_un_5_);
	BIT_VEC cppVar_72541 = (0 << 5) | cppVar_72540;
	cppVar_72541 = (cppVar_72541 & cppMask_un_8_);
	bool cppVar_72543 = (cppVar_72541 == 160);
	BIT_VEC cppVar_72544 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72545 = (cppVar_72544 << 3) | 7;
	cppVar_72545 = (cppVar_72545 & cppMask_un_5_);
	BIT_VEC cppVar_72546 = (0 << 5) | cppVar_72545;
	cppVar_72546 = (cppVar_72546 & cppMask_un_8_);
	bool cppVar_72548 = (cppVar_72546 == 168);
	BIT_VEC cppVar_72549 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72550 = (cppVar_72549 << 3) | 7;
	cppVar_72550 = (cppVar_72550 & cppMask_un_5_);
	BIT_VEC cppVar_72551 = (0 << 5) | cppVar_72550;
	cppVar_72551 = (cppVar_72551 & cppMask_un_8_);
	bool cppVar_72553 = (cppVar_72551 == 176);
	BIT_VEC cppVar_72554 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72555 = (cppVar_72554 << 3) | 7;
	cppVar_72555 = (cppVar_72555 & cppMask_un_5_);
	BIT_VEC cppVar_72556 = (0 << 5) | cppVar_72555;
	cppVar_72556 = (cppVar_72556 & cppMask_un_8_);
	bool cppVar_72558 = (cppVar_72556 == 184);
	BIT_VEC cppVar_72559 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72560 = (cppVar_72559 << 3) | 7;
	cppVar_72560 = (cppVar_72560 & cppMask_un_5_);
	BIT_VEC cppVar_72561 = (0 << 5) | cppVar_72560;
	cppVar_72561 = (cppVar_72561 & cppMask_un_8_);
	bool cppVar_72563 = (cppVar_72561 == 208);
	BIT_VEC cppVar_72564 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72565 = (cppVar_72564 << 3) | 7;
	cppVar_72565 = (cppVar_72565 & cppMask_un_5_);
	BIT_VEC cppVar_72566 = (0 << 5) | cppVar_72565;
	cppVar_72566 = (cppVar_72566 & cppMask_un_8_);
	bool cppVar_72568 = (cppVar_72566 == 224);
	BIT_VEC cppVar_72569 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72570 = (cppVar_72569 << 3) | 7;
	cppVar_72570 = (cppVar_72570 & cppMask_un_5_);
	BIT_VEC cppVar_72571 = (0 << 5) | cppVar_72570;
	cppVar_72571 = (cppVar_72571 & cppMask_un_8_);
	bool cppVar_72573 = (cppVar_72571 == 240);
	BIT_VEC cppVar_72575 = (cppVar_72573) ? B : 0;
	BIT_VEC cppVar_72576 = (cppVar_72568) ? ACC : cppVar_72575;
	BIT_VEC cppVar_72577 = (cppVar_72563) ? PSW : cppVar_72576;
	BIT_VEC cppVar_72578 = (cppVar_72558) ? IP : cppVar_72577;
	BIT_VEC cppVar_72579 = (cppVar_72553) ? P3 : cppVar_72578;
	BIT_VEC cppVar_72580 = (cppVar_72548) ? IE : cppVar_72579;
	BIT_VEC cppVar_72581 = (cppVar_72543) ? P2 : cppVar_72580;
	BIT_VEC cppVar_72582 = (cppVar_72538) ? SBUF : cppVar_72581;
	BIT_VEC cppVar_72583 = (cppVar_72533) ? SCON : cppVar_72582;
	BIT_VEC cppVar_72584 = (cppVar_72528) ? P1 : cppVar_72583;
	BIT_VEC cppVar_72585 = (cppVar_72523) ? TH1 : cppVar_72584;
	BIT_VEC cppVar_72586 = (cppVar_72518) ? TL1 : cppVar_72585;
	BIT_VEC cppVar_72587 = (cppVar_72513) ? TH0 : cppVar_72586;
	BIT_VEC cppVar_72588 = (cppVar_72508) ? TL0 : cppVar_72587;
	BIT_VEC cppVar_72589 = (cppVar_72503) ? TMOD : cppVar_72588;
	BIT_VEC cppVar_72590 = (cppVar_72498) ? TCON : cppVar_72589;
	BIT_VEC cppVar_72591 = (cppVar_72493) ? PCON : cppVar_72590;
	BIT_VEC cppVar_72592 = (cppVar_72488) ? DPH : cppVar_72591;
	BIT_VEC cppVar_72593 = (cppVar_72483) ? DPL : cppVar_72592;
	BIT_VEC cppVar_72594 = (cppVar_72478) ? SP : cppVar_72593;
	BIT_VEC cppVar_72595 = (cppVar_72473) ? P0 : cppVar_72594;
	BIT_VEC cppVar_72596 = (cppVar_72464) ? cppVar_72468 : cppVar_72595;
	BIT_VEC cppVar_72597 = (cppVar_72456) ? cppVar_72596 : TH0;
	BIT_VEC cppVar_72598 = ROM.rd(PC);
	bool cppVar_72600 = (cppVar_72598 == 142);
	BIT_VEC cppVar_72602 = PC + 1;
	cppVar_72602 = (cppVar_72602 & cppMask_un_16_);
	BIT_VEC cppVar_72603 = ROM.rd(cppVar_72602);
	bool cppVar_72605 = (cppVar_72603 == 140);
	BIT_VEC cppVar_72607 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72609 = (cppVar_72607 << 3) | 6;
	cppVar_72609 = (cppVar_72609 & cppMask_un_5_);
	BIT_VEC cppVar_72610 = (0 << 5) | cppVar_72609;
	cppVar_72610 = (cppVar_72610 & cppMask_un_8_);
	BIT_VEC cppVar_72611 = (cppVar_72610 >> 7) & cppMask_un_1_;
	bool cppVar_72613 = (cppVar_72611 == 0);
	BIT_VEC cppVar_72614 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72615 = (cppVar_72614 << 3) | 6;
	cppVar_72615 = (cppVar_72615 & cppMask_un_5_);
	BIT_VEC cppVar_72616 = (0 << 5) | cppVar_72615;
	cppVar_72616 = (cppVar_72616 & cppMask_un_8_);
	BIT_VEC cppVar_72617 = IRAM.rd(cppVar_72616);
	BIT_VEC cppVar_72618 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72619 = (cppVar_72618 << 3) | 6;
	cppVar_72619 = (cppVar_72619 & cppMask_un_5_);
	BIT_VEC cppVar_72620 = (0 << 5) | cppVar_72619;
	cppVar_72620 = (cppVar_72620 & cppMask_un_8_);
	bool cppVar_72622 = (cppVar_72620 == 128);
	BIT_VEC cppVar_72623 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72624 = (cppVar_72623 << 3) | 6;
	cppVar_72624 = (cppVar_72624 & cppMask_un_5_);
	BIT_VEC cppVar_72625 = (0 << 5) | cppVar_72624;
	cppVar_72625 = (cppVar_72625 & cppMask_un_8_);
	bool cppVar_72627 = (cppVar_72625 == 129);
	BIT_VEC cppVar_72628 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72629 = (cppVar_72628 << 3) | 6;
	cppVar_72629 = (cppVar_72629 & cppMask_un_5_);
	BIT_VEC cppVar_72630 = (0 << 5) | cppVar_72629;
	cppVar_72630 = (cppVar_72630 & cppMask_un_8_);
	bool cppVar_72632 = (cppVar_72630 == 130);
	BIT_VEC cppVar_72633 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72634 = (cppVar_72633 << 3) | 6;
	cppVar_72634 = (cppVar_72634 & cppMask_un_5_);
	BIT_VEC cppVar_72635 = (0 << 5) | cppVar_72634;
	cppVar_72635 = (cppVar_72635 & cppMask_un_8_);
	bool cppVar_72637 = (cppVar_72635 == 131);
	BIT_VEC cppVar_72638 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72639 = (cppVar_72638 << 3) | 6;
	cppVar_72639 = (cppVar_72639 & cppMask_un_5_);
	BIT_VEC cppVar_72640 = (0 << 5) | cppVar_72639;
	cppVar_72640 = (cppVar_72640 & cppMask_un_8_);
	bool cppVar_72642 = (cppVar_72640 == 135);
	BIT_VEC cppVar_72643 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72644 = (cppVar_72643 << 3) | 6;
	cppVar_72644 = (cppVar_72644 & cppMask_un_5_);
	BIT_VEC cppVar_72645 = (0 << 5) | cppVar_72644;
	cppVar_72645 = (cppVar_72645 & cppMask_un_8_);
	bool cppVar_72647 = (cppVar_72645 == 136);
	BIT_VEC cppVar_72648 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72649 = (cppVar_72648 << 3) | 6;
	cppVar_72649 = (cppVar_72649 & cppMask_un_5_);
	BIT_VEC cppVar_72650 = (0 << 5) | cppVar_72649;
	cppVar_72650 = (cppVar_72650 & cppMask_un_8_);
	bool cppVar_72652 = (cppVar_72650 == 137);
	BIT_VEC cppVar_72653 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72654 = (cppVar_72653 << 3) | 6;
	cppVar_72654 = (cppVar_72654 & cppMask_un_5_);
	BIT_VEC cppVar_72655 = (0 << 5) | cppVar_72654;
	cppVar_72655 = (cppVar_72655 & cppMask_un_8_);
	bool cppVar_72657 = (cppVar_72655 == 138);
	BIT_VEC cppVar_72658 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72659 = (cppVar_72658 << 3) | 6;
	cppVar_72659 = (cppVar_72659 & cppMask_un_5_);
	BIT_VEC cppVar_72660 = (0 << 5) | cppVar_72659;
	cppVar_72660 = (cppVar_72660 & cppMask_un_8_);
	bool cppVar_72662 = (cppVar_72660 == 140);
	BIT_VEC cppVar_72663 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72664 = (cppVar_72663 << 3) | 6;
	cppVar_72664 = (cppVar_72664 & cppMask_un_5_);
	BIT_VEC cppVar_72665 = (0 << 5) | cppVar_72664;
	cppVar_72665 = (cppVar_72665 & cppMask_un_8_);
	bool cppVar_72667 = (cppVar_72665 == 139);
	BIT_VEC cppVar_72668 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72669 = (cppVar_72668 << 3) | 6;
	cppVar_72669 = (cppVar_72669 & cppMask_un_5_);
	BIT_VEC cppVar_72670 = (0 << 5) | cppVar_72669;
	cppVar_72670 = (cppVar_72670 & cppMask_un_8_);
	bool cppVar_72672 = (cppVar_72670 == 141);
	BIT_VEC cppVar_72673 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72674 = (cppVar_72673 << 3) | 6;
	cppVar_72674 = (cppVar_72674 & cppMask_un_5_);
	BIT_VEC cppVar_72675 = (0 << 5) | cppVar_72674;
	cppVar_72675 = (cppVar_72675 & cppMask_un_8_);
	bool cppVar_72677 = (cppVar_72675 == 144);
	BIT_VEC cppVar_72678 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72679 = (cppVar_72678 << 3) | 6;
	cppVar_72679 = (cppVar_72679 & cppMask_un_5_);
	BIT_VEC cppVar_72680 = (0 << 5) | cppVar_72679;
	cppVar_72680 = (cppVar_72680 & cppMask_un_8_);
	bool cppVar_72682 = (cppVar_72680 == 152);
	BIT_VEC cppVar_72683 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72684 = (cppVar_72683 << 3) | 6;
	cppVar_72684 = (cppVar_72684 & cppMask_un_5_);
	BIT_VEC cppVar_72685 = (0 << 5) | cppVar_72684;
	cppVar_72685 = (cppVar_72685 & cppMask_un_8_);
	bool cppVar_72687 = (cppVar_72685 == 153);
	BIT_VEC cppVar_72688 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72689 = (cppVar_72688 << 3) | 6;
	cppVar_72689 = (cppVar_72689 & cppMask_un_5_);
	BIT_VEC cppVar_72690 = (0 << 5) | cppVar_72689;
	cppVar_72690 = (cppVar_72690 & cppMask_un_8_);
	bool cppVar_72692 = (cppVar_72690 == 160);
	BIT_VEC cppVar_72693 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72694 = (cppVar_72693 << 3) | 6;
	cppVar_72694 = (cppVar_72694 & cppMask_un_5_);
	BIT_VEC cppVar_72695 = (0 << 5) | cppVar_72694;
	cppVar_72695 = (cppVar_72695 & cppMask_un_8_);
	bool cppVar_72697 = (cppVar_72695 == 168);
	BIT_VEC cppVar_72698 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72699 = (cppVar_72698 << 3) | 6;
	cppVar_72699 = (cppVar_72699 & cppMask_un_5_);
	BIT_VEC cppVar_72700 = (0 << 5) | cppVar_72699;
	cppVar_72700 = (cppVar_72700 & cppMask_un_8_);
	bool cppVar_72702 = (cppVar_72700 == 176);
	BIT_VEC cppVar_72703 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72704 = (cppVar_72703 << 3) | 6;
	cppVar_72704 = (cppVar_72704 & cppMask_un_5_);
	BIT_VEC cppVar_72705 = (0 << 5) | cppVar_72704;
	cppVar_72705 = (cppVar_72705 & cppMask_un_8_);
	bool cppVar_72707 = (cppVar_72705 == 184);
	BIT_VEC cppVar_72708 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72709 = (cppVar_72708 << 3) | 6;
	cppVar_72709 = (cppVar_72709 & cppMask_un_5_);
	BIT_VEC cppVar_72710 = (0 << 5) | cppVar_72709;
	cppVar_72710 = (cppVar_72710 & cppMask_un_8_);
	bool cppVar_72712 = (cppVar_72710 == 208);
	BIT_VEC cppVar_72713 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72714 = (cppVar_72713 << 3) | 6;
	cppVar_72714 = (cppVar_72714 & cppMask_un_5_);
	BIT_VEC cppVar_72715 = (0 << 5) | cppVar_72714;
	cppVar_72715 = (cppVar_72715 & cppMask_un_8_);
	bool cppVar_72717 = (cppVar_72715 == 224);
	BIT_VEC cppVar_72718 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72719 = (cppVar_72718 << 3) | 6;
	cppVar_72719 = (cppVar_72719 & cppMask_un_5_);
	BIT_VEC cppVar_72720 = (0 << 5) | cppVar_72719;
	cppVar_72720 = (cppVar_72720 & cppMask_un_8_);
	bool cppVar_72722 = (cppVar_72720 == 240);
	BIT_VEC cppVar_72724 = (cppVar_72722) ? B : 0;
	BIT_VEC cppVar_72725 = (cppVar_72717) ? ACC : cppVar_72724;
	BIT_VEC cppVar_72726 = (cppVar_72712) ? PSW : cppVar_72725;
	BIT_VEC cppVar_72727 = (cppVar_72707) ? IP : cppVar_72726;
	BIT_VEC cppVar_72728 = (cppVar_72702) ? P3 : cppVar_72727;
	BIT_VEC cppVar_72729 = (cppVar_72697) ? IE : cppVar_72728;
	BIT_VEC cppVar_72730 = (cppVar_72692) ? P2 : cppVar_72729;
	BIT_VEC cppVar_72731 = (cppVar_72687) ? SBUF : cppVar_72730;
	BIT_VEC cppVar_72732 = (cppVar_72682) ? SCON : cppVar_72731;
	BIT_VEC cppVar_72733 = (cppVar_72677) ? P1 : cppVar_72732;
	BIT_VEC cppVar_72734 = (cppVar_72672) ? TH1 : cppVar_72733;
	BIT_VEC cppVar_72735 = (cppVar_72667) ? TL1 : cppVar_72734;
	BIT_VEC cppVar_72736 = (cppVar_72662) ? TH0 : cppVar_72735;
	BIT_VEC cppVar_72737 = (cppVar_72657) ? TL0 : cppVar_72736;
	BIT_VEC cppVar_72738 = (cppVar_72652) ? TMOD : cppVar_72737;
	BIT_VEC cppVar_72739 = (cppVar_72647) ? TCON : cppVar_72738;
	BIT_VEC cppVar_72740 = (cppVar_72642) ? PCON : cppVar_72739;
	BIT_VEC cppVar_72741 = (cppVar_72637) ? DPH : cppVar_72740;
	BIT_VEC cppVar_72742 = (cppVar_72632) ? DPL : cppVar_72741;
	BIT_VEC cppVar_72743 = (cppVar_72627) ? SP : cppVar_72742;
	BIT_VEC cppVar_72744 = (cppVar_72622) ? P0 : cppVar_72743;
	BIT_VEC cppVar_72745 = (cppVar_72613) ? cppVar_72617 : cppVar_72744;
	BIT_VEC cppVar_72746 = (cppVar_72605) ? cppVar_72745 : TH0;
	BIT_VEC cppVar_72747 = ROM.rd(PC);
	bool cppVar_72749 = (cppVar_72747 == 141);
	BIT_VEC cppVar_72751 = PC + 1;
	cppVar_72751 = (cppVar_72751 & cppMask_un_16_);
	BIT_VEC cppVar_72752 = ROM.rd(cppVar_72751);
	bool cppVar_72754 = (cppVar_72752 == 140);
	BIT_VEC cppVar_72756 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72758 = (cppVar_72756 << 3) | 5;
	cppVar_72758 = (cppVar_72758 & cppMask_un_5_);
	BIT_VEC cppVar_72759 = (0 << 5) | cppVar_72758;
	cppVar_72759 = (cppVar_72759 & cppMask_un_8_);
	BIT_VEC cppVar_72760 = (cppVar_72759 >> 7) & cppMask_un_1_;
	bool cppVar_72762 = (cppVar_72760 == 0);
	BIT_VEC cppVar_72763 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72764 = (cppVar_72763 << 3) | 5;
	cppVar_72764 = (cppVar_72764 & cppMask_un_5_);
	BIT_VEC cppVar_72765 = (0 << 5) | cppVar_72764;
	cppVar_72765 = (cppVar_72765 & cppMask_un_8_);
	BIT_VEC cppVar_72766 = IRAM.rd(cppVar_72765);
	BIT_VEC cppVar_72767 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72768 = (cppVar_72767 << 3) | 5;
	cppVar_72768 = (cppVar_72768 & cppMask_un_5_);
	BIT_VEC cppVar_72769 = (0 << 5) | cppVar_72768;
	cppVar_72769 = (cppVar_72769 & cppMask_un_8_);
	bool cppVar_72771 = (cppVar_72769 == 128);
	BIT_VEC cppVar_72772 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72773 = (cppVar_72772 << 3) | 5;
	cppVar_72773 = (cppVar_72773 & cppMask_un_5_);
	BIT_VEC cppVar_72774 = (0 << 5) | cppVar_72773;
	cppVar_72774 = (cppVar_72774 & cppMask_un_8_);
	bool cppVar_72776 = (cppVar_72774 == 129);
	BIT_VEC cppVar_72777 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72778 = (cppVar_72777 << 3) | 5;
	cppVar_72778 = (cppVar_72778 & cppMask_un_5_);
	BIT_VEC cppVar_72779 = (0 << 5) | cppVar_72778;
	cppVar_72779 = (cppVar_72779 & cppMask_un_8_);
	bool cppVar_72781 = (cppVar_72779 == 130);
	BIT_VEC cppVar_72782 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72783 = (cppVar_72782 << 3) | 5;
	cppVar_72783 = (cppVar_72783 & cppMask_un_5_);
	BIT_VEC cppVar_72784 = (0 << 5) | cppVar_72783;
	cppVar_72784 = (cppVar_72784 & cppMask_un_8_);
	bool cppVar_72786 = (cppVar_72784 == 131);
	BIT_VEC cppVar_72787 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72788 = (cppVar_72787 << 3) | 5;
	cppVar_72788 = (cppVar_72788 & cppMask_un_5_);
	BIT_VEC cppVar_72789 = (0 << 5) | cppVar_72788;
	cppVar_72789 = (cppVar_72789 & cppMask_un_8_);
	bool cppVar_72791 = (cppVar_72789 == 135);
	BIT_VEC cppVar_72792 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72793 = (cppVar_72792 << 3) | 5;
	cppVar_72793 = (cppVar_72793 & cppMask_un_5_);
	BIT_VEC cppVar_72794 = (0 << 5) | cppVar_72793;
	cppVar_72794 = (cppVar_72794 & cppMask_un_8_);
	bool cppVar_72796 = (cppVar_72794 == 136);
	BIT_VEC cppVar_72797 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72798 = (cppVar_72797 << 3) | 5;
	cppVar_72798 = (cppVar_72798 & cppMask_un_5_);
	BIT_VEC cppVar_72799 = (0 << 5) | cppVar_72798;
	cppVar_72799 = (cppVar_72799 & cppMask_un_8_);
	bool cppVar_72801 = (cppVar_72799 == 137);
	BIT_VEC cppVar_72802 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72803 = (cppVar_72802 << 3) | 5;
	cppVar_72803 = (cppVar_72803 & cppMask_un_5_);
	BIT_VEC cppVar_72804 = (0 << 5) | cppVar_72803;
	cppVar_72804 = (cppVar_72804 & cppMask_un_8_);
	bool cppVar_72806 = (cppVar_72804 == 138);
	BIT_VEC cppVar_72807 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72808 = (cppVar_72807 << 3) | 5;
	cppVar_72808 = (cppVar_72808 & cppMask_un_5_);
	BIT_VEC cppVar_72809 = (0 << 5) | cppVar_72808;
	cppVar_72809 = (cppVar_72809 & cppMask_un_8_);
	bool cppVar_72811 = (cppVar_72809 == 140);
	BIT_VEC cppVar_72812 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72813 = (cppVar_72812 << 3) | 5;
	cppVar_72813 = (cppVar_72813 & cppMask_un_5_);
	BIT_VEC cppVar_72814 = (0 << 5) | cppVar_72813;
	cppVar_72814 = (cppVar_72814 & cppMask_un_8_);
	bool cppVar_72816 = (cppVar_72814 == 139);
	BIT_VEC cppVar_72817 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72818 = (cppVar_72817 << 3) | 5;
	cppVar_72818 = (cppVar_72818 & cppMask_un_5_);
	BIT_VEC cppVar_72819 = (0 << 5) | cppVar_72818;
	cppVar_72819 = (cppVar_72819 & cppMask_un_8_);
	bool cppVar_72821 = (cppVar_72819 == 141);
	BIT_VEC cppVar_72822 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72823 = (cppVar_72822 << 3) | 5;
	cppVar_72823 = (cppVar_72823 & cppMask_un_5_);
	BIT_VEC cppVar_72824 = (0 << 5) | cppVar_72823;
	cppVar_72824 = (cppVar_72824 & cppMask_un_8_);
	bool cppVar_72826 = (cppVar_72824 == 144);
	BIT_VEC cppVar_72827 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72828 = (cppVar_72827 << 3) | 5;
	cppVar_72828 = (cppVar_72828 & cppMask_un_5_);
	BIT_VEC cppVar_72829 = (0 << 5) | cppVar_72828;
	cppVar_72829 = (cppVar_72829 & cppMask_un_8_);
	bool cppVar_72831 = (cppVar_72829 == 152);
	BIT_VEC cppVar_72832 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72833 = (cppVar_72832 << 3) | 5;
	cppVar_72833 = (cppVar_72833 & cppMask_un_5_);
	BIT_VEC cppVar_72834 = (0 << 5) | cppVar_72833;
	cppVar_72834 = (cppVar_72834 & cppMask_un_8_);
	bool cppVar_72836 = (cppVar_72834 == 153);
	BIT_VEC cppVar_72837 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72838 = (cppVar_72837 << 3) | 5;
	cppVar_72838 = (cppVar_72838 & cppMask_un_5_);
	BIT_VEC cppVar_72839 = (0 << 5) | cppVar_72838;
	cppVar_72839 = (cppVar_72839 & cppMask_un_8_);
	bool cppVar_72841 = (cppVar_72839 == 160);
	BIT_VEC cppVar_72842 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72843 = (cppVar_72842 << 3) | 5;
	cppVar_72843 = (cppVar_72843 & cppMask_un_5_);
	BIT_VEC cppVar_72844 = (0 << 5) | cppVar_72843;
	cppVar_72844 = (cppVar_72844 & cppMask_un_8_);
	bool cppVar_72846 = (cppVar_72844 == 168);
	BIT_VEC cppVar_72847 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72848 = (cppVar_72847 << 3) | 5;
	cppVar_72848 = (cppVar_72848 & cppMask_un_5_);
	BIT_VEC cppVar_72849 = (0 << 5) | cppVar_72848;
	cppVar_72849 = (cppVar_72849 & cppMask_un_8_);
	bool cppVar_72851 = (cppVar_72849 == 176);
	BIT_VEC cppVar_72852 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72853 = (cppVar_72852 << 3) | 5;
	cppVar_72853 = (cppVar_72853 & cppMask_un_5_);
	BIT_VEC cppVar_72854 = (0 << 5) | cppVar_72853;
	cppVar_72854 = (cppVar_72854 & cppMask_un_8_);
	bool cppVar_72856 = (cppVar_72854 == 184);
	BIT_VEC cppVar_72857 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72858 = (cppVar_72857 << 3) | 5;
	cppVar_72858 = (cppVar_72858 & cppMask_un_5_);
	BIT_VEC cppVar_72859 = (0 << 5) | cppVar_72858;
	cppVar_72859 = (cppVar_72859 & cppMask_un_8_);
	bool cppVar_72861 = (cppVar_72859 == 208);
	BIT_VEC cppVar_72862 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72863 = (cppVar_72862 << 3) | 5;
	cppVar_72863 = (cppVar_72863 & cppMask_un_5_);
	BIT_VEC cppVar_72864 = (0 << 5) | cppVar_72863;
	cppVar_72864 = (cppVar_72864 & cppMask_un_8_);
	bool cppVar_72866 = (cppVar_72864 == 224);
	BIT_VEC cppVar_72867 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72868 = (cppVar_72867 << 3) | 5;
	cppVar_72868 = (cppVar_72868 & cppMask_un_5_);
	BIT_VEC cppVar_72869 = (0 << 5) | cppVar_72868;
	cppVar_72869 = (cppVar_72869 & cppMask_un_8_);
	bool cppVar_72871 = (cppVar_72869 == 240);
	BIT_VEC cppVar_72873 = (cppVar_72871) ? B : 0;
	BIT_VEC cppVar_72874 = (cppVar_72866) ? ACC : cppVar_72873;
	BIT_VEC cppVar_72875 = (cppVar_72861) ? PSW : cppVar_72874;
	BIT_VEC cppVar_72876 = (cppVar_72856) ? IP : cppVar_72875;
	BIT_VEC cppVar_72877 = (cppVar_72851) ? P3 : cppVar_72876;
	BIT_VEC cppVar_72878 = (cppVar_72846) ? IE : cppVar_72877;
	BIT_VEC cppVar_72879 = (cppVar_72841) ? P2 : cppVar_72878;
	BIT_VEC cppVar_72880 = (cppVar_72836) ? SBUF : cppVar_72879;
	BIT_VEC cppVar_72881 = (cppVar_72831) ? SCON : cppVar_72880;
	BIT_VEC cppVar_72882 = (cppVar_72826) ? P1 : cppVar_72881;
	BIT_VEC cppVar_72883 = (cppVar_72821) ? TH1 : cppVar_72882;
	BIT_VEC cppVar_72884 = (cppVar_72816) ? TL1 : cppVar_72883;
	BIT_VEC cppVar_72885 = (cppVar_72811) ? TH0 : cppVar_72884;
	BIT_VEC cppVar_72886 = (cppVar_72806) ? TL0 : cppVar_72885;
	BIT_VEC cppVar_72887 = (cppVar_72801) ? TMOD : cppVar_72886;
	BIT_VEC cppVar_72888 = (cppVar_72796) ? TCON : cppVar_72887;
	BIT_VEC cppVar_72889 = (cppVar_72791) ? PCON : cppVar_72888;
	BIT_VEC cppVar_72890 = (cppVar_72786) ? DPH : cppVar_72889;
	BIT_VEC cppVar_72891 = (cppVar_72781) ? DPL : cppVar_72890;
	BIT_VEC cppVar_72892 = (cppVar_72776) ? SP : cppVar_72891;
	BIT_VEC cppVar_72893 = (cppVar_72771) ? P0 : cppVar_72892;
	BIT_VEC cppVar_72894 = (cppVar_72762) ? cppVar_72766 : cppVar_72893;
	BIT_VEC cppVar_72895 = (cppVar_72754) ? cppVar_72894 : TH0;
	BIT_VEC cppVar_72896 = ROM.rd(PC);
	bool cppVar_72898 = (cppVar_72896 == 140);
	BIT_VEC cppVar_72900 = PC + 1;
	cppVar_72900 = (cppVar_72900 & cppMask_un_16_);
	BIT_VEC cppVar_72901 = ROM.rd(cppVar_72900);
	bool cppVar_72903 = (cppVar_72901 == 140);
	BIT_VEC cppVar_72905 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72907 = (cppVar_72905 << 3) | 4;
	cppVar_72907 = (cppVar_72907 & cppMask_un_5_);
	BIT_VEC cppVar_72908 = (0 << 5) | cppVar_72907;
	cppVar_72908 = (cppVar_72908 & cppMask_un_8_);
	BIT_VEC cppVar_72909 = (cppVar_72908 >> 7) & cppMask_un_1_;
	bool cppVar_72911 = (cppVar_72909 == 0);
	BIT_VEC cppVar_72912 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72913 = (cppVar_72912 << 3) | 4;
	cppVar_72913 = (cppVar_72913 & cppMask_un_5_);
	BIT_VEC cppVar_72914 = (0 << 5) | cppVar_72913;
	cppVar_72914 = (cppVar_72914 & cppMask_un_8_);
	BIT_VEC cppVar_72915 = IRAM.rd(cppVar_72914);
	BIT_VEC cppVar_72916 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72917 = (cppVar_72916 << 3) | 4;
	cppVar_72917 = (cppVar_72917 & cppMask_un_5_);
	BIT_VEC cppVar_72918 = (0 << 5) | cppVar_72917;
	cppVar_72918 = (cppVar_72918 & cppMask_un_8_);
	bool cppVar_72920 = (cppVar_72918 == 128);
	BIT_VEC cppVar_72921 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72922 = (cppVar_72921 << 3) | 4;
	cppVar_72922 = (cppVar_72922 & cppMask_un_5_);
	BIT_VEC cppVar_72923 = (0 << 5) | cppVar_72922;
	cppVar_72923 = (cppVar_72923 & cppMask_un_8_);
	bool cppVar_72925 = (cppVar_72923 == 129);
	BIT_VEC cppVar_72926 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72927 = (cppVar_72926 << 3) | 4;
	cppVar_72927 = (cppVar_72927 & cppMask_un_5_);
	BIT_VEC cppVar_72928 = (0 << 5) | cppVar_72927;
	cppVar_72928 = (cppVar_72928 & cppMask_un_8_);
	bool cppVar_72930 = (cppVar_72928 == 130);
	BIT_VEC cppVar_72931 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72932 = (cppVar_72931 << 3) | 4;
	cppVar_72932 = (cppVar_72932 & cppMask_un_5_);
	BIT_VEC cppVar_72933 = (0 << 5) | cppVar_72932;
	cppVar_72933 = (cppVar_72933 & cppMask_un_8_);
	bool cppVar_72935 = (cppVar_72933 == 131);
	BIT_VEC cppVar_72936 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72937 = (cppVar_72936 << 3) | 4;
	cppVar_72937 = (cppVar_72937 & cppMask_un_5_);
	BIT_VEC cppVar_72938 = (0 << 5) | cppVar_72937;
	cppVar_72938 = (cppVar_72938 & cppMask_un_8_);
	bool cppVar_72940 = (cppVar_72938 == 135);
	BIT_VEC cppVar_72941 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72942 = (cppVar_72941 << 3) | 4;
	cppVar_72942 = (cppVar_72942 & cppMask_un_5_);
	BIT_VEC cppVar_72943 = (0 << 5) | cppVar_72942;
	cppVar_72943 = (cppVar_72943 & cppMask_un_8_);
	bool cppVar_72945 = (cppVar_72943 == 136);
	BIT_VEC cppVar_72946 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72947 = (cppVar_72946 << 3) | 4;
	cppVar_72947 = (cppVar_72947 & cppMask_un_5_);
	BIT_VEC cppVar_72948 = (0 << 5) | cppVar_72947;
	cppVar_72948 = (cppVar_72948 & cppMask_un_8_);
	bool cppVar_72950 = (cppVar_72948 == 137);
	BIT_VEC cppVar_72951 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72952 = (cppVar_72951 << 3) | 4;
	cppVar_72952 = (cppVar_72952 & cppMask_un_5_);
	BIT_VEC cppVar_72953 = (0 << 5) | cppVar_72952;
	cppVar_72953 = (cppVar_72953 & cppMask_un_8_);
	bool cppVar_72955 = (cppVar_72953 == 138);
	BIT_VEC cppVar_72956 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72957 = (cppVar_72956 << 3) | 4;
	cppVar_72957 = (cppVar_72957 & cppMask_un_5_);
	BIT_VEC cppVar_72958 = (0 << 5) | cppVar_72957;
	cppVar_72958 = (cppVar_72958 & cppMask_un_8_);
	bool cppVar_72960 = (cppVar_72958 == 140);
	BIT_VEC cppVar_72961 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72962 = (cppVar_72961 << 3) | 4;
	cppVar_72962 = (cppVar_72962 & cppMask_un_5_);
	BIT_VEC cppVar_72963 = (0 << 5) | cppVar_72962;
	cppVar_72963 = (cppVar_72963 & cppMask_un_8_);
	bool cppVar_72965 = (cppVar_72963 == 139);
	BIT_VEC cppVar_72966 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72967 = (cppVar_72966 << 3) | 4;
	cppVar_72967 = (cppVar_72967 & cppMask_un_5_);
	BIT_VEC cppVar_72968 = (0 << 5) | cppVar_72967;
	cppVar_72968 = (cppVar_72968 & cppMask_un_8_);
	bool cppVar_72970 = (cppVar_72968 == 141);
	BIT_VEC cppVar_72971 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72972 = (cppVar_72971 << 3) | 4;
	cppVar_72972 = (cppVar_72972 & cppMask_un_5_);
	BIT_VEC cppVar_72973 = (0 << 5) | cppVar_72972;
	cppVar_72973 = (cppVar_72973 & cppMask_un_8_);
	bool cppVar_72975 = (cppVar_72973 == 144);
	BIT_VEC cppVar_72976 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72977 = (cppVar_72976 << 3) | 4;
	cppVar_72977 = (cppVar_72977 & cppMask_un_5_);
	BIT_VEC cppVar_72978 = (0 << 5) | cppVar_72977;
	cppVar_72978 = (cppVar_72978 & cppMask_un_8_);
	bool cppVar_72980 = (cppVar_72978 == 152);
	BIT_VEC cppVar_72981 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72982 = (cppVar_72981 << 3) | 4;
	cppVar_72982 = (cppVar_72982 & cppMask_un_5_);
	BIT_VEC cppVar_72983 = (0 << 5) | cppVar_72982;
	cppVar_72983 = (cppVar_72983 & cppMask_un_8_);
	bool cppVar_72985 = (cppVar_72983 == 153);
	BIT_VEC cppVar_72986 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72987 = (cppVar_72986 << 3) | 4;
	cppVar_72987 = (cppVar_72987 & cppMask_un_5_);
	BIT_VEC cppVar_72988 = (0 << 5) | cppVar_72987;
	cppVar_72988 = (cppVar_72988 & cppMask_un_8_);
	bool cppVar_72990 = (cppVar_72988 == 160);
	BIT_VEC cppVar_72991 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72992 = (cppVar_72991 << 3) | 4;
	cppVar_72992 = (cppVar_72992 & cppMask_un_5_);
	BIT_VEC cppVar_72993 = (0 << 5) | cppVar_72992;
	cppVar_72993 = (cppVar_72993 & cppMask_un_8_);
	bool cppVar_72995 = (cppVar_72993 == 168);
	BIT_VEC cppVar_72996 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_72997 = (cppVar_72996 << 3) | 4;
	cppVar_72997 = (cppVar_72997 & cppMask_un_5_);
	BIT_VEC cppVar_72998 = (0 << 5) | cppVar_72997;
	cppVar_72998 = (cppVar_72998 & cppMask_un_8_);
	bool cppVar_73000 = (cppVar_72998 == 176);
	BIT_VEC cppVar_73001 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73002 = (cppVar_73001 << 3) | 4;
	cppVar_73002 = (cppVar_73002 & cppMask_un_5_);
	BIT_VEC cppVar_73003 = (0 << 5) | cppVar_73002;
	cppVar_73003 = (cppVar_73003 & cppMask_un_8_);
	bool cppVar_73005 = (cppVar_73003 == 184);
	BIT_VEC cppVar_73006 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73007 = (cppVar_73006 << 3) | 4;
	cppVar_73007 = (cppVar_73007 & cppMask_un_5_);
	BIT_VEC cppVar_73008 = (0 << 5) | cppVar_73007;
	cppVar_73008 = (cppVar_73008 & cppMask_un_8_);
	bool cppVar_73010 = (cppVar_73008 == 208);
	BIT_VEC cppVar_73011 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73012 = (cppVar_73011 << 3) | 4;
	cppVar_73012 = (cppVar_73012 & cppMask_un_5_);
	BIT_VEC cppVar_73013 = (0 << 5) | cppVar_73012;
	cppVar_73013 = (cppVar_73013 & cppMask_un_8_);
	bool cppVar_73015 = (cppVar_73013 == 224);
	BIT_VEC cppVar_73016 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73017 = (cppVar_73016 << 3) | 4;
	cppVar_73017 = (cppVar_73017 & cppMask_un_5_);
	BIT_VEC cppVar_73018 = (0 << 5) | cppVar_73017;
	cppVar_73018 = (cppVar_73018 & cppMask_un_8_);
	bool cppVar_73020 = (cppVar_73018 == 240);
	BIT_VEC cppVar_73022 = (cppVar_73020) ? B : 0;
	BIT_VEC cppVar_73023 = (cppVar_73015) ? ACC : cppVar_73022;
	BIT_VEC cppVar_73024 = (cppVar_73010) ? PSW : cppVar_73023;
	BIT_VEC cppVar_73025 = (cppVar_73005) ? IP : cppVar_73024;
	BIT_VEC cppVar_73026 = (cppVar_73000) ? P3 : cppVar_73025;
	BIT_VEC cppVar_73027 = (cppVar_72995) ? IE : cppVar_73026;
	BIT_VEC cppVar_73028 = (cppVar_72990) ? P2 : cppVar_73027;
	BIT_VEC cppVar_73029 = (cppVar_72985) ? SBUF : cppVar_73028;
	BIT_VEC cppVar_73030 = (cppVar_72980) ? SCON : cppVar_73029;
	BIT_VEC cppVar_73031 = (cppVar_72975) ? P1 : cppVar_73030;
	BIT_VEC cppVar_73032 = (cppVar_72970) ? TH1 : cppVar_73031;
	BIT_VEC cppVar_73033 = (cppVar_72965) ? TL1 : cppVar_73032;
	BIT_VEC cppVar_73034 = (cppVar_72960) ? TH0 : cppVar_73033;
	BIT_VEC cppVar_73035 = (cppVar_72955) ? TL0 : cppVar_73034;
	BIT_VEC cppVar_73036 = (cppVar_72950) ? TMOD : cppVar_73035;
	BIT_VEC cppVar_73037 = (cppVar_72945) ? TCON : cppVar_73036;
	BIT_VEC cppVar_73038 = (cppVar_72940) ? PCON : cppVar_73037;
	BIT_VEC cppVar_73039 = (cppVar_72935) ? DPH : cppVar_73038;
	BIT_VEC cppVar_73040 = (cppVar_72930) ? DPL : cppVar_73039;
	BIT_VEC cppVar_73041 = (cppVar_72925) ? SP : cppVar_73040;
	BIT_VEC cppVar_73042 = (cppVar_72920) ? P0 : cppVar_73041;
	BIT_VEC cppVar_73043 = (cppVar_72911) ? cppVar_72915 : cppVar_73042;
	BIT_VEC cppVar_73044 = (cppVar_72903) ? cppVar_73043 : TH0;
	BIT_VEC cppVar_73045 = ROM.rd(PC);
	bool cppVar_73047 = (cppVar_73045 == 139);
	BIT_VEC cppVar_73049 = PC + 1;
	cppVar_73049 = (cppVar_73049 & cppMask_un_16_);
	BIT_VEC cppVar_73050 = ROM.rd(cppVar_73049);
	bool cppVar_73052 = (cppVar_73050 == 140);
	BIT_VEC cppVar_73054 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73056 = (cppVar_73054 << 3) | 3;
	cppVar_73056 = (cppVar_73056 & cppMask_un_5_);
	BIT_VEC cppVar_73057 = (0 << 5) | cppVar_73056;
	cppVar_73057 = (cppVar_73057 & cppMask_un_8_);
	BIT_VEC cppVar_73058 = (cppVar_73057 >> 7) & cppMask_un_1_;
	bool cppVar_73060 = (cppVar_73058 == 0);
	BIT_VEC cppVar_73061 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73062 = (cppVar_73061 << 3) | 3;
	cppVar_73062 = (cppVar_73062 & cppMask_un_5_);
	BIT_VEC cppVar_73063 = (0 << 5) | cppVar_73062;
	cppVar_73063 = (cppVar_73063 & cppMask_un_8_);
	BIT_VEC cppVar_73064 = IRAM.rd(cppVar_73063);
	BIT_VEC cppVar_73065 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73066 = (cppVar_73065 << 3) | 3;
	cppVar_73066 = (cppVar_73066 & cppMask_un_5_);
	BIT_VEC cppVar_73067 = (0 << 5) | cppVar_73066;
	cppVar_73067 = (cppVar_73067 & cppMask_un_8_);
	bool cppVar_73069 = (cppVar_73067 == 128);
	BIT_VEC cppVar_73070 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73071 = (cppVar_73070 << 3) | 3;
	cppVar_73071 = (cppVar_73071 & cppMask_un_5_);
	BIT_VEC cppVar_73072 = (0 << 5) | cppVar_73071;
	cppVar_73072 = (cppVar_73072 & cppMask_un_8_);
	bool cppVar_73074 = (cppVar_73072 == 129);
	BIT_VEC cppVar_73075 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73076 = (cppVar_73075 << 3) | 3;
	cppVar_73076 = (cppVar_73076 & cppMask_un_5_);
	BIT_VEC cppVar_73077 = (0 << 5) | cppVar_73076;
	cppVar_73077 = (cppVar_73077 & cppMask_un_8_);
	bool cppVar_73079 = (cppVar_73077 == 130);
	BIT_VEC cppVar_73080 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73081 = (cppVar_73080 << 3) | 3;
	cppVar_73081 = (cppVar_73081 & cppMask_un_5_);
	BIT_VEC cppVar_73082 = (0 << 5) | cppVar_73081;
	cppVar_73082 = (cppVar_73082 & cppMask_un_8_);
	bool cppVar_73084 = (cppVar_73082 == 131);
	BIT_VEC cppVar_73085 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73086 = (cppVar_73085 << 3) | 3;
	cppVar_73086 = (cppVar_73086 & cppMask_un_5_);
	BIT_VEC cppVar_73087 = (0 << 5) | cppVar_73086;
	cppVar_73087 = (cppVar_73087 & cppMask_un_8_);
	bool cppVar_73089 = (cppVar_73087 == 135);
	BIT_VEC cppVar_73090 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73091 = (cppVar_73090 << 3) | 3;
	cppVar_73091 = (cppVar_73091 & cppMask_un_5_);
	BIT_VEC cppVar_73092 = (0 << 5) | cppVar_73091;
	cppVar_73092 = (cppVar_73092 & cppMask_un_8_);
	bool cppVar_73094 = (cppVar_73092 == 136);
	BIT_VEC cppVar_73095 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73096 = (cppVar_73095 << 3) | 3;
	cppVar_73096 = (cppVar_73096 & cppMask_un_5_);
	BIT_VEC cppVar_73097 = (0 << 5) | cppVar_73096;
	cppVar_73097 = (cppVar_73097 & cppMask_un_8_);
	bool cppVar_73099 = (cppVar_73097 == 137);
	BIT_VEC cppVar_73100 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73101 = (cppVar_73100 << 3) | 3;
	cppVar_73101 = (cppVar_73101 & cppMask_un_5_);
	BIT_VEC cppVar_73102 = (0 << 5) | cppVar_73101;
	cppVar_73102 = (cppVar_73102 & cppMask_un_8_);
	bool cppVar_73104 = (cppVar_73102 == 138);
	BIT_VEC cppVar_73105 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73106 = (cppVar_73105 << 3) | 3;
	cppVar_73106 = (cppVar_73106 & cppMask_un_5_);
	BIT_VEC cppVar_73107 = (0 << 5) | cppVar_73106;
	cppVar_73107 = (cppVar_73107 & cppMask_un_8_);
	bool cppVar_73109 = (cppVar_73107 == 140);
	BIT_VEC cppVar_73110 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73111 = (cppVar_73110 << 3) | 3;
	cppVar_73111 = (cppVar_73111 & cppMask_un_5_);
	BIT_VEC cppVar_73112 = (0 << 5) | cppVar_73111;
	cppVar_73112 = (cppVar_73112 & cppMask_un_8_);
	bool cppVar_73114 = (cppVar_73112 == 139);
	BIT_VEC cppVar_73115 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73116 = (cppVar_73115 << 3) | 3;
	cppVar_73116 = (cppVar_73116 & cppMask_un_5_);
	BIT_VEC cppVar_73117 = (0 << 5) | cppVar_73116;
	cppVar_73117 = (cppVar_73117 & cppMask_un_8_);
	bool cppVar_73119 = (cppVar_73117 == 141);
	BIT_VEC cppVar_73120 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73121 = (cppVar_73120 << 3) | 3;
	cppVar_73121 = (cppVar_73121 & cppMask_un_5_);
	BIT_VEC cppVar_73122 = (0 << 5) | cppVar_73121;
	cppVar_73122 = (cppVar_73122 & cppMask_un_8_);
	bool cppVar_73124 = (cppVar_73122 == 144);
	BIT_VEC cppVar_73125 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73126 = (cppVar_73125 << 3) | 3;
	cppVar_73126 = (cppVar_73126 & cppMask_un_5_);
	BIT_VEC cppVar_73127 = (0 << 5) | cppVar_73126;
	cppVar_73127 = (cppVar_73127 & cppMask_un_8_);
	bool cppVar_73129 = (cppVar_73127 == 152);
	BIT_VEC cppVar_73130 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73131 = (cppVar_73130 << 3) | 3;
	cppVar_73131 = (cppVar_73131 & cppMask_un_5_);
	BIT_VEC cppVar_73132 = (0 << 5) | cppVar_73131;
	cppVar_73132 = (cppVar_73132 & cppMask_un_8_);
	bool cppVar_73134 = (cppVar_73132 == 153);
	BIT_VEC cppVar_73135 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73136 = (cppVar_73135 << 3) | 3;
	cppVar_73136 = (cppVar_73136 & cppMask_un_5_);
	BIT_VEC cppVar_73137 = (0 << 5) | cppVar_73136;
	cppVar_73137 = (cppVar_73137 & cppMask_un_8_);
	bool cppVar_73139 = (cppVar_73137 == 160);
	BIT_VEC cppVar_73140 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73141 = (cppVar_73140 << 3) | 3;
	cppVar_73141 = (cppVar_73141 & cppMask_un_5_);
	BIT_VEC cppVar_73142 = (0 << 5) | cppVar_73141;
	cppVar_73142 = (cppVar_73142 & cppMask_un_8_);
	bool cppVar_73144 = (cppVar_73142 == 168);
	BIT_VEC cppVar_73145 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73146 = (cppVar_73145 << 3) | 3;
	cppVar_73146 = (cppVar_73146 & cppMask_un_5_);
	BIT_VEC cppVar_73147 = (0 << 5) | cppVar_73146;
	cppVar_73147 = (cppVar_73147 & cppMask_un_8_);
	bool cppVar_73149 = (cppVar_73147 == 176);
	BIT_VEC cppVar_73150 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73151 = (cppVar_73150 << 3) | 3;
	cppVar_73151 = (cppVar_73151 & cppMask_un_5_);
	BIT_VEC cppVar_73152 = (0 << 5) | cppVar_73151;
	cppVar_73152 = (cppVar_73152 & cppMask_un_8_);
	bool cppVar_73154 = (cppVar_73152 == 184);
	BIT_VEC cppVar_73155 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73156 = (cppVar_73155 << 3) | 3;
	cppVar_73156 = (cppVar_73156 & cppMask_un_5_);
	BIT_VEC cppVar_73157 = (0 << 5) | cppVar_73156;
	cppVar_73157 = (cppVar_73157 & cppMask_un_8_);
	bool cppVar_73159 = (cppVar_73157 == 208);
	BIT_VEC cppVar_73160 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73161 = (cppVar_73160 << 3) | 3;
	cppVar_73161 = (cppVar_73161 & cppMask_un_5_);
	BIT_VEC cppVar_73162 = (0 << 5) | cppVar_73161;
	cppVar_73162 = (cppVar_73162 & cppMask_un_8_);
	bool cppVar_73164 = (cppVar_73162 == 224);
	BIT_VEC cppVar_73165 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73166 = (cppVar_73165 << 3) | 3;
	cppVar_73166 = (cppVar_73166 & cppMask_un_5_);
	BIT_VEC cppVar_73167 = (0 << 5) | cppVar_73166;
	cppVar_73167 = (cppVar_73167 & cppMask_un_8_);
	bool cppVar_73169 = (cppVar_73167 == 240);
	BIT_VEC cppVar_73171 = (cppVar_73169) ? B : 0;
	BIT_VEC cppVar_73172 = (cppVar_73164) ? ACC : cppVar_73171;
	BIT_VEC cppVar_73173 = (cppVar_73159) ? PSW : cppVar_73172;
	BIT_VEC cppVar_73174 = (cppVar_73154) ? IP : cppVar_73173;
	BIT_VEC cppVar_73175 = (cppVar_73149) ? P3 : cppVar_73174;
	BIT_VEC cppVar_73176 = (cppVar_73144) ? IE : cppVar_73175;
	BIT_VEC cppVar_73177 = (cppVar_73139) ? P2 : cppVar_73176;
	BIT_VEC cppVar_73178 = (cppVar_73134) ? SBUF : cppVar_73177;
	BIT_VEC cppVar_73179 = (cppVar_73129) ? SCON : cppVar_73178;
	BIT_VEC cppVar_73180 = (cppVar_73124) ? P1 : cppVar_73179;
	BIT_VEC cppVar_73181 = (cppVar_73119) ? TH1 : cppVar_73180;
	BIT_VEC cppVar_73182 = (cppVar_73114) ? TL1 : cppVar_73181;
	BIT_VEC cppVar_73183 = (cppVar_73109) ? TH0 : cppVar_73182;
	BIT_VEC cppVar_73184 = (cppVar_73104) ? TL0 : cppVar_73183;
	BIT_VEC cppVar_73185 = (cppVar_73099) ? TMOD : cppVar_73184;
	BIT_VEC cppVar_73186 = (cppVar_73094) ? TCON : cppVar_73185;
	BIT_VEC cppVar_73187 = (cppVar_73089) ? PCON : cppVar_73186;
	BIT_VEC cppVar_73188 = (cppVar_73084) ? DPH : cppVar_73187;
	BIT_VEC cppVar_73189 = (cppVar_73079) ? DPL : cppVar_73188;
	BIT_VEC cppVar_73190 = (cppVar_73074) ? SP : cppVar_73189;
	BIT_VEC cppVar_73191 = (cppVar_73069) ? P0 : cppVar_73190;
	BIT_VEC cppVar_73192 = (cppVar_73060) ? cppVar_73064 : cppVar_73191;
	BIT_VEC cppVar_73193 = (cppVar_73052) ? cppVar_73192 : TH0;
	BIT_VEC cppVar_73194 = ROM.rd(PC);
	bool cppVar_73196 = (cppVar_73194 == 138);
	BIT_VEC cppVar_73198 = PC + 1;
	cppVar_73198 = (cppVar_73198 & cppMask_un_16_);
	BIT_VEC cppVar_73199 = ROM.rd(cppVar_73198);
	bool cppVar_73201 = (cppVar_73199 == 140);
	BIT_VEC cppVar_73203 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73205 = (cppVar_73203 << 3) | 2;
	cppVar_73205 = (cppVar_73205 & cppMask_un_5_);
	BIT_VEC cppVar_73206 = (0 << 5) | cppVar_73205;
	cppVar_73206 = (cppVar_73206 & cppMask_un_8_);
	BIT_VEC cppVar_73207 = (cppVar_73206 >> 7) & cppMask_un_1_;
	bool cppVar_73209 = (cppVar_73207 == 0);
	BIT_VEC cppVar_73210 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73211 = (cppVar_73210 << 3) | 2;
	cppVar_73211 = (cppVar_73211 & cppMask_un_5_);
	BIT_VEC cppVar_73212 = (0 << 5) | cppVar_73211;
	cppVar_73212 = (cppVar_73212 & cppMask_un_8_);
	BIT_VEC cppVar_73213 = IRAM.rd(cppVar_73212);
	BIT_VEC cppVar_73214 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73215 = (cppVar_73214 << 3) | 2;
	cppVar_73215 = (cppVar_73215 & cppMask_un_5_);
	BIT_VEC cppVar_73216 = (0 << 5) | cppVar_73215;
	cppVar_73216 = (cppVar_73216 & cppMask_un_8_);
	bool cppVar_73218 = (cppVar_73216 == 128);
	BIT_VEC cppVar_73219 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73220 = (cppVar_73219 << 3) | 2;
	cppVar_73220 = (cppVar_73220 & cppMask_un_5_);
	BIT_VEC cppVar_73221 = (0 << 5) | cppVar_73220;
	cppVar_73221 = (cppVar_73221 & cppMask_un_8_);
	bool cppVar_73223 = (cppVar_73221 == 129);
	BIT_VEC cppVar_73224 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73225 = (cppVar_73224 << 3) | 2;
	cppVar_73225 = (cppVar_73225 & cppMask_un_5_);
	BIT_VEC cppVar_73226 = (0 << 5) | cppVar_73225;
	cppVar_73226 = (cppVar_73226 & cppMask_un_8_);
	bool cppVar_73228 = (cppVar_73226 == 130);
	BIT_VEC cppVar_73229 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73230 = (cppVar_73229 << 3) | 2;
	cppVar_73230 = (cppVar_73230 & cppMask_un_5_);
	BIT_VEC cppVar_73231 = (0 << 5) | cppVar_73230;
	cppVar_73231 = (cppVar_73231 & cppMask_un_8_);
	bool cppVar_73233 = (cppVar_73231 == 131);
	BIT_VEC cppVar_73234 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73235 = (cppVar_73234 << 3) | 2;
	cppVar_73235 = (cppVar_73235 & cppMask_un_5_);
	BIT_VEC cppVar_73236 = (0 << 5) | cppVar_73235;
	cppVar_73236 = (cppVar_73236 & cppMask_un_8_);
	bool cppVar_73238 = (cppVar_73236 == 135);
	BIT_VEC cppVar_73239 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73240 = (cppVar_73239 << 3) | 2;
	cppVar_73240 = (cppVar_73240 & cppMask_un_5_);
	BIT_VEC cppVar_73241 = (0 << 5) | cppVar_73240;
	cppVar_73241 = (cppVar_73241 & cppMask_un_8_);
	bool cppVar_73243 = (cppVar_73241 == 136);
	BIT_VEC cppVar_73244 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73245 = (cppVar_73244 << 3) | 2;
	cppVar_73245 = (cppVar_73245 & cppMask_un_5_);
	BIT_VEC cppVar_73246 = (0 << 5) | cppVar_73245;
	cppVar_73246 = (cppVar_73246 & cppMask_un_8_);
	bool cppVar_73248 = (cppVar_73246 == 137);
	BIT_VEC cppVar_73249 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73250 = (cppVar_73249 << 3) | 2;
	cppVar_73250 = (cppVar_73250 & cppMask_un_5_);
	BIT_VEC cppVar_73251 = (0 << 5) | cppVar_73250;
	cppVar_73251 = (cppVar_73251 & cppMask_un_8_);
	bool cppVar_73253 = (cppVar_73251 == 138);
	BIT_VEC cppVar_73254 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73255 = (cppVar_73254 << 3) | 2;
	cppVar_73255 = (cppVar_73255 & cppMask_un_5_);
	BIT_VEC cppVar_73256 = (0 << 5) | cppVar_73255;
	cppVar_73256 = (cppVar_73256 & cppMask_un_8_);
	bool cppVar_73258 = (cppVar_73256 == 140);
	BIT_VEC cppVar_73259 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73260 = (cppVar_73259 << 3) | 2;
	cppVar_73260 = (cppVar_73260 & cppMask_un_5_);
	BIT_VEC cppVar_73261 = (0 << 5) | cppVar_73260;
	cppVar_73261 = (cppVar_73261 & cppMask_un_8_);
	bool cppVar_73263 = (cppVar_73261 == 139);
	BIT_VEC cppVar_73264 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73265 = (cppVar_73264 << 3) | 2;
	cppVar_73265 = (cppVar_73265 & cppMask_un_5_);
	BIT_VEC cppVar_73266 = (0 << 5) | cppVar_73265;
	cppVar_73266 = (cppVar_73266 & cppMask_un_8_);
	bool cppVar_73268 = (cppVar_73266 == 141);
	BIT_VEC cppVar_73269 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73270 = (cppVar_73269 << 3) | 2;
	cppVar_73270 = (cppVar_73270 & cppMask_un_5_);
	BIT_VEC cppVar_73271 = (0 << 5) | cppVar_73270;
	cppVar_73271 = (cppVar_73271 & cppMask_un_8_);
	bool cppVar_73273 = (cppVar_73271 == 144);
	BIT_VEC cppVar_73274 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73275 = (cppVar_73274 << 3) | 2;
	cppVar_73275 = (cppVar_73275 & cppMask_un_5_);
	BIT_VEC cppVar_73276 = (0 << 5) | cppVar_73275;
	cppVar_73276 = (cppVar_73276 & cppMask_un_8_);
	bool cppVar_73278 = (cppVar_73276 == 152);
	BIT_VEC cppVar_73279 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73280 = (cppVar_73279 << 3) | 2;
	cppVar_73280 = (cppVar_73280 & cppMask_un_5_);
	BIT_VEC cppVar_73281 = (0 << 5) | cppVar_73280;
	cppVar_73281 = (cppVar_73281 & cppMask_un_8_);
	bool cppVar_73283 = (cppVar_73281 == 153);
	BIT_VEC cppVar_73284 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73285 = (cppVar_73284 << 3) | 2;
	cppVar_73285 = (cppVar_73285 & cppMask_un_5_);
	BIT_VEC cppVar_73286 = (0 << 5) | cppVar_73285;
	cppVar_73286 = (cppVar_73286 & cppMask_un_8_);
	bool cppVar_73288 = (cppVar_73286 == 160);
	BIT_VEC cppVar_73289 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73290 = (cppVar_73289 << 3) | 2;
	cppVar_73290 = (cppVar_73290 & cppMask_un_5_);
	BIT_VEC cppVar_73291 = (0 << 5) | cppVar_73290;
	cppVar_73291 = (cppVar_73291 & cppMask_un_8_);
	bool cppVar_73293 = (cppVar_73291 == 168);
	BIT_VEC cppVar_73294 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73295 = (cppVar_73294 << 3) | 2;
	cppVar_73295 = (cppVar_73295 & cppMask_un_5_);
	BIT_VEC cppVar_73296 = (0 << 5) | cppVar_73295;
	cppVar_73296 = (cppVar_73296 & cppMask_un_8_);
	bool cppVar_73298 = (cppVar_73296 == 176);
	BIT_VEC cppVar_73299 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73300 = (cppVar_73299 << 3) | 2;
	cppVar_73300 = (cppVar_73300 & cppMask_un_5_);
	BIT_VEC cppVar_73301 = (0 << 5) | cppVar_73300;
	cppVar_73301 = (cppVar_73301 & cppMask_un_8_);
	bool cppVar_73303 = (cppVar_73301 == 184);
	BIT_VEC cppVar_73304 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73305 = (cppVar_73304 << 3) | 2;
	cppVar_73305 = (cppVar_73305 & cppMask_un_5_);
	BIT_VEC cppVar_73306 = (0 << 5) | cppVar_73305;
	cppVar_73306 = (cppVar_73306 & cppMask_un_8_);
	bool cppVar_73308 = (cppVar_73306 == 208);
	BIT_VEC cppVar_73309 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73310 = (cppVar_73309 << 3) | 2;
	cppVar_73310 = (cppVar_73310 & cppMask_un_5_);
	BIT_VEC cppVar_73311 = (0 << 5) | cppVar_73310;
	cppVar_73311 = (cppVar_73311 & cppMask_un_8_);
	bool cppVar_73313 = (cppVar_73311 == 224);
	BIT_VEC cppVar_73314 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73315 = (cppVar_73314 << 3) | 2;
	cppVar_73315 = (cppVar_73315 & cppMask_un_5_);
	BIT_VEC cppVar_73316 = (0 << 5) | cppVar_73315;
	cppVar_73316 = (cppVar_73316 & cppMask_un_8_);
	bool cppVar_73318 = (cppVar_73316 == 240);
	BIT_VEC cppVar_73320 = (cppVar_73318) ? B : 0;
	BIT_VEC cppVar_73321 = (cppVar_73313) ? ACC : cppVar_73320;
	BIT_VEC cppVar_73322 = (cppVar_73308) ? PSW : cppVar_73321;
	BIT_VEC cppVar_73323 = (cppVar_73303) ? IP : cppVar_73322;
	BIT_VEC cppVar_73324 = (cppVar_73298) ? P3 : cppVar_73323;
	BIT_VEC cppVar_73325 = (cppVar_73293) ? IE : cppVar_73324;
	BIT_VEC cppVar_73326 = (cppVar_73288) ? P2 : cppVar_73325;
	BIT_VEC cppVar_73327 = (cppVar_73283) ? SBUF : cppVar_73326;
	BIT_VEC cppVar_73328 = (cppVar_73278) ? SCON : cppVar_73327;
	BIT_VEC cppVar_73329 = (cppVar_73273) ? P1 : cppVar_73328;
	BIT_VEC cppVar_73330 = (cppVar_73268) ? TH1 : cppVar_73329;
	BIT_VEC cppVar_73331 = (cppVar_73263) ? TL1 : cppVar_73330;
	BIT_VEC cppVar_73332 = (cppVar_73258) ? TH0 : cppVar_73331;
	BIT_VEC cppVar_73333 = (cppVar_73253) ? TL0 : cppVar_73332;
	BIT_VEC cppVar_73334 = (cppVar_73248) ? TMOD : cppVar_73333;
	BIT_VEC cppVar_73335 = (cppVar_73243) ? TCON : cppVar_73334;
	BIT_VEC cppVar_73336 = (cppVar_73238) ? PCON : cppVar_73335;
	BIT_VEC cppVar_73337 = (cppVar_73233) ? DPH : cppVar_73336;
	BIT_VEC cppVar_73338 = (cppVar_73228) ? DPL : cppVar_73337;
	BIT_VEC cppVar_73339 = (cppVar_73223) ? SP : cppVar_73338;
	BIT_VEC cppVar_73340 = (cppVar_73218) ? P0 : cppVar_73339;
	BIT_VEC cppVar_73341 = (cppVar_73209) ? cppVar_73213 : cppVar_73340;
	BIT_VEC cppVar_73342 = (cppVar_73201) ? cppVar_73341 : TH0;
	BIT_VEC cppVar_73343 = ROM.rd(PC);
	bool cppVar_73345 = (cppVar_73343 == 137);
	BIT_VEC cppVar_73347 = PC + 1;
	cppVar_73347 = (cppVar_73347 & cppMask_un_16_);
	BIT_VEC cppVar_73348 = ROM.rd(cppVar_73347);
	bool cppVar_73350 = (cppVar_73348 == 140);
	BIT_VEC cppVar_73352 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73354 = (cppVar_73352 << 3) | 1;
	cppVar_73354 = (cppVar_73354 & cppMask_un_5_);
	BIT_VEC cppVar_73355 = (0 << 5) | cppVar_73354;
	cppVar_73355 = (cppVar_73355 & cppMask_un_8_);
	BIT_VEC cppVar_73356 = (cppVar_73355 >> 7) & cppMask_un_1_;
	bool cppVar_73358 = (cppVar_73356 == 0);
	BIT_VEC cppVar_73359 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73360 = (cppVar_73359 << 3) | 1;
	cppVar_73360 = (cppVar_73360 & cppMask_un_5_);
	BIT_VEC cppVar_73361 = (0 << 5) | cppVar_73360;
	cppVar_73361 = (cppVar_73361 & cppMask_un_8_);
	BIT_VEC cppVar_73362 = IRAM.rd(cppVar_73361);
	BIT_VEC cppVar_73363 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73364 = (cppVar_73363 << 3) | 1;
	cppVar_73364 = (cppVar_73364 & cppMask_un_5_);
	BIT_VEC cppVar_73365 = (0 << 5) | cppVar_73364;
	cppVar_73365 = (cppVar_73365 & cppMask_un_8_);
	bool cppVar_73367 = (cppVar_73365 == 128);
	BIT_VEC cppVar_73368 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73369 = (cppVar_73368 << 3) | 1;
	cppVar_73369 = (cppVar_73369 & cppMask_un_5_);
	BIT_VEC cppVar_73370 = (0 << 5) | cppVar_73369;
	cppVar_73370 = (cppVar_73370 & cppMask_un_8_);
	bool cppVar_73372 = (cppVar_73370 == 129);
	BIT_VEC cppVar_73373 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73374 = (cppVar_73373 << 3) | 1;
	cppVar_73374 = (cppVar_73374 & cppMask_un_5_);
	BIT_VEC cppVar_73375 = (0 << 5) | cppVar_73374;
	cppVar_73375 = (cppVar_73375 & cppMask_un_8_);
	bool cppVar_73377 = (cppVar_73375 == 130);
	BIT_VEC cppVar_73378 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73379 = (cppVar_73378 << 3) | 1;
	cppVar_73379 = (cppVar_73379 & cppMask_un_5_);
	BIT_VEC cppVar_73380 = (0 << 5) | cppVar_73379;
	cppVar_73380 = (cppVar_73380 & cppMask_un_8_);
	bool cppVar_73382 = (cppVar_73380 == 131);
	BIT_VEC cppVar_73383 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73384 = (cppVar_73383 << 3) | 1;
	cppVar_73384 = (cppVar_73384 & cppMask_un_5_);
	BIT_VEC cppVar_73385 = (0 << 5) | cppVar_73384;
	cppVar_73385 = (cppVar_73385 & cppMask_un_8_);
	bool cppVar_73387 = (cppVar_73385 == 135);
	BIT_VEC cppVar_73388 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73389 = (cppVar_73388 << 3) | 1;
	cppVar_73389 = (cppVar_73389 & cppMask_un_5_);
	BIT_VEC cppVar_73390 = (0 << 5) | cppVar_73389;
	cppVar_73390 = (cppVar_73390 & cppMask_un_8_);
	bool cppVar_73392 = (cppVar_73390 == 136);
	BIT_VEC cppVar_73393 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73394 = (cppVar_73393 << 3) | 1;
	cppVar_73394 = (cppVar_73394 & cppMask_un_5_);
	BIT_VEC cppVar_73395 = (0 << 5) | cppVar_73394;
	cppVar_73395 = (cppVar_73395 & cppMask_un_8_);
	bool cppVar_73397 = (cppVar_73395 == 137);
	BIT_VEC cppVar_73398 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73399 = (cppVar_73398 << 3) | 1;
	cppVar_73399 = (cppVar_73399 & cppMask_un_5_);
	BIT_VEC cppVar_73400 = (0 << 5) | cppVar_73399;
	cppVar_73400 = (cppVar_73400 & cppMask_un_8_);
	bool cppVar_73402 = (cppVar_73400 == 138);
	BIT_VEC cppVar_73403 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73404 = (cppVar_73403 << 3) | 1;
	cppVar_73404 = (cppVar_73404 & cppMask_un_5_);
	BIT_VEC cppVar_73405 = (0 << 5) | cppVar_73404;
	cppVar_73405 = (cppVar_73405 & cppMask_un_8_);
	bool cppVar_73407 = (cppVar_73405 == 140);
	BIT_VEC cppVar_73408 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73409 = (cppVar_73408 << 3) | 1;
	cppVar_73409 = (cppVar_73409 & cppMask_un_5_);
	BIT_VEC cppVar_73410 = (0 << 5) | cppVar_73409;
	cppVar_73410 = (cppVar_73410 & cppMask_un_8_);
	bool cppVar_73412 = (cppVar_73410 == 139);
	BIT_VEC cppVar_73413 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73414 = (cppVar_73413 << 3) | 1;
	cppVar_73414 = (cppVar_73414 & cppMask_un_5_);
	BIT_VEC cppVar_73415 = (0 << 5) | cppVar_73414;
	cppVar_73415 = (cppVar_73415 & cppMask_un_8_);
	bool cppVar_73417 = (cppVar_73415 == 141);
	BIT_VEC cppVar_73418 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73419 = (cppVar_73418 << 3) | 1;
	cppVar_73419 = (cppVar_73419 & cppMask_un_5_);
	BIT_VEC cppVar_73420 = (0 << 5) | cppVar_73419;
	cppVar_73420 = (cppVar_73420 & cppMask_un_8_);
	bool cppVar_73422 = (cppVar_73420 == 144);
	BIT_VEC cppVar_73423 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73424 = (cppVar_73423 << 3) | 1;
	cppVar_73424 = (cppVar_73424 & cppMask_un_5_);
	BIT_VEC cppVar_73425 = (0 << 5) | cppVar_73424;
	cppVar_73425 = (cppVar_73425 & cppMask_un_8_);
	bool cppVar_73427 = (cppVar_73425 == 152);
	BIT_VEC cppVar_73428 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73429 = (cppVar_73428 << 3) | 1;
	cppVar_73429 = (cppVar_73429 & cppMask_un_5_);
	BIT_VEC cppVar_73430 = (0 << 5) | cppVar_73429;
	cppVar_73430 = (cppVar_73430 & cppMask_un_8_);
	bool cppVar_73432 = (cppVar_73430 == 153);
	BIT_VEC cppVar_73433 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73434 = (cppVar_73433 << 3) | 1;
	cppVar_73434 = (cppVar_73434 & cppMask_un_5_);
	BIT_VEC cppVar_73435 = (0 << 5) | cppVar_73434;
	cppVar_73435 = (cppVar_73435 & cppMask_un_8_);
	bool cppVar_73437 = (cppVar_73435 == 160);
	BIT_VEC cppVar_73438 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73439 = (cppVar_73438 << 3) | 1;
	cppVar_73439 = (cppVar_73439 & cppMask_un_5_);
	BIT_VEC cppVar_73440 = (0 << 5) | cppVar_73439;
	cppVar_73440 = (cppVar_73440 & cppMask_un_8_);
	bool cppVar_73442 = (cppVar_73440 == 168);
	BIT_VEC cppVar_73443 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73444 = (cppVar_73443 << 3) | 1;
	cppVar_73444 = (cppVar_73444 & cppMask_un_5_);
	BIT_VEC cppVar_73445 = (0 << 5) | cppVar_73444;
	cppVar_73445 = (cppVar_73445 & cppMask_un_8_);
	bool cppVar_73447 = (cppVar_73445 == 176);
	BIT_VEC cppVar_73448 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73449 = (cppVar_73448 << 3) | 1;
	cppVar_73449 = (cppVar_73449 & cppMask_un_5_);
	BIT_VEC cppVar_73450 = (0 << 5) | cppVar_73449;
	cppVar_73450 = (cppVar_73450 & cppMask_un_8_);
	bool cppVar_73452 = (cppVar_73450 == 184);
	BIT_VEC cppVar_73453 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73454 = (cppVar_73453 << 3) | 1;
	cppVar_73454 = (cppVar_73454 & cppMask_un_5_);
	BIT_VEC cppVar_73455 = (0 << 5) | cppVar_73454;
	cppVar_73455 = (cppVar_73455 & cppMask_un_8_);
	bool cppVar_73457 = (cppVar_73455 == 208);
	BIT_VEC cppVar_73458 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73459 = (cppVar_73458 << 3) | 1;
	cppVar_73459 = (cppVar_73459 & cppMask_un_5_);
	BIT_VEC cppVar_73460 = (0 << 5) | cppVar_73459;
	cppVar_73460 = (cppVar_73460 & cppMask_un_8_);
	bool cppVar_73462 = (cppVar_73460 == 224);
	BIT_VEC cppVar_73463 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73464 = (cppVar_73463 << 3) | 1;
	cppVar_73464 = (cppVar_73464 & cppMask_un_5_);
	BIT_VEC cppVar_73465 = (0 << 5) | cppVar_73464;
	cppVar_73465 = (cppVar_73465 & cppMask_un_8_);
	bool cppVar_73467 = (cppVar_73465 == 240);
	BIT_VEC cppVar_73469 = (cppVar_73467) ? B : 0;
	BIT_VEC cppVar_73470 = (cppVar_73462) ? ACC : cppVar_73469;
	BIT_VEC cppVar_73471 = (cppVar_73457) ? PSW : cppVar_73470;
	BIT_VEC cppVar_73472 = (cppVar_73452) ? IP : cppVar_73471;
	BIT_VEC cppVar_73473 = (cppVar_73447) ? P3 : cppVar_73472;
	BIT_VEC cppVar_73474 = (cppVar_73442) ? IE : cppVar_73473;
	BIT_VEC cppVar_73475 = (cppVar_73437) ? P2 : cppVar_73474;
	BIT_VEC cppVar_73476 = (cppVar_73432) ? SBUF : cppVar_73475;
	BIT_VEC cppVar_73477 = (cppVar_73427) ? SCON : cppVar_73476;
	BIT_VEC cppVar_73478 = (cppVar_73422) ? P1 : cppVar_73477;
	BIT_VEC cppVar_73479 = (cppVar_73417) ? TH1 : cppVar_73478;
	BIT_VEC cppVar_73480 = (cppVar_73412) ? TL1 : cppVar_73479;
	BIT_VEC cppVar_73481 = (cppVar_73407) ? TH0 : cppVar_73480;
	BIT_VEC cppVar_73482 = (cppVar_73402) ? TL0 : cppVar_73481;
	BIT_VEC cppVar_73483 = (cppVar_73397) ? TMOD : cppVar_73482;
	BIT_VEC cppVar_73484 = (cppVar_73392) ? TCON : cppVar_73483;
	BIT_VEC cppVar_73485 = (cppVar_73387) ? PCON : cppVar_73484;
	BIT_VEC cppVar_73486 = (cppVar_73382) ? DPH : cppVar_73485;
	BIT_VEC cppVar_73487 = (cppVar_73377) ? DPL : cppVar_73486;
	BIT_VEC cppVar_73488 = (cppVar_73372) ? SP : cppVar_73487;
	BIT_VEC cppVar_73489 = (cppVar_73367) ? P0 : cppVar_73488;
	BIT_VEC cppVar_73490 = (cppVar_73358) ? cppVar_73362 : cppVar_73489;
	BIT_VEC cppVar_73491 = (cppVar_73350) ? cppVar_73490 : TH0;
	BIT_VEC cppVar_73492 = ROM.rd(PC);
	bool cppVar_73494 = (cppVar_73492 == 136);
	BIT_VEC cppVar_73496 = PC + 1;
	cppVar_73496 = (cppVar_73496 & cppMask_un_16_);
	BIT_VEC cppVar_73497 = ROM.rd(cppVar_73496);
	bool cppVar_73499 = (cppVar_73497 == 140);
	BIT_VEC cppVar_73501 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73503 = (cppVar_73501 << 3) | 0;
	cppVar_73503 = (cppVar_73503 & cppMask_un_5_);
	BIT_VEC cppVar_73504 = (0 << 5) | cppVar_73503;
	cppVar_73504 = (cppVar_73504 & cppMask_un_8_);
	BIT_VEC cppVar_73505 = (cppVar_73504 >> 7) & cppMask_un_1_;
	bool cppVar_73507 = (cppVar_73505 == 0);
	BIT_VEC cppVar_73508 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73509 = (cppVar_73508 << 3) | 0;
	cppVar_73509 = (cppVar_73509 & cppMask_un_5_);
	BIT_VEC cppVar_73510 = (0 << 5) | cppVar_73509;
	cppVar_73510 = (cppVar_73510 & cppMask_un_8_);
	BIT_VEC cppVar_73511 = IRAM.rd(cppVar_73510);
	BIT_VEC cppVar_73512 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73513 = (cppVar_73512 << 3) | 0;
	cppVar_73513 = (cppVar_73513 & cppMask_un_5_);
	BIT_VEC cppVar_73514 = (0 << 5) | cppVar_73513;
	cppVar_73514 = (cppVar_73514 & cppMask_un_8_);
	bool cppVar_73516 = (cppVar_73514 == 128);
	BIT_VEC cppVar_73517 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73518 = (cppVar_73517 << 3) | 0;
	cppVar_73518 = (cppVar_73518 & cppMask_un_5_);
	BIT_VEC cppVar_73519 = (0 << 5) | cppVar_73518;
	cppVar_73519 = (cppVar_73519 & cppMask_un_8_);
	bool cppVar_73521 = (cppVar_73519 == 129);
	BIT_VEC cppVar_73522 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73523 = (cppVar_73522 << 3) | 0;
	cppVar_73523 = (cppVar_73523 & cppMask_un_5_);
	BIT_VEC cppVar_73524 = (0 << 5) | cppVar_73523;
	cppVar_73524 = (cppVar_73524 & cppMask_un_8_);
	bool cppVar_73526 = (cppVar_73524 == 130);
	BIT_VEC cppVar_73527 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73528 = (cppVar_73527 << 3) | 0;
	cppVar_73528 = (cppVar_73528 & cppMask_un_5_);
	BIT_VEC cppVar_73529 = (0 << 5) | cppVar_73528;
	cppVar_73529 = (cppVar_73529 & cppMask_un_8_);
	bool cppVar_73531 = (cppVar_73529 == 131);
	BIT_VEC cppVar_73532 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73533 = (cppVar_73532 << 3) | 0;
	cppVar_73533 = (cppVar_73533 & cppMask_un_5_);
	BIT_VEC cppVar_73534 = (0 << 5) | cppVar_73533;
	cppVar_73534 = (cppVar_73534 & cppMask_un_8_);
	bool cppVar_73536 = (cppVar_73534 == 135);
	BIT_VEC cppVar_73537 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73538 = (cppVar_73537 << 3) | 0;
	cppVar_73538 = (cppVar_73538 & cppMask_un_5_);
	BIT_VEC cppVar_73539 = (0 << 5) | cppVar_73538;
	cppVar_73539 = (cppVar_73539 & cppMask_un_8_);
	bool cppVar_73541 = (cppVar_73539 == 136);
	BIT_VEC cppVar_73542 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73543 = (cppVar_73542 << 3) | 0;
	cppVar_73543 = (cppVar_73543 & cppMask_un_5_);
	BIT_VEC cppVar_73544 = (0 << 5) | cppVar_73543;
	cppVar_73544 = (cppVar_73544 & cppMask_un_8_);
	bool cppVar_73546 = (cppVar_73544 == 137);
	BIT_VEC cppVar_73547 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73548 = (cppVar_73547 << 3) | 0;
	cppVar_73548 = (cppVar_73548 & cppMask_un_5_);
	BIT_VEC cppVar_73549 = (0 << 5) | cppVar_73548;
	cppVar_73549 = (cppVar_73549 & cppMask_un_8_);
	bool cppVar_73551 = (cppVar_73549 == 138);
	BIT_VEC cppVar_73552 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73553 = (cppVar_73552 << 3) | 0;
	cppVar_73553 = (cppVar_73553 & cppMask_un_5_);
	BIT_VEC cppVar_73554 = (0 << 5) | cppVar_73553;
	cppVar_73554 = (cppVar_73554 & cppMask_un_8_);
	bool cppVar_73556 = (cppVar_73554 == 140);
	BIT_VEC cppVar_73557 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73558 = (cppVar_73557 << 3) | 0;
	cppVar_73558 = (cppVar_73558 & cppMask_un_5_);
	BIT_VEC cppVar_73559 = (0 << 5) | cppVar_73558;
	cppVar_73559 = (cppVar_73559 & cppMask_un_8_);
	bool cppVar_73561 = (cppVar_73559 == 139);
	BIT_VEC cppVar_73562 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73563 = (cppVar_73562 << 3) | 0;
	cppVar_73563 = (cppVar_73563 & cppMask_un_5_);
	BIT_VEC cppVar_73564 = (0 << 5) | cppVar_73563;
	cppVar_73564 = (cppVar_73564 & cppMask_un_8_);
	bool cppVar_73566 = (cppVar_73564 == 141);
	BIT_VEC cppVar_73567 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73568 = (cppVar_73567 << 3) | 0;
	cppVar_73568 = (cppVar_73568 & cppMask_un_5_);
	BIT_VEC cppVar_73569 = (0 << 5) | cppVar_73568;
	cppVar_73569 = (cppVar_73569 & cppMask_un_8_);
	bool cppVar_73571 = (cppVar_73569 == 144);
	BIT_VEC cppVar_73572 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73573 = (cppVar_73572 << 3) | 0;
	cppVar_73573 = (cppVar_73573 & cppMask_un_5_);
	BIT_VEC cppVar_73574 = (0 << 5) | cppVar_73573;
	cppVar_73574 = (cppVar_73574 & cppMask_un_8_);
	bool cppVar_73576 = (cppVar_73574 == 152);
	BIT_VEC cppVar_73577 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73578 = (cppVar_73577 << 3) | 0;
	cppVar_73578 = (cppVar_73578 & cppMask_un_5_);
	BIT_VEC cppVar_73579 = (0 << 5) | cppVar_73578;
	cppVar_73579 = (cppVar_73579 & cppMask_un_8_);
	bool cppVar_73581 = (cppVar_73579 == 153);
	BIT_VEC cppVar_73582 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73583 = (cppVar_73582 << 3) | 0;
	cppVar_73583 = (cppVar_73583 & cppMask_un_5_);
	BIT_VEC cppVar_73584 = (0 << 5) | cppVar_73583;
	cppVar_73584 = (cppVar_73584 & cppMask_un_8_);
	bool cppVar_73586 = (cppVar_73584 == 160);
	BIT_VEC cppVar_73587 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73588 = (cppVar_73587 << 3) | 0;
	cppVar_73588 = (cppVar_73588 & cppMask_un_5_);
	BIT_VEC cppVar_73589 = (0 << 5) | cppVar_73588;
	cppVar_73589 = (cppVar_73589 & cppMask_un_8_);
	bool cppVar_73591 = (cppVar_73589 == 168);
	BIT_VEC cppVar_73592 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73593 = (cppVar_73592 << 3) | 0;
	cppVar_73593 = (cppVar_73593 & cppMask_un_5_);
	BIT_VEC cppVar_73594 = (0 << 5) | cppVar_73593;
	cppVar_73594 = (cppVar_73594 & cppMask_un_8_);
	bool cppVar_73596 = (cppVar_73594 == 176);
	BIT_VEC cppVar_73597 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73598 = (cppVar_73597 << 3) | 0;
	cppVar_73598 = (cppVar_73598 & cppMask_un_5_);
	BIT_VEC cppVar_73599 = (0 << 5) | cppVar_73598;
	cppVar_73599 = (cppVar_73599 & cppMask_un_8_);
	bool cppVar_73601 = (cppVar_73599 == 184);
	BIT_VEC cppVar_73602 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73603 = (cppVar_73602 << 3) | 0;
	cppVar_73603 = (cppVar_73603 & cppMask_un_5_);
	BIT_VEC cppVar_73604 = (0 << 5) | cppVar_73603;
	cppVar_73604 = (cppVar_73604 & cppMask_un_8_);
	bool cppVar_73606 = (cppVar_73604 == 208);
	BIT_VEC cppVar_73607 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73608 = (cppVar_73607 << 3) | 0;
	cppVar_73608 = (cppVar_73608 & cppMask_un_5_);
	BIT_VEC cppVar_73609 = (0 << 5) | cppVar_73608;
	cppVar_73609 = (cppVar_73609 & cppMask_un_8_);
	bool cppVar_73611 = (cppVar_73609 == 224);
	BIT_VEC cppVar_73612 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73613 = (cppVar_73612 << 3) | 0;
	cppVar_73613 = (cppVar_73613 & cppMask_un_5_);
	BIT_VEC cppVar_73614 = (0 << 5) | cppVar_73613;
	cppVar_73614 = (cppVar_73614 & cppMask_un_8_);
	bool cppVar_73616 = (cppVar_73614 == 240);
	BIT_VEC cppVar_73618 = (cppVar_73616) ? B : 0;
	BIT_VEC cppVar_73619 = (cppVar_73611) ? ACC : cppVar_73618;
	BIT_VEC cppVar_73620 = (cppVar_73606) ? PSW : cppVar_73619;
	BIT_VEC cppVar_73621 = (cppVar_73601) ? IP : cppVar_73620;
	BIT_VEC cppVar_73622 = (cppVar_73596) ? P3 : cppVar_73621;
	BIT_VEC cppVar_73623 = (cppVar_73591) ? IE : cppVar_73622;
	BIT_VEC cppVar_73624 = (cppVar_73586) ? P2 : cppVar_73623;
	BIT_VEC cppVar_73625 = (cppVar_73581) ? SBUF : cppVar_73624;
	BIT_VEC cppVar_73626 = (cppVar_73576) ? SCON : cppVar_73625;
	BIT_VEC cppVar_73627 = (cppVar_73571) ? P1 : cppVar_73626;
	BIT_VEC cppVar_73628 = (cppVar_73566) ? TH1 : cppVar_73627;
	BIT_VEC cppVar_73629 = (cppVar_73561) ? TL1 : cppVar_73628;
	BIT_VEC cppVar_73630 = (cppVar_73556) ? TH0 : cppVar_73629;
	BIT_VEC cppVar_73631 = (cppVar_73551) ? TL0 : cppVar_73630;
	BIT_VEC cppVar_73632 = (cppVar_73546) ? TMOD : cppVar_73631;
	BIT_VEC cppVar_73633 = (cppVar_73541) ? TCON : cppVar_73632;
	BIT_VEC cppVar_73634 = (cppVar_73536) ? PCON : cppVar_73633;
	BIT_VEC cppVar_73635 = (cppVar_73531) ? DPH : cppVar_73634;
	BIT_VEC cppVar_73636 = (cppVar_73526) ? DPL : cppVar_73635;
	BIT_VEC cppVar_73637 = (cppVar_73521) ? SP : cppVar_73636;
	BIT_VEC cppVar_73638 = (cppVar_73516) ? P0 : cppVar_73637;
	BIT_VEC cppVar_73639 = (cppVar_73507) ? cppVar_73511 : cppVar_73638;
	BIT_VEC cppVar_73640 = (cppVar_73499) ? cppVar_73639 : TH0;
	BIT_VEC cppVar_73641 = ROM.rd(PC);
	bool cppVar_73643 = (cppVar_73641 == 135);
	BIT_VEC cppVar_73645 = PC + 1;
	cppVar_73645 = (cppVar_73645 & cppMask_un_16_);
	BIT_VEC cppVar_73646 = ROM.rd(cppVar_73645);
	bool cppVar_73648 = (cppVar_73646 == 140);
	BIT_VEC cppVar_73650 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73652 = (cppVar_73650 << 3) | 1;
	cppVar_73652 = (cppVar_73652 & cppMask_un_5_);
	BIT_VEC cppVar_73653 = (0 << 5) | cppVar_73652;
	cppVar_73653 = (cppVar_73653 & cppMask_un_8_);
	BIT_VEC cppVar_73654 = IRAM.rd(cppVar_73653);
	BIT_VEC cppVar_73655 = IRAM.rd(cppVar_73654);
	BIT_VEC cppVar_73656 = (cppVar_73648) ? cppVar_73655 : TH0;
	BIT_VEC cppVar_73657 = ROM.rd(PC);
	bool cppVar_73659 = (cppVar_73657 == 134);
	BIT_VEC cppVar_73661 = PC + 1;
	cppVar_73661 = (cppVar_73661 & cppMask_un_16_);
	BIT_VEC cppVar_73662 = ROM.rd(cppVar_73661);
	bool cppVar_73664 = (cppVar_73662 == 140);
	BIT_VEC cppVar_73666 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_73668 = (cppVar_73666 << 3) | 0;
	cppVar_73668 = (cppVar_73668 & cppMask_un_5_);
	BIT_VEC cppVar_73669 = (0 << 5) | cppVar_73668;
	cppVar_73669 = (cppVar_73669 & cppMask_un_8_);
	BIT_VEC cppVar_73670 = IRAM.rd(cppVar_73669);
	BIT_VEC cppVar_73671 = IRAM.rd(cppVar_73670);
	BIT_VEC cppVar_73672 = (cppVar_73664) ? cppVar_73671 : TH0;
	BIT_VEC cppVar_73673 = ROM.rd(PC);
	bool cppVar_73675 = (cppVar_73673 == 133);
	BIT_VEC cppVar_73677 = PC + 2;
	cppVar_73677 = (cppVar_73677 & cppMask_un_16_);
	BIT_VEC cppVar_73678 = ROM.rd(cppVar_73677);
	bool cppVar_73680 = (cppVar_73678 == 140);
	BIT_VEC cppVar_73682 = PC + 1;
	cppVar_73682 = (cppVar_73682 & cppMask_un_16_);
	BIT_VEC cppVar_73683 = ROM.rd(cppVar_73682);
	BIT_VEC cppVar_73684 = (cppVar_73683 >> 7) & cppMask_un_1_;
	bool cppVar_73686 = (cppVar_73684 == 0);
	BIT_VEC cppVar_73687 = PC + 1;
	cppVar_73687 = (cppVar_73687 & cppMask_un_16_);
	BIT_VEC cppVar_73688 = ROM.rd(cppVar_73687);
	BIT_VEC cppVar_73689 = IRAM.rd(cppVar_73688);
	BIT_VEC cppVar_73690 = PC + 1;
	cppVar_73690 = (cppVar_73690 & cppMask_un_16_);
	BIT_VEC cppVar_73691 = ROM.rd(cppVar_73690);
	bool cppVar_73693 = (cppVar_73691 == 128);
	BIT_VEC cppVar_73694 = PC + 1;
	cppVar_73694 = (cppVar_73694 & cppMask_un_16_);
	BIT_VEC cppVar_73695 = ROM.rd(cppVar_73694);
	bool cppVar_73697 = (cppVar_73695 == 129);
	BIT_VEC cppVar_73698 = PC + 1;
	cppVar_73698 = (cppVar_73698 & cppMask_un_16_);
	BIT_VEC cppVar_73699 = ROM.rd(cppVar_73698);
	bool cppVar_73701 = (cppVar_73699 == 130);
	BIT_VEC cppVar_73702 = PC + 1;
	cppVar_73702 = (cppVar_73702 & cppMask_un_16_);
	BIT_VEC cppVar_73703 = ROM.rd(cppVar_73702);
	bool cppVar_73705 = (cppVar_73703 == 131);
	BIT_VEC cppVar_73706 = PC + 1;
	cppVar_73706 = (cppVar_73706 & cppMask_un_16_);
	BIT_VEC cppVar_73707 = ROM.rd(cppVar_73706);
	bool cppVar_73709 = (cppVar_73707 == 135);
	BIT_VEC cppVar_73710 = PC + 1;
	cppVar_73710 = (cppVar_73710 & cppMask_un_16_);
	BIT_VEC cppVar_73711 = ROM.rd(cppVar_73710);
	bool cppVar_73713 = (cppVar_73711 == 136);
	BIT_VEC cppVar_73714 = PC + 1;
	cppVar_73714 = (cppVar_73714 & cppMask_un_16_);
	BIT_VEC cppVar_73715 = ROM.rd(cppVar_73714);
	bool cppVar_73717 = (cppVar_73715 == 137);
	BIT_VEC cppVar_73718 = PC + 1;
	cppVar_73718 = (cppVar_73718 & cppMask_un_16_);
	BIT_VEC cppVar_73719 = ROM.rd(cppVar_73718);
	bool cppVar_73721 = (cppVar_73719 == 138);
	BIT_VEC cppVar_73722 = PC + 1;
	cppVar_73722 = (cppVar_73722 & cppMask_un_16_);
	BIT_VEC cppVar_73723 = ROM.rd(cppVar_73722);
	bool cppVar_73725 = (cppVar_73723 == 140);
	BIT_VEC cppVar_73726 = PC + 1;
	cppVar_73726 = (cppVar_73726 & cppMask_un_16_);
	BIT_VEC cppVar_73727 = ROM.rd(cppVar_73726);
	bool cppVar_73729 = (cppVar_73727 == 139);
	BIT_VEC cppVar_73730 = PC + 1;
	cppVar_73730 = (cppVar_73730 & cppMask_un_16_);
	BIT_VEC cppVar_73731 = ROM.rd(cppVar_73730);
	bool cppVar_73733 = (cppVar_73731 == 141);
	BIT_VEC cppVar_73734 = PC + 1;
	cppVar_73734 = (cppVar_73734 & cppMask_un_16_);
	BIT_VEC cppVar_73735 = ROM.rd(cppVar_73734);
	bool cppVar_73737 = (cppVar_73735 == 144);
	BIT_VEC cppVar_73738 = PC + 1;
	cppVar_73738 = (cppVar_73738 & cppMask_un_16_);
	BIT_VEC cppVar_73739 = ROM.rd(cppVar_73738);
	bool cppVar_73741 = (cppVar_73739 == 152);
	BIT_VEC cppVar_73742 = PC + 1;
	cppVar_73742 = (cppVar_73742 & cppMask_un_16_);
	BIT_VEC cppVar_73743 = ROM.rd(cppVar_73742);
	bool cppVar_73745 = (cppVar_73743 == 153);
	BIT_VEC cppVar_73746 = PC + 1;
	cppVar_73746 = (cppVar_73746 & cppMask_un_16_);
	BIT_VEC cppVar_73747 = ROM.rd(cppVar_73746);
	bool cppVar_73749 = (cppVar_73747 == 160);
	BIT_VEC cppVar_73750 = PC + 1;
	cppVar_73750 = (cppVar_73750 & cppMask_un_16_);
	BIT_VEC cppVar_73751 = ROM.rd(cppVar_73750);
	bool cppVar_73753 = (cppVar_73751 == 168);
	BIT_VEC cppVar_73754 = PC + 1;
	cppVar_73754 = (cppVar_73754 & cppMask_un_16_);
	BIT_VEC cppVar_73755 = ROM.rd(cppVar_73754);
	bool cppVar_73757 = (cppVar_73755 == 176);
	BIT_VEC cppVar_73758 = PC + 1;
	cppVar_73758 = (cppVar_73758 & cppMask_un_16_);
	BIT_VEC cppVar_73759 = ROM.rd(cppVar_73758);
	bool cppVar_73761 = (cppVar_73759 == 184);
	BIT_VEC cppVar_73762 = PC + 1;
	cppVar_73762 = (cppVar_73762 & cppMask_un_16_);
	BIT_VEC cppVar_73763 = ROM.rd(cppVar_73762);
	bool cppVar_73765 = (cppVar_73763 == 208);
	BIT_VEC cppVar_73766 = PC + 1;
	cppVar_73766 = (cppVar_73766 & cppMask_un_16_);
	BIT_VEC cppVar_73767 = ROM.rd(cppVar_73766);
	bool cppVar_73769 = (cppVar_73767 == 224);
	BIT_VEC cppVar_73770 = PC + 1;
	cppVar_73770 = (cppVar_73770 & cppMask_un_16_);
	BIT_VEC cppVar_73771 = ROM.rd(cppVar_73770);
	bool cppVar_73773 = (cppVar_73771 == 240);
	BIT_VEC cppVar_73775 = (cppVar_73773) ? B : 0;
	BIT_VEC cppVar_73776 = (cppVar_73769) ? ACC : cppVar_73775;
	BIT_VEC cppVar_73777 = (cppVar_73765) ? PSW : cppVar_73776;
	BIT_VEC cppVar_73778 = (cppVar_73761) ? IP : cppVar_73777;
	BIT_VEC cppVar_73779 = (cppVar_73757) ? P3 : cppVar_73778;
	BIT_VEC cppVar_73780 = (cppVar_73753) ? IE : cppVar_73779;
	BIT_VEC cppVar_73781 = (cppVar_73749) ? P2 : cppVar_73780;
	BIT_VEC cppVar_73782 = (cppVar_73745) ? SBUF : cppVar_73781;
	BIT_VEC cppVar_73783 = (cppVar_73741) ? SCON : cppVar_73782;
	BIT_VEC cppVar_73784 = (cppVar_73737) ? P1 : cppVar_73783;
	BIT_VEC cppVar_73785 = (cppVar_73733) ? TH1 : cppVar_73784;
	BIT_VEC cppVar_73786 = (cppVar_73729) ? TL1 : cppVar_73785;
	BIT_VEC cppVar_73787 = (cppVar_73725) ? TH0 : cppVar_73786;
	BIT_VEC cppVar_73788 = (cppVar_73721) ? TL0 : cppVar_73787;
	BIT_VEC cppVar_73789 = (cppVar_73717) ? TMOD : cppVar_73788;
	BIT_VEC cppVar_73790 = (cppVar_73713) ? TCON : cppVar_73789;
	BIT_VEC cppVar_73791 = (cppVar_73709) ? PCON : cppVar_73790;
	BIT_VEC cppVar_73792 = (cppVar_73705) ? DPH : cppVar_73791;
	BIT_VEC cppVar_73793 = (cppVar_73701) ? DPL : cppVar_73792;
	BIT_VEC cppVar_73794 = (cppVar_73697) ? SP : cppVar_73793;
	BIT_VEC cppVar_73795 = (cppVar_73693) ? P0 : cppVar_73794;
	BIT_VEC cppVar_73796 = (cppVar_73686) ? cppVar_73689 : cppVar_73795;
	BIT_VEC cppVar_73797 = (cppVar_73680) ? cppVar_73796 : TH0;
	BIT_VEC cppVar_73798 = ROM.rd(PC);
	bool cppVar_73800 = (cppVar_73798 == 117);
	BIT_VEC cppVar_73802 = PC + 1;
	cppVar_73802 = (cppVar_73802 & cppMask_un_16_);
	BIT_VEC cppVar_73803 = ROM.rd(cppVar_73802);
	bool cppVar_73805 = (cppVar_73803 == 140);
	BIT_VEC cppVar_73807 = PC + 2;
	cppVar_73807 = (cppVar_73807 & cppMask_un_16_);
	BIT_VEC cppVar_73808 = ROM.rd(cppVar_73807);
	BIT_VEC cppVar_73809 = (cppVar_73805) ? cppVar_73808 : TH0;
	BIT_VEC cppVar_73810 = ROM.rd(PC);
	bool cppVar_73812 = (cppVar_73810 == 99);
	BIT_VEC cppVar_73814 = PC + 1;
	cppVar_73814 = (cppVar_73814 & cppMask_un_16_);
	BIT_VEC cppVar_73815 = ROM.rd(cppVar_73814);
	bool cppVar_73817 = (cppVar_73815 == 140);
	BIT_VEC cppVar_73818 = PC + 1;
	cppVar_73818 = (cppVar_73818 & cppMask_un_16_);
	BIT_VEC cppVar_73819 = ROM.rd(cppVar_73818);
	BIT_VEC cppVar_73820 = (cppVar_73819 >> 7) & cppMask_un_1_;
	bool cppVar_73822 = (cppVar_73820 == 0);
	BIT_VEC cppVar_73823 = PC + 1;
	cppVar_73823 = (cppVar_73823 & cppMask_un_16_);
	BIT_VEC cppVar_73824 = ROM.rd(cppVar_73823);
	BIT_VEC cppVar_73825 = IRAM.rd(cppVar_73824);
	BIT_VEC cppVar_73826 = PC + 1;
	cppVar_73826 = (cppVar_73826 & cppMask_un_16_);
	BIT_VEC cppVar_73827 = ROM.rd(cppVar_73826);
	bool cppVar_73829 = (cppVar_73827 == 128);
	BIT_VEC cppVar_73830 = PC + 1;
	cppVar_73830 = (cppVar_73830 & cppMask_un_16_);
	BIT_VEC cppVar_73831 = ROM.rd(cppVar_73830);
	bool cppVar_73833 = (cppVar_73831 == 129);
	BIT_VEC cppVar_73834 = PC + 1;
	cppVar_73834 = (cppVar_73834 & cppMask_un_16_);
	BIT_VEC cppVar_73835 = ROM.rd(cppVar_73834);
	bool cppVar_73837 = (cppVar_73835 == 130);
	BIT_VEC cppVar_73838 = PC + 1;
	cppVar_73838 = (cppVar_73838 & cppMask_un_16_);
	BIT_VEC cppVar_73839 = ROM.rd(cppVar_73838);
	bool cppVar_73841 = (cppVar_73839 == 131);
	BIT_VEC cppVar_73842 = PC + 1;
	cppVar_73842 = (cppVar_73842 & cppMask_un_16_);
	BIT_VEC cppVar_73843 = ROM.rd(cppVar_73842);
	bool cppVar_73845 = (cppVar_73843 == 135);
	BIT_VEC cppVar_73846 = PC + 1;
	cppVar_73846 = (cppVar_73846 & cppMask_un_16_);
	BIT_VEC cppVar_73847 = ROM.rd(cppVar_73846);
	bool cppVar_73849 = (cppVar_73847 == 136);
	BIT_VEC cppVar_73850 = PC + 1;
	cppVar_73850 = (cppVar_73850 & cppMask_un_16_);
	BIT_VEC cppVar_73851 = ROM.rd(cppVar_73850);
	bool cppVar_73853 = (cppVar_73851 == 137);
	BIT_VEC cppVar_73854 = PC + 1;
	cppVar_73854 = (cppVar_73854 & cppMask_un_16_);
	BIT_VEC cppVar_73855 = ROM.rd(cppVar_73854);
	bool cppVar_73857 = (cppVar_73855 == 138);
	BIT_VEC cppVar_73858 = PC + 1;
	cppVar_73858 = (cppVar_73858 & cppMask_un_16_);
	BIT_VEC cppVar_73859 = ROM.rd(cppVar_73858);
	bool cppVar_73861 = (cppVar_73859 == 140);
	BIT_VEC cppVar_73862 = PC + 1;
	cppVar_73862 = (cppVar_73862 & cppMask_un_16_);
	BIT_VEC cppVar_73863 = ROM.rd(cppVar_73862);
	bool cppVar_73865 = (cppVar_73863 == 139);
	BIT_VEC cppVar_73866 = PC + 1;
	cppVar_73866 = (cppVar_73866 & cppMask_un_16_);
	BIT_VEC cppVar_73867 = ROM.rd(cppVar_73866);
	bool cppVar_73869 = (cppVar_73867 == 141);
	BIT_VEC cppVar_73870 = PC + 1;
	cppVar_73870 = (cppVar_73870 & cppMask_un_16_);
	BIT_VEC cppVar_73871 = ROM.rd(cppVar_73870);
	bool cppVar_73873 = (cppVar_73871 == 144);
	BIT_VEC cppVar_73874 = PC + 1;
	cppVar_73874 = (cppVar_73874 & cppMask_un_16_);
	BIT_VEC cppVar_73875 = ROM.rd(cppVar_73874);
	bool cppVar_73877 = (cppVar_73875 == 152);
	BIT_VEC cppVar_73878 = PC + 1;
	cppVar_73878 = (cppVar_73878 & cppMask_un_16_);
	BIT_VEC cppVar_73879 = ROM.rd(cppVar_73878);
	bool cppVar_73881 = (cppVar_73879 == 153);
	BIT_VEC cppVar_73882 = PC + 1;
	cppVar_73882 = (cppVar_73882 & cppMask_un_16_);
	BIT_VEC cppVar_73883 = ROM.rd(cppVar_73882);
	bool cppVar_73885 = (cppVar_73883 == 160);
	BIT_VEC cppVar_73886 = PC + 1;
	cppVar_73886 = (cppVar_73886 & cppMask_un_16_);
	BIT_VEC cppVar_73887 = ROM.rd(cppVar_73886);
	bool cppVar_73889 = (cppVar_73887 == 168);
	BIT_VEC cppVar_73890 = PC + 1;
	cppVar_73890 = (cppVar_73890 & cppMask_un_16_);
	BIT_VEC cppVar_73891 = ROM.rd(cppVar_73890);
	bool cppVar_73893 = (cppVar_73891 == 176);
	BIT_VEC cppVar_73894 = PC + 1;
	cppVar_73894 = (cppVar_73894 & cppMask_un_16_);
	BIT_VEC cppVar_73895 = ROM.rd(cppVar_73894);
	bool cppVar_73897 = (cppVar_73895 == 184);
	BIT_VEC cppVar_73898 = PC + 1;
	cppVar_73898 = (cppVar_73898 & cppMask_un_16_);
	BIT_VEC cppVar_73899 = ROM.rd(cppVar_73898);
	bool cppVar_73901 = (cppVar_73899 == 208);
	BIT_VEC cppVar_73902 = PC + 1;
	cppVar_73902 = (cppVar_73902 & cppMask_un_16_);
	BIT_VEC cppVar_73903 = ROM.rd(cppVar_73902);
	bool cppVar_73905 = (cppVar_73903 == 224);
	BIT_VEC cppVar_73906 = PC + 1;
	cppVar_73906 = (cppVar_73906 & cppMask_un_16_);
	BIT_VEC cppVar_73907 = ROM.rd(cppVar_73906);
	bool cppVar_73909 = (cppVar_73907 == 240);
	BIT_VEC cppVar_73911 = (cppVar_73909) ? B : 0;
	BIT_VEC cppVar_73912 = (cppVar_73905) ? ACC : cppVar_73911;
	BIT_VEC cppVar_73913 = (cppVar_73901) ? PSW : cppVar_73912;
	BIT_VEC cppVar_73914 = (cppVar_73897) ? IP : cppVar_73913;
	BIT_VEC cppVar_73915 = (cppVar_73893) ? P3 : cppVar_73914;
	BIT_VEC cppVar_73916 = (cppVar_73889) ? IE : cppVar_73915;
	BIT_VEC cppVar_73917 = (cppVar_73885) ? P2 : cppVar_73916;
	BIT_VEC cppVar_73918 = (cppVar_73881) ? SBUF : cppVar_73917;
	BIT_VEC cppVar_73919 = (cppVar_73877) ? SCON : cppVar_73918;
	BIT_VEC cppVar_73920 = (cppVar_73873) ? P1 : cppVar_73919;
	BIT_VEC cppVar_73921 = (cppVar_73869) ? TH1 : cppVar_73920;
	BIT_VEC cppVar_73922 = (cppVar_73865) ? TL1 : cppVar_73921;
	BIT_VEC cppVar_73923 = (cppVar_73861) ? TH0 : cppVar_73922;
	BIT_VEC cppVar_73924 = (cppVar_73857) ? TL0 : cppVar_73923;
	BIT_VEC cppVar_73925 = (cppVar_73853) ? TMOD : cppVar_73924;
	BIT_VEC cppVar_73926 = (cppVar_73849) ? TCON : cppVar_73925;
	BIT_VEC cppVar_73927 = (cppVar_73845) ? PCON : cppVar_73926;
	BIT_VEC cppVar_73928 = (cppVar_73841) ? DPH : cppVar_73927;
	BIT_VEC cppVar_73929 = (cppVar_73837) ? DPL : cppVar_73928;
	BIT_VEC cppVar_73930 = (cppVar_73833) ? SP : cppVar_73929;
	BIT_VEC cppVar_73931 = (cppVar_73829) ? P0 : cppVar_73930;
	BIT_VEC cppVar_73932 = (cppVar_73822) ? cppVar_73825 : cppVar_73931;
	BIT_VEC cppVar_73934 = PC + 2;
	cppVar_73934 = (cppVar_73934 & cppMask_un_16_);
	BIT_VEC cppVar_73935 = ROM.rd(cppVar_73934);
	BIT_VEC cppVar_73936 = cppVar_73932 ^ cppVar_73935;
	BIT_VEC cppVar_73937 = (cppVar_73817) ? cppVar_73936 : TH0;
	BIT_VEC cppVar_73938 = ROM.rd(PC);
	bool cppVar_73940 = (cppVar_73938 == 98);
	BIT_VEC cppVar_73942 = PC + 1;
	cppVar_73942 = (cppVar_73942 & cppMask_un_16_);
	BIT_VEC cppVar_73943 = ROM.rd(cppVar_73942);
	bool cppVar_73945 = (cppVar_73943 == 140);
	BIT_VEC cppVar_73946 = PC + 1;
	cppVar_73946 = (cppVar_73946 & cppMask_un_16_);
	BIT_VEC cppVar_73947 = ROM.rd(cppVar_73946);
	BIT_VEC cppVar_73948 = (cppVar_73947 >> 7) & cppMask_un_1_;
	bool cppVar_73950 = (cppVar_73948 == 0);
	BIT_VEC cppVar_73951 = PC + 1;
	cppVar_73951 = (cppVar_73951 & cppMask_un_16_);
	BIT_VEC cppVar_73952 = ROM.rd(cppVar_73951);
	BIT_VEC cppVar_73953 = IRAM.rd(cppVar_73952);
	BIT_VEC cppVar_73954 = PC + 1;
	cppVar_73954 = (cppVar_73954 & cppMask_un_16_);
	BIT_VEC cppVar_73955 = ROM.rd(cppVar_73954);
	bool cppVar_73957 = (cppVar_73955 == 128);
	BIT_VEC cppVar_73958 = PC + 1;
	cppVar_73958 = (cppVar_73958 & cppMask_un_16_);
	BIT_VEC cppVar_73959 = ROM.rd(cppVar_73958);
	bool cppVar_73961 = (cppVar_73959 == 129);
	BIT_VEC cppVar_73962 = PC + 1;
	cppVar_73962 = (cppVar_73962 & cppMask_un_16_);
	BIT_VEC cppVar_73963 = ROM.rd(cppVar_73962);
	bool cppVar_73965 = (cppVar_73963 == 130);
	BIT_VEC cppVar_73966 = PC + 1;
	cppVar_73966 = (cppVar_73966 & cppMask_un_16_);
	BIT_VEC cppVar_73967 = ROM.rd(cppVar_73966);
	bool cppVar_73969 = (cppVar_73967 == 131);
	BIT_VEC cppVar_73970 = PC + 1;
	cppVar_73970 = (cppVar_73970 & cppMask_un_16_);
	BIT_VEC cppVar_73971 = ROM.rd(cppVar_73970);
	bool cppVar_73973 = (cppVar_73971 == 135);
	BIT_VEC cppVar_73974 = PC + 1;
	cppVar_73974 = (cppVar_73974 & cppMask_un_16_);
	BIT_VEC cppVar_73975 = ROM.rd(cppVar_73974);
	bool cppVar_73977 = (cppVar_73975 == 136);
	BIT_VEC cppVar_73978 = PC + 1;
	cppVar_73978 = (cppVar_73978 & cppMask_un_16_);
	BIT_VEC cppVar_73979 = ROM.rd(cppVar_73978);
	bool cppVar_73981 = (cppVar_73979 == 137);
	BIT_VEC cppVar_73982 = PC + 1;
	cppVar_73982 = (cppVar_73982 & cppMask_un_16_);
	BIT_VEC cppVar_73983 = ROM.rd(cppVar_73982);
	bool cppVar_73985 = (cppVar_73983 == 138);
	BIT_VEC cppVar_73986 = PC + 1;
	cppVar_73986 = (cppVar_73986 & cppMask_un_16_);
	BIT_VEC cppVar_73987 = ROM.rd(cppVar_73986);
	bool cppVar_73989 = (cppVar_73987 == 140);
	BIT_VEC cppVar_73990 = PC + 1;
	cppVar_73990 = (cppVar_73990 & cppMask_un_16_);
	BIT_VEC cppVar_73991 = ROM.rd(cppVar_73990);
	bool cppVar_73993 = (cppVar_73991 == 139);
	BIT_VEC cppVar_73994 = PC + 1;
	cppVar_73994 = (cppVar_73994 & cppMask_un_16_);
	BIT_VEC cppVar_73995 = ROM.rd(cppVar_73994);
	bool cppVar_73997 = (cppVar_73995 == 141);
	BIT_VEC cppVar_73998 = PC + 1;
	cppVar_73998 = (cppVar_73998 & cppMask_un_16_);
	BIT_VEC cppVar_73999 = ROM.rd(cppVar_73998);
	bool cppVar_74001 = (cppVar_73999 == 144);
	BIT_VEC cppVar_74002 = PC + 1;
	cppVar_74002 = (cppVar_74002 & cppMask_un_16_);
	BIT_VEC cppVar_74003 = ROM.rd(cppVar_74002);
	bool cppVar_74005 = (cppVar_74003 == 152);
	BIT_VEC cppVar_74006 = PC + 1;
	cppVar_74006 = (cppVar_74006 & cppMask_un_16_);
	BIT_VEC cppVar_74007 = ROM.rd(cppVar_74006);
	bool cppVar_74009 = (cppVar_74007 == 153);
	BIT_VEC cppVar_74010 = PC + 1;
	cppVar_74010 = (cppVar_74010 & cppMask_un_16_);
	BIT_VEC cppVar_74011 = ROM.rd(cppVar_74010);
	bool cppVar_74013 = (cppVar_74011 == 160);
	BIT_VEC cppVar_74014 = PC + 1;
	cppVar_74014 = (cppVar_74014 & cppMask_un_16_);
	BIT_VEC cppVar_74015 = ROM.rd(cppVar_74014);
	bool cppVar_74017 = (cppVar_74015 == 168);
	BIT_VEC cppVar_74018 = PC + 1;
	cppVar_74018 = (cppVar_74018 & cppMask_un_16_);
	BIT_VEC cppVar_74019 = ROM.rd(cppVar_74018);
	bool cppVar_74021 = (cppVar_74019 == 176);
	BIT_VEC cppVar_74022 = PC + 1;
	cppVar_74022 = (cppVar_74022 & cppMask_un_16_);
	BIT_VEC cppVar_74023 = ROM.rd(cppVar_74022);
	bool cppVar_74025 = (cppVar_74023 == 184);
	BIT_VEC cppVar_74026 = PC + 1;
	cppVar_74026 = (cppVar_74026 & cppMask_un_16_);
	BIT_VEC cppVar_74027 = ROM.rd(cppVar_74026);
	bool cppVar_74029 = (cppVar_74027 == 208);
	BIT_VEC cppVar_74030 = PC + 1;
	cppVar_74030 = (cppVar_74030 & cppMask_un_16_);
	BIT_VEC cppVar_74031 = ROM.rd(cppVar_74030);
	bool cppVar_74033 = (cppVar_74031 == 224);
	BIT_VEC cppVar_74034 = PC + 1;
	cppVar_74034 = (cppVar_74034 & cppMask_un_16_);
	BIT_VEC cppVar_74035 = ROM.rd(cppVar_74034);
	bool cppVar_74037 = (cppVar_74035 == 240);
	BIT_VEC cppVar_74039 = (cppVar_74037) ? B : 0;
	BIT_VEC cppVar_74040 = (cppVar_74033) ? ACC : cppVar_74039;
	BIT_VEC cppVar_74041 = (cppVar_74029) ? PSW : cppVar_74040;
	BIT_VEC cppVar_74042 = (cppVar_74025) ? IP : cppVar_74041;
	BIT_VEC cppVar_74043 = (cppVar_74021) ? P3 : cppVar_74042;
	BIT_VEC cppVar_74044 = (cppVar_74017) ? IE : cppVar_74043;
	BIT_VEC cppVar_74045 = (cppVar_74013) ? P2 : cppVar_74044;
	BIT_VEC cppVar_74046 = (cppVar_74009) ? SBUF : cppVar_74045;
	BIT_VEC cppVar_74047 = (cppVar_74005) ? SCON : cppVar_74046;
	BIT_VEC cppVar_74048 = (cppVar_74001) ? P1 : cppVar_74047;
	BIT_VEC cppVar_74049 = (cppVar_73997) ? TH1 : cppVar_74048;
	BIT_VEC cppVar_74050 = (cppVar_73993) ? TL1 : cppVar_74049;
	BIT_VEC cppVar_74051 = (cppVar_73989) ? TH0 : cppVar_74050;
	BIT_VEC cppVar_74052 = (cppVar_73985) ? TL0 : cppVar_74051;
	BIT_VEC cppVar_74053 = (cppVar_73981) ? TMOD : cppVar_74052;
	BIT_VEC cppVar_74054 = (cppVar_73977) ? TCON : cppVar_74053;
	BIT_VEC cppVar_74055 = (cppVar_73973) ? PCON : cppVar_74054;
	BIT_VEC cppVar_74056 = (cppVar_73969) ? DPH : cppVar_74055;
	BIT_VEC cppVar_74057 = (cppVar_73965) ? DPL : cppVar_74056;
	BIT_VEC cppVar_74058 = (cppVar_73961) ? SP : cppVar_74057;
	BIT_VEC cppVar_74059 = (cppVar_73957) ? P0 : cppVar_74058;
	BIT_VEC cppVar_74060 = (cppVar_73950) ? cppVar_73953 : cppVar_74059;
	BIT_VEC cppVar_74061 = cppVar_74060 ^ ACC;
	BIT_VEC cppVar_74062 = (cppVar_73945) ? cppVar_74061 : TH0;
	BIT_VEC cppVar_74063 = ROM.rd(PC);
	bool cppVar_74065 = (cppVar_74063 == 83);
	BIT_VEC cppVar_74067 = PC + 1;
	cppVar_74067 = (cppVar_74067 & cppMask_un_16_);
	BIT_VEC cppVar_74068 = ROM.rd(cppVar_74067);
	bool cppVar_74070 = (cppVar_74068 == 140);
	BIT_VEC cppVar_74071 = PC + 1;
	cppVar_74071 = (cppVar_74071 & cppMask_un_16_);
	BIT_VEC cppVar_74072 = ROM.rd(cppVar_74071);
	BIT_VEC cppVar_74073 = (cppVar_74072 >> 7) & cppMask_un_1_;
	bool cppVar_74075 = (cppVar_74073 == 0);
	BIT_VEC cppVar_74076 = PC + 1;
	cppVar_74076 = (cppVar_74076 & cppMask_un_16_);
	BIT_VEC cppVar_74077 = ROM.rd(cppVar_74076);
	BIT_VEC cppVar_74078 = IRAM.rd(cppVar_74077);
	BIT_VEC cppVar_74079 = PC + 1;
	cppVar_74079 = (cppVar_74079 & cppMask_un_16_);
	BIT_VEC cppVar_74080 = ROM.rd(cppVar_74079);
	bool cppVar_74082 = (cppVar_74080 == 128);
	BIT_VEC cppVar_74083 = PC + 1;
	cppVar_74083 = (cppVar_74083 & cppMask_un_16_);
	BIT_VEC cppVar_74084 = ROM.rd(cppVar_74083);
	bool cppVar_74086 = (cppVar_74084 == 129);
	BIT_VEC cppVar_74087 = PC + 1;
	cppVar_74087 = (cppVar_74087 & cppMask_un_16_);
	BIT_VEC cppVar_74088 = ROM.rd(cppVar_74087);
	bool cppVar_74090 = (cppVar_74088 == 130);
	BIT_VEC cppVar_74091 = PC + 1;
	cppVar_74091 = (cppVar_74091 & cppMask_un_16_);
	BIT_VEC cppVar_74092 = ROM.rd(cppVar_74091);
	bool cppVar_74094 = (cppVar_74092 == 131);
	BIT_VEC cppVar_74095 = PC + 1;
	cppVar_74095 = (cppVar_74095 & cppMask_un_16_);
	BIT_VEC cppVar_74096 = ROM.rd(cppVar_74095);
	bool cppVar_74098 = (cppVar_74096 == 135);
	BIT_VEC cppVar_74099 = PC + 1;
	cppVar_74099 = (cppVar_74099 & cppMask_un_16_);
	BIT_VEC cppVar_74100 = ROM.rd(cppVar_74099);
	bool cppVar_74102 = (cppVar_74100 == 136);
	BIT_VEC cppVar_74103 = PC + 1;
	cppVar_74103 = (cppVar_74103 & cppMask_un_16_);
	BIT_VEC cppVar_74104 = ROM.rd(cppVar_74103);
	bool cppVar_74106 = (cppVar_74104 == 137);
	BIT_VEC cppVar_74107 = PC + 1;
	cppVar_74107 = (cppVar_74107 & cppMask_un_16_);
	BIT_VEC cppVar_74108 = ROM.rd(cppVar_74107);
	bool cppVar_74110 = (cppVar_74108 == 138);
	BIT_VEC cppVar_74111 = PC + 1;
	cppVar_74111 = (cppVar_74111 & cppMask_un_16_);
	BIT_VEC cppVar_74112 = ROM.rd(cppVar_74111);
	bool cppVar_74114 = (cppVar_74112 == 140);
	BIT_VEC cppVar_74115 = PC + 1;
	cppVar_74115 = (cppVar_74115 & cppMask_un_16_);
	BIT_VEC cppVar_74116 = ROM.rd(cppVar_74115);
	bool cppVar_74118 = (cppVar_74116 == 139);
	BIT_VEC cppVar_74119 = PC + 1;
	cppVar_74119 = (cppVar_74119 & cppMask_un_16_);
	BIT_VEC cppVar_74120 = ROM.rd(cppVar_74119);
	bool cppVar_74122 = (cppVar_74120 == 141);
	BIT_VEC cppVar_74123 = PC + 1;
	cppVar_74123 = (cppVar_74123 & cppMask_un_16_);
	BIT_VEC cppVar_74124 = ROM.rd(cppVar_74123);
	bool cppVar_74126 = (cppVar_74124 == 144);
	BIT_VEC cppVar_74127 = PC + 1;
	cppVar_74127 = (cppVar_74127 & cppMask_un_16_);
	BIT_VEC cppVar_74128 = ROM.rd(cppVar_74127);
	bool cppVar_74130 = (cppVar_74128 == 152);
	BIT_VEC cppVar_74131 = PC + 1;
	cppVar_74131 = (cppVar_74131 & cppMask_un_16_);
	BIT_VEC cppVar_74132 = ROM.rd(cppVar_74131);
	bool cppVar_74134 = (cppVar_74132 == 153);
	BIT_VEC cppVar_74135 = PC + 1;
	cppVar_74135 = (cppVar_74135 & cppMask_un_16_);
	BIT_VEC cppVar_74136 = ROM.rd(cppVar_74135);
	bool cppVar_74138 = (cppVar_74136 == 160);
	BIT_VEC cppVar_74139 = PC + 1;
	cppVar_74139 = (cppVar_74139 & cppMask_un_16_);
	BIT_VEC cppVar_74140 = ROM.rd(cppVar_74139);
	bool cppVar_74142 = (cppVar_74140 == 168);
	BIT_VEC cppVar_74143 = PC + 1;
	cppVar_74143 = (cppVar_74143 & cppMask_un_16_);
	BIT_VEC cppVar_74144 = ROM.rd(cppVar_74143);
	bool cppVar_74146 = (cppVar_74144 == 176);
	BIT_VEC cppVar_74147 = PC + 1;
	cppVar_74147 = (cppVar_74147 & cppMask_un_16_);
	BIT_VEC cppVar_74148 = ROM.rd(cppVar_74147);
	bool cppVar_74150 = (cppVar_74148 == 184);
	BIT_VEC cppVar_74151 = PC + 1;
	cppVar_74151 = (cppVar_74151 & cppMask_un_16_);
	BIT_VEC cppVar_74152 = ROM.rd(cppVar_74151);
	bool cppVar_74154 = (cppVar_74152 == 208);
	BIT_VEC cppVar_74155 = PC + 1;
	cppVar_74155 = (cppVar_74155 & cppMask_un_16_);
	BIT_VEC cppVar_74156 = ROM.rd(cppVar_74155);
	bool cppVar_74158 = (cppVar_74156 == 224);
	BIT_VEC cppVar_74159 = PC + 1;
	cppVar_74159 = (cppVar_74159 & cppMask_un_16_);
	BIT_VEC cppVar_74160 = ROM.rd(cppVar_74159);
	bool cppVar_74162 = (cppVar_74160 == 240);
	BIT_VEC cppVar_74164 = (cppVar_74162) ? B : 0;
	BIT_VEC cppVar_74165 = (cppVar_74158) ? ACC : cppVar_74164;
	BIT_VEC cppVar_74166 = (cppVar_74154) ? PSW : cppVar_74165;
	BIT_VEC cppVar_74167 = (cppVar_74150) ? IP : cppVar_74166;
	BIT_VEC cppVar_74168 = (cppVar_74146) ? P3 : cppVar_74167;
	BIT_VEC cppVar_74169 = (cppVar_74142) ? IE : cppVar_74168;
	BIT_VEC cppVar_74170 = (cppVar_74138) ? P2 : cppVar_74169;
	BIT_VEC cppVar_74171 = (cppVar_74134) ? SBUF : cppVar_74170;
	BIT_VEC cppVar_74172 = (cppVar_74130) ? SCON : cppVar_74171;
	BIT_VEC cppVar_74173 = (cppVar_74126) ? P1 : cppVar_74172;
	BIT_VEC cppVar_74174 = (cppVar_74122) ? TH1 : cppVar_74173;
	BIT_VEC cppVar_74175 = (cppVar_74118) ? TL1 : cppVar_74174;
	BIT_VEC cppVar_74176 = (cppVar_74114) ? TH0 : cppVar_74175;
	BIT_VEC cppVar_74177 = (cppVar_74110) ? TL0 : cppVar_74176;
	BIT_VEC cppVar_74178 = (cppVar_74106) ? TMOD : cppVar_74177;
	BIT_VEC cppVar_74179 = (cppVar_74102) ? TCON : cppVar_74178;
	BIT_VEC cppVar_74180 = (cppVar_74098) ? PCON : cppVar_74179;
	BIT_VEC cppVar_74181 = (cppVar_74094) ? DPH : cppVar_74180;
	BIT_VEC cppVar_74182 = (cppVar_74090) ? DPL : cppVar_74181;
	BIT_VEC cppVar_74183 = (cppVar_74086) ? SP : cppVar_74182;
	BIT_VEC cppVar_74184 = (cppVar_74082) ? P0 : cppVar_74183;
	BIT_VEC cppVar_74185 = (cppVar_74075) ? cppVar_74078 : cppVar_74184;
	BIT_VEC cppVar_74187 = PC + 2;
	cppVar_74187 = (cppVar_74187 & cppMask_un_16_);
	BIT_VEC cppVar_74188 = ROM.rd(cppVar_74187);
	BIT_VEC cppVar_74189 = cppVar_74185 & cppVar_74188;
	BIT_VEC cppVar_74190 = (cppVar_74070) ? cppVar_74189 : TH0;
	BIT_VEC cppVar_74191 = ROM.rd(PC);
	bool cppVar_74193 = (cppVar_74191 == 82);
	BIT_VEC cppVar_74195 = PC + 1;
	cppVar_74195 = (cppVar_74195 & cppMask_un_16_);
	BIT_VEC cppVar_74196 = ROM.rd(cppVar_74195);
	bool cppVar_74198 = (cppVar_74196 == 140);
	BIT_VEC cppVar_74199 = PC + 1;
	cppVar_74199 = (cppVar_74199 & cppMask_un_16_);
	BIT_VEC cppVar_74200 = ROM.rd(cppVar_74199);
	BIT_VEC cppVar_74201 = (cppVar_74200 >> 7) & cppMask_un_1_;
	bool cppVar_74203 = (cppVar_74201 == 0);
	BIT_VEC cppVar_74204 = PC + 1;
	cppVar_74204 = (cppVar_74204 & cppMask_un_16_);
	BIT_VEC cppVar_74205 = ROM.rd(cppVar_74204);
	BIT_VEC cppVar_74206 = IRAM.rd(cppVar_74205);
	BIT_VEC cppVar_74207 = PC + 1;
	cppVar_74207 = (cppVar_74207 & cppMask_un_16_);
	BIT_VEC cppVar_74208 = ROM.rd(cppVar_74207);
	bool cppVar_74210 = (cppVar_74208 == 128);
	BIT_VEC cppVar_74211 = PC + 1;
	cppVar_74211 = (cppVar_74211 & cppMask_un_16_);
	BIT_VEC cppVar_74212 = ROM.rd(cppVar_74211);
	bool cppVar_74214 = (cppVar_74212 == 129);
	BIT_VEC cppVar_74215 = PC + 1;
	cppVar_74215 = (cppVar_74215 & cppMask_un_16_);
	BIT_VEC cppVar_74216 = ROM.rd(cppVar_74215);
	bool cppVar_74218 = (cppVar_74216 == 130);
	BIT_VEC cppVar_74219 = PC + 1;
	cppVar_74219 = (cppVar_74219 & cppMask_un_16_);
	BIT_VEC cppVar_74220 = ROM.rd(cppVar_74219);
	bool cppVar_74222 = (cppVar_74220 == 131);
	BIT_VEC cppVar_74223 = PC + 1;
	cppVar_74223 = (cppVar_74223 & cppMask_un_16_);
	BIT_VEC cppVar_74224 = ROM.rd(cppVar_74223);
	bool cppVar_74226 = (cppVar_74224 == 135);
	BIT_VEC cppVar_74227 = PC + 1;
	cppVar_74227 = (cppVar_74227 & cppMask_un_16_);
	BIT_VEC cppVar_74228 = ROM.rd(cppVar_74227);
	bool cppVar_74230 = (cppVar_74228 == 136);
	BIT_VEC cppVar_74231 = PC + 1;
	cppVar_74231 = (cppVar_74231 & cppMask_un_16_);
	BIT_VEC cppVar_74232 = ROM.rd(cppVar_74231);
	bool cppVar_74234 = (cppVar_74232 == 137);
	BIT_VEC cppVar_74235 = PC + 1;
	cppVar_74235 = (cppVar_74235 & cppMask_un_16_);
	BIT_VEC cppVar_74236 = ROM.rd(cppVar_74235);
	bool cppVar_74238 = (cppVar_74236 == 138);
	BIT_VEC cppVar_74239 = PC + 1;
	cppVar_74239 = (cppVar_74239 & cppMask_un_16_);
	BIT_VEC cppVar_74240 = ROM.rd(cppVar_74239);
	bool cppVar_74242 = (cppVar_74240 == 140);
	BIT_VEC cppVar_74243 = PC + 1;
	cppVar_74243 = (cppVar_74243 & cppMask_un_16_);
	BIT_VEC cppVar_74244 = ROM.rd(cppVar_74243);
	bool cppVar_74246 = (cppVar_74244 == 139);
	BIT_VEC cppVar_74247 = PC + 1;
	cppVar_74247 = (cppVar_74247 & cppMask_un_16_);
	BIT_VEC cppVar_74248 = ROM.rd(cppVar_74247);
	bool cppVar_74250 = (cppVar_74248 == 141);
	BIT_VEC cppVar_74251 = PC + 1;
	cppVar_74251 = (cppVar_74251 & cppMask_un_16_);
	BIT_VEC cppVar_74252 = ROM.rd(cppVar_74251);
	bool cppVar_74254 = (cppVar_74252 == 144);
	BIT_VEC cppVar_74255 = PC + 1;
	cppVar_74255 = (cppVar_74255 & cppMask_un_16_);
	BIT_VEC cppVar_74256 = ROM.rd(cppVar_74255);
	bool cppVar_74258 = (cppVar_74256 == 152);
	BIT_VEC cppVar_74259 = PC + 1;
	cppVar_74259 = (cppVar_74259 & cppMask_un_16_);
	BIT_VEC cppVar_74260 = ROM.rd(cppVar_74259);
	bool cppVar_74262 = (cppVar_74260 == 153);
	BIT_VEC cppVar_74263 = PC + 1;
	cppVar_74263 = (cppVar_74263 & cppMask_un_16_);
	BIT_VEC cppVar_74264 = ROM.rd(cppVar_74263);
	bool cppVar_74266 = (cppVar_74264 == 160);
	BIT_VEC cppVar_74267 = PC + 1;
	cppVar_74267 = (cppVar_74267 & cppMask_un_16_);
	BIT_VEC cppVar_74268 = ROM.rd(cppVar_74267);
	bool cppVar_74270 = (cppVar_74268 == 168);
	BIT_VEC cppVar_74271 = PC + 1;
	cppVar_74271 = (cppVar_74271 & cppMask_un_16_);
	BIT_VEC cppVar_74272 = ROM.rd(cppVar_74271);
	bool cppVar_74274 = (cppVar_74272 == 176);
	BIT_VEC cppVar_74275 = PC + 1;
	cppVar_74275 = (cppVar_74275 & cppMask_un_16_);
	BIT_VEC cppVar_74276 = ROM.rd(cppVar_74275);
	bool cppVar_74278 = (cppVar_74276 == 184);
	BIT_VEC cppVar_74279 = PC + 1;
	cppVar_74279 = (cppVar_74279 & cppMask_un_16_);
	BIT_VEC cppVar_74280 = ROM.rd(cppVar_74279);
	bool cppVar_74282 = (cppVar_74280 == 208);
	BIT_VEC cppVar_74283 = PC + 1;
	cppVar_74283 = (cppVar_74283 & cppMask_un_16_);
	BIT_VEC cppVar_74284 = ROM.rd(cppVar_74283);
	bool cppVar_74286 = (cppVar_74284 == 224);
	BIT_VEC cppVar_74287 = PC + 1;
	cppVar_74287 = (cppVar_74287 & cppMask_un_16_);
	BIT_VEC cppVar_74288 = ROM.rd(cppVar_74287);
	bool cppVar_74290 = (cppVar_74288 == 240);
	BIT_VEC cppVar_74292 = (cppVar_74290) ? B : 0;
	BIT_VEC cppVar_74293 = (cppVar_74286) ? ACC : cppVar_74292;
	BIT_VEC cppVar_74294 = (cppVar_74282) ? PSW : cppVar_74293;
	BIT_VEC cppVar_74295 = (cppVar_74278) ? IP : cppVar_74294;
	BIT_VEC cppVar_74296 = (cppVar_74274) ? P3 : cppVar_74295;
	BIT_VEC cppVar_74297 = (cppVar_74270) ? IE : cppVar_74296;
	BIT_VEC cppVar_74298 = (cppVar_74266) ? P2 : cppVar_74297;
	BIT_VEC cppVar_74299 = (cppVar_74262) ? SBUF : cppVar_74298;
	BIT_VEC cppVar_74300 = (cppVar_74258) ? SCON : cppVar_74299;
	BIT_VEC cppVar_74301 = (cppVar_74254) ? P1 : cppVar_74300;
	BIT_VEC cppVar_74302 = (cppVar_74250) ? TH1 : cppVar_74301;
	BIT_VEC cppVar_74303 = (cppVar_74246) ? TL1 : cppVar_74302;
	BIT_VEC cppVar_74304 = (cppVar_74242) ? TH0 : cppVar_74303;
	BIT_VEC cppVar_74305 = (cppVar_74238) ? TL0 : cppVar_74304;
	BIT_VEC cppVar_74306 = (cppVar_74234) ? TMOD : cppVar_74305;
	BIT_VEC cppVar_74307 = (cppVar_74230) ? TCON : cppVar_74306;
	BIT_VEC cppVar_74308 = (cppVar_74226) ? PCON : cppVar_74307;
	BIT_VEC cppVar_74309 = (cppVar_74222) ? DPH : cppVar_74308;
	BIT_VEC cppVar_74310 = (cppVar_74218) ? DPL : cppVar_74309;
	BIT_VEC cppVar_74311 = (cppVar_74214) ? SP : cppVar_74310;
	BIT_VEC cppVar_74312 = (cppVar_74210) ? P0 : cppVar_74311;
	BIT_VEC cppVar_74313 = (cppVar_74203) ? cppVar_74206 : cppVar_74312;
	BIT_VEC cppVar_74314 = cppVar_74313 & ACC;
	BIT_VEC cppVar_74315 = (cppVar_74198) ? cppVar_74314 : TH0;
	BIT_VEC cppVar_74316 = ROM.rd(PC);
	bool cppVar_74318 = (cppVar_74316 == 67);
	BIT_VEC cppVar_74320 = PC + 1;
	cppVar_74320 = (cppVar_74320 & cppMask_un_16_);
	BIT_VEC cppVar_74321 = ROM.rd(cppVar_74320);
	bool cppVar_74323 = (cppVar_74321 == 140);
	BIT_VEC cppVar_74324 = PC + 1;
	cppVar_74324 = (cppVar_74324 & cppMask_un_16_);
	BIT_VEC cppVar_74325 = ROM.rd(cppVar_74324);
	BIT_VEC cppVar_74326 = (cppVar_74325 >> 7) & cppMask_un_1_;
	bool cppVar_74328 = (cppVar_74326 == 0);
	BIT_VEC cppVar_74329 = PC + 1;
	cppVar_74329 = (cppVar_74329 & cppMask_un_16_);
	BIT_VEC cppVar_74330 = ROM.rd(cppVar_74329);
	BIT_VEC cppVar_74331 = IRAM.rd(cppVar_74330);
	BIT_VEC cppVar_74332 = PC + 1;
	cppVar_74332 = (cppVar_74332 & cppMask_un_16_);
	BIT_VEC cppVar_74333 = ROM.rd(cppVar_74332);
	bool cppVar_74335 = (cppVar_74333 == 128);
	BIT_VEC cppVar_74336 = PC + 1;
	cppVar_74336 = (cppVar_74336 & cppMask_un_16_);
	BIT_VEC cppVar_74337 = ROM.rd(cppVar_74336);
	bool cppVar_74339 = (cppVar_74337 == 129);
	BIT_VEC cppVar_74340 = PC + 1;
	cppVar_74340 = (cppVar_74340 & cppMask_un_16_);
	BIT_VEC cppVar_74341 = ROM.rd(cppVar_74340);
	bool cppVar_74343 = (cppVar_74341 == 130);
	BIT_VEC cppVar_74344 = PC + 1;
	cppVar_74344 = (cppVar_74344 & cppMask_un_16_);
	BIT_VEC cppVar_74345 = ROM.rd(cppVar_74344);
	bool cppVar_74347 = (cppVar_74345 == 131);
	BIT_VEC cppVar_74348 = PC + 1;
	cppVar_74348 = (cppVar_74348 & cppMask_un_16_);
	BIT_VEC cppVar_74349 = ROM.rd(cppVar_74348);
	bool cppVar_74351 = (cppVar_74349 == 135);
	BIT_VEC cppVar_74352 = PC + 1;
	cppVar_74352 = (cppVar_74352 & cppMask_un_16_);
	BIT_VEC cppVar_74353 = ROM.rd(cppVar_74352);
	bool cppVar_74355 = (cppVar_74353 == 136);
	BIT_VEC cppVar_74356 = PC + 1;
	cppVar_74356 = (cppVar_74356 & cppMask_un_16_);
	BIT_VEC cppVar_74357 = ROM.rd(cppVar_74356);
	bool cppVar_74359 = (cppVar_74357 == 137);
	BIT_VEC cppVar_74360 = PC + 1;
	cppVar_74360 = (cppVar_74360 & cppMask_un_16_);
	BIT_VEC cppVar_74361 = ROM.rd(cppVar_74360);
	bool cppVar_74363 = (cppVar_74361 == 138);
	BIT_VEC cppVar_74364 = PC + 1;
	cppVar_74364 = (cppVar_74364 & cppMask_un_16_);
	BIT_VEC cppVar_74365 = ROM.rd(cppVar_74364);
	bool cppVar_74367 = (cppVar_74365 == 140);
	BIT_VEC cppVar_74368 = PC + 1;
	cppVar_74368 = (cppVar_74368 & cppMask_un_16_);
	BIT_VEC cppVar_74369 = ROM.rd(cppVar_74368);
	bool cppVar_74371 = (cppVar_74369 == 139);
	BIT_VEC cppVar_74372 = PC + 1;
	cppVar_74372 = (cppVar_74372 & cppMask_un_16_);
	BIT_VEC cppVar_74373 = ROM.rd(cppVar_74372);
	bool cppVar_74375 = (cppVar_74373 == 141);
	BIT_VEC cppVar_74376 = PC + 1;
	cppVar_74376 = (cppVar_74376 & cppMask_un_16_);
	BIT_VEC cppVar_74377 = ROM.rd(cppVar_74376);
	bool cppVar_74379 = (cppVar_74377 == 144);
	BIT_VEC cppVar_74380 = PC + 1;
	cppVar_74380 = (cppVar_74380 & cppMask_un_16_);
	BIT_VEC cppVar_74381 = ROM.rd(cppVar_74380);
	bool cppVar_74383 = (cppVar_74381 == 152);
	BIT_VEC cppVar_74384 = PC + 1;
	cppVar_74384 = (cppVar_74384 & cppMask_un_16_);
	BIT_VEC cppVar_74385 = ROM.rd(cppVar_74384);
	bool cppVar_74387 = (cppVar_74385 == 153);
	BIT_VEC cppVar_74388 = PC + 1;
	cppVar_74388 = (cppVar_74388 & cppMask_un_16_);
	BIT_VEC cppVar_74389 = ROM.rd(cppVar_74388);
	bool cppVar_74391 = (cppVar_74389 == 160);
	BIT_VEC cppVar_74392 = PC + 1;
	cppVar_74392 = (cppVar_74392 & cppMask_un_16_);
	BIT_VEC cppVar_74393 = ROM.rd(cppVar_74392);
	bool cppVar_74395 = (cppVar_74393 == 168);
	BIT_VEC cppVar_74396 = PC + 1;
	cppVar_74396 = (cppVar_74396 & cppMask_un_16_);
	BIT_VEC cppVar_74397 = ROM.rd(cppVar_74396);
	bool cppVar_74399 = (cppVar_74397 == 176);
	BIT_VEC cppVar_74400 = PC + 1;
	cppVar_74400 = (cppVar_74400 & cppMask_un_16_);
	BIT_VEC cppVar_74401 = ROM.rd(cppVar_74400);
	bool cppVar_74403 = (cppVar_74401 == 184);
	BIT_VEC cppVar_74404 = PC + 1;
	cppVar_74404 = (cppVar_74404 & cppMask_un_16_);
	BIT_VEC cppVar_74405 = ROM.rd(cppVar_74404);
	bool cppVar_74407 = (cppVar_74405 == 208);
	BIT_VEC cppVar_74408 = PC + 1;
	cppVar_74408 = (cppVar_74408 & cppMask_un_16_);
	BIT_VEC cppVar_74409 = ROM.rd(cppVar_74408);
	bool cppVar_74411 = (cppVar_74409 == 224);
	BIT_VEC cppVar_74412 = PC + 1;
	cppVar_74412 = (cppVar_74412 & cppMask_un_16_);
	BIT_VEC cppVar_74413 = ROM.rd(cppVar_74412);
	bool cppVar_74415 = (cppVar_74413 == 240);
	BIT_VEC cppVar_74417 = (cppVar_74415) ? B : 0;
	BIT_VEC cppVar_74418 = (cppVar_74411) ? ACC : cppVar_74417;
	BIT_VEC cppVar_74419 = (cppVar_74407) ? PSW : cppVar_74418;
	BIT_VEC cppVar_74420 = (cppVar_74403) ? IP : cppVar_74419;
	BIT_VEC cppVar_74421 = (cppVar_74399) ? P3 : cppVar_74420;
	BIT_VEC cppVar_74422 = (cppVar_74395) ? IE : cppVar_74421;
	BIT_VEC cppVar_74423 = (cppVar_74391) ? P2 : cppVar_74422;
	BIT_VEC cppVar_74424 = (cppVar_74387) ? SBUF : cppVar_74423;
	BIT_VEC cppVar_74425 = (cppVar_74383) ? SCON : cppVar_74424;
	BIT_VEC cppVar_74426 = (cppVar_74379) ? P1 : cppVar_74425;
	BIT_VEC cppVar_74427 = (cppVar_74375) ? TH1 : cppVar_74426;
	BIT_VEC cppVar_74428 = (cppVar_74371) ? TL1 : cppVar_74427;
	BIT_VEC cppVar_74429 = (cppVar_74367) ? TH0 : cppVar_74428;
	BIT_VEC cppVar_74430 = (cppVar_74363) ? TL0 : cppVar_74429;
	BIT_VEC cppVar_74431 = (cppVar_74359) ? TMOD : cppVar_74430;
	BIT_VEC cppVar_74432 = (cppVar_74355) ? TCON : cppVar_74431;
	BIT_VEC cppVar_74433 = (cppVar_74351) ? PCON : cppVar_74432;
	BIT_VEC cppVar_74434 = (cppVar_74347) ? DPH : cppVar_74433;
	BIT_VEC cppVar_74435 = (cppVar_74343) ? DPL : cppVar_74434;
	BIT_VEC cppVar_74436 = (cppVar_74339) ? SP : cppVar_74435;
	BIT_VEC cppVar_74437 = (cppVar_74335) ? P0 : cppVar_74436;
	BIT_VEC cppVar_74438 = (cppVar_74328) ? cppVar_74331 : cppVar_74437;
	BIT_VEC cppVar_74440 = PC + 2;
	cppVar_74440 = (cppVar_74440 & cppMask_un_16_);
	BIT_VEC cppVar_74441 = ROM.rd(cppVar_74440);
	BIT_VEC cppVar_74442 = cppVar_74438 | cppVar_74441;
	BIT_VEC cppVar_74443 = (cppVar_74323) ? cppVar_74442 : TH0;
	BIT_VEC cppVar_74444 = ROM.rd(PC);
	bool cppVar_74446 = (cppVar_74444 == 66);
	BIT_VEC cppVar_74448 = PC + 1;
	cppVar_74448 = (cppVar_74448 & cppMask_un_16_);
	BIT_VEC cppVar_74449 = ROM.rd(cppVar_74448);
	bool cppVar_74451 = (cppVar_74449 == 140);
	BIT_VEC cppVar_74452 = PC + 1;
	cppVar_74452 = (cppVar_74452 & cppMask_un_16_);
	BIT_VEC cppVar_74453 = ROM.rd(cppVar_74452);
	BIT_VEC cppVar_74454 = (cppVar_74453 >> 7) & cppMask_un_1_;
	bool cppVar_74456 = (cppVar_74454 == 0);
	BIT_VEC cppVar_74457 = PC + 1;
	cppVar_74457 = (cppVar_74457 & cppMask_un_16_);
	BIT_VEC cppVar_74458 = ROM.rd(cppVar_74457);
	BIT_VEC cppVar_74459 = IRAM.rd(cppVar_74458);
	BIT_VEC cppVar_74460 = PC + 1;
	cppVar_74460 = (cppVar_74460 & cppMask_un_16_);
	BIT_VEC cppVar_74461 = ROM.rd(cppVar_74460);
	bool cppVar_74463 = (cppVar_74461 == 128);
	BIT_VEC cppVar_74464 = PC + 1;
	cppVar_74464 = (cppVar_74464 & cppMask_un_16_);
	BIT_VEC cppVar_74465 = ROM.rd(cppVar_74464);
	bool cppVar_74467 = (cppVar_74465 == 129);
	BIT_VEC cppVar_74468 = PC + 1;
	cppVar_74468 = (cppVar_74468 & cppMask_un_16_);
	BIT_VEC cppVar_74469 = ROM.rd(cppVar_74468);
	bool cppVar_74471 = (cppVar_74469 == 130);
	BIT_VEC cppVar_74472 = PC + 1;
	cppVar_74472 = (cppVar_74472 & cppMask_un_16_);
	BIT_VEC cppVar_74473 = ROM.rd(cppVar_74472);
	bool cppVar_74475 = (cppVar_74473 == 131);
	BIT_VEC cppVar_74476 = PC + 1;
	cppVar_74476 = (cppVar_74476 & cppMask_un_16_);
	BIT_VEC cppVar_74477 = ROM.rd(cppVar_74476);
	bool cppVar_74479 = (cppVar_74477 == 135);
	BIT_VEC cppVar_74480 = PC + 1;
	cppVar_74480 = (cppVar_74480 & cppMask_un_16_);
	BIT_VEC cppVar_74481 = ROM.rd(cppVar_74480);
	bool cppVar_74483 = (cppVar_74481 == 136);
	BIT_VEC cppVar_74484 = PC + 1;
	cppVar_74484 = (cppVar_74484 & cppMask_un_16_);
	BIT_VEC cppVar_74485 = ROM.rd(cppVar_74484);
	bool cppVar_74487 = (cppVar_74485 == 137);
	BIT_VEC cppVar_74488 = PC + 1;
	cppVar_74488 = (cppVar_74488 & cppMask_un_16_);
	BIT_VEC cppVar_74489 = ROM.rd(cppVar_74488);
	bool cppVar_74491 = (cppVar_74489 == 138);
	BIT_VEC cppVar_74492 = PC + 1;
	cppVar_74492 = (cppVar_74492 & cppMask_un_16_);
	BIT_VEC cppVar_74493 = ROM.rd(cppVar_74492);
	bool cppVar_74495 = (cppVar_74493 == 140);
	BIT_VEC cppVar_74496 = PC + 1;
	cppVar_74496 = (cppVar_74496 & cppMask_un_16_);
	BIT_VEC cppVar_74497 = ROM.rd(cppVar_74496);
	bool cppVar_74499 = (cppVar_74497 == 139);
	BIT_VEC cppVar_74500 = PC + 1;
	cppVar_74500 = (cppVar_74500 & cppMask_un_16_);
	BIT_VEC cppVar_74501 = ROM.rd(cppVar_74500);
	bool cppVar_74503 = (cppVar_74501 == 141);
	BIT_VEC cppVar_74504 = PC + 1;
	cppVar_74504 = (cppVar_74504 & cppMask_un_16_);
	BIT_VEC cppVar_74505 = ROM.rd(cppVar_74504);
	bool cppVar_74507 = (cppVar_74505 == 144);
	BIT_VEC cppVar_74508 = PC + 1;
	cppVar_74508 = (cppVar_74508 & cppMask_un_16_);
	BIT_VEC cppVar_74509 = ROM.rd(cppVar_74508);
	bool cppVar_74511 = (cppVar_74509 == 152);
	BIT_VEC cppVar_74512 = PC + 1;
	cppVar_74512 = (cppVar_74512 & cppMask_un_16_);
	BIT_VEC cppVar_74513 = ROM.rd(cppVar_74512);
	bool cppVar_74515 = (cppVar_74513 == 153);
	BIT_VEC cppVar_74516 = PC + 1;
	cppVar_74516 = (cppVar_74516 & cppMask_un_16_);
	BIT_VEC cppVar_74517 = ROM.rd(cppVar_74516);
	bool cppVar_74519 = (cppVar_74517 == 160);
	BIT_VEC cppVar_74520 = PC + 1;
	cppVar_74520 = (cppVar_74520 & cppMask_un_16_);
	BIT_VEC cppVar_74521 = ROM.rd(cppVar_74520);
	bool cppVar_74523 = (cppVar_74521 == 168);
	BIT_VEC cppVar_74524 = PC + 1;
	cppVar_74524 = (cppVar_74524 & cppMask_un_16_);
	BIT_VEC cppVar_74525 = ROM.rd(cppVar_74524);
	bool cppVar_74527 = (cppVar_74525 == 176);
	BIT_VEC cppVar_74528 = PC + 1;
	cppVar_74528 = (cppVar_74528 & cppMask_un_16_);
	BIT_VEC cppVar_74529 = ROM.rd(cppVar_74528);
	bool cppVar_74531 = (cppVar_74529 == 184);
	BIT_VEC cppVar_74532 = PC + 1;
	cppVar_74532 = (cppVar_74532 & cppMask_un_16_);
	BIT_VEC cppVar_74533 = ROM.rd(cppVar_74532);
	bool cppVar_74535 = (cppVar_74533 == 208);
	BIT_VEC cppVar_74536 = PC + 1;
	cppVar_74536 = (cppVar_74536 & cppMask_un_16_);
	BIT_VEC cppVar_74537 = ROM.rd(cppVar_74536);
	bool cppVar_74539 = (cppVar_74537 == 224);
	BIT_VEC cppVar_74540 = PC + 1;
	cppVar_74540 = (cppVar_74540 & cppMask_un_16_);
	BIT_VEC cppVar_74541 = ROM.rd(cppVar_74540);
	bool cppVar_74543 = (cppVar_74541 == 240);
	BIT_VEC cppVar_74545 = (cppVar_74543) ? B : 0;
	BIT_VEC cppVar_74546 = (cppVar_74539) ? ACC : cppVar_74545;
	BIT_VEC cppVar_74547 = (cppVar_74535) ? PSW : cppVar_74546;
	BIT_VEC cppVar_74548 = (cppVar_74531) ? IP : cppVar_74547;
	BIT_VEC cppVar_74549 = (cppVar_74527) ? P3 : cppVar_74548;
	BIT_VEC cppVar_74550 = (cppVar_74523) ? IE : cppVar_74549;
	BIT_VEC cppVar_74551 = (cppVar_74519) ? P2 : cppVar_74550;
	BIT_VEC cppVar_74552 = (cppVar_74515) ? SBUF : cppVar_74551;
	BIT_VEC cppVar_74553 = (cppVar_74511) ? SCON : cppVar_74552;
	BIT_VEC cppVar_74554 = (cppVar_74507) ? P1 : cppVar_74553;
	BIT_VEC cppVar_74555 = (cppVar_74503) ? TH1 : cppVar_74554;
	BIT_VEC cppVar_74556 = (cppVar_74499) ? TL1 : cppVar_74555;
	BIT_VEC cppVar_74557 = (cppVar_74495) ? TH0 : cppVar_74556;
	BIT_VEC cppVar_74558 = (cppVar_74491) ? TL0 : cppVar_74557;
	BIT_VEC cppVar_74559 = (cppVar_74487) ? TMOD : cppVar_74558;
	BIT_VEC cppVar_74560 = (cppVar_74483) ? TCON : cppVar_74559;
	BIT_VEC cppVar_74561 = (cppVar_74479) ? PCON : cppVar_74560;
	BIT_VEC cppVar_74562 = (cppVar_74475) ? DPH : cppVar_74561;
	BIT_VEC cppVar_74563 = (cppVar_74471) ? DPL : cppVar_74562;
	BIT_VEC cppVar_74564 = (cppVar_74467) ? SP : cppVar_74563;
	BIT_VEC cppVar_74565 = (cppVar_74463) ? P0 : cppVar_74564;
	BIT_VEC cppVar_74566 = (cppVar_74456) ? cppVar_74459 : cppVar_74565;
	BIT_VEC cppVar_74567 = cppVar_74566 | ACC;
	BIT_VEC cppVar_74568 = (cppVar_74451) ? cppVar_74567 : TH0;
	BIT_VEC cppVar_74569 = ROM.rd(PC);
	bool cppVar_74571 = (cppVar_74569 == 213);
	BIT_VEC cppVar_74572 = ROM.rd(PC);
	bool cppVar_74574 = (cppVar_74572 == 21);
	bool cppVar_74575 = cppVar_74571 || cppVar_74574;
	BIT_VEC cppVar_74577 = PC + 1;
	cppVar_74577 = (cppVar_74577 & cppMask_un_16_);
	BIT_VEC cppVar_74578 = ROM.rd(cppVar_74577);
	bool cppVar_74580 = (cppVar_74578 == 140);
	BIT_VEC cppVar_74581 = PC + 1;
	cppVar_74581 = (cppVar_74581 & cppMask_un_16_);
	BIT_VEC cppVar_74582 = ROM.rd(cppVar_74581);
	BIT_VEC cppVar_74583 = (cppVar_74582 >> 7) & cppMask_un_1_;
	bool cppVar_74585 = (cppVar_74583 == 0);
	BIT_VEC cppVar_74586 = PC + 1;
	cppVar_74586 = (cppVar_74586 & cppMask_un_16_);
	BIT_VEC cppVar_74587 = ROM.rd(cppVar_74586);
	BIT_VEC cppVar_74588 = IRAM.rd(cppVar_74587);
	BIT_VEC cppVar_74589 = PC + 1;
	cppVar_74589 = (cppVar_74589 & cppMask_un_16_);
	BIT_VEC cppVar_74590 = ROM.rd(cppVar_74589);
	bool cppVar_74592 = (cppVar_74590 == 128);
	BIT_VEC cppVar_74593 = PC + 1;
	cppVar_74593 = (cppVar_74593 & cppMask_un_16_);
	BIT_VEC cppVar_74594 = ROM.rd(cppVar_74593);
	bool cppVar_74596 = (cppVar_74594 == 129);
	BIT_VEC cppVar_74597 = PC + 1;
	cppVar_74597 = (cppVar_74597 & cppMask_un_16_);
	BIT_VEC cppVar_74598 = ROM.rd(cppVar_74597);
	bool cppVar_74600 = (cppVar_74598 == 130);
	BIT_VEC cppVar_74601 = PC + 1;
	cppVar_74601 = (cppVar_74601 & cppMask_un_16_);
	BIT_VEC cppVar_74602 = ROM.rd(cppVar_74601);
	bool cppVar_74604 = (cppVar_74602 == 131);
	BIT_VEC cppVar_74605 = PC + 1;
	cppVar_74605 = (cppVar_74605 & cppMask_un_16_);
	BIT_VEC cppVar_74606 = ROM.rd(cppVar_74605);
	bool cppVar_74608 = (cppVar_74606 == 135);
	BIT_VEC cppVar_74609 = PC + 1;
	cppVar_74609 = (cppVar_74609 & cppMask_un_16_);
	BIT_VEC cppVar_74610 = ROM.rd(cppVar_74609);
	bool cppVar_74612 = (cppVar_74610 == 136);
	BIT_VEC cppVar_74613 = PC + 1;
	cppVar_74613 = (cppVar_74613 & cppMask_un_16_);
	BIT_VEC cppVar_74614 = ROM.rd(cppVar_74613);
	bool cppVar_74616 = (cppVar_74614 == 137);
	BIT_VEC cppVar_74617 = PC + 1;
	cppVar_74617 = (cppVar_74617 & cppMask_un_16_);
	BIT_VEC cppVar_74618 = ROM.rd(cppVar_74617);
	bool cppVar_74620 = (cppVar_74618 == 138);
	BIT_VEC cppVar_74621 = PC + 1;
	cppVar_74621 = (cppVar_74621 & cppMask_un_16_);
	BIT_VEC cppVar_74622 = ROM.rd(cppVar_74621);
	bool cppVar_74624 = (cppVar_74622 == 140);
	BIT_VEC cppVar_74625 = PC + 1;
	cppVar_74625 = (cppVar_74625 & cppMask_un_16_);
	BIT_VEC cppVar_74626 = ROM.rd(cppVar_74625);
	bool cppVar_74628 = (cppVar_74626 == 139);
	BIT_VEC cppVar_74629 = PC + 1;
	cppVar_74629 = (cppVar_74629 & cppMask_un_16_);
	BIT_VEC cppVar_74630 = ROM.rd(cppVar_74629);
	bool cppVar_74632 = (cppVar_74630 == 141);
	BIT_VEC cppVar_74633 = PC + 1;
	cppVar_74633 = (cppVar_74633 & cppMask_un_16_);
	BIT_VEC cppVar_74634 = ROM.rd(cppVar_74633);
	bool cppVar_74636 = (cppVar_74634 == 144);
	BIT_VEC cppVar_74637 = PC + 1;
	cppVar_74637 = (cppVar_74637 & cppMask_un_16_);
	BIT_VEC cppVar_74638 = ROM.rd(cppVar_74637);
	bool cppVar_74640 = (cppVar_74638 == 152);
	BIT_VEC cppVar_74641 = PC + 1;
	cppVar_74641 = (cppVar_74641 & cppMask_un_16_);
	BIT_VEC cppVar_74642 = ROM.rd(cppVar_74641);
	bool cppVar_74644 = (cppVar_74642 == 153);
	BIT_VEC cppVar_74645 = PC + 1;
	cppVar_74645 = (cppVar_74645 & cppMask_un_16_);
	BIT_VEC cppVar_74646 = ROM.rd(cppVar_74645);
	bool cppVar_74648 = (cppVar_74646 == 160);
	BIT_VEC cppVar_74649 = PC + 1;
	cppVar_74649 = (cppVar_74649 & cppMask_un_16_);
	BIT_VEC cppVar_74650 = ROM.rd(cppVar_74649);
	bool cppVar_74652 = (cppVar_74650 == 168);
	BIT_VEC cppVar_74653 = PC + 1;
	cppVar_74653 = (cppVar_74653 & cppMask_un_16_);
	BIT_VEC cppVar_74654 = ROM.rd(cppVar_74653);
	bool cppVar_74656 = (cppVar_74654 == 176);
	BIT_VEC cppVar_74657 = PC + 1;
	cppVar_74657 = (cppVar_74657 & cppMask_un_16_);
	BIT_VEC cppVar_74658 = ROM.rd(cppVar_74657);
	bool cppVar_74660 = (cppVar_74658 == 184);
	BIT_VEC cppVar_74661 = PC + 1;
	cppVar_74661 = (cppVar_74661 & cppMask_un_16_);
	BIT_VEC cppVar_74662 = ROM.rd(cppVar_74661);
	bool cppVar_74664 = (cppVar_74662 == 208);
	BIT_VEC cppVar_74665 = PC + 1;
	cppVar_74665 = (cppVar_74665 & cppMask_un_16_);
	BIT_VEC cppVar_74666 = ROM.rd(cppVar_74665);
	bool cppVar_74668 = (cppVar_74666 == 224);
	BIT_VEC cppVar_74669 = PC + 1;
	cppVar_74669 = (cppVar_74669 & cppMask_un_16_);
	BIT_VEC cppVar_74670 = ROM.rd(cppVar_74669);
	bool cppVar_74672 = (cppVar_74670 == 240);
	BIT_VEC cppVar_74674 = (cppVar_74672) ? B : 0;
	BIT_VEC cppVar_74675 = (cppVar_74668) ? ACC : cppVar_74674;
	BIT_VEC cppVar_74676 = (cppVar_74664) ? PSW : cppVar_74675;
	BIT_VEC cppVar_74677 = (cppVar_74660) ? IP : cppVar_74676;
	BIT_VEC cppVar_74678 = (cppVar_74656) ? P3 : cppVar_74677;
	BIT_VEC cppVar_74679 = (cppVar_74652) ? IE : cppVar_74678;
	BIT_VEC cppVar_74680 = (cppVar_74648) ? P2 : cppVar_74679;
	BIT_VEC cppVar_74681 = (cppVar_74644) ? SBUF : cppVar_74680;
	BIT_VEC cppVar_74682 = (cppVar_74640) ? SCON : cppVar_74681;
	BIT_VEC cppVar_74683 = (cppVar_74636) ? P1 : cppVar_74682;
	BIT_VEC cppVar_74684 = (cppVar_74632) ? TH1 : cppVar_74683;
	BIT_VEC cppVar_74685 = (cppVar_74628) ? TL1 : cppVar_74684;
	BIT_VEC cppVar_74686 = (cppVar_74624) ? TH0 : cppVar_74685;
	BIT_VEC cppVar_74687 = (cppVar_74620) ? TL0 : cppVar_74686;
	BIT_VEC cppVar_74688 = (cppVar_74616) ? TMOD : cppVar_74687;
	BIT_VEC cppVar_74689 = (cppVar_74612) ? TCON : cppVar_74688;
	BIT_VEC cppVar_74690 = (cppVar_74608) ? PCON : cppVar_74689;
	BIT_VEC cppVar_74691 = (cppVar_74604) ? DPH : cppVar_74690;
	BIT_VEC cppVar_74692 = (cppVar_74600) ? DPL : cppVar_74691;
	BIT_VEC cppVar_74693 = (cppVar_74596) ? SP : cppVar_74692;
	BIT_VEC cppVar_74694 = (cppVar_74592) ? P0 : cppVar_74693;
	BIT_VEC cppVar_74695 = (cppVar_74585) ? cppVar_74588 : cppVar_74694;
	BIT_VEC cppVar_74697 = cppVar_74695 - 1;
	cppVar_74697 = (cppVar_74697 & cppMask_un_8_);
	BIT_VEC cppVar_74698 = (cppVar_74580) ? cppVar_74697 : TH0;
	BIT_VEC cppVar_74699 = ROM.rd(PC);
	bool cppVar_74701 = (cppVar_74699 == 5);
	BIT_VEC cppVar_74703 = PC + 1;
	cppVar_74703 = (cppVar_74703 & cppMask_un_16_);
	BIT_VEC cppVar_74704 = ROM.rd(cppVar_74703);
	bool cppVar_74706 = (cppVar_74704 == 140);
	BIT_VEC cppVar_74707 = PC + 1;
	cppVar_74707 = (cppVar_74707 & cppMask_un_16_);
	BIT_VEC cppVar_74708 = ROM.rd(cppVar_74707);
	BIT_VEC cppVar_74709 = (cppVar_74708 >> 7) & cppMask_un_1_;
	bool cppVar_74711 = (cppVar_74709 == 0);
	BIT_VEC cppVar_74712 = PC + 1;
	cppVar_74712 = (cppVar_74712 & cppMask_un_16_);
	BIT_VEC cppVar_74713 = ROM.rd(cppVar_74712);
	BIT_VEC cppVar_74714 = IRAM.rd(cppVar_74713);
	BIT_VEC cppVar_74715 = PC + 1;
	cppVar_74715 = (cppVar_74715 & cppMask_un_16_);
	BIT_VEC cppVar_74716 = ROM.rd(cppVar_74715);
	bool cppVar_74718 = (cppVar_74716 == 128);
	BIT_VEC cppVar_74719 = PC + 1;
	cppVar_74719 = (cppVar_74719 & cppMask_un_16_);
	BIT_VEC cppVar_74720 = ROM.rd(cppVar_74719);
	bool cppVar_74722 = (cppVar_74720 == 129);
	BIT_VEC cppVar_74723 = PC + 1;
	cppVar_74723 = (cppVar_74723 & cppMask_un_16_);
	BIT_VEC cppVar_74724 = ROM.rd(cppVar_74723);
	bool cppVar_74726 = (cppVar_74724 == 130);
	BIT_VEC cppVar_74727 = PC + 1;
	cppVar_74727 = (cppVar_74727 & cppMask_un_16_);
	BIT_VEC cppVar_74728 = ROM.rd(cppVar_74727);
	bool cppVar_74730 = (cppVar_74728 == 131);
	BIT_VEC cppVar_74731 = PC + 1;
	cppVar_74731 = (cppVar_74731 & cppMask_un_16_);
	BIT_VEC cppVar_74732 = ROM.rd(cppVar_74731);
	bool cppVar_74734 = (cppVar_74732 == 135);
	BIT_VEC cppVar_74735 = PC + 1;
	cppVar_74735 = (cppVar_74735 & cppMask_un_16_);
	BIT_VEC cppVar_74736 = ROM.rd(cppVar_74735);
	bool cppVar_74738 = (cppVar_74736 == 136);
	BIT_VEC cppVar_74739 = PC + 1;
	cppVar_74739 = (cppVar_74739 & cppMask_un_16_);
	BIT_VEC cppVar_74740 = ROM.rd(cppVar_74739);
	bool cppVar_74742 = (cppVar_74740 == 137);
	BIT_VEC cppVar_74743 = PC + 1;
	cppVar_74743 = (cppVar_74743 & cppMask_un_16_);
	BIT_VEC cppVar_74744 = ROM.rd(cppVar_74743);
	bool cppVar_74746 = (cppVar_74744 == 138);
	BIT_VEC cppVar_74747 = PC + 1;
	cppVar_74747 = (cppVar_74747 & cppMask_un_16_);
	BIT_VEC cppVar_74748 = ROM.rd(cppVar_74747);
	bool cppVar_74750 = (cppVar_74748 == 140);
	BIT_VEC cppVar_74751 = PC + 1;
	cppVar_74751 = (cppVar_74751 & cppMask_un_16_);
	BIT_VEC cppVar_74752 = ROM.rd(cppVar_74751);
	bool cppVar_74754 = (cppVar_74752 == 139);
	BIT_VEC cppVar_74755 = PC + 1;
	cppVar_74755 = (cppVar_74755 & cppMask_un_16_);
	BIT_VEC cppVar_74756 = ROM.rd(cppVar_74755);
	bool cppVar_74758 = (cppVar_74756 == 141);
	BIT_VEC cppVar_74759 = PC + 1;
	cppVar_74759 = (cppVar_74759 & cppMask_un_16_);
	BIT_VEC cppVar_74760 = ROM.rd(cppVar_74759);
	bool cppVar_74762 = (cppVar_74760 == 144);
	BIT_VEC cppVar_74763 = PC + 1;
	cppVar_74763 = (cppVar_74763 & cppMask_un_16_);
	BIT_VEC cppVar_74764 = ROM.rd(cppVar_74763);
	bool cppVar_74766 = (cppVar_74764 == 152);
	BIT_VEC cppVar_74767 = PC + 1;
	cppVar_74767 = (cppVar_74767 & cppMask_un_16_);
	BIT_VEC cppVar_74768 = ROM.rd(cppVar_74767);
	bool cppVar_74770 = (cppVar_74768 == 153);
	BIT_VEC cppVar_74771 = PC + 1;
	cppVar_74771 = (cppVar_74771 & cppMask_un_16_);
	BIT_VEC cppVar_74772 = ROM.rd(cppVar_74771);
	bool cppVar_74774 = (cppVar_74772 == 160);
	BIT_VEC cppVar_74775 = PC + 1;
	cppVar_74775 = (cppVar_74775 & cppMask_un_16_);
	BIT_VEC cppVar_74776 = ROM.rd(cppVar_74775);
	bool cppVar_74778 = (cppVar_74776 == 168);
	BIT_VEC cppVar_74779 = PC + 1;
	cppVar_74779 = (cppVar_74779 & cppMask_un_16_);
	BIT_VEC cppVar_74780 = ROM.rd(cppVar_74779);
	bool cppVar_74782 = (cppVar_74780 == 176);
	BIT_VEC cppVar_74783 = PC + 1;
	cppVar_74783 = (cppVar_74783 & cppMask_un_16_);
	BIT_VEC cppVar_74784 = ROM.rd(cppVar_74783);
	bool cppVar_74786 = (cppVar_74784 == 184);
	BIT_VEC cppVar_74787 = PC + 1;
	cppVar_74787 = (cppVar_74787 & cppMask_un_16_);
	BIT_VEC cppVar_74788 = ROM.rd(cppVar_74787);
	bool cppVar_74790 = (cppVar_74788 == 208);
	BIT_VEC cppVar_74791 = PC + 1;
	cppVar_74791 = (cppVar_74791 & cppMask_un_16_);
	BIT_VEC cppVar_74792 = ROM.rd(cppVar_74791);
	bool cppVar_74794 = (cppVar_74792 == 224);
	BIT_VEC cppVar_74795 = PC + 1;
	cppVar_74795 = (cppVar_74795 & cppMask_un_16_);
	BIT_VEC cppVar_74796 = ROM.rd(cppVar_74795);
	bool cppVar_74798 = (cppVar_74796 == 240);
	BIT_VEC cppVar_74800 = (cppVar_74798) ? B : 0;
	BIT_VEC cppVar_74801 = (cppVar_74794) ? ACC : cppVar_74800;
	BIT_VEC cppVar_74802 = (cppVar_74790) ? PSW : cppVar_74801;
	BIT_VEC cppVar_74803 = (cppVar_74786) ? IP : cppVar_74802;
	BIT_VEC cppVar_74804 = (cppVar_74782) ? P3 : cppVar_74803;
	BIT_VEC cppVar_74805 = (cppVar_74778) ? IE : cppVar_74804;
	BIT_VEC cppVar_74806 = (cppVar_74774) ? P2 : cppVar_74805;
	BIT_VEC cppVar_74807 = (cppVar_74770) ? SBUF : cppVar_74806;
	BIT_VEC cppVar_74808 = (cppVar_74766) ? SCON : cppVar_74807;
	BIT_VEC cppVar_74809 = (cppVar_74762) ? P1 : cppVar_74808;
	BIT_VEC cppVar_74810 = (cppVar_74758) ? TH1 : cppVar_74809;
	BIT_VEC cppVar_74811 = (cppVar_74754) ? TL1 : cppVar_74810;
	BIT_VEC cppVar_74812 = (cppVar_74750) ? TH0 : cppVar_74811;
	BIT_VEC cppVar_74813 = (cppVar_74746) ? TL0 : cppVar_74812;
	BIT_VEC cppVar_74814 = (cppVar_74742) ? TMOD : cppVar_74813;
	BIT_VEC cppVar_74815 = (cppVar_74738) ? TCON : cppVar_74814;
	BIT_VEC cppVar_74816 = (cppVar_74734) ? PCON : cppVar_74815;
	BIT_VEC cppVar_74817 = (cppVar_74730) ? DPH : cppVar_74816;
	BIT_VEC cppVar_74818 = (cppVar_74726) ? DPL : cppVar_74817;
	BIT_VEC cppVar_74819 = (cppVar_74722) ? SP : cppVar_74818;
	BIT_VEC cppVar_74820 = (cppVar_74718) ? P0 : cppVar_74819;
	BIT_VEC cppVar_74821 = (cppVar_74711) ? cppVar_74714 : cppVar_74820;
	BIT_VEC cppVar_74823 = cppVar_74821 + 1;
	cppVar_74823 = (cppVar_74823 & cppMask_un_8_);
	BIT_VEC cppVar_74824 = (cppVar_74706) ? cppVar_74823 : TH0;
	BIT_VEC cppVar_74825 = (cppVar_74701) ? cppVar_74824 : TH0;
	BIT_VEC cppVar_74826 = (cppVar_74575) ? cppVar_74698 : cppVar_74825;
	BIT_VEC cppVar_74827 = (cppVar_74446) ? cppVar_74568 : cppVar_74826;
	BIT_VEC cppVar_74828 = (cppVar_74318) ? cppVar_74443 : cppVar_74827;
	BIT_VEC cppVar_74829 = (cppVar_74193) ? cppVar_74315 : cppVar_74828;
	BIT_VEC cppVar_74830 = (cppVar_74065) ? cppVar_74190 : cppVar_74829;
	BIT_VEC cppVar_74831 = (cppVar_73940) ? cppVar_74062 : cppVar_74830;
	BIT_VEC cppVar_74832 = (cppVar_73812) ? cppVar_73937 : cppVar_74831;
	BIT_VEC cppVar_74833 = (cppVar_73800) ? cppVar_73809 : cppVar_74832;
	BIT_VEC cppVar_74834 = (cppVar_73675) ? cppVar_73797 : cppVar_74833;
	BIT_VEC cppVar_74835 = (cppVar_73659) ? cppVar_73672 : cppVar_74834;
	BIT_VEC cppVar_74836 = (cppVar_73643) ? cppVar_73656 : cppVar_74835;
	BIT_VEC cppVar_74837 = (cppVar_73494) ? cppVar_73640 : cppVar_74836;
	BIT_VEC cppVar_74838 = (cppVar_73345) ? cppVar_73491 : cppVar_74837;
	BIT_VEC cppVar_74839 = (cppVar_73196) ? cppVar_73342 : cppVar_74838;
	BIT_VEC cppVar_74840 = (cppVar_73047) ? cppVar_73193 : cppVar_74839;
	BIT_VEC cppVar_74841 = (cppVar_72898) ? cppVar_73044 : cppVar_74840;
	BIT_VEC cppVar_74842 = (cppVar_72749) ? cppVar_72895 : cppVar_74841;
	BIT_VEC cppVar_74843 = (cppVar_72600) ? cppVar_72746 : cppVar_74842;
	BIT_VEC cppVar_74844 = (cppVar_72451) ? cppVar_72597 : cppVar_74843;
	BIT_VEC cppVar_74845 = (cppVar_72442) ? cppVar_72448 : cppVar_74844;
	BIT_VEC cppVar_74846 = (cppVar_72428) ? cppVar_72435 : cppVar_74845;
	return cppVar_74846;
}
