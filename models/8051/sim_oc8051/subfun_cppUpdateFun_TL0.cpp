#include "common.hpp"
#include "model_oc8051_class.hpp"

BIT_VEC model_oc8051::cppUpdateFun_TL0()
{
	BIT_VEC cppVar_77270 = ROM.rd(PC);
	bool cppVar_77272 = (cppVar_77270 == 208);
	BIT_VEC cppVar_77274 = PC + 1;
	cppVar_77274 = (cppVar_77274 & cppMask_un_16_);
	BIT_VEC cppVar_77275 = ROM.rd(cppVar_77274);
	bool cppVar_77277 = (cppVar_77275 == 138);
	BIT_VEC cppVar_77278 = IRAM.rd(SP);
	BIT_VEC cppVar_77279 = (cppVar_77277) ? cppVar_77278 : TL0;
	BIT_VEC cppVar_77280 = ROM.rd(PC);
	bool cppVar_77282 = (cppVar_77280 == 245);
	BIT_VEC cppVar_77283 = ROM.rd(PC);
	bool cppVar_77285 = (cppVar_77283 == 197);
	bool cppVar_77286 = cppVar_77282 || cppVar_77285;
	BIT_VEC cppVar_77288 = PC + 1;
	cppVar_77288 = (cppVar_77288 & cppMask_un_16_);
	BIT_VEC cppVar_77289 = ROM.rd(cppVar_77288);
	bool cppVar_77291 = (cppVar_77289 == 138);
	BIT_VEC cppVar_77292 = (cppVar_77291) ? ACC : TL0;
	BIT_VEC cppVar_77293 = ROM.rd(PC);
	bool cppVar_77295 = (cppVar_77293 == 143);
	BIT_VEC cppVar_77297 = PC + 1;
	cppVar_77297 = (cppVar_77297 & cppMask_un_16_);
	BIT_VEC cppVar_77298 = ROM.rd(cppVar_77297);
	bool cppVar_77300 = (cppVar_77298 == 138);
	BIT_VEC cppVar_77302 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77304 = (cppVar_77302 << 3) | 7;
	cppVar_77304 = (cppVar_77304 & cppMask_un_5_);
	BIT_VEC cppVar_77305 = (0 << 5) | cppVar_77304;
	cppVar_77305 = (cppVar_77305 & cppMask_un_8_);
	BIT_VEC cppVar_77306 = (cppVar_77305 >> 7) & cppMask_un_1_;
	bool cppVar_77308 = (cppVar_77306 == 0);
	BIT_VEC cppVar_77309 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77310 = (cppVar_77309 << 3) | 7;
	cppVar_77310 = (cppVar_77310 & cppMask_un_5_);
	BIT_VEC cppVar_77311 = (0 << 5) | cppVar_77310;
	cppVar_77311 = (cppVar_77311 & cppMask_un_8_);
	BIT_VEC cppVar_77312 = IRAM.rd(cppVar_77311);
	BIT_VEC cppVar_77313 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77314 = (cppVar_77313 << 3) | 7;
	cppVar_77314 = (cppVar_77314 & cppMask_un_5_);
	BIT_VEC cppVar_77315 = (0 << 5) | cppVar_77314;
	cppVar_77315 = (cppVar_77315 & cppMask_un_8_);
	bool cppVar_77317 = (cppVar_77315 == 128);
	BIT_VEC cppVar_77318 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77319 = (cppVar_77318 << 3) | 7;
	cppVar_77319 = (cppVar_77319 & cppMask_un_5_);
	BIT_VEC cppVar_77320 = (0 << 5) | cppVar_77319;
	cppVar_77320 = (cppVar_77320 & cppMask_un_8_);
	bool cppVar_77322 = (cppVar_77320 == 129);
	BIT_VEC cppVar_77323 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77324 = (cppVar_77323 << 3) | 7;
	cppVar_77324 = (cppVar_77324 & cppMask_un_5_);
	BIT_VEC cppVar_77325 = (0 << 5) | cppVar_77324;
	cppVar_77325 = (cppVar_77325 & cppMask_un_8_);
	bool cppVar_77327 = (cppVar_77325 == 130);
	BIT_VEC cppVar_77328 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77329 = (cppVar_77328 << 3) | 7;
	cppVar_77329 = (cppVar_77329 & cppMask_un_5_);
	BIT_VEC cppVar_77330 = (0 << 5) | cppVar_77329;
	cppVar_77330 = (cppVar_77330 & cppMask_un_8_);
	bool cppVar_77332 = (cppVar_77330 == 131);
	BIT_VEC cppVar_77333 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77334 = (cppVar_77333 << 3) | 7;
	cppVar_77334 = (cppVar_77334 & cppMask_un_5_);
	BIT_VEC cppVar_77335 = (0 << 5) | cppVar_77334;
	cppVar_77335 = (cppVar_77335 & cppMask_un_8_);
	bool cppVar_77337 = (cppVar_77335 == 135);
	BIT_VEC cppVar_77338 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77339 = (cppVar_77338 << 3) | 7;
	cppVar_77339 = (cppVar_77339 & cppMask_un_5_);
	BIT_VEC cppVar_77340 = (0 << 5) | cppVar_77339;
	cppVar_77340 = (cppVar_77340 & cppMask_un_8_);
	bool cppVar_77342 = (cppVar_77340 == 136);
	BIT_VEC cppVar_77343 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77344 = (cppVar_77343 << 3) | 7;
	cppVar_77344 = (cppVar_77344 & cppMask_un_5_);
	BIT_VEC cppVar_77345 = (0 << 5) | cppVar_77344;
	cppVar_77345 = (cppVar_77345 & cppMask_un_8_);
	bool cppVar_77347 = (cppVar_77345 == 137);
	BIT_VEC cppVar_77348 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77349 = (cppVar_77348 << 3) | 7;
	cppVar_77349 = (cppVar_77349 & cppMask_un_5_);
	BIT_VEC cppVar_77350 = (0 << 5) | cppVar_77349;
	cppVar_77350 = (cppVar_77350 & cppMask_un_8_);
	bool cppVar_77352 = (cppVar_77350 == 138);
	BIT_VEC cppVar_77353 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77354 = (cppVar_77353 << 3) | 7;
	cppVar_77354 = (cppVar_77354 & cppMask_un_5_);
	BIT_VEC cppVar_77355 = (0 << 5) | cppVar_77354;
	cppVar_77355 = (cppVar_77355 & cppMask_un_8_);
	bool cppVar_77357 = (cppVar_77355 == 140);
	BIT_VEC cppVar_77358 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77359 = (cppVar_77358 << 3) | 7;
	cppVar_77359 = (cppVar_77359 & cppMask_un_5_);
	BIT_VEC cppVar_77360 = (0 << 5) | cppVar_77359;
	cppVar_77360 = (cppVar_77360 & cppMask_un_8_);
	bool cppVar_77362 = (cppVar_77360 == 139);
	BIT_VEC cppVar_77363 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77364 = (cppVar_77363 << 3) | 7;
	cppVar_77364 = (cppVar_77364 & cppMask_un_5_);
	BIT_VEC cppVar_77365 = (0 << 5) | cppVar_77364;
	cppVar_77365 = (cppVar_77365 & cppMask_un_8_);
	bool cppVar_77367 = (cppVar_77365 == 141);
	BIT_VEC cppVar_77368 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77369 = (cppVar_77368 << 3) | 7;
	cppVar_77369 = (cppVar_77369 & cppMask_un_5_);
	BIT_VEC cppVar_77370 = (0 << 5) | cppVar_77369;
	cppVar_77370 = (cppVar_77370 & cppMask_un_8_);
	bool cppVar_77372 = (cppVar_77370 == 144);
	BIT_VEC cppVar_77373 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77374 = (cppVar_77373 << 3) | 7;
	cppVar_77374 = (cppVar_77374 & cppMask_un_5_);
	BIT_VEC cppVar_77375 = (0 << 5) | cppVar_77374;
	cppVar_77375 = (cppVar_77375 & cppMask_un_8_);
	bool cppVar_77377 = (cppVar_77375 == 152);
	BIT_VEC cppVar_77378 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77379 = (cppVar_77378 << 3) | 7;
	cppVar_77379 = (cppVar_77379 & cppMask_un_5_);
	BIT_VEC cppVar_77380 = (0 << 5) | cppVar_77379;
	cppVar_77380 = (cppVar_77380 & cppMask_un_8_);
	bool cppVar_77382 = (cppVar_77380 == 153);
	BIT_VEC cppVar_77383 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77384 = (cppVar_77383 << 3) | 7;
	cppVar_77384 = (cppVar_77384 & cppMask_un_5_);
	BIT_VEC cppVar_77385 = (0 << 5) | cppVar_77384;
	cppVar_77385 = (cppVar_77385 & cppMask_un_8_);
	bool cppVar_77387 = (cppVar_77385 == 160);
	BIT_VEC cppVar_77388 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77389 = (cppVar_77388 << 3) | 7;
	cppVar_77389 = (cppVar_77389 & cppMask_un_5_);
	BIT_VEC cppVar_77390 = (0 << 5) | cppVar_77389;
	cppVar_77390 = (cppVar_77390 & cppMask_un_8_);
	bool cppVar_77392 = (cppVar_77390 == 168);
	BIT_VEC cppVar_77393 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77394 = (cppVar_77393 << 3) | 7;
	cppVar_77394 = (cppVar_77394 & cppMask_un_5_);
	BIT_VEC cppVar_77395 = (0 << 5) | cppVar_77394;
	cppVar_77395 = (cppVar_77395 & cppMask_un_8_);
	bool cppVar_77397 = (cppVar_77395 == 176);
	BIT_VEC cppVar_77398 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77399 = (cppVar_77398 << 3) | 7;
	cppVar_77399 = (cppVar_77399 & cppMask_un_5_);
	BIT_VEC cppVar_77400 = (0 << 5) | cppVar_77399;
	cppVar_77400 = (cppVar_77400 & cppMask_un_8_);
	bool cppVar_77402 = (cppVar_77400 == 184);
	BIT_VEC cppVar_77403 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77404 = (cppVar_77403 << 3) | 7;
	cppVar_77404 = (cppVar_77404 & cppMask_un_5_);
	BIT_VEC cppVar_77405 = (0 << 5) | cppVar_77404;
	cppVar_77405 = (cppVar_77405 & cppMask_un_8_);
	bool cppVar_77407 = (cppVar_77405 == 208);
	BIT_VEC cppVar_77408 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77409 = (cppVar_77408 << 3) | 7;
	cppVar_77409 = (cppVar_77409 & cppMask_un_5_);
	BIT_VEC cppVar_77410 = (0 << 5) | cppVar_77409;
	cppVar_77410 = (cppVar_77410 & cppMask_un_8_);
	bool cppVar_77412 = (cppVar_77410 == 224);
	BIT_VEC cppVar_77413 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77414 = (cppVar_77413 << 3) | 7;
	cppVar_77414 = (cppVar_77414 & cppMask_un_5_);
	BIT_VEC cppVar_77415 = (0 << 5) | cppVar_77414;
	cppVar_77415 = (cppVar_77415 & cppMask_un_8_);
	bool cppVar_77417 = (cppVar_77415 == 240);
	BIT_VEC cppVar_77419 = (cppVar_77417) ? B : 0;
	BIT_VEC cppVar_77420 = (cppVar_77412) ? ACC : cppVar_77419;
	BIT_VEC cppVar_77421 = (cppVar_77407) ? PSW : cppVar_77420;
	BIT_VEC cppVar_77422 = (cppVar_77402) ? IP : cppVar_77421;
	BIT_VEC cppVar_77423 = (cppVar_77397) ? P3 : cppVar_77422;
	BIT_VEC cppVar_77424 = (cppVar_77392) ? IE : cppVar_77423;
	BIT_VEC cppVar_77425 = (cppVar_77387) ? P2 : cppVar_77424;
	BIT_VEC cppVar_77426 = (cppVar_77382) ? SBUF : cppVar_77425;
	BIT_VEC cppVar_77427 = (cppVar_77377) ? SCON : cppVar_77426;
	BIT_VEC cppVar_77428 = (cppVar_77372) ? P1 : cppVar_77427;
	BIT_VEC cppVar_77429 = (cppVar_77367) ? TH1 : cppVar_77428;
	BIT_VEC cppVar_77430 = (cppVar_77362) ? TL1 : cppVar_77429;
	BIT_VEC cppVar_77431 = (cppVar_77357) ? TH0 : cppVar_77430;
	BIT_VEC cppVar_77432 = (cppVar_77352) ? TL0 : cppVar_77431;
	BIT_VEC cppVar_77433 = (cppVar_77347) ? TMOD : cppVar_77432;
	BIT_VEC cppVar_77434 = (cppVar_77342) ? TCON : cppVar_77433;
	BIT_VEC cppVar_77435 = (cppVar_77337) ? PCON : cppVar_77434;
	BIT_VEC cppVar_77436 = (cppVar_77332) ? DPH : cppVar_77435;
	BIT_VEC cppVar_77437 = (cppVar_77327) ? DPL : cppVar_77436;
	BIT_VEC cppVar_77438 = (cppVar_77322) ? SP : cppVar_77437;
	BIT_VEC cppVar_77439 = (cppVar_77317) ? P0 : cppVar_77438;
	BIT_VEC cppVar_77440 = (cppVar_77308) ? cppVar_77312 : cppVar_77439;
	BIT_VEC cppVar_77441 = (cppVar_77300) ? cppVar_77440 : TL0;
	BIT_VEC cppVar_77442 = ROM.rd(PC);
	bool cppVar_77444 = (cppVar_77442 == 142);
	BIT_VEC cppVar_77446 = PC + 1;
	cppVar_77446 = (cppVar_77446 & cppMask_un_16_);
	BIT_VEC cppVar_77447 = ROM.rd(cppVar_77446);
	bool cppVar_77449 = (cppVar_77447 == 138);
	BIT_VEC cppVar_77451 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77453 = (cppVar_77451 << 3) | 6;
	cppVar_77453 = (cppVar_77453 & cppMask_un_5_);
	BIT_VEC cppVar_77454 = (0 << 5) | cppVar_77453;
	cppVar_77454 = (cppVar_77454 & cppMask_un_8_);
	BIT_VEC cppVar_77455 = (cppVar_77454 >> 7) & cppMask_un_1_;
	bool cppVar_77457 = (cppVar_77455 == 0);
	BIT_VEC cppVar_77458 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77459 = (cppVar_77458 << 3) | 6;
	cppVar_77459 = (cppVar_77459 & cppMask_un_5_);
	BIT_VEC cppVar_77460 = (0 << 5) | cppVar_77459;
	cppVar_77460 = (cppVar_77460 & cppMask_un_8_);
	BIT_VEC cppVar_77461 = IRAM.rd(cppVar_77460);
	BIT_VEC cppVar_77462 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77463 = (cppVar_77462 << 3) | 6;
	cppVar_77463 = (cppVar_77463 & cppMask_un_5_);
	BIT_VEC cppVar_77464 = (0 << 5) | cppVar_77463;
	cppVar_77464 = (cppVar_77464 & cppMask_un_8_);
	bool cppVar_77466 = (cppVar_77464 == 128);
	BIT_VEC cppVar_77467 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77468 = (cppVar_77467 << 3) | 6;
	cppVar_77468 = (cppVar_77468 & cppMask_un_5_);
	BIT_VEC cppVar_77469 = (0 << 5) | cppVar_77468;
	cppVar_77469 = (cppVar_77469 & cppMask_un_8_);
	bool cppVar_77471 = (cppVar_77469 == 129);
	BIT_VEC cppVar_77472 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77473 = (cppVar_77472 << 3) | 6;
	cppVar_77473 = (cppVar_77473 & cppMask_un_5_);
	BIT_VEC cppVar_77474 = (0 << 5) | cppVar_77473;
	cppVar_77474 = (cppVar_77474 & cppMask_un_8_);
	bool cppVar_77476 = (cppVar_77474 == 130);
	BIT_VEC cppVar_77477 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77478 = (cppVar_77477 << 3) | 6;
	cppVar_77478 = (cppVar_77478 & cppMask_un_5_);
	BIT_VEC cppVar_77479 = (0 << 5) | cppVar_77478;
	cppVar_77479 = (cppVar_77479 & cppMask_un_8_);
	bool cppVar_77481 = (cppVar_77479 == 131);
	BIT_VEC cppVar_77482 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77483 = (cppVar_77482 << 3) | 6;
	cppVar_77483 = (cppVar_77483 & cppMask_un_5_);
	BIT_VEC cppVar_77484 = (0 << 5) | cppVar_77483;
	cppVar_77484 = (cppVar_77484 & cppMask_un_8_);
	bool cppVar_77486 = (cppVar_77484 == 135);
	BIT_VEC cppVar_77487 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77488 = (cppVar_77487 << 3) | 6;
	cppVar_77488 = (cppVar_77488 & cppMask_un_5_);
	BIT_VEC cppVar_77489 = (0 << 5) | cppVar_77488;
	cppVar_77489 = (cppVar_77489 & cppMask_un_8_);
	bool cppVar_77491 = (cppVar_77489 == 136);
	BIT_VEC cppVar_77492 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77493 = (cppVar_77492 << 3) | 6;
	cppVar_77493 = (cppVar_77493 & cppMask_un_5_);
	BIT_VEC cppVar_77494 = (0 << 5) | cppVar_77493;
	cppVar_77494 = (cppVar_77494 & cppMask_un_8_);
	bool cppVar_77496 = (cppVar_77494 == 137);
	BIT_VEC cppVar_77497 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77498 = (cppVar_77497 << 3) | 6;
	cppVar_77498 = (cppVar_77498 & cppMask_un_5_);
	BIT_VEC cppVar_77499 = (0 << 5) | cppVar_77498;
	cppVar_77499 = (cppVar_77499 & cppMask_un_8_);
	bool cppVar_77501 = (cppVar_77499 == 138);
	BIT_VEC cppVar_77502 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77503 = (cppVar_77502 << 3) | 6;
	cppVar_77503 = (cppVar_77503 & cppMask_un_5_);
	BIT_VEC cppVar_77504 = (0 << 5) | cppVar_77503;
	cppVar_77504 = (cppVar_77504 & cppMask_un_8_);
	bool cppVar_77506 = (cppVar_77504 == 140);
	BIT_VEC cppVar_77507 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77508 = (cppVar_77507 << 3) | 6;
	cppVar_77508 = (cppVar_77508 & cppMask_un_5_);
	BIT_VEC cppVar_77509 = (0 << 5) | cppVar_77508;
	cppVar_77509 = (cppVar_77509 & cppMask_un_8_);
	bool cppVar_77511 = (cppVar_77509 == 139);
	BIT_VEC cppVar_77512 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77513 = (cppVar_77512 << 3) | 6;
	cppVar_77513 = (cppVar_77513 & cppMask_un_5_);
	BIT_VEC cppVar_77514 = (0 << 5) | cppVar_77513;
	cppVar_77514 = (cppVar_77514 & cppMask_un_8_);
	bool cppVar_77516 = (cppVar_77514 == 141);
	BIT_VEC cppVar_77517 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77518 = (cppVar_77517 << 3) | 6;
	cppVar_77518 = (cppVar_77518 & cppMask_un_5_);
	BIT_VEC cppVar_77519 = (0 << 5) | cppVar_77518;
	cppVar_77519 = (cppVar_77519 & cppMask_un_8_);
	bool cppVar_77521 = (cppVar_77519 == 144);
	BIT_VEC cppVar_77522 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77523 = (cppVar_77522 << 3) | 6;
	cppVar_77523 = (cppVar_77523 & cppMask_un_5_);
	BIT_VEC cppVar_77524 = (0 << 5) | cppVar_77523;
	cppVar_77524 = (cppVar_77524 & cppMask_un_8_);
	bool cppVar_77526 = (cppVar_77524 == 152);
	BIT_VEC cppVar_77527 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77528 = (cppVar_77527 << 3) | 6;
	cppVar_77528 = (cppVar_77528 & cppMask_un_5_);
	BIT_VEC cppVar_77529 = (0 << 5) | cppVar_77528;
	cppVar_77529 = (cppVar_77529 & cppMask_un_8_);
	bool cppVar_77531 = (cppVar_77529 == 153);
	BIT_VEC cppVar_77532 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77533 = (cppVar_77532 << 3) | 6;
	cppVar_77533 = (cppVar_77533 & cppMask_un_5_);
	BIT_VEC cppVar_77534 = (0 << 5) | cppVar_77533;
	cppVar_77534 = (cppVar_77534 & cppMask_un_8_);
	bool cppVar_77536 = (cppVar_77534 == 160);
	BIT_VEC cppVar_77537 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77538 = (cppVar_77537 << 3) | 6;
	cppVar_77538 = (cppVar_77538 & cppMask_un_5_);
	BIT_VEC cppVar_77539 = (0 << 5) | cppVar_77538;
	cppVar_77539 = (cppVar_77539 & cppMask_un_8_);
	bool cppVar_77541 = (cppVar_77539 == 168);
	BIT_VEC cppVar_77542 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77543 = (cppVar_77542 << 3) | 6;
	cppVar_77543 = (cppVar_77543 & cppMask_un_5_);
	BIT_VEC cppVar_77544 = (0 << 5) | cppVar_77543;
	cppVar_77544 = (cppVar_77544 & cppMask_un_8_);
	bool cppVar_77546 = (cppVar_77544 == 176);
	BIT_VEC cppVar_77547 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77548 = (cppVar_77547 << 3) | 6;
	cppVar_77548 = (cppVar_77548 & cppMask_un_5_);
	BIT_VEC cppVar_77549 = (0 << 5) | cppVar_77548;
	cppVar_77549 = (cppVar_77549 & cppMask_un_8_);
	bool cppVar_77551 = (cppVar_77549 == 184);
	BIT_VEC cppVar_77552 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77553 = (cppVar_77552 << 3) | 6;
	cppVar_77553 = (cppVar_77553 & cppMask_un_5_);
	BIT_VEC cppVar_77554 = (0 << 5) | cppVar_77553;
	cppVar_77554 = (cppVar_77554 & cppMask_un_8_);
	bool cppVar_77556 = (cppVar_77554 == 208);
	BIT_VEC cppVar_77557 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77558 = (cppVar_77557 << 3) | 6;
	cppVar_77558 = (cppVar_77558 & cppMask_un_5_);
	BIT_VEC cppVar_77559 = (0 << 5) | cppVar_77558;
	cppVar_77559 = (cppVar_77559 & cppMask_un_8_);
	bool cppVar_77561 = (cppVar_77559 == 224);
	BIT_VEC cppVar_77562 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77563 = (cppVar_77562 << 3) | 6;
	cppVar_77563 = (cppVar_77563 & cppMask_un_5_);
	BIT_VEC cppVar_77564 = (0 << 5) | cppVar_77563;
	cppVar_77564 = (cppVar_77564 & cppMask_un_8_);
	bool cppVar_77566 = (cppVar_77564 == 240);
	BIT_VEC cppVar_77568 = (cppVar_77566) ? B : 0;
	BIT_VEC cppVar_77569 = (cppVar_77561) ? ACC : cppVar_77568;
	BIT_VEC cppVar_77570 = (cppVar_77556) ? PSW : cppVar_77569;
	BIT_VEC cppVar_77571 = (cppVar_77551) ? IP : cppVar_77570;
	BIT_VEC cppVar_77572 = (cppVar_77546) ? P3 : cppVar_77571;
	BIT_VEC cppVar_77573 = (cppVar_77541) ? IE : cppVar_77572;
	BIT_VEC cppVar_77574 = (cppVar_77536) ? P2 : cppVar_77573;
	BIT_VEC cppVar_77575 = (cppVar_77531) ? SBUF : cppVar_77574;
	BIT_VEC cppVar_77576 = (cppVar_77526) ? SCON : cppVar_77575;
	BIT_VEC cppVar_77577 = (cppVar_77521) ? P1 : cppVar_77576;
	BIT_VEC cppVar_77578 = (cppVar_77516) ? TH1 : cppVar_77577;
	BIT_VEC cppVar_77579 = (cppVar_77511) ? TL1 : cppVar_77578;
	BIT_VEC cppVar_77580 = (cppVar_77506) ? TH0 : cppVar_77579;
	BIT_VEC cppVar_77581 = (cppVar_77501) ? TL0 : cppVar_77580;
	BIT_VEC cppVar_77582 = (cppVar_77496) ? TMOD : cppVar_77581;
	BIT_VEC cppVar_77583 = (cppVar_77491) ? TCON : cppVar_77582;
	BIT_VEC cppVar_77584 = (cppVar_77486) ? PCON : cppVar_77583;
	BIT_VEC cppVar_77585 = (cppVar_77481) ? DPH : cppVar_77584;
	BIT_VEC cppVar_77586 = (cppVar_77476) ? DPL : cppVar_77585;
	BIT_VEC cppVar_77587 = (cppVar_77471) ? SP : cppVar_77586;
	BIT_VEC cppVar_77588 = (cppVar_77466) ? P0 : cppVar_77587;
	BIT_VEC cppVar_77589 = (cppVar_77457) ? cppVar_77461 : cppVar_77588;
	BIT_VEC cppVar_77590 = (cppVar_77449) ? cppVar_77589 : TL0;
	BIT_VEC cppVar_77591 = ROM.rd(PC);
	bool cppVar_77593 = (cppVar_77591 == 141);
	BIT_VEC cppVar_77595 = PC + 1;
	cppVar_77595 = (cppVar_77595 & cppMask_un_16_);
	BIT_VEC cppVar_77596 = ROM.rd(cppVar_77595);
	bool cppVar_77598 = (cppVar_77596 == 138);
	BIT_VEC cppVar_77600 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77602 = (cppVar_77600 << 3) | 5;
	cppVar_77602 = (cppVar_77602 & cppMask_un_5_);
	BIT_VEC cppVar_77603 = (0 << 5) | cppVar_77602;
	cppVar_77603 = (cppVar_77603 & cppMask_un_8_);
	BIT_VEC cppVar_77604 = (cppVar_77603 >> 7) & cppMask_un_1_;
	bool cppVar_77606 = (cppVar_77604 == 0);
	BIT_VEC cppVar_77607 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77608 = (cppVar_77607 << 3) | 5;
	cppVar_77608 = (cppVar_77608 & cppMask_un_5_);
	BIT_VEC cppVar_77609 = (0 << 5) | cppVar_77608;
	cppVar_77609 = (cppVar_77609 & cppMask_un_8_);
	BIT_VEC cppVar_77610 = IRAM.rd(cppVar_77609);
	BIT_VEC cppVar_77611 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77612 = (cppVar_77611 << 3) | 5;
	cppVar_77612 = (cppVar_77612 & cppMask_un_5_);
	BIT_VEC cppVar_77613 = (0 << 5) | cppVar_77612;
	cppVar_77613 = (cppVar_77613 & cppMask_un_8_);
	bool cppVar_77615 = (cppVar_77613 == 128);
	BIT_VEC cppVar_77616 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77617 = (cppVar_77616 << 3) | 5;
	cppVar_77617 = (cppVar_77617 & cppMask_un_5_);
	BIT_VEC cppVar_77618 = (0 << 5) | cppVar_77617;
	cppVar_77618 = (cppVar_77618 & cppMask_un_8_);
	bool cppVar_77620 = (cppVar_77618 == 129);
	BIT_VEC cppVar_77621 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77622 = (cppVar_77621 << 3) | 5;
	cppVar_77622 = (cppVar_77622 & cppMask_un_5_);
	BIT_VEC cppVar_77623 = (0 << 5) | cppVar_77622;
	cppVar_77623 = (cppVar_77623 & cppMask_un_8_);
	bool cppVar_77625 = (cppVar_77623 == 130);
	BIT_VEC cppVar_77626 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77627 = (cppVar_77626 << 3) | 5;
	cppVar_77627 = (cppVar_77627 & cppMask_un_5_);
	BIT_VEC cppVar_77628 = (0 << 5) | cppVar_77627;
	cppVar_77628 = (cppVar_77628 & cppMask_un_8_);
	bool cppVar_77630 = (cppVar_77628 == 131);
	BIT_VEC cppVar_77631 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77632 = (cppVar_77631 << 3) | 5;
	cppVar_77632 = (cppVar_77632 & cppMask_un_5_);
	BIT_VEC cppVar_77633 = (0 << 5) | cppVar_77632;
	cppVar_77633 = (cppVar_77633 & cppMask_un_8_);
	bool cppVar_77635 = (cppVar_77633 == 135);
	BIT_VEC cppVar_77636 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77637 = (cppVar_77636 << 3) | 5;
	cppVar_77637 = (cppVar_77637 & cppMask_un_5_);
	BIT_VEC cppVar_77638 = (0 << 5) | cppVar_77637;
	cppVar_77638 = (cppVar_77638 & cppMask_un_8_);
	bool cppVar_77640 = (cppVar_77638 == 136);
	BIT_VEC cppVar_77641 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77642 = (cppVar_77641 << 3) | 5;
	cppVar_77642 = (cppVar_77642 & cppMask_un_5_);
	BIT_VEC cppVar_77643 = (0 << 5) | cppVar_77642;
	cppVar_77643 = (cppVar_77643 & cppMask_un_8_);
	bool cppVar_77645 = (cppVar_77643 == 137);
	BIT_VEC cppVar_77646 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77647 = (cppVar_77646 << 3) | 5;
	cppVar_77647 = (cppVar_77647 & cppMask_un_5_);
	BIT_VEC cppVar_77648 = (0 << 5) | cppVar_77647;
	cppVar_77648 = (cppVar_77648 & cppMask_un_8_);
	bool cppVar_77650 = (cppVar_77648 == 138);
	BIT_VEC cppVar_77651 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77652 = (cppVar_77651 << 3) | 5;
	cppVar_77652 = (cppVar_77652 & cppMask_un_5_);
	BIT_VEC cppVar_77653 = (0 << 5) | cppVar_77652;
	cppVar_77653 = (cppVar_77653 & cppMask_un_8_);
	bool cppVar_77655 = (cppVar_77653 == 140);
	BIT_VEC cppVar_77656 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77657 = (cppVar_77656 << 3) | 5;
	cppVar_77657 = (cppVar_77657 & cppMask_un_5_);
	BIT_VEC cppVar_77658 = (0 << 5) | cppVar_77657;
	cppVar_77658 = (cppVar_77658 & cppMask_un_8_);
	bool cppVar_77660 = (cppVar_77658 == 139);
	BIT_VEC cppVar_77661 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77662 = (cppVar_77661 << 3) | 5;
	cppVar_77662 = (cppVar_77662 & cppMask_un_5_);
	BIT_VEC cppVar_77663 = (0 << 5) | cppVar_77662;
	cppVar_77663 = (cppVar_77663 & cppMask_un_8_);
	bool cppVar_77665 = (cppVar_77663 == 141);
	BIT_VEC cppVar_77666 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77667 = (cppVar_77666 << 3) | 5;
	cppVar_77667 = (cppVar_77667 & cppMask_un_5_);
	BIT_VEC cppVar_77668 = (0 << 5) | cppVar_77667;
	cppVar_77668 = (cppVar_77668 & cppMask_un_8_);
	bool cppVar_77670 = (cppVar_77668 == 144);
	BIT_VEC cppVar_77671 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77672 = (cppVar_77671 << 3) | 5;
	cppVar_77672 = (cppVar_77672 & cppMask_un_5_);
	BIT_VEC cppVar_77673 = (0 << 5) | cppVar_77672;
	cppVar_77673 = (cppVar_77673 & cppMask_un_8_);
	bool cppVar_77675 = (cppVar_77673 == 152);
	BIT_VEC cppVar_77676 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77677 = (cppVar_77676 << 3) | 5;
	cppVar_77677 = (cppVar_77677 & cppMask_un_5_);
	BIT_VEC cppVar_77678 = (0 << 5) | cppVar_77677;
	cppVar_77678 = (cppVar_77678 & cppMask_un_8_);
	bool cppVar_77680 = (cppVar_77678 == 153);
	BIT_VEC cppVar_77681 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77682 = (cppVar_77681 << 3) | 5;
	cppVar_77682 = (cppVar_77682 & cppMask_un_5_);
	BIT_VEC cppVar_77683 = (0 << 5) | cppVar_77682;
	cppVar_77683 = (cppVar_77683 & cppMask_un_8_);
	bool cppVar_77685 = (cppVar_77683 == 160);
	BIT_VEC cppVar_77686 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77687 = (cppVar_77686 << 3) | 5;
	cppVar_77687 = (cppVar_77687 & cppMask_un_5_);
	BIT_VEC cppVar_77688 = (0 << 5) | cppVar_77687;
	cppVar_77688 = (cppVar_77688 & cppMask_un_8_);
	bool cppVar_77690 = (cppVar_77688 == 168);
	BIT_VEC cppVar_77691 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77692 = (cppVar_77691 << 3) | 5;
	cppVar_77692 = (cppVar_77692 & cppMask_un_5_);
	BIT_VEC cppVar_77693 = (0 << 5) | cppVar_77692;
	cppVar_77693 = (cppVar_77693 & cppMask_un_8_);
	bool cppVar_77695 = (cppVar_77693 == 176);
	BIT_VEC cppVar_77696 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77697 = (cppVar_77696 << 3) | 5;
	cppVar_77697 = (cppVar_77697 & cppMask_un_5_);
	BIT_VEC cppVar_77698 = (0 << 5) | cppVar_77697;
	cppVar_77698 = (cppVar_77698 & cppMask_un_8_);
	bool cppVar_77700 = (cppVar_77698 == 184);
	BIT_VEC cppVar_77701 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77702 = (cppVar_77701 << 3) | 5;
	cppVar_77702 = (cppVar_77702 & cppMask_un_5_);
	BIT_VEC cppVar_77703 = (0 << 5) | cppVar_77702;
	cppVar_77703 = (cppVar_77703 & cppMask_un_8_);
	bool cppVar_77705 = (cppVar_77703 == 208);
	BIT_VEC cppVar_77706 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77707 = (cppVar_77706 << 3) | 5;
	cppVar_77707 = (cppVar_77707 & cppMask_un_5_);
	BIT_VEC cppVar_77708 = (0 << 5) | cppVar_77707;
	cppVar_77708 = (cppVar_77708 & cppMask_un_8_);
	bool cppVar_77710 = (cppVar_77708 == 224);
	BIT_VEC cppVar_77711 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77712 = (cppVar_77711 << 3) | 5;
	cppVar_77712 = (cppVar_77712 & cppMask_un_5_);
	BIT_VEC cppVar_77713 = (0 << 5) | cppVar_77712;
	cppVar_77713 = (cppVar_77713 & cppMask_un_8_);
	bool cppVar_77715 = (cppVar_77713 == 240);
	BIT_VEC cppVar_77717 = (cppVar_77715) ? B : 0;
	BIT_VEC cppVar_77718 = (cppVar_77710) ? ACC : cppVar_77717;
	BIT_VEC cppVar_77719 = (cppVar_77705) ? PSW : cppVar_77718;
	BIT_VEC cppVar_77720 = (cppVar_77700) ? IP : cppVar_77719;
	BIT_VEC cppVar_77721 = (cppVar_77695) ? P3 : cppVar_77720;
	BIT_VEC cppVar_77722 = (cppVar_77690) ? IE : cppVar_77721;
	BIT_VEC cppVar_77723 = (cppVar_77685) ? P2 : cppVar_77722;
	BIT_VEC cppVar_77724 = (cppVar_77680) ? SBUF : cppVar_77723;
	BIT_VEC cppVar_77725 = (cppVar_77675) ? SCON : cppVar_77724;
	BIT_VEC cppVar_77726 = (cppVar_77670) ? P1 : cppVar_77725;
	BIT_VEC cppVar_77727 = (cppVar_77665) ? TH1 : cppVar_77726;
	BIT_VEC cppVar_77728 = (cppVar_77660) ? TL1 : cppVar_77727;
	BIT_VEC cppVar_77729 = (cppVar_77655) ? TH0 : cppVar_77728;
	BIT_VEC cppVar_77730 = (cppVar_77650) ? TL0 : cppVar_77729;
	BIT_VEC cppVar_77731 = (cppVar_77645) ? TMOD : cppVar_77730;
	BIT_VEC cppVar_77732 = (cppVar_77640) ? TCON : cppVar_77731;
	BIT_VEC cppVar_77733 = (cppVar_77635) ? PCON : cppVar_77732;
	BIT_VEC cppVar_77734 = (cppVar_77630) ? DPH : cppVar_77733;
	BIT_VEC cppVar_77735 = (cppVar_77625) ? DPL : cppVar_77734;
	BIT_VEC cppVar_77736 = (cppVar_77620) ? SP : cppVar_77735;
	BIT_VEC cppVar_77737 = (cppVar_77615) ? P0 : cppVar_77736;
	BIT_VEC cppVar_77738 = (cppVar_77606) ? cppVar_77610 : cppVar_77737;
	BIT_VEC cppVar_77739 = (cppVar_77598) ? cppVar_77738 : TL0;
	BIT_VEC cppVar_77740 = ROM.rd(PC);
	bool cppVar_77742 = (cppVar_77740 == 140);
	BIT_VEC cppVar_77744 = PC + 1;
	cppVar_77744 = (cppVar_77744 & cppMask_un_16_);
	BIT_VEC cppVar_77745 = ROM.rd(cppVar_77744);
	bool cppVar_77747 = (cppVar_77745 == 138);
	BIT_VEC cppVar_77749 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77751 = (cppVar_77749 << 3) | 4;
	cppVar_77751 = (cppVar_77751 & cppMask_un_5_);
	BIT_VEC cppVar_77752 = (0 << 5) | cppVar_77751;
	cppVar_77752 = (cppVar_77752 & cppMask_un_8_);
	BIT_VEC cppVar_77753 = (cppVar_77752 >> 7) & cppMask_un_1_;
	bool cppVar_77755 = (cppVar_77753 == 0);
	BIT_VEC cppVar_77756 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77757 = (cppVar_77756 << 3) | 4;
	cppVar_77757 = (cppVar_77757 & cppMask_un_5_);
	BIT_VEC cppVar_77758 = (0 << 5) | cppVar_77757;
	cppVar_77758 = (cppVar_77758 & cppMask_un_8_);
	BIT_VEC cppVar_77759 = IRAM.rd(cppVar_77758);
	BIT_VEC cppVar_77760 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77761 = (cppVar_77760 << 3) | 4;
	cppVar_77761 = (cppVar_77761 & cppMask_un_5_);
	BIT_VEC cppVar_77762 = (0 << 5) | cppVar_77761;
	cppVar_77762 = (cppVar_77762 & cppMask_un_8_);
	bool cppVar_77764 = (cppVar_77762 == 128);
	BIT_VEC cppVar_77765 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77766 = (cppVar_77765 << 3) | 4;
	cppVar_77766 = (cppVar_77766 & cppMask_un_5_);
	BIT_VEC cppVar_77767 = (0 << 5) | cppVar_77766;
	cppVar_77767 = (cppVar_77767 & cppMask_un_8_);
	bool cppVar_77769 = (cppVar_77767 == 129);
	BIT_VEC cppVar_77770 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77771 = (cppVar_77770 << 3) | 4;
	cppVar_77771 = (cppVar_77771 & cppMask_un_5_);
	BIT_VEC cppVar_77772 = (0 << 5) | cppVar_77771;
	cppVar_77772 = (cppVar_77772 & cppMask_un_8_);
	bool cppVar_77774 = (cppVar_77772 == 130);
	BIT_VEC cppVar_77775 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77776 = (cppVar_77775 << 3) | 4;
	cppVar_77776 = (cppVar_77776 & cppMask_un_5_);
	BIT_VEC cppVar_77777 = (0 << 5) | cppVar_77776;
	cppVar_77777 = (cppVar_77777 & cppMask_un_8_);
	bool cppVar_77779 = (cppVar_77777 == 131);
	BIT_VEC cppVar_77780 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77781 = (cppVar_77780 << 3) | 4;
	cppVar_77781 = (cppVar_77781 & cppMask_un_5_);
	BIT_VEC cppVar_77782 = (0 << 5) | cppVar_77781;
	cppVar_77782 = (cppVar_77782 & cppMask_un_8_);
	bool cppVar_77784 = (cppVar_77782 == 135);
	BIT_VEC cppVar_77785 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77786 = (cppVar_77785 << 3) | 4;
	cppVar_77786 = (cppVar_77786 & cppMask_un_5_);
	BIT_VEC cppVar_77787 = (0 << 5) | cppVar_77786;
	cppVar_77787 = (cppVar_77787 & cppMask_un_8_);
	bool cppVar_77789 = (cppVar_77787 == 136);
	BIT_VEC cppVar_77790 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77791 = (cppVar_77790 << 3) | 4;
	cppVar_77791 = (cppVar_77791 & cppMask_un_5_);
	BIT_VEC cppVar_77792 = (0 << 5) | cppVar_77791;
	cppVar_77792 = (cppVar_77792 & cppMask_un_8_);
	bool cppVar_77794 = (cppVar_77792 == 137);
	BIT_VEC cppVar_77795 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77796 = (cppVar_77795 << 3) | 4;
	cppVar_77796 = (cppVar_77796 & cppMask_un_5_);
	BIT_VEC cppVar_77797 = (0 << 5) | cppVar_77796;
	cppVar_77797 = (cppVar_77797 & cppMask_un_8_);
	bool cppVar_77799 = (cppVar_77797 == 138);
	BIT_VEC cppVar_77800 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77801 = (cppVar_77800 << 3) | 4;
	cppVar_77801 = (cppVar_77801 & cppMask_un_5_);
	BIT_VEC cppVar_77802 = (0 << 5) | cppVar_77801;
	cppVar_77802 = (cppVar_77802 & cppMask_un_8_);
	bool cppVar_77804 = (cppVar_77802 == 140);
	BIT_VEC cppVar_77805 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77806 = (cppVar_77805 << 3) | 4;
	cppVar_77806 = (cppVar_77806 & cppMask_un_5_);
	BIT_VEC cppVar_77807 = (0 << 5) | cppVar_77806;
	cppVar_77807 = (cppVar_77807 & cppMask_un_8_);
	bool cppVar_77809 = (cppVar_77807 == 139);
	BIT_VEC cppVar_77810 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77811 = (cppVar_77810 << 3) | 4;
	cppVar_77811 = (cppVar_77811 & cppMask_un_5_);
	BIT_VEC cppVar_77812 = (0 << 5) | cppVar_77811;
	cppVar_77812 = (cppVar_77812 & cppMask_un_8_);
	bool cppVar_77814 = (cppVar_77812 == 141);
	BIT_VEC cppVar_77815 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77816 = (cppVar_77815 << 3) | 4;
	cppVar_77816 = (cppVar_77816 & cppMask_un_5_);
	BIT_VEC cppVar_77817 = (0 << 5) | cppVar_77816;
	cppVar_77817 = (cppVar_77817 & cppMask_un_8_);
	bool cppVar_77819 = (cppVar_77817 == 144);
	BIT_VEC cppVar_77820 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77821 = (cppVar_77820 << 3) | 4;
	cppVar_77821 = (cppVar_77821 & cppMask_un_5_);
	BIT_VEC cppVar_77822 = (0 << 5) | cppVar_77821;
	cppVar_77822 = (cppVar_77822 & cppMask_un_8_);
	bool cppVar_77824 = (cppVar_77822 == 152);
	BIT_VEC cppVar_77825 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77826 = (cppVar_77825 << 3) | 4;
	cppVar_77826 = (cppVar_77826 & cppMask_un_5_);
	BIT_VEC cppVar_77827 = (0 << 5) | cppVar_77826;
	cppVar_77827 = (cppVar_77827 & cppMask_un_8_);
	bool cppVar_77829 = (cppVar_77827 == 153);
	BIT_VEC cppVar_77830 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77831 = (cppVar_77830 << 3) | 4;
	cppVar_77831 = (cppVar_77831 & cppMask_un_5_);
	BIT_VEC cppVar_77832 = (0 << 5) | cppVar_77831;
	cppVar_77832 = (cppVar_77832 & cppMask_un_8_);
	bool cppVar_77834 = (cppVar_77832 == 160);
	BIT_VEC cppVar_77835 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77836 = (cppVar_77835 << 3) | 4;
	cppVar_77836 = (cppVar_77836 & cppMask_un_5_);
	BIT_VEC cppVar_77837 = (0 << 5) | cppVar_77836;
	cppVar_77837 = (cppVar_77837 & cppMask_un_8_);
	bool cppVar_77839 = (cppVar_77837 == 168);
	BIT_VEC cppVar_77840 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77841 = (cppVar_77840 << 3) | 4;
	cppVar_77841 = (cppVar_77841 & cppMask_un_5_);
	BIT_VEC cppVar_77842 = (0 << 5) | cppVar_77841;
	cppVar_77842 = (cppVar_77842 & cppMask_un_8_);
	bool cppVar_77844 = (cppVar_77842 == 176);
	BIT_VEC cppVar_77845 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77846 = (cppVar_77845 << 3) | 4;
	cppVar_77846 = (cppVar_77846 & cppMask_un_5_);
	BIT_VEC cppVar_77847 = (0 << 5) | cppVar_77846;
	cppVar_77847 = (cppVar_77847 & cppMask_un_8_);
	bool cppVar_77849 = (cppVar_77847 == 184);
	BIT_VEC cppVar_77850 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77851 = (cppVar_77850 << 3) | 4;
	cppVar_77851 = (cppVar_77851 & cppMask_un_5_);
	BIT_VEC cppVar_77852 = (0 << 5) | cppVar_77851;
	cppVar_77852 = (cppVar_77852 & cppMask_un_8_);
	bool cppVar_77854 = (cppVar_77852 == 208);
	BIT_VEC cppVar_77855 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77856 = (cppVar_77855 << 3) | 4;
	cppVar_77856 = (cppVar_77856 & cppMask_un_5_);
	BIT_VEC cppVar_77857 = (0 << 5) | cppVar_77856;
	cppVar_77857 = (cppVar_77857 & cppMask_un_8_);
	bool cppVar_77859 = (cppVar_77857 == 224);
	BIT_VEC cppVar_77860 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77861 = (cppVar_77860 << 3) | 4;
	cppVar_77861 = (cppVar_77861 & cppMask_un_5_);
	BIT_VEC cppVar_77862 = (0 << 5) | cppVar_77861;
	cppVar_77862 = (cppVar_77862 & cppMask_un_8_);
	bool cppVar_77864 = (cppVar_77862 == 240);
	BIT_VEC cppVar_77866 = (cppVar_77864) ? B : 0;
	BIT_VEC cppVar_77867 = (cppVar_77859) ? ACC : cppVar_77866;
	BIT_VEC cppVar_77868 = (cppVar_77854) ? PSW : cppVar_77867;
	BIT_VEC cppVar_77869 = (cppVar_77849) ? IP : cppVar_77868;
	BIT_VEC cppVar_77870 = (cppVar_77844) ? P3 : cppVar_77869;
	BIT_VEC cppVar_77871 = (cppVar_77839) ? IE : cppVar_77870;
	BIT_VEC cppVar_77872 = (cppVar_77834) ? P2 : cppVar_77871;
	BIT_VEC cppVar_77873 = (cppVar_77829) ? SBUF : cppVar_77872;
	BIT_VEC cppVar_77874 = (cppVar_77824) ? SCON : cppVar_77873;
	BIT_VEC cppVar_77875 = (cppVar_77819) ? P1 : cppVar_77874;
	BIT_VEC cppVar_77876 = (cppVar_77814) ? TH1 : cppVar_77875;
	BIT_VEC cppVar_77877 = (cppVar_77809) ? TL1 : cppVar_77876;
	BIT_VEC cppVar_77878 = (cppVar_77804) ? TH0 : cppVar_77877;
	BIT_VEC cppVar_77879 = (cppVar_77799) ? TL0 : cppVar_77878;
	BIT_VEC cppVar_77880 = (cppVar_77794) ? TMOD : cppVar_77879;
	BIT_VEC cppVar_77881 = (cppVar_77789) ? TCON : cppVar_77880;
	BIT_VEC cppVar_77882 = (cppVar_77784) ? PCON : cppVar_77881;
	BIT_VEC cppVar_77883 = (cppVar_77779) ? DPH : cppVar_77882;
	BIT_VEC cppVar_77884 = (cppVar_77774) ? DPL : cppVar_77883;
	BIT_VEC cppVar_77885 = (cppVar_77769) ? SP : cppVar_77884;
	BIT_VEC cppVar_77886 = (cppVar_77764) ? P0 : cppVar_77885;
	BIT_VEC cppVar_77887 = (cppVar_77755) ? cppVar_77759 : cppVar_77886;
	BIT_VEC cppVar_77888 = (cppVar_77747) ? cppVar_77887 : TL0;
	BIT_VEC cppVar_77889 = ROM.rd(PC);
	bool cppVar_77891 = (cppVar_77889 == 139);
	BIT_VEC cppVar_77893 = PC + 1;
	cppVar_77893 = (cppVar_77893 & cppMask_un_16_);
	BIT_VEC cppVar_77894 = ROM.rd(cppVar_77893);
	bool cppVar_77896 = (cppVar_77894 == 138);
	BIT_VEC cppVar_77898 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77900 = (cppVar_77898 << 3) | 3;
	cppVar_77900 = (cppVar_77900 & cppMask_un_5_);
	BIT_VEC cppVar_77901 = (0 << 5) | cppVar_77900;
	cppVar_77901 = (cppVar_77901 & cppMask_un_8_);
	BIT_VEC cppVar_77902 = (cppVar_77901 >> 7) & cppMask_un_1_;
	bool cppVar_77904 = (cppVar_77902 == 0);
	BIT_VEC cppVar_77905 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77906 = (cppVar_77905 << 3) | 3;
	cppVar_77906 = (cppVar_77906 & cppMask_un_5_);
	BIT_VEC cppVar_77907 = (0 << 5) | cppVar_77906;
	cppVar_77907 = (cppVar_77907 & cppMask_un_8_);
	BIT_VEC cppVar_77908 = IRAM.rd(cppVar_77907);
	BIT_VEC cppVar_77909 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77910 = (cppVar_77909 << 3) | 3;
	cppVar_77910 = (cppVar_77910 & cppMask_un_5_);
	BIT_VEC cppVar_77911 = (0 << 5) | cppVar_77910;
	cppVar_77911 = (cppVar_77911 & cppMask_un_8_);
	bool cppVar_77913 = (cppVar_77911 == 128);
	BIT_VEC cppVar_77914 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77915 = (cppVar_77914 << 3) | 3;
	cppVar_77915 = (cppVar_77915 & cppMask_un_5_);
	BIT_VEC cppVar_77916 = (0 << 5) | cppVar_77915;
	cppVar_77916 = (cppVar_77916 & cppMask_un_8_);
	bool cppVar_77918 = (cppVar_77916 == 129);
	BIT_VEC cppVar_77919 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77920 = (cppVar_77919 << 3) | 3;
	cppVar_77920 = (cppVar_77920 & cppMask_un_5_);
	BIT_VEC cppVar_77921 = (0 << 5) | cppVar_77920;
	cppVar_77921 = (cppVar_77921 & cppMask_un_8_);
	bool cppVar_77923 = (cppVar_77921 == 130);
	BIT_VEC cppVar_77924 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77925 = (cppVar_77924 << 3) | 3;
	cppVar_77925 = (cppVar_77925 & cppMask_un_5_);
	BIT_VEC cppVar_77926 = (0 << 5) | cppVar_77925;
	cppVar_77926 = (cppVar_77926 & cppMask_un_8_);
	bool cppVar_77928 = (cppVar_77926 == 131);
	BIT_VEC cppVar_77929 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77930 = (cppVar_77929 << 3) | 3;
	cppVar_77930 = (cppVar_77930 & cppMask_un_5_);
	BIT_VEC cppVar_77931 = (0 << 5) | cppVar_77930;
	cppVar_77931 = (cppVar_77931 & cppMask_un_8_);
	bool cppVar_77933 = (cppVar_77931 == 135);
	BIT_VEC cppVar_77934 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77935 = (cppVar_77934 << 3) | 3;
	cppVar_77935 = (cppVar_77935 & cppMask_un_5_);
	BIT_VEC cppVar_77936 = (0 << 5) | cppVar_77935;
	cppVar_77936 = (cppVar_77936 & cppMask_un_8_);
	bool cppVar_77938 = (cppVar_77936 == 136);
	BIT_VEC cppVar_77939 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77940 = (cppVar_77939 << 3) | 3;
	cppVar_77940 = (cppVar_77940 & cppMask_un_5_);
	BIT_VEC cppVar_77941 = (0 << 5) | cppVar_77940;
	cppVar_77941 = (cppVar_77941 & cppMask_un_8_);
	bool cppVar_77943 = (cppVar_77941 == 137);
	BIT_VEC cppVar_77944 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77945 = (cppVar_77944 << 3) | 3;
	cppVar_77945 = (cppVar_77945 & cppMask_un_5_);
	BIT_VEC cppVar_77946 = (0 << 5) | cppVar_77945;
	cppVar_77946 = (cppVar_77946 & cppMask_un_8_);
	bool cppVar_77948 = (cppVar_77946 == 138);
	BIT_VEC cppVar_77949 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77950 = (cppVar_77949 << 3) | 3;
	cppVar_77950 = (cppVar_77950 & cppMask_un_5_);
	BIT_VEC cppVar_77951 = (0 << 5) | cppVar_77950;
	cppVar_77951 = (cppVar_77951 & cppMask_un_8_);
	bool cppVar_77953 = (cppVar_77951 == 140);
	BIT_VEC cppVar_77954 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77955 = (cppVar_77954 << 3) | 3;
	cppVar_77955 = (cppVar_77955 & cppMask_un_5_);
	BIT_VEC cppVar_77956 = (0 << 5) | cppVar_77955;
	cppVar_77956 = (cppVar_77956 & cppMask_un_8_);
	bool cppVar_77958 = (cppVar_77956 == 139);
	BIT_VEC cppVar_77959 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77960 = (cppVar_77959 << 3) | 3;
	cppVar_77960 = (cppVar_77960 & cppMask_un_5_);
	BIT_VEC cppVar_77961 = (0 << 5) | cppVar_77960;
	cppVar_77961 = (cppVar_77961 & cppMask_un_8_);
	bool cppVar_77963 = (cppVar_77961 == 141);
	BIT_VEC cppVar_77964 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77965 = (cppVar_77964 << 3) | 3;
	cppVar_77965 = (cppVar_77965 & cppMask_un_5_);
	BIT_VEC cppVar_77966 = (0 << 5) | cppVar_77965;
	cppVar_77966 = (cppVar_77966 & cppMask_un_8_);
	bool cppVar_77968 = (cppVar_77966 == 144);
	BIT_VEC cppVar_77969 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77970 = (cppVar_77969 << 3) | 3;
	cppVar_77970 = (cppVar_77970 & cppMask_un_5_);
	BIT_VEC cppVar_77971 = (0 << 5) | cppVar_77970;
	cppVar_77971 = (cppVar_77971 & cppMask_un_8_);
	bool cppVar_77973 = (cppVar_77971 == 152);
	BIT_VEC cppVar_77974 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77975 = (cppVar_77974 << 3) | 3;
	cppVar_77975 = (cppVar_77975 & cppMask_un_5_);
	BIT_VEC cppVar_77976 = (0 << 5) | cppVar_77975;
	cppVar_77976 = (cppVar_77976 & cppMask_un_8_);
	bool cppVar_77978 = (cppVar_77976 == 153);
	BIT_VEC cppVar_77979 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77980 = (cppVar_77979 << 3) | 3;
	cppVar_77980 = (cppVar_77980 & cppMask_un_5_);
	BIT_VEC cppVar_77981 = (0 << 5) | cppVar_77980;
	cppVar_77981 = (cppVar_77981 & cppMask_un_8_);
	bool cppVar_77983 = (cppVar_77981 == 160);
	BIT_VEC cppVar_77984 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77985 = (cppVar_77984 << 3) | 3;
	cppVar_77985 = (cppVar_77985 & cppMask_un_5_);
	BIT_VEC cppVar_77986 = (0 << 5) | cppVar_77985;
	cppVar_77986 = (cppVar_77986 & cppMask_un_8_);
	bool cppVar_77988 = (cppVar_77986 == 168);
	BIT_VEC cppVar_77989 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77990 = (cppVar_77989 << 3) | 3;
	cppVar_77990 = (cppVar_77990 & cppMask_un_5_);
	BIT_VEC cppVar_77991 = (0 << 5) | cppVar_77990;
	cppVar_77991 = (cppVar_77991 & cppMask_un_8_);
	bool cppVar_77993 = (cppVar_77991 == 176);
	BIT_VEC cppVar_77994 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_77995 = (cppVar_77994 << 3) | 3;
	cppVar_77995 = (cppVar_77995 & cppMask_un_5_);
	BIT_VEC cppVar_77996 = (0 << 5) | cppVar_77995;
	cppVar_77996 = (cppVar_77996 & cppMask_un_8_);
	bool cppVar_77998 = (cppVar_77996 == 184);
	BIT_VEC cppVar_77999 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78000 = (cppVar_77999 << 3) | 3;
	cppVar_78000 = (cppVar_78000 & cppMask_un_5_);
	BIT_VEC cppVar_78001 = (0 << 5) | cppVar_78000;
	cppVar_78001 = (cppVar_78001 & cppMask_un_8_);
	bool cppVar_78003 = (cppVar_78001 == 208);
	BIT_VEC cppVar_78004 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78005 = (cppVar_78004 << 3) | 3;
	cppVar_78005 = (cppVar_78005 & cppMask_un_5_);
	BIT_VEC cppVar_78006 = (0 << 5) | cppVar_78005;
	cppVar_78006 = (cppVar_78006 & cppMask_un_8_);
	bool cppVar_78008 = (cppVar_78006 == 224);
	BIT_VEC cppVar_78009 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78010 = (cppVar_78009 << 3) | 3;
	cppVar_78010 = (cppVar_78010 & cppMask_un_5_);
	BIT_VEC cppVar_78011 = (0 << 5) | cppVar_78010;
	cppVar_78011 = (cppVar_78011 & cppMask_un_8_);
	bool cppVar_78013 = (cppVar_78011 == 240);
	BIT_VEC cppVar_78015 = (cppVar_78013) ? B : 0;
	BIT_VEC cppVar_78016 = (cppVar_78008) ? ACC : cppVar_78015;
	BIT_VEC cppVar_78017 = (cppVar_78003) ? PSW : cppVar_78016;
	BIT_VEC cppVar_78018 = (cppVar_77998) ? IP : cppVar_78017;
	BIT_VEC cppVar_78019 = (cppVar_77993) ? P3 : cppVar_78018;
	BIT_VEC cppVar_78020 = (cppVar_77988) ? IE : cppVar_78019;
	BIT_VEC cppVar_78021 = (cppVar_77983) ? P2 : cppVar_78020;
	BIT_VEC cppVar_78022 = (cppVar_77978) ? SBUF : cppVar_78021;
	BIT_VEC cppVar_78023 = (cppVar_77973) ? SCON : cppVar_78022;
	BIT_VEC cppVar_78024 = (cppVar_77968) ? P1 : cppVar_78023;
	BIT_VEC cppVar_78025 = (cppVar_77963) ? TH1 : cppVar_78024;
	BIT_VEC cppVar_78026 = (cppVar_77958) ? TL1 : cppVar_78025;
	BIT_VEC cppVar_78027 = (cppVar_77953) ? TH0 : cppVar_78026;
	BIT_VEC cppVar_78028 = (cppVar_77948) ? TL0 : cppVar_78027;
	BIT_VEC cppVar_78029 = (cppVar_77943) ? TMOD : cppVar_78028;
	BIT_VEC cppVar_78030 = (cppVar_77938) ? TCON : cppVar_78029;
	BIT_VEC cppVar_78031 = (cppVar_77933) ? PCON : cppVar_78030;
	BIT_VEC cppVar_78032 = (cppVar_77928) ? DPH : cppVar_78031;
	BIT_VEC cppVar_78033 = (cppVar_77923) ? DPL : cppVar_78032;
	BIT_VEC cppVar_78034 = (cppVar_77918) ? SP : cppVar_78033;
	BIT_VEC cppVar_78035 = (cppVar_77913) ? P0 : cppVar_78034;
	BIT_VEC cppVar_78036 = (cppVar_77904) ? cppVar_77908 : cppVar_78035;
	BIT_VEC cppVar_78037 = (cppVar_77896) ? cppVar_78036 : TL0;
	BIT_VEC cppVar_78038 = ROM.rd(PC);
	bool cppVar_78040 = (cppVar_78038 == 138);
	BIT_VEC cppVar_78042 = PC + 1;
	cppVar_78042 = (cppVar_78042 & cppMask_un_16_);
	BIT_VEC cppVar_78043 = ROM.rd(cppVar_78042);
	bool cppVar_78045 = (cppVar_78043 == 138);
	BIT_VEC cppVar_78047 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78049 = (cppVar_78047 << 3) | 2;
	cppVar_78049 = (cppVar_78049 & cppMask_un_5_);
	BIT_VEC cppVar_78050 = (0 << 5) | cppVar_78049;
	cppVar_78050 = (cppVar_78050 & cppMask_un_8_);
	BIT_VEC cppVar_78051 = (cppVar_78050 >> 7) & cppMask_un_1_;
	bool cppVar_78053 = (cppVar_78051 == 0);
	BIT_VEC cppVar_78054 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78055 = (cppVar_78054 << 3) | 2;
	cppVar_78055 = (cppVar_78055 & cppMask_un_5_);
	BIT_VEC cppVar_78056 = (0 << 5) | cppVar_78055;
	cppVar_78056 = (cppVar_78056 & cppMask_un_8_);
	BIT_VEC cppVar_78057 = IRAM.rd(cppVar_78056);
	BIT_VEC cppVar_78058 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78059 = (cppVar_78058 << 3) | 2;
	cppVar_78059 = (cppVar_78059 & cppMask_un_5_);
	BIT_VEC cppVar_78060 = (0 << 5) | cppVar_78059;
	cppVar_78060 = (cppVar_78060 & cppMask_un_8_);
	bool cppVar_78062 = (cppVar_78060 == 128);
	BIT_VEC cppVar_78063 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78064 = (cppVar_78063 << 3) | 2;
	cppVar_78064 = (cppVar_78064 & cppMask_un_5_);
	BIT_VEC cppVar_78065 = (0 << 5) | cppVar_78064;
	cppVar_78065 = (cppVar_78065 & cppMask_un_8_);
	bool cppVar_78067 = (cppVar_78065 == 129);
	BIT_VEC cppVar_78068 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78069 = (cppVar_78068 << 3) | 2;
	cppVar_78069 = (cppVar_78069 & cppMask_un_5_);
	BIT_VEC cppVar_78070 = (0 << 5) | cppVar_78069;
	cppVar_78070 = (cppVar_78070 & cppMask_un_8_);
	bool cppVar_78072 = (cppVar_78070 == 130);
	BIT_VEC cppVar_78073 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78074 = (cppVar_78073 << 3) | 2;
	cppVar_78074 = (cppVar_78074 & cppMask_un_5_);
	BIT_VEC cppVar_78075 = (0 << 5) | cppVar_78074;
	cppVar_78075 = (cppVar_78075 & cppMask_un_8_);
	bool cppVar_78077 = (cppVar_78075 == 131);
	BIT_VEC cppVar_78078 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78079 = (cppVar_78078 << 3) | 2;
	cppVar_78079 = (cppVar_78079 & cppMask_un_5_);
	BIT_VEC cppVar_78080 = (0 << 5) | cppVar_78079;
	cppVar_78080 = (cppVar_78080 & cppMask_un_8_);
	bool cppVar_78082 = (cppVar_78080 == 135);
	BIT_VEC cppVar_78083 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78084 = (cppVar_78083 << 3) | 2;
	cppVar_78084 = (cppVar_78084 & cppMask_un_5_);
	BIT_VEC cppVar_78085 = (0 << 5) | cppVar_78084;
	cppVar_78085 = (cppVar_78085 & cppMask_un_8_);
	bool cppVar_78087 = (cppVar_78085 == 136);
	BIT_VEC cppVar_78088 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78089 = (cppVar_78088 << 3) | 2;
	cppVar_78089 = (cppVar_78089 & cppMask_un_5_);
	BIT_VEC cppVar_78090 = (0 << 5) | cppVar_78089;
	cppVar_78090 = (cppVar_78090 & cppMask_un_8_);
	bool cppVar_78092 = (cppVar_78090 == 137);
	BIT_VEC cppVar_78093 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78094 = (cppVar_78093 << 3) | 2;
	cppVar_78094 = (cppVar_78094 & cppMask_un_5_);
	BIT_VEC cppVar_78095 = (0 << 5) | cppVar_78094;
	cppVar_78095 = (cppVar_78095 & cppMask_un_8_);
	bool cppVar_78097 = (cppVar_78095 == 138);
	BIT_VEC cppVar_78098 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78099 = (cppVar_78098 << 3) | 2;
	cppVar_78099 = (cppVar_78099 & cppMask_un_5_);
	BIT_VEC cppVar_78100 = (0 << 5) | cppVar_78099;
	cppVar_78100 = (cppVar_78100 & cppMask_un_8_);
	bool cppVar_78102 = (cppVar_78100 == 140);
	BIT_VEC cppVar_78103 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78104 = (cppVar_78103 << 3) | 2;
	cppVar_78104 = (cppVar_78104 & cppMask_un_5_);
	BIT_VEC cppVar_78105 = (0 << 5) | cppVar_78104;
	cppVar_78105 = (cppVar_78105 & cppMask_un_8_);
	bool cppVar_78107 = (cppVar_78105 == 139);
	BIT_VEC cppVar_78108 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78109 = (cppVar_78108 << 3) | 2;
	cppVar_78109 = (cppVar_78109 & cppMask_un_5_);
	BIT_VEC cppVar_78110 = (0 << 5) | cppVar_78109;
	cppVar_78110 = (cppVar_78110 & cppMask_un_8_);
	bool cppVar_78112 = (cppVar_78110 == 141);
	BIT_VEC cppVar_78113 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78114 = (cppVar_78113 << 3) | 2;
	cppVar_78114 = (cppVar_78114 & cppMask_un_5_);
	BIT_VEC cppVar_78115 = (0 << 5) | cppVar_78114;
	cppVar_78115 = (cppVar_78115 & cppMask_un_8_);
	bool cppVar_78117 = (cppVar_78115 == 144);
	BIT_VEC cppVar_78118 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78119 = (cppVar_78118 << 3) | 2;
	cppVar_78119 = (cppVar_78119 & cppMask_un_5_);
	BIT_VEC cppVar_78120 = (0 << 5) | cppVar_78119;
	cppVar_78120 = (cppVar_78120 & cppMask_un_8_);
	bool cppVar_78122 = (cppVar_78120 == 152);
	BIT_VEC cppVar_78123 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78124 = (cppVar_78123 << 3) | 2;
	cppVar_78124 = (cppVar_78124 & cppMask_un_5_);
	BIT_VEC cppVar_78125 = (0 << 5) | cppVar_78124;
	cppVar_78125 = (cppVar_78125 & cppMask_un_8_);
	bool cppVar_78127 = (cppVar_78125 == 153);
	BIT_VEC cppVar_78128 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78129 = (cppVar_78128 << 3) | 2;
	cppVar_78129 = (cppVar_78129 & cppMask_un_5_);
	BIT_VEC cppVar_78130 = (0 << 5) | cppVar_78129;
	cppVar_78130 = (cppVar_78130 & cppMask_un_8_);
	bool cppVar_78132 = (cppVar_78130 == 160);
	BIT_VEC cppVar_78133 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78134 = (cppVar_78133 << 3) | 2;
	cppVar_78134 = (cppVar_78134 & cppMask_un_5_);
	BIT_VEC cppVar_78135 = (0 << 5) | cppVar_78134;
	cppVar_78135 = (cppVar_78135 & cppMask_un_8_);
	bool cppVar_78137 = (cppVar_78135 == 168);
	BIT_VEC cppVar_78138 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78139 = (cppVar_78138 << 3) | 2;
	cppVar_78139 = (cppVar_78139 & cppMask_un_5_);
	BIT_VEC cppVar_78140 = (0 << 5) | cppVar_78139;
	cppVar_78140 = (cppVar_78140 & cppMask_un_8_);
	bool cppVar_78142 = (cppVar_78140 == 176);
	BIT_VEC cppVar_78143 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78144 = (cppVar_78143 << 3) | 2;
	cppVar_78144 = (cppVar_78144 & cppMask_un_5_);
	BIT_VEC cppVar_78145 = (0 << 5) | cppVar_78144;
	cppVar_78145 = (cppVar_78145 & cppMask_un_8_);
	bool cppVar_78147 = (cppVar_78145 == 184);
	BIT_VEC cppVar_78148 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78149 = (cppVar_78148 << 3) | 2;
	cppVar_78149 = (cppVar_78149 & cppMask_un_5_);
	BIT_VEC cppVar_78150 = (0 << 5) | cppVar_78149;
	cppVar_78150 = (cppVar_78150 & cppMask_un_8_);
	bool cppVar_78152 = (cppVar_78150 == 208);
	BIT_VEC cppVar_78153 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78154 = (cppVar_78153 << 3) | 2;
	cppVar_78154 = (cppVar_78154 & cppMask_un_5_);
	BIT_VEC cppVar_78155 = (0 << 5) | cppVar_78154;
	cppVar_78155 = (cppVar_78155 & cppMask_un_8_);
	bool cppVar_78157 = (cppVar_78155 == 224);
	BIT_VEC cppVar_78158 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78159 = (cppVar_78158 << 3) | 2;
	cppVar_78159 = (cppVar_78159 & cppMask_un_5_);
	BIT_VEC cppVar_78160 = (0 << 5) | cppVar_78159;
	cppVar_78160 = (cppVar_78160 & cppMask_un_8_);
	bool cppVar_78162 = (cppVar_78160 == 240);
	BIT_VEC cppVar_78164 = (cppVar_78162) ? B : 0;
	BIT_VEC cppVar_78165 = (cppVar_78157) ? ACC : cppVar_78164;
	BIT_VEC cppVar_78166 = (cppVar_78152) ? PSW : cppVar_78165;
	BIT_VEC cppVar_78167 = (cppVar_78147) ? IP : cppVar_78166;
	BIT_VEC cppVar_78168 = (cppVar_78142) ? P3 : cppVar_78167;
	BIT_VEC cppVar_78169 = (cppVar_78137) ? IE : cppVar_78168;
	BIT_VEC cppVar_78170 = (cppVar_78132) ? P2 : cppVar_78169;
	BIT_VEC cppVar_78171 = (cppVar_78127) ? SBUF : cppVar_78170;
	BIT_VEC cppVar_78172 = (cppVar_78122) ? SCON : cppVar_78171;
	BIT_VEC cppVar_78173 = (cppVar_78117) ? P1 : cppVar_78172;
	BIT_VEC cppVar_78174 = (cppVar_78112) ? TH1 : cppVar_78173;
	BIT_VEC cppVar_78175 = (cppVar_78107) ? TL1 : cppVar_78174;
	BIT_VEC cppVar_78176 = (cppVar_78102) ? TH0 : cppVar_78175;
	BIT_VEC cppVar_78177 = (cppVar_78097) ? TL0 : cppVar_78176;
	BIT_VEC cppVar_78178 = (cppVar_78092) ? TMOD : cppVar_78177;
	BIT_VEC cppVar_78179 = (cppVar_78087) ? TCON : cppVar_78178;
	BIT_VEC cppVar_78180 = (cppVar_78082) ? PCON : cppVar_78179;
	BIT_VEC cppVar_78181 = (cppVar_78077) ? DPH : cppVar_78180;
	BIT_VEC cppVar_78182 = (cppVar_78072) ? DPL : cppVar_78181;
	BIT_VEC cppVar_78183 = (cppVar_78067) ? SP : cppVar_78182;
	BIT_VEC cppVar_78184 = (cppVar_78062) ? P0 : cppVar_78183;
	BIT_VEC cppVar_78185 = (cppVar_78053) ? cppVar_78057 : cppVar_78184;
	BIT_VEC cppVar_78186 = (cppVar_78045) ? cppVar_78185 : TL0;
	BIT_VEC cppVar_78187 = ROM.rd(PC);
	bool cppVar_78189 = (cppVar_78187 == 137);
	BIT_VEC cppVar_78191 = PC + 1;
	cppVar_78191 = (cppVar_78191 & cppMask_un_16_);
	BIT_VEC cppVar_78192 = ROM.rd(cppVar_78191);
	bool cppVar_78194 = (cppVar_78192 == 138);
	BIT_VEC cppVar_78196 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78198 = (cppVar_78196 << 3) | 1;
	cppVar_78198 = (cppVar_78198 & cppMask_un_5_);
	BIT_VEC cppVar_78199 = (0 << 5) | cppVar_78198;
	cppVar_78199 = (cppVar_78199 & cppMask_un_8_);
	BIT_VEC cppVar_78200 = (cppVar_78199 >> 7) & cppMask_un_1_;
	bool cppVar_78202 = (cppVar_78200 == 0);
	BIT_VEC cppVar_78203 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78204 = (cppVar_78203 << 3) | 1;
	cppVar_78204 = (cppVar_78204 & cppMask_un_5_);
	BIT_VEC cppVar_78205 = (0 << 5) | cppVar_78204;
	cppVar_78205 = (cppVar_78205 & cppMask_un_8_);
	BIT_VEC cppVar_78206 = IRAM.rd(cppVar_78205);
	BIT_VEC cppVar_78207 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78208 = (cppVar_78207 << 3) | 1;
	cppVar_78208 = (cppVar_78208 & cppMask_un_5_);
	BIT_VEC cppVar_78209 = (0 << 5) | cppVar_78208;
	cppVar_78209 = (cppVar_78209 & cppMask_un_8_);
	bool cppVar_78211 = (cppVar_78209 == 128);
	BIT_VEC cppVar_78212 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78213 = (cppVar_78212 << 3) | 1;
	cppVar_78213 = (cppVar_78213 & cppMask_un_5_);
	BIT_VEC cppVar_78214 = (0 << 5) | cppVar_78213;
	cppVar_78214 = (cppVar_78214 & cppMask_un_8_);
	bool cppVar_78216 = (cppVar_78214 == 129);
	BIT_VEC cppVar_78217 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78218 = (cppVar_78217 << 3) | 1;
	cppVar_78218 = (cppVar_78218 & cppMask_un_5_);
	BIT_VEC cppVar_78219 = (0 << 5) | cppVar_78218;
	cppVar_78219 = (cppVar_78219 & cppMask_un_8_);
	bool cppVar_78221 = (cppVar_78219 == 130);
	BIT_VEC cppVar_78222 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78223 = (cppVar_78222 << 3) | 1;
	cppVar_78223 = (cppVar_78223 & cppMask_un_5_);
	BIT_VEC cppVar_78224 = (0 << 5) | cppVar_78223;
	cppVar_78224 = (cppVar_78224 & cppMask_un_8_);
	bool cppVar_78226 = (cppVar_78224 == 131);
	BIT_VEC cppVar_78227 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78228 = (cppVar_78227 << 3) | 1;
	cppVar_78228 = (cppVar_78228 & cppMask_un_5_);
	BIT_VEC cppVar_78229 = (0 << 5) | cppVar_78228;
	cppVar_78229 = (cppVar_78229 & cppMask_un_8_);
	bool cppVar_78231 = (cppVar_78229 == 135);
	BIT_VEC cppVar_78232 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78233 = (cppVar_78232 << 3) | 1;
	cppVar_78233 = (cppVar_78233 & cppMask_un_5_);
	BIT_VEC cppVar_78234 = (0 << 5) | cppVar_78233;
	cppVar_78234 = (cppVar_78234 & cppMask_un_8_);
	bool cppVar_78236 = (cppVar_78234 == 136);
	BIT_VEC cppVar_78237 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78238 = (cppVar_78237 << 3) | 1;
	cppVar_78238 = (cppVar_78238 & cppMask_un_5_);
	BIT_VEC cppVar_78239 = (0 << 5) | cppVar_78238;
	cppVar_78239 = (cppVar_78239 & cppMask_un_8_);
	bool cppVar_78241 = (cppVar_78239 == 137);
	BIT_VEC cppVar_78242 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78243 = (cppVar_78242 << 3) | 1;
	cppVar_78243 = (cppVar_78243 & cppMask_un_5_);
	BIT_VEC cppVar_78244 = (0 << 5) | cppVar_78243;
	cppVar_78244 = (cppVar_78244 & cppMask_un_8_);
	bool cppVar_78246 = (cppVar_78244 == 138);
	BIT_VEC cppVar_78247 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78248 = (cppVar_78247 << 3) | 1;
	cppVar_78248 = (cppVar_78248 & cppMask_un_5_);
	BIT_VEC cppVar_78249 = (0 << 5) | cppVar_78248;
	cppVar_78249 = (cppVar_78249 & cppMask_un_8_);
	bool cppVar_78251 = (cppVar_78249 == 140);
	BIT_VEC cppVar_78252 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78253 = (cppVar_78252 << 3) | 1;
	cppVar_78253 = (cppVar_78253 & cppMask_un_5_);
	BIT_VEC cppVar_78254 = (0 << 5) | cppVar_78253;
	cppVar_78254 = (cppVar_78254 & cppMask_un_8_);
	bool cppVar_78256 = (cppVar_78254 == 139);
	BIT_VEC cppVar_78257 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78258 = (cppVar_78257 << 3) | 1;
	cppVar_78258 = (cppVar_78258 & cppMask_un_5_);
	BIT_VEC cppVar_78259 = (0 << 5) | cppVar_78258;
	cppVar_78259 = (cppVar_78259 & cppMask_un_8_);
	bool cppVar_78261 = (cppVar_78259 == 141);
	BIT_VEC cppVar_78262 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78263 = (cppVar_78262 << 3) | 1;
	cppVar_78263 = (cppVar_78263 & cppMask_un_5_);
	BIT_VEC cppVar_78264 = (0 << 5) | cppVar_78263;
	cppVar_78264 = (cppVar_78264 & cppMask_un_8_);
	bool cppVar_78266 = (cppVar_78264 == 144);
	BIT_VEC cppVar_78267 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78268 = (cppVar_78267 << 3) | 1;
	cppVar_78268 = (cppVar_78268 & cppMask_un_5_);
	BIT_VEC cppVar_78269 = (0 << 5) | cppVar_78268;
	cppVar_78269 = (cppVar_78269 & cppMask_un_8_);
	bool cppVar_78271 = (cppVar_78269 == 152);
	BIT_VEC cppVar_78272 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78273 = (cppVar_78272 << 3) | 1;
	cppVar_78273 = (cppVar_78273 & cppMask_un_5_);
	BIT_VEC cppVar_78274 = (0 << 5) | cppVar_78273;
	cppVar_78274 = (cppVar_78274 & cppMask_un_8_);
	bool cppVar_78276 = (cppVar_78274 == 153);
	BIT_VEC cppVar_78277 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78278 = (cppVar_78277 << 3) | 1;
	cppVar_78278 = (cppVar_78278 & cppMask_un_5_);
	BIT_VEC cppVar_78279 = (0 << 5) | cppVar_78278;
	cppVar_78279 = (cppVar_78279 & cppMask_un_8_);
	bool cppVar_78281 = (cppVar_78279 == 160);
	BIT_VEC cppVar_78282 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78283 = (cppVar_78282 << 3) | 1;
	cppVar_78283 = (cppVar_78283 & cppMask_un_5_);
	BIT_VEC cppVar_78284 = (0 << 5) | cppVar_78283;
	cppVar_78284 = (cppVar_78284 & cppMask_un_8_);
	bool cppVar_78286 = (cppVar_78284 == 168);
	BIT_VEC cppVar_78287 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78288 = (cppVar_78287 << 3) | 1;
	cppVar_78288 = (cppVar_78288 & cppMask_un_5_);
	BIT_VEC cppVar_78289 = (0 << 5) | cppVar_78288;
	cppVar_78289 = (cppVar_78289 & cppMask_un_8_);
	bool cppVar_78291 = (cppVar_78289 == 176);
	BIT_VEC cppVar_78292 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78293 = (cppVar_78292 << 3) | 1;
	cppVar_78293 = (cppVar_78293 & cppMask_un_5_);
	BIT_VEC cppVar_78294 = (0 << 5) | cppVar_78293;
	cppVar_78294 = (cppVar_78294 & cppMask_un_8_);
	bool cppVar_78296 = (cppVar_78294 == 184);
	BIT_VEC cppVar_78297 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78298 = (cppVar_78297 << 3) | 1;
	cppVar_78298 = (cppVar_78298 & cppMask_un_5_);
	BIT_VEC cppVar_78299 = (0 << 5) | cppVar_78298;
	cppVar_78299 = (cppVar_78299 & cppMask_un_8_);
	bool cppVar_78301 = (cppVar_78299 == 208);
	BIT_VEC cppVar_78302 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78303 = (cppVar_78302 << 3) | 1;
	cppVar_78303 = (cppVar_78303 & cppMask_un_5_);
	BIT_VEC cppVar_78304 = (0 << 5) | cppVar_78303;
	cppVar_78304 = (cppVar_78304 & cppMask_un_8_);
	bool cppVar_78306 = (cppVar_78304 == 224);
	BIT_VEC cppVar_78307 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78308 = (cppVar_78307 << 3) | 1;
	cppVar_78308 = (cppVar_78308 & cppMask_un_5_);
	BIT_VEC cppVar_78309 = (0 << 5) | cppVar_78308;
	cppVar_78309 = (cppVar_78309 & cppMask_un_8_);
	bool cppVar_78311 = (cppVar_78309 == 240);
	BIT_VEC cppVar_78313 = (cppVar_78311) ? B : 0;
	BIT_VEC cppVar_78314 = (cppVar_78306) ? ACC : cppVar_78313;
	BIT_VEC cppVar_78315 = (cppVar_78301) ? PSW : cppVar_78314;
	BIT_VEC cppVar_78316 = (cppVar_78296) ? IP : cppVar_78315;
	BIT_VEC cppVar_78317 = (cppVar_78291) ? P3 : cppVar_78316;
	BIT_VEC cppVar_78318 = (cppVar_78286) ? IE : cppVar_78317;
	BIT_VEC cppVar_78319 = (cppVar_78281) ? P2 : cppVar_78318;
	BIT_VEC cppVar_78320 = (cppVar_78276) ? SBUF : cppVar_78319;
	BIT_VEC cppVar_78321 = (cppVar_78271) ? SCON : cppVar_78320;
	BIT_VEC cppVar_78322 = (cppVar_78266) ? P1 : cppVar_78321;
	BIT_VEC cppVar_78323 = (cppVar_78261) ? TH1 : cppVar_78322;
	BIT_VEC cppVar_78324 = (cppVar_78256) ? TL1 : cppVar_78323;
	BIT_VEC cppVar_78325 = (cppVar_78251) ? TH0 : cppVar_78324;
	BIT_VEC cppVar_78326 = (cppVar_78246) ? TL0 : cppVar_78325;
	BIT_VEC cppVar_78327 = (cppVar_78241) ? TMOD : cppVar_78326;
	BIT_VEC cppVar_78328 = (cppVar_78236) ? TCON : cppVar_78327;
	BIT_VEC cppVar_78329 = (cppVar_78231) ? PCON : cppVar_78328;
	BIT_VEC cppVar_78330 = (cppVar_78226) ? DPH : cppVar_78329;
	BIT_VEC cppVar_78331 = (cppVar_78221) ? DPL : cppVar_78330;
	BIT_VEC cppVar_78332 = (cppVar_78216) ? SP : cppVar_78331;
	BIT_VEC cppVar_78333 = (cppVar_78211) ? P0 : cppVar_78332;
	BIT_VEC cppVar_78334 = (cppVar_78202) ? cppVar_78206 : cppVar_78333;
	BIT_VEC cppVar_78335 = (cppVar_78194) ? cppVar_78334 : TL0;
	BIT_VEC cppVar_78336 = ROM.rd(PC);
	bool cppVar_78338 = (cppVar_78336 == 136);
	BIT_VEC cppVar_78340 = PC + 1;
	cppVar_78340 = (cppVar_78340 & cppMask_un_16_);
	BIT_VEC cppVar_78341 = ROM.rd(cppVar_78340);
	bool cppVar_78343 = (cppVar_78341 == 138);
	BIT_VEC cppVar_78345 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78347 = (cppVar_78345 << 3) | 0;
	cppVar_78347 = (cppVar_78347 & cppMask_un_5_);
	BIT_VEC cppVar_78348 = (0 << 5) | cppVar_78347;
	cppVar_78348 = (cppVar_78348 & cppMask_un_8_);
	BIT_VEC cppVar_78349 = (cppVar_78348 >> 7) & cppMask_un_1_;
	bool cppVar_78351 = (cppVar_78349 == 0);
	BIT_VEC cppVar_78352 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78353 = (cppVar_78352 << 3) | 0;
	cppVar_78353 = (cppVar_78353 & cppMask_un_5_);
	BIT_VEC cppVar_78354 = (0 << 5) | cppVar_78353;
	cppVar_78354 = (cppVar_78354 & cppMask_un_8_);
	BIT_VEC cppVar_78355 = IRAM.rd(cppVar_78354);
	BIT_VEC cppVar_78356 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78357 = (cppVar_78356 << 3) | 0;
	cppVar_78357 = (cppVar_78357 & cppMask_un_5_);
	BIT_VEC cppVar_78358 = (0 << 5) | cppVar_78357;
	cppVar_78358 = (cppVar_78358 & cppMask_un_8_);
	bool cppVar_78360 = (cppVar_78358 == 128);
	BIT_VEC cppVar_78361 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78362 = (cppVar_78361 << 3) | 0;
	cppVar_78362 = (cppVar_78362 & cppMask_un_5_);
	BIT_VEC cppVar_78363 = (0 << 5) | cppVar_78362;
	cppVar_78363 = (cppVar_78363 & cppMask_un_8_);
	bool cppVar_78365 = (cppVar_78363 == 129);
	BIT_VEC cppVar_78366 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78367 = (cppVar_78366 << 3) | 0;
	cppVar_78367 = (cppVar_78367 & cppMask_un_5_);
	BIT_VEC cppVar_78368 = (0 << 5) | cppVar_78367;
	cppVar_78368 = (cppVar_78368 & cppMask_un_8_);
	bool cppVar_78370 = (cppVar_78368 == 130);
	BIT_VEC cppVar_78371 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78372 = (cppVar_78371 << 3) | 0;
	cppVar_78372 = (cppVar_78372 & cppMask_un_5_);
	BIT_VEC cppVar_78373 = (0 << 5) | cppVar_78372;
	cppVar_78373 = (cppVar_78373 & cppMask_un_8_);
	bool cppVar_78375 = (cppVar_78373 == 131);
	BIT_VEC cppVar_78376 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78377 = (cppVar_78376 << 3) | 0;
	cppVar_78377 = (cppVar_78377 & cppMask_un_5_);
	BIT_VEC cppVar_78378 = (0 << 5) | cppVar_78377;
	cppVar_78378 = (cppVar_78378 & cppMask_un_8_);
	bool cppVar_78380 = (cppVar_78378 == 135);
	BIT_VEC cppVar_78381 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78382 = (cppVar_78381 << 3) | 0;
	cppVar_78382 = (cppVar_78382 & cppMask_un_5_);
	BIT_VEC cppVar_78383 = (0 << 5) | cppVar_78382;
	cppVar_78383 = (cppVar_78383 & cppMask_un_8_);
	bool cppVar_78385 = (cppVar_78383 == 136);
	BIT_VEC cppVar_78386 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78387 = (cppVar_78386 << 3) | 0;
	cppVar_78387 = (cppVar_78387 & cppMask_un_5_);
	BIT_VEC cppVar_78388 = (0 << 5) | cppVar_78387;
	cppVar_78388 = (cppVar_78388 & cppMask_un_8_);
	bool cppVar_78390 = (cppVar_78388 == 137);
	BIT_VEC cppVar_78391 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78392 = (cppVar_78391 << 3) | 0;
	cppVar_78392 = (cppVar_78392 & cppMask_un_5_);
	BIT_VEC cppVar_78393 = (0 << 5) | cppVar_78392;
	cppVar_78393 = (cppVar_78393 & cppMask_un_8_);
	bool cppVar_78395 = (cppVar_78393 == 138);
	BIT_VEC cppVar_78396 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78397 = (cppVar_78396 << 3) | 0;
	cppVar_78397 = (cppVar_78397 & cppMask_un_5_);
	BIT_VEC cppVar_78398 = (0 << 5) | cppVar_78397;
	cppVar_78398 = (cppVar_78398 & cppMask_un_8_);
	bool cppVar_78400 = (cppVar_78398 == 140);
	BIT_VEC cppVar_78401 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78402 = (cppVar_78401 << 3) | 0;
	cppVar_78402 = (cppVar_78402 & cppMask_un_5_);
	BIT_VEC cppVar_78403 = (0 << 5) | cppVar_78402;
	cppVar_78403 = (cppVar_78403 & cppMask_un_8_);
	bool cppVar_78405 = (cppVar_78403 == 139);
	BIT_VEC cppVar_78406 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78407 = (cppVar_78406 << 3) | 0;
	cppVar_78407 = (cppVar_78407 & cppMask_un_5_);
	BIT_VEC cppVar_78408 = (0 << 5) | cppVar_78407;
	cppVar_78408 = (cppVar_78408 & cppMask_un_8_);
	bool cppVar_78410 = (cppVar_78408 == 141);
	BIT_VEC cppVar_78411 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78412 = (cppVar_78411 << 3) | 0;
	cppVar_78412 = (cppVar_78412 & cppMask_un_5_);
	BIT_VEC cppVar_78413 = (0 << 5) | cppVar_78412;
	cppVar_78413 = (cppVar_78413 & cppMask_un_8_);
	bool cppVar_78415 = (cppVar_78413 == 144);
	BIT_VEC cppVar_78416 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78417 = (cppVar_78416 << 3) | 0;
	cppVar_78417 = (cppVar_78417 & cppMask_un_5_);
	BIT_VEC cppVar_78418 = (0 << 5) | cppVar_78417;
	cppVar_78418 = (cppVar_78418 & cppMask_un_8_);
	bool cppVar_78420 = (cppVar_78418 == 152);
	BIT_VEC cppVar_78421 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78422 = (cppVar_78421 << 3) | 0;
	cppVar_78422 = (cppVar_78422 & cppMask_un_5_);
	BIT_VEC cppVar_78423 = (0 << 5) | cppVar_78422;
	cppVar_78423 = (cppVar_78423 & cppMask_un_8_);
	bool cppVar_78425 = (cppVar_78423 == 153);
	BIT_VEC cppVar_78426 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78427 = (cppVar_78426 << 3) | 0;
	cppVar_78427 = (cppVar_78427 & cppMask_un_5_);
	BIT_VEC cppVar_78428 = (0 << 5) | cppVar_78427;
	cppVar_78428 = (cppVar_78428 & cppMask_un_8_);
	bool cppVar_78430 = (cppVar_78428 == 160);
	BIT_VEC cppVar_78431 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78432 = (cppVar_78431 << 3) | 0;
	cppVar_78432 = (cppVar_78432 & cppMask_un_5_);
	BIT_VEC cppVar_78433 = (0 << 5) | cppVar_78432;
	cppVar_78433 = (cppVar_78433 & cppMask_un_8_);
	bool cppVar_78435 = (cppVar_78433 == 168);
	BIT_VEC cppVar_78436 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78437 = (cppVar_78436 << 3) | 0;
	cppVar_78437 = (cppVar_78437 & cppMask_un_5_);
	BIT_VEC cppVar_78438 = (0 << 5) | cppVar_78437;
	cppVar_78438 = (cppVar_78438 & cppMask_un_8_);
	bool cppVar_78440 = (cppVar_78438 == 176);
	BIT_VEC cppVar_78441 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78442 = (cppVar_78441 << 3) | 0;
	cppVar_78442 = (cppVar_78442 & cppMask_un_5_);
	BIT_VEC cppVar_78443 = (0 << 5) | cppVar_78442;
	cppVar_78443 = (cppVar_78443 & cppMask_un_8_);
	bool cppVar_78445 = (cppVar_78443 == 184);
	BIT_VEC cppVar_78446 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78447 = (cppVar_78446 << 3) | 0;
	cppVar_78447 = (cppVar_78447 & cppMask_un_5_);
	BIT_VEC cppVar_78448 = (0 << 5) | cppVar_78447;
	cppVar_78448 = (cppVar_78448 & cppMask_un_8_);
	bool cppVar_78450 = (cppVar_78448 == 208);
	BIT_VEC cppVar_78451 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78452 = (cppVar_78451 << 3) | 0;
	cppVar_78452 = (cppVar_78452 & cppMask_un_5_);
	BIT_VEC cppVar_78453 = (0 << 5) | cppVar_78452;
	cppVar_78453 = (cppVar_78453 & cppMask_un_8_);
	bool cppVar_78455 = (cppVar_78453 == 224);
	BIT_VEC cppVar_78456 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78457 = (cppVar_78456 << 3) | 0;
	cppVar_78457 = (cppVar_78457 & cppMask_un_5_);
	BIT_VEC cppVar_78458 = (0 << 5) | cppVar_78457;
	cppVar_78458 = (cppVar_78458 & cppMask_un_8_);
	bool cppVar_78460 = (cppVar_78458 == 240);
	BIT_VEC cppVar_78462 = (cppVar_78460) ? B : 0;
	BIT_VEC cppVar_78463 = (cppVar_78455) ? ACC : cppVar_78462;
	BIT_VEC cppVar_78464 = (cppVar_78450) ? PSW : cppVar_78463;
	BIT_VEC cppVar_78465 = (cppVar_78445) ? IP : cppVar_78464;
	BIT_VEC cppVar_78466 = (cppVar_78440) ? P3 : cppVar_78465;
	BIT_VEC cppVar_78467 = (cppVar_78435) ? IE : cppVar_78466;
	BIT_VEC cppVar_78468 = (cppVar_78430) ? P2 : cppVar_78467;
	BIT_VEC cppVar_78469 = (cppVar_78425) ? SBUF : cppVar_78468;
	BIT_VEC cppVar_78470 = (cppVar_78420) ? SCON : cppVar_78469;
	BIT_VEC cppVar_78471 = (cppVar_78415) ? P1 : cppVar_78470;
	BIT_VEC cppVar_78472 = (cppVar_78410) ? TH1 : cppVar_78471;
	BIT_VEC cppVar_78473 = (cppVar_78405) ? TL1 : cppVar_78472;
	BIT_VEC cppVar_78474 = (cppVar_78400) ? TH0 : cppVar_78473;
	BIT_VEC cppVar_78475 = (cppVar_78395) ? TL0 : cppVar_78474;
	BIT_VEC cppVar_78476 = (cppVar_78390) ? TMOD : cppVar_78475;
	BIT_VEC cppVar_78477 = (cppVar_78385) ? TCON : cppVar_78476;
	BIT_VEC cppVar_78478 = (cppVar_78380) ? PCON : cppVar_78477;
	BIT_VEC cppVar_78479 = (cppVar_78375) ? DPH : cppVar_78478;
	BIT_VEC cppVar_78480 = (cppVar_78370) ? DPL : cppVar_78479;
	BIT_VEC cppVar_78481 = (cppVar_78365) ? SP : cppVar_78480;
	BIT_VEC cppVar_78482 = (cppVar_78360) ? P0 : cppVar_78481;
	BIT_VEC cppVar_78483 = (cppVar_78351) ? cppVar_78355 : cppVar_78482;
	BIT_VEC cppVar_78484 = (cppVar_78343) ? cppVar_78483 : TL0;
	BIT_VEC cppVar_78485 = ROM.rd(PC);
	bool cppVar_78487 = (cppVar_78485 == 135);
	BIT_VEC cppVar_78489 = PC + 1;
	cppVar_78489 = (cppVar_78489 & cppMask_un_16_);
	BIT_VEC cppVar_78490 = ROM.rd(cppVar_78489);
	bool cppVar_78492 = (cppVar_78490 == 138);
	BIT_VEC cppVar_78494 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78496 = (cppVar_78494 << 3) | 1;
	cppVar_78496 = (cppVar_78496 & cppMask_un_5_);
	BIT_VEC cppVar_78497 = (0 << 5) | cppVar_78496;
	cppVar_78497 = (cppVar_78497 & cppMask_un_8_);
	BIT_VEC cppVar_78498 = IRAM.rd(cppVar_78497);
	BIT_VEC cppVar_78499 = IRAM.rd(cppVar_78498);
	BIT_VEC cppVar_78500 = (cppVar_78492) ? cppVar_78499 : TL0;
	BIT_VEC cppVar_78501 = ROM.rd(PC);
	bool cppVar_78503 = (cppVar_78501 == 134);
	BIT_VEC cppVar_78505 = PC + 1;
	cppVar_78505 = (cppVar_78505 & cppMask_un_16_);
	BIT_VEC cppVar_78506 = ROM.rd(cppVar_78505);
	bool cppVar_78508 = (cppVar_78506 == 138);
	BIT_VEC cppVar_78510 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_78512 = (cppVar_78510 << 3) | 0;
	cppVar_78512 = (cppVar_78512 & cppMask_un_5_);
	BIT_VEC cppVar_78513 = (0 << 5) | cppVar_78512;
	cppVar_78513 = (cppVar_78513 & cppMask_un_8_);
	BIT_VEC cppVar_78514 = IRAM.rd(cppVar_78513);
	BIT_VEC cppVar_78515 = IRAM.rd(cppVar_78514);
	BIT_VEC cppVar_78516 = (cppVar_78508) ? cppVar_78515 : TL0;
	BIT_VEC cppVar_78517 = ROM.rd(PC);
	bool cppVar_78519 = (cppVar_78517 == 133);
	BIT_VEC cppVar_78521 = PC + 2;
	cppVar_78521 = (cppVar_78521 & cppMask_un_16_);
	BIT_VEC cppVar_78522 = ROM.rd(cppVar_78521);
	bool cppVar_78524 = (cppVar_78522 == 138);
	BIT_VEC cppVar_78526 = PC + 1;
	cppVar_78526 = (cppVar_78526 & cppMask_un_16_);
	BIT_VEC cppVar_78527 = ROM.rd(cppVar_78526);
	BIT_VEC cppVar_78528 = (cppVar_78527 >> 7) & cppMask_un_1_;
	bool cppVar_78530 = (cppVar_78528 == 0);
	BIT_VEC cppVar_78531 = PC + 1;
	cppVar_78531 = (cppVar_78531 & cppMask_un_16_);
	BIT_VEC cppVar_78532 = ROM.rd(cppVar_78531);
	BIT_VEC cppVar_78533 = IRAM.rd(cppVar_78532);
	BIT_VEC cppVar_78534 = PC + 1;
	cppVar_78534 = (cppVar_78534 & cppMask_un_16_);
	BIT_VEC cppVar_78535 = ROM.rd(cppVar_78534);
	bool cppVar_78537 = (cppVar_78535 == 128);
	BIT_VEC cppVar_78538 = PC + 1;
	cppVar_78538 = (cppVar_78538 & cppMask_un_16_);
	BIT_VEC cppVar_78539 = ROM.rd(cppVar_78538);
	bool cppVar_78541 = (cppVar_78539 == 129);
	BIT_VEC cppVar_78542 = PC + 1;
	cppVar_78542 = (cppVar_78542 & cppMask_un_16_);
	BIT_VEC cppVar_78543 = ROM.rd(cppVar_78542);
	bool cppVar_78545 = (cppVar_78543 == 130);
	BIT_VEC cppVar_78546 = PC + 1;
	cppVar_78546 = (cppVar_78546 & cppMask_un_16_);
	BIT_VEC cppVar_78547 = ROM.rd(cppVar_78546);
	bool cppVar_78549 = (cppVar_78547 == 131);
	BIT_VEC cppVar_78550 = PC + 1;
	cppVar_78550 = (cppVar_78550 & cppMask_un_16_);
	BIT_VEC cppVar_78551 = ROM.rd(cppVar_78550);
	bool cppVar_78553 = (cppVar_78551 == 135);
	BIT_VEC cppVar_78554 = PC + 1;
	cppVar_78554 = (cppVar_78554 & cppMask_un_16_);
	BIT_VEC cppVar_78555 = ROM.rd(cppVar_78554);
	bool cppVar_78557 = (cppVar_78555 == 136);
	BIT_VEC cppVar_78558 = PC + 1;
	cppVar_78558 = (cppVar_78558 & cppMask_un_16_);
	BIT_VEC cppVar_78559 = ROM.rd(cppVar_78558);
	bool cppVar_78561 = (cppVar_78559 == 137);
	BIT_VEC cppVar_78562 = PC + 1;
	cppVar_78562 = (cppVar_78562 & cppMask_un_16_);
	BIT_VEC cppVar_78563 = ROM.rd(cppVar_78562);
	bool cppVar_78565 = (cppVar_78563 == 138);
	BIT_VEC cppVar_78566 = PC + 1;
	cppVar_78566 = (cppVar_78566 & cppMask_un_16_);
	BIT_VEC cppVar_78567 = ROM.rd(cppVar_78566);
	bool cppVar_78569 = (cppVar_78567 == 140);
	BIT_VEC cppVar_78570 = PC + 1;
	cppVar_78570 = (cppVar_78570 & cppMask_un_16_);
	BIT_VEC cppVar_78571 = ROM.rd(cppVar_78570);
	bool cppVar_78573 = (cppVar_78571 == 139);
	BIT_VEC cppVar_78574 = PC + 1;
	cppVar_78574 = (cppVar_78574 & cppMask_un_16_);
	BIT_VEC cppVar_78575 = ROM.rd(cppVar_78574);
	bool cppVar_78577 = (cppVar_78575 == 141);
	BIT_VEC cppVar_78578 = PC + 1;
	cppVar_78578 = (cppVar_78578 & cppMask_un_16_);
	BIT_VEC cppVar_78579 = ROM.rd(cppVar_78578);
	bool cppVar_78581 = (cppVar_78579 == 144);
	BIT_VEC cppVar_78582 = PC + 1;
	cppVar_78582 = (cppVar_78582 & cppMask_un_16_);
	BIT_VEC cppVar_78583 = ROM.rd(cppVar_78582);
	bool cppVar_78585 = (cppVar_78583 == 152);
	BIT_VEC cppVar_78586 = PC + 1;
	cppVar_78586 = (cppVar_78586 & cppMask_un_16_);
	BIT_VEC cppVar_78587 = ROM.rd(cppVar_78586);
	bool cppVar_78589 = (cppVar_78587 == 153);
	BIT_VEC cppVar_78590 = PC + 1;
	cppVar_78590 = (cppVar_78590 & cppMask_un_16_);
	BIT_VEC cppVar_78591 = ROM.rd(cppVar_78590);
	bool cppVar_78593 = (cppVar_78591 == 160);
	BIT_VEC cppVar_78594 = PC + 1;
	cppVar_78594 = (cppVar_78594 & cppMask_un_16_);
	BIT_VEC cppVar_78595 = ROM.rd(cppVar_78594);
	bool cppVar_78597 = (cppVar_78595 == 168);
	BIT_VEC cppVar_78598 = PC + 1;
	cppVar_78598 = (cppVar_78598 & cppMask_un_16_);
	BIT_VEC cppVar_78599 = ROM.rd(cppVar_78598);
	bool cppVar_78601 = (cppVar_78599 == 176);
	BIT_VEC cppVar_78602 = PC + 1;
	cppVar_78602 = (cppVar_78602 & cppMask_un_16_);
	BIT_VEC cppVar_78603 = ROM.rd(cppVar_78602);
	bool cppVar_78605 = (cppVar_78603 == 184);
	BIT_VEC cppVar_78606 = PC + 1;
	cppVar_78606 = (cppVar_78606 & cppMask_un_16_);
	BIT_VEC cppVar_78607 = ROM.rd(cppVar_78606);
	bool cppVar_78609 = (cppVar_78607 == 208);
	BIT_VEC cppVar_78610 = PC + 1;
	cppVar_78610 = (cppVar_78610 & cppMask_un_16_);
	BIT_VEC cppVar_78611 = ROM.rd(cppVar_78610);
	bool cppVar_78613 = (cppVar_78611 == 224);
	BIT_VEC cppVar_78614 = PC + 1;
	cppVar_78614 = (cppVar_78614 & cppMask_un_16_);
	BIT_VEC cppVar_78615 = ROM.rd(cppVar_78614);
	bool cppVar_78617 = (cppVar_78615 == 240);
	BIT_VEC cppVar_78619 = (cppVar_78617) ? B : 0;
	BIT_VEC cppVar_78620 = (cppVar_78613) ? ACC : cppVar_78619;
	BIT_VEC cppVar_78621 = (cppVar_78609) ? PSW : cppVar_78620;
	BIT_VEC cppVar_78622 = (cppVar_78605) ? IP : cppVar_78621;
	BIT_VEC cppVar_78623 = (cppVar_78601) ? P3 : cppVar_78622;
	BIT_VEC cppVar_78624 = (cppVar_78597) ? IE : cppVar_78623;
	BIT_VEC cppVar_78625 = (cppVar_78593) ? P2 : cppVar_78624;
	BIT_VEC cppVar_78626 = (cppVar_78589) ? SBUF : cppVar_78625;
	BIT_VEC cppVar_78627 = (cppVar_78585) ? SCON : cppVar_78626;
	BIT_VEC cppVar_78628 = (cppVar_78581) ? P1 : cppVar_78627;
	BIT_VEC cppVar_78629 = (cppVar_78577) ? TH1 : cppVar_78628;
	BIT_VEC cppVar_78630 = (cppVar_78573) ? TL1 : cppVar_78629;
	BIT_VEC cppVar_78631 = (cppVar_78569) ? TH0 : cppVar_78630;
	BIT_VEC cppVar_78632 = (cppVar_78565) ? TL0 : cppVar_78631;
	BIT_VEC cppVar_78633 = (cppVar_78561) ? TMOD : cppVar_78632;
	BIT_VEC cppVar_78634 = (cppVar_78557) ? TCON : cppVar_78633;
	BIT_VEC cppVar_78635 = (cppVar_78553) ? PCON : cppVar_78634;
	BIT_VEC cppVar_78636 = (cppVar_78549) ? DPH : cppVar_78635;
	BIT_VEC cppVar_78637 = (cppVar_78545) ? DPL : cppVar_78636;
	BIT_VEC cppVar_78638 = (cppVar_78541) ? SP : cppVar_78637;
	BIT_VEC cppVar_78639 = (cppVar_78537) ? P0 : cppVar_78638;
	BIT_VEC cppVar_78640 = (cppVar_78530) ? cppVar_78533 : cppVar_78639;
	BIT_VEC cppVar_78641 = (cppVar_78524) ? cppVar_78640 : TL0;
	BIT_VEC cppVar_78642 = ROM.rd(PC);
	bool cppVar_78644 = (cppVar_78642 == 117);
	BIT_VEC cppVar_78646 = PC + 1;
	cppVar_78646 = (cppVar_78646 & cppMask_un_16_);
	BIT_VEC cppVar_78647 = ROM.rd(cppVar_78646);
	bool cppVar_78649 = (cppVar_78647 == 138);
	BIT_VEC cppVar_78651 = PC + 2;
	cppVar_78651 = (cppVar_78651 & cppMask_un_16_);
	BIT_VEC cppVar_78652 = ROM.rd(cppVar_78651);
	BIT_VEC cppVar_78653 = (cppVar_78649) ? cppVar_78652 : TL0;
	BIT_VEC cppVar_78654 = ROM.rd(PC);
	bool cppVar_78656 = (cppVar_78654 == 99);
	BIT_VEC cppVar_78658 = PC + 1;
	cppVar_78658 = (cppVar_78658 & cppMask_un_16_);
	BIT_VEC cppVar_78659 = ROM.rd(cppVar_78658);
	bool cppVar_78661 = (cppVar_78659 == 138);
	BIT_VEC cppVar_78662 = PC + 1;
	cppVar_78662 = (cppVar_78662 & cppMask_un_16_);
	BIT_VEC cppVar_78663 = ROM.rd(cppVar_78662);
	BIT_VEC cppVar_78664 = (cppVar_78663 >> 7) & cppMask_un_1_;
	bool cppVar_78666 = (cppVar_78664 == 0);
	BIT_VEC cppVar_78667 = PC + 1;
	cppVar_78667 = (cppVar_78667 & cppMask_un_16_);
	BIT_VEC cppVar_78668 = ROM.rd(cppVar_78667);
	BIT_VEC cppVar_78669 = IRAM.rd(cppVar_78668);
	BIT_VEC cppVar_78670 = PC + 1;
	cppVar_78670 = (cppVar_78670 & cppMask_un_16_);
	BIT_VEC cppVar_78671 = ROM.rd(cppVar_78670);
	bool cppVar_78673 = (cppVar_78671 == 128);
	BIT_VEC cppVar_78674 = PC + 1;
	cppVar_78674 = (cppVar_78674 & cppMask_un_16_);
	BIT_VEC cppVar_78675 = ROM.rd(cppVar_78674);
	bool cppVar_78677 = (cppVar_78675 == 129);
	BIT_VEC cppVar_78678 = PC + 1;
	cppVar_78678 = (cppVar_78678 & cppMask_un_16_);
	BIT_VEC cppVar_78679 = ROM.rd(cppVar_78678);
	bool cppVar_78681 = (cppVar_78679 == 130);
	BIT_VEC cppVar_78682 = PC + 1;
	cppVar_78682 = (cppVar_78682 & cppMask_un_16_);
	BIT_VEC cppVar_78683 = ROM.rd(cppVar_78682);
	bool cppVar_78685 = (cppVar_78683 == 131);
	BIT_VEC cppVar_78686 = PC + 1;
	cppVar_78686 = (cppVar_78686 & cppMask_un_16_);
	BIT_VEC cppVar_78687 = ROM.rd(cppVar_78686);
	bool cppVar_78689 = (cppVar_78687 == 135);
	BIT_VEC cppVar_78690 = PC + 1;
	cppVar_78690 = (cppVar_78690 & cppMask_un_16_);
	BIT_VEC cppVar_78691 = ROM.rd(cppVar_78690);
	bool cppVar_78693 = (cppVar_78691 == 136);
	BIT_VEC cppVar_78694 = PC + 1;
	cppVar_78694 = (cppVar_78694 & cppMask_un_16_);
	BIT_VEC cppVar_78695 = ROM.rd(cppVar_78694);
	bool cppVar_78697 = (cppVar_78695 == 137);
	BIT_VEC cppVar_78698 = PC + 1;
	cppVar_78698 = (cppVar_78698 & cppMask_un_16_);
	BIT_VEC cppVar_78699 = ROM.rd(cppVar_78698);
	bool cppVar_78701 = (cppVar_78699 == 138);
	BIT_VEC cppVar_78702 = PC + 1;
	cppVar_78702 = (cppVar_78702 & cppMask_un_16_);
	BIT_VEC cppVar_78703 = ROM.rd(cppVar_78702);
	bool cppVar_78705 = (cppVar_78703 == 140);
	BIT_VEC cppVar_78706 = PC + 1;
	cppVar_78706 = (cppVar_78706 & cppMask_un_16_);
	BIT_VEC cppVar_78707 = ROM.rd(cppVar_78706);
	bool cppVar_78709 = (cppVar_78707 == 139);
	BIT_VEC cppVar_78710 = PC + 1;
	cppVar_78710 = (cppVar_78710 & cppMask_un_16_);
	BIT_VEC cppVar_78711 = ROM.rd(cppVar_78710);
	bool cppVar_78713 = (cppVar_78711 == 141);
	BIT_VEC cppVar_78714 = PC + 1;
	cppVar_78714 = (cppVar_78714 & cppMask_un_16_);
	BIT_VEC cppVar_78715 = ROM.rd(cppVar_78714);
	bool cppVar_78717 = (cppVar_78715 == 144);
	BIT_VEC cppVar_78718 = PC + 1;
	cppVar_78718 = (cppVar_78718 & cppMask_un_16_);
	BIT_VEC cppVar_78719 = ROM.rd(cppVar_78718);
	bool cppVar_78721 = (cppVar_78719 == 152);
	BIT_VEC cppVar_78722 = PC + 1;
	cppVar_78722 = (cppVar_78722 & cppMask_un_16_);
	BIT_VEC cppVar_78723 = ROM.rd(cppVar_78722);
	bool cppVar_78725 = (cppVar_78723 == 153);
	BIT_VEC cppVar_78726 = PC + 1;
	cppVar_78726 = (cppVar_78726 & cppMask_un_16_);
	BIT_VEC cppVar_78727 = ROM.rd(cppVar_78726);
	bool cppVar_78729 = (cppVar_78727 == 160);
	BIT_VEC cppVar_78730 = PC + 1;
	cppVar_78730 = (cppVar_78730 & cppMask_un_16_);
	BIT_VEC cppVar_78731 = ROM.rd(cppVar_78730);
	bool cppVar_78733 = (cppVar_78731 == 168);
	BIT_VEC cppVar_78734 = PC + 1;
	cppVar_78734 = (cppVar_78734 & cppMask_un_16_);
	BIT_VEC cppVar_78735 = ROM.rd(cppVar_78734);
	bool cppVar_78737 = (cppVar_78735 == 176);
	BIT_VEC cppVar_78738 = PC + 1;
	cppVar_78738 = (cppVar_78738 & cppMask_un_16_);
	BIT_VEC cppVar_78739 = ROM.rd(cppVar_78738);
	bool cppVar_78741 = (cppVar_78739 == 184);
	BIT_VEC cppVar_78742 = PC + 1;
	cppVar_78742 = (cppVar_78742 & cppMask_un_16_);
	BIT_VEC cppVar_78743 = ROM.rd(cppVar_78742);
	bool cppVar_78745 = (cppVar_78743 == 208);
	BIT_VEC cppVar_78746 = PC + 1;
	cppVar_78746 = (cppVar_78746 & cppMask_un_16_);
	BIT_VEC cppVar_78747 = ROM.rd(cppVar_78746);
	bool cppVar_78749 = (cppVar_78747 == 224);
	BIT_VEC cppVar_78750 = PC + 1;
	cppVar_78750 = (cppVar_78750 & cppMask_un_16_);
	BIT_VEC cppVar_78751 = ROM.rd(cppVar_78750);
	bool cppVar_78753 = (cppVar_78751 == 240);
	BIT_VEC cppVar_78755 = (cppVar_78753) ? B : 0;
	BIT_VEC cppVar_78756 = (cppVar_78749) ? ACC : cppVar_78755;
	BIT_VEC cppVar_78757 = (cppVar_78745) ? PSW : cppVar_78756;
	BIT_VEC cppVar_78758 = (cppVar_78741) ? IP : cppVar_78757;
	BIT_VEC cppVar_78759 = (cppVar_78737) ? P3 : cppVar_78758;
	BIT_VEC cppVar_78760 = (cppVar_78733) ? IE : cppVar_78759;
	BIT_VEC cppVar_78761 = (cppVar_78729) ? P2 : cppVar_78760;
	BIT_VEC cppVar_78762 = (cppVar_78725) ? SBUF : cppVar_78761;
	BIT_VEC cppVar_78763 = (cppVar_78721) ? SCON : cppVar_78762;
	BIT_VEC cppVar_78764 = (cppVar_78717) ? P1 : cppVar_78763;
	BIT_VEC cppVar_78765 = (cppVar_78713) ? TH1 : cppVar_78764;
	BIT_VEC cppVar_78766 = (cppVar_78709) ? TL1 : cppVar_78765;
	BIT_VEC cppVar_78767 = (cppVar_78705) ? TH0 : cppVar_78766;
	BIT_VEC cppVar_78768 = (cppVar_78701) ? TL0 : cppVar_78767;
	BIT_VEC cppVar_78769 = (cppVar_78697) ? TMOD : cppVar_78768;
	BIT_VEC cppVar_78770 = (cppVar_78693) ? TCON : cppVar_78769;
	BIT_VEC cppVar_78771 = (cppVar_78689) ? PCON : cppVar_78770;
	BIT_VEC cppVar_78772 = (cppVar_78685) ? DPH : cppVar_78771;
	BIT_VEC cppVar_78773 = (cppVar_78681) ? DPL : cppVar_78772;
	BIT_VEC cppVar_78774 = (cppVar_78677) ? SP : cppVar_78773;
	BIT_VEC cppVar_78775 = (cppVar_78673) ? P0 : cppVar_78774;
	BIT_VEC cppVar_78776 = (cppVar_78666) ? cppVar_78669 : cppVar_78775;
	BIT_VEC cppVar_78778 = PC + 2;
	cppVar_78778 = (cppVar_78778 & cppMask_un_16_);
	BIT_VEC cppVar_78779 = ROM.rd(cppVar_78778);
	BIT_VEC cppVar_78780 = cppVar_78776 ^ cppVar_78779;
	BIT_VEC cppVar_78781 = (cppVar_78661) ? cppVar_78780 : TL0;
	BIT_VEC cppVar_78782 = ROM.rd(PC);
	bool cppVar_78784 = (cppVar_78782 == 98);
	BIT_VEC cppVar_78786 = PC + 1;
	cppVar_78786 = (cppVar_78786 & cppMask_un_16_);
	BIT_VEC cppVar_78787 = ROM.rd(cppVar_78786);
	bool cppVar_78789 = (cppVar_78787 == 138);
	BIT_VEC cppVar_78790 = PC + 1;
	cppVar_78790 = (cppVar_78790 & cppMask_un_16_);
	BIT_VEC cppVar_78791 = ROM.rd(cppVar_78790);
	BIT_VEC cppVar_78792 = (cppVar_78791 >> 7) & cppMask_un_1_;
	bool cppVar_78794 = (cppVar_78792 == 0);
	BIT_VEC cppVar_78795 = PC + 1;
	cppVar_78795 = (cppVar_78795 & cppMask_un_16_);
	BIT_VEC cppVar_78796 = ROM.rd(cppVar_78795);
	BIT_VEC cppVar_78797 = IRAM.rd(cppVar_78796);
	BIT_VEC cppVar_78798 = PC + 1;
	cppVar_78798 = (cppVar_78798 & cppMask_un_16_);
	BIT_VEC cppVar_78799 = ROM.rd(cppVar_78798);
	bool cppVar_78801 = (cppVar_78799 == 128);
	BIT_VEC cppVar_78802 = PC + 1;
	cppVar_78802 = (cppVar_78802 & cppMask_un_16_);
	BIT_VEC cppVar_78803 = ROM.rd(cppVar_78802);
	bool cppVar_78805 = (cppVar_78803 == 129);
	BIT_VEC cppVar_78806 = PC + 1;
	cppVar_78806 = (cppVar_78806 & cppMask_un_16_);
	BIT_VEC cppVar_78807 = ROM.rd(cppVar_78806);
	bool cppVar_78809 = (cppVar_78807 == 130);
	BIT_VEC cppVar_78810 = PC + 1;
	cppVar_78810 = (cppVar_78810 & cppMask_un_16_);
	BIT_VEC cppVar_78811 = ROM.rd(cppVar_78810);
	bool cppVar_78813 = (cppVar_78811 == 131);
	BIT_VEC cppVar_78814 = PC + 1;
	cppVar_78814 = (cppVar_78814 & cppMask_un_16_);
	BIT_VEC cppVar_78815 = ROM.rd(cppVar_78814);
	bool cppVar_78817 = (cppVar_78815 == 135);
	BIT_VEC cppVar_78818 = PC + 1;
	cppVar_78818 = (cppVar_78818 & cppMask_un_16_);
	BIT_VEC cppVar_78819 = ROM.rd(cppVar_78818);
	bool cppVar_78821 = (cppVar_78819 == 136);
	BIT_VEC cppVar_78822 = PC + 1;
	cppVar_78822 = (cppVar_78822 & cppMask_un_16_);
	BIT_VEC cppVar_78823 = ROM.rd(cppVar_78822);
	bool cppVar_78825 = (cppVar_78823 == 137);
	BIT_VEC cppVar_78826 = PC + 1;
	cppVar_78826 = (cppVar_78826 & cppMask_un_16_);
	BIT_VEC cppVar_78827 = ROM.rd(cppVar_78826);
	bool cppVar_78829 = (cppVar_78827 == 138);
	BIT_VEC cppVar_78830 = PC + 1;
	cppVar_78830 = (cppVar_78830 & cppMask_un_16_);
	BIT_VEC cppVar_78831 = ROM.rd(cppVar_78830);
	bool cppVar_78833 = (cppVar_78831 == 140);
	BIT_VEC cppVar_78834 = PC + 1;
	cppVar_78834 = (cppVar_78834 & cppMask_un_16_);
	BIT_VEC cppVar_78835 = ROM.rd(cppVar_78834);
	bool cppVar_78837 = (cppVar_78835 == 139);
	BIT_VEC cppVar_78838 = PC + 1;
	cppVar_78838 = (cppVar_78838 & cppMask_un_16_);
	BIT_VEC cppVar_78839 = ROM.rd(cppVar_78838);
	bool cppVar_78841 = (cppVar_78839 == 141);
	BIT_VEC cppVar_78842 = PC + 1;
	cppVar_78842 = (cppVar_78842 & cppMask_un_16_);
	BIT_VEC cppVar_78843 = ROM.rd(cppVar_78842);
	bool cppVar_78845 = (cppVar_78843 == 144);
	BIT_VEC cppVar_78846 = PC + 1;
	cppVar_78846 = (cppVar_78846 & cppMask_un_16_);
	BIT_VEC cppVar_78847 = ROM.rd(cppVar_78846);
	bool cppVar_78849 = (cppVar_78847 == 152);
	BIT_VEC cppVar_78850 = PC + 1;
	cppVar_78850 = (cppVar_78850 & cppMask_un_16_);
	BIT_VEC cppVar_78851 = ROM.rd(cppVar_78850);
	bool cppVar_78853 = (cppVar_78851 == 153);
	BIT_VEC cppVar_78854 = PC + 1;
	cppVar_78854 = (cppVar_78854 & cppMask_un_16_);
	BIT_VEC cppVar_78855 = ROM.rd(cppVar_78854);
	bool cppVar_78857 = (cppVar_78855 == 160);
	BIT_VEC cppVar_78858 = PC + 1;
	cppVar_78858 = (cppVar_78858 & cppMask_un_16_);
	BIT_VEC cppVar_78859 = ROM.rd(cppVar_78858);
	bool cppVar_78861 = (cppVar_78859 == 168);
	BIT_VEC cppVar_78862 = PC + 1;
	cppVar_78862 = (cppVar_78862 & cppMask_un_16_);
	BIT_VEC cppVar_78863 = ROM.rd(cppVar_78862);
	bool cppVar_78865 = (cppVar_78863 == 176);
	BIT_VEC cppVar_78866 = PC + 1;
	cppVar_78866 = (cppVar_78866 & cppMask_un_16_);
	BIT_VEC cppVar_78867 = ROM.rd(cppVar_78866);
	bool cppVar_78869 = (cppVar_78867 == 184);
	BIT_VEC cppVar_78870 = PC + 1;
	cppVar_78870 = (cppVar_78870 & cppMask_un_16_);
	BIT_VEC cppVar_78871 = ROM.rd(cppVar_78870);
	bool cppVar_78873 = (cppVar_78871 == 208);
	BIT_VEC cppVar_78874 = PC + 1;
	cppVar_78874 = (cppVar_78874 & cppMask_un_16_);
	BIT_VEC cppVar_78875 = ROM.rd(cppVar_78874);
	bool cppVar_78877 = (cppVar_78875 == 224);
	BIT_VEC cppVar_78878 = PC + 1;
	cppVar_78878 = (cppVar_78878 & cppMask_un_16_);
	BIT_VEC cppVar_78879 = ROM.rd(cppVar_78878);
	bool cppVar_78881 = (cppVar_78879 == 240);
	BIT_VEC cppVar_78883 = (cppVar_78881) ? B : 0;
	BIT_VEC cppVar_78884 = (cppVar_78877) ? ACC : cppVar_78883;
	BIT_VEC cppVar_78885 = (cppVar_78873) ? PSW : cppVar_78884;
	BIT_VEC cppVar_78886 = (cppVar_78869) ? IP : cppVar_78885;
	BIT_VEC cppVar_78887 = (cppVar_78865) ? P3 : cppVar_78886;
	BIT_VEC cppVar_78888 = (cppVar_78861) ? IE : cppVar_78887;
	BIT_VEC cppVar_78889 = (cppVar_78857) ? P2 : cppVar_78888;
	BIT_VEC cppVar_78890 = (cppVar_78853) ? SBUF : cppVar_78889;
	BIT_VEC cppVar_78891 = (cppVar_78849) ? SCON : cppVar_78890;
	BIT_VEC cppVar_78892 = (cppVar_78845) ? P1 : cppVar_78891;
	BIT_VEC cppVar_78893 = (cppVar_78841) ? TH1 : cppVar_78892;
	BIT_VEC cppVar_78894 = (cppVar_78837) ? TL1 : cppVar_78893;
	BIT_VEC cppVar_78895 = (cppVar_78833) ? TH0 : cppVar_78894;
	BIT_VEC cppVar_78896 = (cppVar_78829) ? TL0 : cppVar_78895;
	BIT_VEC cppVar_78897 = (cppVar_78825) ? TMOD : cppVar_78896;
	BIT_VEC cppVar_78898 = (cppVar_78821) ? TCON : cppVar_78897;
	BIT_VEC cppVar_78899 = (cppVar_78817) ? PCON : cppVar_78898;
	BIT_VEC cppVar_78900 = (cppVar_78813) ? DPH : cppVar_78899;
	BIT_VEC cppVar_78901 = (cppVar_78809) ? DPL : cppVar_78900;
	BIT_VEC cppVar_78902 = (cppVar_78805) ? SP : cppVar_78901;
	BIT_VEC cppVar_78903 = (cppVar_78801) ? P0 : cppVar_78902;
	BIT_VEC cppVar_78904 = (cppVar_78794) ? cppVar_78797 : cppVar_78903;
	BIT_VEC cppVar_78905 = cppVar_78904 ^ ACC;
	BIT_VEC cppVar_78906 = (cppVar_78789) ? cppVar_78905 : TL0;
	BIT_VEC cppVar_78907 = ROM.rd(PC);
	bool cppVar_78909 = (cppVar_78907 == 83);
	BIT_VEC cppVar_78911 = PC + 1;
	cppVar_78911 = (cppVar_78911 & cppMask_un_16_);
	BIT_VEC cppVar_78912 = ROM.rd(cppVar_78911);
	bool cppVar_78914 = (cppVar_78912 == 138);
	BIT_VEC cppVar_78915 = PC + 1;
	cppVar_78915 = (cppVar_78915 & cppMask_un_16_);
	BIT_VEC cppVar_78916 = ROM.rd(cppVar_78915);
	BIT_VEC cppVar_78917 = (cppVar_78916 >> 7) & cppMask_un_1_;
	bool cppVar_78919 = (cppVar_78917 == 0);
	BIT_VEC cppVar_78920 = PC + 1;
	cppVar_78920 = (cppVar_78920 & cppMask_un_16_);
	BIT_VEC cppVar_78921 = ROM.rd(cppVar_78920);
	BIT_VEC cppVar_78922 = IRAM.rd(cppVar_78921);
	BIT_VEC cppVar_78923 = PC + 1;
	cppVar_78923 = (cppVar_78923 & cppMask_un_16_);
	BIT_VEC cppVar_78924 = ROM.rd(cppVar_78923);
	bool cppVar_78926 = (cppVar_78924 == 128);
	BIT_VEC cppVar_78927 = PC + 1;
	cppVar_78927 = (cppVar_78927 & cppMask_un_16_);
	BIT_VEC cppVar_78928 = ROM.rd(cppVar_78927);
	bool cppVar_78930 = (cppVar_78928 == 129);
	BIT_VEC cppVar_78931 = PC + 1;
	cppVar_78931 = (cppVar_78931 & cppMask_un_16_);
	BIT_VEC cppVar_78932 = ROM.rd(cppVar_78931);
	bool cppVar_78934 = (cppVar_78932 == 130);
	BIT_VEC cppVar_78935 = PC + 1;
	cppVar_78935 = (cppVar_78935 & cppMask_un_16_);
	BIT_VEC cppVar_78936 = ROM.rd(cppVar_78935);
	bool cppVar_78938 = (cppVar_78936 == 131);
	BIT_VEC cppVar_78939 = PC + 1;
	cppVar_78939 = (cppVar_78939 & cppMask_un_16_);
	BIT_VEC cppVar_78940 = ROM.rd(cppVar_78939);
	bool cppVar_78942 = (cppVar_78940 == 135);
	BIT_VEC cppVar_78943 = PC + 1;
	cppVar_78943 = (cppVar_78943 & cppMask_un_16_);
	BIT_VEC cppVar_78944 = ROM.rd(cppVar_78943);
	bool cppVar_78946 = (cppVar_78944 == 136);
	BIT_VEC cppVar_78947 = PC + 1;
	cppVar_78947 = (cppVar_78947 & cppMask_un_16_);
	BIT_VEC cppVar_78948 = ROM.rd(cppVar_78947);
	bool cppVar_78950 = (cppVar_78948 == 137);
	BIT_VEC cppVar_78951 = PC + 1;
	cppVar_78951 = (cppVar_78951 & cppMask_un_16_);
	BIT_VEC cppVar_78952 = ROM.rd(cppVar_78951);
	bool cppVar_78954 = (cppVar_78952 == 138);
	BIT_VEC cppVar_78955 = PC + 1;
	cppVar_78955 = (cppVar_78955 & cppMask_un_16_);
	BIT_VEC cppVar_78956 = ROM.rd(cppVar_78955);
	bool cppVar_78958 = (cppVar_78956 == 140);
	BIT_VEC cppVar_78959 = PC + 1;
	cppVar_78959 = (cppVar_78959 & cppMask_un_16_);
	BIT_VEC cppVar_78960 = ROM.rd(cppVar_78959);
	bool cppVar_78962 = (cppVar_78960 == 139);
	BIT_VEC cppVar_78963 = PC + 1;
	cppVar_78963 = (cppVar_78963 & cppMask_un_16_);
	BIT_VEC cppVar_78964 = ROM.rd(cppVar_78963);
	bool cppVar_78966 = (cppVar_78964 == 141);
	BIT_VEC cppVar_78967 = PC + 1;
	cppVar_78967 = (cppVar_78967 & cppMask_un_16_);
	BIT_VEC cppVar_78968 = ROM.rd(cppVar_78967);
	bool cppVar_78970 = (cppVar_78968 == 144);
	BIT_VEC cppVar_78971 = PC + 1;
	cppVar_78971 = (cppVar_78971 & cppMask_un_16_);
	BIT_VEC cppVar_78972 = ROM.rd(cppVar_78971);
	bool cppVar_78974 = (cppVar_78972 == 152);
	BIT_VEC cppVar_78975 = PC + 1;
	cppVar_78975 = (cppVar_78975 & cppMask_un_16_);
	BIT_VEC cppVar_78976 = ROM.rd(cppVar_78975);
	bool cppVar_78978 = (cppVar_78976 == 153);
	BIT_VEC cppVar_78979 = PC + 1;
	cppVar_78979 = (cppVar_78979 & cppMask_un_16_);
	BIT_VEC cppVar_78980 = ROM.rd(cppVar_78979);
	bool cppVar_78982 = (cppVar_78980 == 160);
	BIT_VEC cppVar_78983 = PC + 1;
	cppVar_78983 = (cppVar_78983 & cppMask_un_16_);
	BIT_VEC cppVar_78984 = ROM.rd(cppVar_78983);
	bool cppVar_78986 = (cppVar_78984 == 168);
	BIT_VEC cppVar_78987 = PC + 1;
	cppVar_78987 = (cppVar_78987 & cppMask_un_16_);
	BIT_VEC cppVar_78988 = ROM.rd(cppVar_78987);
	bool cppVar_78990 = (cppVar_78988 == 176);
	BIT_VEC cppVar_78991 = PC + 1;
	cppVar_78991 = (cppVar_78991 & cppMask_un_16_);
	BIT_VEC cppVar_78992 = ROM.rd(cppVar_78991);
	bool cppVar_78994 = (cppVar_78992 == 184);
	BIT_VEC cppVar_78995 = PC + 1;
	cppVar_78995 = (cppVar_78995 & cppMask_un_16_);
	BIT_VEC cppVar_78996 = ROM.rd(cppVar_78995);
	bool cppVar_78998 = (cppVar_78996 == 208);
	BIT_VEC cppVar_78999 = PC + 1;
	cppVar_78999 = (cppVar_78999 & cppMask_un_16_);
	BIT_VEC cppVar_79000 = ROM.rd(cppVar_78999);
	bool cppVar_79002 = (cppVar_79000 == 224);
	BIT_VEC cppVar_79003 = PC + 1;
	cppVar_79003 = (cppVar_79003 & cppMask_un_16_);
	BIT_VEC cppVar_79004 = ROM.rd(cppVar_79003);
	bool cppVar_79006 = (cppVar_79004 == 240);
	BIT_VEC cppVar_79008 = (cppVar_79006) ? B : 0;
	BIT_VEC cppVar_79009 = (cppVar_79002) ? ACC : cppVar_79008;
	BIT_VEC cppVar_79010 = (cppVar_78998) ? PSW : cppVar_79009;
	BIT_VEC cppVar_79011 = (cppVar_78994) ? IP : cppVar_79010;
	BIT_VEC cppVar_79012 = (cppVar_78990) ? P3 : cppVar_79011;
	BIT_VEC cppVar_79013 = (cppVar_78986) ? IE : cppVar_79012;
	BIT_VEC cppVar_79014 = (cppVar_78982) ? P2 : cppVar_79013;
	BIT_VEC cppVar_79015 = (cppVar_78978) ? SBUF : cppVar_79014;
	BIT_VEC cppVar_79016 = (cppVar_78974) ? SCON : cppVar_79015;
	BIT_VEC cppVar_79017 = (cppVar_78970) ? P1 : cppVar_79016;
	BIT_VEC cppVar_79018 = (cppVar_78966) ? TH1 : cppVar_79017;
	BIT_VEC cppVar_79019 = (cppVar_78962) ? TL1 : cppVar_79018;
	BIT_VEC cppVar_79020 = (cppVar_78958) ? TH0 : cppVar_79019;
	BIT_VEC cppVar_79021 = (cppVar_78954) ? TL0 : cppVar_79020;
	BIT_VEC cppVar_79022 = (cppVar_78950) ? TMOD : cppVar_79021;
	BIT_VEC cppVar_79023 = (cppVar_78946) ? TCON : cppVar_79022;
	BIT_VEC cppVar_79024 = (cppVar_78942) ? PCON : cppVar_79023;
	BIT_VEC cppVar_79025 = (cppVar_78938) ? DPH : cppVar_79024;
	BIT_VEC cppVar_79026 = (cppVar_78934) ? DPL : cppVar_79025;
	BIT_VEC cppVar_79027 = (cppVar_78930) ? SP : cppVar_79026;
	BIT_VEC cppVar_79028 = (cppVar_78926) ? P0 : cppVar_79027;
	BIT_VEC cppVar_79029 = (cppVar_78919) ? cppVar_78922 : cppVar_79028;
	BIT_VEC cppVar_79031 = PC + 2;
	cppVar_79031 = (cppVar_79031 & cppMask_un_16_);
	BIT_VEC cppVar_79032 = ROM.rd(cppVar_79031);
	BIT_VEC cppVar_79033 = cppVar_79029 & cppVar_79032;
	BIT_VEC cppVar_79034 = (cppVar_78914) ? cppVar_79033 : TL0;
	BIT_VEC cppVar_79035 = ROM.rd(PC);
	bool cppVar_79037 = (cppVar_79035 == 82);
	BIT_VEC cppVar_79039 = PC + 1;
	cppVar_79039 = (cppVar_79039 & cppMask_un_16_);
	BIT_VEC cppVar_79040 = ROM.rd(cppVar_79039);
	bool cppVar_79042 = (cppVar_79040 == 138);
	BIT_VEC cppVar_79043 = PC + 1;
	cppVar_79043 = (cppVar_79043 & cppMask_un_16_);
	BIT_VEC cppVar_79044 = ROM.rd(cppVar_79043);
	BIT_VEC cppVar_79045 = (cppVar_79044 >> 7) & cppMask_un_1_;
	bool cppVar_79047 = (cppVar_79045 == 0);
	BIT_VEC cppVar_79048 = PC + 1;
	cppVar_79048 = (cppVar_79048 & cppMask_un_16_);
	BIT_VEC cppVar_79049 = ROM.rd(cppVar_79048);
	BIT_VEC cppVar_79050 = IRAM.rd(cppVar_79049);
	BIT_VEC cppVar_79051 = PC + 1;
	cppVar_79051 = (cppVar_79051 & cppMask_un_16_);
	BIT_VEC cppVar_79052 = ROM.rd(cppVar_79051);
	bool cppVar_79054 = (cppVar_79052 == 128);
	BIT_VEC cppVar_79055 = PC + 1;
	cppVar_79055 = (cppVar_79055 & cppMask_un_16_);
	BIT_VEC cppVar_79056 = ROM.rd(cppVar_79055);
	bool cppVar_79058 = (cppVar_79056 == 129);
	BIT_VEC cppVar_79059 = PC + 1;
	cppVar_79059 = (cppVar_79059 & cppMask_un_16_);
	BIT_VEC cppVar_79060 = ROM.rd(cppVar_79059);
	bool cppVar_79062 = (cppVar_79060 == 130);
	BIT_VEC cppVar_79063 = PC + 1;
	cppVar_79063 = (cppVar_79063 & cppMask_un_16_);
	BIT_VEC cppVar_79064 = ROM.rd(cppVar_79063);
	bool cppVar_79066 = (cppVar_79064 == 131);
	BIT_VEC cppVar_79067 = PC + 1;
	cppVar_79067 = (cppVar_79067 & cppMask_un_16_);
	BIT_VEC cppVar_79068 = ROM.rd(cppVar_79067);
	bool cppVar_79070 = (cppVar_79068 == 135);
	BIT_VEC cppVar_79071 = PC + 1;
	cppVar_79071 = (cppVar_79071 & cppMask_un_16_);
	BIT_VEC cppVar_79072 = ROM.rd(cppVar_79071);
	bool cppVar_79074 = (cppVar_79072 == 136);
	BIT_VEC cppVar_79075 = PC + 1;
	cppVar_79075 = (cppVar_79075 & cppMask_un_16_);
	BIT_VEC cppVar_79076 = ROM.rd(cppVar_79075);
	bool cppVar_79078 = (cppVar_79076 == 137);
	BIT_VEC cppVar_79079 = PC + 1;
	cppVar_79079 = (cppVar_79079 & cppMask_un_16_);
	BIT_VEC cppVar_79080 = ROM.rd(cppVar_79079);
	bool cppVar_79082 = (cppVar_79080 == 138);
	BIT_VEC cppVar_79083 = PC + 1;
	cppVar_79083 = (cppVar_79083 & cppMask_un_16_);
	BIT_VEC cppVar_79084 = ROM.rd(cppVar_79083);
	bool cppVar_79086 = (cppVar_79084 == 140);
	BIT_VEC cppVar_79087 = PC + 1;
	cppVar_79087 = (cppVar_79087 & cppMask_un_16_);
	BIT_VEC cppVar_79088 = ROM.rd(cppVar_79087);
	bool cppVar_79090 = (cppVar_79088 == 139);
	BIT_VEC cppVar_79091 = PC + 1;
	cppVar_79091 = (cppVar_79091 & cppMask_un_16_);
	BIT_VEC cppVar_79092 = ROM.rd(cppVar_79091);
	bool cppVar_79094 = (cppVar_79092 == 141);
	BIT_VEC cppVar_79095 = PC + 1;
	cppVar_79095 = (cppVar_79095 & cppMask_un_16_);
	BIT_VEC cppVar_79096 = ROM.rd(cppVar_79095);
	bool cppVar_79098 = (cppVar_79096 == 144);
	BIT_VEC cppVar_79099 = PC + 1;
	cppVar_79099 = (cppVar_79099 & cppMask_un_16_);
	BIT_VEC cppVar_79100 = ROM.rd(cppVar_79099);
	bool cppVar_79102 = (cppVar_79100 == 152);
	BIT_VEC cppVar_79103 = PC + 1;
	cppVar_79103 = (cppVar_79103 & cppMask_un_16_);
	BIT_VEC cppVar_79104 = ROM.rd(cppVar_79103);
	bool cppVar_79106 = (cppVar_79104 == 153);
	BIT_VEC cppVar_79107 = PC + 1;
	cppVar_79107 = (cppVar_79107 & cppMask_un_16_);
	BIT_VEC cppVar_79108 = ROM.rd(cppVar_79107);
	bool cppVar_79110 = (cppVar_79108 == 160);
	BIT_VEC cppVar_79111 = PC + 1;
	cppVar_79111 = (cppVar_79111 & cppMask_un_16_);
	BIT_VEC cppVar_79112 = ROM.rd(cppVar_79111);
	bool cppVar_79114 = (cppVar_79112 == 168);
	BIT_VEC cppVar_79115 = PC + 1;
	cppVar_79115 = (cppVar_79115 & cppMask_un_16_);
	BIT_VEC cppVar_79116 = ROM.rd(cppVar_79115);
	bool cppVar_79118 = (cppVar_79116 == 176);
	BIT_VEC cppVar_79119 = PC + 1;
	cppVar_79119 = (cppVar_79119 & cppMask_un_16_);
	BIT_VEC cppVar_79120 = ROM.rd(cppVar_79119);
	bool cppVar_79122 = (cppVar_79120 == 184);
	BIT_VEC cppVar_79123 = PC + 1;
	cppVar_79123 = (cppVar_79123 & cppMask_un_16_);
	BIT_VEC cppVar_79124 = ROM.rd(cppVar_79123);
	bool cppVar_79126 = (cppVar_79124 == 208);
	BIT_VEC cppVar_79127 = PC + 1;
	cppVar_79127 = (cppVar_79127 & cppMask_un_16_);
	BIT_VEC cppVar_79128 = ROM.rd(cppVar_79127);
	bool cppVar_79130 = (cppVar_79128 == 224);
	BIT_VEC cppVar_79131 = PC + 1;
	cppVar_79131 = (cppVar_79131 & cppMask_un_16_);
	BIT_VEC cppVar_79132 = ROM.rd(cppVar_79131);
	bool cppVar_79134 = (cppVar_79132 == 240);
	BIT_VEC cppVar_79136 = (cppVar_79134) ? B : 0;
	BIT_VEC cppVar_79137 = (cppVar_79130) ? ACC : cppVar_79136;
	BIT_VEC cppVar_79138 = (cppVar_79126) ? PSW : cppVar_79137;
	BIT_VEC cppVar_79139 = (cppVar_79122) ? IP : cppVar_79138;
	BIT_VEC cppVar_79140 = (cppVar_79118) ? P3 : cppVar_79139;
	BIT_VEC cppVar_79141 = (cppVar_79114) ? IE : cppVar_79140;
	BIT_VEC cppVar_79142 = (cppVar_79110) ? P2 : cppVar_79141;
	BIT_VEC cppVar_79143 = (cppVar_79106) ? SBUF : cppVar_79142;
	BIT_VEC cppVar_79144 = (cppVar_79102) ? SCON : cppVar_79143;
	BIT_VEC cppVar_79145 = (cppVar_79098) ? P1 : cppVar_79144;
	BIT_VEC cppVar_79146 = (cppVar_79094) ? TH1 : cppVar_79145;
	BIT_VEC cppVar_79147 = (cppVar_79090) ? TL1 : cppVar_79146;
	BIT_VEC cppVar_79148 = (cppVar_79086) ? TH0 : cppVar_79147;
	BIT_VEC cppVar_79149 = (cppVar_79082) ? TL0 : cppVar_79148;
	BIT_VEC cppVar_79150 = (cppVar_79078) ? TMOD : cppVar_79149;
	BIT_VEC cppVar_79151 = (cppVar_79074) ? TCON : cppVar_79150;
	BIT_VEC cppVar_79152 = (cppVar_79070) ? PCON : cppVar_79151;
	BIT_VEC cppVar_79153 = (cppVar_79066) ? DPH : cppVar_79152;
	BIT_VEC cppVar_79154 = (cppVar_79062) ? DPL : cppVar_79153;
	BIT_VEC cppVar_79155 = (cppVar_79058) ? SP : cppVar_79154;
	BIT_VEC cppVar_79156 = (cppVar_79054) ? P0 : cppVar_79155;
	BIT_VEC cppVar_79157 = (cppVar_79047) ? cppVar_79050 : cppVar_79156;
	BIT_VEC cppVar_79158 = cppVar_79157 & ACC;
	BIT_VEC cppVar_79159 = (cppVar_79042) ? cppVar_79158 : TL0;
	BIT_VEC cppVar_79160 = ROM.rd(PC);
	bool cppVar_79162 = (cppVar_79160 == 67);
	BIT_VEC cppVar_79164 = PC + 1;
	cppVar_79164 = (cppVar_79164 & cppMask_un_16_);
	BIT_VEC cppVar_79165 = ROM.rd(cppVar_79164);
	bool cppVar_79167 = (cppVar_79165 == 138);
	BIT_VEC cppVar_79168 = PC + 1;
	cppVar_79168 = (cppVar_79168 & cppMask_un_16_);
	BIT_VEC cppVar_79169 = ROM.rd(cppVar_79168);
	BIT_VEC cppVar_79170 = (cppVar_79169 >> 7) & cppMask_un_1_;
	bool cppVar_79172 = (cppVar_79170 == 0);
	BIT_VEC cppVar_79173 = PC + 1;
	cppVar_79173 = (cppVar_79173 & cppMask_un_16_);
	BIT_VEC cppVar_79174 = ROM.rd(cppVar_79173);
	BIT_VEC cppVar_79175 = IRAM.rd(cppVar_79174);
	BIT_VEC cppVar_79176 = PC + 1;
	cppVar_79176 = (cppVar_79176 & cppMask_un_16_);
	BIT_VEC cppVar_79177 = ROM.rd(cppVar_79176);
	bool cppVar_79179 = (cppVar_79177 == 128);
	BIT_VEC cppVar_79180 = PC + 1;
	cppVar_79180 = (cppVar_79180 & cppMask_un_16_);
	BIT_VEC cppVar_79181 = ROM.rd(cppVar_79180);
	bool cppVar_79183 = (cppVar_79181 == 129);
	BIT_VEC cppVar_79184 = PC + 1;
	cppVar_79184 = (cppVar_79184 & cppMask_un_16_);
	BIT_VEC cppVar_79185 = ROM.rd(cppVar_79184);
	bool cppVar_79187 = (cppVar_79185 == 130);
	BIT_VEC cppVar_79188 = PC + 1;
	cppVar_79188 = (cppVar_79188 & cppMask_un_16_);
	BIT_VEC cppVar_79189 = ROM.rd(cppVar_79188);
	bool cppVar_79191 = (cppVar_79189 == 131);
	BIT_VEC cppVar_79192 = PC + 1;
	cppVar_79192 = (cppVar_79192 & cppMask_un_16_);
	BIT_VEC cppVar_79193 = ROM.rd(cppVar_79192);
	bool cppVar_79195 = (cppVar_79193 == 135);
	BIT_VEC cppVar_79196 = PC + 1;
	cppVar_79196 = (cppVar_79196 & cppMask_un_16_);
	BIT_VEC cppVar_79197 = ROM.rd(cppVar_79196);
	bool cppVar_79199 = (cppVar_79197 == 136);
	BIT_VEC cppVar_79200 = PC + 1;
	cppVar_79200 = (cppVar_79200 & cppMask_un_16_);
	BIT_VEC cppVar_79201 = ROM.rd(cppVar_79200);
	bool cppVar_79203 = (cppVar_79201 == 137);
	BIT_VEC cppVar_79204 = PC + 1;
	cppVar_79204 = (cppVar_79204 & cppMask_un_16_);
	BIT_VEC cppVar_79205 = ROM.rd(cppVar_79204);
	bool cppVar_79207 = (cppVar_79205 == 138);
	BIT_VEC cppVar_79208 = PC + 1;
	cppVar_79208 = (cppVar_79208 & cppMask_un_16_);
	BIT_VEC cppVar_79209 = ROM.rd(cppVar_79208);
	bool cppVar_79211 = (cppVar_79209 == 140);
	BIT_VEC cppVar_79212 = PC + 1;
	cppVar_79212 = (cppVar_79212 & cppMask_un_16_);
	BIT_VEC cppVar_79213 = ROM.rd(cppVar_79212);
	bool cppVar_79215 = (cppVar_79213 == 139);
	BIT_VEC cppVar_79216 = PC + 1;
	cppVar_79216 = (cppVar_79216 & cppMask_un_16_);
	BIT_VEC cppVar_79217 = ROM.rd(cppVar_79216);
	bool cppVar_79219 = (cppVar_79217 == 141);
	BIT_VEC cppVar_79220 = PC + 1;
	cppVar_79220 = (cppVar_79220 & cppMask_un_16_);
	BIT_VEC cppVar_79221 = ROM.rd(cppVar_79220);
	bool cppVar_79223 = (cppVar_79221 == 144);
	BIT_VEC cppVar_79224 = PC + 1;
	cppVar_79224 = (cppVar_79224 & cppMask_un_16_);
	BIT_VEC cppVar_79225 = ROM.rd(cppVar_79224);
	bool cppVar_79227 = (cppVar_79225 == 152);
	BIT_VEC cppVar_79228 = PC + 1;
	cppVar_79228 = (cppVar_79228 & cppMask_un_16_);
	BIT_VEC cppVar_79229 = ROM.rd(cppVar_79228);
	bool cppVar_79231 = (cppVar_79229 == 153);
	BIT_VEC cppVar_79232 = PC + 1;
	cppVar_79232 = (cppVar_79232 & cppMask_un_16_);
	BIT_VEC cppVar_79233 = ROM.rd(cppVar_79232);
	bool cppVar_79235 = (cppVar_79233 == 160);
	BIT_VEC cppVar_79236 = PC + 1;
	cppVar_79236 = (cppVar_79236 & cppMask_un_16_);
	BIT_VEC cppVar_79237 = ROM.rd(cppVar_79236);
	bool cppVar_79239 = (cppVar_79237 == 168);
	BIT_VEC cppVar_79240 = PC + 1;
	cppVar_79240 = (cppVar_79240 & cppMask_un_16_);
	BIT_VEC cppVar_79241 = ROM.rd(cppVar_79240);
	bool cppVar_79243 = (cppVar_79241 == 176);
	BIT_VEC cppVar_79244 = PC + 1;
	cppVar_79244 = (cppVar_79244 & cppMask_un_16_);
	BIT_VEC cppVar_79245 = ROM.rd(cppVar_79244);
	bool cppVar_79247 = (cppVar_79245 == 184);
	BIT_VEC cppVar_79248 = PC + 1;
	cppVar_79248 = (cppVar_79248 & cppMask_un_16_);
	BIT_VEC cppVar_79249 = ROM.rd(cppVar_79248);
	bool cppVar_79251 = (cppVar_79249 == 208);
	BIT_VEC cppVar_79252 = PC + 1;
	cppVar_79252 = (cppVar_79252 & cppMask_un_16_);
	BIT_VEC cppVar_79253 = ROM.rd(cppVar_79252);
	bool cppVar_79255 = (cppVar_79253 == 224);
	BIT_VEC cppVar_79256 = PC + 1;
	cppVar_79256 = (cppVar_79256 & cppMask_un_16_);
	BIT_VEC cppVar_79257 = ROM.rd(cppVar_79256);
	bool cppVar_79259 = (cppVar_79257 == 240);
	BIT_VEC cppVar_79261 = (cppVar_79259) ? B : 0;
	BIT_VEC cppVar_79262 = (cppVar_79255) ? ACC : cppVar_79261;
	BIT_VEC cppVar_79263 = (cppVar_79251) ? PSW : cppVar_79262;
	BIT_VEC cppVar_79264 = (cppVar_79247) ? IP : cppVar_79263;
	BIT_VEC cppVar_79265 = (cppVar_79243) ? P3 : cppVar_79264;
	BIT_VEC cppVar_79266 = (cppVar_79239) ? IE : cppVar_79265;
	BIT_VEC cppVar_79267 = (cppVar_79235) ? P2 : cppVar_79266;
	BIT_VEC cppVar_79268 = (cppVar_79231) ? SBUF : cppVar_79267;
	BIT_VEC cppVar_79269 = (cppVar_79227) ? SCON : cppVar_79268;
	BIT_VEC cppVar_79270 = (cppVar_79223) ? P1 : cppVar_79269;
	BIT_VEC cppVar_79271 = (cppVar_79219) ? TH1 : cppVar_79270;
	BIT_VEC cppVar_79272 = (cppVar_79215) ? TL1 : cppVar_79271;
	BIT_VEC cppVar_79273 = (cppVar_79211) ? TH0 : cppVar_79272;
	BIT_VEC cppVar_79274 = (cppVar_79207) ? TL0 : cppVar_79273;
	BIT_VEC cppVar_79275 = (cppVar_79203) ? TMOD : cppVar_79274;
	BIT_VEC cppVar_79276 = (cppVar_79199) ? TCON : cppVar_79275;
	BIT_VEC cppVar_79277 = (cppVar_79195) ? PCON : cppVar_79276;
	BIT_VEC cppVar_79278 = (cppVar_79191) ? DPH : cppVar_79277;
	BIT_VEC cppVar_79279 = (cppVar_79187) ? DPL : cppVar_79278;
	BIT_VEC cppVar_79280 = (cppVar_79183) ? SP : cppVar_79279;
	BIT_VEC cppVar_79281 = (cppVar_79179) ? P0 : cppVar_79280;
	BIT_VEC cppVar_79282 = (cppVar_79172) ? cppVar_79175 : cppVar_79281;
	BIT_VEC cppVar_79284 = PC + 2;
	cppVar_79284 = (cppVar_79284 & cppMask_un_16_);
	BIT_VEC cppVar_79285 = ROM.rd(cppVar_79284);
	BIT_VEC cppVar_79286 = cppVar_79282 | cppVar_79285;
	BIT_VEC cppVar_79287 = (cppVar_79167) ? cppVar_79286 : TL0;
	BIT_VEC cppVar_79288 = ROM.rd(PC);
	bool cppVar_79290 = (cppVar_79288 == 66);
	BIT_VEC cppVar_79292 = PC + 1;
	cppVar_79292 = (cppVar_79292 & cppMask_un_16_);
	BIT_VEC cppVar_79293 = ROM.rd(cppVar_79292);
	bool cppVar_79295 = (cppVar_79293 == 138);
	BIT_VEC cppVar_79296 = PC + 1;
	cppVar_79296 = (cppVar_79296 & cppMask_un_16_);
	BIT_VEC cppVar_79297 = ROM.rd(cppVar_79296);
	BIT_VEC cppVar_79298 = (cppVar_79297 >> 7) & cppMask_un_1_;
	bool cppVar_79300 = (cppVar_79298 == 0);
	BIT_VEC cppVar_79301 = PC + 1;
	cppVar_79301 = (cppVar_79301 & cppMask_un_16_);
	BIT_VEC cppVar_79302 = ROM.rd(cppVar_79301);
	BIT_VEC cppVar_79303 = IRAM.rd(cppVar_79302);
	BIT_VEC cppVar_79304 = PC + 1;
	cppVar_79304 = (cppVar_79304 & cppMask_un_16_);
	BIT_VEC cppVar_79305 = ROM.rd(cppVar_79304);
	bool cppVar_79307 = (cppVar_79305 == 128);
	BIT_VEC cppVar_79308 = PC + 1;
	cppVar_79308 = (cppVar_79308 & cppMask_un_16_);
	BIT_VEC cppVar_79309 = ROM.rd(cppVar_79308);
	bool cppVar_79311 = (cppVar_79309 == 129);
	BIT_VEC cppVar_79312 = PC + 1;
	cppVar_79312 = (cppVar_79312 & cppMask_un_16_);
	BIT_VEC cppVar_79313 = ROM.rd(cppVar_79312);
	bool cppVar_79315 = (cppVar_79313 == 130);
	BIT_VEC cppVar_79316 = PC + 1;
	cppVar_79316 = (cppVar_79316 & cppMask_un_16_);
	BIT_VEC cppVar_79317 = ROM.rd(cppVar_79316);
	bool cppVar_79319 = (cppVar_79317 == 131);
	BIT_VEC cppVar_79320 = PC + 1;
	cppVar_79320 = (cppVar_79320 & cppMask_un_16_);
	BIT_VEC cppVar_79321 = ROM.rd(cppVar_79320);
	bool cppVar_79323 = (cppVar_79321 == 135);
	BIT_VEC cppVar_79324 = PC + 1;
	cppVar_79324 = (cppVar_79324 & cppMask_un_16_);
	BIT_VEC cppVar_79325 = ROM.rd(cppVar_79324);
	bool cppVar_79327 = (cppVar_79325 == 136);
	BIT_VEC cppVar_79328 = PC + 1;
	cppVar_79328 = (cppVar_79328 & cppMask_un_16_);
	BIT_VEC cppVar_79329 = ROM.rd(cppVar_79328);
	bool cppVar_79331 = (cppVar_79329 == 137);
	BIT_VEC cppVar_79332 = PC + 1;
	cppVar_79332 = (cppVar_79332 & cppMask_un_16_);
	BIT_VEC cppVar_79333 = ROM.rd(cppVar_79332);
	bool cppVar_79335 = (cppVar_79333 == 138);
	BIT_VEC cppVar_79336 = PC + 1;
	cppVar_79336 = (cppVar_79336 & cppMask_un_16_);
	BIT_VEC cppVar_79337 = ROM.rd(cppVar_79336);
	bool cppVar_79339 = (cppVar_79337 == 140);
	BIT_VEC cppVar_79340 = PC + 1;
	cppVar_79340 = (cppVar_79340 & cppMask_un_16_);
	BIT_VEC cppVar_79341 = ROM.rd(cppVar_79340);
	bool cppVar_79343 = (cppVar_79341 == 139);
	BIT_VEC cppVar_79344 = PC + 1;
	cppVar_79344 = (cppVar_79344 & cppMask_un_16_);
	BIT_VEC cppVar_79345 = ROM.rd(cppVar_79344);
	bool cppVar_79347 = (cppVar_79345 == 141);
	BIT_VEC cppVar_79348 = PC + 1;
	cppVar_79348 = (cppVar_79348 & cppMask_un_16_);
	BIT_VEC cppVar_79349 = ROM.rd(cppVar_79348);
	bool cppVar_79351 = (cppVar_79349 == 144);
	BIT_VEC cppVar_79352 = PC + 1;
	cppVar_79352 = (cppVar_79352 & cppMask_un_16_);
	BIT_VEC cppVar_79353 = ROM.rd(cppVar_79352);
	bool cppVar_79355 = (cppVar_79353 == 152);
	BIT_VEC cppVar_79356 = PC + 1;
	cppVar_79356 = (cppVar_79356 & cppMask_un_16_);
	BIT_VEC cppVar_79357 = ROM.rd(cppVar_79356);
	bool cppVar_79359 = (cppVar_79357 == 153);
	BIT_VEC cppVar_79360 = PC + 1;
	cppVar_79360 = (cppVar_79360 & cppMask_un_16_);
	BIT_VEC cppVar_79361 = ROM.rd(cppVar_79360);
	bool cppVar_79363 = (cppVar_79361 == 160);
	BIT_VEC cppVar_79364 = PC + 1;
	cppVar_79364 = (cppVar_79364 & cppMask_un_16_);
	BIT_VEC cppVar_79365 = ROM.rd(cppVar_79364);
	bool cppVar_79367 = (cppVar_79365 == 168);
	BIT_VEC cppVar_79368 = PC + 1;
	cppVar_79368 = (cppVar_79368 & cppMask_un_16_);
	BIT_VEC cppVar_79369 = ROM.rd(cppVar_79368);
	bool cppVar_79371 = (cppVar_79369 == 176);
	BIT_VEC cppVar_79372 = PC + 1;
	cppVar_79372 = (cppVar_79372 & cppMask_un_16_);
	BIT_VEC cppVar_79373 = ROM.rd(cppVar_79372);
	bool cppVar_79375 = (cppVar_79373 == 184);
	BIT_VEC cppVar_79376 = PC + 1;
	cppVar_79376 = (cppVar_79376 & cppMask_un_16_);
	BIT_VEC cppVar_79377 = ROM.rd(cppVar_79376);
	bool cppVar_79379 = (cppVar_79377 == 208);
	BIT_VEC cppVar_79380 = PC + 1;
	cppVar_79380 = (cppVar_79380 & cppMask_un_16_);
	BIT_VEC cppVar_79381 = ROM.rd(cppVar_79380);
	bool cppVar_79383 = (cppVar_79381 == 224);
	BIT_VEC cppVar_79384 = PC + 1;
	cppVar_79384 = (cppVar_79384 & cppMask_un_16_);
	BIT_VEC cppVar_79385 = ROM.rd(cppVar_79384);
	bool cppVar_79387 = (cppVar_79385 == 240);
	BIT_VEC cppVar_79389 = (cppVar_79387) ? B : 0;
	BIT_VEC cppVar_79390 = (cppVar_79383) ? ACC : cppVar_79389;
	BIT_VEC cppVar_79391 = (cppVar_79379) ? PSW : cppVar_79390;
	BIT_VEC cppVar_79392 = (cppVar_79375) ? IP : cppVar_79391;
	BIT_VEC cppVar_79393 = (cppVar_79371) ? P3 : cppVar_79392;
	BIT_VEC cppVar_79394 = (cppVar_79367) ? IE : cppVar_79393;
	BIT_VEC cppVar_79395 = (cppVar_79363) ? P2 : cppVar_79394;
	BIT_VEC cppVar_79396 = (cppVar_79359) ? SBUF : cppVar_79395;
	BIT_VEC cppVar_79397 = (cppVar_79355) ? SCON : cppVar_79396;
	BIT_VEC cppVar_79398 = (cppVar_79351) ? P1 : cppVar_79397;
	BIT_VEC cppVar_79399 = (cppVar_79347) ? TH1 : cppVar_79398;
	BIT_VEC cppVar_79400 = (cppVar_79343) ? TL1 : cppVar_79399;
	BIT_VEC cppVar_79401 = (cppVar_79339) ? TH0 : cppVar_79400;
	BIT_VEC cppVar_79402 = (cppVar_79335) ? TL0 : cppVar_79401;
	BIT_VEC cppVar_79403 = (cppVar_79331) ? TMOD : cppVar_79402;
	BIT_VEC cppVar_79404 = (cppVar_79327) ? TCON : cppVar_79403;
	BIT_VEC cppVar_79405 = (cppVar_79323) ? PCON : cppVar_79404;
	BIT_VEC cppVar_79406 = (cppVar_79319) ? DPH : cppVar_79405;
	BIT_VEC cppVar_79407 = (cppVar_79315) ? DPL : cppVar_79406;
	BIT_VEC cppVar_79408 = (cppVar_79311) ? SP : cppVar_79407;
	BIT_VEC cppVar_79409 = (cppVar_79307) ? P0 : cppVar_79408;
	BIT_VEC cppVar_79410 = (cppVar_79300) ? cppVar_79303 : cppVar_79409;
	BIT_VEC cppVar_79411 = cppVar_79410 | ACC;
	BIT_VEC cppVar_79412 = (cppVar_79295) ? cppVar_79411 : TL0;
	BIT_VEC cppVar_79413 = ROM.rd(PC);
	bool cppVar_79415 = (cppVar_79413 == 213);
	BIT_VEC cppVar_79416 = ROM.rd(PC);
	bool cppVar_79418 = (cppVar_79416 == 21);
	bool cppVar_79419 = cppVar_79415 || cppVar_79418;
	BIT_VEC cppVar_79421 = PC + 1;
	cppVar_79421 = (cppVar_79421 & cppMask_un_16_);
	BIT_VEC cppVar_79422 = ROM.rd(cppVar_79421);
	bool cppVar_79424 = (cppVar_79422 == 138);
	BIT_VEC cppVar_79425 = PC + 1;
	cppVar_79425 = (cppVar_79425 & cppMask_un_16_);
	BIT_VEC cppVar_79426 = ROM.rd(cppVar_79425);
	BIT_VEC cppVar_79427 = (cppVar_79426 >> 7) & cppMask_un_1_;
	bool cppVar_79429 = (cppVar_79427 == 0);
	BIT_VEC cppVar_79430 = PC + 1;
	cppVar_79430 = (cppVar_79430 & cppMask_un_16_);
	BIT_VEC cppVar_79431 = ROM.rd(cppVar_79430);
	BIT_VEC cppVar_79432 = IRAM.rd(cppVar_79431);
	BIT_VEC cppVar_79433 = PC + 1;
	cppVar_79433 = (cppVar_79433 & cppMask_un_16_);
	BIT_VEC cppVar_79434 = ROM.rd(cppVar_79433);
	bool cppVar_79436 = (cppVar_79434 == 128);
	BIT_VEC cppVar_79437 = PC + 1;
	cppVar_79437 = (cppVar_79437 & cppMask_un_16_);
	BIT_VEC cppVar_79438 = ROM.rd(cppVar_79437);
	bool cppVar_79440 = (cppVar_79438 == 129);
	BIT_VEC cppVar_79441 = PC + 1;
	cppVar_79441 = (cppVar_79441 & cppMask_un_16_);
	BIT_VEC cppVar_79442 = ROM.rd(cppVar_79441);
	bool cppVar_79444 = (cppVar_79442 == 130);
	BIT_VEC cppVar_79445 = PC + 1;
	cppVar_79445 = (cppVar_79445 & cppMask_un_16_);
	BIT_VEC cppVar_79446 = ROM.rd(cppVar_79445);
	bool cppVar_79448 = (cppVar_79446 == 131);
	BIT_VEC cppVar_79449 = PC + 1;
	cppVar_79449 = (cppVar_79449 & cppMask_un_16_);
	BIT_VEC cppVar_79450 = ROM.rd(cppVar_79449);
	bool cppVar_79452 = (cppVar_79450 == 135);
	BIT_VEC cppVar_79453 = PC + 1;
	cppVar_79453 = (cppVar_79453 & cppMask_un_16_);
	BIT_VEC cppVar_79454 = ROM.rd(cppVar_79453);
	bool cppVar_79456 = (cppVar_79454 == 136);
	BIT_VEC cppVar_79457 = PC + 1;
	cppVar_79457 = (cppVar_79457 & cppMask_un_16_);
	BIT_VEC cppVar_79458 = ROM.rd(cppVar_79457);
	bool cppVar_79460 = (cppVar_79458 == 137);
	BIT_VEC cppVar_79461 = PC + 1;
	cppVar_79461 = (cppVar_79461 & cppMask_un_16_);
	BIT_VEC cppVar_79462 = ROM.rd(cppVar_79461);
	bool cppVar_79464 = (cppVar_79462 == 138);
	BIT_VEC cppVar_79465 = PC + 1;
	cppVar_79465 = (cppVar_79465 & cppMask_un_16_);
	BIT_VEC cppVar_79466 = ROM.rd(cppVar_79465);
	bool cppVar_79468 = (cppVar_79466 == 140);
	BIT_VEC cppVar_79469 = PC + 1;
	cppVar_79469 = (cppVar_79469 & cppMask_un_16_);
	BIT_VEC cppVar_79470 = ROM.rd(cppVar_79469);
	bool cppVar_79472 = (cppVar_79470 == 139);
	BIT_VEC cppVar_79473 = PC + 1;
	cppVar_79473 = (cppVar_79473 & cppMask_un_16_);
	BIT_VEC cppVar_79474 = ROM.rd(cppVar_79473);
	bool cppVar_79476 = (cppVar_79474 == 141);
	BIT_VEC cppVar_79477 = PC + 1;
	cppVar_79477 = (cppVar_79477 & cppMask_un_16_);
	BIT_VEC cppVar_79478 = ROM.rd(cppVar_79477);
	bool cppVar_79480 = (cppVar_79478 == 144);
	BIT_VEC cppVar_79481 = PC + 1;
	cppVar_79481 = (cppVar_79481 & cppMask_un_16_);
	BIT_VEC cppVar_79482 = ROM.rd(cppVar_79481);
	bool cppVar_79484 = (cppVar_79482 == 152);
	BIT_VEC cppVar_79485 = PC + 1;
	cppVar_79485 = (cppVar_79485 & cppMask_un_16_);
	BIT_VEC cppVar_79486 = ROM.rd(cppVar_79485);
	bool cppVar_79488 = (cppVar_79486 == 153);
	BIT_VEC cppVar_79489 = PC + 1;
	cppVar_79489 = (cppVar_79489 & cppMask_un_16_);
	BIT_VEC cppVar_79490 = ROM.rd(cppVar_79489);
	bool cppVar_79492 = (cppVar_79490 == 160);
	BIT_VEC cppVar_79493 = PC + 1;
	cppVar_79493 = (cppVar_79493 & cppMask_un_16_);
	BIT_VEC cppVar_79494 = ROM.rd(cppVar_79493);
	bool cppVar_79496 = (cppVar_79494 == 168);
	BIT_VEC cppVar_79497 = PC + 1;
	cppVar_79497 = (cppVar_79497 & cppMask_un_16_);
	BIT_VEC cppVar_79498 = ROM.rd(cppVar_79497);
	bool cppVar_79500 = (cppVar_79498 == 176);
	BIT_VEC cppVar_79501 = PC + 1;
	cppVar_79501 = (cppVar_79501 & cppMask_un_16_);
	BIT_VEC cppVar_79502 = ROM.rd(cppVar_79501);
	bool cppVar_79504 = (cppVar_79502 == 184);
	BIT_VEC cppVar_79505 = PC + 1;
	cppVar_79505 = (cppVar_79505 & cppMask_un_16_);
	BIT_VEC cppVar_79506 = ROM.rd(cppVar_79505);
	bool cppVar_79508 = (cppVar_79506 == 208);
	BIT_VEC cppVar_79509 = PC + 1;
	cppVar_79509 = (cppVar_79509 & cppMask_un_16_);
	BIT_VEC cppVar_79510 = ROM.rd(cppVar_79509);
	bool cppVar_79512 = (cppVar_79510 == 224);
	BIT_VEC cppVar_79513 = PC + 1;
	cppVar_79513 = (cppVar_79513 & cppMask_un_16_);
	BIT_VEC cppVar_79514 = ROM.rd(cppVar_79513);
	bool cppVar_79516 = (cppVar_79514 == 240);
	BIT_VEC cppVar_79518 = (cppVar_79516) ? B : 0;
	BIT_VEC cppVar_79519 = (cppVar_79512) ? ACC : cppVar_79518;
	BIT_VEC cppVar_79520 = (cppVar_79508) ? PSW : cppVar_79519;
	BIT_VEC cppVar_79521 = (cppVar_79504) ? IP : cppVar_79520;
	BIT_VEC cppVar_79522 = (cppVar_79500) ? P3 : cppVar_79521;
	BIT_VEC cppVar_79523 = (cppVar_79496) ? IE : cppVar_79522;
	BIT_VEC cppVar_79524 = (cppVar_79492) ? P2 : cppVar_79523;
	BIT_VEC cppVar_79525 = (cppVar_79488) ? SBUF : cppVar_79524;
	BIT_VEC cppVar_79526 = (cppVar_79484) ? SCON : cppVar_79525;
	BIT_VEC cppVar_79527 = (cppVar_79480) ? P1 : cppVar_79526;
	BIT_VEC cppVar_79528 = (cppVar_79476) ? TH1 : cppVar_79527;
	BIT_VEC cppVar_79529 = (cppVar_79472) ? TL1 : cppVar_79528;
	BIT_VEC cppVar_79530 = (cppVar_79468) ? TH0 : cppVar_79529;
	BIT_VEC cppVar_79531 = (cppVar_79464) ? TL0 : cppVar_79530;
	BIT_VEC cppVar_79532 = (cppVar_79460) ? TMOD : cppVar_79531;
	BIT_VEC cppVar_79533 = (cppVar_79456) ? TCON : cppVar_79532;
	BIT_VEC cppVar_79534 = (cppVar_79452) ? PCON : cppVar_79533;
	BIT_VEC cppVar_79535 = (cppVar_79448) ? DPH : cppVar_79534;
	BIT_VEC cppVar_79536 = (cppVar_79444) ? DPL : cppVar_79535;
	BIT_VEC cppVar_79537 = (cppVar_79440) ? SP : cppVar_79536;
	BIT_VEC cppVar_79538 = (cppVar_79436) ? P0 : cppVar_79537;
	BIT_VEC cppVar_79539 = (cppVar_79429) ? cppVar_79432 : cppVar_79538;
	BIT_VEC cppVar_79541 = cppVar_79539 - 1;
	cppVar_79541 = (cppVar_79541 & cppMask_un_8_);
	BIT_VEC cppVar_79542 = (cppVar_79424) ? cppVar_79541 : TL0;
	BIT_VEC cppVar_79543 = ROM.rd(PC);
	bool cppVar_79545 = (cppVar_79543 == 5);
	BIT_VEC cppVar_79547 = PC + 1;
	cppVar_79547 = (cppVar_79547 & cppMask_un_16_);
	BIT_VEC cppVar_79548 = ROM.rd(cppVar_79547);
	bool cppVar_79550 = (cppVar_79548 == 138);
	BIT_VEC cppVar_79551 = PC + 1;
	cppVar_79551 = (cppVar_79551 & cppMask_un_16_);
	BIT_VEC cppVar_79552 = ROM.rd(cppVar_79551);
	BIT_VEC cppVar_79553 = (cppVar_79552 >> 7) & cppMask_un_1_;
	bool cppVar_79555 = (cppVar_79553 == 0);
	BIT_VEC cppVar_79556 = PC + 1;
	cppVar_79556 = (cppVar_79556 & cppMask_un_16_);
	BIT_VEC cppVar_79557 = ROM.rd(cppVar_79556);
	BIT_VEC cppVar_79558 = IRAM.rd(cppVar_79557);
	BIT_VEC cppVar_79559 = PC + 1;
	cppVar_79559 = (cppVar_79559 & cppMask_un_16_);
	BIT_VEC cppVar_79560 = ROM.rd(cppVar_79559);
	bool cppVar_79562 = (cppVar_79560 == 128);
	BIT_VEC cppVar_79563 = PC + 1;
	cppVar_79563 = (cppVar_79563 & cppMask_un_16_);
	BIT_VEC cppVar_79564 = ROM.rd(cppVar_79563);
	bool cppVar_79566 = (cppVar_79564 == 129);
	BIT_VEC cppVar_79567 = PC + 1;
	cppVar_79567 = (cppVar_79567 & cppMask_un_16_);
	BIT_VEC cppVar_79568 = ROM.rd(cppVar_79567);
	bool cppVar_79570 = (cppVar_79568 == 130);
	BIT_VEC cppVar_79571 = PC + 1;
	cppVar_79571 = (cppVar_79571 & cppMask_un_16_);
	BIT_VEC cppVar_79572 = ROM.rd(cppVar_79571);
	bool cppVar_79574 = (cppVar_79572 == 131);
	BIT_VEC cppVar_79575 = PC + 1;
	cppVar_79575 = (cppVar_79575 & cppMask_un_16_);
	BIT_VEC cppVar_79576 = ROM.rd(cppVar_79575);
	bool cppVar_79578 = (cppVar_79576 == 135);
	BIT_VEC cppVar_79579 = PC + 1;
	cppVar_79579 = (cppVar_79579 & cppMask_un_16_);
	BIT_VEC cppVar_79580 = ROM.rd(cppVar_79579);
	bool cppVar_79582 = (cppVar_79580 == 136);
	BIT_VEC cppVar_79583 = PC + 1;
	cppVar_79583 = (cppVar_79583 & cppMask_un_16_);
	BIT_VEC cppVar_79584 = ROM.rd(cppVar_79583);
	bool cppVar_79586 = (cppVar_79584 == 137);
	BIT_VEC cppVar_79587 = PC + 1;
	cppVar_79587 = (cppVar_79587 & cppMask_un_16_);
	BIT_VEC cppVar_79588 = ROM.rd(cppVar_79587);
	bool cppVar_79590 = (cppVar_79588 == 138);
	BIT_VEC cppVar_79591 = PC + 1;
	cppVar_79591 = (cppVar_79591 & cppMask_un_16_);
	BIT_VEC cppVar_79592 = ROM.rd(cppVar_79591);
	bool cppVar_79594 = (cppVar_79592 == 140);
	BIT_VEC cppVar_79595 = PC + 1;
	cppVar_79595 = (cppVar_79595 & cppMask_un_16_);
	BIT_VEC cppVar_79596 = ROM.rd(cppVar_79595);
	bool cppVar_79598 = (cppVar_79596 == 139);
	BIT_VEC cppVar_79599 = PC + 1;
	cppVar_79599 = (cppVar_79599 & cppMask_un_16_);
	BIT_VEC cppVar_79600 = ROM.rd(cppVar_79599);
	bool cppVar_79602 = (cppVar_79600 == 141);
	BIT_VEC cppVar_79603 = PC + 1;
	cppVar_79603 = (cppVar_79603 & cppMask_un_16_);
	BIT_VEC cppVar_79604 = ROM.rd(cppVar_79603);
	bool cppVar_79606 = (cppVar_79604 == 144);
	BIT_VEC cppVar_79607 = PC + 1;
	cppVar_79607 = (cppVar_79607 & cppMask_un_16_);
	BIT_VEC cppVar_79608 = ROM.rd(cppVar_79607);
	bool cppVar_79610 = (cppVar_79608 == 152);
	BIT_VEC cppVar_79611 = PC + 1;
	cppVar_79611 = (cppVar_79611 & cppMask_un_16_);
	BIT_VEC cppVar_79612 = ROM.rd(cppVar_79611);
	bool cppVar_79614 = (cppVar_79612 == 153);
	BIT_VEC cppVar_79615 = PC + 1;
	cppVar_79615 = (cppVar_79615 & cppMask_un_16_);
	BIT_VEC cppVar_79616 = ROM.rd(cppVar_79615);
	bool cppVar_79618 = (cppVar_79616 == 160);
	BIT_VEC cppVar_79619 = PC + 1;
	cppVar_79619 = (cppVar_79619 & cppMask_un_16_);
	BIT_VEC cppVar_79620 = ROM.rd(cppVar_79619);
	bool cppVar_79622 = (cppVar_79620 == 168);
	BIT_VEC cppVar_79623 = PC + 1;
	cppVar_79623 = (cppVar_79623 & cppMask_un_16_);
	BIT_VEC cppVar_79624 = ROM.rd(cppVar_79623);
	bool cppVar_79626 = (cppVar_79624 == 176);
	BIT_VEC cppVar_79627 = PC + 1;
	cppVar_79627 = (cppVar_79627 & cppMask_un_16_);
	BIT_VEC cppVar_79628 = ROM.rd(cppVar_79627);
	bool cppVar_79630 = (cppVar_79628 == 184);
	BIT_VEC cppVar_79631 = PC + 1;
	cppVar_79631 = (cppVar_79631 & cppMask_un_16_);
	BIT_VEC cppVar_79632 = ROM.rd(cppVar_79631);
	bool cppVar_79634 = (cppVar_79632 == 208);
	BIT_VEC cppVar_79635 = PC + 1;
	cppVar_79635 = (cppVar_79635 & cppMask_un_16_);
	BIT_VEC cppVar_79636 = ROM.rd(cppVar_79635);
	bool cppVar_79638 = (cppVar_79636 == 224);
	BIT_VEC cppVar_79639 = PC + 1;
	cppVar_79639 = (cppVar_79639 & cppMask_un_16_);
	BIT_VEC cppVar_79640 = ROM.rd(cppVar_79639);
	bool cppVar_79642 = (cppVar_79640 == 240);
	BIT_VEC cppVar_79644 = (cppVar_79642) ? B : 0;
	BIT_VEC cppVar_79645 = (cppVar_79638) ? ACC : cppVar_79644;
	BIT_VEC cppVar_79646 = (cppVar_79634) ? PSW : cppVar_79645;
	BIT_VEC cppVar_79647 = (cppVar_79630) ? IP : cppVar_79646;
	BIT_VEC cppVar_79648 = (cppVar_79626) ? P3 : cppVar_79647;
	BIT_VEC cppVar_79649 = (cppVar_79622) ? IE : cppVar_79648;
	BIT_VEC cppVar_79650 = (cppVar_79618) ? P2 : cppVar_79649;
	BIT_VEC cppVar_79651 = (cppVar_79614) ? SBUF : cppVar_79650;
	BIT_VEC cppVar_79652 = (cppVar_79610) ? SCON : cppVar_79651;
	BIT_VEC cppVar_79653 = (cppVar_79606) ? P1 : cppVar_79652;
	BIT_VEC cppVar_79654 = (cppVar_79602) ? TH1 : cppVar_79653;
	BIT_VEC cppVar_79655 = (cppVar_79598) ? TL1 : cppVar_79654;
	BIT_VEC cppVar_79656 = (cppVar_79594) ? TH0 : cppVar_79655;
	BIT_VEC cppVar_79657 = (cppVar_79590) ? TL0 : cppVar_79656;
	BIT_VEC cppVar_79658 = (cppVar_79586) ? TMOD : cppVar_79657;
	BIT_VEC cppVar_79659 = (cppVar_79582) ? TCON : cppVar_79658;
	BIT_VEC cppVar_79660 = (cppVar_79578) ? PCON : cppVar_79659;
	BIT_VEC cppVar_79661 = (cppVar_79574) ? DPH : cppVar_79660;
	BIT_VEC cppVar_79662 = (cppVar_79570) ? DPL : cppVar_79661;
	BIT_VEC cppVar_79663 = (cppVar_79566) ? SP : cppVar_79662;
	BIT_VEC cppVar_79664 = (cppVar_79562) ? P0 : cppVar_79663;
	BIT_VEC cppVar_79665 = (cppVar_79555) ? cppVar_79558 : cppVar_79664;
	BIT_VEC cppVar_79667 = cppVar_79665 + 1;
	cppVar_79667 = (cppVar_79667 & cppMask_un_8_);
	BIT_VEC cppVar_79668 = (cppVar_79550) ? cppVar_79667 : TL0;
	BIT_VEC cppVar_79669 = (cppVar_79545) ? cppVar_79668 : TL0;
	BIT_VEC cppVar_79670 = (cppVar_79419) ? cppVar_79542 : cppVar_79669;
	BIT_VEC cppVar_79671 = (cppVar_79290) ? cppVar_79412 : cppVar_79670;
	BIT_VEC cppVar_79672 = (cppVar_79162) ? cppVar_79287 : cppVar_79671;
	BIT_VEC cppVar_79673 = (cppVar_79037) ? cppVar_79159 : cppVar_79672;
	BIT_VEC cppVar_79674 = (cppVar_78909) ? cppVar_79034 : cppVar_79673;
	BIT_VEC cppVar_79675 = (cppVar_78784) ? cppVar_78906 : cppVar_79674;
	BIT_VEC cppVar_79676 = (cppVar_78656) ? cppVar_78781 : cppVar_79675;
	BIT_VEC cppVar_79677 = (cppVar_78644) ? cppVar_78653 : cppVar_79676;
	BIT_VEC cppVar_79678 = (cppVar_78519) ? cppVar_78641 : cppVar_79677;
	BIT_VEC cppVar_79679 = (cppVar_78503) ? cppVar_78516 : cppVar_79678;
	BIT_VEC cppVar_79680 = (cppVar_78487) ? cppVar_78500 : cppVar_79679;
	BIT_VEC cppVar_79681 = (cppVar_78338) ? cppVar_78484 : cppVar_79680;
	BIT_VEC cppVar_79682 = (cppVar_78189) ? cppVar_78335 : cppVar_79681;
	BIT_VEC cppVar_79683 = (cppVar_78040) ? cppVar_78186 : cppVar_79682;
	BIT_VEC cppVar_79684 = (cppVar_77891) ? cppVar_78037 : cppVar_79683;
	BIT_VEC cppVar_79685 = (cppVar_77742) ? cppVar_77888 : cppVar_79684;
	BIT_VEC cppVar_79686 = (cppVar_77593) ? cppVar_77739 : cppVar_79685;
	BIT_VEC cppVar_79687 = (cppVar_77444) ? cppVar_77590 : cppVar_79686;
	BIT_VEC cppVar_79688 = (cppVar_77295) ? cppVar_77441 : cppVar_79687;
	BIT_VEC cppVar_79689 = (cppVar_77286) ? cppVar_77292 : cppVar_79688;
	BIT_VEC cppVar_79690 = (cppVar_77272) ? cppVar_77279 : cppVar_79689;
	return cppVar_79690;
}
