#include "common.hpp"
#include "model_oc8051_class.hpp"

BIT_VEC model_oc8051::cppUpdateFun_PCON()
{
	BIT_VEC cppVar_44273 = ROM.rd(PC);
	bool cppVar_44275 = (cppVar_44273 == 208);
	BIT_VEC cppVar_44277 = PC + 1;
	cppVar_44277 = (cppVar_44277 & cppMask_un_16_);
	BIT_VEC cppVar_44278 = ROM.rd(cppVar_44277);
	bool cppVar_44280 = (cppVar_44278 == 135);
	BIT_VEC cppVar_44281 = IRAM.rd(SP);
	BIT_VEC cppVar_44282 = (cppVar_44280) ? cppVar_44281 : PCON;
	BIT_VEC cppVar_44283 = ROM.rd(PC);
	bool cppVar_44285 = (cppVar_44283 == 245);
	BIT_VEC cppVar_44286 = ROM.rd(PC);
	bool cppVar_44288 = (cppVar_44286 == 197);
	bool cppVar_44289 = cppVar_44285 || cppVar_44288;
	BIT_VEC cppVar_44291 = PC + 1;
	cppVar_44291 = (cppVar_44291 & cppMask_un_16_);
	BIT_VEC cppVar_44292 = ROM.rd(cppVar_44291);
	bool cppVar_44294 = (cppVar_44292 == 135);
	BIT_VEC cppVar_44295 = (cppVar_44294) ? ACC : PCON;
	BIT_VEC cppVar_44296 = ROM.rd(PC);
	bool cppVar_44298 = (cppVar_44296 == 143);
	BIT_VEC cppVar_44300 = PC + 1;
	cppVar_44300 = (cppVar_44300 & cppMask_un_16_);
	BIT_VEC cppVar_44301 = ROM.rd(cppVar_44300);
	bool cppVar_44303 = (cppVar_44301 == 135);
	BIT_VEC cppVar_44305 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44307 = (cppVar_44305 << 3) | 7;
	cppVar_44307 = (cppVar_44307 & cppMask_un_5_);
	BIT_VEC cppVar_44308 = (0 << 5) | cppVar_44307;
	cppVar_44308 = (cppVar_44308 & cppMask_un_8_);
	BIT_VEC cppVar_44309 = (cppVar_44308 >> 7) & cppMask_un_1_;
	bool cppVar_44311 = (cppVar_44309 == 0);
	BIT_VEC cppVar_44312 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44313 = (cppVar_44312 << 3) | 7;
	cppVar_44313 = (cppVar_44313 & cppMask_un_5_);
	BIT_VEC cppVar_44314 = (0 << 5) | cppVar_44313;
	cppVar_44314 = (cppVar_44314 & cppMask_un_8_);
	BIT_VEC cppVar_44315 = IRAM.rd(cppVar_44314);
	BIT_VEC cppVar_44316 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44317 = (cppVar_44316 << 3) | 7;
	cppVar_44317 = (cppVar_44317 & cppMask_un_5_);
	BIT_VEC cppVar_44318 = (0 << 5) | cppVar_44317;
	cppVar_44318 = (cppVar_44318 & cppMask_un_8_);
	bool cppVar_44320 = (cppVar_44318 == 128);
	BIT_VEC cppVar_44321 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44322 = (cppVar_44321 << 3) | 7;
	cppVar_44322 = (cppVar_44322 & cppMask_un_5_);
	BIT_VEC cppVar_44323 = (0 << 5) | cppVar_44322;
	cppVar_44323 = (cppVar_44323 & cppMask_un_8_);
	bool cppVar_44325 = (cppVar_44323 == 129);
	BIT_VEC cppVar_44326 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44327 = (cppVar_44326 << 3) | 7;
	cppVar_44327 = (cppVar_44327 & cppMask_un_5_);
	BIT_VEC cppVar_44328 = (0 << 5) | cppVar_44327;
	cppVar_44328 = (cppVar_44328 & cppMask_un_8_);
	bool cppVar_44330 = (cppVar_44328 == 130);
	BIT_VEC cppVar_44331 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44332 = (cppVar_44331 << 3) | 7;
	cppVar_44332 = (cppVar_44332 & cppMask_un_5_);
	BIT_VEC cppVar_44333 = (0 << 5) | cppVar_44332;
	cppVar_44333 = (cppVar_44333 & cppMask_un_8_);
	bool cppVar_44335 = (cppVar_44333 == 131);
	BIT_VEC cppVar_44336 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44337 = (cppVar_44336 << 3) | 7;
	cppVar_44337 = (cppVar_44337 & cppMask_un_5_);
	BIT_VEC cppVar_44338 = (0 << 5) | cppVar_44337;
	cppVar_44338 = (cppVar_44338 & cppMask_un_8_);
	bool cppVar_44340 = (cppVar_44338 == 135);
	BIT_VEC cppVar_44341 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44342 = (cppVar_44341 << 3) | 7;
	cppVar_44342 = (cppVar_44342 & cppMask_un_5_);
	BIT_VEC cppVar_44343 = (0 << 5) | cppVar_44342;
	cppVar_44343 = (cppVar_44343 & cppMask_un_8_);
	bool cppVar_44345 = (cppVar_44343 == 136);
	BIT_VEC cppVar_44346 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44347 = (cppVar_44346 << 3) | 7;
	cppVar_44347 = (cppVar_44347 & cppMask_un_5_);
	BIT_VEC cppVar_44348 = (0 << 5) | cppVar_44347;
	cppVar_44348 = (cppVar_44348 & cppMask_un_8_);
	bool cppVar_44350 = (cppVar_44348 == 137);
	BIT_VEC cppVar_44351 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44352 = (cppVar_44351 << 3) | 7;
	cppVar_44352 = (cppVar_44352 & cppMask_un_5_);
	BIT_VEC cppVar_44353 = (0 << 5) | cppVar_44352;
	cppVar_44353 = (cppVar_44353 & cppMask_un_8_);
	bool cppVar_44355 = (cppVar_44353 == 138);
	BIT_VEC cppVar_44356 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44357 = (cppVar_44356 << 3) | 7;
	cppVar_44357 = (cppVar_44357 & cppMask_un_5_);
	BIT_VEC cppVar_44358 = (0 << 5) | cppVar_44357;
	cppVar_44358 = (cppVar_44358 & cppMask_un_8_);
	bool cppVar_44360 = (cppVar_44358 == 140);
	BIT_VEC cppVar_44361 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44362 = (cppVar_44361 << 3) | 7;
	cppVar_44362 = (cppVar_44362 & cppMask_un_5_);
	BIT_VEC cppVar_44363 = (0 << 5) | cppVar_44362;
	cppVar_44363 = (cppVar_44363 & cppMask_un_8_);
	bool cppVar_44365 = (cppVar_44363 == 139);
	BIT_VEC cppVar_44366 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44367 = (cppVar_44366 << 3) | 7;
	cppVar_44367 = (cppVar_44367 & cppMask_un_5_);
	BIT_VEC cppVar_44368 = (0 << 5) | cppVar_44367;
	cppVar_44368 = (cppVar_44368 & cppMask_un_8_);
	bool cppVar_44370 = (cppVar_44368 == 141);
	BIT_VEC cppVar_44371 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44372 = (cppVar_44371 << 3) | 7;
	cppVar_44372 = (cppVar_44372 & cppMask_un_5_);
	BIT_VEC cppVar_44373 = (0 << 5) | cppVar_44372;
	cppVar_44373 = (cppVar_44373 & cppMask_un_8_);
	bool cppVar_44375 = (cppVar_44373 == 144);
	BIT_VEC cppVar_44376 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44377 = (cppVar_44376 << 3) | 7;
	cppVar_44377 = (cppVar_44377 & cppMask_un_5_);
	BIT_VEC cppVar_44378 = (0 << 5) | cppVar_44377;
	cppVar_44378 = (cppVar_44378 & cppMask_un_8_);
	bool cppVar_44380 = (cppVar_44378 == 152);
	BIT_VEC cppVar_44381 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44382 = (cppVar_44381 << 3) | 7;
	cppVar_44382 = (cppVar_44382 & cppMask_un_5_);
	BIT_VEC cppVar_44383 = (0 << 5) | cppVar_44382;
	cppVar_44383 = (cppVar_44383 & cppMask_un_8_);
	bool cppVar_44385 = (cppVar_44383 == 153);
	BIT_VEC cppVar_44386 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44387 = (cppVar_44386 << 3) | 7;
	cppVar_44387 = (cppVar_44387 & cppMask_un_5_);
	BIT_VEC cppVar_44388 = (0 << 5) | cppVar_44387;
	cppVar_44388 = (cppVar_44388 & cppMask_un_8_);
	bool cppVar_44390 = (cppVar_44388 == 160);
	BIT_VEC cppVar_44391 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44392 = (cppVar_44391 << 3) | 7;
	cppVar_44392 = (cppVar_44392 & cppMask_un_5_);
	BIT_VEC cppVar_44393 = (0 << 5) | cppVar_44392;
	cppVar_44393 = (cppVar_44393 & cppMask_un_8_);
	bool cppVar_44395 = (cppVar_44393 == 168);
	BIT_VEC cppVar_44396 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44397 = (cppVar_44396 << 3) | 7;
	cppVar_44397 = (cppVar_44397 & cppMask_un_5_);
	BIT_VEC cppVar_44398 = (0 << 5) | cppVar_44397;
	cppVar_44398 = (cppVar_44398 & cppMask_un_8_);
	bool cppVar_44400 = (cppVar_44398 == 176);
	BIT_VEC cppVar_44401 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44402 = (cppVar_44401 << 3) | 7;
	cppVar_44402 = (cppVar_44402 & cppMask_un_5_);
	BIT_VEC cppVar_44403 = (0 << 5) | cppVar_44402;
	cppVar_44403 = (cppVar_44403 & cppMask_un_8_);
	bool cppVar_44405 = (cppVar_44403 == 184);
	BIT_VEC cppVar_44406 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44407 = (cppVar_44406 << 3) | 7;
	cppVar_44407 = (cppVar_44407 & cppMask_un_5_);
	BIT_VEC cppVar_44408 = (0 << 5) | cppVar_44407;
	cppVar_44408 = (cppVar_44408 & cppMask_un_8_);
	bool cppVar_44410 = (cppVar_44408 == 208);
	BIT_VEC cppVar_44411 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44412 = (cppVar_44411 << 3) | 7;
	cppVar_44412 = (cppVar_44412 & cppMask_un_5_);
	BIT_VEC cppVar_44413 = (0 << 5) | cppVar_44412;
	cppVar_44413 = (cppVar_44413 & cppMask_un_8_);
	bool cppVar_44415 = (cppVar_44413 == 224);
	BIT_VEC cppVar_44416 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44417 = (cppVar_44416 << 3) | 7;
	cppVar_44417 = (cppVar_44417 & cppMask_un_5_);
	BIT_VEC cppVar_44418 = (0 << 5) | cppVar_44417;
	cppVar_44418 = (cppVar_44418 & cppMask_un_8_);
	bool cppVar_44420 = (cppVar_44418 == 240);
	BIT_VEC cppVar_44422 = (cppVar_44420) ? B : 0;
	BIT_VEC cppVar_44423 = (cppVar_44415) ? ACC : cppVar_44422;
	BIT_VEC cppVar_44424 = (cppVar_44410) ? PSW : cppVar_44423;
	BIT_VEC cppVar_44425 = (cppVar_44405) ? IP : cppVar_44424;
	BIT_VEC cppVar_44426 = (cppVar_44400) ? P3 : cppVar_44425;
	BIT_VEC cppVar_44427 = (cppVar_44395) ? IE : cppVar_44426;
	BIT_VEC cppVar_44428 = (cppVar_44390) ? P2 : cppVar_44427;
	BIT_VEC cppVar_44429 = (cppVar_44385) ? SBUF : cppVar_44428;
	BIT_VEC cppVar_44430 = (cppVar_44380) ? SCON : cppVar_44429;
	BIT_VEC cppVar_44431 = (cppVar_44375) ? P1 : cppVar_44430;
	BIT_VEC cppVar_44432 = (cppVar_44370) ? TH1 : cppVar_44431;
	BIT_VEC cppVar_44433 = (cppVar_44365) ? TL1 : cppVar_44432;
	BIT_VEC cppVar_44434 = (cppVar_44360) ? TH0 : cppVar_44433;
	BIT_VEC cppVar_44435 = (cppVar_44355) ? TL0 : cppVar_44434;
	BIT_VEC cppVar_44436 = (cppVar_44350) ? TMOD : cppVar_44435;
	BIT_VEC cppVar_44437 = (cppVar_44345) ? TCON : cppVar_44436;
	BIT_VEC cppVar_44438 = (cppVar_44340) ? PCON : cppVar_44437;
	BIT_VEC cppVar_44439 = (cppVar_44335) ? DPH : cppVar_44438;
	BIT_VEC cppVar_44440 = (cppVar_44330) ? DPL : cppVar_44439;
	BIT_VEC cppVar_44441 = (cppVar_44325) ? SP : cppVar_44440;
	BIT_VEC cppVar_44442 = (cppVar_44320) ? P0 : cppVar_44441;
	BIT_VEC cppVar_44443 = (cppVar_44311) ? cppVar_44315 : cppVar_44442;
	BIT_VEC cppVar_44444 = (cppVar_44303) ? cppVar_44443 : PCON;
	BIT_VEC cppVar_44445 = ROM.rd(PC);
	bool cppVar_44447 = (cppVar_44445 == 142);
	BIT_VEC cppVar_44449 = PC + 1;
	cppVar_44449 = (cppVar_44449 & cppMask_un_16_);
	BIT_VEC cppVar_44450 = ROM.rd(cppVar_44449);
	bool cppVar_44452 = (cppVar_44450 == 135);
	BIT_VEC cppVar_44454 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44456 = (cppVar_44454 << 3) | 6;
	cppVar_44456 = (cppVar_44456 & cppMask_un_5_);
	BIT_VEC cppVar_44457 = (0 << 5) | cppVar_44456;
	cppVar_44457 = (cppVar_44457 & cppMask_un_8_);
	BIT_VEC cppVar_44458 = (cppVar_44457 >> 7) & cppMask_un_1_;
	bool cppVar_44460 = (cppVar_44458 == 0);
	BIT_VEC cppVar_44461 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44462 = (cppVar_44461 << 3) | 6;
	cppVar_44462 = (cppVar_44462 & cppMask_un_5_);
	BIT_VEC cppVar_44463 = (0 << 5) | cppVar_44462;
	cppVar_44463 = (cppVar_44463 & cppMask_un_8_);
	BIT_VEC cppVar_44464 = IRAM.rd(cppVar_44463);
	BIT_VEC cppVar_44465 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44466 = (cppVar_44465 << 3) | 6;
	cppVar_44466 = (cppVar_44466 & cppMask_un_5_);
	BIT_VEC cppVar_44467 = (0 << 5) | cppVar_44466;
	cppVar_44467 = (cppVar_44467 & cppMask_un_8_);
	bool cppVar_44469 = (cppVar_44467 == 128);
	BIT_VEC cppVar_44470 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44471 = (cppVar_44470 << 3) | 6;
	cppVar_44471 = (cppVar_44471 & cppMask_un_5_);
	BIT_VEC cppVar_44472 = (0 << 5) | cppVar_44471;
	cppVar_44472 = (cppVar_44472 & cppMask_un_8_);
	bool cppVar_44474 = (cppVar_44472 == 129);
	BIT_VEC cppVar_44475 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44476 = (cppVar_44475 << 3) | 6;
	cppVar_44476 = (cppVar_44476 & cppMask_un_5_);
	BIT_VEC cppVar_44477 = (0 << 5) | cppVar_44476;
	cppVar_44477 = (cppVar_44477 & cppMask_un_8_);
	bool cppVar_44479 = (cppVar_44477 == 130);
	BIT_VEC cppVar_44480 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44481 = (cppVar_44480 << 3) | 6;
	cppVar_44481 = (cppVar_44481 & cppMask_un_5_);
	BIT_VEC cppVar_44482 = (0 << 5) | cppVar_44481;
	cppVar_44482 = (cppVar_44482 & cppMask_un_8_);
	bool cppVar_44484 = (cppVar_44482 == 131);
	BIT_VEC cppVar_44485 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44486 = (cppVar_44485 << 3) | 6;
	cppVar_44486 = (cppVar_44486 & cppMask_un_5_);
	BIT_VEC cppVar_44487 = (0 << 5) | cppVar_44486;
	cppVar_44487 = (cppVar_44487 & cppMask_un_8_);
	bool cppVar_44489 = (cppVar_44487 == 135);
	BIT_VEC cppVar_44490 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44491 = (cppVar_44490 << 3) | 6;
	cppVar_44491 = (cppVar_44491 & cppMask_un_5_);
	BIT_VEC cppVar_44492 = (0 << 5) | cppVar_44491;
	cppVar_44492 = (cppVar_44492 & cppMask_un_8_);
	bool cppVar_44494 = (cppVar_44492 == 136);
	BIT_VEC cppVar_44495 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44496 = (cppVar_44495 << 3) | 6;
	cppVar_44496 = (cppVar_44496 & cppMask_un_5_);
	BIT_VEC cppVar_44497 = (0 << 5) | cppVar_44496;
	cppVar_44497 = (cppVar_44497 & cppMask_un_8_);
	bool cppVar_44499 = (cppVar_44497 == 137);
	BIT_VEC cppVar_44500 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44501 = (cppVar_44500 << 3) | 6;
	cppVar_44501 = (cppVar_44501 & cppMask_un_5_);
	BIT_VEC cppVar_44502 = (0 << 5) | cppVar_44501;
	cppVar_44502 = (cppVar_44502 & cppMask_un_8_);
	bool cppVar_44504 = (cppVar_44502 == 138);
	BIT_VEC cppVar_44505 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44506 = (cppVar_44505 << 3) | 6;
	cppVar_44506 = (cppVar_44506 & cppMask_un_5_);
	BIT_VEC cppVar_44507 = (0 << 5) | cppVar_44506;
	cppVar_44507 = (cppVar_44507 & cppMask_un_8_);
	bool cppVar_44509 = (cppVar_44507 == 140);
	BIT_VEC cppVar_44510 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44511 = (cppVar_44510 << 3) | 6;
	cppVar_44511 = (cppVar_44511 & cppMask_un_5_);
	BIT_VEC cppVar_44512 = (0 << 5) | cppVar_44511;
	cppVar_44512 = (cppVar_44512 & cppMask_un_8_);
	bool cppVar_44514 = (cppVar_44512 == 139);
	BIT_VEC cppVar_44515 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44516 = (cppVar_44515 << 3) | 6;
	cppVar_44516 = (cppVar_44516 & cppMask_un_5_);
	BIT_VEC cppVar_44517 = (0 << 5) | cppVar_44516;
	cppVar_44517 = (cppVar_44517 & cppMask_un_8_);
	bool cppVar_44519 = (cppVar_44517 == 141);
	BIT_VEC cppVar_44520 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44521 = (cppVar_44520 << 3) | 6;
	cppVar_44521 = (cppVar_44521 & cppMask_un_5_);
	BIT_VEC cppVar_44522 = (0 << 5) | cppVar_44521;
	cppVar_44522 = (cppVar_44522 & cppMask_un_8_);
	bool cppVar_44524 = (cppVar_44522 == 144);
	BIT_VEC cppVar_44525 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44526 = (cppVar_44525 << 3) | 6;
	cppVar_44526 = (cppVar_44526 & cppMask_un_5_);
	BIT_VEC cppVar_44527 = (0 << 5) | cppVar_44526;
	cppVar_44527 = (cppVar_44527 & cppMask_un_8_);
	bool cppVar_44529 = (cppVar_44527 == 152);
	BIT_VEC cppVar_44530 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44531 = (cppVar_44530 << 3) | 6;
	cppVar_44531 = (cppVar_44531 & cppMask_un_5_);
	BIT_VEC cppVar_44532 = (0 << 5) | cppVar_44531;
	cppVar_44532 = (cppVar_44532 & cppMask_un_8_);
	bool cppVar_44534 = (cppVar_44532 == 153);
	BIT_VEC cppVar_44535 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44536 = (cppVar_44535 << 3) | 6;
	cppVar_44536 = (cppVar_44536 & cppMask_un_5_);
	BIT_VEC cppVar_44537 = (0 << 5) | cppVar_44536;
	cppVar_44537 = (cppVar_44537 & cppMask_un_8_);
	bool cppVar_44539 = (cppVar_44537 == 160);
	BIT_VEC cppVar_44540 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44541 = (cppVar_44540 << 3) | 6;
	cppVar_44541 = (cppVar_44541 & cppMask_un_5_);
	BIT_VEC cppVar_44542 = (0 << 5) | cppVar_44541;
	cppVar_44542 = (cppVar_44542 & cppMask_un_8_);
	bool cppVar_44544 = (cppVar_44542 == 168);
	BIT_VEC cppVar_44545 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44546 = (cppVar_44545 << 3) | 6;
	cppVar_44546 = (cppVar_44546 & cppMask_un_5_);
	BIT_VEC cppVar_44547 = (0 << 5) | cppVar_44546;
	cppVar_44547 = (cppVar_44547 & cppMask_un_8_);
	bool cppVar_44549 = (cppVar_44547 == 176);
	BIT_VEC cppVar_44550 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44551 = (cppVar_44550 << 3) | 6;
	cppVar_44551 = (cppVar_44551 & cppMask_un_5_);
	BIT_VEC cppVar_44552 = (0 << 5) | cppVar_44551;
	cppVar_44552 = (cppVar_44552 & cppMask_un_8_);
	bool cppVar_44554 = (cppVar_44552 == 184);
	BIT_VEC cppVar_44555 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44556 = (cppVar_44555 << 3) | 6;
	cppVar_44556 = (cppVar_44556 & cppMask_un_5_);
	BIT_VEC cppVar_44557 = (0 << 5) | cppVar_44556;
	cppVar_44557 = (cppVar_44557 & cppMask_un_8_);
	bool cppVar_44559 = (cppVar_44557 == 208);
	BIT_VEC cppVar_44560 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44561 = (cppVar_44560 << 3) | 6;
	cppVar_44561 = (cppVar_44561 & cppMask_un_5_);
	BIT_VEC cppVar_44562 = (0 << 5) | cppVar_44561;
	cppVar_44562 = (cppVar_44562 & cppMask_un_8_);
	bool cppVar_44564 = (cppVar_44562 == 224);
	BIT_VEC cppVar_44565 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44566 = (cppVar_44565 << 3) | 6;
	cppVar_44566 = (cppVar_44566 & cppMask_un_5_);
	BIT_VEC cppVar_44567 = (0 << 5) | cppVar_44566;
	cppVar_44567 = (cppVar_44567 & cppMask_un_8_);
	bool cppVar_44569 = (cppVar_44567 == 240);
	BIT_VEC cppVar_44571 = (cppVar_44569) ? B : 0;
	BIT_VEC cppVar_44572 = (cppVar_44564) ? ACC : cppVar_44571;
	BIT_VEC cppVar_44573 = (cppVar_44559) ? PSW : cppVar_44572;
	BIT_VEC cppVar_44574 = (cppVar_44554) ? IP : cppVar_44573;
	BIT_VEC cppVar_44575 = (cppVar_44549) ? P3 : cppVar_44574;
	BIT_VEC cppVar_44576 = (cppVar_44544) ? IE : cppVar_44575;
	BIT_VEC cppVar_44577 = (cppVar_44539) ? P2 : cppVar_44576;
	BIT_VEC cppVar_44578 = (cppVar_44534) ? SBUF : cppVar_44577;
	BIT_VEC cppVar_44579 = (cppVar_44529) ? SCON : cppVar_44578;
	BIT_VEC cppVar_44580 = (cppVar_44524) ? P1 : cppVar_44579;
	BIT_VEC cppVar_44581 = (cppVar_44519) ? TH1 : cppVar_44580;
	BIT_VEC cppVar_44582 = (cppVar_44514) ? TL1 : cppVar_44581;
	BIT_VEC cppVar_44583 = (cppVar_44509) ? TH0 : cppVar_44582;
	BIT_VEC cppVar_44584 = (cppVar_44504) ? TL0 : cppVar_44583;
	BIT_VEC cppVar_44585 = (cppVar_44499) ? TMOD : cppVar_44584;
	BIT_VEC cppVar_44586 = (cppVar_44494) ? TCON : cppVar_44585;
	BIT_VEC cppVar_44587 = (cppVar_44489) ? PCON : cppVar_44586;
	BIT_VEC cppVar_44588 = (cppVar_44484) ? DPH : cppVar_44587;
	BIT_VEC cppVar_44589 = (cppVar_44479) ? DPL : cppVar_44588;
	BIT_VEC cppVar_44590 = (cppVar_44474) ? SP : cppVar_44589;
	BIT_VEC cppVar_44591 = (cppVar_44469) ? P0 : cppVar_44590;
	BIT_VEC cppVar_44592 = (cppVar_44460) ? cppVar_44464 : cppVar_44591;
	BIT_VEC cppVar_44593 = (cppVar_44452) ? cppVar_44592 : PCON;
	BIT_VEC cppVar_44594 = ROM.rd(PC);
	bool cppVar_44596 = (cppVar_44594 == 141);
	BIT_VEC cppVar_44598 = PC + 1;
	cppVar_44598 = (cppVar_44598 & cppMask_un_16_);
	BIT_VEC cppVar_44599 = ROM.rd(cppVar_44598);
	bool cppVar_44601 = (cppVar_44599 == 135);
	BIT_VEC cppVar_44603 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44605 = (cppVar_44603 << 3) | 5;
	cppVar_44605 = (cppVar_44605 & cppMask_un_5_);
	BIT_VEC cppVar_44606 = (0 << 5) | cppVar_44605;
	cppVar_44606 = (cppVar_44606 & cppMask_un_8_);
	BIT_VEC cppVar_44607 = (cppVar_44606 >> 7) & cppMask_un_1_;
	bool cppVar_44609 = (cppVar_44607 == 0);
	BIT_VEC cppVar_44610 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44611 = (cppVar_44610 << 3) | 5;
	cppVar_44611 = (cppVar_44611 & cppMask_un_5_);
	BIT_VEC cppVar_44612 = (0 << 5) | cppVar_44611;
	cppVar_44612 = (cppVar_44612 & cppMask_un_8_);
	BIT_VEC cppVar_44613 = IRAM.rd(cppVar_44612);
	BIT_VEC cppVar_44614 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44615 = (cppVar_44614 << 3) | 5;
	cppVar_44615 = (cppVar_44615 & cppMask_un_5_);
	BIT_VEC cppVar_44616 = (0 << 5) | cppVar_44615;
	cppVar_44616 = (cppVar_44616 & cppMask_un_8_);
	bool cppVar_44618 = (cppVar_44616 == 128);
	BIT_VEC cppVar_44619 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44620 = (cppVar_44619 << 3) | 5;
	cppVar_44620 = (cppVar_44620 & cppMask_un_5_);
	BIT_VEC cppVar_44621 = (0 << 5) | cppVar_44620;
	cppVar_44621 = (cppVar_44621 & cppMask_un_8_);
	bool cppVar_44623 = (cppVar_44621 == 129);
	BIT_VEC cppVar_44624 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44625 = (cppVar_44624 << 3) | 5;
	cppVar_44625 = (cppVar_44625 & cppMask_un_5_);
	BIT_VEC cppVar_44626 = (0 << 5) | cppVar_44625;
	cppVar_44626 = (cppVar_44626 & cppMask_un_8_);
	bool cppVar_44628 = (cppVar_44626 == 130);
	BIT_VEC cppVar_44629 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44630 = (cppVar_44629 << 3) | 5;
	cppVar_44630 = (cppVar_44630 & cppMask_un_5_);
	BIT_VEC cppVar_44631 = (0 << 5) | cppVar_44630;
	cppVar_44631 = (cppVar_44631 & cppMask_un_8_);
	bool cppVar_44633 = (cppVar_44631 == 131);
	BIT_VEC cppVar_44634 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44635 = (cppVar_44634 << 3) | 5;
	cppVar_44635 = (cppVar_44635 & cppMask_un_5_);
	BIT_VEC cppVar_44636 = (0 << 5) | cppVar_44635;
	cppVar_44636 = (cppVar_44636 & cppMask_un_8_);
	bool cppVar_44638 = (cppVar_44636 == 135);
	BIT_VEC cppVar_44639 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44640 = (cppVar_44639 << 3) | 5;
	cppVar_44640 = (cppVar_44640 & cppMask_un_5_);
	BIT_VEC cppVar_44641 = (0 << 5) | cppVar_44640;
	cppVar_44641 = (cppVar_44641 & cppMask_un_8_);
	bool cppVar_44643 = (cppVar_44641 == 136);
	BIT_VEC cppVar_44644 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44645 = (cppVar_44644 << 3) | 5;
	cppVar_44645 = (cppVar_44645 & cppMask_un_5_);
	BIT_VEC cppVar_44646 = (0 << 5) | cppVar_44645;
	cppVar_44646 = (cppVar_44646 & cppMask_un_8_);
	bool cppVar_44648 = (cppVar_44646 == 137);
	BIT_VEC cppVar_44649 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44650 = (cppVar_44649 << 3) | 5;
	cppVar_44650 = (cppVar_44650 & cppMask_un_5_);
	BIT_VEC cppVar_44651 = (0 << 5) | cppVar_44650;
	cppVar_44651 = (cppVar_44651 & cppMask_un_8_);
	bool cppVar_44653 = (cppVar_44651 == 138);
	BIT_VEC cppVar_44654 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44655 = (cppVar_44654 << 3) | 5;
	cppVar_44655 = (cppVar_44655 & cppMask_un_5_);
	BIT_VEC cppVar_44656 = (0 << 5) | cppVar_44655;
	cppVar_44656 = (cppVar_44656 & cppMask_un_8_);
	bool cppVar_44658 = (cppVar_44656 == 140);
	BIT_VEC cppVar_44659 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44660 = (cppVar_44659 << 3) | 5;
	cppVar_44660 = (cppVar_44660 & cppMask_un_5_);
	BIT_VEC cppVar_44661 = (0 << 5) | cppVar_44660;
	cppVar_44661 = (cppVar_44661 & cppMask_un_8_);
	bool cppVar_44663 = (cppVar_44661 == 139);
	BIT_VEC cppVar_44664 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44665 = (cppVar_44664 << 3) | 5;
	cppVar_44665 = (cppVar_44665 & cppMask_un_5_);
	BIT_VEC cppVar_44666 = (0 << 5) | cppVar_44665;
	cppVar_44666 = (cppVar_44666 & cppMask_un_8_);
	bool cppVar_44668 = (cppVar_44666 == 141);
	BIT_VEC cppVar_44669 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44670 = (cppVar_44669 << 3) | 5;
	cppVar_44670 = (cppVar_44670 & cppMask_un_5_);
	BIT_VEC cppVar_44671 = (0 << 5) | cppVar_44670;
	cppVar_44671 = (cppVar_44671 & cppMask_un_8_);
	bool cppVar_44673 = (cppVar_44671 == 144);
	BIT_VEC cppVar_44674 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44675 = (cppVar_44674 << 3) | 5;
	cppVar_44675 = (cppVar_44675 & cppMask_un_5_);
	BIT_VEC cppVar_44676 = (0 << 5) | cppVar_44675;
	cppVar_44676 = (cppVar_44676 & cppMask_un_8_);
	bool cppVar_44678 = (cppVar_44676 == 152);
	BIT_VEC cppVar_44679 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44680 = (cppVar_44679 << 3) | 5;
	cppVar_44680 = (cppVar_44680 & cppMask_un_5_);
	BIT_VEC cppVar_44681 = (0 << 5) | cppVar_44680;
	cppVar_44681 = (cppVar_44681 & cppMask_un_8_);
	bool cppVar_44683 = (cppVar_44681 == 153);
	BIT_VEC cppVar_44684 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44685 = (cppVar_44684 << 3) | 5;
	cppVar_44685 = (cppVar_44685 & cppMask_un_5_);
	BIT_VEC cppVar_44686 = (0 << 5) | cppVar_44685;
	cppVar_44686 = (cppVar_44686 & cppMask_un_8_);
	bool cppVar_44688 = (cppVar_44686 == 160);
	BIT_VEC cppVar_44689 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44690 = (cppVar_44689 << 3) | 5;
	cppVar_44690 = (cppVar_44690 & cppMask_un_5_);
	BIT_VEC cppVar_44691 = (0 << 5) | cppVar_44690;
	cppVar_44691 = (cppVar_44691 & cppMask_un_8_);
	bool cppVar_44693 = (cppVar_44691 == 168);
	BIT_VEC cppVar_44694 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44695 = (cppVar_44694 << 3) | 5;
	cppVar_44695 = (cppVar_44695 & cppMask_un_5_);
	BIT_VEC cppVar_44696 = (0 << 5) | cppVar_44695;
	cppVar_44696 = (cppVar_44696 & cppMask_un_8_);
	bool cppVar_44698 = (cppVar_44696 == 176);
	BIT_VEC cppVar_44699 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44700 = (cppVar_44699 << 3) | 5;
	cppVar_44700 = (cppVar_44700 & cppMask_un_5_);
	BIT_VEC cppVar_44701 = (0 << 5) | cppVar_44700;
	cppVar_44701 = (cppVar_44701 & cppMask_un_8_);
	bool cppVar_44703 = (cppVar_44701 == 184);
	BIT_VEC cppVar_44704 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44705 = (cppVar_44704 << 3) | 5;
	cppVar_44705 = (cppVar_44705 & cppMask_un_5_);
	BIT_VEC cppVar_44706 = (0 << 5) | cppVar_44705;
	cppVar_44706 = (cppVar_44706 & cppMask_un_8_);
	bool cppVar_44708 = (cppVar_44706 == 208);
	BIT_VEC cppVar_44709 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44710 = (cppVar_44709 << 3) | 5;
	cppVar_44710 = (cppVar_44710 & cppMask_un_5_);
	BIT_VEC cppVar_44711 = (0 << 5) | cppVar_44710;
	cppVar_44711 = (cppVar_44711 & cppMask_un_8_);
	bool cppVar_44713 = (cppVar_44711 == 224);
	BIT_VEC cppVar_44714 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44715 = (cppVar_44714 << 3) | 5;
	cppVar_44715 = (cppVar_44715 & cppMask_un_5_);
	BIT_VEC cppVar_44716 = (0 << 5) | cppVar_44715;
	cppVar_44716 = (cppVar_44716 & cppMask_un_8_);
	bool cppVar_44718 = (cppVar_44716 == 240);
	BIT_VEC cppVar_44720 = (cppVar_44718) ? B : 0;
	BIT_VEC cppVar_44721 = (cppVar_44713) ? ACC : cppVar_44720;
	BIT_VEC cppVar_44722 = (cppVar_44708) ? PSW : cppVar_44721;
	BIT_VEC cppVar_44723 = (cppVar_44703) ? IP : cppVar_44722;
	BIT_VEC cppVar_44724 = (cppVar_44698) ? P3 : cppVar_44723;
	BIT_VEC cppVar_44725 = (cppVar_44693) ? IE : cppVar_44724;
	BIT_VEC cppVar_44726 = (cppVar_44688) ? P2 : cppVar_44725;
	BIT_VEC cppVar_44727 = (cppVar_44683) ? SBUF : cppVar_44726;
	BIT_VEC cppVar_44728 = (cppVar_44678) ? SCON : cppVar_44727;
	BIT_VEC cppVar_44729 = (cppVar_44673) ? P1 : cppVar_44728;
	BIT_VEC cppVar_44730 = (cppVar_44668) ? TH1 : cppVar_44729;
	BIT_VEC cppVar_44731 = (cppVar_44663) ? TL1 : cppVar_44730;
	BIT_VEC cppVar_44732 = (cppVar_44658) ? TH0 : cppVar_44731;
	BIT_VEC cppVar_44733 = (cppVar_44653) ? TL0 : cppVar_44732;
	BIT_VEC cppVar_44734 = (cppVar_44648) ? TMOD : cppVar_44733;
	BIT_VEC cppVar_44735 = (cppVar_44643) ? TCON : cppVar_44734;
	BIT_VEC cppVar_44736 = (cppVar_44638) ? PCON : cppVar_44735;
	BIT_VEC cppVar_44737 = (cppVar_44633) ? DPH : cppVar_44736;
	BIT_VEC cppVar_44738 = (cppVar_44628) ? DPL : cppVar_44737;
	BIT_VEC cppVar_44739 = (cppVar_44623) ? SP : cppVar_44738;
	BIT_VEC cppVar_44740 = (cppVar_44618) ? P0 : cppVar_44739;
	BIT_VEC cppVar_44741 = (cppVar_44609) ? cppVar_44613 : cppVar_44740;
	BIT_VEC cppVar_44742 = (cppVar_44601) ? cppVar_44741 : PCON;
	BIT_VEC cppVar_44743 = ROM.rd(PC);
	bool cppVar_44745 = (cppVar_44743 == 140);
	BIT_VEC cppVar_44747 = PC + 1;
	cppVar_44747 = (cppVar_44747 & cppMask_un_16_);
	BIT_VEC cppVar_44748 = ROM.rd(cppVar_44747);
	bool cppVar_44750 = (cppVar_44748 == 135);
	BIT_VEC cppVar_44752 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44754 = (cppVar_44752 << 3) | 4;
	cppVar_44754 = (cppVar_44754 & cppMask_un_5_);
	BIT_VEC cppVar_44755 = (0 << 5) | cppVar_44754;
	cppVar_44755 = (cppVar_44755 & cppMask_un_8_);
	BIT_VEC cppVar_44756 = (cppVar_44755 >> 7) & cppMask_un_1_;
	bool cppVar_44758 = (cppVar_44756 == 0);
	BIT_VEC cppVar_44759 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44760 = (cppVar_44759 << 3) | 4;
	cppVar_44760 = (cppVar_44760 & cppMask_un_5_);
	BIT_VEC cppVar_44761 = (0 << 5) | cppVar_44760;
	cppVar_44761 = (cppVar_44761 & cppMask_un_8_);
	BIT_VEC cppVar_44762 = IRAM.rd(cppVar_44761);
	BIT_VEC cppVar_44763 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44764 = (cppVar_44763 << 3) | 4;
	cppVar_44764 = (cppVar_44764 & cppMask_un_5_);
	BIT_VEC cppVar_44765 = (0 << 5) | cppVar_44764;
	cppVar_44765 = (cppVar_44765 & cppMask_un_8_);
	bool cppVar_44767 = (cppVar_44765 == 128);
	BIT_VEC cppVar_44768 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44769 = (cppVar_44768 << 3) | 4;
	cppVar_44769 = (cppVar_44769 & cppMask_un_5_);
	BIT_VEC cppVar_44770 = (0 << 5) | cppVar_44769;
	cppVar_44770 = (cppVar_44770 & cppMask_un_8_);
	bool cppVar_44772 = (cppVar_44770 == 129);
	BIT_VEC cppVar_44773 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44774 = (cppVar_44773 << 3) | 4;
	cppVar_44774 = (cppVar_44774 & cppMask_un_5_);
	BIT_VEC cppVar_44775 = (0 << 5) | cppVar_44774;
	cppVar_44775 = (cppVar_44775 & cppMask_un_8_);
	bool cppVar_44777 = (cppVar_44775 == 130);
	BIT_VEC cppVar_44778 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44779 = (cppVar_44778 << 3) | 4;
	cppVar_44779 = (cppVar_44779 & cppMask_un_5_);
	BIT_VEC cppVar_44780 = (0 << 5) | cppVar_44779;
	cppVar_44780 = (cppVar_44780 & cppMask_un_8_);
	bool cppVar_44782 = (cppVar_44780 == 131);
	BIT_VEC cppVar_44783 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44784 = (cppVar_44783 << 3) | 4;
	cppVar_44784 = (cppVar_44784 & cppMask_un_5_);
	BIT_VEC cppVar_44785 = (0 << 5) | cppVar_44784;
	cppVar_44785 = (cppVar_44785 & cppMask_un_8_);
	bool cppVar_44787 = (cppVar_44785 == 135);
	BIT_VEC cppVar_44788 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44789 = (cppVar_44788 << 3) | 4;
	cppVar_44789 = (cppVar_44789 & cppMask_un_5_);
	BIT_VEC cppVar_44790 = (0 << 5) | cppVar_44789;
	cppVar_44790 = (cppVar_44790 & cppMask_un_8_);
	bool cppVar_44792 = (cppVar_44790 == 136);
	BIT_VEC cppVar_44793 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44794 = (cppVar_44793 << 3) | 4;
	cppVar_44794 = (cppVar_44794 & cppMask_un_5_);
	BIT_VEC cppVar_44795 = (0 << 5) | cppVar_44794;
	cppVar_44795 = (cppVar_44795 & cppMask_un_8_);
	bool cppVar_44797 = (cppVar_44795 == 137);
	BIT_VEC cppVar_44798 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44799 = (cppVar_44798 << 3) | 4;
	cppVar_44799 = (cppVar_44799 & cppMask_un_5_);
	BIT_VEC cppVar_44800 = (0 << 5) | cppVar_44799;
	cppVar_44800 = (cppVar_44800 & cppMask_un_8_);
	bool cppVar_44802 = (cppVar_44800 == 138);
	BIT_VEC cppVar_44803 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44804 = (cppVar_44803 << 3) | 4;
	cppVar_44804 = (cppVar_44804 & cppMask_un_5_);
	BIT_VEC cppVar_44805 = (0 << 5) | cppVar_44804;
	cppVar_44805 = (cppVar_44805 & cppMask_un_8_);
	bool cppVar_44807 = (cppVar_44805 == 140);
	BIT_VEC cppVar_44808 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44809 = (cppVar_44808 << 3) | 4;
	cppVar_44809 = (cppVar_44809 & cppMask_un_5_);
	BIT_VEC cppVar_44810 = (0 << 5) | cppVar_44809;
	cppVar_44810 = (cppVar_44810 & cppMask_un_8_);
	bool cppVar_44812 = (cppVar_44810 == 139);
	BIT_VEC cppVar_44813 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44814 = (cppVar_44813 << 3) | 4;
	cppVar_44814 = (cppVar_44814 & cppMask_un_5_);
	BIT_VEC cppVar_44815 = (0 << 5) | cppVar_44814;
	cppVar_44815 = (cppVar_44815 & cppMask_un_8_);
	bool cppVar_44817 = (cppVar_44815 == 141);
	BIT_VEC cppVar_44818 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44819 = (cppVar_44818 << 3) | 4;
	cppVar_44819 = (cppVar_44819 & cppMask_un_5_);
	BIT_VEC cppVar_44820 = (0 << 5) | cppVar_44819;
	cppVar_44820 = (cppVar_44820 & cppMask_un_8_);
	bool cppVar_44822 = (cppVar_44820 == 144);
	BIT_VEC cppVar_44823 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44824 = (cppVar_44823 << 3) | 4;
	cppVar_44824 = (cppVar_44824 & cppMask_un_5_);
	BIT_VEC cppVar_44825 = (0 << 5) | cppVar_44824;
	cppVar_44825 = (cppVar_44825 & cppMask_un_8_);
	bool cppVar_44827 = (cppVar_44825 == 152);
	BIT_VEC cppVar_44828 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44829 = (cppVar_44828 << 3) | 4;
	cppVar_44829 = (cppVar_44829 & cppMask_un_5_);
	BIT_VEC cppVar_44830 = (0 << 5) | cppVar_44829;
	cppVar_44830 = (cppVar_44830 & cppMask_un_8_);
	bool cppVar_44832 = (cppVar_44830 == 153);
	BIT_VEC cppVar_44833 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44834 = (cppVar_44833 << 3) | 4;
	cppVar_44834 = (cppVar_44834 & cppMask_un_5_);
	BIT_VEC cppVar_44835 = (0 << 5) | cppVar_44834;
	cppVar_44835 = (cppVar_44835 & cppMask_un_8_);
	bool cppVar_44837 = (cppVar_44835 == 160);
	BIT_VEC cppVar_44838 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44839 = (cppVar_44838 << 3) | 4;
	cppVar_44839 = (cppVar_44839 & cppMask_un_5_);
	BIT_VEC cppVar_44840 = (0 << 5) | cppVar_44839;
	cppVar_44840 = (cppVar_44840 & cppMask_un_8_);
	bool cppVar_44842 = (cppVar_44840 == 168);
	BIT_VEC cppVar_44843 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44844 = (cppVar_44843 << 3) | 4;
	cppVar_44844 = (cppVar_44844 & cppMask_un_5_);
	BIT_VEC cppVar_44845 = (0 << 5) | cppVar_44844;
	cppVar_44845 = (cppVar_44845 & cppMask_un_8_);
	bool cppVar_44847 = (cppVar_44845 == 176);
	BIT_VEC cppVar_44848 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44849 = (cppVar_44848 << 3) | 4;
	cppVar_44849 = (cppVar_44849 & cppMask_un_5_);
	BIT_VEC cppVar_44850 = (0 << 5) | cppVar_44849;
	cppVar_44850 = (cppVar_44850 & cppMask_un_8_);
	bool cppVar_44852 = (cppVar_44850 == 184);
	BIT_VEC cppVar_44853 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44854 = (cppVar_44853 << 3) | 4;
	cppVar_44854 = (cppVar_44854 & cppMask_un_5_);
	BIT_VEC cppVar_44855 = (0 << 5) | cppVar_44854;
	cppVar_44855 = (cppVar_44855 & cppMask_un_8_);
	bool cppVar_44857 = (cppVar_44855 == 208);
	BIT_VEC cppVar_44858 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44859 = (cppVar_44858 << 3) | 4;
	cppVar_44859 = (cppVar_44859 & cppMask_un_5_);
	BIT_VEC cppVar_44860 = (0 << 5) | cppVar_44859;
	cppVar_44860 = (cppVar_44860 & cppMask_un_8_);
	bool cppVar_44862 = (cppVar_44860 == 224);
	BIT_VEC cppVar_44863 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44864 = (cppVar_44863 << 3) | 4;
	cppVar_44864 = (cppVar_44864 & cppMask_un_5_);
	BIT_VEC cppVar_44865 = (0 << 5) | cppVar_44864;
	cppVar_44865 = (cppVar_44865 & cppMask_un_8_);
	bool cppVar_44867 = (cppVar_44865 == 240);
	BIT_VEC cppVar_44869 = (cppVar_44867) ? B : 0;
	BIT_VEC cppVar_44870 = (cppVar_44862) ? ACC : cppVar_44869;
	BIT_VEC cppVar_44871 = (cppVar_44857) ? PSW : cppVar_44870;
	BIT_VEC cppVar_44872 = (cppVar_44852) ? IP : cppVar_44871;
	BIT_VEC cppVar_44873 = (cppVar_44847) ? P3 : cppVar_44872;
	BIT_VEC cppVar_44874 = (cppVar_44842) ? IE : cppVar_44873;
	BIT_VEC cppVar_44875 = (cppVar_44837) ? P2 : cppVar_44874;
	BIT_VEC cppVar_44876 = (cppVar_44832) ? SBUF : cppVar_44875;
	BIT_VEC cppVar_44877 = (cppVar_44827) ? SCON : cppVar_44876;
	BIT_VEC cppVar_44878 = (cppVar_44822) ? P1 : cppVar_44877;
	BIT_VEC cppVar_44879 = (cppVar_44817) ? TH1 : cppVar_44878;
	BIT_VEC cppVar_44880 = (cppVar_44812) ? TL1 : cppVar_44879;
	BIT_VEC cppVar_44881 = (cppVar_44807) ? TH0 : cppVar_44880;
	BIT_VEC cppVar_44882 = (cppVar_44802) ? TL0 : cppVar_44881;
	BIT_VEC cppVar_44883 = (cppVar_44797) ? TMOD : cppVar_44882;
	BIT_VEC cppVar_44884 = (cppVar_44792) ? TCON : cppVar_44883;
	BIT_VEC cppVar_44885 = (cppVar_44787) ? PCON : cppVar_44884;
	BIT_VEC cppVar_44886 = (cppVar_44782) ? DPH : cppVar_44885;
	BIT_VEC cppVar_44887 = (cppVar_44777) ? DPL : cppVar_44886;
	BIT_VEC cppVar_44888 = (cppVar_44772) ? SP : cppVar_44887;
	BIT_VEC cppVar_44889 = (cppVar_44767) ? P0 : cppVar_44888;
	BIT_VEC cppVar_44890 = (cppVar_44758) ? cppVar_44762 : cppVar_44889;
	BIT_VEC cppVar_44891 = (cppVar_44750) ? cppVar_44890 : PCON;
	BIT_VEC cppVar_44892 = ROM.rd(PC);
	bool cppVar_44894 = (cppVar_44892 == 139);
	BIT_VEC cppVar_44896 = PC + 1;
	cppVar_44896 = (cppVar_44896 & cppMask_un_16_);
	BIT_VEC cppVar_44897 = ROM.rd(cppVar_44896);
	bool cppVar_44899 = (cppVar_44897 == 135);
	BIT_VEC cppVar_44901 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44903 = (cppVar_44901 << 3) | 3;
	cppVar_44903 = (cppVar_44903 & cppMask_un_5_);
	BIT_VEC cppVar_44904 = (0 << 5) | cppVar_44903;
	cppVar_44904 = (cppVar_44904 & cppMask_un_8_);
	BIT_VEC cppVar_44905 = (cppVar_44904 >> 7) & cppMask_un_1_;
	bool cppVar_44907 = (cppVar_44905 == 0);
	BIT_VEC cppVar_44908 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44909 = (cppVar_44908 << 3) | 3;
	cppVar_44909 = (cppVar_44909 & cppMask_un_5_);
	BIT_VEC cppVar_44910 = (0 << 5) | cppVar_44909;
	cppVar_44910 = (cppVar_44910 & cppMask_un_8_);
	BIT_VEC cppVar_44911 = IRAM.rd(cppVar_44910);
	BIT_VEC cppVar_44912 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44913 = (cppVar_44912 << 3) | 3;
	cppVar_44913 = (cppVar_44913 & cppMask_un_5_);
	BIT_VEC cppVar_44914 = (0 << 5) | cppVar_44913;
	cppVar_44914 = (cppVar_44914 & cppMask_un_8_);
	bool cppVar_44916 = (cppVar_44914 == 128);
	BIT_VEC cppVar_44917 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44918 = (cppVar_44917 << 3) | 3;
	cppVar_44918 = (cppVar_44918 & cppMask_un_5_);
	BIT_VEC cppVar_44919 = (0 << 5) | cppVar_44918;
	cppVar_44919 = (cppVar_44919 & cppMask_un_8_);
	bool cppVar_44921 = (cppVar_44919 == 129);
	BIT_VEC cppVar_44922 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44923 = (cppVar_44922 << 3) | 3;
	cppVar_44923 = (cppVar_44923 & cppMask_un_5_);
	BIT_VEC cppVar_44924 = (0 << 5) | cppVar_44923;
	cppVar_44924 = (cppVar_44924 & cppMask_un_8_);
	bool cppVar_44926 = (cppVar_44924 == 130);
	BIT_VEC cppVar_44927 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44928 = (cppVar_44927 << 3) | 3;
	cppVar_44928 = (cppVar_44928 & cppMask_un_5_);
	BIT_VEC cppVar_44929 = (0 << 5) | cppVar_44928;
	cppVar_44929 = (cppVar_44929 & cppMask_un_8_);
	bool cppVar_44931 = (cppVar_44929 == 131);
	BIT_VEC cppVar_44932 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44933 = (cppVar_44932 << 3) | 3;
	cppVar_44933 = (cppVar_44933 & cppMask_un_5_);
	BIT_VEC cppVar_44934 = (0 << 5) | cppVar_44933;
	cppVar_44934 = (cppVar_44934 & cppMask_un_8_);
	bool cppVar_44936 = (cppVar_44934 == 135);
	BIT_VEC cppVar_44937 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44938 = (cppVar_44937 << 3) | 3;
	cppVar_44938 = (cppVar_44938 & cppMask_un_5_);
	BIT_VEC cppVar_44939 = (0 << 5) | cppVar_44938;
	cppVar_44939 = (cppVar_44939 & cppMask_un_8_);
	bool cppVar_44941 = (cppVar_44939 == 136);
	BIT_VEC cppVar_44942 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44943 = (cppVar_44942 << 3) | 3;
	cppVar_44943 = (cppVar_44943 & cppMask_un_5_);
	BIT_VEC cppVar_44944 = (0 << 5) | cppVar_44943;
	cppVar_44944 = (cppVar_44944 & cppMask_un_8_);
	bool cppVar_44946 = (cppVar_44944 == 137);
	BIT_VEC cppVar_44947 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44948 = (cppVar_44947 << 3) | 3;
	cppVar_44948 = (cppVar_44948 & cppMask_un_5_);
	BIT_VEC cppVar_44949 = (0 << 5) | cppVar_44948;
	cppVar_44949 = (cppVar_44949 & cppMask_un_8_);
	bool cppVar_44951 = (cppVar_44949 == 138);
	BIT_VEC cppVar_44952 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44953 = (cppVar_44952 << 3) | 3;
	cppVar_44953 = (cppVar_44953 & cppMask_un_5_);
	BIT_VEC cppVar_44954 = (0 << 5) | cppVar_44953;
	cppVar_44954 = (cppVar_44954 & cppMask_un_8_);
	bool cppVar_44956 = (cppVar_44954 == 140);
	BIT_VEC cppVar_44957 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44958 = (cppVar_44957 << 3) | 3;
	cppVar_44958 = (cppVar_44958 & cppMask_un_5_);
	BIT_VEC cppVar_44959 = (0 << 5) | cppVar_44958;
	cppVar_44959 = (cppVar_44959 & cppMask_un_8_);
	bool cppVar_44961 = (cppVar_44959 == 139);
	BIT_VEC cppVar_44962 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44963 = (cppVar_44962 << 3) | 3;
	cppVar_44963 = (cppVar_44963 & cppMask_un_5_);
	BIT_VEC cppVar_44964 = (0 << 5) | cppVar_44963;
	cppVar_44964 = (cppVar_44964 & cppMask_un_8_);
	bool cppVar_44966 = (cppVar_44964 == 141);
	BIT_VEC cppVar_44967 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44968 = (cppVar_44967 << 3) | 3;
	cppVar_44968 = (cppVar_44968 & cppMask_un_5_);
	BIT_VEC cppVar_44969 = (0 << 5) | cppVar_44968;
	cppVar_44969 = (cppVar_44969 & cppMask_un_8_);
	bool cppVar_44971 = (cppVar_44969 == 144);
	BIT_VEC cppVar_44972 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44973 = (cppVar_44972 << 3) | 3;
	cppVar_44973 = (cppVar_44973 & cppMask_un_5_);
	BIT_VEC cppVar_44974 = (0 << 5) | cppVar_44973;
	cppVar_44974 = (cppVar_44974 & cppMask_un_8_);
	bool cppVar_44976 = (cppVar_44974 == 152);
	BIT_VEC cppVar_44977 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44978 = (cppVar_44977 << 3) | 3;
	cppVar_44978 = (cppVar_44978 & cppMask_un_5_);
	BIT_VEC cppVar_44979 = (0 << 5) | cppVar_44978;
	cppVar_44979 = (cppVar_44979 & cppMask_un_8_);
	bool cppVar_44981 = (cppVar_44979 == 153);
	BIT_VEC cppVar_44982 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44983 = (cppVar_44982 << 3) | 3;
	cppVar_44983 = (cppVar_44983 & cppMask_un_5_);
	BIT_VEC cppVar_44984 = (0 << 5) | cppVar_44983;
	cppVar_44984 = (cppVar_44984 & cppMask_un_8_);
	bool cppVar_44986 = (cppVar_44984 == 160);
	BIT_VEC cppVar_44987 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44988 = (cppVar_44987 << 3) | 3;
	cppVar_44988 = (cppVar_44988 & cppMask_un_5_);
	BIT_VEC cppVar_44989 = (0 << 5) | cppVar_44988;
	cppVar_44989 = (cppVar_44989 & cppMask_un_8_);
	bool cppVar_44991 = (cppVar_44989 == 168);
	BIT_VEC cppVar_44992 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44993 = (cppVar_44992 << 3) | 3;
	cppVar_44993 = (cppVar_44993 & cppMask_un_5_);
	BIT_VEC cppVar_44994 = (0 << 5) | cppVar_44993;
	cppVar_44994 = (cppVar_44994 & cppMask_un_8_);
	bool cppVar_44996 = (cppVar_44994 == 176);
	BIT_VEC cppVar_44997 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_44998 = (cppVar_44997 << 3) | 3;
	cppVar_44998 = (cppVar_44998 & cppMask_un_5_);
	BIT_VEC cppVar_44999 = (0 << 5) | cppVar_44998;
	cppVar_44999 = (cppVar_44999 & cppMask_un_8_);
	bool cppVar_45001 = (cppVar_44999 == 184);
	BIT_VEC cppVar_45002 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45003 = (cppVar_45002 << 3) | 3;
	cppVar_45003 = (cppVar_45003 & cppMask_un_5_);
	BIT_VEC cppVar_45004 = (0 << 5) | cppVar_45003;
	cppVar_45004 = (cppVar_45004 & cppMask_un_8_);
	bool cppVar_45006 = (cppVar_45004 == 208);
	BIT_VEC cppVar_45007 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45008 = (cppVar_45007 << 3) | 3;
	cppVar_45008 = (cppVar_45008 & cppMask_un_5_);
	BIT_VEC cppVar_45009 = (0 << 5) | cppVar_45008;
	cppVar_45009 = (cppVar_45009 & cppMask_un_8_);
	bool cppVar_45011 = (cppVar_45009 == 224);
	BIT_VEC cppVar_45012 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45013 = (cppVar_45012 << 3) | 3;
	cppVar_45013 = (cppVar_45013 & cppMask_un_5_);
	BIT_VEC cppVar_45014 = (0 << 5) | cppVar_45013;
	cppVar_45014 = (cppVar_45014 & cppMask_un_8_);
	bool cppVar_45016 = (cppVar_45014 == 240);
	BIT_VEC cppVar_45018 = (cppVar_45016) ? B : 0;
	BIT_VEC cppVar_45019 = (cppVar_45011) ? ACC : cppVar_45018;
	BIT_VEC cppVar_45020 = (cppVar_45006) ? PSW : cppVar_45019;
	BIT_VEC cppVar_45021 = (cppVar_45001) ? IP : cppVar_45020;
	BIT_VEC cppVar_45022 = (cppVar_44996) ? P3 : cppVar_45021;
	BIT_VEC cppVar_45023 = (cppVar_44991) ? IE : cppVar_45022;
	BIT_VEC cppVar_45024 = (cppVar_44986) ? P2 : cppVar_45023;
	BIT_VEC cppVar_45025 = (cppVar_44981) ? SBUF : cppVar_45024;
	BIT_VEC cppVar_45026 = (cppVar_44976) ? SCON : cppVar_45025;
	BIT_VEC cppVar_45027 = (cppVar_44971) ? P1 : cppVar_45026;
	BIT_VEC cppVar_45028 = (cppVar_44966) ? TH1 : cppVar_45027;
	BIT_VEC cppVar_45029 = (cppVar_44961) ? TL1 : cppVar_45028;
	BIT_VEC cppVar_45030 = (cppVar_44956) ? TH0 : cppVar_45029;
	BIT_VEC cppVar_45031 = (cppVar_44951) ? TL0 : cppVar_45030;
	BIT_VEC cppVar_45032 = (cppVar_44946) ? TMOD : cppVar_45031;
	BIT_VEC cppVar_45033 = (cppVar_44941) ? TCON : cppVar_45032;
	BIT_VEC cppVar_45034 = (cppVar_44936) ? PCON : cppVar_45033;
	BIT_VEC cppVar_45035 = (cppVar_44931) ? DPH : cppVar_45034;
	BIT_VEC cppVar_45036 = (cppVar_44926) ? DPL : cppVar_45035;
	BIT_VEC cppVar_45037 = (cppVar_44921) ? SP : cppVar_45036;
	BIT_VEC cppVar_45038 = (cppVar_44916) ? P0 : cppVar_45037;
	BIT_VEC cppVar_45039 = (cppVar_44907) ? cppVar_44911 : cppVar_45038;
	BIT_VEC cppVar_45040 = (cppVar_44899) ? cppVar_45039 : PCON;
	BIT_VEC cppVar_45041 = ROM.rd(PC);
	bool cppVar_45043 = (cppVar_45041 == 138);
	BIT_VEC cppVar_45045 = PC + 1;
	cppVar_45045 = (cppVar_45045 & cppMask_un_16_);
	BIT_VEC cppVar_45046 = ROM.rd(cppVar_45045);
	bool cppVar_45048 = (cppVar_45046 == 135);
	BIT_VEC cppVar_45050 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45052 = (cppVar_45050 << 3) | 2;
	cppVar_45052 = (cppVar_45052 & cppMask_un_5_);
	BIT_VEC cppVar_45053 = (0 << 5) | cppVar_45052;
	cppVar_45053 = (cppVar_45053 & cppMask_un_8_);
	BIT_VEC cppVar_45054 = (cppVar_45053 >> 7) & cppMask_un_1_;
	bool cppVar_45056 = (cppVar_45054 == 0);
	BIT_VEC cppVar_45057 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45058 = (cppVar_45057 << 3) | 2;
	cppVar_45058 = (cppVar_45058 & cppMask_un_5_);
	BIT_VEC cppVar_45059 = (0 << 5) | cppVar_45058;
	cppVar_45059 = (cppVar_45059 & cppMask_un_8_);
	BIT_VEC cppVar_45060 = IRAM.rd(cppVar_45059);
	BIT_VEC cppVar_45061 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45062 = (cppVar_45061 << 3) | 2;
	cppVar_45062 = (cppVar_45062 & cppMask_un_5_);
	BIT_VEC cppVar_45063 = (0 << 5) | cppVar_45062;
	cppVar_45063 = (cppVar_45063 & cppMask_un_8_);
	bool cppVar_45065 = (cppVar_45063 == 128);
	BIT_VEC cppVar_45066 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45067 = (cppVar_45066 << 3) | 2;
	cppVar_45067 = (cppVar_45067 & cppMask_un_5_);
	BIT_VEC cppVar_45068 = (0 << 5) | cppVar_45067;
	cppVar_45068 = (cppVar_45068 & cppMask_un_8_);
	bool cppVar_45070 = (cppVar_45068 == 129);
	BIT_VEC cppVar_45071 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45072 = (cppVar_45071 << 3) | 2;
	cppVar_45072 = (cppVar_45072 & cppMask_un_5_);
	BIT_VEC cppVar_45073 = (0 << 5) | cppVar_45072;
	cppVar_45073 = (cppVar_45073 & cppMask_un_8_);
	bool cppVar_45075 = (cppVar_45073 == 130);
	BIT_VEC cppVar_45076 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45077 = (cppVar_45076 << 3) | 2;
	cppVar_45077 = (cppVar_45077 & cppMask_un_5_);
	BIT_VEC cppVar_45078 = (0 << 5) | cppVar_45077;
	cppVar_45078 = (cppVar_45078 & cppMask_un_8_);
	bool cppVar_45080 = (cppVar_45078 == 131);
	BIT_VEC cppVar_45081 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45082 = (cppVar_45081 << 3) | 2;
	cppVar_45082 = (cppVar_45082 & cppMask_un_5_);
	BIT_VEC cppVar_45083 = (0 << 5) | cppVar_45082;
	cppVar_45083 = (cppVar_45083 & cppMask_un_8_);
	bool cppVar_45085 = (cppVar_45083 == 135);
	BIT_VEC cppVar_45086 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45087 = (cppVar_45086 << 3) | 2;
	cppVar_45087 = (cppVar_45087 & cppMask_un_5_);
	BIT_VEC cppVar_45088 = (0 << 5) | cppVar_45087;
	cppVar_45088 = (cppVar_45088 & cppMask_un_8_);
	bool cppVar_45090 = (cppVar_45088 == 136);
	BIT_VEC cppVar_45091 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45092 = (cppVar_45091 << 3) | 2;
	cppVar_45092 = (cppVar_45092 & cppMask_un_5_);
	BIT_VEC cppVar_45093 = (0 << 5) | cppVar_45092;
	cppVar_45093 = (cppVar_45093 & cppMask_un_8_);
	bool cppVar_45095 = (cppVar_45093 == 137);
	BIT_VEC cppVar_45096 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45097 = (cppVar_45096 << 3) | 2;
	cppVar_45097 = (cppVar_45097 & cppMask_un_5_);
	BIT_VEC cppVar_45098 = (0 << 5) | cppVar_45097;
	cppVar_45098 = (cppVar_45098 & cppMask_un_8_);
	bool cppVar_45100 = (cppVar_45098 == 138);
	BIT_VEC cppVar_45101 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45102 = (cppVar_45101 << 3) | 2;
	cppVar_45102 = (cppVar_45102 & cppMask_un_5_);
	BIT_VEC cppVar_45103 = (0 << 5) | cppVar_45102;
	cppVar_45103 = (cppVar_45103 & cppMask_un_8_);
	bool cppVar_45105 = (cppVar_45103 == 140);
	BIT_VEC cppVar_45106 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45107 = (cppVar_45106 << 3) | 2;
	cppVar_45107 = (cppVar_45107 & cppMask_un_5_);
	BIT_VEC cppVar_45108 = (0 << 5) | cppVar_45107;
	cppVar_45108 = (cppVar_45108 & cppMask_un_8_);
	bool cppVar_45110 = (cppVar_45108 == 139);
	BIT_VEC cppVar_45111 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45112 = (cppVar_45111 << 3) | 2;
	cppVar_45112 = (cppVar_45112 & cppMask_un_5_);
	BIT_VEC cppVar_45113 = (0 << 5) | cppVar_45112;
	cppVar_45113 = (cppVar_45113 & cppMask_un_8_);
	bool cppVar_45115 = (cppVar_45113 == 141);
	BIT_VEC cppVar_45116 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45117 = (cppVar_45116 << 3) | 2;
	cppVar_45117 = (cppVar_45117 & cppMask_un_5_);
	BIT_VEC cppVar_45118 = (0 << 5) | cppVar_45117;
	cppVar_45118 = (cppVar_45118 & cppMask_un_8_);
	bool cppVar_45120 = (cppVar_45118 == 144);
	BIT_VEC cppVar_45121 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45122 = (cppVar_45121 << 3) | 2;
	cppVar_45122 = (cppVar_45122 & cppMask_un_5_);
	BIT_VEC cppVar_45123 = (0 << 5) | cppVar_45122;
	cppVar_45123 = (cppVar_45123 & cppMask_un_8_);
	bool cppVar_45125 = (cppVar_45123 == 152);
	BIT_VEC cppVar_45126 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45127 = (cppVar_45126 << 3) | 2;
	cppVar_45127 = (cppVar_45127 & cppMask_un_5_);
	BIT_VEC cppVar_45128 = (0 << 5) | cppVar_45127;
	cppVar_45128 = (cppVar_45128 & cppMask_un_8_);
	bool cppVar_45130 = (cppVar_45128 == 153);
	BIT_VEC cppVar_45131 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45132 = (cppVar_45131 << 3) | 2;
	cppVar_45132 = (cppVar_45132 & cppMask_un_5_);
	BIT_VEC cppVar_45133 = (0 << 5) | cppVar_45132;
	cppVar_45133 = (cppVar_45133 & cppMask_un_8_);
	bool cppVar_45135 = (cppVar_45133 == 160);
	BIT_VEC cppVar_45136 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45137 = (cppVar_45136 << 3) | 2;
	cppVar_45137 = (cppVar_45137 & cppMask_un_5_);
	BIT_VEC cppVar_45138 = (0 << 5) | cppVar_45137;
	cppVar_45138 = (cppVar_45138 & cppMask_un_8_);
	bool cppVar_45140 = (cppVar_45138 == 168);
	BIT_VEC cppVar_45141 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45142 = (cppVar_45141 << 3) | 2;
	cppVar_45142 = (cppVar_45142 & cppMask_un_5_);
	BIT_VEC cppVar_45143 = (0 << 5) | cppVar_45142;
	cppVar_45143 = (cppVar_45143 & cppMask_un_8_);
	bool cppVar_45145 = (cppVar_45143 == 176);
	BIT_VEC cppVar_45146 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45147 = (cppVar_45146 << 3) | 2;
	cppVar_45147 = (cppVar_45147 & cppMask_un_5_);
	BIT_VEC cppVar_45148 = (0 << 5) | cppVar_45147;
	cppVar_45148 = (cppVar_45148 & cppMask_un_8_);
	bool cppVar_45150 = (cppVar_45148 == 184);
	BIT_VEC cppVar_45151 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45152 = (cppVar_45151 << 3) | 2;
	cppVar_45152 = (cppVar_45152 & cppMask_un_5_);
	BIT_VEC cppVar_45153 = (0 << 5) | cppVar_45152;
	cppVar_45153 = (cppVar_45153 & cppMask_un_8_);
	bool cppVar_45155 = (cppVar_45153 == 208);
	BIT_VEC cppVar_45156 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45157 = (cppVar_45156 << 3) | 2;
	cppVar_45157 = (cppVar_45157 & cppMask_un_5_);
	BIT_VEC cppVar_45158 = (0 << 5) | cppVar_45157;
	cppVar_45158 = (cppVar_45158 & cppMask_un_8_);
	bool cppVar_45160 = (cppVar_45158 == 224);
	BIT_VEC cppVar_45161 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45162 = (cppVar_45161 << 3) | 2;
	cppVar_45162 = (cppVar_45162 & cppMask_un_5_);
	BIT_VEC cppVar_45163 = (0 << 5) | cppVar_45162;
	cppVar_45163 = (cppVar_45163 & cppMask_un_8_);
	bool cppVar_45165 = (cppVar_45163 == 240);
	BIT_VEC cppVar_45167 = (cppVar_45165) ? B : 0;
	BIT_VEC cppVar_45168 = (cppVar_45160) ? ACC : cppVar_45167;
	BIT_VEC cppVar_45169 = (cppVar_45155) ? PSW : cppVar_45168;
	BIT_VEC cppVar_45170 = (cppVar_45150) ? IP : cppVar_45169;
	BIT_VEC cppVar_45171 = (cppVar_45145) ? P3 : cppVar_45170;
	BIT_VEC cppVar_45172 = (cppVar_45140) ? IE : cppVar_45171;
	BIT_VEC cppVar_45173 = (cppVar_45135) ? P2 : cppVar_45172;
	BIT_VEC cppVar_45174 = (cppVar_45130) ? SBUF : cppVar_45173;
	BIT_VEC cppVar_45175 = (cppVar_45125) ? SCON : cppVar_45174;
	BIT_VEC cppVar_45176 = (cppVar_45120) ? P1 : cppVar_45175;
	BIT_VEC cppVar_45177 = (cppVar_45115) ? TH1 : cppVar_45176;
	BIT_VEC cppVar_45178 = (cppVar_45110) ? TL1 : cppVar_45177;
	BIT_VEC cppVar_45179 = (cppVar_45105) ? TH0 : cppVar_45178;
	BIT_VEC cppVar_45180 = (cppVar_45100) ? TL0 : cppVar_45179;
	BIT_VEC cppVar_45181 = (cppVar_45095) ? TMOD : cppVar_45180;
	BIT_VEC cppVar_45182 = (cppVar_45090) ? TCON : cppVar_45181;
	BIT_VEC cppVar_45183 = (cppVar_45085) ? PCON : cppVar_45182;
	BIT_VEC cppVar_45184 = (cppVar_45080) ? DPH : cppVar_45183;
	BIT_VEC cppVar_45185 = (cppVar_45075) ? DPL : cppVar_45184;
	BIT_VEC cppVar_45186 = (cppVar_45070) ? SP : cppVar_45185;
	BIT_VEC cppVar_45187 = (cppVar_45065) ? P0 : cppVar_45186;
	BIT_VEC cppVar_45188 = (cppVar_45056) ? cppVar_45060 : cppVar_45187;
	BIT_VEC cppVar_45189 = (cppVar_45048) ? cppVar_45188 : PCON;
	BIT_VEC cppVar_45190 = ROM.rd(PC);
	bool cppVar_45192 = (cppVar_45190 == 137);
	BIT_VEC cppVar_45194 = PC + 1;
	cppVar_45194 = (cppVar_45194 & cppMask_un_16_);
	BIT_VEC cppVar_45195 = ROM.rd(cppVar_45194);
	bool cppVar_45197 = (cppVar_45195 == 135);
	BIT_VEC cppVar_45199 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45201 = (cppVar_45199 << 3) | 1;
	cppVar_45201 = (cppVar_45201 & cppMask_un_5_);
	BIT_VEC cppVar_45202 = (0 << 5) | cppVar_45201;
	cppVar_45202 = (cppVar_45202 & cppMask_un_8_);
	BIT_VEC cppVar_45203 = (cppVar_45202 >> 7) & cppMask_un_1_;
	bool cppVar_45205 = (cppVar_45203 == 0);
	BIT_VEC cppVar_45206 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45207 = (cppVar_45206 << 3) | 1;
	cppVar_45207 = (cppVar_45207 & cppMask_un_5_);
	BIT_VEC cppVar_45208 = (0 << 5) | cppVar_45207;
	cppVar_45208 = (cppVar_45208 & cppMask_un_8_);
	BIT_VEC cppVar_45209 = IRAM.rd(cppVar_45208);
	BIT_VEC cppVar_45210 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45211 = (cppVar_45210 << 3) | 1;
	cppVar_45211 = (cppVar_45211 & cppMask_un_5_);
	BIT_VEC cppVar_45212 = (0 << 5) | cppVar_45211;
	cppVar_45212 = (cppVar_45212 & cppMask_un_8_);
	bool cppVar_45214 = (cppVar_45212 == 128);
	BIT_VEC cppVar_45215 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45216 = (cppVar_45215 << 3) | 1;
	cppVar_45216 = (cppVar_45216 & cppMask_un_5_);
	BIT_VEC cppVar_45217 = (0 << 5) | cppVar_45216;
	cppVar_45217 = (cppVar_45217 & cppMask_un_8_);
	bool cppVar_45219 = (cppVar_45217 == 129);
	BIT_VEC cppVar_45220 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45221 = (cppVar_45220 << 3) | 1;
	cppVar_45221 = (cppVar_45221 & cppMask_un_5_);
	BIT_VEC cppVar_45222 = (0 << 5) | cppVar_45221;
	cppVar_45222 = (cppVar_45222 & cppMask_un_8_);
	bool cppVar_45224 = (cppVar_45222 == 130);
	BIT_VEC cppVar_45225 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45226 = (cppVar_45225 << 3) | 1;
	cppVar_45226 = (cppVar_45226 & cppMask_un_5_);
	BIT_VEC cppVar_45227 = (0 << 5) | cppVar_45226;
	cppVar_45227 = (cppVar_45227 & cppMask_un_8_);
	bool cppVar_45229 = (cppVar_45227 == 131);
	BIT_VEC cppVar_45230 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45231 = (cppVar_45230 << 3) | 1;
	cppVar_45231 = (cppVar_45231 & cppMask_un_5_);
	BIT_VEC cppVar_45232 = (0 << 5) | cppVar_45231;
	cppVar_45232 = (cppVar_45232 & cppMask_un_8_);
	bool cppVar_45234 = (cppVar_45232 == 135);
	BIT_VEC cppVar_45235 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45236 = (cppVar_45235 << 3) | 1;
	cppVar_45236 = (cppVar_45236 & cppMask_un_5_);
	BIT_VEC cppVar_45237 = (0 << 5) | cppVar_45236;
	cppVar_45237 = (cppVar_45237 & cppMask_un_8_);
	bool cppVar_45239 = (cppVar_45237 == 136);
	BIT_VEC cppVar_45240 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45241 = (cppVar_45240 << 3) | 1;
	cppVar_45241 = (cppVar_45241 & cppMask_un_5_);
	BIT_VEC cppVar_45242 = (0 << 5) | cppVar_45241;
	cppVar_45242 = (cppVar_45242 & cppMask_un_8_);
	bool cppVar_45244 = (cppVar_45242 == 137);
	BIT_VEC cppVar_45245 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45246 = (cppVar_45245 << 3) | 1;
	cppVar_45246 = (cppVar_45246 & cppMask_un_5_);
	BIT_VEC cppVar_45247 = (0 << 5) | cppVar_45246;
	cppVar_45247 = (cppVar_45247 & cppMask_un_8_);
	bool cppVar_45249 = (cppVar_45247 == 138);
	BIT_VEC cppVar_45250 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45251 = (cppVar_45250 << 3) | 1;
	cppVar_45251 = (cppVar_45251 & cppMask_un_5_);
	BIT_VEC cppVar_45252 = (0 << 5) | cppVar_45251;
	cppVar_45252 = (cppVar_45252 & cppMask_un_8_);
	bool cppVar_45254 = (cppVar_45252 == 140);
	BIT_VEC cppVar_45255 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45256 = (cppVar_45255 << 3) | 1;
	cppVar_45256 = (cppVar_45256 & cppMask_un_5_);
	BIT_VEC cppVar_45257 = (0 << 5) | cppVar_45256;
	cppVar_45257 = (cppVar_45257 & cppMask_un_8_);
	bool cppVar_45259 = (cppVar_45257 == 139);
	BIT_VEC cppVar_45260 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45261 = (cppVar_45260 << 3) | 1;
	cppVar_45261 = (cppVar_45261 & cppMask_un_5_);
	BIT_VEC cppVar_45262 = (0 << 5) | cppVar_45261;
	cppVar_45262 = (cppVar_45262 & cppMask_un_8_);
	bool cppVar_45264 = (cppVar_45262 == 141);
	BIT_VEC cppVar_45265 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45266 = (cppVar_45265 << 3) | 1;
	cppVar_45266 = (cppVar_45266 & cppMask_un_5_);
	BIT_VEC cppVar_45267 = (0 << 5) | cppVar_45266;
	cppVar_45267 = (cppVar_45267 & cppMask_un_8_);
	bool cppVar_45269 = (cppVar_45267 == 144);
	BIT_VEC cppVar_45270 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45271 = (cppVar_45270 << 3) | 1;
	cppVar_45271 = (cppVar_45271 & cppMask_un_5_);
	BIT_VEC cppVar_45272 = (0 << 5) | cppVar_45271;
	cppVar_45272 = (cppVar_45272 & cppMask_un_8_);
	bool cppVar_45274 = (cppVar_45272 == 152);
	BIT_VEC cppVar_45275 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45276 = (cppVar_45275 << 3) | 1;
	cppVar_45276 = (cppVar_45276 & cppMask_un_5_);
	BIT_VEC cppVar_45277 = (0 << 5) | cppVar_45276;
	cppVar_45277 = (cppVar_45277 & cppMask_un_8_);
	bool cppVar_45279 = (cppVar_45277 == 153);
	BIT_VEC cppVar_45280 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45281 = (cppVar_45280 << 3) | 1;
	cppVar_45281 = (cppVar_45281 & cppMask_un_5_);
	BIT_VEC cppVar_45282 = (0 << 5) | cppVar_45281;
	cppVar_45282 = (cppVar_45282 & cppMask_un_8_);
	bool cppVar_45284 = (cppVar_45282 == 160);
	BIT_VEC cppVar_45285 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45286 = (cppVar_45285 << 3) | 1;
	cppVar_45286 = (cppVar_45286 & cppMask_un_5_);
	BIT_VEC cppVar_45287 = (0 << 5) | cppVar_45286;
	cppVar_45287 = (cppVar_45287 & cppMask_un_8_);
	bool cppVar_45289 = (cppVar_45287 == 168);
	BIT_VEC cppVar_45290 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45291 = (cppVar_45290 << 3) | 1;
	cppVar_45291 = (cppVar_45291 & cppMask_un_5_);
	BIT_VEC cppVar_45292 = (0 << 5) | cppVar_45291;
	cppVar_45292 = (cppVar_45292 & cppMask_un_8_);
	bool cppVar_45294 = (cppVar_45292 == 176);
	BIT_VEC cppVar_45295 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45296 = (cppVar_45295 << 3) | 1;
	cppVar_45296 = (cppVar_45296 & cppMask_un_5_);
	BIT_VEC cppVar_45297 = (0 << 5) | cppVar_45296;
	cppVar_45297 = (cppVar_45297 & cppMask_un_8_);
	bool cppVar_45299 = (cppVar_45297 == 184);
	BIT_VEC cppVar_45300 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45301 = (cppVar_45300 << 3) | 1;
	cppVar_45301 = (cppVar_45301 & cppMask_un_5_);
	BIT_VEC cppVar_45302 = (0 << 5) | cppVar_45301;
	cppVar_45302 = (cppVar_45302 & cppMask_un_8_);
	bool cppVar_45304 = (cppVar_45302 == 208);
	BIT_VEC cppVar_45305 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45306 = (cppVar_45305 << 3) | 1;
	cppVar_45306 = (cppVar_45306 & cppMask_un_5_);
	BIT_VEC cppVar_45307 = (0 << 5) | cppVar_45306;
	cppVar_45307 = (cppVar_45307 & cppMask_un_8_);
	bool cppVar_45309 = (cppVar_45307 == 224);
	BIT_VEC cppVar_45310 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45311 = (cppVar_45310 << 3) | 1;
	cppVar_45311 = (cppVar_45311 & cppMask_un_5_);
	BIT_VEC cppVar_45312 = (0 << 5) | cppVar_45311;
	cppVar_45312 = (cppVar_45312 & cppMask_un_8_);
	bool cppVar_45314 = (cppVar_45312 == 240);
	BIT_VEC cppVar_45316 = (cppVar_45314) ? B : 0;
	BIT_VEC cppVar_45317 = (cppVar_45309) ? ACC : cppVar_45316;
	BIT_VEC cppVar_45318 = (cppVar_45304) ? PSW : cppVar_45317;
	BIT_VEC cppVar_45319 = (cppVar_45299) ? IP : cppVar_45318;
	BIT_VEC cppVar_45320 = (cppVar_45294) ? P3 : cppVar_45319;
	BIT_VEC cppVar_45321 = (cppVar_45289) ? IE : cppVar_45320;
	BIT_VEC cppVar_45322 = (cppVar_45284) ? P2 : cppVar_45321;
	BIT_VEC cppVar_45323 = (cppVar_45279) ? SBUF : cppVar_45322;
	BIT_VEC cppVar_45324 = (cppVar_45274) ? SCON : cppVar_45323;
	BIT_VEC cppVar_45325 = (cppVar_45269) ? P1 : cppVar_45324;
	BIT_VEC cppVar_45326 = (cppVar_45264) ? TH1 : cppVar_45325;
	BIT_VEC cppVar_45327 = (cppVar_45259) ? TL1 : cppVar_45326;
	BIT_VEC cppVar_45328 = (cppVar_45254) ? TH0 : cppVar_45327;
	BIT_VEC cppVar_45329 = (cppVar_45249) ? TL0 : cppVar_45328;
	BIT_VEC cppVar_45330 = (cppVar_45244) ? TMOD : cppVar_45329;
	BIT_VEC cppVar_45331 = (cppVar_45239) ? TCON : cppVar_45330;
	BIT_VEC cppVar_45332 = (cppVar_45234) ? PCON : cppVar_45331;
	BIT_VEC cppVar_45333 = (cppVar_45229) ? DPH : cppVar_45332;
	BIT_VEC cppVar_45334 = (cppVar_45224) ? DPL : cppVar_45333;
	BIT_VEC cppVar_45335 = (cppVar_45219) ? SP : cppVar_45334;
	BIT_VEC cppVar_45336 = (cppVar_45214) ? P0 : cppVar_45335;
	BIT_VEC cppVar_45337 = (cppVar_45205) ? cppVar_45209 : cppVar_45336;
	BIT_VEC cppVar_45338 = (cppVar_45197) ? cppVar_45337 : PCON;
	BIT_VEC cppVar_45339 = ROM.rd(PC);
	bool cppVar_45341 = (cppVar_45339 == 136);
	BIT_VEC cppVar_45343 = PC + 1;
	cppVar_45343 = (cppVar_45343 & cppMask_un_16_);
	BIT_VEC cppVar_45344 = ROM.rd(cppVar_45343);
	bool cppVar_45346 = (cppVar_45344 == 135);
	BIT_VEC cppVar_45348 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45350 = (cppVar_45348 << 3) | 0;
	cppVar_45350 = (cppVar_45350 & cppMask_un_5_);
	BIT_VEC cppVar_45351 = (0 << 5) | cppVar_45350;
	cppVar_45351 = (cppVar_45351 & cppMask_un_8_);
	BIT_VEC cppVar_45352 = (cppVar_45351 >> 7) & cppMask_un_1_;
	bool cppVar_45354 = (cppVar_45352 == 0);
	BIT_VEC cppVar_45355 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45356 = (cppVar_45355 << 3) | 0;
	cppVar_45356 = (cppVar_45356 & cppMask_un_5_);
	BIT_VEC cppVar_45357 = (0 << 5) | cppVar_45356;
	cppVar_45357 = (cppVar_45357 & cppMask_un_8_);
	BIT_VEC cppVar_45358 = IRAM.rd(cppVar_45357);
	BIT_VEC cppVar_45359 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45360 = (cppVar_45359 << 3) | 0;
	cppVar_45360 = (cppVar_45360 & cppMask_un_5_);
	BIT_VEC cppVar_45361 = (0 << 5) | cppVar_45360;
	cppVar_45361 = (cppVar_45361 & cppMask_un_8_);
	bool cppVar_45363 = (cppVar_45361 == 128);
	BIT_VEC cppVar_45364 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45365 = (cppVar_45364 << 3) | 0;
	cppVar_45365 = (cppVar_45365 & cppMask_un_5_);
	BIT_VEC cppVar_45366 = (0 << 5) | cppVar_45365;
	cppVar_45366 = (cppVar_45366 & cppMask_un_8_);
	bool cppVar_45368 = (cppVar_45366 == 129);
	BIT_VEC cppVar_45369 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45370 = (cppVar_45369 << 3) | 0;
	cppVar_45370 = (cppVar_45370 & cppMask_un_5_);
	BIT_VEC cppVar_45371 = (0 << 5) | cppVar_45370;
	cppVar_45371 = (cppVar_45371 & cppMask_un_8_);
	bool cppVar_45373 = (cppVar_45371 == 130);
	BIT_VEC cppVar_45374 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45375 = (cppVar_45374 << 3) | 0;
	cppVar_45375 = (cppVar_45375 & cppMask_un_5_);
	BIT_VEC cppVar_45376 = (0 << 5) | cppVar_45375;
	cppVar_45376 = (cppVar_45376 & cppMask_un_8_);
	bool cppVar_45378 = (cppVar_45376 == 131);
	BIT_VEC cppVar_45379 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45380 = (cppVar_45379 << 3) | 0;
	cppVar_45380 = (cppVar_45380 & cppMask_un_5_);
	BIT_VEC cppVar_45381 = (0 << 5) | cppVar_45380;
	cppVar_45381 = (cppVar_45381 & cppMask_un_8_);
	bool cppVar_45383 = (cppVar_45381 == 135);
	BIT_VEC cppVar_45384 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45385 = (cppVar_45384 << 3) | 0;
	cppVar_45385 = (cppVar_45385 & cppMask_un_5_);
	BIT_VEC cppVar_45386 = (0 << 5) | cppVar_45385;
	cppVar_45386 = (cppVar_45386 & cppMask_un_8_);
	bool cppVar_45388 = (cppVar_45386 == 136);
	BIT_VEC cppVar_45389 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45390 = (cppVar_45389 << 3) | 0;
	cppVar_45390 = (cppVar_45390 & cppMask_un_5_);
	BIT_VEC cppVar_45391 = (0 << 5) | cppVar_45390;
	cppVar_45391 = (cppVar_45391 & cppMask_un_8_);
	bool cppVar_45393 = (cppVar_45391 == 137);
	BIT_VEC cppVar_45394 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45395 = (cppVar_45394 << 3) | 0;
	cppVar_45395 = (cppVar_45395 & cppMask_un_5_);
	BIT_VEC cppVar_45396 = (0 << 5) | cppVar_45395;
	cppVar_45396 = (cppVar_45396 & cppMask_un_8_);
	bool cppVar_45398 = (cppVar_45396 == 138);
	BIT_VEC cppVar_45399 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45400 = (cppVar_45399 << 3) | 0;
	cppVar_45400 = (cppVar_45400 & cppMask_un_5_);
	BIT_VEC cppVar_45401 = (0 << 5) | cppVar_45400;
	cppVar_45401 = (cppVar_45401 & cppMask_un_8_);
	bool cppVar_45403 = (cppVar_45401 == 140);
	BIT_VEC cppVar_45404 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45405 = (cppVar_45404 << 3) | 0;
	cppVar_45405 = (cppVar_45405 & cppMask_un_5_);
	BIT_VEC cppVar_45406 = (0 << 5) | cppVar_45405;
	cppVar_45406 = (cppVar_45406 & cppMask_un_8_);
	bool cppVar_45408 = (cppVar_45406 == 139);
	BIT_VEC cppVar_45409 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45410 = (cppVar_45409 << 3) | 0;
	cppVar_45410 = (cppVar_45410 & cppMask_un_5_);
	BIT_VEC cppVar_45411 = (0 << 5) | cppVar_45410;
	cppVar_45411 = (cppVar_45411 & cppMask_un_8_);
	bool cppVar_45413 = (cppVar_45411 == 141);
	BIT_VEC cppVar_45414 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45415 = (cppVar_45414 << 3) | 0;
	cppVar_45415 = (cppVar_45415 & cppMask_un_5_);
	BIT_VEC cppVar_45416 = (0 << 5) | cppVar_45415;
	cppVar_45416 = (cppVar_45416 & cppMask_un_8_);
	bool cppVar_45418 = (cppVar_45416 == 144);
	BIT_VEC cppVar_45419 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45420 = (cppVar_45419 << 3) | 0;
	cppVar_45420 = (cppVar_45420 & cppMask_un_5_);
	BIT_VEC cppVar_45421 = (0 << 5) | cppVar_45420;
	cppVar_45421 = (cppVar_45421 & cppMask_un_8_);
	bool cppVar_45423 = (cppVar_45421 == 152);
	BIT_VEC cppVar_45424 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45425 = (cppVar_45424 << 3) | 0;
	cppVar_45425 = (cppVar_45425 & cppMask_un_5_);
	BIT_VEC cppVar_45426 = (0 << 5) | cppVar_45425;
	cppVar_45426 = (cppVar_45426 & cppMask_un_8_);
	bool cppVar_45428 = (cppVar_45426 == 153);
	BIT_VEC cppVar_45429 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45430 = (cppVar_45429 << 3) | 0;
	cppVar_45430 = (cppVar_45430 & cppMask_un_5_);
	BIT_VEC cppVar_45431 = (0 << 5) | cppVar_45430;
	cppVar_45431 = (cppVar_45431 & cppMask_un_8_);
	bool cppVar_45433 = (cppVar_45431 == 160);
	BIT_VEC cppVar_45434 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45435 = (cppVar_45434 << 3) | 0;
	cppVar_45435 = (cppVar_45435 & cppMask_un_5_);
	BIT_VEC cppVar_45436 = (0 << 5) | cppVar_45435;
	cppVar_45436 = (cppVar_45436 & cppMask_un_8_);
	bool cppVar_45438 = (cppVar_45436 == 168);
	BIT_VEC cppVar_45439 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45440 = (cppVar_45439 << 3) | 0;
	cppVar_45440 = (cppVar_45440 & cppMask_un_5_);
	BIT_VEC cppVar_45441 = (0 << 5) | cppVar_45440;
	cppVar_45441 = (cppVar_45441 & cppMask_un_8_);
	bool cppVar_45443 = (cppVar_45441 == 176);
	BIT_VEC cppVar_45444 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45445 = (cppVar_45444 << 3) | 0;
	cppVar_45445 = (cppVar_45445 & cppMask_un_5_);
	BIT_VEC cppVar_45446 = (0 << 5) | cppVar_45445;
	cppVar_45446 = (cppVar_45446 & cppMask_un_8_);
	bool cppVar_45448 = (cppVar_45446 == 184);
	BIT_VEC cppVar_45449 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45450 = (cppVar_45449 << 3) | 0;
	cppVar_45450 = (cppVar_45450 & cppMask_un_5_);
	BIT_VEC cppVar_45451 = (0 << 5) | cppVar_45450;
	cppVar_45451 = (cppVar_45451 & cppMask_un_8_);
	bool cppVar_45453 = (cppVar_45451 == 208);
	BIT_VEC cppVar_45454 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45455 = (cppVar_45454 << 3) | 0;
	cppVar_45455 = (cppVar_45455 & cppMask_un_5_);
	BIT_VEC cppVar_45456 = (0 << 5) | cppVar_45455;
	cppVar_45456 = (cppVar_45456 & cppMask_un_8_);
	bool cppVar_45458 = (cppVar_45456 == 224);
	BIT_VEC cppVar_45459 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45460 = (cppVar_45459 << 3) | 0;
	cppVar_45460 = (cppVar_45460 & cppMask_un_5_);
	BIT_VEC cppVar_45461 = (0 << 5) | cppVar_45460;
	cppVar_45461 = (cppVar_45461 & cppMask_un_8_);
	bool cppVar_45463 = (cppVar_45461 == 240);
	BIT_VEC cppVar_45465 = (cppVar_45463) ? B : 0;
	BIT_VEC cppVar_45466 = (cppVar_45458) ? ACC : cppVar_45465;
	BIT_VEC cppVar_45467 = (cppVar_45453) ? PSW : cppVar_45466;
	BIT_VEC cppVar_45468 = (cppVar_45448) ? IP : cppVar_45467;
	BIT_VEC cppVar_45469 = (cppVar_45443) ? P3 : cppVar_45468;
	BIT_VEC cppVar_45470 = (cppVar_45438) ? IE : cppVar_45469;
	BIT_VEC cppVar_45471 = (cppVar_45433) ? P2 : cppVar_45470;
	BIT_VEC cppVar_45472 = (cppVar_45428) ? SBUF : cppVar_45471;
	BIT_VEC cppVar_45473 = (cppVar_45423) ? SCON : cppVar_45472;
	BIT_VEC cppVar_45474 = (cppVar_45418) ? P1 : cppVar_45473;
	BIT_VEC cppVar_45475 = (cppVar_45413) ? TH1 : cppVar_45474;
	BIT_VEC cppVar_45476 = (cppVar_45408) ? TL1 : cppVar_45475;
	BIT_VEC cppVar_45477 = (cppVar_45403) ? TH0 : cppVar_45476;
	BIT_VEC cppVar_45478 = (cppVar_45398) ? TL0 : cppVar_45477;
	BIT_VEC cppVar_45479 = (cppVar_45393) ? TMOD : cppVar_45478;
	BIT_VEC cppVar_45480 = (cppVar_45388) ? TCON : cppVar_45479;
	BIT_VEC cppVar_45481 = (cppVar_45383) ? PCON : cppVar_45480;
	BIT_VEC cppVar_45482 = (cppVar_45378) ? DPH : cppVar_45481;
	BIT_VEC cppVar_45483 = (cppVar_45373) ? DPL : cppVar_45482;
	BIT_VEC cppVar_45484 = (cppVar_45368) ? SP : cppVar_45483;
	BIT_VEC cppVar_45485 = (cppVar_45363) ? P0 : cppVar_45484;
	BIT_VEC cppVar_45486 = (cppVar_45354) ? cppVar_45358 : cppVar_45485;
	BIT_VEC cppVar_45487 = (cppVar_45346) ? cppVar_45486 : PCON;
	BIT_VEC cppVar_45488 = ROM.rd(PC);
	bool cppVar_45490 = (cppVar_45488 == 135);
	BIT_VEC cppVar_45492 = PC + 1;
	cppVar_45492 = (cppVar_45492 & cppMask_un_16_);
	BIT_VEC cppVar_45493 = ROM.rd(cppVar_45492);
	bool cppVar_45495 = (cppVar_45493 == 135);
	BIT_VEC cppVar_45497 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45499 = (cppVar_45497 << 3) | 1;
	cppVar_45499 = (cppVar_45499 & cppMask_un_5_);
	BIT_VEC cppVar_45500 = (0 << 5) | cppVar_45499;
	cppVar_45500 = (cppVar_45500 & cppMask_un_8_);
	BIT_VEC cppVar_45501 = IRAM.rd(cppVar_45500);
	BIT_VEC cppVar_45502 = IRAM.rd(cppVar_45501);
	BIT_VEC cppVar_45503 = (cppVar_45495) ? cppVar_45502 : PCON;
	BIT_VEC cppVar_45504 = ROM.rd(PC);
	bool cppVar_45506 = (cppVar_45504 == 134);
	BIT_VEC cppVar_45508 = PC + 1;
	cppVar_45508 = (cppVar_45508 & cppMask_un_16_);
	BIT_VEC cppVar_45509 = ROM.rd(cppVar_45508);
	bool cppVar_45511 = (cppVar_45509 == 135);
	BIT_VEC cppVar_45513 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_45515 = (cppVar_45513 << 3) | 0;
	cppVar_45515 = (cppVar_45515 & cppMask_un_5_);
	BIT_VEC cppVar_45516 = (0 << 5) | cppVar_45515;
	cppVar_45516 = (cppVar_45516 & cppMask_un_8_);
	BIT_VEC cppVar_45517 = IRAM.rd(cppVar_45516);
	BIT_VEC cppVar_45518 = IRAM.rd(cppVar_45517);
	BIT_VEC cppVar_45519 = (cppVar_45511) ? cppVar_45518 : PCON;
	BIT_VEC cppVar_45520 = ROM.rd(PC);
	bool cppVar_45522 = (cppVar_45520 == 133);
	BIT_VEC cppVar_45524 = PC + 2;
	cppVar_45524 = (cppVar_45524 & cppMask_un_16_);
	BIT_VEC cppVar_45525 = ROM.rd(cppVar_45524);
	bool cppVar_45527 = (cppVar_45525 == 135);
	BIT_VEC cppVar_45529 = PC + 1;
	cppVar_45529 = (cppVar_45529 & cppMask_un_16_);
	BIT_VEC cppVar_45530 = ROM.rd(cppVar_45529);
	BIT_VEC cppVar_45531 = (cppVar_45530 >> 7) & cppMask_un_1_;
	bool cppVar_45533 = (cppVar_45531 == 0);
	BIT_VEC cppVar_45534 = PC + 1;
	cppVar_45534 = (cppVar_45534 & cppMask_un_16_);
	BIT_VEC cppVar_45535 = ROM.rd(cppVar_45534);
	BIT_VEC cppVar_45536 = IRAM.rd(cppVar_45535);
	BIT_VEC cppVar_45537 = PC + 1;
	cppVar_45537 = (cppVar_45537 & cppMask_un_16_);
	BIT_VEC cppVar_45538 = ROM.rd(cppVar_45537);
	bool cppVar_45540 = (cppVar_45538 == 128);
	BIT_VEC cppVar_45541 = PC + 1;
	cppVar_45541 = (cppVar_45541 & cppMask_un_16_);
	BIT_VEC cppVar_45542 = ROM.rd(cppVar_45541);
	bool cppVar_45544 = (cppVar_45542 == 129);
	BIT_VEC cppVar_45545 = PC + 1;
	cppVar_45545 = (cppVar_45545 & cppMask_un_16_);
	BIT_VEC cppVar_45546 = ROM.rd(cppVar_45545);
	bool cppVar_45548 = (cppVar_45546 == 130);
	BIT_VEC cppVar_45549 = PC + 1;
	cppVar_45549 = (cppVar_45549 & cppMask_un_16_);
	BIT_VEC cppVar_45550 = ROM.rd(cppVar_45549);
	bool cppVar_45552 = (cppVar_45550 == 131);
	BIT_VEC cppVar_45553 = PC + 1;
	cppVar_45553 = (cppVar_45553 & cppMask_un_16_);
	BIT_VEC cppVar_45554 = ROM.rd(cppVar_45553);
	bool cppVar_45556 = (cppVar_45554 == 135);
	BIT_VEC cppVar_45557 = PC + 1;
	cppVar_45557 = (cppVar_45557 & cppMask_un_16_);
	BIT_VEC cppVar_45558 = ROM.rd(cppVar_45557);
	bool cppVar_45560 = (cppVar_45558 == 136);
	BIT_VEC cppVar_45561 = PC + 1;
	cppVar_45561 = (cppVar_45561 & cppMask_un_16_);
	BIT_VEC cppVar_45562 = ROM.rd(cppVar_45561);
	bool cppVar_45564 = (cppVar_45562 == 137);
	BIT_VEC cppVar_45565 = PC + 1;
	cppVar_45565 = (cppVar_45565 & cppMask_un_16_);
	BIT_VEC cppVar_45566 = ROM.rd(cppVar_45565);
	bool cppVar_45568 = (cppVar_45566 == 138);
	BIT_VEC cppVar_45569 = PC + 1;
	cppVar_45569 = (cppVar_45569 & cppMask_un_16_);
	BIT_VEC cppVar_45570 = ROM.rd(cppVar_45569);
	bool cppVar_45572 = (cppVar_45570 == 140);
	BIT_VEC cppVar_45573 = PC + 1;
	cppVar_45573 = (cppVar_45573 & cppMask_un_16_);
	BIT_VEC cppVar_45574 = ROM.rd(cppVar_45573);
	bool cppVar_45576 = (cppVar_45574 == 139);
	BIT_VEC cppVar_45577 = PC + 1;
	cppVar_45577 = (cppVar_45577 & cppMask_un_16_);
	BIT_VEC cppVar_45578 = ROM.rd(cppVar_45577);
	bool cppVar_45580 = (cppVar_45578 == 141);
	BIT_VEC cppVar_45581 = PC + 1;
	cppVar_45581 = (cppVar_45581 & cppMask_un_16_);
	BIT_VEC cppVar_45582 = ROM.rd(cppVar_45581);
	bool cppVar_45584 = (cppVar_45582 == 144);
	BIT_VEC cppVar_45585 = PC + 1;
	cppVar_45585 = (cppVar_45585 & cppMask_un_16_);
	BIT_VEC cppVar_45586 = ROM.rd(cppVar_45585);
	bool cppVar_45588 = (cppVar_45586 == 152);
	BIT_VEC cppVar_45589 = PC + 1;
	cppVar_45589 = (cppVar_45589 & cppMask_un_16_);
	BIT_VEC cppVar_45590 = ROM.rd(cppVar_45589);
	bool cppVar_45592 = (cppVar_45590 == 153);
	BIT_VEC cppVar_45593 = PC + 1;
	cppVar_45593 = (cppVar_45593 & cppMask_un_16_);
	BIT_VEC cppVar_45594 = ROM.rd(cppVar_45593);
	bool cppVar_45596 = (cppVar_45594 == 160);
	BIT_VEC cppVar_45597 = PC + 1;
	cppVar_45597 = (cppVar_45597 & cppMask_un_16_);
	BIT_VEC cppVar_45598 = ROM.rd(cppVar_45597);
	bool cppVar_45600 = (cppVar_45598 == 168);
	BIT_VEC cppVar_45601 = PC + 1;
	cppVar_45601 = (cppVar_45601 & cppMask_un_16_);
	BIT_VEC cppVar_45602 = ROM.rd(cppVar_45601);
	bool cppVar_45604 = (cppVar_45602 == 176);
	BIT_VEC cppVar_45605 = PC + 1;
	cppVar_45605 = (cppVar_45605 & cppMask_un_16_);
	BIT_VEC cppVar_45606 = ROM.rd(cppVar_45605);
	bool cppVar_45608 = (cppVar_45606 == 184);
	BIT_VEC cppVar_45609 = PC + 1;
	cppVar_45609 = (cppVar_45609 & cppMask_un_16_);
	BIT_VEC cppVar_45610 = ROM.rd(cppVar_45609);
	bool cppVar_45612 = (cppVar_45610 == 208);
	BIT_VEC cppVar_45613 = PC + 1;
	cppVar_45613 = (cppVar_45613 & cppMask_un_16_);
	BIT_VEC cppVar_45614 = ROM.rd(cppVar_45613);
	bool cppVar_45616 = (cppVar_45614 == 224);
	BIT_VEC cppVar_45617 = PC + 1;
	cppVar_45617 = (cppVar_45617 & cppMask_un_16_);
	BIT_VEC cppVar_45618 = ROM.rd(cppVar_45617);
	bool cppVar_45620 = (cppVar_45618 == 240);
	BIT_VEC cppVar_45622 = (cppVar_45620) ? B : 0;
	BIT_VEC cppVar_45623 = (cppVar_45616) ? ACC : cppVar_45622;
	BIT_VEC cppVar_45624 = (cppVar_45612) ? PSW : cppVar_45623;
	BIT_VEC cppVar_45625 = (cppVar_45608) ? IP : cppVar_45624;
	BIT_VEC cppVar_45626 = (cppVar_45604) ? P3 : cppVar_45625;
	BIT_VEC cppVar_45627 = (cppVar_45600) ? IE : cppVar_45626;
	BIT_VEC cppVar_45628 = (cppVar_45596) ? P2 : cppVar_45627;
	BIT_VEC cppVar_45629 = (cppVar_45592) ? SBUF : cppVar_45628;
	BIT_VEC cppVar_45630 = (cppVar_45588) ? SCON : cppVar_45629;
	BIT_VEC cppVar_45631 = (cppVar_45584) ? P1 : cppVar_45630;
	BIT_VEC cppVar_45632 = (cppVar_45580) ? TH1 : cppVar_45631;
	BIT_VEC cppVar_45633 = (cppVar_45576) ? TL1 : cppVar_45632;
	BIT_VEC cppVar_45634 = (cppVar_45572) ? TH0 : cppVar_45633;
	BIT_VEC cppVar_45635 = (cppVar_45568) ? TL0 : cppVar_45634;
	BIT_VEC cppVar_45636 = (cppVar_45564) ? TMOD : cppVar_45635;
	BIT_VEC cppVar_45637 = (cppVar_45560) ? TCON : cppVar_45636;
	BIT_VEC cppVar_45638 = (cppVar_45556) ? PCON : cppVar_45637;
	BIT_VEC cppVar_45639 = (cppVar_45552) ? DPH : cppVar_45638;
	BIT_VEC cppVar_45640 = (cppVar_45548) ? DPL : cppVar_45639;
	BIT_VEC cppVar_45641 = (cppVar_45544) ? SP : cppVar_45640;
	BIT_VEC cppVar_45642 = (cppVar_45540) ? P0 : cppVar_45641;
	BIT_VEC cppVar_45643 = (cppVar_45533) ? cppVar_45536 : cppVar_45642;
	BIT_VEC cppVar_45644 = (cppVar_45527) ? cppVar_45643 : PCON;
	BIT_VEC cppVar_45645 = ROM.rd(PC);
	bool cppVar_45647 = (cppVar_45645 == 117);
	BIT_VEC cppVar_45649 = PC + 1;
	cppVar_45649 = (cppVar_45649 & cppMask_un_16_);
	BIT_VEC cppVar_45650 = ROM.rd(cppVar_45649);
	bool cppVar_45652 = (cppVar_45650 == 135);
	BIT_VEC cppVar_45654 = PC + 2;
	cppVar_45654 = (cppVar_45654 & cppMask_un_16_);
	BIT_VEC cppVar_45655 = ROM.rd(cppVar_45654);
	BIT_VEC cppVar_45656 = (cppVar_45652) ? cppVar_45655 : PCON;
	BIT_VEC cppVar_45657 = ROM.rd(PC);
	bool cppVar_45659 = (cppVar_45657 == 99);
	BIT_VEC cppVar_45661 = PC + 1;
	cppVar_45661 = (cppVar_45661 & cppMask_un_16_);
	BIT_VEC cppVar_45662 = ROM.rd(cppVar_45661);
	bool cppVar_45664 = (cppVar_45662 == 135);
	BIT_VEC cppVar_45665 = PC + 1;
	cppVar_45665 = (cppVar_45665 & cppMask_un_16_);
	BIT_VEC cppVar_45666 = ROM.rd(cppVar_45665);
	BIT_VEC cppVar_45667 = (cppVar_45666 >> 7) & cppMask_un_1_;
	bool cppVar_45669 = (cppVar_45667 == 0);
	BIT_VEC cppVar_45670 = PC + 1;
	cppVar_45670 = (cppVar_45670 & cppMask_un_16_);
	BIT_VEC cppVar_45671 = ROM.rd(cppVar_45670);
	BIT_VEC cppVar_45672 = IRAM.rd(cppVar_45671);
	BIT_VEC cppVar_45673 = PC + 1;
	cppVar_45673 = (cppVar_45673 & cppMask_un_16_);
	BIT_VEC cppVar_45674 = ROM.rd(cppVar_45673);
	bool cppVar_45676 = (cppVar_45674 == 128);
	BIT_VEC cppVar_45677 = PC + 1;
	cppVar_45677 = (cppVar_45677 & cppMask_un_16_);
	BIT_VEC cppVar_45678 = ROM.rd(cppVar_45677);
	bool cppVar_45680 = (cppVar_45678 == 129);
	BIT_VEC cppVar_45681 = PC + 1;
	cppVar_45681 = (cppVar_45681 & cppMask_un_16_);
	BIT_VEC cppVar_45682 = ROM.rd(cppVar_45681);
	bool cppVar_45684 = (cppVar_45682 == 130);
	BIT_VEC cppVar_45685 = PC + 1;
	cppVar_45685 = (cppVar_45685 & cppMask_un_16_);
	BIT_VEC cppVar_45686 = ROM.rd(cppVar_45685);
	bool cppVar_45688 = (cppVar_45686 == 131);
	BIT_VEC cppVar_45689 = PC + 1;
	cppVar_45689 = (cppVar_45689 & cppMask_un_16_);
	BIT_VEC cppVar_45690 = ROM.rd(cppVar_45689);
	bool cppVar_45692 = (cppVar_45690 == 135);
	BIT_VEC cppVar_45693 = PC + 1;
	cppVar_45693 = (cppVar_45693 & cppMask_un_16_);
	BIT_VEC cppVar_45694 = ROM.rd(cppVar_45693);
	bool cppVar_45696 = (cppVar_45694 == 136);
	BIT_VEC cppVar_45697 = PC + 1;
	cppVar_45697 = (cppVar_45697 & cppMask_un_16_);
	BIT_VEC cppVar_45698 = ROM.rd(cppVar_45697);
	bool cppVar_45700 = (cppVar_45698 == 137);
	BIT_VEC cppVar_45701 = PC + 1;
	cppVar_45701 = (cppVar_45701 & cppMask_un_16_);
	BIT_VEC cppVar_45702 = ROM.rd(cppVar_45701);
	bool cppVar_45704 = (cppVar_45702 == 138);
	BIT_VEC cppVar_45705 = PC + 1;
	cppVar_45705 = (cppVar_45705 & cppMask_un_16_);
	BIT_VEC cppVar_45706 = ROM.rd(cppVar_45705);
	bool cppVar_45708 = (cppVar_45706 == 140);
	BIT_VEC cppVar_45709 = PC + 1;
	cppVar_45709 = (cppVar_45709 & cppMask_un_16_);
	BIT_VEC cppVar_45710 = ROM.rd(cppVar_45709);
	bool cppVar_45712 = (cppVar_45710 == 139);
	BIT_VEC cppVar_45713 = PC + 1;
	cppVar_45713 = (cppVar_45713 & cppMask_un_16_);
	BIT_VEC cppVar_45714 = ROM.rd(cppVar_45713);
	bool cppVar_45716 = (cppVar_45714 == 141);
	BIT_VEC cppVar_45717 = PC + 1;
	cppVar_45717 = (cppVar_45717 & cppMask_un_16_);
	BIT_VEC cppVar_45718 = ROM.rd(cppVar_45717);
	bool cppVar_45720 = (cppVar_45718 == 144);
	BIT_VEC cppVar_45721 = PC + 1;
	cppVar_45721 = (cppVar_45721 & cppMask_un_16_);
	BIT_VEC cppVar_45722 = ROM.rd(cppVar_45721);
	bool cppVar_45724 = (cppVar_45722 == 152);
	BIT_VEC cppVar_45725 = PC + 1;
	cppVar_45725 = (cppVar_45725 & cppMask_un_16_);
	BIT_VEC cppVar_45726 = ROM.rd(cppVar_45725);
	bool cppVar_45728 = (cppVar_45726 == 153);
	BIT_VEC cppVar_45729 = PC + 1;
	cppVar_45729 = (cppVar_45729 & cppMask_un_16_);
	BIT_VEC cppVar_45730 = ROM.rd(cppVar_45729);
	bool cppVar_45732 = (cppVar_45730 == 160);
	BIT_VEC cppVar_45733 = PC + 1;
	cppVar_45733 = (cppVar_45733 & cppMask_un_16_);
	BIT_VEC cppVar_45734 = ROM.rd(cppVar_45733);
	bool cppVar_45736 = (cppVar_45734 == 168);
	BIT_VEC cppVar_45737 = PC + 1;
	cppVar_45737 = (cppVar_45737 & cppMask_un_16_);
	BIT_VEC cppVar_45738 = ROM.rd(cppVar_45737);
	bool cppVar_45740 = (cppVar_45738 == 176);
	BIT_VEC cppVar_45741 = PC + 1;
	cppVar_45741 = (cppVar_45741 & cppMask_un_16_);
	BIT_VEC cppVar_45742 = ROM.rd(cppVar_45741);
	bool cppVar_45744 = (cppVar_45742 == 184);
	BIT_VEC cppVar_45745 = PC + 1;
	cppVar_45745 = (cppVar_45745 & cppMask_un_16_);
	BIT_VEC cppVar_45746 = ROM.rd(cppVar_45745);
	bool cppVar_45748 = (cppVar_45746 == 208);
	BIT_VEC cppVar_45749 = PC + 1;
	cppVar_45749 = (cppVar_45749 & cppMask_un_16_);
	BIT_VEC cppVar_45750 = ROM.rd(cppVar_45749);
	bool cppVar_45752 = (cppVar_45750 == 224);
	BIT_VEC cppVar_45753 = PC + 1;
	cppVar_45753 = (cppVar_45753 & cppMask_un_16_);
	BIT_VEC cppVar_45754 = ROM.rd(cppVar_45753);
	bool cppVar_45756 = (cppVar_45754 == 240);
	BIT_VEC cppVar_45758 = (cppVar_45756) ? B : 0;
	BIT_VEC cppVar_45759 = (cppVar_45752) ? ACC : cppVar_45758;
	BIT_VEC cppVar_45760 = (cppVar_45748) ? PSW : cppVar_45759;
	BIT_VEC cppVar_45761 = (cppVar_45744) ? IP : cppVar_45760;
	BIT_VEC cppVar_45762 = (cppVar_45740) ? P3 : cppVar_45761;
	BIT_VEC cppVar_45763 = (cppVar_45736) ? IE : cppVar_45762;
	BIT_VEC cppVar_45764 = (cppVar_45732) ? P2 : cppVar_45763;
	BIT_VEC cppVar_45765 = (cppVar_45728) ? SBUF : cppVar_45764;
	BIT_VEC cppVar_45766 = (cppVar_45724) ? SCON : cppVar_45765;
	BIT_VEC cppVar_45767 = (cppVar_45720) ? P1 : cppVar_45766;
	BIT_VEC cppVar_45768 = (cppVar_45716) ? TH1 : cppVar_45767;
	BIT_VEC cppVar_45769 = (cppVar_45712) ? TL1 : cppVar_45768;
	BIT_VEC cppVar_45770 = (cppVar_45708) ? TH0 : cppVar_45769;
	BIT_VEC cppVar_45771 = (cppVar_45704) ? TL0 : cppVar_45770;
	BIT_VEC cppVar_45772 = (cppVar_45700) ? TMOD : cppVar_45771;
	BIT_VEC cppVar_45773 = (cppVar_45696) ? TCON : cppVar_45772;
	BIT_VEC cppVar_45774 = (cppVar_45692) ? PCON : cppVar_45773;
	BIT_VEC cppVar_45775 = (cppVar_45688) ? DPH : cppVar_45774;
	BIT_VEC cppVar_45776 = (cppVar_45684) ? DPL : cppVar_45775;
	BIT_VEC cppVar_45777 = (cppVar_45680) ? SP : cppVar_45776;
	BIT_VEC cppVar_45778 = (cppVar_45676) ? P0 : cppVar_45777;
	BIT_VEC cppVar_45779 = (cppVar_45669) ? cppVar_45672 : cppVar_45778;
	BIT_VEC cppVar_45781 = PC + 2;
	cppVar_45781 = (cppVar_45781 & cppMask_un_16_);
	BIT_VEC cppVar_45782 = ROM.rd(cppVar_45781);
	BIT_VEC cppVar_45783 = cppVar_45779 ^ cppVar_45782;
	BIT_VEC cppVar_45784 = (cppVar_45664) ? cppVar_45783 : PCON;
	BIT_VEC cppVar_45785 = ROM.rd(PC);
	bool cppVar_45787 = (cppVar_45785 == 98);
	BIT_VEC cppVar_45789 = PC + 1;
	cppVar_45789 = (cppVar_45789 & cppMask_un_16_);
	BIT_VEC cppVar_45790 = ROM.rd(cppVar_45789);
	bool cppVar_45792 = (cppVar_45790 == 135);
	BIT_VEC cppVar_45793 = PC + 1;
	cppVar_45793 = (cppVar_45793 & cppMask_un_16_);
	BIT_VEC cppVar_45794 = ROM.rd(cppVar_45793);
	BIT_VEC cppVar_45795 = (cppVar_45794 >> 7) & cppMask_un_1_;
	bool cppVar_45797 = (cppVar_45795 == 0);
	BIT_VEC cppVar_45798 = PC + 1;
	cppVar_45798 = (cppVar_45798 & cppMask_un_16_);
	BIT_VEC cppVar_45799 = ROM.rd(cppVar_45798);
	BIT_VEC cppVar_45800 = IRAM.rd(cppVar_45799);
	BIT_VEC cppVar_45801 = PC + 1;
	cppVar_45801 = (cppVar_45801 & cppMask_un_16_);
	BIT_VEC cppVar_45802 = ROM.rd(cppVar_45801);
	bool cppVar_45804 = (cppVar_45802 == 128);
	BIT_VEC cppVar_45805 = PC + 1;
	cppVar_45805 = (cppVar_45805 & cppMask_un_16_);
	BIT_VEC cppVar_45806 = ROM.rd(cppVar_45805);
	bool cppVar_45808 = (cppVar_45806 == 129);
	BIT_VEC cppVar_45809 = PC + 1;
	cppVar_45809 = (cppVar_45809 & cppMask_un_16_);
	BIT_VEC cppVar_45810 = ROM.rd(cppVar_45809);
	bool cppVar_45812 = (cppVar_45810 == 130);
	BIT_VEC cppVar_45813 = PC + 1;
	cppVar_45813 = (cppVar_45813 & cppMask_un_16_);
	BIT_VEC cppVar_45814 = ROM.rd(cppVar_45813);
	bool cppVar_45816 = (cppVar_45814 == 131);
	BIT_VEC cppVar_45817 = PC + 1;
	cppVar_45817 = (cppVar_45817 & cppMask_un_16_);
	BIT_VEC cppVar_45818 = ROM.rd(cppVar_45817);
	bool cppVar_45820 = (cppVar_45818 == 135);
	BIT_VEC cppVar_45821 = PC + 1;
	cppVar_45821 = (cppVar_45821 & cppMask_un_16_);
	BIT_VEC cppVar_45822 = ROM.rd(cppVar_45821);
	bool cppVar_45824 = (cppVar_45822 == 136);
	BIT_VEC cppVar_45825 = PC + 1;
	cppVar_45825 = (cppVar_45825 & cppMask_un_16_);
	BIT_VEC cppVar_45826 = ROM.rd(cppVar_45825);
	bool cppVar_45828 = (cppVar_45826 == 137);
	BIT_VEC cppVar_45829 = PC + 1;
	cppVar_45829 = (cppVar_45829 & cppMask_un_16_);
	BIT_VEC cppVar_45830 = ROM.rd(cppVar_45829);
	bool cppVar_45832 = (cppVar_45830 == 138);
	BIT_VEC cppVar_45833 = PC + 1;
	cppVar_45833 = (cppVar_45833 & cppMask_un_16_);
	BIT_VEC cppVar_45834 = ROM.rd(cppVar_45833);
	bool cppVar_45836 = (cppVar_45834 == 140);
	BIT_VEC cppVar_45837 = PC + 1;
	cppVar_45837 = (cppVar_45837 & cppMask_un_16_);
	BIT_VEC cppVar_45838 = ROM.rd(cppVar_45837);
	bool cppVar_45840 = (cppVar_45838 == 139);
	BIT_VEC cppVar_45841 = PC + 1;
	cppVar_45841 = (cppVar_45841 & cppMask_un_16_);
	BIT_VEC cppVar_45842 = ROM.rd(cppVar_45841);
	bool cppVar_45844 = (cppVar_45842 == 141);
	BIT_VEC cppVar_45845 = PC + 1;
	cppVar_45845 = (cppVar_45845 & cppMask_un_16_);
	BIT_VEC cppVar_45846 = ROM.rd(cppVar_45845);
	bool cppVar_45848 = (cppVar_45846 == 144);
	BIT_VEC cppVar_45849 = PC + 1;
	cppVar_45849 = (cppVar_45849 & cppMask_un_16_);
	BIT_VEC cppVar_45850 = ROM.rd(cppVar_45849);
	bool cppVar_45852 = (cppVar_45850 == 152);
	BIT_VEC cppVar_45853 = PC + 1;
	cppVar_45853 = (cppVar_45853 & cppMask_un_16_);
	BIT_VEC cppVar_45854 = ROM.rd(cppVar_45853);
	bool cppVar_45856 = (cppVar_45854 == 153);
	BIT_VEC cppVar_45857 = PC + 1;
	cppVar_45857 = (cppVar_45857 & cppMask_un_16_);
	BIT_VEC cppVar_45858 = ROM.rd(cppVar_45857);
	bool cppVar_45860 = (cppVar_45858 == 160);
	BIT_VEC cppVar_45861 = PC + 1;
	cppVar_45861 = (cppVar_45861 & cppMask_un_16_);
	BIT_VEC cppVar_45862 = ROM.rd(cppVar_45861);
	bool cppVar_45864 = (cppVar_45862 == 168);
	BIT_VEC cppVar_45865 = PC + 1;
	cppVar_45865 = (cppVar_45865 & cppMask_un_16_);
	BIT_VEC cppVar_45866 = ROM.rd(cppVar_45865);
	bool cppVar_45868 = (cppVar_45866 == 176);
	BIT_VEC cppVar_45869 = PC + 1;
	cppVar_45869 = (cppVar_45869 & cppMask_un_16_);
	BIT_VEC cppVar_45870 = ROM.rd(cppVar_45869);
	bool cppVar_45872 = (cppVar_45870 == 184);
	BIT_VEC cppVar_45873 = PC + 1;
	cppVar_45873 = (cppVar_45873 & cppMask_un_16_);
	BIT_VEC cppVar_45874 = ROM.rd(cppVar_45873);
	bool cppVar_45876 = (cppVar_45874 == 208);
	BIT_VEC cppVar_45877 = PC + 1;
	cppVar_45877 = (cppVar_45877 & cppMask_un_16_);
	BIT_VEC cppVar_45878 = ROM.rd(cppVar_45877);
	bool cppVar_45880 = (cppVar_45878 == 224);
	BIT_VEC cppVar_45881 = PC + 1;
	cppVar_45881 = (cppVar_45881 & cppMask_un_16_);
	BIT_VEC cppVar_45882 = ROM.rd(cppVar_45881);
	bool cppVar_45884 = (cppVar_45882 == 240);
	BIT_VEC cppVar_45886 = (cppVar_45884) ? B : 0;
	BIT_VEC cppVar_45887 = (cppVar_45880) ? ACC : cppVar_45886;
	BIT_VEC cppVar_45888 = (cppVar_45876) ? PSW : cppVar_45887;
	BIT_VEC cppVar_45889 = (cppVar_45872) ? IP : cppVar_45888;
	BIT_VEC cppVar_45890 = (cppVar_45868) ? P3 : cppVar_45889;
	BIT_VEC cppVar_45891 = (cppVar_45864) ? IE : cppVar_45890;
	BIT_VEC cppVar_45892 = (cppVar_45860) ? P2 : cppVar_45891;
	BIT_VEC cppVar_45893 = (cppVar_45856) ? SBUF : cppVar_45892;
	BIT_VEC cppVar_45894 = (cppVar_45852) ? SCON : cppVar_45893;
	BIT_VEC cppVar_45895 = (cppVar_45848) ? P1 : cppVar_45894;
	BIT_VEC cppVar_45896 = (cppVar_45844) ? TH1 : cppVar_45895;
	BIT_VEC cppVar_45897 = (cppVar_45840) ? TL1 : cppVar_45896;
	BIT_VEC cppVar_45898 = (cppVar_45836) ? TH0 : cppVar_45897;
	BIT_VEC cppVar_45899 = (cppVar_45832) ? TL0 : cppVar_45898;
	BIT_VEC cppVar_45900 = (cppVar_45828) ? TMOD : cppVar_45899;
	BIT_VEC cppVar_45901 = (cppVar_45824) ? TCON : cppVar_45900;
	BIT_VEC cppVar_45902 = (cppVar_45820) ? PCON : cppVar_45901;
	BIT_VEC cppVar_45903 = (cppVar_45816) ? DPH : cppVar_45902;
	BIT_VEC cppVar_45904 = (cppVar_45812) ? DPL : cppVar_45903;
	BIT_VEC cppVar_45905 = (cppVar_45808) ? SP : cppVar_45904;
	BIT_VEC cppVar_45906 = (cppVar_45804) ? P0 : cppVar_45905;
	BIT_VEC cppVar_45907 = (cppVar_45797) ? cppVar_45800 : cppVar_45906;
	BIT_VEC cppVar_45908 = cppVar_45907 ^ ACC;
	BIT_VEC cppVar_45909 = (cppVar_45792) ? cppVar_45908 : PCON;
	BIT_VEC cppVar_45910 = ROM.rd(PC);
	bool cppVar_45912 = (cppVar_45910 == 83);
	BIT_VEC cppVar_45914 = PC + 1;
	cppVar_45914 = (cppVar_45914 & cppMask_un_16_);
	BIT_VEC cppVar_45915 = ROM.rd(cppVar_45914);
	bool cppVar_45917 = (cppVar_45915 == 135);
	BIT_VEC cppVar_45918 = PC + 1;
	cppVar_45918 = (cppVar_45918 & cppMask_un_16_);
	BIT_VEC cppVar_45919 = ROM.rd(cppVar_45918);
	BIT_VEC cppVar_45920 = (cppVar_45919 >> 7) & cppMask_un_1_;
	bool cppVar_45922 = (cppVar_45920 == 0);
	BIT_VEC cppVar_45923 = PC + 1;
	cppVar_45923 = (cppVar_45923 & cppMask_un_16_);
	BIT_VEC cppVar_45924 = ROM.rd(cppVar_45923);
	BIT_VEC cppVar_45925 = IRAM.rd(cppVar_45924);
	BIT_VEC cppVar_45926 = PC + 1;
	cppVar_45926 = (cppVar_45926 & cppMask_un_16_);
	BIT_VEC cppVar_45927 = ROM.rd(cppVar_45926);
	bool cppVar_45929 = (cppVar_45927 == 128);
	BIT_VEC cppVar_45930 = PC + 1;
	cppVar_45930 = (cppVar_45930 & cppMask_un_16_);
	BIT_VEC cppVar_45931 = ROM.rd(cppVar_45930);
	bool cppVar_45933 = (cppVar_45931 == 129);
	BIT_VEC cppVar_45934 = PC + 1;
	cppVar_45934 = (cppVar_45934 & cppMask_un_16_);
	BIT_VEC cppVar_45935 = ROM.rd(cppVar_45934);
	bool cppVar_45937 = (cppVar_45935 == 130);
	BIT_VEC cppVar_45938 = PC + 1;
	cppVar_45938 = (cppVar_45938 & cppMask_un_16_);
	BIT_VEC cppVar_45939 = ROM.rd(cppVar_45938);
	bool cppVar_45941 = (cppVar_45939 == 131);
	BIT_VEC cppVar_45942 = PC + 1;
	cppVar_45942 = (cppVar_45942 & cppMask_un_16_);
	BIT_VEC cppVar_45943 = ROM.rd(cppVar_45942);
	bool cppVar_45945 = (cppVar_45943 == 135);
	BIT_VEC cppVar_45946 = PC + 1;
	cppVar_45946 = (cppVar_45946 & cppMask_un_16_);
	BIT_VEC cppVar_45947 = ROM.rd(cppVar_45946);
	bool cppVar_45949 = (cppVar_45947 == 136);
	BIT_VEC cppVar_45950 = PC + 1;
	cppVar_45950 = (cppVar_45950 & cppMask_un_16_);
	BIT_VEC cppVar_45951 = ROM.rd(cppVar_45950);
	bool cppVar_45953 = (cppVar_45951 == 137);
	BIT_VEC cppVar_45954 = PC + 1;
	cppVar_45954 = (cppVar_45954 & cppMask_un_16_);
	BIT_VEC cppVar_45955 = ROM.rd(cppVar_45954);
	bool cppVar_45957 = (cppVar_45955 == 138);
	BIT_VEC cppVar_45958 = PC + 1;
	cppVar_45958 = (cppVar_45958 & cppMask_un_16_);
	BIT_VEC cppVar_45959 = ROM.rd(cppVar_45958);
	bool cppVar_45961 = (cppVar_45959 == 140);
	BIT_VEC cppVar_45962 = PC + 1;
	cppVar_45962 = (cppVar_45962 & cppMask_un_16_);
	BIT_VEC cppVar_45963 = ROM.rd(cppVar_45962);
	bool cppVar_45965 = (cppVar_45963 == 139);
	BIT_VEC cppVar_45966 = PC + 1;
	cppVar_45966 = (cppVar_45966 & cppMask_un_16_);
	BIT_VEC cppVar_45967 = ROM.rd(cppVar_45966);
	bool cppVar_45969 = (cppVar_45967 == 141);
	BIT_VEC cppVar_45970 = PC + 1;
	cppVar_45970 = (cppVar_45970 & cppMask_un_16_);
	BIT_VEC cppVar_45971 = ROM.rd(cppVar_45970);
	bool cppVar_45973 = (cppVar_45971 == 144);
	BIT_VEC cppVar_45974 = PC + 1;
	cppVar_45974 = (cppVar_45974 & cppMask_un_16_);
	BIT_VEC cppVar_45975 = ROM.rd(cppVar_45974);
	bool cppVar_45977 = (cppVar_45975 == 152);
	BIT_VEC cppVar_45978 = PC + 1;
	cppVar_45978 = (cppVar_45978 & cppMask_un_16_);
	BIT_VEC cppVar_45979 = ROM.rd(cppVar_45978);
	bool cppVar_45981 = (cppVar_45979 == 153);
	BIT_VEC cppVar_45982 = PC + 1;
	cppVar_45982 = (cppVar_45982 & cppMask_un_16_);
	BIT_VEC cppVar_45983 = ROM.rd(cppVar_45982);
	bool cppVar_45985 = (cppVar_45983 == 160);
	BIT_VEC cppVar_45986 = PC + 1;
	cppVar_45986 = (cppVar_45986 & cppMask_un_16_);
	BIT_VEC cppVar_45987 = ROM.rd(cppVar_45986);
	bool cppVar_45989 = (cppVar_45987 == 168);
	BIT_VEC cppVar_45990 = PC + 1;
	cppVar_45990 = (cppVar_45990 & cppMask_un_16_);
	BIT_VEC cppVar_45991 = ROM.rd(cppVar_45990);
	bool cppVar_45993 = (cppVar_45991 == 176);
	BIT_VEC cppVar_45994 = PC + 1;
	cppVar_45994 = (cppVar_45994 & cppMask_un_16_);
	BIT_VEC cppVar_45995 = ROM.rd(cppVar_45994);
	bool cppVar_45997 = (cppVar_45995 == 184);
	BIT_VEC cppVar_45998 = PC + 1;
	cppVar_45998 = (cppVar_45998 & cppMask_un_16_);
	BIT_VEC cppVar_45999 = ROM.rd(cppVar_45998);
	bool cppVar_46001 = (cppVar_45999 == 208);
	BIT_VEC cppVar_46002 = PC + 1;
	cppVar_46002 = (cppVar_46002 & cppMask_un_16_);
	BIT_VEC cppVar_46003 = ROM.rd(cppVar_46002);
	bool cppVar_46005 = (cppVar_46003 == 224);
	BIT_VEC cppVar_46006 = PC + 1;
	cppVar_46006 = (cppVar_46006 & cppMask_un_16_);
	BIT_VEC cppVar_46007 = ROM.rd(cppVar_46006);
	bool cppVar_46009 = (cppVar_46007 == 240);
	BIT_VEC cppVar_46011 = (cppVar_46009) ? B : 0;
	BIT_VEC cppVar_46012 = (cppVar_46005) ? ACC : cppVar_46011;
	BIT_VEC cppVar_46013 = (cppVar_46001) ? PSW : cppVar_46012;
	BIT_VEC cppVar_46014 = (cppVar_45997) ? IP : cppVar_46013;
	BIT_VEC cppVar_46015 = (cppVar_45993) ? P3 : cppVar_46014;
	BIT_VEC cppVar_46016 = (cppVar_45989) ? IE : cppVar_46015;
	BIT_VEC cppVar_46017 = (cppVar_45985) ? P2 : cppVar_46016;
	BIT_VEC cppVar_46018 = (cppVar_45981) ? SBUF : cppVar_46017;
	BIT_VEC cppVar_46019 = (cppVar_45977) ? SCON : cppVar_46018;
	BIT_VEC cppVar_46020 = (cppVar_45973) ? P1 : cppVar_46019;
	BIT_VEC cppVar_46021 = (cppVar_45969) ? TH1 : cppVar_46020;
	BIT_VEC cppVar_46022 = (cppVar_45965) ? TL1 : cppVar_46021;
	BIT_VEC cppVar_46023 = (cppVar_45961) ? TH0 : cppVar_46022;
	BIT_VEC cppVar_46024 = (cppVar_45957) ? TL0 : cppVar_46023;
	BIT_VEC cppVar_46025 = (cppVar_45953) ? TMOD : cppVar_46024;
	BIT_VEC cppVar_46026 = (cppVar_45949) ? TCON : cppVar_46025;
	BIT_VEC cppVar_46027 = (cppVar_45945) ? PCON : cppVar_46026;
	BIT_VEC cppVar_46028 = (cppVar_45941) ? DPH : cppVar_46027;
	BIT_VEC cppVar_46029 = (cppVar_45937) ? DPL : cppVar_46028;
	BIT_VEC cppVar_46030 = (cppVar_45933) ? SP : cppVar_46029;
	BIT_VEC cppVar_46031 = (cppVar_45929) ? P0 : cppVar_46030;
	BIT_VEC cppVar_46032 = (cppVar_45922) ? cppVar_45925 : cppVar_46031;
	BIT_VEC cppVar_46034 = PC + 2;
	cppVar_46034 = (cppVar_46034 & cppMask_un_16_);
	BIT_VEC cppVar_46035 = ROM.rd(cppVar_46034);
	BIT_VEC cppVar_46036 = cppVar_46032 & cppVar_46035;
	BIT_VEC cppVar_46037 = (cppVar_45917) ? cppVar_46036 : PCON;
	BIT_VEC cppVar_46038 = ROM.rd(PC);
	bool cppVar_46040 = (cppVar_46038 == 82);
	BIT_VEC cppVar_46042 = PC + 1;
	cppVar_46042 = (cppVar_46042 & cppMask_un_16_);
	BIT_VEC cppVar_46043 = ROM.rd(cppVar_46042);
	bool cppVar_46045 = (cppVar_46043 == 135);
	BIT_VEC cppVar_46046 = PC + 1;
	cppVar_46046 = (cppVar_46046 & cppMask_un_16_);
	BIT_VEC cppVar_46047 = ROM.rd(cppVar_46046);
	BIT_VEC cppVar_46048 = (cppVar_46047 >> 7) & cppMask_un_1_;
	bool cppVar_46050 = (cppVar_46048 == 0);
	BIT_VEC cppVar_46051 = PC + 1;
	cppVar_46051 = (cppVar_46051 & cppMask_un_16_);
	BIT_VEC cppVar_46052 = ROM.rd(cppVar_46051);
	BIT_VEC cppVar_46053 = IRAM.rd(cppVar_46052);
	BIT_VEC cppVar_46054 = PC + 1;
	cppVar_46054 = (cppVar_46054 & cppMask_un_16_);
	BIT_VEC cppVar_46055 = ROM.rd(cppVar_46054);
	bool cppVar_46057 = (cppVar_46055 == 128);
	BIT_VEC cppVar_46058 = PC + 1;
	cppVar_46058 = (cppVar_46058 & cppMask_un_16_);
	BIT_VEC cppVar_46059 = ROM.rd(cppVar_46058);
	bool cppVar_46061 = (cppVar_46059 == 129);
	BIT_VEC cppVar_46062 = PC + 1;
	cppVar_46062 = (cppVar_46062 & cppMask_un_16_);
	BIT_VEC cppVar_46063 = ROM.rd(cppVar_46062);
	bool cppVar_46065 = (cppVar_46063 == 130);
	BIT_VEC cppVar_46066 = PC + 1;
	cppVar_46066 = (cppVar_46066 & cppMask_un_16_);
	BIT_VEC cppVar_46067 = ROM.rd(cppVar_46066);
	bool cppVar_46069 = (cppVar_46067 == 131);
	BIT_VEC cppVar_46070 = PC + 1;
	cppVar_46070 = (cppVar_46070 & cppMask_un_16_);
	BIT_VEC cppVar_46071 = ROM.rd(cppVar_46070);
	bool cppVar_46073 = (cppVar_46071 == 135);
	BIT_VEC cppVar_46074 = PC + 1;
	cppVar_46074 = (cppVar_46074 & cppMask_un_16_);
	BIT_VEC cppVar_46075 = ROM.rd(cppVar_46074);
	bool cppVar_46077 = (cppVar_46075 == 136);
	BIT_VEC cppVar_46078 = PC + 1;
	cppVar_46078 = (cppVar_46078 & cppMask_un_16_);
	BIT_VEC cppVar_46079 = ROM.rd(cppVar_46078);
	bool cppVar_46081 = (cppVar_46079 == 137);
	BIT_VEC cppVar_46082 = PC + 1;
	cppVar_46082 = (cppVar_46082 & cppMask_un_16_);
	BIT_VEC cppVar_46083 = ROM.rd(cppVar_46082);
	bool cppVar_46085 = (cppVar_46083 == 138);
	BIT_VEC cppVar_46086 = PC + 1;
	cppVar_46086 = (cppVar_46086 & cppMask_un_16_);
	BIT_VEC cppVar_46087 = ROM.rd(cppVar_46086);
	bool cppVar_46089 = (cppVar_46087 == 140);
	BIT_VEC cppVar_46090 = PC + 1;
	cppVar_46090 = (cppVar_46090 & cppMask_un_16_);
	BIT_VEC cppVar_46091 = ROM.rd(cppVar_46090);
	bool cppVar_46093 = (cppVar_46091 == 139);
	BIT_VEC cppVar_46094 = PC + 1;
	cppVar_46094 = (cppVar_46094 & cppMask_un_16_);
	BIT_VEC cppVar_46095 = ROM.rd(cppVar_46094);
	bool cppVar_46097 = (cppVar_46095 == 141);
	BIT_VEC cppVar_46098 = PC + 1;
	cppVar_46098 = (cppVar_46098 & cppMask_un_16_);
	BIT_VEC cppVar_46099 = ROM.rd(cppVar_46098);
	bool cppVar_46101 = (cppVar_46099 == 144);
	BIT_VEC cppVar_46102 = PC + 1;
	cppVar_46102 = (cppVar_46102 & cppMask_un_16_);
	BIT_VEC cppVar_46103 = ROM.rd(cppVar_46102);
	bool cppVar_46105 = (cppVar_46103 == 152);
	BIT_VEC cppVar_46106 = PC + 1;
	cppVar_46106 = (cppVar_46106 & cppMask_un_16_);
	BIT_VEC cppVar_46107 = ROM.rd(cppVar_46106);
	bool cppVar_46109 = (cppVar_46107 == 153);
	BIT_VEC cppVar_46110 = PC + 1;
	cppVar_46110 = (cppVar_46110 & cppMask_un_16_);
	BIT_VEC cppVar_46111 = ROM.rd(cppVar_46110);
	bool cppVar_46113 = (cppVar_46111 == 160);
	BIT_VEC cppVar_46114 = PC + 1;
	cppVar_46114 = (cppVar_46114 & cppMask_un_16_);
	BIT_VEC cppVar_46115 = ROM.rd(cppVar_46114);
	bool cppVar_46117 = (cppVar_46115 == 168);
	BIT_VEC cppVar_46118 = PC + 1;
	cppVar_46118 = (cppVar_46118 & cppMask_un_16_);
	BIT_VEC cppVar_46119 = ROM.rd(cppVar_46118);
	bool cppVar_46121 = (cppVar_46119 == 176);
	BIT_VEC cppVar_46122 = PC + 1;
	cppVar_46122 = (cppVar_46122 & cppMask_un_16_);
	BIT_VEC cppVar_46123 = ROM.rd(cppVar_46122);
	bool cppVar_46125 = (cppVar_46123 == 184);
	BIT_VEC cppVar_46126 = PC + 1;
	cppVar_46126 = (cppVar_46126 & cppMask_un_16_);
	BIT_VEC cppVar_46127 = ROM.rd(cppVar_46126);
	bool cppVar_46129 = (cppVar_46127 == 208);
	BIT_VEC cppVar_46130 = PC + 1;
	cppVar_46130 = (cppVar_46130 & cppMask_un_16_);
	BIT_VEC cppVar_46131 = ROM.rd(cppVar_46130);
	bool cppVar_46133 = (cppVar_46131 == 224);
	BIT_VEC cppVar_46134 = PC + 1;
	cppVar_46134 = (cppVar_46134 & cppMask_un_16_);
	BIT_VEC cppVar_46135 = ROM.rd(cppVar_46134);
	bool cppVar_46137 = (cppVar_46135 == 240);
	BIT_VEC cppVar_46139 = (cppVar_46137) ? B : 0;
	BIT_VEC cppVar_46140 = (cppVar_46133) ? ACC : cppVar_46139;
	BIT_VEC cppVar_46141 = (cppVar_46129) ? PSW : cppVar_46140;
	BIT_VEC cppVar_46142 = (cppVar_46125) ? IP : cppVar_46141;
	BIT_VEC cppVar_46143 = (cppVar_46121) ? P3 : cppVar_46142;
	BIT_VEC cppVar_46144 = (cppVar_46117) ? IE : cppVar_46143;
	BIT_VEC cppVar_46145 = (cppVar_46113) ? P2 : cppVar_46144;
	BIT_VEC cppVar_46146 = (cppVar_46109) ? SBUF : cppVar_46145;
	BIT_VEC cppVar_46147 = (cppVar_46105) ? SCON : cppVar_46146;
	BIT_VEC cppVar_46148 = (cppVar_46101) ? P1 : cppVar_46147;
	BIT_VEC cppVar_46149 = (cppVar_46097) ? TH1 : cppVar_46148;
	BIT_VEC cppVar_46150 = (cppVar_46093) ? TL1 : cppVar_46149;
	BIT_VEC cppVar_46151 = (cppVar_46089) ? TH0 : cppVar_46150;
	BIT_VEC cppVar_46152 = (cppVar_46085) ? TL0 : cppVar_46151;
	BIT_VEC cppVar_46153 = (cppVar_46081) ? TMOD : cppVar_46152;
	BIT_VEC cppVar_46154 = (cppVar_46077) ? TCON : cppVar_46153;
	BIT_VEC cppVar_46155 = (cppVar_46073) ? PCON : cppVar_46154;
	BIT_VEC cppVar_46156 = (cppVar_46069) ? DPH : cppVar_46155;
	BIT_VEC cppVar_46157 = (cppVar_46065) ? DPL : cppVar_46156;
	BIT_VEC cppVar_46158 = (cppVar_46061) ? SP : cppVar_46157;
	BIT_VEC cppVar_46159 = (cppVar_46057) ? P0 : cppVar_46158;
	BIT_VEC cppVar_46160 = (cppVar_46050) ? cppVar_46053 : cppVar_46159;
	BIT_VEC cppVar_46161 = cppVar_46160 & ACC;
	BIT_VEC cppVar_46162 = (cppVar_46045) ? cppVar_46161 : PCON;
	BIT_VEC cppVar_46163 = ROM.rd(PC);
	bool cppVar_46165 = (cppVar_46163 == 67);
	BIT_VEC cppVar_46167 = PC + 1;
	cppVar_46167 = (cppVar_46167 & cppMask_un_16_);
	BIT_VEC cppVar_46168 = ROM.rd(cppVar_46167);
	bool cppVar_46170 = (cppVar_46168 == 135);
	BIT_VEC cppVar_46171 = PC + 1;
	cppVar_46171 = (cppVar_46171 & cppMask_un_16_);
	BIT_VEC cppVar_46172 = ROM.rd(cppVar_46171);
	BIT_VEC cppVar_46173 = (cppVar_46172 >> 7) & cppMask_un_1_;
	bool cppVar_46175 = (cppVar_46173 == 0);
	BIT_VEC cppVar_46176 = PC + 1;
	cppVar_46176 = (cppVar_46176 & cppMask_un_16_);
	BIT_VEC cppVar_46177 = ROM.rd(cppVar_46176);
	BIT_VEC cppVar_46178 = IRAM.rd(cppVar_46177);
	BIT_VEC cppVar_46179 = PC + 1;
	cppVar_46179 = (cppVar_46179 & cppMask_un_16_);
	BIT_VEC cppVar_46180 = ROM.rd(cppVar_46179);
	bool cppVar_46182 = (cppVar_46180 == 128);
	BIT_VEC cppVar_46183 = PC + 1;
	cppVar_46183 = (cppVar_46183 & cppMask_un_16_);
	BIT_VEC cppVar_46184 = ROM.rd(cppVar_46183);
	bool cppVar_46186 = (cppVar_46184 == 129);
	BIT_VEC cppVar_46187 = PC + 1;
	cppVar_46187 = (cppVar_46187 & cppMask_un_16_);
	BIT_VEC cppVar_46188 = ROM.rd(cppVar_46187);
	bool cppVar_46190 = (cppVar_46188 == 130);
	BIT_VEC cppVar_46191 = PC + 1;
	cppVar_46191 = (cppVar_46191 & cppMask_un_16_);
	BIT_VEC cppVar_46192 = ROM.rd(cppVar_46191);
	bool cppVar_46194 = (cppVar_46192 == 131);
	BIT_VEC cppVar_46195 = PC + 1;
	cppVar_46195 = (cppVar_46195 & cppMask_un_16_);
	BIT_VEC cppVar_46196 = ROM.rd(cppVar_46195);
	bool cppVar_46198 = (cppVar_46196 == 135);
	BIT_VEC cppVar_46199 = PC + 1;
	cppVar_46199 = (cppVar_46199 & cppMask_un_16_);
	BIT_VEC cppVar_46200 = ROM.rd(cppVar_46199);
	bool cppVar_46202 = (cppVar_46200 == 136);
	BIT_VEC cppVar_46203 = PC + 1;
	cppVar_46203 = (cppVar_46203 & cppMask_un_16_);
	BIT_VEC cppVar_46204 = ROM.rd(cppVar_46203);
	bool cppVar_46206 = (cppVar_46204 == 137);
	BIT_VEC cppVar_46207 = PC + 1;
	cppVar_46207 = (cppVar_46207 & cppMask_un_16_);
	BIT_VEC cppVar_46208 = ROM.rd(cppVar_46207);
	bool cppVar_46210 = (cppVar_46208 == 138);
	BIT_VEC cppVar_46211 = PC + 1;
	cppVar_46211 = (cppVar_46211 & cppMask_un_16_);
	BIT_VEC cppVar_46212 = ROM.rd(cppVar_46211);
	bool cppVar_46214 = (cppVar_46212 == 140);
	BIT_VEC cppVar_46215 = PC + 1;
	cppVar_46215 = (cppVar_46215 & cppMask_un_16_);
	BIT_VEC cppVar_46216 = ROM.rd(cppVar_46215);
	bool cppVar_46218 = (cppVar_46216 == 139);
	BIT_VEC cppVar_46219 = PC + 1;
	cppVar_46219 = (cppVar_46219 & cppMask_un_16_);
	BIT_VEC cppVar_46220 = ROM.rd(cppVar_46219);
	bool cppVar_46222 = (cppVar_46220 == 141);
	BIT_VEC cppVar_46223 = PC + 1;
	cppVar_46223 = (cppVar_46223 & cppMask_un_16_);
	BIT_VEC cppVar_46224 = ROM.rd(cppVar_46223);
	bool cppVar_46226 = (cppVar_46224 == 144);
	BIT_VEC cppVar_46227 = PC + 1;
	cppVar_46227 = (cppVar_46227 & cppMask_un_16_);
	BIT_VEC cppVar_46228 = ROM.rd(cppVar_46227);
	bool cppVar_46230 = (cppVar_46228 == 152);
	BIT_VEC cppVar_46231 = PC + 1;
	cppVar_46231 = (cppVar_46231 & cppMask_un_16_);
	BIT_VEC cppVar_46232 = ROM.rd(cppVar_46231);
	bool cppVar_46234 = (cppVar_46232 == 153);
	BIT_VEC cppVar_46235 = PC + 1;
	cppVar_46235 = (cppVar_46235 & cppMask_un_16_);
	BIT_VEC cppVar_46236 = ROM.rd(cppVar_46235);
	bool cppVar_46238 = (cppVar_46236 == 160);
	BIT_VEC cppVar_46239 = PC + 1;
	cppVar_46239 = (cppVar_46239 & cppMask_un_16_);
	BIT_VEC cppVar_46240 = ROM.rd(cppVar_46239);
	bool cppVar_46242 = (cppVar_46240 == 168);
	BIT_VEC cppVar_46243 = PC + 1;
	cppVar_46243 = (cppVar_46243 & cppMask_un_16_);
	BIT_VEC cppVar_46244 = ROM.rd(cppVar_46243);
	bool cppVar_46246 = (cppVar_46244 == 176);
	BIT_VEC cppVar_46247 = PC + 1;
	cppVar_46247 = (cppVar_46247 & cppMask_un_16_);
	BIT_VEC cppVar_46248 = ROM.rd(cppVar_46247);
	bool cppVar_46250 = (cppVar_46248 == 184);
	BIT_VEC cppVar_46251 = PC + 1;
	cppVar_46251 = (cppVar_46251 & cppMask_un_16_);
	BIT_VEC cppVar_46252 = ROM.rd(cppVar_46251);
	bool cppVar_46254 = (cppVar_46252 == 208);
	BIT_VEC cppVar_46255 = PC + 1;
	cppVar_46255 = (cppVar_46255 & cppMask_un_16_);
	BIT_VEC cppVar_46256 = ROM.rd(cppVar_46255);
	bool cppVar_46258 = (cppVar_46256 == 224);
	BIT_VEC cppVar_46259 = PC + 1;
	cppVar_46259 = (cppVar_46259 & cppMask_un_16_);
	BIT_VEC cppVar_46260 = ROM.rd(cppVar_46259);
	bool cppVar_46262 = (cppVar_46260 == 240);
	BIT_VEC cppVar_46264 = (cppVar_46262) ? B : 0;
	BIT_VEC cppVar_46265 = (cppVar_46258) ? ACC : cppVar_46264;
	BIT_VEC cppVar_46266 = (cppVar_46254) ? PSW : cppVar_46265;
	BIT_VEC cppVar_46267 = (cppVar_46250) ? IP : cppVar_46266;
	BIT_VEC cppVar_46268 = (cppVar_46246) ? P3 : cppVar_46267;
	BIT_VEC cppVar_46269 = (cppVar_46242) ? IE : cppVar_46268;
	BIT_VEC cppVar_46270 = (cppVar_46238) ? P2 : cppVar_46269;
	BIT_VEC cppVar_46271 = (cppVar_46234) ? SBUF : cppVar_46270;
	BIT_VEC cppVar_46272 = (cppVar_46230) ? SCON : cppVar_46271;
	BIT_VEC cppVar_46273 = (cppVar_46226) ? P1 : cppVar_46272;
	BIT_VEC cppVar_46274 = (cppVar_46222) ? TH1 : cppVar_46273;
	BIT_VEC cppVar_46275 = (cppVar_46218) ? TL1 : cppVar_46274;
	BIT_VEC cppVar_46276 = (cppVar_46214) ? TH0 : cppVar_46275;
	BIT_VEC cppVar_46277 = (cppVar_46210) ? TL0 : cppVar_46276;
	BIT_VEC cppVar_46278 = (cppVar_46206) ? TMOD : cppVar_46277;
	BIT_VEC cppVar_46279 = (cppVar_46202) ? TCON : cppVar_46278;
	BIT_VEC cppVar_46280 = (cppVar_46198) ? PCON : cppVar_46279;
	BIT_VEC cppVar_46281 = (cppVar_46194) ? DPH : cppVar_46280;
	BIT_VEC cppVar_46282 = (cppVar_46190) ? DPL : cppVar_46281;
	BIT_VEC cppVar_46283 = (cppVar_46186) ? SP : cppVar_46282;
	BIT_VEC cppVar_46284 = (cppVar_46182) ? P0 : cppVar_46283;
	BIT_VEC cppVar_46285 = (cppVar_46175) ? cppVar_46178 : cppVar_46284;
	BIT_VEC cppVar_46287 = PC + 2;
	cppVar_46287 = (cppVar_46287 & cppMask_un_16_);
	BIT_VEC cppVar_46288 = ROM.rd(cppVar_46287);
	BIT_VEC cppVar_46289 = cppVar_46285 | cppVar_46288;
	BIT_VEC cppVar_46290 = (cppVar_46170) ? cppVar_46289 : PCON;
	BIT_VEC cppVar_46291 = ROM.rd(PC);
	bool cppVar_46293 = (cppVar_46291 == 66);
	BIT_VEC cppVar_46295 = PC + 1;
	cppVar_46295 = (cppVar_46295 & cppMask_un_16_);
	BIT_VEC cppVar_46296 = ROM.rd(cppVar_46295);
	bool cppVar_46298 = (cppVar_46296 == 135);
	BIT_VEC cppVar_46299 = PC + 1;
	cppVar_46299 = (cppVar_46299 & cppMask_un_16_);
	BIT_VEC cppVar_46300 = ROM.rd(cppVar_46299);
	BIT_VEC cppVar_46301 = (cppVar_46300 >> 7) & cppMask_un_1_;
	bool cppVar_46303 = (cppVar_46301 == 0);
	BIT_VEC cppVar_46304 = PC + 1;
	cppVar_46304 = (cppVar_46304 & cppMask_un_16_);
	BIT_VEC cppVar_46305 = ROM.rd(cppVar_46304);
	BIT_VEC cppVar_46306 = IRAM.rd(cppVar_46305);
	BIT_VEC cppVar_46307 = PC + 1;
	cppVar_46307 = (cppVar_46307 & cppMask_un_16_);
	BIT_VEC cppVar_46308 = ROM.rd(cppVar_46307);
	bool cppVar_46310 = (cppVar_46308 == 128);
	BIT_VEC cppVar_46311 = PC + 1;
	cppVar_46311 = (cppVar_46311 & cppMask_un_16_);
	BIT_VEC cppVar_46312 = ROM.rd(cppVar_46311);
	bool cppVar_46314 = (cppVar_46312 == 129);
	BIT_VEC cppVar_46315 = PC + 1;
	cppVar_46315 = (cppVar_46315 & cppMask_un_16_);
	BIT_VEC cppVar_46316 = ROM.rd(cppVar_46315);
	bool cppVar_46318 = (cppVar_46316 == 130);
	BIT_VEC cppVar_46319 = PC + 1;
	cppVar_46319 = (cppVar_46319 & cppMask_un_16_);
	BIT_VEC cppVar_46320 = ROM.rd(cppVar_46319);
	bool cppVar_46322 = (cppVar_46320 == 131);
	BIT_VEC cppVar_46323 = PC + 1;
	cppVar_46323 = (cppVar_46323 & cppMask_un_16_);
	BIT_VEC cppVar_46324 = ROM.rd(cppVar_46323);
	bool cppVar_46326 = (cppVar_46324 == 135);
	BIT_VEC cppVar_46327 = PC + 1;
	cppVar_46327 = (cppVar_46327 & cppMask_un_16_);
	BIT_VEC cppVar_46328 = ROM.rd(cppVar_46327);
	bool cppVar_46330 = (cppVar_46328 == 136);
	BIT_VEC cppVar_46331 = PC + 1;
	cppVar_46331 = (cppVar_46331 & cppMask_un_16_);
	BIT_VEC cppVar_46332 = ROM.rd(cppVar_46331);
	bool cppVar_46334 = (cppVar_46332 == 137);
	BIT_VEC cppVar_46335 = PC + 1;
	cppVar_46335 = (cppVar_46335 & cppMask_un_16_);
	BIT_VEC cppVar_46336 = ROM.rd(cppVar_46335);
	bool cppVar_46338 = (cppVar_46336 == 138);
	BIT_VEC cppVar_46339 = PC + 1;
	cppVar_46339 = (cppVar_46339 & cppMask_un_16_);
	BIT_VEC cppVar_46340 = ROM.rd(cppVar_46339);
	bool cppVar_46342 = (cppVar_46340 == 140);
	BIT_VEC cppVar_46343 = PC + 1;
	cppVar_46343 = (cppVar_46343 & cppMask_un_16_);
	BIT_VEC cppVar_46344 = ROM.rd(cppVar_46343);
	bool cppVar_46346 = (cppVar_46344 == 139);
	BIT_VEC cppVar_46347 = PC + 1;
	cppVar_46347 = (cppVar_46347 & cppMask_un_16_);
	BIT_VEC cppVar_46348 = ROM.rd(cppVar_46347);
	bool cppVar_46350 = (cppVar_46348 == 141);
	BIT_VEC cppVar_46351 = PC + 1;
	cppVar_46351 = (cppVar_46351 & cppMask_un_16_);
	BIT_VEC cppVar_46352 = ROM.rd(cppVar_46351);
	bool cppVar_46354 = (cppVar_46352 == 144);
	BIT_VEC cppVar_46355 = PC + 1;
	cppVar_46355 = (cppVar_46355 & cppMask_un_16_);
	BIT_VEC cppVar_46356 = ROM.rd(cppVar_46355);
	bool cppVar_46358 = (cppVar_46356 == 152);
	BIT_VEC cppVar_46359 = PC + 1;
	cppVar_46359 = (cppVar_46359 & cppMask_un_16_);
	BIT_VEC cppVar_46360 = ROM.rd(cppVar_46359);
	bool cppVar_46362 = (cppVar_46360 == 153);
	BIT_VEC cppVar_46363 = PC + 1;
	cppVar_46363 = (cppVar_46363 & cppMask_un_16_);
	BIT_VEC cppVar_46364 = ROM.rd(cppVar_46363);
	bool cppVar_46366 = (cppVar_46364 == 160);
	BIT_VEC cppVar_46367 = PC + 1;
	cppVar_46367 = (cppVar_46367 & cppMask_un_16_);
	BIT_VEC cppVar_46368 = ROM.rd(cppVar_46367);
	bool cppVar_46370 = (cppVar_46368 == 168);
	BIT_VEC cppVar_46371 = PC + 1;
	cppVar_46371 = (cppVar_46371 & cppMask_un_16_);
	BIT_VEC cppVar_46372 = ROM.rd(cppVar_46371);
	bool cppVar_46374 = (cppVar_46372 == 176);
	BIT_VEC cppVar_46375 = PC + 1;
	cppVar_46375 = (cppVar_46375 & cppMask_un_16_);
	BIT_VEC cppVar_46376 = ROM.rd(cppVar_46375);
	bool cppVar_46378 = (cppVar_46376 == 184);
	BIT_VEC cppVar_46379 = PC + 1;
	cppVar_46379 = (cppVar_46379 & cppMask_un_16_);
	BIT_VEC cppVar_46380 = ROM.rd(cppVar_46379);
	bool cppVar_46382 = (cppVar_46380 == 208);
	BIT_VEC cppVar_46383 = PC + 1;
	cppVar_46383 = (cppVar_46383 & cppMask_un_16_);
	BIT_VEC cppVar_46384 = ROM.rd(cppVar_46383);
	bool cppVar_46386 = (cppVar_46384 == 224);
	BIT_VEC cppVar_46387 = PC + 1;
	cppVar_46387 = (cppVar_46387 & cppMask_un_16_);
	BIT_VEC cppVar_46388 = ROM.rd(cppVar_46387);
	bool cppVar_46390 = (cppVar_46388 == 240);
	BIT_VEC cppVar_46392 = (cppVar_46390) ? B : 0;
	BIT_VEC cppVar_46393 = (cppVar_46386) ? ACC : cppVar_46392;
	BIT_VEC cppVar_46394 = (cppVar_46382) ? PSW : cppVar_46393;
	BIT_VEC cppVar_46395 = (cppVar_46378) ? IP : cppVar_46394;
	BIT_VEC cppVar_46396 = (cppVar_46374) ? P3 : cppVar_46395;
	BIT_VEC cppVar_46397 = (cppVar_46370) ? IE : cppVar_46396;
	BIT_VEC cppVar_46398 = (cppVar_46366) ? P2 : cppVar_46397;
	BIT_VEC cppVar_46399 = (cppVar_46362) ? SBUF : cppVar_46398;
	BIT_VEC cppVar_46400 = (cppVar_46358) ? SCON : cppVar_46399;
	BIT_VEC cppVar_46401 = (cppVar_46354) ? P1 : cppVar_46400;
	BIT_VEC cppVar_46402 = (cppVar_46350) ? TH1 : cppVar_46401;
	BIT_VEC cppVar_46403 = (cppVar_46346) ? TL1 : cppVar_46402;
	BIT_VEC cppVar_46404 = (cppVar_46342) ? TH0 : cppVar_46403;
	BIT_VEC cppVar_46405 = (cppVar_46338) ? TL0 : cppVar_46404;
	BIT_VEC cppVar_46406 = (cppVar_46334) ? TMOD : cppVar_46405;
	BIT_VEC cppVar_46407 = (cppVar_46330) ? TCON : cppVar_46406;
	BIT_VEC cppVar_46408 = (cppVar_46326) ? PCON : cppVar_46407;
	BIT_VEC cppVar_46409 = (cppVar_46322) ? DPH : cppVar_46408;
	BIT_VEC cppVar_46410 = (cppVar_46318) ? DPL : cppVar_46409;
	BIT_VEC cppVar_46411 = (cppVar_46314) ? SP : cppVar_46410;
	BIT_VEC cppVar_46412 = (cppVar_46310) ? P0 : cppVar_46411;
	BIT_VEC cppVar_46413 = (cppVar_46303) ? cppVar_46306 : cppVar_46412;
	BIT_VEC cppVar_46414 = cppVar_46413 | ACC;
	BIT_VEC cppVar_46415 = (cppVar_46298) ? cppVar_46414 : PCON;
	BIT_VEC cppVar_46416 = ROM.rd(PC);
	bool cppVar_46418 = (cppVar_46416 == 213);
	BIT_VEC cppVar_46419 = ROM.rd(PC);
	bool cppVar_46421 = (cppVar_46419 == 21);
	bool cppVar_46422 = cppVar_46418 || cppVar_46421;
	BIT_VEC cppVar_46424 = PC + 1;
	cppVar_46424 = (cppVar_46424 & cppMask_un_16_);
	BIT_VEC cppVar_46425 = ROM.rd(cppVar_46424);
	bool cppVar_46427 = (cppVar_46425 == 135);
	BIT_VEC cppVar_46428 = PC + 1;
	cppVar_46428 = (cppVar_46428 & cppMask_un_16_);
	BIT_VEC cppVar_46429 = ROM.rd(cppVar_46428);
	BIT_VEC cppVar_46430 = (cppVar_46429 >> 7) & cppMask_un_1_;
	bool cppVar_46432 = (cppVar_46430 == 0);
	BIT_VEC cppVar_46433 = PC + 1;
	cppVar_46433 = (cppVar_46433 & cppMask_un_16_);
	BIT_VEC cppVar_46434 = ROM.rd(cppVar_46433);
	BIT_VEC cppVar_46435 = IRAM.rd(cppVar_46434);
	BIT_VEC cppVar_46436 = PC + 1;
	cppVar_46436 = (cppVar_46436 & cppMask_un_16_);
	BIT_VEC cppVar_46437 = ROM.rd(cppVar_46436);
	bool cppVar_46439 = (cppVar_46437 == 128);
	BIT_VEC cppVar_46440 = PC + 1;
	cppVar_46440 = (cppVar_46440 & cppMask_un_16_);
	BIT_VEC cppVar_46441 = ROM.rd(cppVar_46440);
	bool cppVar_46443 = (cppVar_46441 == 129);
	BIT_VEC cppVar_46444 = PC + 1;
	cppVar_46444 = (cppVar_46444 & cppMask_un_16_);
	BIT_VEC cppVar_46445 = ROM.rd(cppVar_46444);
	bool cppVar_46447 = (cppVar_46445 == 130);
	BIT_VEC cppVar_46448 = PC + 1;
	cppVar_46448 = (cppVar_46448 & cppMask_un_16_);
	BIT_VEC cppVar_46449 = ROM.rd(cppVar_46448);
	bool cppVar_46451 = (cppVar_46449 == 131);
	BIT_VEC cppVar_46452 = PC + 1;
	cppVar_46452 = (cppVar_46452 & cppMask_un_16_);
	BIT_VEC cppVar_46453 = ROM.rd(cppVar_46452);
	bool cppVar_46455 = (cppVar_46453 == 135);
	BIT_VEC cppVar_46456 = PC + 1;
	cppVar_46456 = (cppVar_46456 & cppMask_un_16_);
	BIT_VEC cppVar_46457 = ROM.rd(cppVar_46456);
	bool cppVar_46459 = (cppVar_46457 == 136);
	BIT_VEC cppVar_46460 = PC + 1;
	cppVar_46460 = (cppVar_46460 & cppMask_un_16_);
	BIT_VEC cppVar_46461 = ROM.rd(cppVar_46460);
	bool cppVar_46463 = (cppVar_46461 == 137);
	BIT_VEC cppVar_46464 = PC + 1;
	cppVar_46464 = (cppVar_46464 & cppMask_un_16_);
	BIT_VEC cppVar_46465 = ROM.rd(cppVar_46464);
	bool cppVar_46467 = (cppVar_46465 == 138);
	BIT_VEC cppVar_46468 = PC + 1;
	cppVar_46468 = (cppVar_46468 & cppMask_un_16_);
	BIT_VEC cppVar_46469 = ROM.rd(cppVar_46468);
	bool cppVar_46471 = (cppVar_46469 == 140);
	BIT_VEC cppVar_46472 = PC + 1;
	cppVar_46472 = (cppVar_46472 & cppMask_un_16_);
	BIT_VEC cppVar_46473 = ROM.rd(cppVar_46472);
	bool cppVar_46475 = (cppVar_46473 == 139);
	BIT_VEC cppVar_46476 = PC + 1;
	cppVar_46476 = (cppVar_46476 & cppMask_un_16_);
	BIT_VEC cppVar_46477 = ROM.rd(cppVar_46476);
	bool cppVar_46479 = (cppVar_46477 == 141);
	BIT_VEC cppVar_46480 = PC + 1;
	cppVar_46480 = (cppVar_46480 & cppMask_un_16_);
	BIT_VEC cppVar_46481 = ROM.rd(cppVar_46480);
	bool cppVar_46483 = (cppVar_46481 == 144);
	BIT_VEC cppVar_46484 = PC + 1;
	cppVar_46484 = (cppVar_46484 & cppMask_un_16_);
	BIT_VEC cppVar_46485 = ROM.rd(cppVar_46484);
	bool cppVar_46487 = (cppVar_46485 == 152);
	BIT_VEC cppVar_46488 = PC + 1;
	cppVar_46488 = (cppVar_46488 & cppMask_un_16_);
	BIT_VEC cppVar_46489 = ROM.rd(cppVar_46488);
	bool cppVar_46491 = (cppVar_46489 == 153);
	BIT_VEC cppVar_46492 = PC + 1;
	cppVar_46492 = (cppVar_46492 & cppMask_un_16_);
	BIT_VEC cppVar_46493 = ROM.rd(cppVar_46492);
	bool cppVar_46495 = (cppVar_46493 == 160);
	BIT_VEC cppVar_46496 = PC + 1;
	cppVar_46496 = (cppVar_46496 & cppMask_un_16_);
	BIT_VEC cppVar_46497 = ROM.rd(cppVar_46496);
	bool cppVar_46499 = (cppVar_46497 == 168);
	BIT_VEC cppVar_46500 = PC + 1;
	cppVar_46500 = (cppVar_46500 & cppMask_un_16_);
	BIT_VEC cppVar_46501 = ROM.rd(cppVar_46500);
	bool cppVar_46503 = (cppVar_46501 == 176);
	BIT_VEC cppVar_46504 = PC + 1;
	cppVar_46504 = (cppVar_46504 & cppMask_un_16_);
	BIT_VEC cppVar_46505 = ROM.rd(cppVar_46504);
	bool cppVar_46507 = (cppVar_46505 == 184);
	BIT_VEC cppVar_46508 = PC + 1;
	cppVar_46508 = (cppVar_46508 & cppMask_un_16_);
	BIT_VEC cppVar_46509 = ROM.rd(cppVar_46508);
	bool cppVar_46511 = (cppVar_46509 == 208);
	BIT_VEC cppVar_46512 = PC + 1;
	cppVar_46512 = (cppVar_46512 & cppMask_un_16_);
	BIT_VEC cppVar_46513 = ROM.rd(cppVar_46512);
	bool cppVar_46515 = (cppVar_46513 == 224);
	BIT_VEC cppVar_46516 = PC + 1;
	cppVar_46516 = (cppVar_46516 & cppMask_un_16_);
	BIT_VEC cppVar_46517 = ROM.rd(cppVar_46516);
	bool cppVar_46519 = (cppVar_46517 == 240);
	BIT_VEC cppVar_46521 = (cppVar_46519) ? B : 0;
	BIT_VEC cppVar_46522 = (cppVar_46515) ? ACC : cppVar_46521;
	BIT_VEC cppVar_46523 = (cppVar_46511) ? PSW : cppVar_46522;
	BIT_VEC cppVar_46524 = (cppVar_46507) ? IP : cppVar_46523;
	BIT_VEC cppVar_46525 = (cppVar_46503) ? P3 : cppVar_46524;
	BIT_VEC cppVar_46526 = (cppVar_46499) ? IE : cppVar_46525;
	BIT_VEC cppVar_46527 = (cppVar_46495) ? P2 : cppVar_46526;
	BIT_VEC cppVar_46528 = (cppVar_46491) ? SBUF : cppVar_46527;
	BIT_VEC cppVar_46529 = (cppVar_46487) ? SCON : cppVar_46528;
	BIT_VEC cppVar_46530 = (cppVar_46483) ? P1 : cppVar_46529;
	BIT_VEC cppVar_46531 = (cppVar_46479) ? TH1 : cppVar_46530;
	BIT_VEC cppVar_46532 = (cppVar_46475) ? TL1 : cppVar_46531;
	BIT_VEC cppVar_46533 = (cppVar_46471) ? TH0 : cppVar_46532;
	BIT_VEC cppVar_46534 = (cppVar_46467) ? TL0 : cppVar_46533;
	BIT_VEC cppVar_46535 = (cppVar_46463) ? TMOD : cppVar_46534;
	BIT_VEC cppVar_46536 = (cppVar_46459) ? TCON : cppVar_46535;
	BIT_VEC cppVar_46537 = (cppVar_46455) ? PCON : cppVar_46536;
	BIT_VEC cppVar_46538 = (cppVar_46451) ? DPH : cppVar_46537;
	BIT_VEC cppVar_46539 = (cppVar_46447) ? DPL : cppVar_46538;
	BIT_VEC cppVar_46540 = (cppVar_46443) ? SP : cppVar_46539;
	BIT_VEC cppVar_46541 = (cppVar_46439) ? P0 : cppVar_46540;
	BIT_VEC cppVar_46542 = (cppVar_46432) ? cppVar_46435 : cppVar_46541;
	BIT_VEC cppVar_46544 = cppVar_46542 - 1;
	cppVar_46544 = (cppVar_46544 & cppMask_un_8_);
	BIT_VEC cppVar_46545 = (cppVar_46427) ? cppVar_46544 : PCON;
	BIT_VEC cppVar_46546 = ROM.rd(PC);
	bool cppVar_46548 = (cppVar_46546 == 5);
	BIT_VEC cppVar_46550 = PC + 1;
	cppVar_46550 = (cppVar_46550 & cppMask_un_16_);
	BIT_VEC cppVar_46551 = ROM.rd(cppVar_46550);
	bool cppVar_46553 = (cppVar_46551 == 135);
	BIT_VEC cppVar_46554 = PC + 1;
	cppVar_46554 = (cppVar_46554 & cppMask_un_16_);
	BIT_VEC cppVar_46555 = ROM.rd(cppVar_46554);
	BIT_VEC cppVar_46556 = (cppVar_46555 >> 7) & cppMask_un_1_;
	bool cppVar_46558 = (cppVar_46556 == 0);
	BIT_VEC cppVar_46559 = PC + 1;
	cppVar_46559 = (cppVar_46559 & cppMask_un_16_);
	BIT_VEC cppVar_46560 = ROM.rd(cppVar_46559);
	BIT_VEC cppVar_46561 = IRAM.rd(cppVar_46560);
	BIT_VEC cppVar_46562 = PC + 1;
	cppVar_46562 = (cppVar_46562 & cppMask_un_16_);
	BIT_VEC cppVar_46563 = ROM.rd(cppVar_46562);
	bool cppVar_46565 = (cppVar_46563 == 128);
	BIT_VEC cppVar_46566 = PC + 1;
	cppVar_46566 = (cppVar_46566 & cppMask_un_16_);
	BIT_VEC cppVar_46567 = ROM.rd(cppVar_46566);
	bool cppVar_46569 = (cppVar_46567 == 129);
	BIT_VEC cppVar_46570 = PC + 1;
	cppVar_46570 = (cppVar_46570 & cppMask_un_16_);
	BIT_VEC cppVar_46571 = ROM.rd(cppVar_46570);
	bool cppVar_46573 = (cppVar_46571 == 130);
	BIT_VEC cppVar_46574 = PC + 1;
	cppVar_46574 = (cppVar_46574 & cppMask_un_16_);
	BIT_VEC cppVar_46575 = ROM.rd(cppVar_46574);
	bool cppVar_46577 = (cppVar_46575 == 131);
	BIT_VEC cppVar_46578 = PC + 1;
	cppVar_46578 = (cppVar_46578 & cppMask_un_16_);
	BIT_VEC cppVar_46579 = ROM.rd(cppVar_46578);
	bool cppVar_46581 = (cppVar_46579 == 135);
	BIT_VEC cppVar_46582 = PC + 1;
	cppVar_46582 = (cppVar_46582 & cppMask_un_16_);
	BIT_VEC cppVar_46583 = ROM.rd(cppVar_46582);
	bool cppVar_46585 = (cppVar_46583 == 136);
	BIT_VEC cppVar_46586 = PC + 1;
	cppVar_46586 = (cppVar_46586 & cppMask_un_16_);
	BIT_VEC cppVar_46587 = ROM.rd(cppVar_46586);
	bool cppVar_46589 = (cppVar_46587 == 137);
	BIT_VEC cppVar_46590 = PC + 1;
	cppVar_46590 = (cppVar_46590 & cppMask_un_16_);
	BIT_VEC cppVar_46591 = ROM.rd(cppVar_46590);
	bool cppVar_46593 = (cppVar_46591 == 138);
	BIT_VEC cppVar_46594 = PC + 1;
	cppVar_46594 = (cppVar_46594 & cppMask_un_16_);
	BIT_VEC cppVar_46595 = ROM.rd(cppVar_46594);
	bool cppVar_46597 = (cppVar_46595 == 140);
	BIT_VEC cppVar_46598 = PC + 1;
	cppVar_46598 = (cppVar_46598 & cppMask_un_16_);
	BIT_VEC cppVar_46599 = ROM.rd(cppVar_46598);
	bool cppVar_46601 = (cppVar_46599 == 139);
	BIT_VEC cppVar_46602 = PC + 1;
	cppVar_46602 = (cppVar_46602 & cppMask_un_16_);
	BIT_VEC cppVar_46603 = ROM.rd(cppVar_46602);
	bool cppVar_46605 = (cppVar_46603 == 141);
	BIT_VEC cppVar_46606 = PC + 1;
	cppVar_46606 = (cppVar_46606 & cppMask_un_16_);
	BIT_VEC cppVar_46607 = ROM.rd(cppVar_46606);
	bool cppVar_46609 = (cppVar_46607 == 144);
	BIT_VEC cppVar_46610 = PC + 1;
	cppVar_46610 = (cppVar_46610 & cppMask_un_16_);
	BIT_VEC cppVar_46611 = ROM.rd(cppVar_46610);
	bool cppVar_46613 = (cppVar_46611 == 152);
	BIT_VEC cppVar_46614 = PC + 1;
	cppVar_46614 = (cppVar_46614 & cppMask_un_16_);
	BIT_VEC cppVar_46615 = ROM.rd(cppVar_46614);
	bool cppVar_46617 = (cppVar_46615 == 153);
	BIT_VEC cppVar_46618 = PC + 1;
	cppVar_46618 = (cppVar_46618 & cppMask_un_16_);
	BIT_VEC cppVar_46619 = ROM.rd(cppVar_46618);
	bool cppVar_46621 = (cppVar_46619 == 160);
	BIT_VEC cppVar_46622 = PC + 1;
	cppVar_46622 = (cppVar_46622 & cppMask_un_16_);
	BIT_VEC cppVar_46623 = ROM.rd(cppVar_46622);
	bool cppVar_46625 = (cppVar_46623 == 168);
	BIT_VEC cppVar_46626 = PC + 1;
	cppVar_46626 = (cppVar_46626 & cppMask_un_16_);
	BIT_VEC cppVar_46627 = ROM.rd(cppVar_46626);
	bool cppVar_46629 = (cppVar_46627 == 176);
	BIT_VEC cppVar_46630 = PC + 1;
	cppVar_46630 = (cppVar_46630 & cppMask_un_16_);
	BIT_VEC cppVar_46631 = ROM.rd(cppVar_46630);
	bool cppVar_46633 = (cppVar_46631 == 184);
	BIT_VEC cppVar_46634 = PC + 1;
	cppVar_46634 = (cppVar_46634 & cppMask_un_16_);
	BIT_VEC cppVar_46635 = ROM.rd(cppVar_46634);
	bool cppVar_46637 = (cppVar_46635 == 208);
	BIT_VEC cppVar_46638 = PC + 1;
	cppVar_46638 = (cppVar_46638 & cppMask_un_16_);
	BIT_VEC cppVar_46639 = ROM.rd(cppVar_46638);
	bool cppVar_46641 = (cppVar_46639 == 224);
	BIT_VEC cppVar_46642 = PC + 1;
	cppVar_46642 = (cppVar_46642 & cppMask_un_16_);
	BIT_VEC cppVar_46643 = ROM.rd(cppVar_46642);
	bool cppVar_46645 = (cppVar_46643 == 240);
	BIT_VEC cppVar_46647 = (cppVar_46645) ? B : 0;
	BIT_VEC cppVar_46648 = (cppVar_46641) ? ACC : cppVar_46647;
	BIT_VEC cppVar_46649 = (cppVar_46637) ? PSW : cppVar_46648;
	BIT_VEC cppVar_46650 = (cppVar_46633) ? IP : cppVar_46649;
	BIT_VEC cppVar_46651 = (cppVar_46629) ? P3 : cppVar_46650;
	BIT_VEC cppVar_46652 = (cppVar_46625) ? IE : cppVar_46651;
	BIT_VEC cppVar_46653 = (cppVar_46621) ? P2 : cppVar_46652;
	BIT_VEC cppVar_46654 = (cppVar_46617) ? SBUF : cppVar_46653;
	BIT_VEC cppVar_46655 = (cppVar_46613) ? SCON : cppVar_46654;
	BIT_VEC cppVar_46656 = (cppVar_46609) ? P1 : cppVar_46655;
	BIT_VEC cppVar_46657 = (cppVar_46605) ? TH1 : cppVar_46656;
	BIT_VEC cppVar_46658 = (cppVar_46601) ? TL1 : cppVar_46657;
	BIT_VEC cppVar_46659 = (cppVar_46597) ? TH0 : cppVar_46658;
	BIT_VEC cppVar_46660 = (cppVar_46593) ? TL0 : cppVar_46659;
	BIT_VEC cppVar_46661 = (cppVar_46589) ? TMOD : cppVar_46660;
	BIT_VEC cppVar_46662 = (cppVar_46585) ? TCON : cppVar_46661;
	BIT_VEC cppVar_46663 = (cppVar_46581) ? PCON : cppVar_46662;
	BIT_VEC cppVar_46664 = (cppVar_46577) ? DPH : cppVar_46663;
	BIT_VEC cppVar_46665 = (cppVar_46573) ? DPL : cppVar_46664;
	BIT_VEC cppVar_46666 = (cppVar_46569) ? SP : cppVar_46665;
	BIT_VEC cppVar_46667 = (cppVar_46565) ? P0 : cppVar_46666;
	BIT_VEC cppVar_46668 = (cppVar_46558) ? cppVar_46561 : cppVar_46667;
	BIT_VEC cppVar_46670 = cppVar_46668 + 1;
	cppVar_46670 = (cppVar_46670 & cppMask_un_8_);
	BIT_VEC cppVar_46671 = (cppVar_46553) ? cppVar_46670 : PCON;
	BIT_VEC cppVar_46672 = (cppVar_46548) ? cppVar_46671 : PCON;
	BIT_VEC cppVar_46673 = (cppVar_46422) ? cppVar_46545 : cppVar_46672;
	BIT_VEC cppVar_46674 = (cppVar_46293) ? cppVar_46415 : cppVar_46673;
	BIT_VEC cppVar_46675 = (cppVar_46165) ? cppVar_46290 : cppVar_46674;
	BIT_VEC cppVar_46676 = (cppVar_46040) ? cppVar_46162 : cppVar_46675;
	BIT_VEC cppVar_46677 = (cppVar_45912) ? cppVar_46037 : cppVar_46676;
	BIT_VEC cppVar_46678 = (cppVar_45787) ? cppVar_45909 : cppVar_46677;
	BIT_VEC cppVar_46679 = (cppVar_45659) ? cppVar_45784 : cppVar_46678;
	BIT_VEC cppVar_46680 = (cppVar_45647) ? cppVar_45656 : cppVar_46679;
	BIT_VEC cppVar_46681 = (cppVar_45522) ? cppVar_45644 : cppVar_46680;
	BIT_VEC cppVar_46682 = (cppVar_45506) ? cppVar_45519 : cppVar_46681;
	BIT_VEC cppVar_46683 = (cppVar_45490) ? cppVar_45503 : cppVar_46682;
	BIT_VEC cppVar_46684 = (cppVar_45341) ? cppVar_45487 : cppVar_46683;
	BIT_VEC cppVar_46685 = (cppVar_45192) ? cppVar_45338 : cppVar_46684;
	BIT_VEC cppVar_46686 = (cppVar_45043) ? cppVar_45189 : cppVar_46685;
	BIT_VEC cppVar_46687 = (cppVar_44894) ? cppVar_45040 : cppVar_46686;
	BIT_VEC cppVar_46688 = (cppVar_44745) ? cppVar_44891 : cppVar_46687;
	BIT_VEC cppVar_46689 = (cppVar_44596) ? cppVar_44742 : cppVar_46688;
	BIT_VEC cppVar_46690 = (cppVar_44447) ? cppVar_44593 : cppVar_46689;
	BIT_VEC cppVar_46691 = (cppVar_44298) ? cppVar_44444 : cppVar_46690;
	BIT_VEC cppVar_46692 = (cppVar_44289) ? cppVar_44295 : cppVar_46691;
	BIT_VEC cppVar_46693 = (cppVar_44275) ? cppVar_44282 : cppVar_46692;
	return cppVar_46693;
}
