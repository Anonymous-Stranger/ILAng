#include "common.hpp"
#include "model_oc8051_class.hpp"

BIT_VEC model_oc8051::cppUpdateFun_PSW()
{
	BIT_VEC cppVar_46695 = ROM.rd(PC);
	bool cppVar_46697 = (cppVar_46695 == 212);
	BIT_VEC cppVar_46698 = (PSW >> 6) & cppMask_un_1_;
	bool cppVar_46700 = (cppVar_46698 == 1);
	BIT_VEC cppVar_46701 = (ACC >> 0) & cppMask_un_4_;
	bool cppVar_46703 = cppVar_46701 > 9;
	bool cppVar_46704 = cppVar_46700 || cppVar_46703;
	BIT_VEC cppVar_46705 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_46707 = cppVar_46705 + 6;
	cppVar_46707 = (cppVar_46707 & cppMask_un_9_);
	BIT_VEC cppVar_46708 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_46709 = (cppVar_46704) ? cppVar_46707 : cppVar_46708;
	BIT_VEC cppVar_46710 = (cppVar_46709 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_46711 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_46712 = cppVar_46710 | cppVar_46711;
	bool cppVar_46714 = (cppVar_46712 == 1);
	BIT_VEC cppVar_46715 = (PSW >> 6) & cppMask_un_1_;
	bool cppVar_46716 = (cppVar_46715 == 1);
	BIT_VEC cppVar_46717 = (ACC >> 0) & cppMask_un_4_;
	bool cppVar_46718 = cppVar_46717 > 9;
	bool cppVar_46719 = cppVar_46716 || cppVar_46718;
	BIT_VEC cppVar_46720 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_46721 = cppVar_46720 + 6;
	cppVar_46721 = (cppVar_46721 & cppMask_un_9_);
	BIT_VEC cppVar_46722 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_46723 = (cppVar_46719) ? cppVar_46721 : cppVar_46722;
	BIT_VEC cppVar_46724 = (cppVar_46723 >> 4) & cppMask_un_4_;
	bool cppVar_46726 = cppVar_46724 > 9;
	bool cppVar_46727 = cppVar_46714 || cppVar_46726;
	BIT_VEC cppVar_46728 = (PSW >> 6) & cppMask_un_1_;
	bool cppVar_46729 = (cppVar_46728 == 1);
	BIT_VEC cppVar_46730 = (ACC >> 0) & cppMask_un_4_;
	bool cppVar_46731 = cppVar_46730 > 9;
	bool cppVar_46732 = cppVar_46729 || cppVar_46731;
	BIT_VEC cppVar_46733 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_46734 = cppVar_46733 + 6;
	cppVar_46734 = (cppVar_46734 & cppMask_un_9_);
	BIT_VEC cppVar_46735 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_46736 = (cppVar_46732) ? cppVar_46734 : cppVar_46735;
	BIT_VEC cppVar_46738 = cppVar_46736 + 96;
	cppVar_46738 = (cppVar_46738 & cppMask_un_9_);
	BIT_VEC cppVar_46739 = (PSW >> 6) & cppMask_un_1_;
	bool cppVar_46740 = (cppVar_46739 == 1);
	BIT_VEC cppVar_46741 = (ACC >> 0) & cppMask_un_4_;
	bool cppVar_46742 = cppVar_46741 > 9;
	bool cppVar_46743 = cppVar_46740 || cppVar_46742;
	BIT_VEC cppVar_46744 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_46745 = cppVar_46744 + 6;
	cppVar_46745 = (cppVar_46745 & cppMask_un_9_);
	BIT_VEC cppVar_46746 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_46747 = (cppVar_46743) ? cppVar_46745 : cppVar_46746;
	BIT_VEC cppVar_46748 = (cppVar_46727) ? cppVar_46738 : cppVar_46747;
	BIT_VEC cppVar_46749 = (cppVar_46748 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_46750 = (PSW >> 6) & cppMask_un_1_;
	bool cppVar_46751 = (cppVar_46750 == 1);
	BIT_VEC cppVar_46752 = (ACC >> 0) & cppMask_un_4_;
	bool cppVar_46753 = cppVar_46752 > 9;
	bool cppVar_46754 = cppVar_46751 || cppVar_46753;
	BIT_VEC cppVar_46755 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_46756 = cppVar_46755 + 6;
	cppVar_46756 = (cppVar_46756 & cppMask_un_9_);
	BIT_VEC cppVar_46757 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_46758 = (cppVar_46754) ? cppVar_46756 : cppVar_46757;
	BIT_VEC cppVar_46759 = (cppVar_46758 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_46760 = cppVar_46749 | cppVar_46759;
	BIT_VEC cppVar_46761 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_46762 = cppVar_46760 | cppVar_46761;
	BIT_VEC cppVar_46763 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_46764 = (cppVar_46762 << 7) | cppVar_46763;
	cppVar_46764 = (cppVar_46764 & cppMask_un_8_);
	BIT_VEC cppVar_46765 = ROM.rd(PC);
	bool cppVar_46767 = (cppVar_46765 == 211);
	BIT_VEC cppVar_46769 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_46770 = (1 << 7) | cppVar_46769;
	cppVar_46770 = (cppVar_46770 & cppMask_un_8_);
	BIT_VEC cppVar_46771 = ROM.rd(PC);
	bool cppVar_46773 = (cppVar_46771 == 210);
	BIT_VEC cppVar_46775 = PC + 1;
	cppVar_46775 = (cppVar_46775 & cppMask_un_16_);
	BIT_VEC cppVar_46776 = ROM.rd(cppVar_46775);
	BIT_VEC cppVar_46777 = (cppVar_46776 >> 7) & cppMask_un_1_;
	bool cppVar_46779 = (cppVar_46777 == 1);
	BIT_VEC cppVar_46780 = PC + 1;
	cppVar_46780 = (cppVar_46780 & cppMask_un_16_);
	BIT_VEC cppVar_46781 = ROM.rd(cppVar_46780);
	BIT_VEC cppVar_46782 = (cppVar_46781 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46784 = (cppVar_46782 << 3) | 0;
	cppVar_46784 = (cppVar_46784 & cppMask_un_8_);
	BIT_VEC cppVar_46785 = PC + 1;
	cppVar_46785 = (cppVar_46785 & cppMask_un_16_);
	BIT_VEC cppVar_46786 = ROM.rd(cppVar_46785);
	BIT_VEC cppVar_46787 = (cppVar_46786 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46788 = (cppVar_46787 & cppMask_un_5_);
	BIT_VEC cppVar_46790 = cppVar_46788 + 32;
	cppVar_46790 = (cppVar_46790 & cppMask_un_8_);
	BIT_VEC cppVar_46791 = (cppVar_46779) ? cppVar_46784 : cppVar_46790;
	bool cppVar_46793 = (cppVar_46791 == 208);
	BIT_VEC cppVar_46795 = PC + 1;
	cppVar_46795 = (cppVar_46795 & cppMask_un_16_);
	BIT_VEC cppVar_46796 = ROM.rd(cppVar_46795);
	BIT_VEC cppVar_46797 = (cppVar_46796 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_46798 = (cppVar_46797 & cppMask_un_3_);
	BIT_VEC cppVar_46799 = 1 << static_cast<unsigned>(cppVar_46798);
	cppVar_46799 = (cppVar_46799 & cppMask_un_8_);
	BIT_VEC cppVar_46800 = ~cppVar_46799;
	BIT_VEC cppVar_46801 = PC + 1;
	cppVar_46801 = (cppVar_46801 & cppMask_un_16_);
	BIT_VEC cppVar_46802 = ROM.rd(cppVar_46801);
	BIT_VEC cppVar_46803 = (cppVar_46802 >> 7) & cppMask_un_1_;
	bool cppVar_46804 = (cppVar_46803 == 1);
	BIT_VEC cppVar_46805 = PC + 1;
	cppVar_46805 = (cppVar_46805 & cppMask_un_16_);
	BIT_VEC cppVar_46806 = ROM.rd(cppVar_46805);
	BIT_VEC cppVar_46807 = (cppVar_46806 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46808 = (cppVar_46807 << 3) | 0;
	cppVar_46808 = (cppVar_46808 & cppMask_un_8_);
	BIT_VEC cppVar_46809 = PC + 1;
	cppVar_46809 = (cppVar_46809 & cppMask_un_16_);
	BIT_VEC cppVar_46810 = ROM.rd(cppVar_46809);
	BIT_VEC cppVar_46811 = (cppVar_46810 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46812 = (cppVar_46811 & cppMask_un_5_);
	BIT_VEC cppVar_46813 = cppVar_46812 + 32;
	cppVar_46813 = (cppVar_46813 & cppMask_un_8_);
	BIT_VEC cppVar_46814 = (cppVar_46804) ? cppVar_46808 : cppVar_46813;
	BIT_VEC cppVar_46815 = (cppVar_46814 >> 7) & cppMask_un_1_;
	bool cppVar_46817 = (cppVar_46815 == 0);
	BIT_VEC cppVar_46818 = PC + 1;
	cppVar_46818 = (cppVar_46818 & cppMask_un_16_);
	BIT_VEC cppVar_46819 = ROM.rd(cppVar_46818);
	BIT_VEC cppVar_46820 = (cppVar_46819 >> 7) & cppMask_un_1_;
	bool cppVar_46821 = (cppVar_46820 == 1);
	BIT_VEC cppVar_46822 = PC + 1;
	cppVar_46822 = (cppVar_46822 & cppMask_un_16_);
	BIT_VEC cppVar_46823 = ROM.rd(cppVar_46822);
	BIT_VEC cppVar_46824 = (cppVar_46823 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46825 = (cppVar_46824 << 3) | 0;
	cppVar_46825 = (cppVar_46825 & cppMask_un_8_);
	BIT_VEC cppVar_46826 = PC + 1;
	cppVar_46826 = (cppVar_46826 & cppMask_un_16_);
	BIT_VEC cppVar_46827 = ROM.rd(cppVar_46826);
	BIT_VEC cppVar_46828 = (cppVar_46827 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46829 = (cppVar_46828 & cppMask_un_5_);
	BIT_VEC cppVar_46830 = cppVar_46829 + 32;
	cppVar_46830 = (cppVar_46830 & cppMask_un_8_);
	BIT_VEC cppVar_46831 = (cppVar_46821) ? cppVar_46825 : cppVar_46830;
	BIT_VEC cppVar_46832 = IRAM.rd(cppVar_46831);
	BIT_VEC cppVar_46833 = PC + 1;
	cppVar_46833 = (cppVar_46833 & cppMask_un_16_);
	BIT_VEC cppVar_46834 = ROM.rd(cppVar_46833);
	BIT_VEC cppVar_46835 = (cppVar_46834 >> 7) & cppMask_un_1_;
	bool cppVar_46836 = (cppVar_46835 == 1);
	BIT_VEC cppVar_46837 = PC + 1;
	cppVar_46837 = (cppVar_46837 & cppMask_un_16_);
	BIT_VEC cppVar_46838 = ROM.rd(cppVar_46837);
	BIT_VEC cppVar_46839 = (cppVar_46838 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46840 = (cppVar_46839 << 3) | 0;
	cppVar_46840 = (cppVar_46840 & cppMask_un_8_);
	BIT_VEC cppVar_46841 = PC + 1;
	cppVar_46841 = (cppVar_46841 & cppMask_un_16_);
	BIT_VEC cppVar_46842 = ROM.rd(cppVar_46841);
	BIT_VEC cppVar_46843 = (cppVar_46842 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46844 = (cppVar_46843 & cppMask_un_5_);
	BIT_VEC cppVar_46845 = cppVar_46844 + 32;
	cppVar_46845 = (cppVar_46845 & cppMask_un_8_);
	BIT_VEC cppVar_46846 = (cppVar_46836) ? cppVar_46840 : cppVar_46845;
	bool cppVar_46848 = (cppVar_46846 == 128);
	BIT_VEC cppVar_46849 = PC + 1;
	cppVar_46849 = (cppVar_46849 & cppMask_un_16_);
	BIT_VEC cppVar_46850 = ROM.rd(cppVar_46849);
	BIT_VEC cppVar_46851 = (cppVar_46850 >> 7) & cppMask_un_1_;
	bool cppVar_46852 = (cppVar_46851 == 1);
	BIT_VEC cppVar_46853 = PC + 1;
	cppVar_46853 = (cppVar_46853 & cppMask_un_16_);
	BIT_VEC cppVar_46854 = ROM.rd(cppVar_46853);
	BIT_VEC cppVar_46855 = (cppVar_46854 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46856 = (cppVar_46855 << 3) | 0;
	cppVar_46856 = (cppVar_46856 & cppMask_un_8_);
	BIT_VEC cppVar_46857 = PC + 1;
	cppVar_46857 = (cppVar_46857 & cppMask_un_16_);
	BIT_VEC cppVar_46858 = ROM.rd(cppVar_46857);
	BIT_VEC cppVar_46859 = (cppVar_46858 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46860 = (cppVar_46859 & cppMask_un_5_);
	BIT_VEC cppVar_46861 = cppVar_46860 + 32;
	cppVar_46861 = (cppVar_46861 & cppMask_un_8_);
	BIT_VEC cppVar_46862 = (cppVar_46852) ? cppVar_46856 : cppVar_46861;
	bool cppVar_46864 = (cppVar_46862 == 129);
	BIT_VEC cppVar_46865 = PC + 1;
	cppVar_46865 = (cppVar_46865 & cppMask_un_16_);
	BIT_VEC cppVar_46866 = ROM.rd(cppVar_46865);
	BIT_VEC cppVar_46867 = (cppVar_46866 >> 7) & cppMask_un_1_;
	bool cppVar_46868 = (cppVar_46867 == 1);
	BIT_VEC cppVar_46869 = PC + 1;
	cppVar_46869 = (cppVar_46869 & cppMask_un_16_);
	BIT_VEC cppVar_46870 = ROM.rd(cppVar_46869);
	BIT_VEC cppVar_46871 = (cppVar_46870 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46872 = (cppVar_46871 << 3) | 0;
	cppVar_46872 = (cppVar_46872 & cppMask_un_8_);
	BIT_VEC cppVar_46873 = PC + 1;
	cppVar_46873 = (cppVar_46873 & cppMask_un_16_);
	BIT_VEC cppVar_46874 = ROM.rd(cppVar_46873);
	BIT_VEC cppVar_46875 = (cppVar_46874 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46876 = (cppVar_46875 & cppMask_un_5_);
	BIT_VEC cppVar_46877 = cppVar_46876 + 32;
	cppVar_46877 = (cppVar_46877 & cppMask_un_8_);
	BIT_VEC cppVar_46878 = (cppVar_46868) ? cppVar_46872 : cppVar_46877;
	bool cppVar_46880 = (cppVar_46878 == 130);
	BIT_VEC cppVar_46881 = PC + 1;
	cppVar_46881 = (cppVar_46881 & cppMask_un_16_);
	BIT_VEC cppVar_46882 = ROM.rd(cppVar_46881);
	BIT_VEC cppVar_46883 = (cppVar_46882 >> 7) & cppMask_un_1_;
	bool cppVar_46884 = (cppVar_46883 == 1);
	BIT_VEC cppVar_46885 = PC + 1;
	cppVar_46885 = (cppVar_46885 & cppMask_un_16_);
	BIT_VEC cppVar_46886 = ROM.rd(cppVar_46885);
	BIT_VEC cppVar_46887 = (cppVar_46886 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46888 = (cppVar_46887 << 3) | 0;
	cppVar_46888 = (cppVar_46888 & cppMask_un_8_);
	BIT_VEC cppVar_46889 = PC + 1;
	cppVar_46889 = (cppVar_46889 & cppMask_un_16_);
	BIT_VEC cppVar_46890 = ROM.rd(cppVar_46889);
	BIT_VEC cppVar_46891 = (cppVar_46890 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46892 = (cppVar_46891 & cppMask_un_5_);
	BIT_VEC cppVar_46893 = cppVar_46892 + 32;
	cppVar_46893 = (cppVar_46893 & cppMask_un_8_);
	BIT_VEC cppVar_46894 = (cppVar_46884) ? cppVar_46888 : cppVar_46893;
	bool cppVar_46896 = (cppVar_46894 == 131);
	BIT_VEC cppVar_46897 = PC + 1;
	cppVar_46897 = (cppVar_46897 & cppMask_un_16_);
	BIT_VEC cppVar_46898 = ROM.rd(cppVar_46897);
	BIT_VEC cppVar_46899 = (cppVar_46898 >> 7) & cppMask_un_1_;
	bool cppVar_46900 = (cppVar_46899 == 1);
	BIT_VEC cppVar_46901 = PC + 1;
	cppVar_46901 = (cppVar_46901 & cppMask_un_16_);
	BIT_VEC cppVar_46902 = ROM.rd(cppVar_46901);
	BIT_VEC cppVar_46903 = (cppVar_46902 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46904 = (cppVar_46903 << 3) | 0;
	cppVar_46904 = (cppVar_46904 & cppMask_un_8_);
	BIT_VEC cppVar_46905 = PC + 1;
	cppVar_46905 = (cppVar_46905 & cppMask_un_16_);
	BIT_VEC cppVar_46906 = ROM.rd(cppVar_46905);
	BIT_VEC cppVar_46907 = (cppVar_46906 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46908 = (cppVar_46907 & cppMask_un_5_);
	BIT_VEC cppVar_46909 = cppVar_46908 + 32;
	cppVar_46909 = (cppVar_46909 & cppMask_un_8_);
	BIT_VEC cppVar_46910 = (cppVar_46900) ? cppVar_46904 : cppVar_46909;
	bool cppVar_46912 = (cppVar_46910 == 135);
	BIT_VEC cppVar_46913 = PC + 1;
	cppVar_46913 = (cppVar_46913 & cppMask_un_16_);
	BIT_VEC cppVar_46914 = ROM.rd(cppVar_46913);
	BIT_VEC cppVar_46915 = (cppVar_46914 >> 7) & cppMask_un_1_;
	bool cppVar_46916 = (cppVar_46915 == 1);
	BIT_VEC cppVar_46917 = PC + 1;
	cppVar_46917 = (cppVar_46917 & cppMask_un_16_);
	BIT_VEC cppVar_46918 = ROM.rd(cppVar_46917);
	BIT_VEC cppVar_46919 = (cppVar_46918 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46920 = (cppVar_46919 << 3) | 0;
	cppVar_46920 = (cppVar_46920 & cppMask_un_8_);
	BIT_VEC cppVar_46921 = PC + 1;
	cppVar_46921 = (cppVar_46921 & cppMask_un_16_);
	BIT_VEC cppVar_46922 = ROM.rd(cppVar_46921);
	BIT_VEC cppVar_46923 = (cppVar_46922 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46924 = (cppVar_46923 & cppMask_un_5_);
	BIT_VEC cppVar_46925 = cppVar_46924 + 32;
	cppVar_46925 = (cppVar_46925 & cppMask_un_8_);
	BIT_VEC cppVar_46926 = (cppVar_46916) ? cppVar_46920 : cppVar_46925;
	bool cppVar_46928 = (cppVar_46926 == 136);
	BIT_VEC cppVar_46929 = PC + 1;
	cppVar_46929 = (cppVar_46929 & cppMask_un_16_);
	BIT_VEC cppVar_46930 = ROM.rd(cppVar_46929);
	BIT_VEC cppVar_46931 = (cppVar_46930 >> 7) & cppMask_un_1_;
	bool cppVar_46932 = (cppVar_46931 == 1);
	BIT_VEC cppVar_46933 = PC + 1;
	cppVar_46933 = (cppVar_46933 & cppMask_un_16_);
	BIT_VEC cppVar_46934 = ROM.rd(cppVar_46933);
	BIT_VEC cppVar_46935 = (cppVar_46934 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46936 = (cppVar_46935 << 3) | 0;
	cppVar_46936 = (cppVar_46936 & cppMask_un_8_);
	BIT_VEC cppVar_46937 = PC + 1;
	cppVar_46937 = (cppVar_46937 & cppMask_un_16_);
	BIT_VEC cppVar_46938 = ROM.rd(cppVar_46937);
	BIT_VEC cppVar_46939 = (cppVar_46938 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46940 = (cppVar_46939 & cppMask_un_5_);
	BIT_VEC cppVar_46941 = cppVar_46940 + 32;
	cppVar_46941 = (cppVar_46941 & cppMask_un_8_);
	BIT_VEC cppVar_46942 = (cppVar_46932) ? cppVar_46936 : cppVar_46941;
	bool cppVar_46944 = (cppVar_46942 == 137);
	BIT_VEC cppVar_46945 = PC + 1;
	cppVar_46945 = (cppVar_46945 & cppMask_un_16_);
	BIT_VEC cppVar_46946 = ROM.rd(cppVar_46945);
	BIT_VEC cppVar_46947 = (cppVar_46946 >> 7) & cppMask_un_1_;
	bool cppVar_46948 = (cppVar_46947 == 1);
	BIT_VEC cppVar_46949 = PC + 1;
	cppVar_46949 = (cppVar_46949 & cppMask_un_16_);
	BIT_VEC cppVar_46950 = ROM.rd(cppVar_46949);
	BIT_VEC cppVar_46951 = (cppVar_46950 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46952 = (cppVar_46951 << 3) | 0;
	cppVar_46952 = (cppVar_46952 & cppMask_un_8_);
	BIT_VEC cppVar_46953 = PC + 1;
	cppVar_46953 = (cppVar_46953 & cppMask_un_16_);
	BIT_VEC cppVar_46954 = ROM.rd(cppVar_46953);
	BIT_VEC cppVar_46955 = (cppVar_46954 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46956 = (cppVar_46955 & cppMask_un_5_);
	BIT_VEC cppVar_46957 = cppVar_46956 + 32;
	cppVar_46957 = (cppVar_46957 & cppMask_un_8_);
	BIT_VEC cppVar_46958 = (cppVar_46948) ? cppVar_46952 : cppVar_46957;
	bool cppVar_46960 = (cppVar_46958 == 138);
	BIT_VEC cppVar_46961 = PC + 1;
	cppVar_46961 = (cppVar_46961 & cppMask_un_16_);
	BIT_VEC cppVar_46962 = ROM.rd(cppVar_46961);
	BIT_VEC cppVar_46963 = (cppVar_46962 >> 7) & cppMask_un_1_;
	bool cppVar_46964 = (cppVar_46963 == 1);
	BIT_VEC cppVar_46965 = PC + 1;
	cppVar_46965 = (cppVar_46965 & cppMask_un_16_);
	BIT_VEC cppVar_46966 = ROM.rd(cppVar_46965);
	BIT_VEC cppVar_46967 = (cppVar_46966 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46968 = (cppVar_46967 << 3) | 0;
	cppVar_46968 = (cppVar_46968 & cppMask_un_8_);
	BIT_VEC cppVar_46969 = PC + 1;
	cppVar_46969 = (cppVar_46969 & cppMask_un_16_);
	BIT_VEC cppVar_46970 = ROM.rd(cppVar_46969);
	BIT_VEC cppVar_46971 = (cppVar_46970 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46972 = (cppVar_46971 & cppMask_un_5_);
	BIT_VEC cppVar_46973 = cppVar_46972 + 32;
	cppVar_46973 = (cppVar_46973 & cppMask_un_8_);
	BIT_VEC cppVar_46974 = (cppVar_46964) ? cppVar_46968 : cppVar_46973;
	bool cppVar_46976 = (cppVar_46974 == 140);
	BIT_VEC cppVar_46977 = PC + 1;
	cppVar_46977 = (cppVar_46977 & cppMask_un_16_);
	BIT_VEC cppVar_46978 = ROM.rd(cppVar_46977);
	BIT_VEC cppVar_46979 = (cppVar_46978 >> 7) & cppMask_un_1_;
	bool cppVar_46980 = (cppVar_46979 == 1);
	BIT_VEC cppVar_46981 = PC + 1;
	cppVar_46981 = (cppVar_46981 & cppMask_un_16_);
	BIT_VEC cppVar_46982 = ROM.rd(cppVar_46981);
	BIT_VEC cppVar_46983 = (cppVar_46982 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46984 = (cppVar_46983 << 3) | 0;
	cppVar_46984 = (cppVar_46984 & cppMask_un_8_);
	BIT_VEC cppVar_46985 = PC + 1;
	cppVar_46985 = (cppVar_46985 & cppMask_un_16_);
	BIT_VEC cppVar_46986 = ROM.rd(cppVar_46985);
	BIT_VEC cppVar_46987 = (cppVar_46986 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_46988 = (cppVar_46987 & cppMask_un_5_);
	BIT_VEC cppVar_46989 = cppVar_46988 + 32;
	cppVar_46989 = (cppVar_46989 & cppMask_un_8_);
	BIT_VEC cppVar_46990 = (cppVar_46980) ? cppVar_46984 : cppVar_46989;
	bool cppVar_46992 = (cppVar_46990 == 139);
	BIT_VEC cppVar_46993 = PC + 1;
	cppVar_46993 = (cppVar_46993 & cppMask_un_16_);
	BIT_VEC cppVar_46994 = ROM.rd(cppVar_46993);
	BIT_VEC cppVar_46995 = (cppVar_46994 >> 7) & cppMask_un_1_;
	bool cppVar_46996 = (cppVar_46995 == 1);
	BIT_VEC cppVar_46997 = PC + 1;
	cppVar_46997 = (cppVar_46997 & cppMask_un_16_);
	BIT_VEC cppVar_46998 = ROM.rd(cppVar_46997);
	BIT_VEC cppVar_46999 = (cppVar_46998 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47000 = (cppVar_46999 << 3) | 0;
	cppVar_47000 = (cppVar_47000 & cppMask_un_8_);
	BIT_VEC cppVar_47001 = PC + 1;
	cppVar_47001 = (cppVar_47001 & cppMask_un_16_);
	BIT_VEC cppVar_47002 = ROM.rd(cppVar_47001);
	BIT_VEC cppVar_47003 = (cppVar_47002 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47004 = (cppVar_47003 & cppMask_un_5_);
	BIT_VEC cppVar_47005 = cppVar_47004 + 32;
	cppVar_47005 = (cppVar_47005 & cppMask_un_8_);
	BIT_VEC cppVar_47006 = (cppVar_46996) ? cppVar_47000 : cppVar_47005;
	bool cppVar_47008 = (cppVar_47006 == 141);
	BIT_VEC cppVar_47009 = PC + 1;
	cppVar_47009 = (cppVar_47009 & cppMask_un_16_);
	BIT_VEC cppVar_47010 = ROM.rd(cppVar_47009);
	BIT_VEC cppVar_47011 = (cppVar_47010 >> 7) & cppMask_un_1_;
	bool cppVar_47012 = (cppVar_47011 == 1);
	BIT_VEC cppVar_47013 = PC + 1;
	cppVar_47013 = (cppVar_47013 & cppMask_un_16_);
	BIT_VEC cppVar_47014 = ROM.rd(cppVar_47013);
	BIT_VEC cppVar_47015 = (cppVar_47014 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47016 = (cppVar_47015 << 3) | 0;
	cppVar_47016 = (cppVar_47016 & cppMask_un_8_);
	BIT_VEC cppVar_47017 = PC + 1;
	cppVar_47017 = (cppVar_47017 & cppMask_un_16_);
	BIT_VEC cppVar_47018 = ROM.rd(cppVar_47017);
	BIT_VEC cppVar_47019 = (cppVar_47018 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47020 = (cppVar_47019 & cppMask_un_5_);
	BIT_VEC cppVar_47021 = cppVar_47020 + 32;
	cppVar_47021 = (cppVar_47021 & cppMask_un_8_);
	BIT_VEC cppVar_47022 = (cppVar_47012) ? cppVar_47016 : cppVar_47021;
	bool cppVar_47024 = (cppVar_47022 == 144);
	BIT_VEC cppVar_47025 = PC + 1;
	cppVar_47025 = (cppVar_47025 & cppMask_un_16_);
	BIT_VEC cppVar_47026 = ROM.rd(cppVar_47025);
	BIT_VEC cppVar_47027 = (cppVar_47026 >> 7) & cppMask_un_1_;
	bool cppVar_47028 = (cppVar_47027 == 1);
	BIT_VEC cppVar_47029 = PC + 1;
	cppVar_47029 = (cppVar_47029 & cppMask_un_16_);
	BIT_VEC cppVar_47030 = ROM.rd(cppVar_47029);
	BIT_VEC cppVar_47031 = (cppVar_47030 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47032 = (cppVar_47031 << 3) | 0;
	cppVar_47032 = (cppVar_47032 & cppMask_un_8_);
	BIT_VEC cppVar_47033 = PC + 1;
	cppVar_47033 = (cppVar_47033 & cppMask_un_16_);
	BIT_VEC cppVar_47034 = ROM.rd(cppVar_47033);
	BIT_VEC cppVar_47035 = (cppVar_47034 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47036 = (cppVar_47035 & cppMask_un_5_);
	BIT_VEC cppVar_47037 = cppVar_47036 + 32;
	cppVar_47037 = (cppVar_47037 & cppMask_un_8_);
	BIT_VEC cppVar_47038 = (cppVar_47028) ? cppVar_47032 : cppVar_47037;
	bool cppVar_47040 = (cppVar_47038 == 152);
	BIT_VEC cppVar_47041 = PC + 1;
	cppVar_47041 = (cppVar_47041 & cppMask_un_16_);
	BIT_VEC cppVar_47042 = ROM.rd(cppVar_47041);
	BIT_VEC cppVar_47043 = (cppVar_47042 >> 7) & cppMask_un_1_;
	bool cppVar_47044 = (cppVar_47043 == 1);
	BIT_VEC cppVar_47045 = PC + 1;
	cppVar_47045 = (cppVar_47045 & cppMask_un_16_);
	BIT_VEC cppVar_47046 = ROM.rd(cppVar_47045);
	BIT_VEC cppVar_47047 = (cppVar_47046 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47048 = (cppVar_47047 << 3) | 0;
	cppVar_47048 = (cppVar_47048 & cppMask_un_8_);
	BIT_VEC cppVar_47049 = PC + 1;
	cppVar_47049 = (cppVar_47049 & cppMask_un_16_);
	BIT_VEC cppVar_47050 = ROM.rd(cppVar_47049);
	BIT_VEC cppVar_47051 = (cppVar_47050 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47052 = (cppVar_47051 & cppMask_un_5_);
	BIT_VEC cppVar_47053 = cppVar_47052 + 32;
	cppVar_47053 = (cppVar_47053 & cppMask_un_8_);
	BIT_VEC cppVar_47054 = (cppVar_47044) ? cppVar_47048 : cppVar_47053;
	bool cppVar_47056 = (cppVar_47054 == 153);
	BIT_VEC cppVar_47057 = PC + 1;
	cppVar_47057 = (cppVar_47057 & cppMask_un_16_);
	BIT_VEC cppVar_47058 = ROM.rd(cppVar_47057);
	BIT_VEC cppVar_47059 = (cppVar_47058 >> 7) & cppMask_un_1_;
	bool cppVar_47060 = (cppVar_47059 == 1);
	BIT_VEC cppVar_47061 = PC + 1;
	cppVar_47061 = (cppVar_47061 & cppMask_un_16_);
	BIT_VEC cppVar_47062 = ROM.rd(cppVar_47061);
	BIT_VEC cppVar_47063 = (cppVar_47062 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47064 = (cppVar_47063 << 3) | 0;
	cppVar_47064 = (cppVar_47064 & cppMask_un_8_);
	BIT_VEC cppVar_47065 = PC + 1;
	cppVar_47065 = (cppVar_47065 & cppMask_un_16_);
	BIT_VEC cppVar_47066 = ROM.rd(cppVar_47065);
	BIT_VEC cppVar_47067 = (cppVar_47066 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47068 = (cppVar_47067 & cppMask_un_5_);
	BIT_VEC cppVar_47069 = cppVar_47068 + 32;
	cppVar_47069 = (cppVar_47069 & cppMask_un_8_);
	BIT_VEC cppVar_47070 = (cppVar_47060) ? cppVar_47064 : cppVar_47069;
	bool cppVar_47072 = (cppVar_47070 == 160);
	BIT_VEC cppVar_47073 = PC + 1;
	cppVar_47073 = (cppVar_47073 & cppMask_un_16_);
	BIT_VEC cppVar_47074 = ROM.rd(cppVar_47073);
	BIT_VEC cppVar_47075 = (cppVar_47074 >> 7) & cppMask_un_1_;
	bool cppVar_47076 = (cppVar_47075 == 1);
	BIT_VEC cppVar_47077 = PC + 1;
	cppVar_47077 = (cppVar_47077 & cppMask_un_16_);
	BIT_VEC cppVar_47078 = ROM.rd(cppVar_47077);
	BIT_VEC cppVar_47079 = (cppVar_47078 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47080 = (cppVar_47079 << 3) | 0;
	cppVar_47080 = (cppVar_47080 & cppMask_un_8_);
	BIT_VEC cppVar_47081 = PC + 1;
	cppVar_47081 = (cppVar_47081 & cppMask_un_16_);
	BIT_VEC cppVar_47082 = ROM.rd(cppVar_47081);
	BIT_VEC cppVar_47083 = (cppVar_47082 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47084 = (cppVar_47083 & cppMask_un_5_);
	BIT_VEC cppVar_47085 = cppVar_47084 + 32;
	cppVar_47085 = (cppVar_47085 & cppMask_un_8_);
	BIT_VEC cppVar_47086 = (cppVar_47076) ? cppVar_47080 : cppVar_47085;
	bool cppVar_47088 = (cppVar_47086 == 168);
	BIT_VEC cppVar_47089 = PC + 1;
	cppVar_47089 = (cppVar_47089 & cppMask_un_16_);
	BIT_VEC cppVar_47090 = ROM.rd(cppVar_47089);
	BIT_VEC cppVar_47091 = (cppVar_47090 >> 7) & cppMask_un_1_;
	bool cppVar_47092 = (cppVar_47091 == 1);
	BIT_VEC cppVar_47093 = PC + 1;
	cppVar_47093 = (cppVar_47093 & cppMask_un_16_);
	BIT_VEC cppVar_47094 = ROM.rd(cppVar_47093);
	BIT_VEC cppVar_47095 = (cppVar_47094 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47096 = (cppVar_47095 << 3) | 0;
	cppVar_47096 = (cppVar_47096 & cppMask_un_8_);
	BIT_VEC cppVar_47097 = PC + 1;
	cppVar_47097 = (cppVar_47097 & cppMask_un_16_);
	BIT_VEC cppVar_47098 = ROM.rd(cppVar_47097);
	BIT_VEC cppVar_47099 = (cppVar_47098 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47100 = (cppVar_47099 & cppMask_un_5_);
	BIT_VEC cppVar_47101 = cppVar_47100 + 32;
	cppVar_47101 = (cppVar_47101 & cppMask_un_8_);
	BIT_VEC cppVar_47102 = (cppVar_47092) ? cppVar_47096 : cppVar_47101;
	bool cppVar_47104 = (cppVar_47102 == 176);
	BIT_VEC cppVar_47105 = PC + 1;
	cppVar_47105 = (cppVar_47105 & cppMask_un_16_);
	BIT_VEC cppVar_47106 = ROM.rd(cppVar_47105);
	BIT_VEC cppVar_47107 = (cppVar_47106 >> 7) & cppMask_un_1_;
	bool cppVar_47108 = (cppVar_47107 == 1);
	BIT_VEC cppVar_47109 = PC + 1;
	cppVar_47109 = (cppVar_47109 & cppMask_un_16_);
	BIT_VEC cppVar_47110 = ROM.rd(cppVar_47109);
	BIT_VEC cppVar_47111 = (cppVar_47110 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47112 = (cppVar_47111 << 3) | 0;
	cppVar_47112 = (cppVar_47112 & cppMask_un_8_);
	BIT_VEC cppVar_47113 = PC + 1;
	cppVar_47113 = (cppVar_47113 & cppMask_un_16_);
	BIT_VEC cppVar_47114 = ROM.rd(cppVar_47113);
	BIT_VEC cppVar_47115 = (cppVar_47114 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47116 = (cppVar_47115 & cppMask_un_5_);
	BIT_VEC cppVar_47117 = cppVar_47116 + 32;
	cppVar_47117 = (cppVar_47117 & cppMask_un_8_);
	BIT_VEC cppVar_47118 = (cppVar_47108) ? cppVar_47112 : cppVar_47117;
	bool cppVar_47120 = (cppVar_47118 == 184);
	BIT_VEC cppVar_47121 = PC + 1;
	cppVar_47121 = (cppVar_47121 & cppMask_un_16_);
	BIT_VEC cppVar_47122 = ROM.rd(cppVar_47121);
	BIT_VEC cppVar_47123 = (cppVar_47122 >> 7) & cppMask_un_1_;
	bool cppVar_47124 = (cppVar_47123 == 1);
	BIT_VEC cppVar_47125 = PC + 1;
	cppVar_47125 = (cppVar_47125 & cppMask_un_16_);
	BIT_VEC cppVar_47126 = ROM.rd(cppVar_47125);
	BIT_VEC cppVar_47127 = (cppVar_47126 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47128 = (cppVar_47127 << 3) | 0;
	cppVar_47128 = (cppVar_47128 & cppMask_un_8_);
	BIT_VEC cppVar_47129 = PC + 1;
	cppVar_47129 = (cppVar_47129 & cppMask_un_16_);
	BIT_VEC cppVar_47130 = ROM.rd(cppVar_47129);
	BIT_VEC cppVar_47131 = (cppVar_47130 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47132 = (cppVar_47131 & cppMask_un_5_);
	BIT_VEC cppVar_47133 = cppVar_47132 + 32;
	cppVar_47133 = (cppVar_47133 & cppMask_un_8_);
	BIT_VEC cppVar_47134 = (cppVar_47124) ? cppVar_47128 : cppVar_47133;
	bool cppVar_47136 = (cppVar_47134 == 208);
	BIT_VEC cppVar_47137 = PC + 1;
	cppVar_47137 = (cppVar_47137 & cppMask_un_16_);
	BIT_VEC cppVar_47138 = ROM.rd(cppVar_47137);
	BIT_VEC cppVar_47139 = (cppVar_47138 >> 7) & cppMask_un_1_;
	bool cppVar_47140 = (cppVar_47139 == 1);
	BIT_VEC cppVar_47141 = PC + 1;
	cppVar_47141 = (cppVar_47141 & cppMask_un_16_);
	BIT_VEC cppVar_47142 = ROM.rd(cppVar_47141);
	BIT_VEC cppVar_47143 = (cppVar_47142 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47144 = (cppVar_47143 << 3) | 0;
	cppVar_47144 = (cppVar_47144 & cppMask_un_8_);
	BIT_VEC cppVar_47145 = PC + 1;
	cppVar_47145 = (cppVar_47145 & cppMask_un_16_);
	BIT_VEC cppVar_47146 = ROM.rd(cppVar_47145);
	BIT_VEC cppVar_47147 = (cppVar_47146 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47148 = (cppVar_47147 & cppMask_un_5_);
	BIT_VEC cppVar_47149 = cppVar_47148 + 32;
	cppVar_47149 = (cppVar_47149 & cppMask_un_8_);
	BIT_VEC cppVar_47150 = (cppVar_47140) ? cppVar_47144 : cppVar_47149;
	bool cppVar_47152 = (cppVar_47150 == 224);
	BIT_VEC cppVar_47153 = PC + 1;
	cppVar_47153 = (cppVar_47153 & cppMask_un_16_);
	BIT_VEC cppVar_47154 = ROM.rd(cppVar_47153);
	BIT_VEC cppVar_47155 = (cppVar_47154 >> 7) & cppMask_un_1_;
	bool cppVar_47156 = (cppVar_47155 == 1);
	BIT_VEC cppVar_47157 = PC + 1;
	cppVar_47157 = (cppVar_47157 & cppMask_un_16_);
	BIT_VEC cppVar_47158 = ROM.rd(cppVar_47157);
	BIT_VEC cppVar_47159 = (cppVar_47158 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47160 = (cppVar_47159 << 3) | 0;
	cppVar_47160 = (cppVar_47160 & cppMask_un_8_);
	BIT_VEC cppVar_47161 = PC + 1;
	cppVar_47161 = (cppVar_47161 & cppMask_un_16_);
	BIT_VEC cppVar_47162 = ROM.rd(cppVar_47161);
	BIT_VEC cppVar_47163 = (cppVar_47162 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47164 = (cppVar_47163 & cppMask_un_5_);
	BIT_VEC cppVar_47165 = cppVar_47164 + 32;
	cppVar_47165 = (cppVar_47165 & cppMask_un_8_);
	BIT_VEC cppVar_47166 = (cppVar_47156) ? cppVar_47160 : cppVar_47165;
	bool cppVar_47168 = (cppVar_47166 == 240);
	BIT_VEC cppVar_47170 = (cppVar_47168) ? B : 0;
	BIT_VEC cppVar_47171 = (cppVar_47152) ? ACC : cppVar_47170;
	BIT_VEC cppVar_47172 = (cppVar_47136) ? PSW : cppVar_47171;
	BIT_VEC cppVar_47173 = (cppVar_47120) ? IP : cppVar_47172;
	BIT_VEC cppVar_47174 = (cppVar_47104) ? P3 : cppVar_47173;
	BIT_VEC cppVar_47175 = (cppVar_47088) ? IE : cppVar_47174;
	BIT_VEC cppVar_47176 = (cppVar_47072) ? P2 : cppVar_47175;
	BIT_VEC cppVar_47177 = (cppVar_47056) ? SBUF : cppVar_47176;
	BIT_VEC cppVar_47178 = (cppVar_47040) ? SCON : cppVar_47177;
	BIT_VEC cppVar_47179 = (cppVar_47024) ? P1 : cppVar_47178;
	BIT_VEC cppVar_47180 = (cppVar_47008) ? TH1 : cppVar_47179;
	BIT_VEC cppVar_47181 = (cppVar_46992) ? TL1 : cppVar_47180;
	BIT_VEC cppVar_47182 = (cppVar_46976) ? TH0 : cppVar_47181;
	BIT_VEC cppVar_47183 = (cppVar_46960) ? TL0 : cppVar_47182;
	BIT_VEC cppVar_47184 = (cppVar_46944) ? TMOD : cppVar_47183;
	BIT_VEC cppVar_47185 = (cppVar_46928) ? TCON : cppVar_47184;
	BIT_VEC cppVar_47186 = (cppVar_46912) ? PCON : cppVar_47185;
	BIT_VEC cppVar_47187 = (cppVar_46896) ? DPH : cppVar_47186;
	BIT_VEC cppVar_47188 = (cppVar_46880) ? DPL : cppVar_47187;
	BIT_VEC cppVar_47189 = (cppVar_46864) ? SP : cppVar_47188;
	BIT_VEC cppVar_47190 = (cppVar_46848) ? P0 : cppVar_47189;
	BIT_VEC cppVar_47191 = (cppVar_46817) ? cppVar_46832 : cppVar_47190;
	BIT_VEC cppVar_47192 = cppVar_46800 & cppVar_47191;
	BIT_VEC cppVar_47194 = 1;
	BIT_VEC cppVar_47195 = PC + 1;
	cppVar_47195 = (cppVar_47195 & cppMask_un_16_);
	BIT_VEC cppVar_47196 = ROM.rd(cppVar_47195);
	BIT_VEC cppVar_47197 = (cppVar_47196 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_47198 = (cppVar_47197 & cppMask_un_3_);
	BIT_VEC cppVar_47199 = cppVar_47194 << static_cast<unsigned>(cppVar_47198);
	cppVar_47199 = (cppVar_47199 & cppMask_un_8_);
	BIT_VEC cppVar_47200 = cppVar_47192 | cppVar_47199;
	BIT_VEC cppVar_47201 = (cppVar_46793) ? cppVar_47200 : PSW;
	BIT_VEC cppVar_47202 = ROM.rd(PC);
	bool cppVar_47204 = (cppVar_47202 == 208);
	BIT_VEC cppVar_47206 = PC + 1;
	cppVar_47206 = (cppVar_47206 & cppMask_un_16_);
	BIT_VEC cppVar_47207 = ROM.rd(cppVar_47206);
	bool cppVar_47209 = (cppVar_47207 == 208);
	BIT_VEC cppVar_47210 = IRAM.rd(SP);
	BIT_VEC cppVar_47211 = (cppVar_47209) ? cppVar_47210 : PSW;
	BIT_VEC cppVar_47212 = ROM.rd(PC);
	bool cppVar_47214 = (cppVar_47212 == 245);
	BIT_VEC cppVar_47215 = ROM.rd(PC);
	bool cppVar_47217 = (cppVar_47215 == 197);
	bool cppVar_47218 = cppVar_47214 || cppVar_47217;
	BIT_VEC cppVar_47220 = PC + 1;
	cppVar_47220 = (cppVar_47220 & cppMask_un_16_);
	BIT_VEC cppVar_47221 = ROM.rd(cppVar_47220);
	bool cppVar_47223 = (cppVar_47221 == 208);
	BIT_VEC cppVar_47224 = (cppVar_47223) ? ACC : PSW;
	BIT_VEC cppVar_47225 = ROM.rd(PC);
	bool cppVar_47227 = (cppVar_47225 == 195);
	BIT_VEC cppVar_47229 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_47230 = (0 << 7) | cppVar_47229;
	cppVar_47230 = (cppVar_47230 & cppMask_un_8_);
	BIT_VEC cppVar_47231 = ROM.rd(PC);
	bool cppVar_47233 = (cppVar_47231 == 191);
	BIT_VEC cppVar_47235 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_47237 = (cppVar_47235 << 3) | 7;
	cppVar_47237 = (cppVar_47237 & cppMask_un_5_);
	BIT_VEC cppVar_47238 = (0 << 5) | cppVar_47237;
	cppVar_47238 = (cppVar_47238 & cppMask_un_8_);
	BIT_VEC cppVar_47239 = IRAM.rd(cppVar_47238);
	BIT_VEC cppVar_47241 = PC + 1;
	cppVar_47241 = (cppVar_47241 & cppMask_un_16_);
	BIT_VEC cppVar_47242 = ROM.rd(cppVar_47241);
	bool cppVar_47243 = cppVar_47239 < cppVar_47242;
	BIT_VEC cppVar_47246 = (cppVar_47243) ? 1 : 0;
	BIT_VEC cppVar_47247 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_47248 = (cppVar_47246 << 7) | cppVar_47247;
	cppVar_47248 = (cppVar_47248 & cppMask_un_8_);
	BIT_VEC cppVar_47249 = ROM.rd(PC);
	bool cppVar_47251 = (cppVar_47249 == 190);
	BIT_VEC cppVar_47253 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_47255 = (cppVar_47253 << 3) | 6;
	cppVar_47255 = (cppVar_47255 & cppMask_un_5_);
	BIT_VEC cppVar_47256 = (0 << 5) | cppVar_47255;
	cppVar_47256 = (cppVar_47256 & cppMask_un_8_);
	BIT_VEC cppVar_47257 = IRAM.rd(cppVar_47256);
	BIT_VEC cppVar_47259 = PC + 1;
	cppVar_47259 = (cppVar_47259 & cppMask_un_16_);
	BIT_VEC cppVar_47260 = ROM.rd(cppVar_47259);
	bool cppVar_47261 = cppVar_47257 < cppVar_47260;
	BIT_VEC cppVar_47264 = (cppVar_47261) ? 1 : 0;
	BIT_VEC cppVar_47265 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_47266 = (cppVar_47264 << 7) | cppVar_47265;
	cppVar_47266 = (cppVar_47266 & cppMask_un_8_);
	BIT_VEC cppVar_47267 = ROM.rd(PC);
	bool cppVar_47269 = (cppVar_47267 == 189);
	BIT_VEC cppVar_47271 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_47273 = (cppVar_47271 << 3) | 5;
	cppVar_47273 = (cppVar_47273 & cppMask_un_5_);
	BIT_VEC cppVar_47274 = (0 << 5) | cppVar_47273;
	cppVar_47274 = (cppVar_47274 & cppMask_un_8_);
	BIT_VEC cppVar_47275 = IRAM.rd(cppVar_47274);
	BIT_VEC cppVar_47277 = PC + 1;
	cppVar_47277 = (cppVar_47277 & cppMask_un_16_);
	BIT_VEC cppVar_47278 = ROM.rd(cppVar_47277);
	bool cppVar_47279 = cppVar_47275 < cppVar_47278;
	BIT_VEC cppVar_47282 = (cppVar_47279) ? 1 : 0;
	BIT_VEC cppVar_47283 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_47284 = (cppVar_47282 << 7) | cppVar_47283;
	cppVar_47284 = (cppVar_47284 & cppMask_un_8_);
	BIT_VEC cppVar_47285 = ROM.rd(PC);
	bool cppVar_47287 = (cppVar_47285 == 188);
	BIT_VEC cppVar_47289 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_47291 = (cppVar_47289 << 3) | 4;
	cppVar_47291 = (cppVar_47291 & cppMask_un_5_);
	BIT_VEC cppVar_47292 = (0 << 5) | cppVar_47291;
	cppVar_47292 = (cppVar_47292 & cppMask_un_8_);
	BIT_VEC cppVar_47293 = IRAM.rd(cppVar_47292);
	BIT_VEC cppVar_47295 = PC + 1;
	cppVar_47295 = (cppVar_47295 & cppMask_un_16_);
	BIT_VEC cppVar_47296 = ROM.rd(cppVar_47295);
	bool cppVar_47297 = cppVar_47293 < cppVar_47296;
	BIT_VEC cppVar_47300 = (cppVar_47297) ? 1 : 0;
	BIT_VEC cppVar_47301 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_47302 = (cppVar_47300 << 7) | cppVar_47301;
	cppVar_47302 = (cppVar_47302 & cppMask_un_8_);
	BIT_VEC cppVar_47303 = ROM.rd(PC);
	bool cppVar_47305 = (cppVar_47303 == 187);
	BIT_VEC cppVar_47307 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_47309 = (cppVar_47307 << 3) | 3;
	cppVar_47309 = (cppVar_47309 & cppMask_un_5_);
	BIT_VEC cppVar_47310 = (0 << 5) | cppVar_47309;
	cppVar_47310 = (cppVar_47310 & cppMask_un_8_);
	BIT_VEC cppVar_47311 = IRAM.rd(cppVar_47310);
	BIT_VEC cppVar_47313 = PC + 1;
	cppVar_47313 = (cppVar_47313 & cppMask_un_16_);
	BIT_VEC cppVar_47314 = ROM.rd(cppVar_47313);
	bool cppVar_47315 = cppVar_47311 < cppVar_47314;
	BIT_VEC cppVar_47318 = (cppVar_47315) ? 1 : 0;
	BIT_VEC cppVar_47319 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_47320 = (cppVar_47318 << 7) | cppVar_47319;
	cppVar_47320 = (cppVar_47320 & cppMask_un_8_);
	BIT_VEC cppVar_47321 = ROM.rd(PC);
	bool cppVar_47323 = (cppVar_47321 == 186);
	BIT_VEC cppVar_47325 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_47327 = (cppVar_47325 << 3) | 2;
	cppVar_47327 = (cppVar_47327 & cppMask_un_5_);
	BIT_VEC cppVar_47328 = (0 << 5) | cppVar_47327;
	cppVar_47328 = (cppVar_47328 & cppMask_un_8_);
	BIT_VEC cppVar_47329 = IRAM.rd(cppVar_47328);
	BIT_VEC cppVar_47331 = PC + 1;
	cppVar_47331 = (cppVar_47331 & cppMask_un_16_);
	BIT_VEC cppVar_47332 = ROM.rd(cppVar_47331);
	bool cppVar_47333 = cppVar_47329 < cppVar_47332;
	BIT_VEC cppVar_47336 = (cppVar_47333) ? 1 : 0;
	BIT_VEC cppVar_47337 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_47338 = (cppVar_47336 << 7) | cppVar_47337;
	cppVar_47338 = (cppVar_47338 & cppMask_un_8_);
	BIT_VEC cppVar_47339 = ROM.rd(PC);
	bool cppVar_47341 = (cppVar_47339 == 185);
	BIT_VEC cppVar_47343 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_47345 = (cppVar_47343 << 3) | 1;
	cppVar_47345 = (cppVar_47345 & cppMask_un_5_);
	BIT_VEC cppVar_47346 = (0 << 5) | cppVar_47345;
	cppVar_47346 = (cppVar_47346 & cppMask_un_8_);
	BIT_VEC cppVar_47347 = IRAM.rd(cppVar_47346);
	BIT_VEC cppVar_47349 = PC + 1;
	cppVar_47349 = (cppVar_47349 & cppMask_un_16_);
	BIT_VEC cppVar_47350 = ROM.rd(cppVar_47349);
	bool cppVar_47351 = cppVar_47347 < cppVar_47350;
	BIT_VEC cppVar_47354 = (cppVar_47351) ? 1 : 0;
	BIT_VEC cppVar_47355 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_47356 = (cppVar_47354 << 7) | cppVar_47355;
	cppVar_47356 = (cppVar_47356 & cppMask_un_8_);
	BIT_VEC cppVar_47357 = ROM.rd(PC);
	bool cppVar_47359 = (cppVar_47357 == 184);
	BIT_VEC cppVar_47361 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_47363 = (cppVar_47361 << 3) | 0;
	cppVar_47363 = (cppVar_47363 & cppMask_un_5_);
	BIT_VEC cppVar_47364 = (0 << 5) | cppVar_47363;
	cppVar_47364 = (cppVar_47364 & cppMask_un_8_);
	BIT_VEC cppVar_47365 = IRAM.rd(cppVar_47364);
	BIT_VEC cppVar_47367 = PC + 1;
	cppVar_47367 = (cppVar_47367 & cppMask_un_16_);
	BIT_VEC cppVar_47368 = ROM.rd(cppVar_47367);
	bool cppVar_47369 = cppVar_47365 < cppVar_47368;
	BIT_VEC cppVar_47372 = (cppVar_47369) ? 1 : 0;
	BIT_VEC cppVar_47373 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_47374 = (cppVar_47372 << 7) | cppVar_47373;
	cppVar_47374 = (cppVar_47374 & cppMask_un_8_);
	BIT_VEC cppVar_47375 = ROM.rd(PC);
	bool cppVar_47377 = (cppVar_47375 == 183);
	BIT_VEC cppVar_47379 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_47381 = (cppVar_47379 << 3) | 1;
	cppVar_47381 = (cppVar_47381 & cppMask_un_5_);
	BIT_VEC cppVar_47382 = (0 << 5) | cppVar_47381;
	cppVar_47382 = (cppVar_47382 & cppMask_un_8_);
	BIT_VEC cppVar_47383 = IRAM.rd(cppVar_47382);
	BIT_VEC cppVar_47384 = IRAM.rd(cppVar_47383);
	BIT_VEC cppVar_47386 = PC + 1;
	cppVar_47386 = (cppVar_47386 & cppMask_un_16_);
	BIT_VEC cppVar_47387 = ROM.rd(cppVar_47386);
	bool cppVar_47388 = cppVar_47384 < cppVar_47387;
	BIT_VEC cppVar_47391 = (cppVar_47388) ? 1 : 0;
	BIT_VEC cppVar_47392 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_47393 = (cppVar_47391 << 7) | cppVar_47392;
	cppVar_47393 = (cppVar_47393 & cppMask_un_8_);
	BIT_VEC cppVar_47394 = ROM.rd(PC);
	bool cppVar_47396 = (cppVar_47394 == 182);
	BIT_VEC cppVar_47398 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_47400 = (cppVar_47398 << 3) | 0;
	cppVar_47400 = (cppVar_47400 & cppMask_un_5_);
	BIT_VEC cppVar_47401 = (0 << 5) | cppVar_47400;
	cppVar_47401 = (cppVar_47401 & cppMask_un_8_);
	BIT_VEC cppVar_47402 = IRAM.rd(cppVar_47401);
	BIT_VEC cppVar_47403 = IRAM.rd(cppVar_47402);
	BIT_VEC cppVar_47405 = PC + 1;
	cppVar_47405 = (cppVar_47405 & cppMask_un_16_);
	BIT_VEC cppVar_47406 = ROM.rd(cppVar_47405);
	bool cppVar_47407 = cppVar_47403 < cppVar_47406;
	BIT_VEC cppVar_47410 = (cppVar_47407) ? 1 : 0;
	BIT_VEC cppVar_47411 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_47412 = (cppVar_47410 << 7) | cppVar_47411;
	cppVar_47412 = (cppVar_47412 & cppMask_un_8_);
	BIT_VEC cppVar_47413 = ROM.rd(PC);
	bool cppVar_47415 = (cppVar_47413 == 181);
	BIT_VEC cppVar_47417 = PC + 1;
	cppVar_47417 = (cppVar_47417 & cppMask_un_16_);
	BIT_VEC cppVar_47418 = ROM.rd(cppVar_47417);
	BIT_VEC cppVar_47419 = (cppVar_47418 >> 7) & cppMask_un_1_;
	bool cppVar_47421 = (cppVar_47419 == 0);
	BIT_VEC cppVar_47422 = PC + 1;
	cppVar_47422 = (cppVar_47422 & cppMask_un_16_);
	BIT_VEC cppVar_47423 = ROM.rd(cppVar_47422);
	BIT_VEC cppVar_47424 = IRAM.rd(cppVar_47423);
	BIT_VEC cppVar_47425 = PC + 1;
	cppVar_47425 = (cppVar_47425 & cppMask_un_16_);
	BIT_VEC cppVar_47426 = ROM.rd(cppVar_47425);
	bool cppVar_47428 = (cppVar_47426 == 128);
	BIT_VEC cppVar_47429 = PC + 1;
	cppVar_47429 = (cppVar_47429 & cppMask_un_16_);
	BIT_VEC cppVar_47430 = ROM.rd(cppVar_47429);
	bool cppVar_47432 = (cppVar_47430 == 129);
	BIT_VEC cppVar_47433 = PC + 1;
	cppVar_47433 = (cppVar_47433 & cppMask_un_16_);
	BIT_VEC cppVar_47434 = ROM.rd(cppVar_47433);
	bool cppVar_47436 = (cppVar_47434 == 130);
	BIT_VEC cppVar_47437 = PC + 1;
	cppVar_47437 = (cppVar_47437 & cppMask_un_16_);
	BIT_VEC cppVar_47438 = ROM.rd(cppVar_47437);
	bool cppVar_47440 = (cppVar_47438 == 131);
	BIT_VEC cppVar_47441 = PC + 1;
	cppVar_47441 = (cppVar_47441 & cppMask_un_16_);
	BIT_VEC cppVar_47442 = ROM.rd(cppVar_47441);
	bool cppVar_47444 = (cppVar_47442 == 135);
	BIT_VEC cppVar_47445 = PC + 1;
	cppVar_47445 = (cppVar_47445 & cppMask_un_16_);
	BIT_VEC cppVar_47446 = ROM.rd(cppVar_47445);
	bool cppVar_47448 = (cppVar_47446 == 136);
	BIT_VEC cppVar_47449 = PC + 1;
	cppVar_47449 = (cppVar_47449 & cppMask_un_16_);
	BIT_VEC cppVar_47450 = ROM.rd(cppVar_47449);
	bool cppVar_47452 = (cppVar_47450 == 137);
	BIT_VEC cppVar_47453 = PC + 1;
	cppVar_47453 = (cppVar_47453 & cppMask_un_16_);
	BIT_VEC cppVar_47454 = ROM.rd(cppVar_47453);
	bool cppVar_47456 = (cppVar_47454 == 138);
	BIT_VEC cppVar_47457 = PC + 1;
	cppVar_47457 = (cppVar_47457 & cppMask_un_16_);
	BIT_VEC cppVar_47458 = ROM.rd(cppVar_47457);
	bool cppVar_47460 = (cppVar_47458 == 140);
	BIT_VEC cppVar_47461 = PC + 1;
	cppVar_47461 = (cppVar_47461 & cppMask_un_16_);
	BIT_VEC cppVar_47462 = ROM.rd(cppVar_47461);
	bool cppVar_47464 = (cppVar_47462 == 139);
	BIT_VEC cppVar_47465 = PC + 1;
	cppVar_47465 = (cppVar_47465 & cppMask_un_16_);
	BIT_VEC cppVar_47466 = ROM.rd(cppVar_47465);
	bool cppVar_47468 = (cppVar_47466 == 141);
	BIT_VEC cppVar_47469 = PC + 1;
	cppVar_47469 = (cppVar_47469 & cppMask_un_16_);
	BIT_VEC cppVar_47470 = ROM.rd(cppVar_47469);
	bool cppVar_47472 = (cppVar_47470 == 144);
	BIT_VEC cppVar_47473 = PC + 1;
	cppVar_47473 = (cppVar_47473 & cppMask_un_16_);
	BIT_VEC cppVar_47474 = ROM.rd(cppVar_47473);
	bool cppVar_47476 = (cppVar_47474 == 152);
	BIT_VEC cppVar_47477 = PC + 1;
	cppVar_47477 = (cppVar_47477 & cppMask_un_16_);
	BIT_VEC cppVar_47478 = ROM.rd(cppVar_47477);
	bool cppVar_47480 = (cppVar_47478 == 153);
	BIT_VEC cppVar_47481 = PC + 1;
	cppVar_47481 = (cppVar_47481 & cppMask_un_16_);
	BIT_VEC cppVar_47482 = ROM.rd(cppVar_47481);
	bool cppVar_47484 = (cppVar_47482 == 160);
	BIT_VEC cppVar_47485 = PC + 1;
	cppVar_47485 = (cppVar_47485 & cppMask_un_16_);
	BIT_VEC cppVar_47486 = ROM.rd(cppVar_47485);
	bool cppVar_47488 = (cppVar_47486 == 168);
	BIT_VEC cppVar_47489 = PC + 1;
	cppVar_47489 = (cppVar_47489 & cppMask_un_16_);
	BIT_VEC cppVar_47490 = ROM.rd(cppVar_47489);
	bool cppVar_47492 = (cppVar_47490 == 176);
	BIT_VEC cppVar_47493 = PC + 1;
	cppVar_47493 = (cppVar_47493 & cppMask_un_16_);
	BIT_VEC cppVar_47494 = ROM.rd(cppVar_47493);
	bool cppVar_47496 = (cppVar_47494 == 184);
	BIT_VEC cppVar_47497 = PC + 1;
	cppVar_47497 = (cppVar_47497 & cppMask_un_16_);
	BIT_VEC cppVar_47498 = ROM.rd(cppVar_47497);
	bool cppVar_47500 = (cppVar_47498 == 208);
	BIT_VEC cppVar_47501 = PC + 1;
	cppVar_47501 = (cppVar_47501 & cppMask_un_16_);
	BIT_VEC cppVar_47502 = ROM.rd(cppVar_47501);
	bool cppVar_47504 = (cppVar_47502 == 224);
	BIT_VEC cppVar_47505 = PC + 1;
	cppVar_47505 = (cppVar_47505 & cppMask_un_16_);
	BIT_VEC cppVar_47506 = ROM.rd(cppVar_47505);
	bool cppVar_47508 = (cppVar_47506 == 240);
	BIT_VEC cppVar_47510 = (cppVar_47508) ? B : 0;
	BIT_VEC cppVar_47511 = (cppVar_47504) ? ACC : cppVar_47510;
	BIT_VEC cppVar_47512 = (cppVar_47500) ? PSW : cppVar_47511;
	BIT_VEC cppVar_47513 = (cppVar_47496) ? IP : cppVar_47512;
	BIT_VEC cppVar_47514 = (cppVar_47492) ? P3 : cppVar_47513;
	BIT_VEC cppVar_47515 = (cppVar_47488) ? IE : cppVar_47514;
	BIT_VEC cppVar_47516 = (cppVar_47484) ? P2 : cppVar_47515;
	BIT_VEC cppVar_47517 = (cppVar_47480) ? SBUF : cppVar_47516;
	BIT_VEC cppVar_47518 = (cppVar_47476) ? SCON : cppVar_47517;
	BIT_VEC cppVar_47519 = (cppVar_47472) ? P1 : cppVar_47518;
	BIT_VEC cppVar_47520 = (cppVar_47468) ? TH1 : cppVar_47519;
	BIT_VEC cppVar_47521 = (cppVar_47464) ? TL1 : cppVar_47520;
	BIT_VEC cppVar_47522 = (cppVar_47460) ? TH0 : cppVar_47521;
	BIT_VEC cppVar_47523 = (cppVar_47456) ? TL0 : cppVar_47522;
	BIT_VEC cppVar_47524 = (cppVar_47452) ? TMOD : cppVar_47523;
	BIT_VEC cppVar_47525 = (cppVar_47448) ? TCON : cppVar_47524;
	BIT_VEC cppVar_47526 = (cppVar_47444) ? PCON : cppVar_47525;
	BIT_VEC cppVar_47527 = (cppVar_47440) ? DPH : cppVar_47526;
	BIT_VEC cppVar_47528 = (cppVar_47436) ? DPL : cppVar_47527;
	BIT_VEC cppVar_47529 = (cppVar_47432) ? SP : cppVar_47528;
	BIT_VEC cppVar_47530 = (cppVar_47428) ? P0 : cppVar_47529;
	BIT_VEC cppVar_47531 = (cppVar_47421) ? cppVar_47424 : cppVar_47530;
	bool cppVar_47532 = ACC < cppVar_47531;
	BIT_VEC cppVar_47535 = (cppVar_47532) ? 1 : 0;
	BIT_VEC cppVar_47536 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_47537 = (cppVar_47535 << 7) | cppVar_47536;
	cppVar_47537 = (cppVar_47537 & cppMask_un_8_);
	BIT_VEC cppVar_47538 = ROM.rd(PC);
	bool cppVar_47540 = (cppVar_47538 == 180);
	BIT_VEC cppVar_47542 = PC + 1;
	cppVar_47542 = (cppVar_47542 & cppMask_un_16_);
	BIT_VEC cppVar_47543 = ROM.rd(cppVar_47542);
	bool cppVar_47544 = ACC < cppVar_47543;
	BIT_VEC cppVar_47547 = (cppVar_47544) ? 1 : 0;
	BIT_VEC cppVar_47548 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_47549 = (cppVar_47547 << 7) | cppVar_47548;
	cppVar_47549 = (cppVar_47549 & cppMask_un_8_);
	BIT_VEC cppVar_47550 = ROM.rd(PC);
	bool cppVar_47552 = (cppVar_47550 == 179);
	BIT_VEC cppVar_47553 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_47554 = ~cppVar_47553;
	BIT_VEC cppVar_47555 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_47556 = (cppVar_47554 << 7) | cppVar_47555;
	cppVar_47556 = (cppVar_47556 & cppMask_un_8_);
	BIT_VEC cppVar_47557 = ROM.rd(PC);
	bool cppVar_47559 = (cppVar_47557 == 178);
	BIT_VEC cppVar_47561 = PC + 1;
	cppVar_47561 = (cppVar_47561 & cppMask_un_16_);
	BIT_VEC cppVar_47562 = ROM.rd(cppVar_47561);
	BIT_VEC cppVar_47563 = (cppVar_47562 >> 7) & cppMask_un_1_;
	bool cppVar_47565 = (cppVar_47563 == 1);
	BIT_VEC cppVar_47566 = PC + 1;
	cppVar_47566 = (cppVar_47566 & cppMask_un_16_);
	BIT_VEC cppVar_47567 = ROM.rd(cppVar_47566);
	BIT_VEC cppVar_47568 = (cppVar_47567 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47570 = (cppVar_47568 << 3) | 0;
	cppVar_47570 = (cppVar_47570 & cppMask_un_8_);
	BIT_VEC cppVar_47571 = PC + 1;
	cppVar_47571 = (cppVar_47571 & cppMask_un_16_);
	BIT_VEC cppVar_47572 = ROM.rd(cppVar_47571);
	BIT_VEC cppVar_47573 = (cppVar_47572 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47574 = (cppVar_47573 & cppMask_un_5_);
	BIT_VEC cppVar_47576 = cppVar_47574 + 32;
	cppVar_47576 = (cppVar_47576 & cppMask_un_8_);
	BIT_VEC cppVar_47577 = (cppVar_47565) ? cppVar_47570 : cppVar_47576;
	bool cppVar_47579 = (cppVar_47577 == 208);
	BIT_VEC cppVar_47581 = PC + 1;
	cppVar_47581 = (cppVar_47581 & cppMask_un_16_);
	BIT_VEC cppVar_47582 = ROM.rd(cppVar_47581);
	BIT_VEC cppVar_47583 = (cppVar_47582 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_47584 = (cppVar_47583 & cppMask_un_3_);
	BIT_VEC cppVar_47585 = 1 << static_cast<unsigned>(cppVar_47584);
	cppVar_47585 = (cppVar_47585 & cppMask_un_8_);
	BIT_VEC cppVar_47586 = ~cppVar_47585;
	BIT_VEC cppVar_47587 = PC + 1;
	cppVar_47587 = (cppVar_47587 & cppMask_un_16_);
	BIT_VEC cppVar_47588 = ROM.rd(cppVar_47587);
	BIT_VEC cppVar_47589 = (cppVar_47588 >> 7) & cppMask_un_1_;
	bool cppVar_47590 = (cppVar_47589 == 1);
	BIT_VEC cppVar_47591 = PC + 1;
	cppVar_47591 = (cppVar_47591 & cppMask_un_16_);
	BIT_VEC cppVar_47592 = ROM.rd(cppVar_47591);
	BIT_VEC cppVar_47593 = (cppVar_47592 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47594 = (cppVar_47593 << 3) | 0;
	cppVar_47594 = (cppVar_47594 & cppMask_un_8_);
	BIT_VEC cppVar_47595 = PC + 1;
	cppVar_47595 = (cppVar_47595 & cppMask_un_16_);
	BIT_VEC cppVar_47596 = ROM.rd(cppVar_47595);
	BIT_VEC cppVar_47597 = (cppVar_47596 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47598 = (cppVar_47597 & cppMask_un_5_);
	BIT_VEC cppVar_47599 = cppVar_47598 + 32;
	cppVar_47599 = (cppVar_47599 & cppMask_un_8_);
	BIT_VEC cppVar_47600 = (cppVar_47590) ? cppVar_47594 : cppVar_47599;
	BIT_VEC cppVar_47601 = (cppVar_47600 >> 7) & cppMask_un_1_;
	bool cppVar_47603 = (cppVar_47601 == 0);
	BIT_VEC cppVar_47604 = PC + 1;
	cppVar_47604 = (cppVar_47604 & cppMask_un_16_);
	BIT_VEC cppVar_47605 = ROM.rd(cppVar_47604);
	BIT_VEC cppVar_47606 = (cppVar_47605 >> 7) & cppMask_un_1_;
	bool cppVar_47607 = (cppVar_47606 == 1);
	BIT_VEC cppVar_47608 = PC + 1;
	cppVar_47608 = (cppVar_47608 & cppMask_un_16_);
	BIT_VEC cppVar_47609 = ROM.rd(cppVar_47608);
	BIT_VEC cppVar_47610 = (cppVar_47609 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47611 = (cppVar_47610 << 3) | 0;
	cppVar_47611 = (cppVar_47611 & cppMask_un_8_);
	BIT_VEC cppVar_47612 = PC + 1;
	cppVar_47612 = (cppVar_47612 & cppMask_un_16_);
	BIT_VEC cppVar_47613 = ROM.rd(cppVar_47612);
	BIT_VEC cppVar_47614 = (cppVar_47613 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47615 = (cppVar_47614 & cppMask_un_5_);
	BIT_VEC cppVar_47616 = cppVar_47615 + 32;
	cppVar_47616 = (cppVar_47616 & cppMask_un_8_);
	BIT_VEC cppVar_47617 = (cppVar_47607) ? cppVar_47611 : cppVar_47616;
	BIT_VEC cppVar_47618 = IRAM.rd(cppVar_47617);
	BIT_VEC cppVar_47619 = PC + 1;
	cppVar_47619 = (cppVar_47619 & cppMask_un_16_);
	BIT_VEC cppVar_47620 = ROM.rd(cppVar_47619);
	BIT_VEC cppVar_47621 = (cppVar_47620 >> 7) & cppMask_un_1_;
	bool cppVar_47622 = (cppVar_47621 == 1);
	BIT_VEC cppVar_47623 = PC + 1;
	cppVar_47623 = (cppVar_47623 & cppMask_un_16_);
	BIT_VEC cppVar_47624 = ROM.rd(cppVar_47623);
	BIT_VEC cppVar_47625 = (cppVar_47624 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47626 = (cppVar_47625 << 3) | 0;
	cppVar_47626 = (cppVar_47626 & cppMask_un_8_);
	BIT_VEC cppVar_47627 = PC + 1;
	cppVar_47627 = (cppVar_47627 & cppMask_un_16_);
	BIT_VEC cppVar_47628 = ROM.rd(cppVar_47627);
	BIT_VEC cppVar_47629 = (cppVar_47628 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47630 = (cppVar_47629 & cppMask_un_5_);
	BIT_VEC cppVar_47631 = cppVar_47630 + 32;
	cppVar_47631 = (cppVar_47631 & cppMask_un_8_);
	BIT_VEC cppVar_47632 = (cppVar_47622) ? cppVar_47626 : cppVar_47631;
	bool cppVar_47634 = (cppVar_47632 == 128);
	BIT_VEC cppVar_47635 = PC + 1;
	cppVar_47635 = (cppVar_47635 & cppMask_un_16_);
	BIT_VEC cppVar_47636 = ROM.rd(cppVar_47635);
	BIT_VEC cppVar_47637 = (cppVar_47636 >> 7) & cppMask_un_1_;
	bool cppVar_47638 = (cppVar_47637 == 1);
	BIT_VEC cppVar_47639 = PC + 1;
	cppVar_47639 = (cppVar_47639 & cppMask_un_16_);
	BIT_VEC cppVar_47640 = ROM.rd(cppVar_47639);
	BIT_VEC cppVar_47641 = (cppVar_47640 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47642 = (cppVar_47641 << 3) | 0;
	cppVar_47642 = (cppVar_47642 & cppMask_un_8_);
	BIT_VEC cppVar_47643 = PC + 1;
	cppVar_47643 = (cppVar_47643 & cppMask_un_16_);
	BIT_VEC cppVar_47644 = ROM.rd(cppVar_47643);
	BIT_VEC cppVar_47645 = (cppVar_47644 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47646 = (cppVar_47645 & cppMask_un_5_);
	BIT_VEC cppVar_47647 = cppVar_47646 + 32;
	cppVar_47647 = (cppVar_47647 & cppMask_un_8_);
	BIT_VEC cppVar_47648 = (cppVar_47638) ? cppVar_47642 : cppVar_47647;
	bool cppVar_47650 = (cppVar_47648 == 129);
	BIT_VEC cppVar_47651 = PC + 1;
	cppVar_47651 = (cppVar_47651 & cppMask_un_16_);
	BIT_VEC cppVar_47652 = ROM.rd(cppVar_47651);
	BIT_VEC cppVar_47653 = (cppVar_47652 >> 7) & cppMask_un_1_;
	bool cppVar_47654 = (cppVar_47653 == 1);
	BIT_VEC cppVar_47655 = PC + 1;
	cppVar_47655 = (cppVar_47655 & cppMask_un_16_);
	BIT_VEC cppVar_47656 = ROM.rd(cppVar_47655);
	BIT_VEC cppVar_47657 = (cppVar_47656 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47658 = (cppVar_47657 << 3) | 0;
	cppVar_47658 = (cppVar_47658 & cppMask_un_8_);
	BIT_VEC cppVar_47659 = PC + 1;
	cppVar_47659 = (cppVar_47659 & cppMask_un_16_);
	BIT_VEC cppVar_47660 = ROM.rd(cppVar_47659);
	BIT_VEC cppVar_47661 = (cppVar_47660 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47662 = (cppVar_47661 & cppMask_un_5_);
	BIT_VEC cppVar_47663 = cppVar_47662 + 32;
	cppVar_47663 = (cppVar_47663 & cppMask_un_8_);
	BIT_VEC cppVar_47664 = (cppVar_47654) ? cppVar_47658 : cppVar_47663;
	bool cppVar_47666 = (cppVar_47664 == 130);
	BIT_VEC cppVar_47667 = PC + 1;
	cppVar_47667 = (cppVar_47667 & cppMask_un_16_);
	BIT_VEC cppVar_47668 = ROM.rd(cppVar_47667);
	BIT_VEC cppVar_47669 = (cppVar_47668 >> 7) & cppMask_un_1_;
	bool cppVar_47670 = (cppVar_47669 == 1);
	BIT_VEC cppVar_47671 = PC + 1;
	cppVar_47671 = (cppVar_47671 & cppMask_un_16_);
	BIT_VEC cppVar_47672 = ROM.rd(cppVar_47671);
	BIT_VEC cppVar_47673 = (cppVar_47672 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47674 = (cppVar_47673 << 3) | 0;
	cppVar_47674 = (cppVar_47674 & cppMask_un_8_);
	BIT_VEC cppVar_47675 = PC + 1;
	cppVar_47675 = (cppVar_47675 & cppMask_un_16_);
	BIT_VEC cppVar_47676 = ROM.rd(cppVar_47675);
	BIT_VEC cppVar_47677 = (cppVar_47676 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47678 = (cppVar_47677 & cppMask_un_5_);
	BIT_VEC cppVar_47679 = cppVar_47678 + 32;
	cppVar_47679 = (cppVar_47679 & cppMask_un_8_);
	BIT_VEC cppVar_47680 = (cppVar_47670) ? cppVar_47674 : cppVar_47679;
	bool cppVar_47682 = (cppVar_47680 == 131);
	BIT_VEC cppVar_47683 = PC + 1;
	cppVar_47683 = (cppVar_47683 & cppMask_un_16_);
	BIT_VEC cppVar_47684 = ROM.rd(cppVar_47683);
	BIT_VEC cppVar_47685 = (cppVar_47684 >> 7) & cppMask_un_1_;
	bool cppVar_47686 = (cppVar_47685 == 1);
	BIT_VEC cppVar_47687 = PC + 1;
	cppVar_47687 = (cppVar_47687 & cppMask_un_16_);
	BIT_VEC cppVar_47688 = ROM.rd(cppVar_47687);
	BIT_VEC cppVar_47689 = (cppVar_47688 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47690 = (cppVar_47689 << 3) | 0;
	cppVar_47690 = (cppVar_47690 & cppMask_un_8_);
	BIT_VEC cppVar_47691 = PC + 1;
	cppVar_47691 = (cppVar_47691 & cppMask_un_16_);
	BIT_VEC cppVar_47692 = ROM.rd(cppVar_47691);
	BIT_VEC cppVar_47693 = (cppVar_47692 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47694 = (cppVar_47693 & cppMask_un_5_);
	BIT_VEC cppVar_47695 = cppVar_47694 + 32;
	cppVar_47695 = (cppVar_47695 & cppMask_un_8_);
	BIT_VEC cppVar_47696 = (cppVar_47686) ? cppVar_47690 : cppVar_47695;
	bool cppVar_47698 = (cppVar_47696 == 135);
	BIT_VEC cppVar_47699 = PC + 1;
	cppVar_47699 = (cppVar_47699 & cppMask_un_16_);
	BIT_VEC cppVar_47700 = ROM.rd(cppVar_47699);
	BIT_VEC cppVar_47701 = (cppVar_47700 >> 7) & cppMask_un_1_;
	bool cppVar_47702 = (cppVar_47701 == 1);
	BIT_VEC cppVar_47703 = PC + 1;
	cppVar_47703 = (cppVar_47703 & cppMask_un_16_);
	BIT_VEC cppVar_47704 = ROM.rd(cppVar_47703);
	BIT_VEC cppVar_47705 = (cppVar_47704 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47706 = (cppVar_47705 << 3) | 0;
	cppVar_47706 = (cppVar_47706 & cppMask_un_8_);
	BIT_VEC cppVar_47707 = PC + 1;
	cppVar_47707 = (cppVar_47707 & cppMask_un_16_);
	BIT_VEC cppVar_47708 = ROM.rd(cppVar_47707);
	BIT_VEC cppVar_47709 = (cppVar_47708 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47710 = (cppVar_47709 & cppMask_un_5_);
	BIT_VEC cppVar_47711 = cppVar_47710 + 32;
	cppVar_47711 = (cppVar_47711 & cppMask_un_8_);
	BIT_VEC cppVar_47712 = (cppVar_47702) ? cppVar_47706 : cppVar_47711;
	bool cppVar_47714 = (cppVar_47712 == 136);
	BIT_VEC cppVar_47715 = PC + 1;
	cppVar_47715 = (cppVar_47715 & cppMask_un_16_);
	BIT_VEC cppVar_47716 = ROM.rd(cppVar_47715);
	BIT_VEC cppVar_47717 = (cppVar_47716 >> 7) & cppMask_un_1_;
	bool cppVar_47718 = (cppVar_47717 == 1);
	BIT_VEC cppVar_47719 = PC + 1;
	cppVar_47719 = (cppVar_47719 & cppMask_un_16_);
	BIT_VEC cppVar_47720 = ROM.rd(cppVar_47719);
	BIT_VEC cppVar_47721 = (cppVar_47720 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47722 = (cppVar_47721 << 3) | 0;
	cppVar_47722 = (cppVar_47722 & cppMask_un_8_);
	BIT_VEC cppVar_47723 = PC + 1;
	cppVar_47723 = (cppVar_47723 & cppMask_un_16_);
	BIT_VEC cppVar_47724 = ROM.rd(cppVar_47723);
	BIT_VEC cppVar_47725 = (cppVar_47724 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47726 = (cppVar_47725 & cppMask_un_5_);
	BIT_VEC cppVar_47727 = cppVar_47726 + 32;
	cppVar_47727 = (cppVar_47727 & cppMask_un_8_);
	BIT_VEC cppVar_47728 = (cppVar_47718) ? cppVar_47722 : cppVar_47727;
	bool cppVar_47730 = (cppVar_47728 == 137);
	BIT_VEC cppVar_47731 = PC + 1;
	cppVar_47731 = (cppVar_47731 & cppMask_un_16_);
	BIT_VEC cppVar_47732 = ROM.rd(cppVar_47731);
	BIT_VEC cppVar_47733 = (cppVar_47732 >> 7) & cppMask_un_1_;
	bool cppVar_47734 = (cppVar_47733 == 1);
	BIT_VEC cppVar_47735 = PC + 1;
	cppVar_47735 = (cppVar_47735 & cppMask_un_16_);
	BIT_VEC cppVar_47736 = ROM.rd(cppVar_47735);
	BIT_VEC cppVar_47737 = (cppVar_47736 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47738 = (cppVar_47737 << 3) | 0;
	cppVar_47738 = (cppVar_47738 & cppMask_un_8_);
	BIT_VEC cppVar_47739 = PC + 1;
	cppVar_47739 = (cppVar_47739 & cppMask_un_16_);
	BIT_VEC cppVar_47740 = ROM.rd(cppVar_47739);
	BIT_VEC cppVar_47741 = (cppVar_47740 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47742 = (cppVar_47741 & cppMask_un_5_);
	BIT_VEC cppVar_47743 = cppVar_47742 + 32;
	cppVar_47743 = (cppVar_47743 & cppMask_un_8_);
	BIT_VEC cppVar_47744 = (cppVar_47734) ? cppVar_47738 : cppVar_47743;
	bool cppVar_47746 = (cppVar_47744 == 138);
	BIT_VEC cppVar_47747 = PC + 1;
	cppVar_47747 = (cppVar_47747 & cppMask_un_16_);
	BIT_VEC cppVar_47748 = ROM.rd(cppVar_47747);
	BIT_VEC cppVar_47749 = (cppVar_47748 >> 7) & cppMask_un_1_;
	bool cppVar_47750 = (cppVar_47749 == 1);
	BIT_VEC cppVar_47751 = PC + 1;
	cppVar_47751 = (cppVar_47751 & cppMask_un_16_);
	BIT_VEC cppVar_47752 = ROM.rd(cppVar_47751);
	BIT_VEC cppVar_47753 = (cppVar_47752 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47754 = (cppVar_47753 << 3) | 0;
	cppVar_47754 = (cppVar_47754 & cppMask_un_8_);
	BIT_VEC cppVar_47755 = PC + 1;
	cppVar_47755 = (cppVar_47755 & cppMask_un_16_);
	BIT_VEC cppVar_47756 = ROM.rd(cppVar_47755);
	BIT_VEC cppVar_47757 = (cppVar_47756 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47758 = (cppVar_47757 & cppMask_un_5_);
	BIT_VEC cppVar_47759 = cppVar_47758 + 32;
	cppVar_47759 = (cppVar_47759 & cppMask_un_8_);
	BIT_VEC cppVar_47760 = (cppVar_47750) ? cppVar_47754 : cppVar_47759;
	bool cppVar_47762 = (cppVar_47760 == 140);
	BIT_VEC cppVar_47763 = PC + 1;
	cppVar_47763 = (cppVar_47763 & cppMask_un_16_);
	BIT_VEC cppVar_47764 = ROM.rd(cppVar_47763);
	BIT_VEC cppVar_47765 = (cppVar_47764 >> 7) & cppMask_un_1_;
	bool cppVar_47766 = (cppVar_47765 == 1);
	BIT_VEC cppVar_47767 = PC + 1;
	cppVar_47767 = (cppVar_47767 & cppMask_un_16_);
	BIT_VEC cppVar_47768 = ROM.rd(cppVar_47767);
	BIT_VEC cppVar_47769 = (cppVar_47768 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47770 = (cppVar_47769 << 3) | 0;
	cppVar_47770 = (cppVar_47770 & cppMask_un_8_);
	BIT_VEC cppVar_47771 = PC + 1;
	cppVar_47771 = (cppVar_47771 & cppMask_un_16_);
	BIT_VEC cppVar_47772 = ROM.rd(cppVar_47771);
	BIT_VEC cppVar_47773 = (cppVar_47772 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47774 = (cppVar_47773 & cppMask_un_5_);
	BIT_VEC cppVar_47775 = cppVar_47774 + 32;
	cppVar_47775 = (cppVar_47775 & cppMask_un_8_);
	BIT_VEC cppVar_47776 = (cppVar_47766) ? cppVar_47770 : cppVar_47775;
	bool cppVar_47778 = (cppVar_47776 == 139);
	BIT_VEC cppVar_47779 = PC + 1;
	cppVar_47779 = (cppVar_47779 & cppMask_un_16_);
	BIT_VEC cppVar_47780 = ROM.rd(cppVar_47779);
	BIT_VEC cppVar_47781 = (cppVar_47780 >> 7) & cppMask_un_1_;
	bool cppVar_47782 = (cppVar_47781 == 1);
	BIT_VEC cppVar_47783 = PC + 1;
	cppVar_47783 = (cppVar_47783 & cppMask_un_16_);
	BIT_VEC cppVar_47784 = ROM.rd(cppVar_47783);
	BIT_VEC cppVar_47785 = (cppVar_47784 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47786 = (cppVar_47785 << 3) | 0;
	cppVar_47786 = (cppVar_47786 & cppMask_un_8_);
	BIT_VEC cppVar_47787 = PC + 1;
	cppVar_47787 = (cppVar_47787 & cppMask_un_16_);
	BIT_VEC cppVar_47788 = ROM.rd(cppVar_47787);
	BIT_VEC cppVar_47789 = (cppVar_47788 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47790 = (cppVar_47789 & cppMask_un_5_);
	BIT_VEC cppVar_47791 = cppVar_47790 + 32;
	cppVar_47791 = (cppVar_47791 & cppMask_un_8_);
	BIT_VEC cppVar_47792 = (cppVar_47782) ? cppVar_47786 : cppVar_47791;
	bool cppVar_47794 = (cppVar_47792 == 141);
	BIT_VEC cppVar_47795 = PC + 1;
	cppVar_47795 = (cppVar_47795 & cppMask_un_16_);
	BIT_VEC cppVar_47796 = ROM.rd(cppVar_47795);
	BIT_VEC cppVar_47797 = (cppVar_47796 >> 7) & cppMask_un_1_;
	bool cppVar_47798 = (cppVar_47797 == 1);
	BIT_VEC cppVar_47799 = PC + 1;
	cppVar_47799 = (cppVar_47799 & cppMask_un_16_);
	BIT_VEC cppVar_47800 = ROM.rd(cppVar_47799);
	BIT_VEC cppVar_47801 = (cppVar_47800 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47802 = (cppVar_47801 << 3) | 0;
	cppVar_47802 = (cppVar_47802 & cppMask_un_8_);
	BIT_VEC cppVar_47803 = PC + 1;
	cppVar_47803 = (cppVar_47803 & cppMask_un_16_);
	BIT_VEC cppVar_47804 = ROM.rd(cppVar_47803);
	BIT_VEC cppVar_47805 = (cppVar_47804 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47806 = (cppVar_47805 & cppMask_un_5_);
	BIT_VEC cppVar_47807 = cppVar_47806 + 32;
	cppVar_47807 = (cppVar_47807 & cppMask_un_8_);
	BIT_VEC cppVar_47808 = (cppVar_47798) ? cppVar_47802 : cppVar_47807;
	bool cppVar_47810 = (cppVar_47808 == 144);
	BIT_VEC cppVar_47811 = PC + 1;
	cppVar_47811 = (cppVar_47811 & cppMask_un_16_);
	BIT_VEC cppVar_47812 = ROM.rd(cppVar_47811);
	BIT_VEC cppVar_47813 = (cppVar_47812 >> 7) & cppMask_un_1_;
	bool cppVar_47814 = (cppVar_47813 == 1);
	BIT_VEC cppVar_47815 = PC + 1;
	cppVar_47815 = (cppVar_47815 & cppMask_un_16_);
	BIT_VEC cppVar_47816 = ROM.rd(cppVar_47815);
	BIT_VEC cppVar_47817 = (cppVar_47816 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47818 = (cppVar_47817 << 3) | 0;
	cppVar_47818 = (cppVar_47818 & cppMask_un_8_);
	BIT_VEC cppVar_47819 = PC + 1;
	cppVar_47819 = (cppVar_47819 & cppMask_un_16_);
	BIT_VEC cppVar_47820 = ROM.rd(cppVar_47819);
	BIT_VEC cppVar_47821 = (cppVar_47820 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47822 = (cppVar_47821 & cppMask_un_5_);
	BIT_VEC cppVar_47823 = cppVar_47822 + 32;
	cppVar_47823 = (cppVar_47823 & cppMask_un_8_);
	BIT_VEC cppVar_47824 = (cppVar_47814) ? cppVar_47818 : cppVar_47823;
	bool cppVar_47826 = (cppVar_47824 == 152);
	BIT_VEC cppVar_47827 = PC + 1;
	cppVar_47827 = (cppVar_47827 & cppMask_un_16_);
	BIT_VEC cppVar_47828 = ROM.rd(cppVar_47827);
	BIT_VEC cppVar_47829 = (cppVar_47828 >> 7) & cppMask_un_1_;
	bool cppVar_47830 = (cppVar_47829 == 1);
	BIT_VEC cppVar_47831 = PC + 1;
	cppVar_47831 = (cppVar_47831 & cppMask_un_16_);
	BIT_VEC cppVar_47832 = ROM.rd(cppVar_47831);
	BIT_VEC cppVar_47833 = (cppVar_47832 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47834 = (cppVar_47833 << 3) | 0;
	cppVar_47834 = (cppVar_47834 & cppMask_un_8_);
	BIT_VEC cppVar_47835 = PC + 1;
	cppVar_47835 = (cppVar_47835 & cppMask_un_16_);
	BIT_VEC cppVar_47836 = ROM.rd(cppVar_47835);
	BIT_VEC cppVar_47837 = (cppVar_47836 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47838 = (cppVar_47837 & cppMask_un_5_);
	BIT_VEC cppVar_47839 = cppVar_47838 + 32;
	cppVar_47839 = (cppVar_47839 & cppMask_un_8_);
	BIT_VEC cppVar_47840 = (cppVar_47830) ? cppVar_47834 : cppVar_47839;
	bool cppVar_47842 = (cppVar_47840 == 153);
	BIT_VEC cppVar_47843 = PC + 1;
	cppVar_47843 = (cppVar_47843 & cppMask_un_16_);
	BIT_VEC cppVar_47844 = ROM.rd(cppVar_47843);
	BIT_VEC cppVar_47845 = (cppVar_47844 >> 7) & cppMask_un_1_;
	bool cppVar_47846 = (cppVar_47845 == 1);
	BIT_VEC cppVar_47847 = PC + 1;
	cppVar_47847 = (cppVar_47847 & cppMask_un_16_);
	BIT_VEC cppVar_47848 = ROM.rd(cppVar_47847);
	BIT_VEC cppVar_47849 = (cppVar_47848 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47850 = (cppVar_47849 << 3) | 0;
	cppVar_47850 = (cppVar_47850 & cppMask_un_8_);
	BIT_VEC cppVar_47851 = PC + 1;
	cppVar_47851 = (cppVar_47851 & cppMask_un_16_);
	BIT_VEC cppVar_47852 = ROM.rd(cppVar_47851);
	BIT_VEC cppVar_47853 = (cppVar_47852 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47854 = (cppVar_47853 & cppMask_un_5_);
	BIT_VEC cppVar_47855 = cppVar_47854 + 32;
	cppVar_47855 = (cppVar_47855 & cppMask_un_8_);
	BIT_VEC cppVar_47856 = (cppVar_47846) ? cppVar_47850 : cppVar_47855;
	bool cppVar_47858 = (cppVar_47856 == 160);
	BIT_VEC cppVar_47859 = PC + 1;
	cppVar_47859 = (cppVar_47859 & cppMask_un_16_);
	BIT_VEC cppVar_47860 = ROM.rd(cppVar_47859);
	BIT_VEC cppVar_47861 = (cppVar_47860 >> 7) & cppMask_un_1_;
	bool cppVar_47862 = (cppVar_47861 == 1);
	BIT_VEC cppVar_47863 = PC + 1;
	cppVar_47863 = (cppVar_47863 & cppMask_un_16_);
	BIT_VEC cppVar_47864 = ROM.rd(cppVar_47863);
	BIT_VEC cppVar_47865 = (cppVar_47864 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47866 = (cppVar_47865 << 3) | 0;
	cppVar_47866 = (cppVar_47866 & cppMask_un_8_);
	BIT_VEC cppVar_47867 = PC + 1;
	cppVar_47867 = (cppVar_47867 & cppMask_un_16_);
	BIT_VEC cppVar_47868 = ROM.rd(cppVar_47867);
	BIT_VEC cppVar_47869 = (cppVar_47868 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47870 = (cppVar_47869 & cppMask_un_5_);
	BIT_VEC cppVar_47871 = cppVar_47870 + 32;
	cppVar_47871 = (cppVar_47871 & cppMask_un_8_);
	BIT_VEC cppVar_47872 = (cppVar_47862) ? cppVar_47866 : cppVar_47871;
	bool cppVar_47874 = (cppVar_47872 == 168);
	BIT_VEC cppVar_47875 = PC + 1;
	cppVar_47875 = (cppVar_47875 & cppMask_un_16_);
	BIT_VEC cppVar_47876 = ROM.rd(cppVar_47875);
	BIT_VEC cppVar_47877 = (cppVar_47876 >> 7) & cppMask_un_1_;
	bool cppVar_47878 = (cppVar_47877 == 1);
	BIT_VEC cppVar_47879 = PC + 1;
	cppVar_47879 = (cppVar_47879 & cppMask_un_16_);
	BIT_VEC cppVar_47880 = ROM.rd(cppVar_47879);
	BIT_VEC cppVar_47881 = (cppVar_47880 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47882 = (cppVar_47881 << 3) | 0;
	cppVar_47882 = (cppVar_47882 & cppMask_un_8_);
	BIT_VEC cppVar_47883 = PC + 1;
	cppVar_47883 = (cppVar_47883 & cppMask_un_16_);
	BIT_VEC cppVar_47884 = ROM.rd(cppVar_47883);
	BIT_VEC cppVar_47885 = (cppVar_47884 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47886 = (cppVar_47885 & cppMask_un_5_);
	BIT_VEC cppVar_47887 = cppVar_47886 + 32;
	cppVar_47887 = (cppVar_47887 & cppMask_un_8_);
	BIT_VEC cppVar_47888 = (cppVar_47878) ? cppVar_47882 : cppVar_47887;
	bool cppVar_47890 = (cppVar_47888 == 176);
	BIT_VEC cppVar_47891 = PC + 1;
	cppVar_47891 = (cppVar_47891 & cppMask_un_16_);
	BIT_VEC cppVar_47892 = ROM.rd(cppVar_47891);
	BIT_VEC cppVar_47893 = (cppVar_47892 >> 7) & cppMask_un_1_;
	bool cppVar_47894 = (cppVar_47893 == 1);
	BIT_VEC cppVar_47895 = PC + 1;
	cppVar_47895 = (cppVar_47895 & cppMask_un_16_);
	BIT_VEC cppVar_47896 = ROM.rd(cppVar_47895);
	BIT_VEC cppVar_47897 = (cppVar_47896 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47898 = (cppVar_47897 << 3) | 0;
	cppVar_47898 = (cppVar_47898 & cppMask_un_8_);
	BIT_VEC cppVar_47899 = PC + 1;
	cppVar_47899 = (cppVar_47899 & cppMask_un_16_);
	BIT_VEC cppVar_47900 = ROM.rd(cppVar_47899);
	BIT_VEC cppVar_47901 = (cppVar_47900 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47902 = (cppVar_47901 & cppMask_un_5_);
	BIT_VEC cppVar_47903 = cppVar_47902 + 32;
	cppVar_47903 = (cppVar_47903 & cppMask_un_8_);
	BIT_VEC cppVar_47904 = (cppVar_47894) ? cppVar_47898 : cppVar_47903;
	bool cppVar_47906 = (cppVar_47904 == 184);
	BIT_VEC cppVar_47907 = PC + 1;
	cppVar_47907 = (cppVar_47907 & cppMask_un_16_);
	BIT_VEC cppVar_47908 = ROM.rd(cppVar_47907);
	BIT_VEC cppVar_47909 = (cppVar_47908 >> 7) & cppMask_un_1_;
	bool cppVar_47910 = (cppVar_47909 == 1);
	BIT_VEC cppVar_47911 = PC + 1;
	cppVar_47911 = (cppVar_47911 & cppMask_un_16_);
	BIT_VEC cppVar_47912 = ROM.rd(cppVar_47911);
	BIT_VEC cppVar_47913 = (cppVar_47912 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47914 = (cppVar_47913 << 3) | 0;
	cppVar_47914 = (cppVar_47914 & cppMask_un_8_);
	BIT_VEC cppVar_47915 = PC + 1;
	cppVar_47915 = (cppVar_47915 & cppMask_un_16_);
	BIT_VEC cppVar_47916 = ROM.rd(cppVar_47915);
	BIT_VEC cppVar_47917 = (cppVar_47916 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47918 = (cppVar_47917 & cppMask_un_5_);
	BIT_VEC cppVar_47919 = cppVar_47918 + 32;
	cppVar_47919 = (cppVar_47919 & cppMask_un_8_);
	BIT_VEC cppVar_47920 = (cppVar_47910) ? cppVar_47914 : cppVar_47919;
	bool cppVar_47922 = (cppVar_47920 == 208);
	BIT_VEC cppVar_47923 = PC + 1;
	cppVar_47923 = (cppVar_47923 & cppMask_un_16_);
	BIT_VEC cppVar_47924 = ROM.rd(cppVar_47923);
	BIT_VEC cppVar_47925 = (cppVar_47924 >> 7) & cppMask_un_1_;
	bool cppVar_47926 = (cppVar_47925 == 1);
	BIT_VEC cppVar_47927 = PC + 1;
	cppVar_47927 = (cppVar_47927 & cppMask_un_16_);
	BIT_VEC cppVar_47928 = ROM.rd(cppVar_47927);
	BIT_VEC cppVar_47929 = (cppVar_47928 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47930 = (cppVar_47929 << 3) | 0;
	cppVar_47930 = (cppVar_47930 & cppMask_un_8_);
	BIT_VEC cppVar_47931 = PC + 1;
	cppVar_47931 = (cppVar_47931 & cppMask_un_16_);
	BIT_VEC cppVar_47932 = ROM.rd(cppVar_47931);
	BIT_VEC cppVar_47933 = (cppVar_47932 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47934 = (cppVar_47933 & cppMask_un_5_);
	BIT_VEC cppVar_47935 = cppVar_47934 + 32;
	cppVar_47935 = (cppVar_47935 & cppMask_un_8_);
	BIT_VEC cppVar_47936 = (cppVar_47926) ? cppVar_47930 : cppVar_47935;
	bool cppVar_47938 = (cppVar_47936 == 224);
	BIT_VEC cppVar_47939 = PC + 1;
	cppVar_47939 = (cppVar_47939 & cppMask_un_16_);
	BIT_VEC cppVar_47940 = ROM.rd(cppVar_47939);
	BIT_VEC cppVar_47941 = (cppVar_47940 >> 7) & cppMask_un_1_;
	bool cppVar_47942 = (cppVar_47941 == 1);
	BIT_VEC cppVar_47943 = PC + 1;
	cppVar_47943 = (cppVar_47943 & cppMask_un_16_);
	BIT_VEC cppVar_47944 = ROM.rd(cppVar_47943);
	BIT_VEC cppVar_47945 = (cppVar_47944 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47946 = (cppVar_47945 << 3) | 0;
	cppVar_47946 = (cppVar_47946 & cppMask_un_8_);
	BIT_VEC cppVar_47947 = PC + 1;
	cppVar_47947 = (cppVar_47947 & cppMask_un_16_);
	BIT_VEC cppVar_47948 = ROM.rd(cppVar_47947);
	BIT_VEC cppVar_47949 = (cppVar_47948 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47950 = (cppVar_47949 & cppMask_un_5_);
	BIT_VEC cppVar_47951 = cppVar_47950 + 32;
	cppVar_47951 = (cppVar_47951 & cppMask_un_8_);
	BIT_VEC cppVar_47952 = (cppVar_47942) ? cppVar_47946 : cppVar_47951;
	bool cppVar_47954 = (cppVar_47952 == 240);
	BIT_VEC cppVar_47956 = (cppVar_47954) ? B : 0;
	BIT_VEC cppVar_47957 = (cppVar_47938) ? ACC : cppVar_47956;
	BIT_VEC cppVar_47958 = (cppVar_47922) ? PSW : cppVar_47957;
	BIT_VEC cppVar_47959 = (cppVar_47906) ? IP : cppVar_47958;
	BIT_VEC cppVar_47960 = (cppVar_47890) ? P3 : cppVar_47959;
	BIT_VEC cppVar_47961 = (cppVar_47874) ? IE : cppVar_47960;
	BIT_VEC cppVar_47962 = (cppVar_47858) ? P2 : cppVar_47961;
	BIT_VEC cppVar_47963 = (cppVar_47842) ? SBUF : cppVar_47962;
	BIT_VEC cppVar_47964 = (cppVar_47826) ? SCON : cppVar_47963;
	BIT_VEC cppVar_47965 = (cppVar_47810) ? P1 : cppVar_47964;
	BIT_VEC cppVar_47966 = (cppVar_47794) ? TH1 : cppVar_47965;
	BIT_VEC cppVar_47967 = (cppVar_47778) ? TL1 : cppVar_47966;
	BIT_VEC cppVar_47968 = (cppVar_47762) ? TH0 : cppVar_47967;
	BIT_VEC cppVar_47969 = (cppVar_47746) ? TL0 : cppVar_47968;
	BIT_VEC cppVar_47970 = (cppVar_47730) ? TMOD : cppVar_47969;
	BIT_VEC cppVar_47971 = (cppVar_47714) ? TCON : cppVar_47970;
	BIT_VEC cppVar_47972 = (cppVar_47698) ? PCON : cppVar_47971;
	BIT_VEC cppVar_47973 = (cppVar_47682) ? DPH : cppVar_47972;
	BIT_VEC cppVar_47974 = (cppVar_47666) ? DPL : cppVar_47973;
	BIT_VEC cppVar_47975 = (cppVar_47650) ? SP : cppVar_47974;
	BIT_VEC cppVar_47976 = (cppVar_47634) ? P0 : cppVar_47975;
	BIT_VEC cppVar_47977 = (cppVar_47603) ? cppVar_47618 : cppVar_47976;
	BIT_VEC cppVar_47978 = cppVar_47586 & cppVar_47977;
	BIT_VEC cppVar_47979 = PC + 1;
	cppVar_47979 = (cppVar_47979 & cppMask_un_16_);
	BIT_VEC cppVar_47980 = ROM.rd(cppVar_47979);
	BIT_VEC cppVar_47981 = (cppVar_47980 >> 7) & cppMask_un_1_;
	bool cppVar_47983 = (cppVar_47981 == 1);
	BIT_VEC cppVar_47984 = PC + 1;
	cppVar_47984 = (cppVar_47984 & cppMask_un_16_);
	BIT_VEC cppVar_47985 = ROM.rd(cppVar_47984);
	BIT_VEC cppVar_47986 = (cppVar_47985 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47988 = (cppVar_47986 << 3) | 0;
	cppVar_47988 = (cppVar_47988 & cppMask_un_8_);
	BIT_VEC cppVar_47989 = PC + 1;
	cppVar_47989 = (cppVar_47989 & cppMask_un_16_);
	BIT_VEC cppVar_47990 = ROM.rd(cppVar_47989);
	BIT_VEC cppVar_47991 = (cppVar_47990 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_47992 = (cppVar_47991 & cppMask_un_5_);
	BIT_VEC cppVar_47994 = cppVar_47992 + 32;
	cppVar_47994 = (cppVar_47994 & cppMask_un_8_);
	BIT_VEC cppVar_47995 = (cppVar_47983) ? cppVar_47988 : cppVar_47994;
	BIT_VEC cppVar_47996 = (cppVar_47995 >> 7) & cppMask_un_1_;
	bool cppVar_47998 = (cppVar_47996 == 0);
	BIT_VEC cppVar_47999 = PC + 1;
	cppVar_47999 = (cppVar_47999 & cppMask_un_16_);
	BIT_VEC cppVar_48000 = ROM.rd(cppVar_47999);
	BIT_VEC cppVar_48001 = (cppVar_48000 >> 7) & cppMask_un_1_;
	bool cppVar_48002 = (cppVar_48001 == 1);
	BIT_VEC cppVar_48003 = PC + 1;
	cppVar_48003 = (cppVar_48003 & cppMask_un_16_);
	BIT_VEC cppVar_48004 = ROM.rd(cppVar_48003);
	BIT_VEC cppVar_48005 = (cppVar_48004 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48006 = (cppVar_48005 << 3) | 0;
	cppVar_48006 = (cppVar_48006 & cppMask_un_8_);
	BIT_VEC cppVar_48007 = PC + 1;
	cppVar_48007 = (cppVar_48007 & cppMask_un_16_);
	BIT_VEC cppVar_48008 = ROM.rd(cppVar_48007);
	BIT_VEC cppVar_48009 = (cppVar_48008 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48010 = (cppVar_48009 & cppMask_un_5_);
	BIT_VEC cppVar_48011 = cppVar_48010 + 32;
	cppVar_48011 = (cppVar_48011 & cppMask_un_8_);
	BIT_VEC cppVar_48012 = (cppVar_48002) ? cppVar_48006 : cppVar_48011;
	BIT_VEC cppVar_48013 = IRAM.rd(cppVar_48012);
	BIT_VEC cppVar_48014 = PC + 1;
	cppVar_48014 = (cppVar_48014 & cppMask_un_16_);
	BIT_VEC cppVar_48015 = ROM.rd(cppVar_48014);
	BIT_VEC cppVar_48016 = (cppVar_48015 >> 7) & cppMask_un_1_;
	bool cppVar_48017 = (cppVar_48016 == 1);
	BIT_VEC cppVar_48018 = PC + 1;
	cppVar_48018 = (cppVar_48018 & cppMask_un_16_);
	BIT_VEC cppVar_48019 = ROM.rd(cppVar_48018);
	BIT_VEC cppVar_48020 = (cppVar_48019 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48021 = (cppVar_48020 << 3) | 0;
	cppVar_48021 = (cppVar_48021 & cppMask_un_8_);
	BIT_VEC cppVar_48022 = PC + 1;
	cppVar_48022 = (cppVar_48022 & cppMask_un_16_);
	BIT_VEC cppVar_48023 = ROM.rd(cppVar_48022);
	BIT_VEC cppVar_48024 = (cppVar_48023 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48025 = (cppVar_48024 & cppMask_un_5_);
	BIT_VEC cppVar_48026 = cppVar_48025 + 32;
	cppVar_48026 = (cppVar_48026 & cppMask_un_8_);
	BIT_VEC cppVar_48027 = (cppVar_48017) ? cppVar_48021 : cppVar_48026;
	bool cppVar_48029 = (cppVar_48027 == 128);
	BIT_VEC cppVar_48030 = PC + 1;
	cppVar_48030 = (cppVar_48030 & cppMask_un_16_);
	BIT_VEC cppVar_48031 = ROM.rd(cppVar_48030);
	BIT_VEC cppVar_48032 = (cppVar_48031 >> 7) & cppMask_un_1_;
	bool cppVar_48033 = (cppVar_48032 == 1);
	BIT_VEC cppVar_48034 = PC + 1;
	cppVar_48034 = (cppVar_48034 & cppMask_un_16_);
	BIT_VEC cppVar_48035 = ROM.rd(cppVar_48034);
	BIT_VEC cppVar_48036 = (cppVar_48035 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48037 = (cppVar_48036 << 3) | 0;
	cppVar_48037 = (cppVar_48037 & cppMask_un_8_);
	BIT_VEC cppVar_48038 = PC + 1;
	cppVar_48038 = (cppVar_48038 & cppMask_un_16_);
	BIT_VEC cppVar_48039 = ROM.rd(cppVar_48038);
	BIT_VEC cppVar_48040 = (cppVar_48039 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48041 = (cppVar_48040 & cppMask_un_5_);
	BIT_VEC cppVar_48042 = cppVar_48041 + 32;
	cppVar_48042 = (cppVar_48042 & cppMask_un_8_);
	BIT_VEC cppVar_48043 = (cppVar_48033) ? cppVar_48037 : cppVar_48042;
	bool cppVar_48045 = (cppVar_48043 == 129);
	BIT_VEC cppVar_48046 = PC + 1;
	cppVar_48046 = (cppVar_48046 & cppMask_un_16_);
	BIT_VEC cppVar_48047 = ROM.rd(cppVar_48046);
	BIT_VEC cppVar_48048 = (cppVar_48047 >> 7) & cppMask_un_1_;
	bool cppVar_48049 = (cppVar_48048 == 1);
	BIT_VEC cppVar_48050 = PC + 1;
	cppVar_48050 = (cppVar_48050 & cppMask_un_16_);
	BIT_VEC cppVar_48051 = ROM.rd(cppVar_48050);
	BIT_VEC cppVar_48052 = (cppVar_48051 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48053 = (cppVar_48052 << 3) | 0;
	cppVar_48053 = (cppVar_48053 & cppMask_un_8_);
	BIT_VEC cppVar_48054 = PC + 1;
	cppVar_48054 = (cppVar_48054 & cppMask_un_16_);
	BIT_VEC cppVar_48055 = ROM.rd(cppVar_48054);
	BIT_VEC cppVar_48056 = (cppVar_48055 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48057 = (cppVar_48056 & cppMask_un_5_);
	BIT_VEC cppVar_48058 = cppVar_48057 + 32;
	cppVar_48058 = (cppVar_48058 & cppMask_un_8_);
	BIT_VEC cppVar_48059 = (cppVar_48049) ? cppVar_48053 : cppVar_48058;
	bool cppVar_48061 = (cppVar_48059 == 130);
	BIT_VEC cppVar_48062 = PC + 1;
	cppVar_48062 = (cppVar_48062 & cppMask_un_16_);
	BIT_VEC cppVar_48063 = ROM.rd(cppVar_48062);
	BIT_VEC cppVar_48064 = (cppVar_48063 >> 7) & cppMask_un_1_;
	bool cppVar_48065 = (cppVar_48064 == 1);
	BIT_VEC cppVar_48066 = PC + 1;
	cppVar_48066 = (cppVar_48066 & cppMask_un_16_);
	BIT_VEC cppVar_48067 = ROM.rd(cppVar_48066);
	BIT_VEC cppVar_48068 = (cppVar_48067 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48069 = (cppVar_48068 << 3) | 0;
	cppVar_48069 = (cppVar_48069 & cppMask_un_8_);
	BIT_VEC cppVar_48070 = PC + 1;
	cppVar_48070 = (cppVar_48070 & cppMask_un_16_);
	BIT_VEC cppVar_48071 = ROM.rd(cppVar_48070);
	BIT_VEC cppVar_48072 = (cppVar_48071 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48073 = (cppVar_48072 & cppMask_un_5_);
	BIT_VEC cppVar_48074 = cppVar_48073 + 32;
	cppVar_48074 = (cppVar_48074 & cppMask_un_8_);
	BIT_VEC cppVar_48075 = (cppVar_48065) ? cppVar_48069 : cppVar_48074;
	bool cppVar_48077 = (cppVar_48075 == 131);
	BIT_VEC cppVar_48078 = PC + 1;
	cppVar_48078 = (cppVar_48078 & cppMask_un_16_);
	BIT_VEC cppVar_48079 = ROM.rd(cppVar_48078);
	BIT_VEC cppVar_48080 = (cppVar_48079 >> 7) & cppMask_un_1_;
	bool cppVar_48081 = (cppVar_48080 == 1);
	BIT_VEC cppVar_48082 = PC + 1;
	cppVar_48082 = (cppVar_48082 & cppMask_un_16_);
	BIT_VEC cppVar_48083 = ROM.rd(cppVar_48082);
	BIT_VEC cppVar_48084 = (cppVar_48083 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48085 = (cppVar_48084 << 3) | 0;
	cppVar_48085 = (cppVar_48085 & cppMask_un_8_);
	BIT_VEC cppVar_48086 = PC + 1;
	cppVar_48086 = (cppVar_48086 & cppMask_un_16_);
	BIT_VEC cppVar_48087 = ROM.rd(cppVar_48086);
	BIT_VEC cppVar_48088 = (cppVar_48087 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48089 = (cppVar_48088 & cppMask_un_5_);
	BIT_VEC cppVar_48090 = cppVar_48089 + 32;
	cppVar_48090 = (cppVar_48090 & cppMask_un_8_);
	BIT_VEC cppVar_48091 = (cppVar_48081) ? cppVar_48085 : cppVar_48090;
	bool cppVar_48093 = (cppVar_48091 == 135);
	BIT_VEC cppVar_48094 = PC + 1;
	cppVar_48094 = (cppVar_48094 & cppMask_un_16_);
	BIT_VEC cppVar_48095 = ROM.rd(cppVar_48094);
	BIT_VEC cppVar_48096 = (cppVar_48095 >> 7) & cppMask_un_1_;
	bool cppVar_48097 = (cppVar_48096 == 1);
	BIT_VEC cppVar_48098 = PC + 1;
	cppVar_48098 = (cppVar_48098 & cppMask_un_16_);
	BIT_VEC cppVar_48099 = ROM.rd(cppVar_48098);
	BIT_VEC cppVar_48100 = (cppVar_48099 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48101 = (cppVar_48100 << 3) | 0;
	cppVar_48101 = (cppVar_48101 & cppMask_un_8_);
	BIT_VEC cppVar_48102 = PC + 1;
	cppVar_48102 = (cppVar_48102 & cppMask_un_16_);
	BIT_VEC cppVar_48103 = ROM.rd(cppVar_48102);
	BIT_VEC cppVar_48104 = (cppVar_48103 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48105 = (cppVar_48104 & cppMask_un_5_);
	BIT_VEC cppVar_48106 = cppVar_48105 + 32;
	cppVar_48106 = (cppVar_48106 & cppMask_un_8_);
	BIT_VEC cppVar_48107 = (cppVar_48097) ? cppVar_48101 : cppVar_48106;
	bool cppVar_48109 = (cppVar_48107 == 136);
	BIT_VEC cppVar_48110 = PC + 1;
	cppVar_48110 = (cppVar_48110 & cppMask_un_16_);
	BIT_VEC cppVar_48111 = ROM.rd(cppVar_48110);
	BIT_VEC cppVar_48112 = (cppVar_48111 >> 7) & cppMask_un_1_;
	bool cppVar_48113 = (cppVar_48112 == 1);
	BIT_VEC cppVar_48114 = PC + 1;
	cppVar_48114 = (cppVar_48114 & cppMask_un_16_);
	BIT_VEC cppVar_48115 = ROM.rd(cppVar_48114);
	BIT_VEC cppVar_48116 = (cppVar_48115 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48117 = (cppVar_48116 << 3) | 0;
	cppVar_48117 = (cppVar_48117 & cppMask_un_8_);
	BIT_VEC cppVar_48118 = PC + 1;
	cppVar_48118 = (cppVar_48118 & cppMask_un_16_);
	BIT_VEC cppVar_48119 = ROM.rd(cppVar_48118);
	BIT_VEC cppVar_48120 = (cppVar_48119 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48121 = (cppVar_48120 & cppMask_un_5_);
	BIT_VEC cppVar_48122 = cppVar_48121 + 32;
	cppVar_48122 = (cppVar_48122 & cppMask_un_8_);
	BIT_VEC cppVar_48123 = (cppVar_48113) ? cppVar_48117 : cppVar_48122;
	bool cppVar_48125 = (cppVar_48123 == 137);
	BIT_VEC cppVar_48126 = PC + 1;
	cppVar_48126 = (cppVar_48126 & cppMask_un_16_);
	BIT_VEC cppVar_48127 = ROM.rd(cppVar_48126);
	BIT_VEC cppVar_48128 = (cppVar_48127 >> 7) & cppMask_un_1_;
	bool cppVar_48129 = (cppVar_48128 == 1);
	BIT_VEC cppVar_48130 = PC + 1;
	cppVar_48130 = (cppVar_48130 & cppMask_un_16_);
	BIT_VEC cppVar_48131 = ROM.rd(cppVar_48130);
	BIT_VEC cppVar_48132 = (cppVar_48131 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48133 = (cppVar_48132 << 3) | 0;
	cppVar_48133 = (cppVar_48133 & cppMask_un_8_);
	BIT_VEC cppVar_48134 = PC + 1;
	cppVar_48134 = (cppVar_48134 & cppMask_un_16_);
	BIT_VEC cppVar_48135 = ROM.rd(cppVar_48134);
	BIT_VEC cppVar_48136 = (cppVar_48135 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48137 = (cppVar_48136 & cppMask_un_5_);
	BIT_VEC cppVar_48138 = cppVar_48137 + 32;
	cppVar_48138 = (cppVar_48138 & cppMask_un_8_);
	BIT_VEC cppVar_48139 = (cppVar_48129) ? cppVar_48133 : cppVar_48138;
	bool cppVar_48141 = (cppVar_48139 == 138);
	BIT_VEC cppVar_48142 = PC + 1;
	cppVar_48142 = (cppVar_48142 & cppMask_un_16_);
	BIT_VEC cppVar_48143 = ROM.rd(cppVar_48142);
	BIT_VEC cppVar_48144 = (cppVar_48143 >> 7) & cppMask_un_1_;
	bool cppVar_48145 = (cppVar_48144 == 1);
	BIT_VEC cppVar_48146 = PC + 1;
	cppVar_48146 = (cppVar_48146 & cppMask_un_16_);
	BIT_VEC cppVar_48147 = ROM.rd(cppVar_48146);
	BIT_VEC cppVar_48148 = (cppVar_48147 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48149 = (cppVar_48148 << 3) | 0;
	cppVar_48149 = (cppVar_48149 & cppMask_un_8_);
	BIT_VEC cppVar_48150 = PC + 1;
	cppVar_48150 = (cppVar_48150 & cppMask_un_16_);
	BIT_VEC cppVar_48151 = ROM.rd(cppVar_48150);
	BIT_VEC cppVar_48152 = (cppVar_48151 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48153 = (cppVar_48152 & cppMask_un_5_);
	BIT_VEC cppVar_48154 = cppVar_48153 + 32;
	cppVar_48154 = (cppVar_48154 & cppMask_un_8_);
	BIT_VEC cppVar_48155 = (cppVar_48145) ? cppVar_48149 : cppVar_48154;
	bool cppVar_48157 = (cppVar_48155 == 140);
	BIT_VEC cppVar_48158 = PC + 1;
	cppVar_48158 = (cppVar_48158 & cppMask_un_16_);
	BIT_VEC cppVar_48159 = ROM.rd(cppVar_48158);
	BIT_VEC cppVar_48160 = (cppVar_48159 >> 7) & cppMask_un_1_;
	bool cppVar_48161 = (cppVar_48160 == 1);
	BIT_VEC cppVar_48162 = PC + 1;
	cppVar_48162 = (cppVar_48162 & cppMask_un_16_);
	BIT_VEC cppVar_48163 = ROM.rd(cppVar_48162);
	BIT_VEC cppVar_48164 = (cppVar_48163 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48165 = (cppVar_48164 << 3) | 0;
	cppVar_48165 = (cppVar_48165 & cppMask_un_8_);
	BIT_VEC cppVar_48166 = PC + 1;
	cppVar_48166 = (cppVar_48166 & cppMask_un_16_);
	BIT_VEC cppVar_48167 = ROM.rd(cppVar_48166);
	BIT_VEC cppVar_48168 = (cppVar_48167 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48169 = (cppVar_48168 & cppMask_un_5_);
	BIT_VEC cppVar_48170 = cppVar_48169 + 32;
	cppVar_48170 = (cppVar_48170 & cppMask_un_8_);
	BIT_VEC cppVar_48171 = (cppVar_48161) ? cppVar_48165 : cppVar_48170;
	bool cppVar_48173 = (cppVar_48171 == 139);
	BIT_VEC cppVar_48174 = PC + 1;
	cppVar_48174 = (cppVar_48174 & cppMask_un_16_);
	BIT_VEC cppVar_48175 = ROM.rd(cppVar_48174);
	BIT_VEC cppVar_48176 = (cppVar_48175 >> 7) & cppMask_un_1_;
	bool cppVar_48177 = (cppVar_48176 == 1);
	BIT_VEC cppVar_48178 = PC + 1;
	cppVar_48178 = (cppVar_48178 & cppMask_un_16_);
	BIT_VEC cppVar_48179 = ROM.rd(cppVar_48178);
	BIT_VEC cppVar_48180 = (cppVar_48179 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48181 = (cppVar_48180 << 3) | 0;
	cppVar_48181 = (cppVar_48181 & cppMask_un_8_);
	BIT_VEC cppVar_48182 = PC + 1;
	cppVar_48182 = (cppVar_48182 & cppMask_un_16_);
	BIT_VEC cppVar_48183 = ROM.rd(cppVar_48182);
	BIT_VEC cppVar_48184 = (cppVar_48183 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48185 = (cppVar_48184 & cppMask_un_5_);
	BIT_VEC cppVar_48186 = cppVar_48185 + 32;
	cppVar_48186 = (cppVar_48186 & cppMask_un_8_);
	BIT_VEC cppVar_48187 = (cppVar_48177) ? cppVar_48181 : cppVar_48186;
	bool cppVar_48189 = (cppVar_48187 == 141);
	BIT_VEC cppVar_48190 = PC + 1;
	cppVar_48190 = (cppVar_48190 & cppMask_un_16_);
	BIT_VEC cppVar_48191 = ROM.rd(cppVar_48190);
	BIT_VEC cppVar_48192 = (cppVar_48191 >> 7) & cppMask_un_1_;
	bool cppVar_48193 = (cppVar_48192 == 1);
	BIT_VEC cppVar_48194 = PC + 1;
	cppVar_48194 = (cppVar_48194 & cppMask_un_16_);
	BIT_VEC cppVar_48195 = ROM.rd(cppVar_48194);
	BIT_VEC cppVar_48196 = (cppVar_48195 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48197 = (cppVar_48196 << 3) | 0;
	cppVar_48197 = (cppVar_48197 & cppMask_un_8_);
	BIT_VEC cppVar_48198 = PC + 1;
	cppVar_48198 = (cppVar_48198 & cppMask_un_16_);
	BIT_VEC cppVar_48199 = ROM.rd(cppVar_48198);
	BIT_VEC cppVar_48200 = (cppVar_48199 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48201 = (cppVar_48200 & cppMask_un_5_);
	BIT_VEC cppVar_48202 = cppVar_48201 + 32;
	cppVar_48202 = (cppVar_48202 & cppMask_un_8_);
	BIT_VEC cppVar_48203 = (cppVar_48193) ? cppVar_48197 : cppVar_48202;
	bool cppVar_48205 = (cppVar_48203 == 144);
	BIT_VEC cppVar_48206 = PC + 1;
	cppVar_48206 = (cppVar_48206 & cppMask_un_16_);
	BIT_VEC cppVar_48207 = ROM.rd(cppVar_48206);
	BIT_VEC cppVar_48208 = (cppVar_48207 >> 7) & cppMask_un_1_;
	bool cppVar_48209 = (cppVar_48208 == 1);
	BIT_VEC cppVar_48210 = PC + 1;
	cppVar_48210 = (cppVar_48210 & cppMask_un_16_);
	BIT_VEC cppVar_48211 = ROM.rd(cppVar_48210);
	BIT_VEC cppVar_48212 = (cppVar_48211 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48213 = (cppVar_48212 << 3) | 0;
	cppVar_48213 = (cppVar_48213 & cppMask_un_8_);
	BIT_VEC cppVar_48214 = PC + 1;
	cppVar_48214 = (cppVar_48214 & cppMask_un_16_);
	BIT_VEC cppVar_48215 = ROM.rd(cppVar_48214);
	BIT_VEC cppVar_48216 = (cppVar_48215 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48217 = (cppVar_48216 & cppMask_un_5_);
	BIT_VEC cppVar_48218 = cppVar_48217 + 32;
	cppVar_48218 = (cppVar_48218 & cppMask_un_8_);
	BIT_VEC cppVar_48219 = (cppVar_48209) ? cppVar_48213 : cppVar_48218;
	bool cppVar_48221 = (cppVar_48219 == 152);
	BIT_VEC cppVar_48222 = PC + 1;
	cppVar_48222 = (cppVar_48222 & cppMask_un_16_);
	BIT_VEC cppVar_48223 = ROM.rd(cppVar_48222);
	BIT_VEC cppVar_48224 = (cppVar_48223 >> 7) & cppMask_un_1_;
	bool cppVar_48225 = (cppVar_48224 == 1);
	BIT_VEC cppVar_48226 = PC + 1;
	cppVar_48226 = (cppVar_48226 & cppMask_un_16_);
	BIT_VEC cppVar_48227 = ROM.rd(cppVar_48226);
	BIT_VEC cppVar_48228 = (cppVar_48227 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48229 = (cppVar_48228 << 3) | 0;
	cppVar_48229 = (cppVar_48229 & cppMask_un_8_);
	BIT_VEC cppVar_48230 = PC + 1;
	cppVar_48230 = (cppVar_48230 & cppMask_un_16_);
	BIT_VEC cppVar_48231 = ROM.rd(cppVar_48230);
	BIT_VEC cppVar_48232 = (cppVar_48231 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48233 = (cppVar_48232 & cppMask_un_5_);
	BIT_VEC cppVar_48234 = cppVar_48233 + 32;
	cppVar_48234 = (cppVar_48234 & cppMask_un_8_);
	BIT_VEC cppVar_48235 = (cppVar_48225) ? cppVar_48229 : cppVar_48234;
	bool cppVar_48237 = (cppVar_48235 == 153);
	BIT_VEC cppVar_48238 = PC + 1;
	cppVar_48238 = (cppVar_48238 & cppMask_un_16_);
	BIT_VEC cppVar_48239 = ROM.rd(cppVar_48238);
	BIT_VEC cppVar_48240 = (cppVar_48239 >> 7) & cppMask_un_1_;
	bool cppVar_48241 = (cppVar_48240 == 1);
	BIT_VEC cppVar_48242 = PC + 1;
	cppVar_48242 = (cppVar_48242 & cppMask_un_16_);
	BIT_VEC cppVar_48243 = ROM.rd(cppVar_48242);
	BIT_VEC cppVar_48244 = (cppVar_48243 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48245 = (cppVar_48244 << 3) | 0;
	cppVar_48245 = (cppVar_48245 & cppMask_un_8_);
	BIT_VEC cppVar_48246 = PC + 1;
	cppVar_48246 = (cppVar_48246 & cppMask_un_16_);
	BIT_VEC cppVar_48247 = ROM.rd(cppVar_48246);
	BIT_VEC cppVar_48248 = (cppVar_48247 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48249 = (cppVar_48248 & cppMask_un_5_);
	BIT_VEC cppVar_48250 = cppVar_48249 + 32;
	cppVar_48250 = (cppVar_48250 & cppMask_un_8_);
	BIT_VEC cppVar_48251 = (cppVar_48241) ? cppVar_48245 : cppVar_48250;
	bool cppVar_48253 = (cppVar_48251 == 160);
	BIT_VEC cppVar_48254 = PC + 1;
	cppVar_48254 = (cppVar_48254 & cppMask_un_16_);
	BIT_VEC cppVar_48255 = ROM.rd(cppVar_48254);
	BIT_VEC cppVar_48256 = (cppVar_48255 >> 7) & cppMask_un_1_;
	bool cppVar_48257 = (cppVar_48256 == 1);
	BIT_VEC cppVar_48258 = PC + 1;
	cppVar_48258 = (cppVar_48258 & cppMask_un_16_);
	BIT_VEC cppVar_48259 = ROM.rd(cppVar_48258);
	BIT_VEC cppVar_48260 = (cppVar_48259 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48261 = (cppVar_48260 << 3) | 0;
	cppVar_48261 = (cppVar_48261 & cppMask_un_8_);
	BIT_VEC cppVar_48262 = PC + 1;
	cppVar_48262 = (cppVar_48262 & cppMask_un_16_);
	BIT_VEC cppVar_48263 = ROM.rd(cppVar_48262);
	BIT_VEC cppVar_48264 = (cppVar_48263 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48265 = (cppVar_48264 & cppMask_un_5_);
	BIT_VEC cppVar_48266 = cppVar_48265 + 32;
	cppVar_48266 = (cppVar_48266 & cppMask_un_8_);
	BIT_VEC cppVar_48267 = (cppVar_48257) ? cppVar_48261 : cppVar_48266;
	bool cppVar_48269 = (cppVar_48267 == 168);
	BIT_VEC cppVar_48270 = PC + 1;
	cppVar_48270 = (cppVar_48270 & cppMask_un_16_);
	BIT_VEC cppVar_48271 = ROM.rd(cppVar_48270);
	BIT_VEC cppVar_48272 = (cppVar_48271 >> 7) & cppMask_un_1_;
	bool cppVar_48273 = (cppVar_48272 == 1);
	BIT_VEC cppVar_48274 = PC + 1;
	cppVar_48274 = (cppVar_48274 & cppMask_un_16_);
	BIT_VEC cppVar_48275 = ROM.rd(cppVar_48274);
	BIT_VEC cppVar_48276 = (cppVar_48275 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48277 = (cppVar_48276 << 3) | 0;
	cppVar_48277 = (cppVar_48277 & cppMask_un_8_);
	BIT_VEC cppVar_48278 = PC + 1;
	cppVar_48278 = (cppVar_48278 & cppMask_un_16_);
	BIT_VEC cppVar_48279 = ROM.rd(cppVar_48278);
	BIT_VEC cppVar_48280 = (cppVar_48279 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48281 = (cppVar_48280 & cppMask_un_5_);
	BIT_VEC cppVar_48282 = cppVar_48281 + 32;
	cppVar_48282 = (cppVar_48282 & cppMask_un_8_);
	BIT_VEC cppVar_48283 = (cppVar_48273) ? cppVar_48277 : cppVar_48282;
	bool cppVar_48285 = (cppVar_48283 == 176);
	BIT_VEC cppVar_48286 = PC + 1;
	cppVar_48286 = (cppVar_48286 & cppMask_un_16_);
	BIT_VEC cppVar_48287 = ROM.rd(cppVar_48286);
	BIT_VEC cppVar_48288 = (cppVar_48287 >> 7) & cppMask_un_1_;
	bool cppVar_48289 = (cppVar_48288 == 1);
	BIT_VEC cppVar_48290 = PC + 1;
	cppVar_48290 = (cppVar_48290 & cppMask_un_16_);
	BIT_VEC cppVar_48291 = ROM.rd(cppVar_48290);
	BIT_VEC cppVar_48292 = (cppVar_48291 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48293 = (cppVar_48292 << 3) | 0;
	cppVar_48293 = (cppVar_48293 & cppMask_un_8_);
	BIT_VEC cppVar_48294 = PC + 1;
	cppVar_48294 = (cppVar_48294 & cppMask_un_16_);
	BIT_VEC cppVar_48295 = ROM.rd(cppVar_48294);
	BIT_VEC cppVar_48296 = (cppVar_48295 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48297 = (cppVar_48296 & cppMask_un_5_);
	BIT_VEC cppVar_48298 = cppVar_48297 + 32;
	cppVar_48298 = (cppVar_48298 & cppMask_un_8_);
	BIT_VEC cppVar_48299 = (cppVar_48289) ? cppVar_48293 : cppVar_48298;
	bool cppVar_48301 = (cppVar_48299 == 184);
	BIT_VEC cppVar_48302 = PC + 1;
	cppVar_48302 = (cppVar_48302 & cppMask_un_16_);
	BIT_VEC cppVar_48303 = ROM.rd(cppVar_48302);
	BIT_VEC cppVar_48304 = (cppVar_48303 >> 7) & cppMask_un_1_;
	bool cppVar_48305 = (cppVar_48304 == 1);
	BIT_VEC cppVar_48306 = PC + 1;
	cppVar_48306 = (cppVar_48306 & cppMask_un_16_);
	BIT_VEC cppVar_48307 = ROM.rd(cppVar_48306);
	BIT_VEC cppVar_48308 = (cppVar_48307 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48309 = (cppVar_48308 << 3) | 0;
	cppVar_48309 = (cppVar_48309 & cppMask_un_8_);
	BIT_VEC cppVar_48310 = PC + 1;
	cppVar_48310 = (cppVar_48310 & cppMask_un_16_);
	BIT_VEC cppVar_48311 = ROM.rd(cppVar_48310);
	BIT_VEC cppVar_48312 = (cppVar_48311 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48313 = (cppVar_48312 & cppMask_un_5_);
	BIT_VEC cppVar_48314 = cppVar_48313 + 32;
	cppVar_48314 = (cppVar_48314 & cppMask_un_8_);
	BIT_VEC cppVar_48315 = (cppVar_48305) ? cppVar_48309 : cppVar_48314;
	bool cppVar_48317 = (cppVar_48315 == 208);
	BIT_VEC cppVar_48318 = PC + 1;
	cppVar_48318 = (cppVar_48318 & cppMask_un_16_);
	BIT_VEC cppVar_48319 = ROM.rd(cppVar_48318);
	BIT_VEC cppVar_48320 = (cppVar_48319 >> 7) & cppMask_un_1_;
	bool cppVar_48321 = (cppVar_48320 == 1);
	BIT_VEC cppVar_48322 = PC + 1;
	cppVar_48322 = (cppVar_48322 & cppMask_un_16_);
	BIT_VEC cppVar_48323 = ROM.rd(cppVar_48322);
	BIT_VEC cppVar_48324 = (cppVar_48323 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48325 = (cppVar_48324 << 3) | 0;
	cppVar_48325 = (cppVar_48325 & cppMask_un_8_);
	BIT_VEC cppVar_48326 = PC + 1;
	cppVar_48326 = (cppVar_48326 & cppMask_un_16_);
	BIT_VEC cppVar_48327 = ROM.rd(cppVar_48326);
	BIT_VEC cppVar_48328 = (cppVar_48327 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48329 = (cppVar_48328 & cppMask_un_5_);
	BIT_VEC cppVar_48330 = cppVar_48329 + 32;
	cppVar_48330 = (cppVar_48330 & cppMask_un_8_);
	BIT_VEC cppVar_48331 = (cppVar_48321) ? cppVar_48325 : cppVar_48330;
	bool cppVar_48333 = (cppVar_48331 == 224);
	BIT_VEC cppVar_48334 = PC + 1;
	cppVar_48334 = (cppVar_48334 & cppMask_un_16_);
	BIT_VEC cppVar_48335 = ROM.rd(cppVar_48334);
	BIT_VEC cppVar_48336 = (cppVar_48335 >> 7) & cppMask_un_1_;
	bool cppVar_48337 = (cppVar_48336 == 1);
	BIT_VEC cppVar_48338 = PC + 1;
	cppVar_48338 = (cppVar_48338 & cppMask_un_16_);
	BIT_VEC cppVar_48339 = ROM.rd(cppVar_48338);
	BIT_VEC cppVar_48340 = (cppVar_48339 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48341 = (cppVar_48340 << 3) | 0;
	cppVar_48341 = (cppVar_48341 & cppMask_un_8_);
	BIT_VEC cppVar_48342 = PC + 1;
	cppVar_48342 = (cppVar_48342 & cppMask_un_16_);
	BIT_VEC cppVar_48343 = ROM.rd(cppVar_48342);
	BIT_VEC cppVar_48344 = (cppVar_48343 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48345 = (cppVar_48344 & cppMask_un_5_);
	BIT_VEC cppVar_48346 = cppVar_48345 + 32;
	cppVar_48346 = (cppVar_48346 & cppMask_un_8_);
	BIT_VEC cppVar_48347 = (cppVar_48337) ? cppVar_48341 : cppVar_48346;
	bool cppVar_48349 = (cppVar_48347 == 240);
	BIT_VEC cppVar_48351 = (cppVar_48349) ? B : 0;
	BIT_VEC cppVar_48352 = (cppVar_48333) ? ACC : cppVar_48351;
	BIT_VEC cppVar_48353 = (cppVar_48317) ? PSW : cppVar_48352;
	BIT_VEC cppVar_48354 = (cppVar_48301) ? IP : cppVar_48353;
	BIT_VEC cppVar_48355 = (cppVar_48285) ? P3 : cppVar_48354;
	BIT_VEC cppVar_48356 = (cppVar_48269) ? IE : cppVar_48355;
	BIT_VEC cppVar_48357 = (cppVar_48253) ? P2 : cppVar_48356;
	BIT_VEC cppVar_48358 = (cppVar_48237) ? SBUF : cppVar_48357;
	BIT_VEC cppVar_48359 = (cppVar_48221) ? SCON : cppVar_48358;
	BIT_VEC cppVar_48360 = (cppVar_48205) ? P1 : cppVar_48359;
	BIT_VEC cppVar_48361 = (cppVar_48189) ? TH1 : cppVar_48360;
	BIT_VEC cppVar_48362 = (cppVar_48173) ? TL1 : cppVar_48361;
	BIT_VEC cppVar_48363 = (cppVar_48157) ? TH0 : cppVar_48362;
	BIT_VEC cppVar_48364 = (cppVar_48141) ? TL0 : cppVar_48363;
	BIT_VEC cppVar_48365 = (cppVar_48125) ? TMOD : cppVar_48364;
	BIT_VEC cppVar_48366 = (cppVar_48109) ? TCON : cppVar_48365;
	BIT_VEC cppVar_48367 = (cppVar_48093) ? PCON : cppVar_48366;
	BIT_VEC cppVar_48368 = (cppVar_48077) ? DPH : cppVar_48367;
	BIT_VEC cppVar_48369 = (cppVar_48061) ? DPL : cppVar_48368;
	BIT_VEC cppVar_48370 = (cppVar_48045) ? SP : cppVar_48369;
	BIT_VEC cppVar_48371 = (cppVar_48029) ? P0 : cppVar_48370;
	BIT_VEC cppVar_48372 = (cppVar_47998) ? cppVar_48013 : cppVar_48371;
	BIT_VEC cppVar_48373 = PC + 1;
	cppVar_48373 = (cppVar_48373 & cppMask_un_16_);
	BIT_VEC cppVar_48374 = ROM.rd(cppVar_48373);
	BIT_VEC cppVar_48375 = (cppVar_48374 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_48376 = (cppVar_48372 >> static_cast<unsigned>(cppVar_48375)) & 0x1;
	BIT_VEC cppVar_48377 = ~cppVar_48376;
	BIT_VEC cppVar_48378 = (cppVar_48377 & cppMask_un_1_);
	BIT_VEC cppVar_48379 = PC + 1;
	cppVar_48379 = (cppVar_48379 & cppMask_un_16_);
	BIT_VEC cppVar_48380 = ROM.rd(cppVar_48379);
	BIT_VEC cppVar_48381 = (cppVar_48380 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_48382 = (cppVar_48381 & cppMask_un_3_);
	BIT_VEC cppVar_48383 = cppVar_48378 << static_cast<unsigned>(cppVar_48382);
	cppVar_48383 = (cppVar_48383 & cppMask_un_8_);
	BIT_VEC cppVar_48384 = cppVar_47978 | cppVar_48383;
	BIT_VEC cppVar_48385 = (cppVar_47579) ? cppVar_48384 : PSW;
	BIT_VEC cppVar_48386 = ROM.rd(PC);
	bool cppVar_48388 = (cppVar_48386 == 176);
	BIT_VEC cppVar_48389 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_48391 = PC + 1;
	cppVar_48391 = (cppVar_48391 & cppMask_un_16_);
	BIT_VEC cppVar_48392 = ROM.rd(cppVar_48391);
	BIT_VEC cppVar_48393 = (cppVar_48392 >> 7) & cppMask_un_1_;
	bool cppVar_48395 = (cppVar_48393 == 1);
	BIT_VEC cppVar_48396 = PC + 1;
	cppVar_48396 = (cppVar_48396 & cppMask_un_16_);
	BIT_VEC cppVar_48397 = ROM.rd(cppVar_48396);
	BIT_VEC cppVar_48398 = (cppVar_48397 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48400 = (cppVar_48398 << 3) | 0;
	cppVar_48400 = (cppVar_48400 & cppMask_un_8_);
	BIT_VEC cppVar_48401 = PC + 1;
	cppVar_48401 = (cppVar_48401 & cppMask_un_16_);
	BIT_VEC cppVar_48402 = ROM.rd(cppVar_48401);
	BIT_VEC cppVar_48403 = (cppVar_48402 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48404 = (cppVar_48403 & cppMask_un_5_);
	BIT_VEC cppVar_48406 = cppVar_48404 + 32;
	cppVar_48406 = (cppVar_48406 & cppMask_un_8_);
	BIT_VEC cppVar_48407 = (cppVar_48395) ? cppVar_48400 : cppVar_48406;
	BIT_VEC cppVar_48408 = (cppVar_48407 >> 7) & cppMask_un_1_;
	bool cppVar_48410 = (cppVar_48408 == 0);
	BIT_VEC cppVar_48411 = PC + 1;
	cppVar_48411 = (cppVar_48411 & cppMask_un_16_);
	BIT_VEC cppVar_48412 = ROM.rd(cppVar_48411);
	BIT_VEC cppVar_48413 = (cppVar_48412 >> 7) & cppMask_un_1_;
	bool cppVar_48414 = (cppVar_48413 == 1);
	BIT_VEC cppVar_48415 = PC + 1;
	cppVar_48415 = (cppVar_48415 & cppMask_un_16_);
	BIT_VEC cppVar_48416 = ROM.rd(cppVar_48415);
	BIT_VEC cppVar_48417 = (cppVar_48416 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48418 = (cppVar_48417 << 3) | 0;
	cppVar_48418 = (cppVar_48418 & cppMask_un_8_);
	BIT_VEC cppVar_48419 = PC + 1;
	cppVar_48419 = (cppVar_48419 & cppMask_un_16_);
	BIT_VEC cppVar_48420 = ROM.rd(cppVar_48419);
	BIT_VEC cppVar_48421 = (cppVar_48420 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48422 = (cppVar_48421 & cppMask_un_5_);
	BIT_VEC cppVar_48423 = cppVar_48422 + 32;
	cppVar_48423 = (cppVar_48423 & cppMask_un_8_);
	BIT_VEC cppVar_48424 = (cppVar_48414) ? cppVar_48418 : cppVar_48423;
	BIT_VEC cppVar_48425 = IRAM.rd(cppVar_48424);
	BIT_VEC cppVar_48426 = PC + 1;
	cppVar_48426 = (cppVar_48426 & cppMask_un_16_);
	BIT_VEC cppVar_48427 = ROM.rd(cppVar_48426);
	BIT_VEC cppVar_48428 = (cppVar_48427 >> 7) & cppMask_un_1_;
	bool cppVar_48429 = (cppVar_48428 == 1);
	BIT_VEC cppVar_48430 = PC + 1;
	cppVar_48430 = (cppVar_48430 & cppMask_un_16_);
	BIT_VEC cppVar_48431 = ROM.rd(cppVar_48430);
	BIT_VEC cppVar_48432 = (cppVar_48431 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48433 = (cppVar_48432 << 3) | 0;
	cppVar_48433 = (cppVar_48433 & cppMask_un_8_);
	BIT_VEC cppVar_48434 = PC + 1;
	cppVar_48434 = (cppVar_48434 & cppMask_un_16_);
	BIT_VEC cppVar_48435 = ROM.rd(cppVar_48434);
	BIT_VEC cppVar_48436 = (cppVar_48435 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48437 = (cppVar_48436 & cppMask_un_5_);
	BIT_VEC cppVar_48438 = cppVar_48437 + 32;
	cppVar_48438 = (cppVar_48438 & cppMask_un_8_);
	BIT_VEC cppVar_48439 = (cppVar_48429) ? cppVar_48433 : cppVar_48438;
	bool cppVar_48441 = (cppVar_48439 == 128);
	BIT_VEC cppVar_48442 = PC + 1;
	cppVar_48442 = (cppVar_48442 & cppMask_un_16_);
	BIT_VEC cppVar_48443 = ROM.rd(cppVar_48442);
	BIT_VEC cppVar_48444 = (cppVar_48443 >> 7) & cppMask_un_1_;
	bool cppVar_48445 = (cppVar_48444 == 1);
	BIT_VEC cppVar_48446 = PC + 1;
	cppVar_48446 = (cppVar_48446 & cppMask_un_16_);
	BIT_VEC cppVar_48447 = ROM.rd(cppVar_48446);
	BIT_VEC cppVar_48448 = (cppVar_48447 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48449 = (cppVar_48448 << 3) | 0;
	cppVar_48449 = (cppVar_48449 & cppMask_un_8_);
	BIT_VEC cppVar_48450 = PC + 1;
	cppVar_48450 = (cppVar_48450 & cppMask_un_16_);
	BIT_VEC cppVar_48451 = ROM.rd(cppVar_48450);
	BIT_VEC cppVar_48452 = (cppVar_48451 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48453 = (cppVar_48452 & cppMask_un_5_);
	BIT_VEC cppVar_48454 = cppVar_48453 + 32;
	cppVar_48454 = (cppVar_48454 & cppMask_un_8_);
	BIT_VEC cppVar_48455 = (cppVar_48445) ? cppVar_48449 : cppVar_48454;
	bool cppVar_48457 = (cppVar_48455 == 129);
	BIT_VEC cppVar_48458 = PC + 1;
	cppVar_48458 = (cppVar_48458 & cppMask_un_16_);
	BIT_VEC cppVar_48459 = ROM.rd(cppVar_48458);
	BIT_VEC cppVar_48460 = (cppVar_48459 >> 7) & cppMask_un_1_;
	bool cppVar_48461 = (cppVar_48460 == 1);
	BIT_VEC cppVar_48462 = PC + 1;
	cppVar_48462 = (cppVar_48462 & cppMask_un_16_);
	BIT_VEC cppVar_48463 = ROM.rd(cppVar_48462);
	BIT_VEC cppVar_48464 = (cppVar_48463 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48465 = (cppVar_48464 << 3) | 0;
	cppVar_48465 = (cppVar_48465 & cppMask_un_8_);
	BIT_VEC cppVar_48466 = PC + 1;
	cppVar_48466 = (cppVar_48466 & cppMask_un_16_);
	BIT_VEC cppVar_48467 = ROM.rd(cppVar_48466);
	BIT_VEC cppVar_48468 = (cppVar_48467 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48469 = (cppVar_48468 & cppMask_un_5_);
	BIT_VEC cppVar_48470 = cppVar_48469 + 32;
	cppVar_48470 = (cppVar_48470 & cppMask_un_8_);
	BIT_VEC cppVar_48471 = (cppVar_48461) ? cppVar_48465 : cppVar_48470;
	bool cppVar_48473 = (cppVar_48471 == 130);
	BIT_VEC cppVar_48474 = PC + 1;
	cppVar_48474 = (cppVar_48474 & cppMask_un_16_);
	BIT_VEC cppVar_48475 = ROM.rd(cppVar_48474);
	BIT_VEC cppVar_48476 = (cppVar_48475 >> 7) & cppMask_un_1_;
	bool cppVar_48477 = (cppVar_48476 == 1);
	BIT_VEC cppVar_48478 = PC + 1;
	cppVar_48478 = (cppVar_48478 & cppMask_un_16_);
	BIT_VEC cppVar_48479 = ROM.rd(cppVar_48478);
	BIT_VEC cppVar_48480 = (cppVar_48479 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48481 = (cppVar_48480 << 3) | 0;
	cppVar_48481 = (cppVar_48481 & cppMask_un_8_);
	BIT_VEC cppVar_48482 = PC + 1;
	cppVar_48482 = (cppVar_48482 & cppMask_un_16_);
	BIT_VEC cppVar_48483 = ROM.rd(cppVar_48482);
	BIT_VEC cppVar_48484 = (cppVar_48483 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48485 = (cppVar_48484 & cppMask_un_5_);
	BIT_VEC cppVar_48486 = cppVar_48485 + 32;
	cppVar_48486 = (cppVar_48486 & cppMask_un_8_);
	BIT_VEC cppVar_48487 = (cppVar_48477) ? cppVar_48481 : cppVar_48486;
	bool cppVar_48489 = (cppVar_48487 == 131);
	BIT_VEC cppVar_48490 = PC + 1;
	cppVar_48490 = (cppVar_48490 & cppMask_un_16_);
	BIT_VEC cppVar_48491 = ROM.rd(cppVar_48490);
	BIT_VEC cppVar_48492 = (cppVar_48491 >> 7) & cppMask_un_1_;
	bool cppVar_48493 = (cppVar_48492 == 1);
	BIT_VEC cppVar_48494 = PC + 1;
	cppVar_48494 = (cppVar_48494 & cppMask_un_16_);
	BIT_VEC cppVar_48495 = ROM.rd(cppVar_48494);
	BIT_VEC cppVar_48496 = (cppVar_48495 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48497 = (cppVar_48496 << 3) | 0;
	cppVar_48497 = (cppVar_48497 & cppMask_un_8_);
	BIT_VEC cppVar_48498 = PC + 1;
	cppVar_48498 = (cppVar_48498 & cppMask_un_16_);
	BIT_VEC cppVar_48499 = ROM.rd(cppVar_48498);
	BIT_VEC cppVar_48500 = (cppVar_48499 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48501 = (cppVar_48500 & cppMask_un_5_);
	BIT_VEC cppVar_48502 = cppVar_48501 + 32;
	cppVar_48502 = (cppVar_48502 & cppMask_un_8_);
	BIT_VEC cppVar_48503 = (cppVar_48493) ? cppVar_48497 : cppVar_48502;
	bool cppVar_48505 = (cppVar_48503 == 135);
	BIT_VEC cppVar_48506 = PC + 1;
	cppVar_48506 = (cppVar_48506 & cppMask_un_16_);
	BIT_VEC cppVar_48507 = ROM.rd(cppVar_48506);
	BIT_VEC cppVar_48508 = (cppVar_48507 >> 7) & cppMask_un_1_;
	bool cppVar_48509 = (cppVar_48508 == 1);
	BIT_VEC cppVar_48510 = PC + 1;
	cppVar_48510 = (cppVar_48510 & cppMask_un_16_);
	BIT_VEC cppVar_48511 = ROM.rd(cppVar_48510);
	BIT_VEC cppVar_48512 = (cppVar_48511 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48513 = (cppVar_48512 << 3) | 0;
	cppVar_48513 = (cppVar_48513 & cppMask_un_8_);
	BIT_VEC cppVar_48514 = PC + 1;
	cppVar_48514 = (cppVar_48514 & cppMask_un_16_);
	BIT_VEC cppVar_48515 = ROM.rd(cppVar_48514);
	BIT_VEC cppVar_48516 = (cppVar_48515 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48517 = (cppVar_48516 & cppMask_un_5_);
	BIT_VEC cppVar_48518 = cppVar_48517 + 32;
	cppVar_48518 = (cppVar_48518 & cppMask_un_8_);
	BIT_VEC cppVar_48519 = (cppVar_48509) ? cppVar_48513 : cppVar_48518;
	bool cppVar_48521 = (cppVar_48519 == 136);
	BIT_VEC cppVar_48522 = PC + 1;
	cppVar_48522 = (cppVar_48522 & cppMask_un_16_);
	BIT_VEC cppVar_48523 = ROM.rd(cppVar_48522);
	BIT_VEC cppVar_48524 = (cppVar_48523 >> 7) & cppMask_un_1_;
	bool cppVar_48525 = (cppVar_48524 == 1);
	BIT_VEC cppVar_48526 = PC + 1;
	cppVar_48526 = (cppVar_48526 & cppMask_un_16_);
	BIT_VEC cppVar_48527 = ROM.rd(cppVar_48526);
	BIT_VEC cppVar_48528 = (cppVar_48527 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48529 = (cppVar_48528 << 3) | 0;
	cppVar_48529 = (cppVar_48529 & cppMask_un_8_);
	BIT_VEC cppVar_48530 = PC + 1;
	cppVar_48530 = (cppVar_48530 & cppMask_un_16_);
	BIT_VEC cppVar_48531 = ROM.rd(cppVar_48530);
	BIT_VEC cppVar_48532 = (cppVar_48531 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48533 = (cppVar_48532 & cppMask_un_5_);
	BIT_VEC cppVar_48534 = cppVar_48533 + 32;
	cppVar_48534 = (cppVar_48534 & cppMask_un_8_);
	BIT_VEC cppVar_48535 = (cppVar_48525) ? cppVar_48529 : cppVar_48534;
	bool cppVar_48537 = (cppVar_48535 == 137);
	BIT_VEC cppVar_48538 = PC + 1;
	cppVar_48538 = (cppVar_48538 & cppMask_un_16_);
	BIT_VEC cppVar_48539 = ROM.rd(cppVar_48538);
	BIT_VEC cppVar_48540 = (cppVar_48539 >> 7) & cppMask_un_1_;
	bool cppVar_48541 = (cppVar_48540 == 1);
	BIT_VEC cppVar_48542 = PC + 1;
	cppVar_48542 = (cppVar_48542 & cppMask_un_16_);
	BIT_VEC cppVar_48543 = ROM.rd(cppVar_48542);
	BIT_VEC cppVar_48544 = (cppVar_48543 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48545 = (cppVar_48544 << 3) | 0;
	cppVar_48545 = (cppVar_48545 & cppMask_un_8_);
	BIT_VEC cppVar_48546 = PC + 1;
	cppVar_48546 = (cppVar_48546 & cppMask_un_16_);
	BIT_VEC cppVar_48547 = ROM.rd(cppVar_48546);
	BIT_VEC cppVar_48548 = (cppVar_48547 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48549 = (cppVar_48548 & cppMask_un_5_);
	BIT_VEC cppVar_48550 = cppVar_48549 + 32;
	cppVar_48550 = (cppVar_48550 & cppMask_un_8_);
	BIT_VEC cppVar_48551 = (cppVar_48541) ? cppVar_48545 : cppVar_48550;
	bool cppVar_48553 = (cppVar_48551 == 138);
	BIT_VEC cppVar_48554 = PC + 1;
	cppVar_48554 = (cppVar_48554 & cppMask_un_16_);
	BIT_VEC cppVar_48555 = ROM.rd(cppVar_48554);
	BIT_VEC cppVar_48556 = (cppVar_48555 >> 7) & cppMask_un_1_;
	bool cppVar_48557 = (cppVar_48556 == 1);
	BIT_VEC cppVar_48558 = PC + 1;
	cppVar_48558 = (cppVar_48558 & cppMask_un_16_);
	BIT_VEC cppVar_48559 = ROM.rd(cppVar_48558);
	BIT_VEC cppVar_48560 = (cppVar_48559 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48561 = (cppVar_48560 << 3) | 0;
	cppVar_48561 = (cppVar_48561 & cppMask_un_8_);
	BIT_VEC cppVar_48562 = PC + 1;
	cppVar_48562 = (cppVar_48562 & cppMask_un_16_);
	BIT_VEC cppVar_48563 = ROM.rd(cppVar_48562);
	BIT_VEC cppVar_48564 = (cppVar_48563 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48565 = (cppVar_48564 & cppMask_un_5_);
	BIT_VEC cppVar_48566 = cppVar_48565 + 32;
	cppVar_48566 = (cppVar_48566 & cppMask_un_8_);
	BIT_VEC cppVar_48567 = (cppVar_48557) ? cppVar_48561 : cppVar_48566;
	bool cppVar_48569 = (cppVar_48567 == 140);
	BIT_VEC cppVar_48570 = PC + 1;
	cppVar_48570 = (cppVar_48570 & cppMask_un_16_);
	BIT_VEC cppVar_48571 = ROM.rd(cppVar_48570);
	BIT_VEC cppVar_48572 = (cppVar_48571 >> 7) & cppMask_un_1_;
	bool cppVar_48573 = (cppVar_48572 == 1);
	BIT_VEC cppVar_48574 = PC + 1;
	cppVar_48574 = (cppVar_48574 & cppMask_un_16_);
	BIT_VEC cppVar_48575 = ROM.rd(cppVar_48574);
	BIT_VEC cppVar_48576 = (cppVar_48575 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48577 = (cppVar_48576 << 3) | 0;
	cppVar_48577 = (cppVar_48577 & cppMask_un_8_);
	BIT_VEC cppVar_48578 = PC + 1;
	cppVar_48578 = (cppVar_48578 & cppMask_un_16_);
	BIT_VEC cppVar_48579 = ROM.rd(cppVar_48578);
	BIT_VEC cppVar_48580 = (cppVar_48579 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48581 = (cppVar_48580 & cppMask_un_5_);
	BIT_VEC cppVar_48582 = cppVar_48581 + 32;
	cppVar_48582 = (cppVar_48582 & cppMask_un_8_);
	BIT_VEC cppVar_48583 = (cppVar_48573) ? cppVar_48577 : cppVar_48582;
	bool cppVar_48585 = (cppVar_48583 == 139);
	BIT_VEC cppVar_48586 = PC + 1;
	cppVar_48586 = (cppVar_48586 & cppMask_un_16_);
	BIT_VEC cppVar_48587 = ROM.rd(cppVar_48586);
	BIT_VEC cppVar_48588 = (cppVar_48587 >> 7) & cppMask_un_1_;
	bool cppVar_48589 = (cppVar_48588 == 1);
	BIT_VEC cppVar_48590 = PC + 1;
	cppVar_48590 = (cppVar_48590 & cppMask_un_16_);
	BIT_VEC cppVar_48591 = ROM.rd(cppVar_48590);
	BIT_VEC cppVar_48592 = (cppVar_48591 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48593 = (cppVar_48592 << 3) | 0;
	cppVar_48593 = (cppVar_48593 & cppMask_un_8_);
	BIT_VEC cppVar_48594 = PC + 1;
	cppVar_48594 = (cppVar_48594 & cppMask_un_16_);
	BIT_VEC cppVar_48595 = ROM.rd(cppVar_48594);
	BIT_VEC cppVar_48596 = (cppVar_48595 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48597 = (cppVar_48596 & cppMask_un_5_);
	BIT_VEC cppVar_48598 = cppVar_48597 + 32;
	cppVar_48598 = (cppVar_48598 & cppMask_un_8_);
	BIT_VEC cppVar_48599 = (cppVar_48589) ? cppVar_48593 : cppVar_48598;
	bool cppVar_48601 = (cppVar_48599 == 141);
	BIT_VEC cppVar_48602 = PC + 1;
	cppVar_48602 = (cppVar_48602 & cppMask_un_16_);
	BIT_VEC cppVar_48603 = ROM.rd(cppVar_48602);
	BIT_VEC cppVar_48604 = (cppVar_48603 >> 7) & cppMask_un_1_;
	bool cppVar_48605 = (cppVar_48604 == 1);
	BIT_VEC cppVar_48606 = PC + 1;
	cppVar_48606 = (cppVar_48606 & cppMask_un_16_);
	BIT_VEC cppVar_48607 = ROM.rd(cppVar_48606);
	BIT_VEC cppVar_48608 = (cppVar_48607 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48609 = (cppVar_48608 << 3) | 0;
	cppVar_48609 = (cppVar_48609 & cppMask_un_8_);
	BIT_VEC cppVar_48610 = PC + 1;
	cppVar_48610 = (cppVar_48610 & cppMask_un_16_);
	BIT_VEC cppVar_48611 = ROM.rd(cppVar_48610);
	BIT_VEC cppVar_48612 = (cppVar_48611 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48613 = (cppVar_48612 & cppMask_un_5_);
	BIT_VEC cppVar_48614 = cppVar_48613 + 32;
	cppVar_48614 = (cppVar_48614 & cppMask_un_8_);
	BIT_VEC cppVar_48615 = (cppVar_48605) ? cppVar_48609 : cppVar_48614;
	bool cppVar_48617 = (cppVar_48615 == 144);
	BIT_VEC cppVar_48618 = PC + 1;
	cppVar_48618 = (cppVar_48618 & cppMask_un_16_);
	BIT_VEC cppVar_48619 = ROM.rd(cppVar_48618);
	BIT_VEC cppVar_48620 = (cppVar_48619 >> 7) & cppMask_un_1_;
	bool cppVar_48621 = (cppVar_48620 == 1);
	BIT_VEC cppVar_48622 = PC + 1;
	cppVar_48622 = (cppVar_48622 & cppMask_un_16_);
	BIT_VEC cppVar_48623 = ROM.rd(cppVar_48622);
	BIT_VEC cppVar_48624 = (cppVar_48623 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48625 = (cppVar_48624 << 3) | 0;
	cppVar_48625 = (cppVar_48625 & cppMask_un_8_);
	BIT_VEC cppVar_48626 = PC + 1;
	cppVar_48626 = (cppVar_48626 & cppMask_un_16_);
	BIT_VEC cppVar_48627 = ROM.rd(cppVar_48626);
	BIT_VEC cppVar_48628 = (cppVar_48627 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48629 = (cppVar_48628 & cppMask_un_5_);
	BIT_VEC cppVar_48630 = cppVar_48629 + 32;
	cppVar_48630 = (cppVar_48630 & cppMask_un_8_);
	BIT_VEC cppVar_48631 = (cppVar_48621) ? cppVar_48625 : cppVar_48630;
	bool cppVar_48633 = (cppVar_48631 == 152);
	BIT_VEC cppVar_48634 = PC + 1;
	cppVar_48634 = (cppVar_48634 & cppMask_un_16_);
	BIT_VEC cppVar_48635 = ROM.rd(cppVar_48634);
	BIT_VEC cppVar_48636 = (cppVar_48635 >> 7) & cppMask_un_1_;
	bool cppVar_48637 = (cppVar_48636 == 1);
	BIT_VEC cppVar_48638 = PC + 1;
	cppVar_48638 = (cppVar_48638 & cppMask_un_16_);
	BIT_VEC cppVar_48639 = ROM.rd(cppVar_48638);
	BIT_VEC cppVar_48640 = (cppVar_48639 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48641 = (cppVar_48640 << 3) | 0;
	cppVar_48641 = (cppVar_48641 & cppMask_un_8_);
	BIT_VEC cppVar_48642 = PC + 1;
	cppVar_48642 = (cppVar_48642 & cppMask_un_16_);
	BIT_VEC cppVar_48643 = ROM.rd(cppVar_48642);
	BIT_VEC cppVar_48644 = (cppVar_48643 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48645 = (cppVar_48644 & cppMask_un_5_);
	BIT_VEC cppVar_48646 = cppVar_48645 + 32;
	cppVar_48646 = (cppVar_48646 & cppMask_un_8_);
	BIT_VEC cppVar_48647 = (cppVar_48637) ? cppVar_48641 : cppVar_48646;
	bool cppVar_48649 = (cppVar_48647 == 153);
	BIT_VEC cppVar_48650 = PC + 1;
	cppVar_48650 = (cppVar_48650 & cppMask_un_16_);
	BIT_VEC cppVar_48651 = ROM.rd(cppVar_48650);
	BIT_VEC cppVar_48652 = (cppVar_48651 >> 7) & cppMask_un_1_;
	bool cppVar_48653 = (cppVar_48652 == 1);
	BIT_VEC cppVar_48654 = PC + 1;
	cppVar_48654 = (cppVar_48654 & cppMask_un_16_);
	BIT_VEC cppVar_48655 = ROM.rd(cppVar_48654);
	BIT_VEC cppVar_48656 = (cppVar_48655 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48657 = (cppVar_48656 << 3) | 0;
	cppVar_48657 = (cppVar_48657 & cppMask_un_8_);
	BIT_VEC cppVar_48658 = PC + 1;
	cppVar_48658 = (cppVar_48658 & cppMask_un_16_);
	BIT_VEC cppVar_48659 = ROM.rd(cppVar_48658);
	BIT_VEC cppVar_48660 = (cppVar_48659 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48661 = (cppVar_48660 & cppMask_un_5_);
	BIT_VEC cppVar_48662 = cppVar_48661 + 32;
	cppVar_48662 = (cppVar_48662 & cppMask_un_8_);
	BIT_VEC cppVar_48663 = (cppVar_48653) ? cppVar_48657 : cppVar_48662;
	bool cppVar_48665 = (cppVar_48663 == 160);
	BIT_VEC cppVar_48666 = PC + 1;
	cppVar_48666 = (cppVar_48666 & cppMask_un_16_);
	BIT_VEC cppVar_48667 = ROM.rd(cppVar_48666);
	BIT_VEC cppVar_48668 = (cppVar_48667 >> 7) & cppMask_un_1_;
	bool cppVar_48669 = (cppVar_48668 == 1);
	BIT_VEC cppVar_48670 = PC + 1;
	cppVar_48670 = (cppVar_48670 & cppMask_un_16_);
	BIT_VEC cppVar_48671 = ROM.rd(cppVar_48670);
	BIT_VEC cppVar_48672 = (cppVar_48671 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48673 = (cppVar_48672 << 3) | 0;
	cppVar_48673 = (cppVar_48673 & cppMask_un_8_);
	BIT_VEC cppVar_48674 = PC + 1;
	cppVar_48674 = (cppVar_48674 & cppMask_un_16_);
	BIT_VEC cppVar_48675 = ROM.rd(cppVar_48674);
	BIT_VEC cppVar_48676 = (cppVar_48675 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48677 = (cppVar_48676 & cppMask_un_5_);
	BIT_VEC cppVar_48678 = cppVar_48677 + 32;
	cppVar_48678 = (cppVar_48678 & cppMask_un_8_);
	BIT_VEC cppVar_48679 = (cppVar_48669) ? cppVar_48673 : cppVar_48678;
	bool cppVar_48681 = (cppVar_48679 == 168);
	BIT_VEC cppVar_48682 = PC + 1;
	cppVar_48682 = (cppVar_48682 & cppMask_un_16_);
	BIT_VEC cppVar_48683 = ROM.rd(cppVar_48682);
	BIT_VEC cppVar_48684 = (cppVar_48683 >> 7) & cppMask_un_1_;
	bool cppVar_48685 = (cppVar_48684 == 1);
	BIT_VEC cppVar_48686 = PC + 1;
	cppVar_48686 = (cppVar_48686 & cppMask_un_16_);
	BIT_VEC cppVar_48687 = ROM.rd(cppVar_48686);
	BIT_VEC cppVar_48688 = (cppVar_48687 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48689 = (cppVar_48688 << 3) | 0;
	cppVar_48689 = (cppVar_48689 & cppMask_un_8_);
	BIT_VEC cppVar_48690 = PC + 1;
	cppVar_48690 = (cppVar_48690 & cppMask_un_16_);
	BIT_VEC cppVar_48691 = ROM.rd(cppVar_48690);
	BIT_VEC cppVar_48692 = (cppVar_48691 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48693 = (cppVar_48692 & cppMask_un_5_);
	BIT_VEC cppVar_48694 = cppVar_48693 + 32;
	cppVar_48694 = (cppVar_48694 & cppMask_un_8_);
	BIT_VEC cppVar_48695 = (cppVar_48685) ? cppVar_48689 : cppVar_48694;
	bool cppVar_48697 = (cppVar_48695 == 176);
	BIT_VEC cppVar_48698 = PC + 1;
	cppVar_48698 = (cppVar_48698 & cppMask_un_16_);
	BIT_VEC cppVar_48699 = ROM.rd(cppVar_48698);
	BIT_VEC cppVar_48700 = (cppVar_48699 >> 7) & cppMask_un_1_;
	bool cppVar_48701 = (cppVar_48700 == 1);
	BIT_VEC cppVar_48702 = PC + 1;
	cppVar_48702 = (cppVar_48702 & cppMask_un_16_);
	BIT_VEC cppVar_48703 = ROM.rd(cppVar_48702);
	BIT_VEC cppVar_48704 = (cppVar_48703 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48705 = (cppVar_48704 << 3) | 0;
	cppVar_48705 = (cppVar_48705 & cppMask_un_8_);
	BIT_VEC cppVar_48706 = PC + 1;
	cppVar_48706 = (cppVar_48706 & cppMask_un_16_);
	BIT_VEC cppVar_48707 = ROM.rd(cppVar_48706);
	BIT_VEC cppVar_48708 = (cppVar_48707 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48709 = (cppVar_48708 & cppMask_un_5_);
	BIT_VEC cppVar_48710 = cppVar_48709 + 32;
	cppVar_48710 = (cppVar_48710 & cppMask_un_8_);
	BIT_VEC cppVar_48711 = (cppVar_48701) ? cppVar_48705 : cppVar_48710;
	bool cppVar_48713 = (cppVar_48711 == 184);
	BIT_VEC cppVar_48714 = PC + 1;
	cppVar_48714 = (cppVar_48714 & cppMask_un_16_);
	BIT_VEC cppVar_48715 = ROM.rd(cppVar_48714);
	BIT_VEC cppVar_48716 = (cppVar_48715 >> 7) & cppMask_un_1_;
	bool cppVar_48717 = (cppVar_48716 == 1);
	BIT_VEC cppVar_48718 = PC + 1;
	cppVar_48718 = (cppVar_48718 & cppMask_un_16_);
	BIT_VEC cppVar_48719 = ROM.rd(cppVar_48718);
	BIT_VEC cppVar_48720 = (cppVar_48719 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48721 = (cppVar_48720 << 3) | 0;
	cppVar_48721 = (cppVar_48721 & cppMask_un_8_);
	BIT_VEC cppVar_48722 = PC + 1;
	cppVar_48722 = (cppVar_48722 & cppMask_un_16_);
	BIT_VEC cppVar_48723 = ROM.rd(cppVar_48722);
	BIT_VEC cppVar_48724 = (cppVar_48723 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48725 = (cppVar_48724 & cppMask_un_5_);
	BIT_VEC cppVar_48726 = cppVar_48725 + 32;
	cppVar_48726 = (cppVar_48726 & cppMask_un_8_);
	BIT_VEC cppVar_48727 = (cppVar_48717) ? cppVar_48721 : cppVar_48726;
	bool cppVar_48729 = (cppVar_48727 == 208);
	BIT_VEC cppVar_48730 = PC + 1;
	cppVar_48730 = (cppVar_48730 & cppMask_un_16_);
	BIT_VEC cppVar_48731 = ROM.rd(cppVar_48730);
	BIT_VEC cppVar_48732 = (cppVar_48731 >> 7) & cppMask_un_1_;
	bool cppVar_48733 = (cppVar_48732 == 1);
	BIT_VEC cppVar_48734 = PC + 1;
	cppVar_48734 = (cppVar_48734 & cppMask_un_16_);
	BIT_VEC cppVar_48735 = ROM.rd(cppVar_48734);
	BIT_VEC cppVar_48736 = (cppVar_48735 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48737 = (cppVar_48736 << 3) | 0;
	cppVar_48737 = (cppVar_48737 & cppMask_un_8_);
	BIT_VEC cppVar_48738 = PC + 1;
	cppVar_48738 = (cppVar_48738 & cppMask_un_16_);
	BIT_VEC cppVar_48739 = ROM.rd(cppVar_48738);
	BIT_VEC cppVar_48740 = (cppVar_48739 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48741 = (cppVar_48740 & cppMask_un_5_);
	BIT_VEC cppVar_48742 = cppVar_48741 + 32;
	cppVar_48742 = (cppVar_48742 & cppMask_un_8_);
	BIT_VEC cppVar_48743 = (cppVar_48733) ? cppVar_48737 : cppVar_48742;
	bool cppVar_48745 = (cppVar_48743 == 224);
	BIT_VEC cppVar_48746 = PC + 1;
	cppVar_48746 = (cppVar_48746 & cppMask_un_16_);
	BIT_VEC cppVar_48747 = ROM.rd(cppVar_48746);
	BIT_VEC cppVar_48748 = (cppVar_48747 >> 7) & cppMask_un_1_;
	bool cppVar_48749 = (cppVar_48748 == 1);
	BIT_VEC cppVar_48750 = PC + 1;
	cppVar_48750 = (cppVar_48750 & cppMask_un_16_);
	BIT_VEC cppVar_48751 = ROM.rd(cppVar_48750);
	BIT_VEC cppVar_48752 = (cppVar_48751 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48753 = (cppVar_48752 << 3) | 0;
	cppVar_48753 = (cppVar_48753 & cppMask_un_8_);
	BIT_VEC cppVar_48754 = PC + 1;
	cppVar_48754 = (cppVar_48754 & cppMask_un_16_);
	BIT_VEC cppVar_48755 = ROM.rd(cppVar_48754);
	BIT_VEC cppVar_48756 = (cppVar_48755 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48757 = (cppVar_48756 & cppMask_un_5_);
	BIT_VEC cppVar_48758 = cppVar_48757 + 32;
	cppVar_48758 = (cppVar_48758 & cppMask_un_8_);
	BIT_VEC cppVar_48759 = (cppVar_48749) ? cppVar_48753 : cppVar_48758;
	bool cppVar_48761 = (cppVar_48759 == 240);
	BIT_VEC cppVar_48763 = (cppVar_48761) ? B : 0;
	BIT_VEC cppVar_48764 = (cppVar_48745) ? ACC : cppVar_48763;
	BIT_VEC cppVar_48765 = (cppVar_48729) ? PSW : cppVar_48764;
	BIT_VEC cppVar_48766 = (cppVar_48713) ? IP : cppVar_48765;
	BIT_VEC cppVar_48767 = (cppVar_48697) ? P3 : cppVar_48766;
	BIT_VEC cppVar_48768 = (cppVar_48681) ? IE : cppVar_48767;
	BIT_VEC cppVar_48769 = (cppVar_48665) ? P2 : cppVar_48768;
	BIT_VEC cppVar_48770 = (cppVar_48649) ? SBUF : cppVar_48769;
	BIT_VEC cppVar_48771 = (cppVar_48633) ? SCON : cppVar_48770;
	BIT_VEC cppVar_48772 = (cppVar_48617) ? P1 : cppVar_48771;
	BIT_VEC cppVar_48773 = (cppVar_48601) ? TH1 : cppVar_48772;
	BIT_VEC cppVar_48774 = (cppVar_48585) ? TL1 : cppVar_48773;
	BIT_VEC cppVar_48775 = (cppVar_48569) ? TH0 : cppVar_48774;
	BIT_VEC cppVar_48776 = (cppVar_48553) ? TL0 : cppVar_48775;
	BIT_VEC cppVar_48777 = (cppVar_48537) ? TMOD : cppVar_48776;
	BIT_VEC cppVar_48778 = (cppVar_48521) ? TCON : cppVar_48777;
	BIT_VEC cppVar_48779 = (cppVar_48505) ? PCON : cppVar_48778;
	BIT_VEC cppVar_48780 = (cppVar_48489) ? DPH : cppVar_48779;
	BIT_VEC cppVar_48781 = (cppVar_48473) ? DPL : cppVar_48780;
	BIT_VEC cppVar_48782 = (cppVar_48457) ? SP : cppVar_48781;
	BIT_VEC cppVar_48783 = (cppVar_48441) ? P0 : cppVar_48782;
	BIT_VEC cppVar_48784 = (cppVar_48410) ? cppVar_48425 : cppVar_48783;
	BIT_VEC cppVar_48785 = PC + 1;
	cppVar_48785 = (cppVar_48785 & cppMask_un_16_);
	BIT_VEC cppVar_48786 = ROM.rd(cppVar_48785);
	BIT_VEC cppVar_48787 = (cppVar_48786 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_48788 = (cppVar_48784 >> static_cast<unsigned>(cppVar_48787)) & 0x1;
	BIT_VEC cppVar_48789 = ~cppVar_48788;
	BIT_VEC cppVar_48790 = cppVar_48389 & cppVar_48789;
	BIT_VEC cppVar_48791 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_48792 = (cppVar_48790 << 7) | cppVar_48791;
	cppVar_48792 = (cppVar_48792 & cppMask_un_8_);
	BIT_VEC cppVar_48793 = ROM.rd(PC);
	bool cppVar_48795 = (cppVar_48793 == 164);
	BIT_VEC cppVar_48797 = (PSW >> 3) & cppMask_un_4_;
	BIT_VEC cppVar_48798 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_48799 = (B & cppMask_un_8_);
	BIT_VEC cppVar_48800 = cppVar_48798 * cppVar_48799;
	cppVar_48800 = (cppVar_48800 & cppMask_un_16_);
	BIT_VEC cppVar_48801 = (cppVar_48800 >> 8) & cppMask_un_8_;
	bool cppVar_48803 = (cppVar_48801 != 0);
	BIT_VEC cppVar_48806 = (cppVar_48803) ? 1 : 0;
	BIT_VEC cppVar_48807 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_48808 = (cppVar_48806 << 2) | cppVar_48807;
	cppVar_48808 = (cppVar_48808 & cppMask_un_3_);
	BIT_VEC cppVar_48809 = (cppVar_48797 << 3) | cppVar_48808;
	cppVar_48809 = (cppVar_48809 & cppMask_un_7_);
	BIT_VEC cppVar_48810 = (0 << 7) | cppVar_48809;
	cppVar_48810 = (cppVar_48810 & cppMask_un_8_);
	BIT_VEC cppVar_48811 = ROM.rd(PC);
	bool cppVar_48813 = (cppVar_48811 == 162);
	BIT_VEC cppVar_48815 = PC + 1;
	cppVar_48815 = (cppVar_48815 & cppMask_un_16_);
	BIT_VEC cppVar_48816 = ROM.rd(cppVar_48815);
	BIT_VEC cppVar_48817 = (cppVar_48816 >> 7) & cppMask_un_1_;
	bool cppVar_48819 = (cppVar_48817 == 1);
	BIT_VEC cppVar_48820 = PC + 1;
	cppVar_48820 = (cppVar_48820 & cppMask_un_16_);
	BIT_VEC cppVar_48821 = ROM.rd(cppVar_48820);
	BIT_VEC cppVar_48822 = (cppVar_48821 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48824 = (cppVar_48822 << 3) | 0;
	cppVar_48824 = (cppVar_48824 & cppMask_un_8_);
	BIT_VEC cppVar_48825 = PC + 1;
	cppVar_48825 = (cppVar_48825 & cppMask_un_16_);
	BIT_VEC cppVar_48826 = ROM.rd(cppVar_48825);
	BIT_VEC cppVar_48827 = (cppVar_48826 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48828 = (cppVar_48827 & cppMask_un_5_);
	BIT_VEC cppVar_48830 = cppVar_48828 + 32;
	cppVar_48830 = (cppVar_48830 & cppMask_un_8_);
	BIT_VEC cppVar_48831 = (cppVar_48819) ? cppVar_48824 : cppVar_48830;
	BIT_VEC cppVar_48832 = (cppVar_48831 >> 7) & cppMask_un_1_;
	bool cppVar_48834 = (cppVar_48832 == 0);
	BIT_VEC cppVar_48835 = PC + 1;
	cppVar_48835 = (cppVar_48835 & cppMask_un_16_);
	BIT_VEC cppVar_48836 = ROM.rd(cppVar_48835);
	BIT_VEC cppVar_48837 = (cppVar_48836 >> 7) & cppMask_un_1_;
	bool cppVar_48838 = (cppVar_48837 == 1);
	BIT_VEC cppVar_48839 = PC + 1;
	cppVar_48839 = (cppVar_48839 & cppMask_un_16_);
	BIT_VEC cppVar_48840 = ROM.rd(cppVar_48839);
	BIT_VEC cppVar_48841 = (cppVar_48840 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48842 = (cppVar_48841 << 3) | 0;
	cppVar_48842 = (cppVar_48842 & cppMask_un_8_);
	BIT_VEC cppVar_48843 = PC + 1;
	cppVar_48843 = (cppVar_48843 & cppMask_un_16_);
	BIT_VEC cppVar_48844 = ROM.rd(cppVar_48843);
	BIT_VEC cppVar_48845 = (cppVar_48844 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48846 = (cppVar_48845 & cppMask_un_5_);
	BIT_VEC cppVar_48847 = cppVar_48846 + 32;
	cppVar_48847 = (cppVar_48847 & cppMask_un_8_);
	BIT_VEC cppVar_48848 = (cppVar_48838) ? cppVar_48842 : cppVar_48847;
	BIT_VEC cppVar_48849 = IRAM.rd(cppVar_48848);
	BIT_VEC cppVar_48850 = PC + 1;
	cppVar_48850 = (cppVar_48850 & cppMask_un_16_);
	BIT_VEC cppVar_48851 = ROM.rd(cppVar_48850);
	BIT_VEC cppVar_48852 = (cppVar_48851 >> 7) & cppMask_un_1_;
	bool cppVar_48853 = (cppVar_48852 == 1);
	BIT_VEC cppVar_48854 = PC + 1;
	cppVar_48854 = (cppVar_48854 & cppMask_un_16_);
	BIT_VEC cppVar_48855 = ROM.rd(cppVar_48854);
	BIT_VEC cppVar_48856 = (cppVar_48855 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48857 = (cppVar_48856 << 3) | 0;
	cppVar_48857 = (cppVar_48857 & cppMask_un_8_);
	BIT_VEC cppVar_48858 = PC + 1;
	cppVar_48858 = (cppVar_48858 & cppMask_un_16_);
	BIT_VEC cppVar_48859 = ROM.rd(cppVar_48858);
	BIT_VEC cppVar_48860 = (cppVar_48859 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48861 = (cppVar_48860 & cppMask_un_5_);
	BIT_VEC cppVar_48862 = cppVar_48861 + 32;
	cppVar_48862 = (cppVar_48862 & cppMask_un_8_);
	BIT_VEC cppVar_48863 = (cppVar_48853) ? cppVar_48857 : cppVar_48862;
	bool cppVar_48865 = (cppVar_48863 == 128);
	BIT_VEC cppVar_48866 = PC + 1;
	cppVar_48866 = (cppVar_48866 & cppMask_un_16_);
	BIT_VEC cppVar_48867 = ROM.rd(cppVar_48866);
	BIT_VEC cppVar_48868 = (cppVar_48867 >> 7) & cppMask_un_1_;
	bool cppVar_48869 = (cppVar_48868 == 1);
	BIT_VEC cppVar_48870 = PC + 1;
	cppVar_48870 = (cppVar_48870 & cppMask_un_16_);
	BIT_VEC cppVar_48871 = ROM.rd(cppVar_48870);
	BIT_VEC cppVar_48872 = (cppVar_48871 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48873 = (cppVar_48872 << 3) | 0;
	cppVar_48873 = (cppVar_48873 & cppMask_un_8_);
	BIT_VEC cppVar_48874 = PC + 1;
	cppVar_48874 = (cppVar_48874 & cppMask_un_16_);
	BIT_VEC cppVar_48875 = ROM.rd(cppVar_48874);
	BIT_VEC cppVar_48876 = (cppVar_48875 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48877 = (cppVar_48876 & cppMask_un_5_);
	BIT_VEC cppVar_48878 = cppVar_48877 + 32;
	cppVar_48878 = (cppVar_48878 & cppMask_un_8_);
	BIT_VEC cppVar_48879 = (cppVar_48869) ? cppVar_48873 : cppVar_48878;
	bool cppVar_48881 = (cppVar_48879 == 129);
	BIT_VEC cppVar_48882 = PC + 1;
	cppVar_48882 = (cppVar_48882 & cppMask_un_16_);
	BIT_VEC cppVar_48883 = ROM.rd(cppVar_48882);
	BIT_VEC cppVar_48884 = (cppVar_48883 >> 7) & cppMask_un_1_;
	bool cppVar_48885 = (cppVar_48884 == 1);
	BIT_VEC cppVar_48886 = PC + 1;
	cppVar_48886 = (cppVar_48886 & cppMask_un_16_);
	BIT_VEC cppVar_48887 = ROM.rd(cppVar_48886);
	BIT_VEC cppVar_48888 = (cppVar_48887 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48889 = (cppVar_48888 << 3) | 0;
	cppVar_48889 = (cppVar_48889 & cppMask_un_8_);
	BIT_VEC cppVar_48890 = PC + 1;
	cppVar_48890 = (cppVar_48890 & cppMask_un_16_);
	BIT_VEC cppVar_48891 = ROM.rd(cppVar_48890);
	BIT_VEC cppVar_48892 = (cppVar_48891 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48893 = (cppVar_48892 & cppMask_un_5_);
	BIT_VEC cppVar_48894 = cppVar_48893 + 32;
	cppVar_48894 = (cppVar_48894 & cppMask_un_8_);
	BIT_VEC cppVar_48895 = (cppVar_48885) ? cppVar_48889 : cppVar_48894;
	bool cppVar_48897 = (cppVar_48895 == 130);
	BIT_VEC cppVar_48898 = PC + 1;
	cppVar_48898 = (cppVar_48898 & cppMask_un_16_);
	BIT_VEC cppVar_48899 = ROM.rd(cppVar_48898);
	BIT_VEC cppVar_48900 = (cppVar_48899 >> 7) & cppMask_un_1_;
	bool cppVar_48901 = (cppVar_48900 == 1);
	BIT_VEC cppVar_48902 = PC + 1;
	cppVar_48902 = (cppVar_48902 & cppMask_un_16_);
	BIT_VEC cppVar_48903 = ROM.rd(cppVar_48902);
	BIT_VEC cppVar_48904 = (cppVar_48903 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48905 = (cppVar_48904 << 3) | 0;
	cppVar_48905 = (cppVar_48905 & cppMask_un_8_);
	BIT_VEC cppVar_48906 = PC + 1;
	cppVar_48906 = (cppVar_48906 & cppMask_un_16_);
	BIT_VEC cppVar_48907 = ROM.rd(cppVar_48906);
	BIT_VEC cppVar_48908 = (cppVar_48907 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48909 = (cppVar_48908 & cppMask_un_5_);
	BIT_VEC cppVar_48910 = cppVar_48909 + 32;
	cppVar_48910 = (cppVar_48910 & cppMask_un_8_);
	BIT_VEC cppVar_48911 = (cppVar_48901) ? cppVar_48905 : cppVar_48910;
	bool cppVar_48913 = (cppVar_48911 == 131);
	BIT_VEC cppVar_48914 = PC + 1;
	cppVar_48914 = (cppVar_48914 & cppMask_un_16_);
	BIT_VEC cppVar_48915 = ROM.rd(cppVar_48914);
	BIT_VEC cppVar_48916 = (cppVar_48915 >> 7) & cppMask_un_1_;
	bool cppVar_48917 = (cppVar_48916 == 1);
	BIT_VEC cppVar_48918 = PC + 1;
	cppVar_48918 = (cppVar_48918 & cppMask_un_16_);
	BIT_VEC cppVar_48919 = ROM.rd(cppVar_48918);
	BIT_VEC cppVar_48920 = (cppVar_48919 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48921 = (cppVar_48920 << 3) | 0;
	cppVar_48921 = (cppVar_48921 & cppMask_un_8_);
	BIT_VEC cppVar_48922 = PC + 1;
	cppVar_48922 = (cppVar_48922 & cppMask_un_16_);
	BIT_VEC cppVar_48923 = ROM.rd(cppVar_48922);
	BIT_VEC cppVar_48924 = (cppVar_48923 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48925 = (cppVar_48924 & cppMask_un_5_);
	BIT_VEC cppVar_48926 = cppVar_48925 + 32;
	cppVar_48926 = (cppVar_48926 & cppMask_un_8_);
	BIT_VEC cppVar_48927 = (cppVar_48917) ? cppVar_48921 : cppVar_48926;
	bool cppVar_48929 = (cppVar_48927 == 135);
	BIT_VEC cppVar_48930 = PC + 1;
	cppVar_48930 = (cppVar_48930 & cppMask_un_16_);
	BIT_VEC cppVar_48931 = ROM.rd(cppVar_48930);
	BIT_VEC cppVar_48932 = (cppVar_48931 >> 7) & cppMask_un_1_;
	bool cppVar_48933 = (cppVar_48932 == 1);
	BIT_VEC cppVar_48934 = PC + 1;
	cppVar_48934 = (cppVar_48934 & cppMask_un_16_);
	BIT_VEC cppVar_48935 = ROM.rd(cppVar_48934);
	BIT_VEC cppVar_48936 = (cppVar_48935 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48937 = (cppVar_48936 << 3) | 0;
	cppVar_48937 = (cppVar_48937 & cppMask_un_8_);
	BIT_VEC cppVar_48938 = PC + 1;
	cppVar_48938 = (cppVar_48938 & cppMask_un_16_);
	BIT_VEC cppVar_48939 = ROM.rd(cppVar_48938);
	BIT_VEC cppVar_48940 = (cppVar_48939 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48941 = (cppVar_48940 & cppMask_un_5_);
	BIT_VEC cppVar_48942 = cppVar_48941 + 32;
	cppVar_48942 = (cppVar_48942 & cppMask_un_8_);
	BIT_VEC cppVar_48943 = (cppVar_48933) ? cppVar_48937 : cppVar_48942;
	bool cppVar_48945 = (cppVar_48943 == 136);
	BIT_VEC cppVar_48946 = PC + 1;
	cppVar_48946 = (cppVar_48946 & cppMask_un_16_);
	BIT_VEC cppVar_48947 = ROM.rd(cppVar_48946);
	BIT_VEC cppVar_48948 = (cppVar_48947 >> 7) & cppMask_un_1_;
	bool cppVar_48949 = (cppVar_48948 == 1);
	BIT_VEC cppVar_48950 = PC + 1;
	cppVar_48950 = (cppVar_48950 & cppMask_un_16_);
	BIT_VEC cppVar_48951 = ROM.rd(cppVar_48950);
	BIT_VEC cppVar_48952 = (cppVar_48951 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48953 = (cppVar_48952 << 3) | 0;
	cppVar_48953 = (cppVar_48953 & cppMask_un_8_);
	BIT_VEC cppVar_48954 = PC + 1;
	cppVar_48954 = (cppVar_48954 & cppMask_un_16_);
	BIT_VEC cppVar_48955 = ROM.rd(cppVar_48954);
	BIT_VEC cppVar_48956 = (cppVar_48955 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48957 = (cppVar_48956 & cppMask_un_5_);
	BIT_VEC cppVar_48958 = cppVar_48957 + 32;
	cppVar_48958 = (cppVar_48958 & cppMask_un_8_);
	BIT_VEC cppVar_48959 = (cppVar_48949) ? cppVar_48953 : cppVar_48958;
	bool cppVar_48961 = (cppVar_48959 == 137);
	BIT_VEC cppVar_48962 = PC + 1;
	cppVar_48962 = (cppVar_48962 & cppMask_un_16_);
	BIT_VEC cppVar_48963 = ROM.rd(cppVar_48962);
	BIT_VEC cppVar_48964 = (cppVar_48963 >> 7) & cppMask_un_1_;
	bool cppVar_48965 = (cppVar_48964 == 1);
	BIT_VEC cppVar_48966 = PC + 1;
	cppVar_48966 = (cppVar_48966 & cppMask_un_16_);
	BIT_VEC cppVar_48967 = ROM.rd(cppVar_48966);
	BIT_VEC cppVar_48968 = (cppVar_48967 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48969 = (cppVar_48968 << 3) | 0;
	cppVar_48969 = (cppVar_48969 & cppMask_un_8_);
	BIT_VEC cppVar_48970 = PC + 1;
	cppVar_48970 = (cppVar_48970 & cppMask_un_16_);
	BIT_VEC cppVar_48971 = ROM.rd(cppVar_48970);
	BIT_VEC cppVar_48972 = (cppVar_48971 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48973 = (cppVar_48972 & cppMask_un_5_);
	BIT_VEC cppVar_48974 = cppVar_48973 + 32;
	cppVar_48974 = (cppVar_48974 & cppMask_un_8_);
	BIT_VEC cppVar_48975 = (cppVar_48965) ? cppVar_48969 : cppVar_48974;
	bool cppVar_48977 = (cppVar_48975 == 138);
	BIT_VEC cppVar_48978 = PC + 1;
	cppVar_48978 = (cppVar_48978 & cppMask_un_16_);
	BIT_VEC cppVar_48979 = ROM.rd(cppVar_48978);
	BIT_VEC cppVar_48980 = (cppVar_48979 >> 7) & cppMask_un_1_;
	bool cppVar_48981 = (cppVar_48980 == 1);
	BIT_VEC cppVar_48982 = PC + 1;
	cppVar_48982 = (cppVar_48982 & cppMask_un_16_);
	BIT_VEC cppVar_48983 = ROM.rd(cppVar_48982);
	BIT_VEC cppVar_48984 = (cppVar_48983 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48985 = (cppVar_48984 << 3) | 0;
	cppVar_48985 = (cppVar_48985 & cppMask_un_8_);
	BIT_VEC cppVar_48986 = PC + 1;
	cppVar_48986 = (cppVar_48986 & cppMask_un_16_);
	BIT_VEC cppVar_48987 = ROM.rd(cppVar_48986);
	BIT_VEC cppVar_48988 = (cppVar_48987 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_48989 = (cppVar_48988 & cppMask_un_5_);
	BIT_VEC cppVar_48990 = cppVar_48989 + 32;
	cppVar_48990 = (cppVar_48990 & cppMask_un_8_);
	BIT_VEC cppVar_48991 = (cppVar_48981) ? cppVar_48985 : cppVar_48990;
	bool cppVar_48993 = (cppVar_48991 == 140);
	BIT_VEC cppVar_48994 = PC + 1;
	cppVar_48994 = (cppVar_48994 & cppMask_un_16_);
	BIT_VEC cppVar_48995 = ROM.rd(cppVar_48994);
	BIT_VEC cppVar_48996 = (cppVar_48995 >> 7) & cppMask_un_1_;
	bool cppVar_48997 = (cppVar_48996 == 1);
	BIT_VEC cppVar_48998 = PC + 1;
	cppVar_48998 = (cppVar_48998 & cppMask_un_16_);
	BIT_VEC cppVar_48999 = ROM.rd(cppVar_48998);
	BIT_VEC cppVar_49000 = (cppVar_48999 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49001 = (cppVar_49000 << 3) | 0;
	cppVar_49001 = (cppVar_49001 & cppMask_un_8_);
	BIT_VEC cppVar_49002 = PC + 1;
	cppVar_49002 = (cppVar_49002 & cppMask_un_16_);
	BIT_VEC cppVar_49003 = ROM.rd(cppVar_49002);
	BIT_VEC cppVar_49004 = (cppVar_49003 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49005 = (cppVar_49004 & cppMask_un_5_);
	BIT_VEC cppVar_49006 = cppVar_49005 + 32;
	cppVar_49006 = (cppVar_49006 & cppMask_un_8_);
	BIT_VEC cppVar_49007 = (cppVar_48997) ? cppVar_49001 : cppVar_49006;
	bool cppVar_49009 = (cppVar_49007 == 139);
	BIT_VEC cppVar_49010 = PC + 1;
	cppVar_49010 = (cppVar_49010 & cppMask_un_16_);
	BIT_VEC cppVar_49011 = ROM.rd(cppVar_49010);
	BIT_VEC cppVar_49012 = (cppVar_49011 >> 7) & cppMask_un_1_;
	bool cppVar_49013 = (cppVar_49012 == 1);
	BIT_VEC cppVar_49014 = PC + 1;
	cppVar_49014 = (cppVar_49014 & cppMask_un_16_);
	BIT_VEC cppVar_49015 = ROM.rd(cppVar_49014);
	BIT_VEC cppVar_49016 = (cppVar_49015 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49017 = (cppVar_49016 << 3) | 0;
	cppVar_49017 = (cppVar_49017 & cppMask_un_8_);
	BIT_VEC cppVar_49018 = PC + 1;
	cppVar_49018 = (cppVar_49018 & cppMask_un_16_);
	BIT_VEC cppVar_49019 = ROM.rd(cppVar_49018);
	BIT_VEC cppVar_49020 = (cppVar_49019 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49021 = (cppVar_49020 & cppMask_un_5_);
	BIT_VEC cppVar_49022 = cppVar_49021 + 32;
	cppVar_49022 = (cppVar_49022 & cppMask_un_8_);
	BIT_VEC cppVar_49023 = (cppVar_49013) ? cppVar_49017 : cppVar_49022;
	bool cppVar_49025 = (cppVar_49023 == 141);
	BIT_VEC cppVar_49026 = PC + 1;
	cppVar_49026 = (cppVar_49026 & cppMask_un_16_);
	BIT_VEC cppVar_49027 = ROM.rd(cppVar_49026);
	BIT_VEC cppVar_49028 = (cppVar_49027 >> 7) & cppMask_un_1_;
	bool cppVar_49029 = (cppVar_49028 == 1);
	BIT_VEC cppVar_49030 = PC + 1;
	cppVar_49030 = (cppVar_49030 & cppMask_un_16_);
	BIT_VEC cppVar_49031 = ROM.rd(cppVar_49030);
	BIT_VEC cppVar_49032 = (cppVar_49031 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49033 = (cppVar_49032 << 3) | 0;
	cppVar_49033 = (cppVar_49033 & cppMask_un_8_);
	BIT_VEC cppVar_49034 = PC + 1;
	cppVar_49034 = (cppVar_49034 & cppMask_un_16_);
	BIT_VEC cppVar_49035 = ROM.rd(cppVar_49034);
	BIT_VEC cppVar_49036 = (cppVar_49035 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49037 = (cppVar_49036 & cppMask_un_5_);
	BIT_VEC cppVar_49038 = cppVar_49037 + 32;
	cppVar_49038 = (cppVar_49038 & cppMask_un_8_);
	BIT_VEC cppVar_49039 = (cppVar_49029) ? cppVar_49033 : cppVar_49038;
	bool cppVar_49041 = (cppVar_49039 == 144);
	BIT_VEC cppVar_49042 = PC + 1;
	cppVar_49042 = (cppVar_49042 & cppMask_un_16_);
	BIT_VEC cppVar_49043 = ROM.rd(cppVar_49042);
	BIT_VEC cppVar_49044 = (cppVar_49043 >> 7) & cppMask_un_1_;
	bool cppVar_49045 = (cppVar_49044 == 1);
	BIT_VEC cppVar_49046 = PC + 1;
	cppVar_49046 = (cppVar_49046 & cppMask_un_16_);
	BIT_VEC cppVar_49047 = ROM.rd(cppVar_49046);
	BIT_VEC cppVar_49048 = (cppVar_49047 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49049 = (cppVar_49048 << 3) | 0;
	cppVar_49049 = (cppVar_49049 & cppMask_un_8_);
	BIT_VEC cppVar_49050 = PC + 1;
	cppVar_49050 = (cppVar_49050 & cppMask_un_16_);
	BIT_VEC cppVar_49051 = ROM.rd(cppVar_49050);
	BIT_VEC cppVar_49052 = (cppVar_49051 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49053 = (cppVar_49052 & cppMask_un_5_);
	BIT_VEC cppVar_49054 = cppVar_49053 + 32;
	cppVar_49054 = (cppVar_49054 & cppMask_un_8_);
	BIT_VEC cppVar_49055 = (cppVar_49045) ? cppVar_49049 : cppVar_49054;
	bool cppVar_49057 = (cppVar_49055 == 152);
	BIT_VEC cppVar_49058 = PC + 1;
	cppVar_49058 = (cppVar_49058 & cppMask_un_16_);
	BIT_VEC cppVar_49059 = ROM.rd(cppVar_49058);
	BIT_VEC cppVar_49060 = (cppVar_49059 >> 7) & cppMask_un_1_;
	bool cppVar_49061 = (cppVar_49060 == 1);
	BIT_VEC cppVar_49062 = PC + 1;
	cppVar_49062 = (cppVar_49062 & cppMask_un_16_);
	BIT_VEC cppVar_49063 = ROM.rd(cppVar_49062);
	BIT_VEC cppVar_49064 = (cppVar_49063 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49065 = (cppVar_49064 << 3) | 0;
	cppVar_49065 = (cppVar_49065 & cppMask_un_8_);
	BIT_VEC cppVar_49066 = PC + 1;
	cppVar_49066 = (cppVar_49066 & cppMask_un_16_);
	BIT_VEC cppVar_49067 = ROM.rd(cppVar_49066);
	BIT_VEC cppVar_49068 = (cppVar_49067 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49069 = (cppVar_49068 & cppMask_un_5_);
	BIT_VEC cppVar_49070 = cppVar_49069 + 32;
	cppVar_49070 = (cppVar_49070 & cppMask_un_8_);
	BIT_VEC cppVar_49071 = (cppVar_49061) ? cppVar_49065 : cppVar_49070;
	bool cppVar_49073 = (cppVar_49071 == 153);
	BIT_VEC cppVar_49074 = PC + 1;
	cppVar_49074 = (cppVar_49074 & cppMask_un_16_);
	BIT_VEC cppVar_49075 = ROM.rd(cppVar_49074);
	BIT_VEC cppVar_49076 = (cppVar_49075 >> 7) & cppMask_un_1_;
	bool cppVar_49077 = (cppVar_49076 == 1);
	BIT_VEC cppVar_49078 = PC + 1;
	cppVar_49078 = (cppVar_49078 & cppMask_un_16_);
	BIT_VEC cppVar_49079 = ROM.rd(cppVar_49078);
	BIT_VEC cppVar_49080 = (cppVar_49079 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49081 = (cppVar_49080 << 3) | 0;
	cppVar_49081 = (cppVar_49081 & cppMask_un_8_);
	BIT_VEC cppVar_49082 = PC + 1;
	cppVar_49082 = (cppVar_49082 & cppMask_un_16_);
	BIT_VEC cppVar_49083 = ROM.rd(cppVar_49082);
	BIT_VEC cppVar_49084 = (cppVar_49083 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49085 = (cppVar_49084 & cppMask_un_5_);
	BIT_VEC cppVar_49086 = cppVar_49085 + 32;
	cppVar_49086 = (cppVar_49086 & cppMask_un_8_);
	BIT_VEC cppVar_49087 = (cppVar_49077) ? cppVar_49081 : cppVar_49086;
	bool cppVar_49089 = (cppVar_49087 == 160);
	BIT_VEC cppVar_49090 = PC + 1;
	cppVar_49090 = (cppVar_49090 & cppMask_un_16_);
	BIT_VEC cppVar_49091 = ROM.rd(cppVar_49090);
	BIT_VEC cppVar_49092 = (cppVar_49091 >> 7) & cppMask_un_1_;
	bool cppVar_49093 = (cppVar_49092 == 1);
	BIT_VEC cppVar_49094 = PC + 1;
	cppVar_49094 = (cppVar_49094 & cppMask_un_16_);
	BIT_VEC cppVar_49095 = ROM.rd(cppVar_49094);
	BIT_VEC cppVar_49096 = (cppVar_49095 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49097 = (cppVar_49096 << 3) | 0;
	cppVar_49097 = (cppVar_49097 & cppMask_un_8_);
	BIT_VEC cppVar_49098 = PC + 1;
	cppVar_49098 = (cppVar_49098 & cppMask_un_16_);
	BIT_VEC cppVar_49099 = ROM.rd(cppVar_49098);
	BIT_VEC cppVar_49100 = (cppVar_49099 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49101 = (cppVar_49100 & cppMask_un_5_);
	BIT_VEC cppVar_49102 = cppVar_49101 + 32;
	cppVar_49102 = (cppVar_49102 & cppMask_un_8_);
	BIT_VEC cppVar_49103 = (cppVar_49093) ? cppVar_49097 : cppVar_49102;
	bool cppVar_49105 = (cppVar_49103 == 168);
	BIT_VEC cppVar_49106 = PC + 1;
	cppVar_49106 = (cppVar_49106 & cppMask_un_16_);
	BIT_VEC cppVar_49107 = ROM.rd(cppVar_49106);
	BIT_VEC cppVar_49108 = (cppVar_49107 >> 7) & cppMask_un_1_;
	bool cppVar_49109 = (cppVar_49108 == 1);
	BIT_VEC cppVar_49110 = PC + 1;
	cppVar_49110 = (cppVar_49110 & cppMask_un_16_);
	BIT_VEC cppVar_49111 = ROM.rd(cppVar_49110);
	BIT_VEC cppVar_49112 = (cppVar_49111 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49113 = (cppVar_49112 << 3) | 0;
	cppVar_49113 = (cppVar_49113 & cppMask_un_8_);
	BIT_VEC cppVar_49114 = PC + 1;
	cppVar_49114 = (cppVar_49114 & cppMask_un_16_);
	BIT_VEC cppVar_49115 = ROM.rd(cppVar_49114);
	BIT_VEC cppVar_49116 = (cppVar_49115 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49117 = (cppVar_49116 & cppMask_un_5_);
	BIT_VEC cppVar_49118 = cppVar_49117 + 32;
	cppVar_49118 = (cppVar_49118 & cppMask_un_8_);
	BIT_VEC cppVar_49119 = (cppVar_49109) ? cppVar_49113 : cppVar_49118;
	bool cppVar_49121 = (cppVar_49119 == 176);
	BIT_VEC cppVar_49122 = PC + 1;
	cppVar_49122 = (cppVar_49122 & cppMask_un_16_);
	BIT_VEC cppVar_49123 = ROM.rd(cppVar_49122);
	BIT_VEC cppVar_49124 = (cppVar_49123 >> 7) & cppMask_un_1_;
	bool cppVar_49125 = (cppVar_49124 == 1);
	BIT_VEC cppVar_49126 = PC + 1;
	cppVar_49126 = (cppVar_49126 & cppMask_un_16_);
	BIT_VEC cppVar_49127 = ROM.rd(cppVar_49126);
	BIT_VEC cppVar_49128 = (cppVar_49127 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49129 = (cppVar_49128 << 3) | 0;
	cppVar_49129 = (cppVar_49129 & cppMask_un_8_);
	BIT_VEC cppVar_49130 = PC + 1;
	cppVar_49130 = (cppVar_49130 & cppMask_un_16_);
	BIT_VEC cppVar_49131 = ROM.rd(cppVar_49130);
	BIT_VEC cppVar_49132 = (cppVar_49131 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49133 = (cppVar_49132 & cppMask_un_5_);
	BIT_VEC cppVar_49134 = cppVar_49133 + 32;
	cppVar_49134 = (cppVar_49134 & cppMask_un_8_);
	BIT_VEC cppVar_49135 = (cppVar_49125) ? cppVar_49129 : cppVar_49134;
	bool cppVar_49137 = (cppVar_49135 == 184);
	BIT_VEC cppVar_49138 = PC + 1;
	cppVar_49138 = (cppVar_49138 & cppMask_un_16_);
	BIT_VEC cppVar_49139 = ROM.rd(cppVar_49138);
	BIT_VEC cppVar_49140 = (cppVar_49139 >> 7) & cppMask_un_1_;
	bool cppVar_49141 = (cppVar_49140 == 1);
	BIT_VEC cppVar_49142 = PC + 1;
	cppVar_49142 = (cppVar_49142 & cppMask_un_16_);
	BIT_VEC cppVar_49143 = ROM.rd(cppVar_49142);
	BIT_VEC cppVar_49144 = (cppVar_49143 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49145 = (cppVar_49144 << 3) | 0;
	cppVar_49145 = (cppVar_49145 & cppMask_un_8_);
	BIT_VEC cppVar_49146 = PC + 1;
	cppVar_49146 = (cppVar_49146 & cppMask_un_16_);
	BIT_VEC cppVar_49147 = ROM.rd(cppVar_49146);
	BIT_VEC cppVar_49148 = (cppVar_49147 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49149 = (cppVar_49148 & cppMask_un_5_);
	BIT_VEC cppVar_49150 = cppVar_49149 + 32;
	cppVar_49150 = (cppVar_49150 & cppMask_un_8_);
	BIT_VEC cppVar_49151 = (cppVar_49141) ? cppVar_49145 : cppVar_49150;
	bool cppVar_49153 = (cppVar_49151 == 208);
	BIT_VEC cppVar_49154 = PC + 1;
	cppVar_49154 = (cppVar_49154 & cppMask_un_16_);
	BIT_VEC cppVar_49155 = ROM.rd(cppVar_49154);
	BIT_VEC cppVar_49156 = (cppVar_49155 >> 7) & cppMask_un_1_;
	bool cppVar_49157 = (cppVar_49156 == 1);
	BIT_VEC cppVar_49158 = PC + 1;
	cppVar_49158 = (cppVar_49158 & cppMask_un_16_);
	BIT_VEC cppVar_49159 = ROM.rd(cppVar_49158);
	BIT_VEC cppVar_49160 = (cppVar_49159 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49161 = (cppVar_49160 << 3) | 0;
	cppVar_49161 = (cppVar_49161 & cppMask_un_8_);
	BIT_VEC cppVar_49162 = PC + 1;
	cppVar_49162 = (cppVar_49162 & cppMask_un_16_);
	BIT_VEC cppVar_49163 = ROM.rd(cppVar_49162);
	BIT_VEC cppVar_49164 = (cppVar_49163 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49165 = (cppVar_49164 & cppMask_un_5_);
	BIT_VEC cppVar_49166 = cppVar_49165 + 32;
	cppVar_49166 = (cppVar_49166 & cppMask_un_8_);
	BIT_VEC cppVar_49167 = (cppVar_49157) ? cppVar_49161 : cppVar_49166;
	bool cppVar_49169 = (cppVar_49167 == 224);
	BIT_VEC cppVar_49170 = PC + 1;
	cppVar_49170 = (cppVar_49170 & cppMask_un_16_);
	BIT_VEC cppVar_49171 = ROM.rd(cppVar_49170);
	BIT_VEC cppVar_49172 = (cppVar_49171 >> 7) & cppMask_un_1_;
	bool cppVar_49173 = (cppVar_49172 == 1);
	BIT_VEC cppVar_49174 = PC + 1;
	cppVar_49174 = (cppVar_49174 & cppMask_un_16_);
	BIT_VEC cppVar_49175 = ROM.rd(cppVar_49174);
	BIT_VEC cppVar_49176 = (cppVar_49175 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49177 = (cppVar_49176 << 3) | 0;
	cppVar_49177 = (cppVar_49177 & cppMask_un_8_);
	BIT_VEC cppVar_49178 = PC + 1;
	cppVar_49178 = (cppVar_49178 & cppMask_un_16_);
	BIT_VEC cppVar_49179 = ROM.rd(cppVar_49178);
	BIT_VEC cppVar_49180 = (cppVar_49179 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49181 = (cppVar_49180 & cppMask_un_5_);
	BIT_VEC cppVar_49182 = cppVar_49181 + 32;
	cppVar_49182 = (cppVar_49182 & cppMask_un_8_);
	BIT_VEC cppVar_49183 = (cppVar_49173) ? cppVar_49177 : cppVar_49182;
	bool cppVar_49185 = (cppVar_49183 == 240);
	BIT_VEC cppVar_49187 = (cppVar_49185) ? B : 0;
	BIT_VEC cppVar_49188 = (cppVar_49169) ? ACC : cppVar_49187;
	BIT_VEC cppVar_49189 = (cppVar_49153) ? PSW : cppVar_49188;
	BIT_VEC cppVar_49190 = (cppVar_49137) ? IP : cppVar_49189;
	BIT_VEC cppVar_49191 = (cppVar_49121) ? P3 : cppVar_49190;
	BIT_VEC cppVar_49192 = (cppVar_49105) ? IE : cppVar_49191;
	BIT_VEC cppVar_49193 = (cppVar_49089) ? P2 : cppVar_49192;
	BIT_VEC cppVar_49194 = (cppVar_49073) ? SBUF : cppVar_49193;
	BIT_VEC cppVar_49195 = (cppVar_49057) ? SCON : cppVar_49194;
	BIT_VEC cppVar_49196 = (cppVar_49041) ? P1 : cppVar_49195;
	BIT_VEC cppVar_49197 = (cppVar_49025) ? TH1 : cppVar_49196;
	BIT_VEC cppVar_49198 = (cppVar_49009) ? TL1 : cppVar_49197;
	BIT_VEC cppVar_49199 = (cppVar_48993) ? TH0 : cppVar_49198;
	BIT_VEC cppVar_49200 = (cppVar_48977) ? TL0 : cppVar_49199;
	BIT_VEC cppVar_49201 = (cppVar_48961) ? TMOD : cppVar_49200;
	BIT_VEC cppVar_49202 = (cppVar_48945) ? TCON : cppVar_49201;
	BIT_VEC cppVar_49203 = (cppVar_48929) ? PCON : cppVar_49202;
	BIT_VEC cppVar_49204 = (cppVar_48913) ? DPH : cppVar_49203;
	BIT_VEC cppVar_49205 = (cppVar_48897) ? DPL : cppVar_49204;
	BIT_VEC cppVar_49206 = (cppVar_48881) ? SP : cppVar_49205;
	BIT_VEC cppVar_49207 = (cppVar_48865) ? P0 : cppVar_49206;
	BIT_VEC cppVar_49208 = (cppVar_48834) ? cppVar_48849 : cppVar_49207;
	BIT_VEC cppVar_49209 = PC + 1;
	cppVar_49209 = (cppVar_49209 & cppMask_un_16_);
	BIT_VEC cppVar_49210 = ROM.rd(cppVar_49209);
	BIT_VEC cppVar_49211 = (cppVar_49210 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_49212 = (cppVar_49208 >> static_cast<unsigned>(cppVar_49211)) & 0x1;
	BIT_VEC cppVar_49213 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_49214 = (cppVar_49212 << 7) | cppVar_49213;
	cppVar_49214 = (cppVar_49214 & cppMask_un_8_);
	BIT_VEC cppVar_49215 = ROM.rd(PC);
	bool cppVar_49217 = (cppVar_49215 == 160);
	BIT_VEC cppVar_49218 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49220 = PC + 1;
	cppVar_49220 = (cppVar_49220 & cppMask_un_16_);
	BIT_VEC cppVar_49221 = ROM.rd(cppVar_49220);
	BIT_VEC cppVar_49222 = (cppVar_49221 >> 7) & cppMask_un_1_;
	bool cppVar_49224 = (cppVar_49222 == 1);
	BIT_VEC cppVar_49225 = PC + 1;
	cppVar_49225 = (cppVar_49225 & cppMask_un_16_);
	BIT_VEC cppVar_49226 = ROM.rd(cppVar_49225);
	BIT_VEC cppVar_49227 = (cppVar_49226 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49229 = (cppVar_49227 << 3) | 0;
	cppVar_49229 = (cppVar_49229 & cppMask_un_8_);
	BIT_VEC cppVar_49230 = PC + 1;
	cppVar_49230 = (cppVar_49230 & cppMask_un_16_);
	BIT_VEC cppVar_49231 = ROM.rd(cppVar_49230);
	BIT_VEC cppVar_49232 = (cppVar_49231 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49233 = (cppVar_49232 & cppMask_un_5_);
	BIT_VEC cppVar_49235 = cppVar_49233 + 32;
	cppVar_49235 = (cppVar_49235 & cppMask_un_8_);
	BIT_VEC cppVar_49236 = (cppVar_49224) ? cppVar_49229 : cppVar_49235;
	BIT_VEC cppVar_49237 = (cppVar_49236 >> 7) & cppMask_un_1_;
	bool cppVar_49239 = (cppVar_49237 == 0);
	BIT_VEC cppVar_49240 = PC + 1;
	cppVar_49240 = (cppVar_49240 & cppMask_un_16_);
	BIT_VEC cppVar_49241 = ROM.rd(cppVar_49240);
	BIT_VEC cppVar_49242 = (cppVar_49241 >> 7) & cppMask_un_1_;
	bool cppVar_49243 = (cppVar_49242 == 1);
	BIT_VEC cppVar_49244 = PC + 1;
	cppVar_49244 = (cppVar_49244 & cppMask_un_16_);
	BIT_VEC cppVar_49245 = ROM.rd(cppVar_49244);
	BIT_VEC cppVar_49246 = (cppVar_49245 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49247 = (cppVar_49246 << 3) | 0;
	cppVar_49247 = (cppVar_49247 & cppMask_un_8_);
	BIT_VEC cppVar_49248 = PC + 1;
	cppVar_49248 = (cppVar_49248 & cppMask_un_16_);
	BIT_VEC cppVar_49249 = ROM.rd(cppVar_49248);
	BIT_VEC cppVar_49250 = (cppVar_49249 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49251 = (cppVar_49250 & cppMask_un_5_);
	BIT_VEC cppVar_49252 = cppVar_49251 + 32;
	cppVar_49252 = (cppVar_49252 & cppMask_un_8_);
	BIT_VEC cppVar_49253 = (cppVar_49243) ? cppVar_49247 : cppVar_49252;
	BIT_VEC cppVar_49254 = IRAM.rd(cppVar_49253);
	BIT_VEC cppVar_49255 = PC + 1;
	cppVar_49255 = (cppVar_49255 & cppMask_un_16_);
	BIT_VEC cppVar_49256 = ROM.rd(cppVar_49255);
	BIT_VEC cppVar_49257 = (cppVar_49256 >> 7) & cppMask_un_1_;
	bool cppVar_49258 = (cppVar_49257 == 1);
	BIT_VEC cppVar_49259 = PC + 1;
	cppVar_49259 = (cppVar_49259 & cppMask_un_16_);
	BIT_VEC cppVar_49260 = ROM.rd(cppVar_49259);
	BIT_VEC cppVar_49261 = (cppVar_49260 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49262 = (cppVar_49261 << 3) | 0;
	cppVar_49262 = (cppVar_49262 & cppMask_un_8_);
	BIT_VEC cppVar_49263 = PC + 1;
	cppVar_49263 = (cppVar_49263 & cppMask_un_16_);
	BIT_VEC cppVar_49264 = ROM.rd(cppVar_49263);
	BIT_VEC cppVar_49265 = (cppVar_49264 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49266 = (cppVar_49265 & cppMask_un_5_);
	BIT_VEC cppVar_49267 = cppVar_49266 + 32;
	cppVar_49267 = (cppVar_49267 & cppMask_un_8_);
	BIT_VEC cppVar_49268 = (cppVar_49258) ? cppVar_49262 : cppVar_49267;
	bool cppVar_49270 = (cppVar_49268 == 128);
	BIT_VEC cppVar_49271 = PC + 1;
	cppVar_49271 = (cppVar_49271 & cppMask_un_16_);
	BIT_VEC cppVar_49272 = ROM.rd(cppVar_49271);
	BIT_VEC cppVar_49273 = (cppVar_49272 >> 7) & cppMask_un_1_;
	bool cppVar_49274 = (cppVar_49273 == 1);
	BIT_VEC cppVar_49275 = PC + 1;
	cppVar_49275 = (cppVar_49275 & cppMask_un_16_);
	BIT_VEC cppVar_49276 = ROM.rd(cppVar_49275);
	BIT_VEC cppVar_49277 = (cppVar_49276 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49278 = (cppVar_49277 << 3) | 0;
	cppVar_49278 = (cppVar_49278 & cppMask_un_8_);
	BIT_VEC cppVar_49279 = PC + 1;
	cppVar_49279 = (cppVar_49279 & cppMask_un_16_);
	BIT_VEC cppVar_49280 = ROM.rd(cppVar_49279);
	BIT_VEC cppVar_49281 = (cppVar_49280 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49282 = (cppVar_49281 & cppMask_un_5_);
	BIT_VEC cppVar_49283 = cppVar_49282 + 32;
	cppVar_49283 = (cppVar_49283 & cppMask_un_8_);
	BIT_VEC cppVar_49284 = (cppVar_49274) ? cppVar_49278 : cppVar_49283;
	bool cppVar_49286 = (cppVar_49284 == 129);
	BIT_VEC cppVar_49287 = PC + 1;
	cppVar_49287 = (cppVar_49287 & cppMask_un_16_);
	BIT_VEC cppVar_49288 = ROM.rd(cppVar_49287);
	BIT_VEC cppVar_49289 = (cppVar_49288 >> 7) & cppMask_un_1_;
	bool cppVar_49290 = (cppVar_49289 == 1);
	BIT_VEC cppVar_49291 = PC + 1;
	cppVar_49291 = (cppVar_49291 & cppMask_un_16_);
	BIT_VEC cppVar_49292 = ROM.rd(cppVar_49291);
	BIT_VEC cppVar_49293 = (cppVar_49292 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49294 = (cppVar_49293 << 3) | 0;
	cppVar_49294 = (cppVar_49294 & cppMask_un_8_);
	BIT_VEC cppVar_49295 = PC + 1;
	cppVar_49295 = (cppVar_49295 & cppMask_un_16_);
	BIT_VEC cppVar_49296 = ROM.rd(cppVar_49295);
	BIT_VEC cppVar_49297 = (cppVar_49296 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49298 = (cppVar_49297 & cppMask_un_5_);
	BIT_VEC cppVar_49299 = cppVar_49298 + 32;
	cppVar_49299 = (cppVar_49299 & cppMask_un_8_);
	BIT_VEC cppVar_49300 = (cppVar_49290) ? cppVar_49294 : cppVar_49299;
	bool cppVar_49302 = (cppVar_49300 == 130);
	BIT_VEC cppVar_49303 = PC + 1;
	cppVar_49303 = (cppVar_49303 & cppMask_un_16_);
	BIT_VEC cppVar_49304 = ROM.rd(cppVar_49303);
	BIT_VEC cppVar_49305 = (cppVar_49304 >> 7) & cppMask_un_1_;
	bool cppVar_49306 = (cppVar_49305 == 1);
	BIT_VEC cppVar_49307 = PC + 1;
	cppVar_49307 = (cppVar_49307 & cppMask_un_16_);
	BIT_VEC cppVar_49308 = ROM.rd(cppVar_49307);
	BIT_VEC cppVar_49309 = (cppVar_49308 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49310 = (cppVar_49309 << 3) | 0;
	cppVar_49310 = (cppVar_49310 & cppMask_un_8_);
	BIT_VEC cppVar_49311 = PC + 1;
	cppVar_49311 = (cppVar_49311 & cppMask_un_16_);
	BIT_VEC cppVar_49312 = ROM.rd(cppVar_49311);
	BIT_VEC cppVar_49313 = (cppVar_49312 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49314 = (cppVar_49313 & cppMask_un_5_);
	BIT_VEC cppVar_49315 = cppVar_49314 + 32;
	cppVar_49315 = (cppVar_49315 & cppMask_un_8_);
	BIT_VEC cppVar_49316 = (cppVar_49306) ? cppVar_49310 : cppVar_49315;
	bool cppVar_49318 = (cppVar_49316 == 131);
	BIT_VEC cppVar_49319 = PC + 1;
	cppVar_49319 = (cppVar_49319 & cppMask_un_16_);
	BIT_VEC cppVar_49320 = ROM.rd(cppVar_49319);
	BIT_VEC cppVar_49321 = (cppVar_49320 >> 7) & cppMask_un_1_;
	bool cppVar_49322 = (cppVar_49321 == 1);
	BIT_VEC cppVar_49323 = PC + 1;
	cppVar_49323 = (cppVar_49323 & cppMask_un_16_);
	BIT_VEC cppVar_49324 = ROM.rd(cppVar_49323);
	BIT_VEC cppVar_49325 = (cppVar_49324 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49326 = (cppVar_49325 << 3) | 0;
	cppVar_49326 = (cppVar_49326 & cppMask_un_8_);
	BIT_VEC cppVar_49327 = PC + 1;
	cppVar_49327 = (cppVar_49327 & cppMask_un_16_);
	BIT_VEC cppVar_49328 = ROM.rd(cppVar_49327);
	BIT_VEC cppVar_49329 = (cppVar_49328 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49330 = (cppVar_49329 & cppMask_un_5_);
	BIT_VEC cppVar_49331 = cppVar_49330 + 32;
	cppVar_49331 = (cppVar_49331 & cppMask_un_8_);
	BIT_VEC cppVar_49332 = (cppVar_49322) ? cppVar_49326 : cppVar_49331;
	bool cppVar_49334 = (cppVar_49332 == 135);
	BIT_VEC cppVar_49335 = PC + 1;
	cppVar_49335 = (cppVar_49335 & cppMask_un_16_);
	BIT_VEC cppVar_49336 = ROM.rd(cppVar_49335);
	BIT_VEC cppVar_49337 = (cppVar_49336 >> 7) & cppMask_un_1_;
	bool cppVar_49338 = (cppVar_49337 == 1);
	BIT_VEC cppVar_49339 = PC + 1;
	cppVar_49339 = (cppVar_49339 & cppMask_un_16_);
	BIT_VEC cppVar_49340 = ROM.rd(cppVar_49339);
	BIT_VEC cppVar_49341 = (cppVar_49340 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49342 = (cppVar_49341 << 3) | 0;
	cppVar_49342 = (cppVar_49342 & cppMask_un_8_);
	BIT_VEC cppVar_49343 = PC + 1;
	cppVar_49343 = (cppVar_49343 & cppMask_un_16_);
	BIT_VEC cppVar_49344 = ROM.rd(cppVar_49343);
	BIT_VEC cppVar_49345 = (cppVar_49344 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49346 = (cppVar_49345 & cppMask_un_5_);
	BIT_VEC cppVar_49347 = cppVar_49346 + 32;
	cppVar_49347 = (cppVar_49347 & cppMask_un_8_);
	BIT_VEC cppVar_49348 = (cppVar_49338) ? cppVar_49342 : cppVar_49347;
	bool cppVar_49350 = (cppVar_49348 == 136);
	BIT_VEC cppVar_49351 = PC + 1;
	cppVar_49351 = (cppVar_49351 & cppMask_un_16_);
	BIT_VEC cppVar_49352 = ROM.rd(cppVar_49351);
	BIT_VEC cppVar_49353 = (cppVar_49352 >> 7) & cppMask_un_1_;
	bool cppVar_49354 = (cppVar_49353 == 1);
	BIT_VEC cppVar_49355 = PC + 1;
	cppVar_49355 = (cppVar_49355 & cppMask_un_16_);
	BIT_VEC cppVar_49356 = ROM.rd(cppVar_49355);
	BIT_VEC cppVar_49357 = (cppVar_49356 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49358 = (cppVar_49357 << 3) | 0;
	cppVar_49358 = (cppVar_49358 & cppMask_un_8_);
	BIT_VEC cppVar_49359 = PC + 1;
	cppVar_49359 = (cppVar_49359 & cppMask_un_16_);
	BIT_VEC cppVar_49360 = ROM.rd(cppVar_49359);
	BIT_VEC cppVar_49361 = (cppVar_49360 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49362 = (cppVar_49361 & cppMask_un_5_);
	BIT_VEC cppVar_49363 = cppVar_49362 + 32;
	cppVar_49363 = (cppVar_49363 & cppMask_un_8_);
	BIT_VEC cppVar_49364 = (cppVar_49354) ? cppVar_49358 : cppVar_49363;
	bool cppVar_49366 = (cppVar_49364 == 137);
	BIT_VEC cppVar_49367 = PC + 1;
	cppVar_49367 = (cppVar_49367 & cppMask_un_16_);
	BIT_VEC cppVar_49368 = ROM.rd(cppVar_49367);
	BIT_VEC cppVar_49369 = (cppVar_49368 >> 7) & cppMask_un_1_;
	bool cppVar_49370 = (cppVar_49369 == 1);
	BIT_VEC cppVar_49371 = PC + 1;
	cppVar_49371 = (cppVar_49371 & cppMask_un_16_);
	BIT_VEC cppVar_49372 = ROM.rd(cppVar_49371);
	BIT_VEC cppVar_49373 = (cppVar_49372 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49374 = (cppVar_49373 << 3) | 0;
	cppVar_49374 = (cppVar_49374 & cppMask_un_8_);
	BIT_VEC cppVar_49375 = PC + 1;
	cppVar_49375 = (cppVar_49375 & cppMask_un_16_);
	BIT_VEC cppVar_49376 = ROM.rd(cppVar_49375);
	BIT_VEC cppVar_49377 = (cppVar_49376 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49378 = (cppVar_49377 & cppMask_un_5_);
	BIT_VEC cppVar_49379 = cppVar_49378 + 32;
	cppVar_49379 = (cppVar_49379 & cppMask_un_8_);
	BIT_VEC cppVar_49380 = (cppVar_49370) ? cppVar_49374 : cppVar_49379;
	bool cppVar_49382 = (cppVar_49380 == 138);
	BIT_VEC cppVar_49383 = PC + 1;
	cppVar_49383 = (cppVar_49383 & cppMask_un_16_);
	BIT_VEC cppVar_49384 = ROM.rd(cppVar_49383);
	BIT_VEC cppVar_49385 = (cppVar_49384 >> 7) & cppMask_un_1_;
	bool cppVar_49386 = (cppVar_49385 == 1);
	BIT_VEC cppVar_49387 = PC + 1;
	cppVar_49387 = (cppVar_49387 & cppMask_un_16_);
	BIT_VEC cppVar_49388 = ROM.rd(cppVar_49387);
	BIT_VEC cppVar_49389 = (cppVar_49388 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49390 = (cppVar_49389 << 3) | 0;
	cppVar_49390 = (cppVar_49390 & cppMask_un_8_);
	BIT_VEC cppVar_49391 = PC + 1;
	cppVar_49391 = (cppVar_49391 & cppMask_un_16_);
	BIT_VEC cppVar_49392 = ROM.rd(cppVar_49391);
	BIT_VEC cppVar_49393 = (cppVar_49392 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49394 = (cppVar_49393 & cppMask_un_5_);
	BIT_VEC cppVar_49395 = cppVar_49394 + 32;
	cppVar_49395 = (cppVar_49395 & cppMask_un_8_);
	BIT_VEC cppVar_49396 = (cppVar_49386) ? cppVar_49390 : cppVar_49395;
	bool cppVar_49398 = (cppVar_49396 == 140);
	BIT_VEC cppVar_49399 = PC + 1;
	cppVar_49399 = (cppVar_49399 & cppMask_un_16_);
	BIT_VEC cppVar_49400 = ROM.rd(cppVar_49399);
	BIT_VEC cppVar_49401 = (cppVar_49400 >> 7) & cppMask_un_1_;
	bool cppVar_49402 = (cppVar_49401 == 1);
	BIT_VEC cppVar_49403 = PC + 1;
	cppVar_49403 = (cppVar_49403 & cppMask_un_16_);
	BIT_VEC cppVar_49404 = ROM.rd(cppVar_49403);
	BIT_VEC cppVar_49405 = (cppVar_49404 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49406 = (cppVar_49405 << 3) | 0;
	cppVar_49406 = (cppVar_49406 & cppMask_un_8_);
	BIT_VEC cppVar_49407 = PC + 1;
	cppVar_49407 = (cppVar_49407 & cppMask_un_16_);
	BIT_VEC cppVar_49408 = ROM.rd(cppVar_49407);
	BIT_VEC cppVar_49409 = (cppVar_49408 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49410 = (cppVar_49409 & cppMask_un_5_);
	BIT_VEC cppVar_49411 = cppVar_49410 + 32;
	cppVar_49411 = (cppVar_49411 & cppMask_un_8_);
	BIT_VEC cppVar_49412 = (cppVar_49402) ? cppVar_49406 : cppVar_49411;
	bool cppVar_49414 = (cppVar_49412 == 139);
	BIT_VEC cppVar_49415 = PC + 1;
	cppVar_49415 = (cppVar_49415 & cppMask_un_16_);
	BIT_VEC cppVar_49416 = ROM.rd(cppVar_49415);
	BIT_VEC cppVar_49417 = (cppVar_49416 >> 7) & cppMask_un_1_;
	bool cppVar_49418 = (cppVar_49417 == 1);
	BIT_VEC cppVar_49419 = PC + 1;
	cppVar_49419 = (cppVar_49419 & cppMask_un_16_);
	BIT_VEC cppVar_49420 = ROM.rd(cppVar_49419);
	BIT_VEC cppVar_49421 = (cppVar_49420 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49422 = (cppVar_49421 << 3) | 0;
	cppVar_49422 = (cppVar_49422 & cppMask_un_8_);
	BIT_VEC cppVar_49423 = PC + 1;
	cppVar_49423 = (cppVar_49423 & cppMask_un_16_);
	BIT_VEC cppVar_49424 = ROM.rd(cppVar_49423);
	BIT_VEC cppVar_49425 = (cppVar_49424 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49426 = (cppVar_49425 & cppMask_un_5_);
	BIT_VEC cppVar_49427 = cppVar_49426 + 32;
	cppVar_49427 = (cppVar_49427 & cppMask_un_8_);
	BIT_VEC cppVar_49428 = (cppVar_49418) ? cppVar_49422 : cppVar_49427;
	bool cppVar_49430 = (cppVar_49428 == 141);
	BIT_VEC cppVar_49431 = PC + 1;
	cppVar_49431 = (cppVar_49431 & cppMask_un_16_);
	BIT_VEC cppVar_49432 = ROM.rd(cppVar_49431);
	BIT_VEC cppVar_49433 = (cppVar_49432 >> 7) & cppMask_un_1_;
	bool cppVar_49434 = (cppVar_49433 == 1);
	BIT_VEC cppVar_49435 = PC + 1;
	cppVar_49435 = (cppVar_49435 & cppMask_un_16_);
	BIT_VEC cppVar_49436 = ROM.rd(cppVar_49435);
	BIT_VEC cppVar_49437 = (cppVar_49436 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49438 = (cppVar_49437 << 3) | 0;
	cppVar_49438 = (cppVar_49438 & cppMask_un_8_);
	BIT_VEC cppVar_49439 = PC + 1;
	cppVar_49439 = (cppVar_49439 & cppMask_un_16_);
	BIT_VEC cppVar_49440 = ROM.rd(cppVar_49439);
	BIT_VEC cppVar_49441 = (cppVar_49440 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49442 = (cppVar_49441 & cppMask_un_5_);
	BIT_VEC cppVar_49443 = cppVar_49442 + 32;
	cppVar_49443 = (cppVar_49443 & cppMask_un_8_);
	BIT_VEC cppVar_49444 = (cppVar_49434) ? cppVar_49438 : cppVar_49443;
	bool cppVar_49446 = (cppVar_49444 == 144);
	BIT_VEC cppVar_49447 = PC + 1;
	cppVar_49447 = (cppVar_49447 & cppMask_un_16_);
	BIT_VEC cppVar_49448 = ROM.rd(cppVar_49447);
	BIT_VEC cppVar_49449 = (cppVar_49448 >> 7) & cppMask_un_1_;
	bool cppVar_49450 = (cppVar_49449 == 1);
	BIT_VEC cppVar_49451 = PC + 1;
	cppVar_49451 = (cppVar_49451 & cppMask_un_16_);
	BIT_VEC cppVar_49452 = ROM.rd(cppVar_49451);
	BIT_VEC cppVar_49453 = (cppVar_49452 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49454 = (cppVar_49453 << 3) | 0;
	cppVar_49454 = (cppVar_49454 & cppMask_un_8_);
	BIT_VEC cppVar_49455 = PC + 1;
	cppVar_49455 = (cppVar_49455 & cppMask_un_16_);
	BIT_VEC cppVar_49456 = ROM.rd(cppVar_49455);
	BIT_VEC cppVar_49457 = (cppVar_49456 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49458 = (cppVar_49457 & cppMask_un_5_);
	BIT_VEC cppVar_49459 = cppVar_49458 + 32;
	cppVar_49459 = (cppVar_49459 & cppMask_un_8_);
	BIT_VEC cppVar_49460 = (cppVar_49450) ? cppVar_49454 : cppVar_49459;
	bool cppVar_49462 = (cppVar_49460 == 152);
	BIT_VEC cppVar_49463 = PC + 1;
	cppVar_49463 = (cppVar_49463 & cppMask_un_16_);
	BIT_VEC cppVar_49464 = ROM.rd(cppVar_49463);
	BIT_VEC cppVar_49465 = (cppVar_49464 >> 7) & cppMask_un_1_;
	bool cppVar_49466 = (cppVar_49465 == 1);
	BIT_VEC cppVar_49467 = PC + 1;
	cppVar_49467 = (cppVar_49467 & cppMask_un_16_);
	BIT_VEC cppVar_49468 = ROM.rd(cppVar_49467);
	BIT_VEC cppVar_49469 = (cppVar_49468 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49470 = (cppVar_49469 << 3) | 0;
	cppVar_49470 = (cppVar_49470 & cppMask_un_8_);
	BIT_VEC cppVar_49471 = PC + 1;
	cppVar_49471 = (cppVar_49471 & cppMask_un_16_);
	BIT_VEC cppVar_49472 = ROM.rd(cppVar_49471);
	BIT_VEC cppVar_49473 = (cppVar_49472 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49474 = (cppVar_49473 & cppMask_un_5_);
	BIT_VEC cppVar_49475 = cppVar_49474 + 32;
	cppVar_49475 = (cppVar_49475 & cppMask_un_8_);
	BIT_VEC cppVar_49476 = (cppVar_49466) ? cppVar_49470 : cppVar_49475;
	bool cppVar_49478 = (cppVar_49476 == 153);
	BIT_VEC cppVar_49479 = PC + 1;
	cppVar_49479 = (cppVar_49479 & cppMask_un_16_);
	BIT_VEC cppVar_49480 = ROM.rd(cppVar_49479);
	BIT_VEC cppVar_49481 = (cppVar_49480 >> 7) & cppMask_un_1_;
	bool cppVar_49482 = (cppVar_49481 == 1);
	BIT_VEC cppVar_49483 = PC + 1;
	cppVar_49483 = (cppVar_49483 & cppMask_un_16_);
	BIT_VEC cppVar_49484 = ROM.rd(cppVar_49483);
	BIT_VEC cppVar_49485 = (cppVar_49484 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49486 = (cppVar_49485 << 3) | 0;
	cppVar_49486 = (cppVar_49486 & cppMask_un_8_);
	BIT_VEC cppVar_49487 = PC + 1;
	cppVar_49487 = (cppVar_49487 & cppMask_un_16_);
	BIT_VEC cppVar_49488 = ROM.rd(cppVar_49487);
	BIT_VEC cppVar_49489 = (cppVar_49488 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49490 = (cppVar_49489 & cppMask_un_5_);
	BIT_VEC cppVar_49491 = cppVar_49490 + 32;
	cppVar_49491 = (cppVar_49491 & cppMask_un_8_);
	BIT_VEC cppVar_49492 = (cppVar_49482) ? cppVar_49486 : cppVar_49491;
	bool cppVar_49494 = (cppVar_49492 == 160);
	BIT_VEC cppVar_49495 = PC + 1;
	cppVar_49495 = (cppVar_49495 & cppMask_un_16_);
	BIT_VEC cppVar_49496 = ROM.rd(cppVar_49495);
	BIT_VEC cppVar_49497 = (cppVar_49496 >> 7) & cppMask_un_1_;
	bool cppVar_49498 = (cppVar_49497 == 1);
	BIT_VEC cppVar_49499 = PC + 1;
	cppVar_49499 = (cppVar_49499 & cppMask_un_16_);
	BIT_VEC cppVar_49500 = ROM.rd(cppVar_49499);
	BIT_VEC cppVar_49501 = (cppVar_49500 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49502 = (cppVar_49501 << 3) | 0;
	cppVar_49502 = (cppVar_49502 & cppMask_un_8_);
	BIT_VEC cppVar_49503 = PC + 1;
	cppVar_49503 = (cppVar_49503 & cppMask_un_16_);
	BIT_VEC cppVar_49504 = ROM.rd(cppVar_49503);
	BIT_VEC cppVar_49505 = (cppVar_49504 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49506 = (cppVar_49505 & cppMask_un_5_);
	BIT_VEC cppVar_49507 = cppVar_49506 + 32;
	cppVar_49507 = (cppVar_49507 & cppMask_un_8_);
	BIT_VEC cppVar_49508 = (cppVar_49498) ? cppVar_49502 : cppVar_49507;
	bool cppVar_49510 = (cppVar_49508 == 168);
	BIT_VEC cppVar_49511 = PC + 1;
	cppVar_49511 = (cppVar_49511 & cppMask_un_16_);
	BIT_VEC cppVar_49512 = ROM.rd(cppVar_49511);
	BIT_VEC cppVar_49513 = (cppVar_49512 >> 7) & cppMask_un_1_;
	bool cppVar_49514 = (cppVar_49513 == 1);
	BIT_VEC cppVar_49515 = PC + 1;
	cppVar_49515 = (cppVar_49515 & cppMask_un_16_);
	BIT_VEC cppVar_49516 = ROM.rd(cppVar_49515);
	BIT_VEC cppVar_49517 = (cppVar_49516 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49518 = (cppVar_49517 << 3) | 0;
	cppVar_49518 = (cppVar_49518 & cppMask_un_8_);
	BIT_VEC cppVar_49519 = PC + 1;
	cppVar_49519 = (cppVar_49519 & cppMask_un_16_);
	BIT_VEC cppVar_49520 = ROM.rd(cppVar_49519);
	BIT_VEC cppVar_49521 = (cppVar_49520 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49522 = (cppVar_49521 & cppMask_un_5_);
	BIT_VEC cppVar_49523 = cppVar_49522 + 32;
	cppVar_49523 = (cppVar_49523 & cppMask_un_8_);
	BIT_VEC cppVar_49524 = (cppVar_49514) ? cppVar_49518 : cppVar_49523;
	bool cppVar_49526 = (cppVar_49524 == 176);
	BIT_VEC cppVar_49527 = PC + 1;
	cppVar_49527 = (cppVar_49527 & cppMask_un_16_);
	BIT_VEC cppVar_49528 = ROM.rd(cppVar_49527);
	BIT_VEC cppVar_49529 = (cppVar_49528 >> 7) & cppMask_un_1_;
	bool cppVar_49530 = (cppVar_49529 == 1);
	BIT_VEC cppVar_49531 = PC + 1;
	cppVar_49531 = (cppVar_49531 & cppMask_un_16_);
	BIT_VEC cppVar_49532 = ROM.rd(cppVar_49531);
	BIT_VEC cppVar_49533 = (cppVar_49532 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49534 = (cppVar_49533 << 3) | 0;
	cppVar_49534 = (cppVar_49534 & cppMask_un_8_);
	BIT_VEC cppVar_49535 = PC + 1;
	cppVar_49535 = (cppVar_49535 & cppMask_un_16_);
	BIT_VEC cppVar_49536 = ROM.rd(cppVar_49535);
	BIT_VEC cppVar_49537 = (cppVar_49536 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49538 = (cppVar_49537 & cppMask_un_5_);
	BIT_VEC cppVar_49539 = cppVar_49538 + 32;
	cppVar_49539 = (cppVar_49539 & cppMask_un_8_);
	BIT_VEC cppVar_49540 = (cppVar_49530) ? cppVar_49534 : cppVar_49539;
	bool cppVar_49542 = (cppVar_49540 == 184);
	BIT_VEC cppVar_49543 = PC + 1;
	cppVar_49543 = (cppVar_49543 & cppMask_un_16_);
	BIT_VEC cppVar_49544 = ROM.rd(cppVar_49543);
	BIT_VEC cppVar_49545 = (cppVar_49544 >> 7) & cppMask_un_1_;
	bool cppVar_49546 = (cppVar_49545 == 1);
	BIT_VEC cppVar_49547 = PC + 1;
	cppVar_49547 = (cppVar_49547 & cppMask_un_16_);
	BIT_VEC cppVar_49548 = ROM.rd(cppVar_49547);
	BIT_VEC cppVar_49549 = (cppVar_49548 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49550 = (cppVar_49549 << 3) | 0;
	cppVar_49550 = (cppVar_49550 & cppMask_un_8_);
	BIT_VEC cppVar_49551 = PC + 1;
	cppVar_49551 = (cppVar_49551 & cppMask_un_16_);
	BIT_VEC cppVar_49552 = ROM.rd(cppVar_49551);
	BIT_VEC cppVar_49553 = (cppVar_49552 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49554 = (cppVar_49553 & cppMask_un_5_);
	BIT_VEC cppVar_49555 = cppVar_49554 + 32;
	cppVar_49555 = (cppVar_49555 & cppMask_un_8_);
	BIT_VEC cppVar_49556 = (cppVar_49546) ? cppVar_49550 : cppVar_49555;
	bool cppVar_49558 = (cppVar_49556 == 208);
	BIT_VEC cppVar_49559 = PC + 1;
	cppVar_49559 = (cppVar_49559 & cppMask_un_16_);
	BIT_VEC cppVar_49560 = ROM.rd(cppVar_49559);
	BIT_VEC cppVar_49561 = (cppVar_49560 >> 7) & cppMask_un_1_;
	bool cppVar_49562 = (cppVar_49561 == 1);
	BIT_VEC cppVar_49563 = PC + 1;
	cppVar_49563 = (cppVar_49563 & cppMask_un_16_);
	BIT_VEC cppVar_49564 = ROM.rd(cppVar_49563);
	BIT_VEC cppVar_49565 = (cppVar_49564 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49566 = (cppVar_49565 << 3) | 0;
	cppVar_49566 = (cppVar_49566 & cppMask_un_8_);
	BIT_VEC cppVar_49567 = PC + 1;
	cppVar_49567 = (cppVar_49567 & cppMask_un_16_);
	BIT_VEC cppVar_49568 = ROM.rd(cppVar_49567);
	BIT_VEC cppVar_49569 = (cppVar_49568 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49570 = (cppVar_49569 & cppMask_un_5_);
	BIT_VEC cppVar_49571 = cppVar_49570 + 32;
	cppVar_49571 = (cppVar_49571 & cppMask_un_8_);
	BIT_VEC cppVar_49572 = (cppVar_49562) ? cppVar_49566 : cppVar_49571;
	bool cppVar_49574 = (cppVar_49572 == 224);
	BIT_VEC cppVar_49575 = PC + 1;
	cppVar_49575 = (cppVar_49575 & cppMask_un_16_);
	BIT_VEC cppVar_49576 = ROM.rd(cppVar_49575);
	BIT_VEC cppVar_49577 = (cppVar_49576 >> 7) & cppMask_un_1_;
	bool cppVar_49578 = (cppVar_49577 == 1);
	BIT_VEC cppVar_49579 = PC + 1;
	cppVar_49579 = (cppVar_49579 & cppMask_un_16_);
	BIT_VEC cppVar_49580 = ROM.rd(cppVar_49579);
	BIT_VEC cppVar_49581 = (cppVar_49580 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49582 = (cppVar_49581 << 3) | 0;
	cppVar_49582 = (cppVar_49582 & cppMask_un_8_);
	BIT_VEC cppVar_49583 = PC + 1;
	cppVar_49583 = (cppVar_49583 & cppMask_un_16_);
	BIT_VEC cppVar_49584 = ROM.rd(cppVar_49583);
	BIT_VEC cppVar_49585 = (cppVar_49584 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_49586 = (cppVar_49585 & cppMask_un_5_);
	BIT_VEC cppVar_49587 = cppVar_49586 + 32;
	cppVar_49587 = (cppVar_49587 & cppMask_un_8_);
	BIT_VEC cppVar_49588 = (cppVar_49578) ? cppVar_49582 : cppVar_49587;
	bool cppVar_49590 = (cppVar_49588 == 240);
	BIT_VEC cppVar_49592 = (cppVar_49590) ? B : 0;
	BIT_VEC cppVar_49593 = (cppVar_49574) ? ACC : cppVar_49592;
	BIT_VEC cppVar_49594 = (cppVar_49558) ? PSW : cppVar_49593;
	BIT_VEC cppVar_49595 = (cppVar_49542) ? IP : cppVar_49594;
	BIT_VEC cppVar_49596 = (cppVar_49526) ? P3 : cppVar_49595;
	BIT_VEC cppVar_49597 = (cppVar_49510) ? IE : cppVar_49596;
	BIT_VEC cppVar_49598 = (cppVar_49494) ? P2 : cppVar_49597;
	BIT_VEC cppVar_49599 = (cppVar_49478) ? SBUF : cppVar_49598;
	BIT_VEC cppVar_49600 = (cppVar_49462) ? SCON : cppVar_49599;
	BIT_VEC cppVar_49601 = (cppVar_49446) ? P1 : cppVar_49600;
	BIT_VEC cppVar_49602 = (cppVar_49430) ? TH1 : cppVar_49601;
	BIT_VEC cppVar_49603 = (cppVar_49414) ? TL1 : cppVar_49602;
	BIT_VEC cppVar_49604 = (cppVar_49398) ? TH0 : cppVar_49603;
	BIT_VEC cppVar_49605 = (cppVar_49382) ? TL0 : cppVar_49604;
	BIT_VEC cppVar_49606 = (cppVar_49366) ? TMOD : cppVar_49605;
	BIT_VEC cppVar_49607 = (cppVar_49350) ? TCON : cppVar_49606;
	BIT_VEC cppVar_49608 = (cppVar_49334) ? PCON : cppVar_49607;
	BIT_VEC cppVar_49609 = (cppVar_49318) ? DPH : cppVar_49608;
	BIT_VEC cppVar_49610 = (cppVar_49302) ? DPL : cppVar_49609;
	BIT_VEC cppVar_49611 = (cppVar_49286) ? SP : cppVar_49610;
	BIT_VEC cppVar_49612 = (cppVar_49270) ? P0 : cppVar_49611;
	BIT_VEC cppVar_49613 = (cppVar_49239) ? cppVar_49254 : cppVar_49612;
	BIT_VEC cppVar_49614 = PC + 1;
	cppVar_49614 = (cppVar_49614 & cppMask_un_16_);
	BIT_VEC cppVar_49615 = ROM.rd(cppVar_49614);
	BIT_VEC cppVar_49616 = (cppVar_49615 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_49617 = (cppVar_49613 >> static_cast<unsigned>(cppVar_49616)) & 0x1;
	BIT_VEC cppVar_49618 = ~cppVar_49617;
	BIT_VEC cppVar_49619 = cppVar_49218 | cppVar_49618;
	BIT_VEC cppVar_49620 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_49621 = (cppVar_49619 << 7) | cppVar_49620;
	cppVar_49621 = (cppVar_49621 & cppMask_un_8_);
	BIT_VEC cppVar_49622 = ROM.rd(PC);
	bool cppVar_49624 = (cppVar_49622 == 159);
	BIT_VEC cppVar_49626 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49628 = (cppVar_49626 << 3) | 7;
	cppVar_49628 = (cppVar_49628 & cppMask_un_5_);
	BIT_VEC cppVar_49629 = (0 << 5) | cppVar_49628;
	cppVar_49629 = (cppVar_49629 & cppMask_un_8_);
	BIT_VEC cppVar_49630 = IRAM.rd(cppVar_49629);
	BIT_VEC cppVar_49631 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49632 = (cppVar_49631 & cppMask_un_1_);
	BIT_VEC cppVar_49633 = cppVar_49630 + cppVar_49632;
	cppVar_49633 = (cppVar_49633 & cppMask_un_8_);
	bool cppVar_49634 = ACC < cppVar_49633;
	BIT_VEC cppVar_49637 = (cppVar_49634) ? 1 : 0;
	BIT_VEC cppVar_49638 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_49639 = (cppVar_49638 & cppMask_un_4_);
	BIT_VEC cppVar_49640 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49641 = (cppVar_49640 << 3) | 7;
	cppVar_49641 = (cppVar_49641 & cppMask_un_5_);
	BIT_VEC cppVar_49642 = (0 << 5) | cppVar_49641;
	cppVar_49642 = (cppVar_49642 & cppMask_un_8_);
	BIT_VEC cppVar_49643 = IRAM.rd(cppVar_49642);
	BIT_VEC cppVar_49644 = (cppVar_49643 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_49645 = (cppVar_49644 & cppMask_un_4_);
	BIT_VEC cppVar_49646 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49647 = (cppVar_49646 & cppMask_un_1_);
	BIT_VEC cppVar_49648 = cppVar_49645 + cppVar_49647;
	cppVar_49648 = (cppVar_49648 & cppMask_un_5_);
	bool cppVar_49649 = cppVar_49639 < cppVar_49648;
	BIT_VEC cppVar_49652 = (cppVar_49649) ? 1 : 0;
	BIT_VEC cppVar_49653 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_49654 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_49655 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49656 = (cppVar_49655 << 3) | 7;
	cppVar_49656 = (cppVar_49656 & cppMask_un_5_);
	BIT_VEC cppVar_49657 = (0 << 5) | cppVar_49656;
	cppVar_49657 = (cppVar_49657 & cppMask_un_8_);
	BIT_VEC cppVar_49658 = IRAM.rd(cppVar_49657);
	BIT_VEC cppVar_49659 = ((cppVar_49658 & cppMask_bit_8_) ? (cppVar_49658 | cppMask_sign_8_) : cppVar_49658);
	BIT_VEC cppVar_49660 = cppVar_49654 - cppVar_49659;
	cppVar_49660 = (cppVar_49660 & cppMask_un_9_);
	BIT_VEC cppVar_49661 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49662 = ((cppVar_49661 & cppMask_bit_1_) ? (cppVar_49661 | cppMask_sign_1_) : cppVar_49661);
	BIT_VEC cppVar_49663 = cppVar_49660 + cppVar_49662;
	cppVar_49663 = (cppVar_49663 & cppMask_un_9_);
	BIT_VEC cppVar_49664 = (cppVar_49663 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_49665 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_49666 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49667 = (cppVar_49666 << 3) | 7;
	cppVar_49667 = (cppVar_49667 & cppMask_un_5_);
	BIT_VEC cppVar_49668 = (0 << 5) | cppVar_49667;
	cppVar_49668 = (cppVar_49668 & cppMask_un_8_);
	BIT_VEC cppVar_49669 = IRAM.rd(cppVar_49668);
	BIT_VEC cppVar_49670 = ((cppVar_49669 & cppMask_bit_8_) ? (cppVar_49669 | cppMask_sign_8_) : cppVar_49669);
	BIT_VEC cppVar_49671 = cppVar_49665 - cppVar_49670;
	cppVar_49671 = (cppVar_49671 & cppMask_un_9_);
	BIT_VEC cppVar_49672 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49673 = ((cppVar_49672 & cppMask_bit_1_) ? (cppVar_49672 | cppMask_sign_1_) : cppVar_49672);
	BIT_VEC cppVar_49674 = cppVar_49671 + cppVar_49673;
	cppVar_49674 = (cppVar_49674 & cppMask_un_9_);
	BIT_VEC cppVar_49675 = (cppVar_49674 >> 7) & cppMask_un_1_;
	bool cppVar_49676 = (cppVar_49664 != cppVar_49675);
	BIT_VEC cppVar_49679 = (cppVar_49676) ? 1 : 0;
	BIT_VEC cppVar_49680 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_49681 = (cppVar_49679 << 2) | cppVar_49680;
	cppVar_49681 = (cppVar_49681 & cppMask_un_3_);
	BIT_VEC cppVar_49682 = (cppVar_49653 << 3) | cppVar_49681;
	cppVar_49682 = (cppVar_49682 & cppMask_un_6_);
	BIT_VEC cppVar_49683 = (cppVar_49652 << 6) | cppVar_49682;
	cppVar_49683 = (cppVar_49683 & cppMask_un_7_);
	BIT_VEC cppVar_49684 = (cppVar_49637 << 7) | cppVar_49683;
	cppVar_49684 = (cppVar_49684 & cppMask_un_8_);
	BIT_VEC cppVar_49685 = ROM.rd(PC);
	bool cppVar_49687 = (cppVar_49685 == 158);
	BIT_VEC cppVar_49689 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49691 = (cppVar_49689 << 3) | 6;
	cppVar_49691 = (cppVar_49691 & cppMask_un_5_);
	BIT_VEC cppVar_49692 = (0 << 5) | cppVar_49691;
	cppVar_49692 = (cppVar_49692 & cppMask_un_8_);
	BIT_VEC cppVar_49693 = IRAM.rd(cppVar_49692);
	BIT_VEC cppVar_49694 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49695 = (cppVar_49694 & cppMask_un_1_);
	BIT_VEC cppVar_49696 = cppVar_49693 + cppVar_49695;
	cppVar_49696 = (cppVar_49696 & cppMask_un_8_);
	bool cppVar_49697 = ACC < cppVar_49696;
	BIT_VEC cppVar_49700 = (cppVar_49697) ? 1 : 0;
	BIT_VEC cppVar_49701 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_49702 = (cppVar_49701 & cppMask_un_4_);
	BIT_VEC cppVar_49703 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49704 = (cppVar_49703 << 3) | 6;
	cppVar_49704 = (cppVar_49704 & cppMask_un_5_);
	BIT_VEC cppVar_49705 = (0 << 5) | cppVar_49704;
	cppVar_49705 = (cppVar_49705 & cppMask_un_8_);
	BIT_VEC cppVar_49706 = IRAM.rd(cppVar_49705);
	BIT_VEC cppVar_49707 = (cppVar_49706 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_49708 = (cppVar_49707 & cppMask_un_4_);
	BIT_VEC cppVar_49709 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49710 = (cppVar_49709 & cppMask_un_1_);
	BIT_VEC cppVar_49711 = cppVar_49708 + cppVar_49710;
	cppVar_49711 = (cppVar_49711 & cppMask_un_5_);
	bool cppVar_49712 = cppVar_49702 < cppVar_49711;
	BIT_VEC cppVar_49715 = (cppVar_49712) ? 1 : 0;
	BIT_VEC cppVar_49716 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_49717 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_49718 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49719 = (cppVar_49718 << 3) | 6;
	cppVar_49719 = (cppVar_49719 & cppMask_un_5_);
	BIT_VEC cppVar_49720 = (0 << 5) | cppVar_49719;
	cppVar_49720 = (cppVar_49720 & cppMask_un_8_);
	BIT_VEC cppVar_49721 = IRAM.rd(cppVar_49720);
	BIT_VEC cppVar_49722 = ((cppVar_49721 & cppMask_bit_8_) ? (cppVar_49721 | cppMask_sign_8_) : cppVar_49721);
	BIT_VEC cppVar_49723 = cppVar_49717 - cppVar_49722;
	cppVar_49723 = (cppVar_49723 & cppMask_un_9_);
	BIT_VEC cppVar_49724 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49725 = ((cppVar_49724 & cppMask_bit_1_) ? (cppVar_49724 | cppMask_sign_1_) : cppVar_49724);
	BIT_VEC cppVar_49726 = cppVar_49723 + cppVar_49725;
	cppVar_49726 = (cppVar_49726 & cppMask_un_9_);
	BIT_VEC cppVar_49727 = (cppVar_49726 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_49728 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_49729 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49730 = (cppVar_49729 << 3) | 6;
	cppVar_49730 = (cppVar_49730 & cppMask_un_5_);
	BIT_VEC cppVar_49731 = (0 << 5) | cppVar_49730;
	cppVar_49731 = (cppVar_49731 & cppMask_un_8_);
	BIT_VEC cppVar_49732 = IRAM.rd(cppVar_49731);
	BIT_VEC cppVar_49733 = ((cppVar_49732 & cppMask_bit_8_) ? (cppVar_49732 | cppMask_sign_8_) : cppVar_49732);
	BIT_VEC cppVar_49734 = cppVar_49728 - cppVar_49733;
	cppVar_49734 = (cppVar_49734 & cppMask_un_9_);
	BIT_VEC cppVar_49735 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49736 = ((cppVar_49735 & cppMask_bit_1_) ? (cppVar_49735 | cppMask_sign_1_) : cppVar_49735);
	BIT_VEC cppVar_49737 = cppVar_49734 + cppVar_49736;
	cppVar_49737 = (cppVar_49737 & cppMask_un_9_);
	BIT_VEC cppVar_49738 = (cppVar_49737 >> 7) & cppMask_un_1_;
	bool cppVar_49739 = (cppVar_49727 != cppVar_49738);
	BIT_VEC cppVar_49742 = (cppVar_49739) ? 1 : 0;
	BIT_VEC cppVar_49743 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_49744 = (cppVar_49742 << 2) | cppVar_49743;
	cppVar_49744 = (cppVar_49744 & cppMask_un_3_);
	BIT_VEC cppVar_49745 = (cppVar_49716 << 3) | cppVar_49744;
	cppVar_49745 = (cppVar_49745 & cppMask_un_6_);
	BIT_VEC cppVar_49746 = (cppVar_49715 << 6) | cppVar_49745;
	cppVar_49746 = (cppVar_49746 & cppMask_un_7_);
	BIT_VEC cppVar_49747 = (cppVar_49700 << 7) | cppVar_49746;
	cppVar_49747 = (cppVar_49747 & cppMask_un_8_);
	BIT_VEC cppVar_49748 = ROM.rd(PC);
	bool cppVar_49750 = (cppVar_49748 == 157);
	BIT_VEC cppVar_49752 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49754 = (cppVar_49752 << 3) | 5;
	cppVar_49754 = (cppVar_49754 & cppMask_un_5_);
	BIT_VEC cppVar_49755 = (0 << 5) | cppVar_49754;
	cppVar_49755 = (cppVar_49755 & cppMask_un_8_);
	BIT_VEC cppVar_49756 = IRAM.rd(cppVar_49755);
	BIT_VEC cppVar_49757 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49758 = (cppVar_49757 & cppMask_un_1_);
	BIT_VEC cppVar_49759 = cppVar_49756 + cppVar_49758;
	cppVar_49759 = (cppVar_49759 & cppMask_un_8_);
	bool cppVar_49760 = ACC < cppVar_49759;
	BIT_VEC cppVar_49763 = (cppVar_49760) ? 1 : 0;
	BIT_VEC cppVar_49764 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_49765 = (cppVar_49764 & cppMask_un_4_);
	BIT_VEC cppVar_49766 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49767 = (cppVar_49766 << 3) | 5;
	cppVar_49767 = (cppVar_49767 & cppMask_un_5_);
	BIT_VEC cppVar_49768 = (0 << 5) | cppVar_49767;
	cppVar_49768 = (cppVar_49768 & cppMask_un_8_);
	BIT_VEC cppVar_49769 = IRAM.rd(cppVar_49768);
	BIT_VEC cppVar_49770 = (cppVar_49769 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_49771 = (cppVar_49770 & cppMask_un_4_);
	BIT_VEC cppVar_49772 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49773 = (cppVar_49772 & cppMask_un_1_);
	BIT_VEC cppVar_49774 = cppVar_49771 + cppVar_49773;
	cppVar_49774 = (cppVar_49774 & cppMask_un_5_);
	bool cppVar_49775 = cppVar_49765 < cppVar_49774;
	BIT_VEC cppVar_49778 = (cppVar_49775) ? 1 : 0;
	BIT_VEC cppVar_49779 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_49780 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_49781 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49782 = (cppVar_49781 << 3) | 5;
	cppVar_49782 = (cppVar_49782 & cppMask_un_5_);
	BIT_VEC cppVar_49783 = (0 << 5) | cppVar_49782;
	cppVar_49783 = (cppVar_49783 & cppMask_un_8_);
	BIT_VEC cppVar_49784 = IRAM.rd(cppVar_49783);
	BIT_VEC cppVar_49785 = ((cppVar_49784 & cppMask_bit_8_) ? (cppVar_49784 | cppMask_sign_8_) : cppVar_49784);
	BIT_VEC cppVar_49786 = cppVar_49780 - cppVar_49785;
	cppVar_49786 = (cppVar_49786 & cppMask_un_9_);
	BIT_VEC cppVar_49787 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49788 = ((cppVar_49787 & cppMask_bit_1_) ? (cppVar_49787 | cppMask_sign_1_) : cppVar_49787);
	BIT_VEC cppVar_49789 = cppVar_49786 + cppVar_49788;
	cppVar_49789 = (cppVar_49789 & cppMask_un_9_);
	BIT_VEC cppVar_49790 = (cppVar_49789 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_49791 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_49792 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49793 = (cppVar_49792 << 3) | 5;
	cppVar_49793 = (cppVar_49793 & cppMask_un_5_);
	BIT_VEC cppVar_49794 = (0 << 5) | cppVar_49793;
	cppVar_49794 = (cppVar_49794 & cppMask_un_8_);
	BIT_VEC cppVar_49795 = IRAM.rd(cppVar_49794);
	BIT_VEC cppVar_49796 = ((cppVar_49795 & cppMask_bit_8_) ? (cppVar_49795 | cppMask_sign_8_) : cppVar_49795);
	BIT_VEC cppVar_49797 = cppVar_49791 - cppVar_49796;
	cppVar_49797 = (cppVar_49797 & cppMask_un_9_);
	BIT_VEC cppVar_49798 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49799 = ((cppVar_49798 & cppMask_bit_1_) ? (cppVar_49798 | cppMask_sign_1_) : cppVar_49798);
	BIT_VEC cppVar_49800 = cppVar_49797 + cppVar_49799;
	cppVar_49800 = (cppVar_49800 & cppMask_un_9_);
	BIT_VEC cppVar_49801 = (cppVar_49800 >> 7) & cppMask_un_1_;
	bool cppVar_49802 = (cppVar_49790 != cppVar_49801);
	BIT_VEC cppVar_49805 = (cppVar_49802) ? 1 : 0;
	BIT_VEC cppVar_49806 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_49807 = (cppVar_49805 << 2) | cppVar_49806;
	cppVar_49807 = (cppVar_49807 & cppMask_un_3_);
	BIT_VEC cppVar_49808 = (cppVar_49779 << 3) | cppVar_49807;
	cppVar_49808 = (cppVar_49808 & cppMask_un_6_);
	BIT_VEC cppVar_49809 = (cppVar_49778 << 6) | cppVar_49808;
	cppVar_49809 = (cppVar_49809 & cppMask_un_7_);
	BIT_VEC cppVar_49810 = (cppVar_49763 << 7) | cppVar_49809;
	cppVar_49810 = (cppVar_49810 & cppMask_un_8_);
	BIT_VEC cppVar_49811 = ROM.rd(PC);
	bool cppVar_49813 = (cppVar_49811 == 156);
	BIT_VEC cppVar_49815 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49817 = (cppVar_49815 << 3) | 4;
	cppVar_49817 = (cppVar_49817 & cppMask_un_5_);
	BIT_VEC cppVar_49818 = (0 << 5) | cppVar_49817;
	cppVar_49818 = (cppVar_49818 & cppMask_un_8_);
	BIT_VEC cppVar_49819 = IRAM.rd(cppVar_49818);
	BIT_VEC cppVar_49820 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49821 = (cppVar_49820 & cppMask_un_1_);
	BIT_VEC cppVar_49822 = cppVar_49819 + cppVar_49821;
	cppVar_49822 = (cppVar_49822 & cppMask_un_8_);
	bool cppVar_49823 = ACC < cppVar_49822;
	BIT_VEC cppVar_49826 = (cppVar_49823) ? 1 : 0;
	BIT_VEC cppVar_49827 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_49828 = (cppVar_49827 & cppMask_un_4_);
	BIT_VEC cppVar_49829 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49830 = (cppVar_49829 << 3) | 4;
	cppVar_49830 = (cppVar_49830 & cppMask_un_5_);
	BIT_VEC cppVar_49831 = (0 << 5) | cppVar_49830;
	cppVar_49831 = (cppVar_49831 & cppMask_un_8_);
	BIT_VEC cppVar_49832 = IRAM.rd(cppVar_49831);
	BIT_VEC cppVar_49833 = (cppVar_49832 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_49834 = (cppVar_49833 & cppMask_un_4_);
	BIT_VEC cppVar_49835 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49836 = (cppVar_49835 & cppMask_un_1_);
	BIT_VEC cppVar_49837 = cppVar_49834 + cppVar_49836;
	cppVar_49837 = (cppVar_49837 & cppMask_un_5_);
	bool cppVar_49838 = cppVar_49828 < cppVar_49837;
	BIT_VEC cppVar_49841 = (cppVar_49838) ? 1 : 0;
	BIT_VEC cppVar_49842 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_49843 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_49844 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49845 = (cppVar_49844 << 3) | 4;
	cppVar_49845 = (cppVar_49845 & cppMask_un_5_);
	BIT_VEC cppVar_49846 = (0 << 5) | cppVar_49845;
	cppVar_49846 = (cppVar_49846 & cppMask_un_8_);
	BIT_VEC cppVar_49847 = IRAM.rd(cppVar_49846);
	BIT_VEC cppVar_49848 = ((cppVar_49847 & cppMask_bit_8_) ? (cppVar_49847 | cppMask_sign_8_) : cppVar_49847);
	BIT_VEC cppVar_49849 = cppVar_49843 - cppVar_49848;
	cppVar_49849 = (cppVar_49849 & cppMask_un_9_);
	BIT_VEC cppVar_49850 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49851 = ((cppVar_49850 & cppMask_bit_1_) ? (cppVar_49850 | cppMask_sign_1_) : cppVar_49850);
	BIT_VEC cppVar_49852 = cppVar_49849 + cppVar_49851;
	cppVar_49852 = (cppVar_49852 & cppMask_un_9_);
	BIT_VEC cppVar_49853 = (cppVar_49852 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_49854 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_49855 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49856 = (cppVar_49855 << 3) | 4;
	cppVar_49856 = (cppVar_49856 & cppMask_un_5_);
	BIT_VEC cppVar_49857 = (0 << 5) | cppVar_49856;
	cppVar_49857 = (cppVar_49857 & cppMask_un_8_);
	BIT_VEC cppVar_49858 = IRAM.rd(cppVar_49857);
	BIT_VEC cppVar_49859 = ((cppVar_49858 & cppMask_bit_8_) ? (cppVar_49858 | cppMask_sign_8_) : cppVar_49858);
	BIT_VEC cppVar_49860 = cppVar_49854 - cppVar_49859;
	cppVar_49860 = (cppVar_49860 & cppMask_un_9_);
	BIT_VEC cppVar_49861 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49862 = ((cppVar_49861 & cppMask_bit_1_) ? (cppVar_49861 | cppMask_sign_1_) : cppVar_49861);
	BIT_VEC cppVar_49863 = cppVar_49860 + cppVar_49862;
	cppVar_49863 = (cppVar_49863 & cppMask_un_9_);
	BIT_VEC cppVar_49864 = (cppVar_49863 >> 7) & cppMask_un_1_;
	bool cppVar_49865 = (cppVar_49853 != cppVar_49864);
	BIT_VEC cppVar_49868 = (cppVar_49865) ? 1 : 0;
	BIT_VEC cppVar_49869 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_49870 = (cppVar_49868 << 2) | cppVar_49869;
	cppVar_49870 = (cppVar_49870 & cppMask_un_3_);
	BIT_VEC cppVar_49871 = (cppVar_49842 << 3) | cppVar_49870;
	cppVar_49871 = (cppVar_49871 & cppMask_un_6_);
	BIT_VEC cppVar_49872 = (cppVar_49841 << 6) | cppVar_49871;
	cppVar_49872 = (cppVar_49872 & cppMask_un_7_);
	BIT_VEC cppVar_49873 = (cppVar_49826 << 7) | cppVar_49872;
	cppVar_49873 = (cppVar_49873 & cppMask_un_8_);
	BIT_VEC cppVar_49874 = ROM.rd(PC);
	bool cppVar_49876 = (cppVar_49874 == 155);
	BIT_VEC cppVar_49878 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49880 = (cppVar_49878 << 3) | 3;
	cppVar_49880 = (cppVar_49880 & cppMask_un_5_);
	BIT_VEC cppVar_49881 = (0 << 5) | cppVar_49880;
	cppVar_49881 = (cppVar_49881 & cppMask_un_8_);
	BIT_VEC cppVar_49882 = IRAM.rd(cppVar_49881);
	BIT_VEC cppVar_49883 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49884 = (cppVar_49883 & cppMask_un_1_);
	BIT_VEC cppVar_49885 = cppVar_49882 + cppVar_49884;
	cppVar_49885 = (cppVar_49885 & cppMask_un_8_);
	bool cppVar_49886 = ACC < cppVar_49885;
	BIT_VEC cppVar_49889 = (cppVar_49886) ? 1 : 0;
	BIT_VEC cppVar_49890 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_49891 = (cppVar_49890 & cppMask_un_4_);
	BIT_VEC cppVar_49892 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49893 = (cppVar_49892 << 3) | 3;
	cppVar_49893 = (cppVar_49893 & cppMask_un_5_);
	BIT_VEC cppVar_49894 = (0 << 5) | cppVar_49893;
	cppVar_49894 = (cppVar_49894 & cppMask_un_8_);
	BIT_VEC cppVar_49895 = IRAM.rd(cppVar_49894);
	BIT_VEC cppVar_49896 = (cppVar_49895 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_49897 = (cppVar_49896 & cppMask_un_4_);
	BIT_VEC cppVar_49898 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49899 = (cppVar_49898 & cppMask_un_1_);
	BIT_VEC cppVar_49900 = cppVar_49897 + cppVar_49899;
	cppVar_49900 = (cppVar_49900 & cppMask_un_5_);
	bool cppVar_49901 = cppVar_49891 < cppVar_49900;
	BIT_VEC cppVar_49904 = (cppVar_49901) ? 1 : 0;
	BIT_VEC cppVar_49905 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_49906 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_49907 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49908 = (cppVar_49907 << 3) | 3;
	cppVar_49908 = (cppVar_49908 & cppMask_un_5_);
	BIT_VEC cppVar_49909 = (0 << 5) | cppVar_49908;
	cppVar_49909 = (cppVar_49909 & cppMask_un_8_);
	BIT_VEC cppVar_49910 = IRAM.rd(cppVar_49909);
	BIT_VEC cppVar_49911 = ((cppVar_49910 & cppMask_bit_8_) ? (cppVar_49910 | cppMask_sign_8_) : cppVar_49910);
	BIT_VEC cppVar_49912 = cppVar_49906 - cppVar_49911;
	cppVar_49912 = (cppVar_49912 & cppMask_un_9_);
	BIT_VEC cppVar_49913 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49914 = ((cppVar_49913 & cppMask_bit_1_) ? (cppVar_49913 | cppMask_sign_1_) : cppVar_49913);
	BIT_VEC cppVar_49915 = cppVar_49912 + cppVar_49914;
	cppVar_49915 = (cppVar_49915 & cppMask_un_9_);
	BIT_VEC cppVar_49916 = (cppVar_49915 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_49917 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_49918 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49919 = (cppVar_49918 << 3) | 3;
	cppVar_49919 = (cppVar_49919 & cppMask_un_5_);
	BIT_VEC cppVar_49920 = (0 << 5) | cppVar_49919;
	cppVar_49920 = (cppVar_49920 & cppMask_un_8_);
	BIT_VEC cppVar_49921 = IRAM.rd(cppVar_49920);
	BIT_VEC cppVar_49922 = ((cppVar_49921 & cppMask_bit_8_) ? (cppVar_49921 | cppMask_sign_8_) : cppVar_49921);
	BIT_VEC cppVar_49923 = cppVar_49917 - cppVar_49922;
	cppVar_49923 = (cppVar_49923 & cppMask_un_9_);
	BIT_VEC cppVar_49924 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49925 = ((cppVar_49924 & cppMask_bit_1_) ? (cppVar_49924 | cppMask_sign_1_) : cppVar_49924);
	BIT_VEC cppVar_49926 = cppVar_49923 + cppVar_49925;
	cppVar_49926 = (cppVar_49926 & cppMask_un_9_);
	BIT_VEC cppVar_49927 = (cppVar_49926 >> 7) & cppMask_un_1_;
	bool cppVar_49928 = (cppVar_49916 != cppVar_49927);
	BIT_VEC cppVar_49931 = (cppVar_49928) ? 1 : 0;
	BIT_VEC cppVar_49932 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_49933 = (cppVar_49931 << 2) | cppVar_49932;
	cppVar_49933 = (cppVar_49933 & cppMask_un_3_);
	BIT_VEC cppVar_49934 = (cppVar_49905 << 3) | cppVar_49933;
	cppVar_49934 = (cppVar_49934 & cppMask_un_6_);
	BIT_VEC cppVar_49935 = (cppVar_49904 << 6) | cppVar_49934;
	cppVar_49935 = (cppVar_49935 & cppMask_un_7_);
	BIT_VEC cppVar_49936 = (cppVar_49889 << 7) | cppVar_49935;
	cppVar_49936 = (cppVar_49936 & cppMask_un_8_);
	BIT_VEC cppVar_49937 = ROM.rd(PC);
	bool cppVar_49939 = (cppVar_49937 == 154);
	BIT_VEC cppVar_49941 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49943 = (cppVar_49941 << 3) | 2;
	cppVar_49943 = (cppVar_49943 & cppMask_un_5_);
	BIT_VEC cppVar_49944 = (0 << 5) | cppVar_49943;
	cppVar_49944 = (cppVar_49944 & cppMask_un_8_);
	BIT_VEC cppVar_49945 = IRAM.rd(cppVar_49944);
	BIT_VEC cppVar_49946 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49947 = (cppVar_49946 & cppMask_un_1_);
	BIT_VEC cppVar_49948 = cppVar_49945 + cppVar_49947;
	cppVar_49948 = (cppVar_49948 & cppMask_un_8_);
	bool cppVar_49949 = ACC < cppVar_49948;
	BIT_VEC cppVar_49952 = (cppVar_49949) ? 1 : 0;
	BIT_VEC cppVar_49953 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_49954 = (cppVar_49953 & cppMask_un_4_);
	BIT_VEC cppVar_49955 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49956 = (cppVar_49955 << 3) | 2;
	cppVar_49956 = (cppVar_49956 & cppMask_un_5_);
	BIT_VEC cppVar_49957 = (0 << 5) | cppVar_49956;
	cppVar_49957 = (cppVar_49957 & cppMask_un_8_);
	BIT_VEC cppVar_49958 = IRAM.rd(cppVar_49957);
	BIT_VEC cppVar_49959 = (cppVar_49958 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_49960 = (cppVar_49959 & cppMask_un_4_);
	BIT_VEC cppVar_49961 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49962 = (cppVar_49961 & cppMask_un_1_);
	BIT_VEC cppVar_49963 = cppVar_49960 + cppVar_49962;
	cppVar_49963 = (cppVar_49963 & cppMask_un_5_);
	bool cppVar_49964 = cppVar_49954 < cppVar_49963;
	BIT_VEC cppVar_49967 = (cppVar_49964) ? 1 : 0;
	BIT_VEC cppVar_49968 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_49969 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_49970 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49971 = (cppVar_49970 << 3) | 2;
	cppVar_49971 = (cppVar_49971 & cppMask_un_5_);
	BIT_VEC cppVar_49972 = (0 << 5) | cppVar_49971;
	cppVar_49972 = (cppVar_49972 & cppMask_un_8_);
	BIT_VEC cppVar_49973 = IRAM.rd(cppVar_49972);
	BIT_VEC cppVar_49974 = ((cppVar_49973 & cppMask_bit_8_) ? (cppVar_49973 | cppMask_sign_8_) : cppVar_49973);
	BIT_VEC cppVar_49975 = cppVar_49969 - cppVar_49974;
	cppVar_49975 = (cppVar_49975 & cppMask_un_9_);
	BIT_VEC cppVar_49976 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49977 = ((cppVar_49976 & cppMask_bit_1_) ? (cppVar_49976 | cppMask_sign_1_) : cppVar_49976);
	BIT_VEC cppVar_49978 = cppVar_49975 + cppVar_49977;
	cppVar_49978 = (cppVar_49978 & cppMask_un_9_);
	BIT_VEC cppVar_49979 = (cppVar_49978 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_49980 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_49981 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_49982 = (cppVar_49981 << 3) | 2;
	cppVar_49982 = (cppVar_49982 & cppMask_un_5_);
	BIT_VEC cppVar_49983 = (0 << 5) | cppVar_49982;
	cppVar_49983 = (cppVar_49983 & cppMask_un_8_);
	BIT_VEC cppVar_49984 = IRAM.rd(cppVar_49983);
	BIT_VEC cppVar_49985 = ((cppVar_49984 & cppMask_bit_8_) ? (cppVar_49984 | cppMask_sign_8_) : cppVar_49984);
	BIT_VEC cppVar_49986 = cppVar_49980 - cppVar_49985;
	cppVar_49986 = (cppVar_49986 & cppMask_un_9_);
	BIT_VEC cppVar_49987 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_49988 = ((cppVar_49987 & cppMask_bit_1_) ? (cppVar_49987 | cppMask_sign_1_) : cppVar_49987);
	BIT_VEC cppVar_49989 = cppVar_49986 + cppVar_49988;
	cppVar_49989 = (cppVar_49989 & cppMask_un_9_);
	BIT_VEC cppVar_49990 = (cppVar_49989 >> 7) & cppMask_un_1_;
	bool cppVar_49991 = (cppVar_49979 != cppVar_49990);
	BIT_VEC cppVar_49994 = (cppVar_49991) ? 1 : 0;
	BIT_VEC cppVar_49995 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_49996 = (cppVar_49994 << 2) | cppVar_49995;
	cppVar_49996 = (cppVar_49996 & cppMask_un_3_);
	BIT_VEC cppVar_49997 = (cppVar_49968 << 3) | cppVar_49996;
	cppVar_49997 = (cppVar_49997 & cppMask_un_6_);
	BIT_VEC cppVar_49998 = (cppVar_49967 << 6) | cppVar_49997;
	cppVar_49998 = (cppVar_49998 & cppMask_un_7_);
	BIT_VEC cppVar_49999 = (cppVar_49952 << 7) | cppVar_49998;
	cppVar_49999 = (cppVar_49999 & cppMask_un_8_);
	BIT_VEC cppVar_50000 = ROM.rd(PC);
	bool cppVar_50002 = (cppVar_50000 == 153);
	BIT_VEC cppVar_50004 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_50006 = (cppVar_50004 << 3) | 1;
	cppVar_50006 = (cppVar_50006 & cppMask_un_5_);
	BIT_VEC cppVar_50007 = (0 << 5) | cppVar_50006;
	cppVar_50007 = (cppVar_50007 & cppMask_un_8_);
	BIT_VEC cppVar_50008 = IRAM.rd(cppVar_50007);
	BIT_VEC cppVar_50009 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50010 = (cppVar_50009 & cppMask_un_1_);
	BIT_VEC cppVar_50011 = cppVar_50008 + cppVar_50010;
	cppVar_50011 = (cppVar_50011 & cppMask_un_8_);
	bool cppVar_50012 = ACC < cppVar_50011;
	BIT_VEC cppVar_50015 = (cppVar_50012) ? 1 : 0;
	BIT_VEC cppVar_50016 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_50017 = (cppVar_50016 & cppMask_un_4_);
	BIT_VEC cppVar_50018 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_50019 = (cppVar_50018 << 3) | 1;
	cppVar_50019 = (cppVar_50019 & cppMask_un_5_);
	BIT_VEC cppVar_50020 = (0 << 5) | cppVar_50019;
	cppVar_50020 = (cppVar_50020 & cppMask_un_8_);
	BIT_VEC cppVar_50021 = IRAM.rd(cppVar_50020);
	BIT_VEC cppVar_50022 = (cppVar_50021 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_50023 = (cppVar_50022 & cppMask_un_4_);
	BIT_VEC cppVar_50024 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50025 = (cppVar_50024 & cppMask_un_1_);
	BIT_VEC cppVar_50026 = cppVar_50023 + cppVar_50025;
	cppVar_50026 = (cppVar_50026 & cppMask_un_5_);
	bool cppVar_50027 = cppVar_50017 < cppVar_50026;
	BIT_VEC cppVar_50030 = (cppVar_50027) ? 1 : 0;
	BIT_VEC cppVar_50031 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_50032 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_50033 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_50034 = (cppVar_50033 << 3) | 1;
	cppVar_50034 = (cppVar_50034 & cppMask_un_5_);
	BIT_VEC cppVar_50035 = (0 << 5) | cppVar_50034;
	cppVar_50035 = (cppVar_50035 & cppMask_un_8_);
	BIT_VEC cppVar_50036 = IRAM.rd(cppVar_50035);
	BIT_VEC cppVar_50037 = ((cppVar_50036 & cppMask_bit_8_) ? (cppVar_50036 | cppMask_sign_8_) : cppVar_50036);
	BIT_VEC cppVar_50038 = cppVar_50032 - cppVar_50037;
	cppVar_50038 = (cppVar_50038 & cppMask_un_9_);
	BIT_VEC cppVar_50039 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50040 = ((cppVar_50039 & cppMask_bit_1_) ? (cppVar_50039 | cppMask_sign_1_) : cppVar_50039);
	BIT_VEC cppVar_50041 = cppVar_50038 + cppVar_50040;
	cppVar_50041 = (cppVar_50041 & cppMask_un_9_);
	BIT_VEC cppVar_50042 = (cppVar_50041 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_50043 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_50044 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_50045 = (cppVar_50044 << 3) | 1;
	cppVar_50045 = (cppVar_50045 & cppMask_un_5_);
	BIT_VEC cppVar_50046 = (0 << 5) | cppVar_50045;
	cppVar_50046 = (cppVar_50046 & cppMask_un_8_);
	BIT_VEC cppVar_50047 = IRAM.rd(cppVar_50046);
	BIT_VEC cppVar_50048 = ((cppVar_50047 & cppMask_bit_8_) ? (cppVar_50047 | cppMask_sign_8_) : cppVar_50047);
	BIT_VEC cppVar_50049 = cppVar_50043 - cppVar_50048;
	cppVar_50049 = (cppVar_50049 & cppMask_un_9_);
	BIT_VEC cppVar_50050 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50051 = ((cppVar_50050 & cppMask_bit_1_) ? (cppVar_50050 | cppMask_sign_1_) : cppVar_50050);
	BIT_VEC cppVar_50052 = cppVar_50049 + cppVar_50051;
	cppVar_50052 = (cppVar_50052 & cppMask_un_9_);
	BIT_VEC cppVar_50053 = (cppVar_50052 >> 7) & cppMask_un_1_;
	bool cppVar_50054 = (cppVar_50042 != cppVar_50053);
	BIT_VEC cppVar_50057 = (cppVar_50054) ? 1 : 0;
	BIT_VEC cppVar_50058 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_50059 = (cppVar_50057 << 2) | cppVar_50058;
	cppVar_50059 = (cppVar_50059 & cppMask_un_3_);
	BIT_VEC cppVar_50060 = (cppVar_50031 << 3) | cppVar_50059;
	cppVar_50060 = (cppVar_50060 & cppMask_un_6_);
	BIT_VEC cppVar_50061 = (cppVar_50030 << 6) | cppVar_50060;
	cppVar_50061 = (cppVar_50061 & cppMask_un_7_);
	BIT_VEC cppVar_50062 = (cppVar_50015 << 7) | cppVar_50061;
	cppVar_50062 = (cppVar_50062 & cppMask_un_8_);
	BIT_VEC cppVar_50063 = ROM.rd(PC);
	bool cppVar_50065 = (cppVar_50063 == 152);
	BIT_VEC cppVar_50067 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_50069 = (cppVar_50067 << 3) | 0;
	cppVar_50069 = (cppVar_50069 & cppMask_un_5_);
	BIT_VEC cppVar_50070 = (0 << 5) | cppVar_50069;
	cppVar_50070 = (cppVar_50070 & cppMask_un_8_);
	BIT_VEC cppVar_50071 = IRAM.rd(cppVar_50070);
	BIT_VEC cppVar_50072 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50073 = (cppVar_50072 & cppMask_un_1_);
	BIT_VEC cppVar_50074 = cppVar_50071 + cppVar_50073;
	cppVar_50074 = (cppVar_50074 & cppMask_un_8_);
	bool cppVar_50075 = ACC < cppVar_50074;
	BIT_VEC cppVar_50078 = (cppVar_50075) ? 1 : 0;
	BIT_VEC cppVar_50079 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_50080 = (cppVar_50079 & cppMask_un_4_);
	BIT_VEC cppVar_50081 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_50082 = (cppVar_50081 << 3) | 0;
	cppVar_50082 = (cppVar_50082 & cppMask_un_5_);
	BIT_VEC cppVar_50083 = (0 << 5) | cppVar_50082;
	cppVar_50083 = (cppVar_50083 & cppMask_un_8_);
	BIT_VEC cppVar_50084 = IRAM.rd(cppVar_50083);
	BIT_VEC cppVar_50085 = (cppVar_50084 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_50086 = (cppVar_50085 & cppMask_un_4_);
	BIT_VEC cppVar_50087 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50088 = (cppVar_50087 & cppMask_un_1_);
	BIT_VEC cppVar_50089 = cppVar_50086 + cppVar_50088;
	cppVar_50089 = (cppVar_50089 & cppMask_un_5_);
	bool cppVar_50090 = cppVar_50080 < cppVar_50089;
	BIT_VEC cppVar_50093 = (cppVar_50090) ? 1 : 0;
	BIT_VEC cppVar_50094 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_50095 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_50096 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_50097 = (cppVar_50096 << 3) | 0;
	cppVar_50097 = (cppVar_50097 & cppMask_un_5_);
	BIT_VEC cppVar_50098 = (0 << 5) | cppVar_50097;
	cppVar_50098 = (cppVar_50098 & cppMask_un_8_);
	BIT_VEC cppVar_50099 = IRAM.rd(cppVar_50098);
	BIT_VEC cppVar_50100 = ((cppVar_50099 & cppMask_bit_8_) ? (cppVar_50099 | cppMask_sign_8_) : cppVar_50099);
	BIT_VEC cppVar_50101 = cppVar_50095 - cppVar_50100;
	cppVar_50101 = (cppVar_50101 & cppMask_un_9_);
	BIT_VEC cppVar_50102 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50103 = ((cppVar_50102 & cppMask_bit_1_) ? (cppVar_50102 | cppMask_sign_1_) : cppVar_50102);
	BIT_VEC cppVar_50104 = cppVar_50101 + cppVar_50103;
	cppVar_50104 = (cppVar_50104 & cppMask_un_9_);
	BIT_VEC cppVar_50105 = (cppVar_50104 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_50106 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_50107 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_50108 = (cppVar_50107 << 3) | 0;
	cppVar_50108 = (cppVar_50108 & cppMask_un_5_);
	BIT_VEC cppVar_50109 = (0 << 5) | cppVar_50108;
	cppVar_50109 = (cppVar_50109 & cppMask_un_8_);
	BIT_VEC cppVar_50110 = IRAM.rd(cppVar_50109);
	BIT_VEC cppVar_50111 = ((cppVar_50110 & cppMask_bit_8_) ? (cppVar_50110 | cppMask_sign_8_) : cppVar_50110);
	BIT_VEC cppVar_50112 = cppVar_50106 - cppVar_50111;
	cppVar_50112 = (cppVar_50112 & cppMask_un_9_);
	BIT_VEC cppVar_50113 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50114 = ((cppVar_50113 & cppMask_bit_1_) ? (cppVar_50113 | cppMask_sign_1_) : cppVar_50113);
	BIT_VEC cppVar_50115 = cppVar_50112 + cppVar_50114;
	cppVar_50115 = (cppVar_50115 & cppMask_un_9_);
	BIT_VEC cppVar_50116 = (cppVar_50115 >> 7) & cppMask_un_1_;
	bool cppVar_50117 = (cppVar_50105 != cppVar_50116);
	BIT_VEC cppVar_50120 = (cppVar_50117) ? 1 : 0;
	BIT_VEC cppVar_50121 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_50122 = (cppVar_50120 << 2) | cppVar_50121;
	cppVar_50122 = (cppVar_50122 & cppMask_un_3_);
	BIT_VEC cppVar_50123 = (cppVar_50094 << 3) | cppVar_50122;
	cppVar_50123 = (cppVar_50123 & cppMask_un_6_);
	BIT_VEC cppVar_50124 = (cppVar_50093 << 6) | cppVar_50123;
	cppVar_50124 = (cppVar_50124 & cppMask_un_7_);
	BIT_VEC cppVar_50125 = (cppVar_50078 << 7) | cppVar_50124;
	cppVar_50125 = (cppVar_50125 & cppMask_un_8_);
	BIT_VEC cppVar_50126 = ROM.rd(PC);
	bool cppVar_50128 = (cppVar_50126 == 151);
	BIT_VEC cppVar_50129 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_50131 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_50133 = (cppVar_50131 << 3) | 1;
	cppVar_50133 = (cppVar_50133 & cppMask_un_5_);
	BIT_VEC cppVar_50134 = (0 << 5) | cppVar_50133;
	cppVar_50134 = (cppVar_50134 & cppMask_un_8_);
	BIT_VEC cppVar_50135 = IRAM.rd(cppVar_50134);
	BIT_VEC cppVar_50136 = IRAM.rd(cppVar_50135);
	BIT_VEC cppVar_50137 = (cppVar_50136 & cppMask_un_8_);
	BIT_VEC cppVar_50138 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50139 = ((cppVar_50138 & cppMask_bit_1_) ? (cppVar_50138 | cppMask_sign_1_) : cppVar_50138);
	BIT_VEC cppVar_50140 = cppVar_50137 + cppVar_50139;
	cppVar_50140 = (cppVar_50140 & cppMask_un_9_);
	bool cppVar_50141 = cppVar_50129 < cppVar_50140;
	BIT_VEC cppVar_50144 = (cppVar_50141) ? 1 : 0;
	BIT_VEC cppVar_50145 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_50146 = (cppVar_50145 & cppMask_un_4_);
	BIT_VEC cppVar_50147 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_50148 = (cppVar_50147 << 3) | 1;
	cppVar_50148 = (cppVar_50148 & cppMask_un_5_);
	BIT_VEC cppVar_50149 = (0 << 5) | cppVar_50148;
	cppVar_50149 = (cppVar_50149 & cppMask_un_8_);
	BIT_VEC cppVar_50150 = IRAM.rd(cppVar_50149);
	BIT_VEC cppVar_50151 = IRAM.rd(cppVar_50150);
	BIT_VEC cppVar_50152 = (cppVar_50151 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_50153 = (cppVar_50152 & cppMask_un_4_);
	BIT_VEC cppVar_50154 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50155 = (cppVar_50154 & cppMask_un_1_);
	BIT_VEC cppVar_50156 = cppVar_50153 + cppVar_50155;
	cppVar_50156 = (cppVar_50156 & cppMask_un_5_);
	bool cppVar_50157 = cppVar_50146 < cppVar_50156;
	BIT_VEC cppVar_50160 = (cppVar_50157) ? 1 : 0;
	BIT_VEC cppVar_50161 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_50162 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_50163 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_50164 = (cppVar_50163 << 3) | 1;
	cppVar_50164 = (cppVar_50164 & cppMask_un_5_);
	BIT_VEC cppVar_50165 = (0 << 5) | cppVar_50164;
	cppVar_50165 = (cppVar_50165 & cppMask_un_8_);
	BIT_VEC cppVar_50166 = IRAM.rd(cppVar_50165);
	BIT_VEC cppVar_50167 = IRAM.rd(cppVar_50166);
	BIT_VEC cppVar_50168 = ((cppVar_50167 & cppMask_bit_8_) ? (cppVar_50167 | cppMask_sign_8_) : cppVar_50167);
	BIT_VEC cppVar_50169 = cppVar_50162 - cppVar_50168;
	cppVar_50169 = (cppVar_50169 & cppMask_un_9_);
	BIT_VEC cppVar_50170 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50171 = ((cppVar_50170 & cppMask_bit_1_) ? (cppVar_50170 | cppMask_sign_1_) : cppVar_50170);
	BIT_VEC cppVar_50172 = cppVar_50169 + cppVar_50171;
	cppVar_50172 = (cppVar_50172 & cppMask_un_9_);
	BIT_VEC cppVar_50173 = (cppVar_50172 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_50174 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_50175 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_50176 = (cppVar_50175 << 3) | 1;
	cppVar_50176 = (cppVar_50176 & cppMask_un_5_);
	BIT_VEC cppVar_50177 = (0 << 5) | cppVar_50176;
	cppVar_50177 = (cppVar_50177 & cppMask_un_8_);
	BIT_VEC cppVar_50178 = IRAM.rd(cppVar_50177);
	BIT_VEC cppVar_50179 = IRAM.rd(cppVar_50178);
	BIT_VEC cppVar_50180 = ((cppVar_50179 & cppMask_bit_8_) ? (cppVar_50179 | cppMask_sign_8_) : cppVar_50179);
	BIT_VEC cppVar_50181 = cppVar_50174 - cppVar_50180;
	cppVar_50181 = (cppVar_50181 & cppMask_un_9_);
	BIT_VEC cppVar_50182 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50183 = ((cppVar_50182 & cppMask_bit_1_) ? (cppVar_50182 | cppMask_sign_1_) : cppVar_50182);
	BIT_VEC cppVar_50184 = cppVar_50181 + cppVar_50183;
	cppVar_50184 = (cppVar_50184 & cppMask_un_9_);
	BIT_VEC cppVar_50185 = (cppVar_50184 >> 7) & cppMask_un_1_;
	bool cppVar_50186 = (cppVar_50173 != cppVar_50185);
	BIT_VEC cppVar_50189 = (cppVar_50186) ? 1 : 0;
	BIT_VEC cppVar_50190 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_50191 = (cppVar_50189 << 2) | cppVar_50190;
	cppVar_50191 = (cppVar_50191 & cppMask_un_3_);
	BIT_VEC cppVar_50192 = (cppVar_50161 << 3) | cppVar_50191;
	cppVar_50192 = (cppVar_50192 & cppMask_un_6_);
	BIT_VEC cppVar_50193 = (cppVar_50160 << 6) | cppVar_50192;
	cppVar_50193 = (cppVar_50193 & cppMask_un_7_);
	BIT_VEC cppVar_50194 = (cppVar_50144 << 7) | cppVar_50193;
	cppVar_50194 = (cppVar_50194 & cppMask_un_8_);
	BIT_VEC cppVar_50195 = ROM.rd(PC);
	bool cppVar_50197 = (cppVar_50195 == 150);
	BIT_VEC cppVar_50198 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_50200 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_50202 = (cppVar_50200 << 3) | 0;
	cppVar_50202 = (cppVar_50202 & cppMask_un_5_);
	BIT_VEC cppVar_50203 = (0 << 5) | cppVar_50202;
	cppVar_50203 = (cppVar_50203 & cppMask_un_8_);
	BIT_VEC cppVar_50204 = IRAM.rd(cppVar_50203);
	BIT_VEC cppVar_50205 = IRAM.rd(cppVar_50204);
	BIT_VEC cppVar_50206 = (cppVar_50205 & cppMask_un_8_);
	BIT_VEC cppVar_50207 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50208 = ((cppVar_50207 & cppMask_bit_1_) ? (cppVar_50207 | cppMask_sign_1_) : cppVar_50207);
	BIT_VEC cppVar_50209 = cppVar_50206 + cppVar_50208;
	cppVar_50209 = (cppVar_50209 & cppMask_un_9_);
	bool cppVar_50210 = cppVar_50198 < cppVar_50209;
	BIT_VEC cppVar_50213 = (cppVar_50210) ? 1 : 0;
	BIT_VEC cppVar_50214 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_50215 = (cppVar_50214 & cppMask_un_4_);
	BIT_VEC cppVar_50216 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_50217 = (cppVar_50216 << 3) | 0;
	cppVar_50217 = (cppVar_50217 & cppMask_un_5_);
	BIT_VEC cppVar_50218 = (0 << 5) | cppVar_50217;
	cppVar_50218 = (cppVar_50218 & cppMask_un_8_);
	BIT_VEC cppVar_50219 = IRAM.rd(cppVar_50218);
	BIT_VEC cppVar_50220 = IRAM.rd(cppVar_50219);
	BIT_VEC cppVar_50221 = (cppVar_50220 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_50222 = (cppVar_50221 & cppMask_un_4_);
	BIT_VEC cppVar_50223 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50224 = (cppVar_50223 & cppMask_un_1_);
	BIT_VEC cppVar_50225 = cppVar_50222 + cppVar_50224;
	cppVar_50225 = (cppVar_50225 & cppMask_un_5_);
	bool cppVar_50226 = cppVar_50215 < cppVar_50225;
	BIT_VEC cppVar_50229 = (cppVar_50226) ? 1 : 0;
	BIT_VEC cppVar_50230 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_50231 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_50232 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_50233 = (cppVar_50232 << 3) | 0;
	cppVar_50233 = (cppVar_50233 & cppMask_un_5_);
	BIT_VEC cppVar_50234 = (0 << 5) | cppVar_50233;
	cppVar_50234 = (cppVar_50234 & cppMask_un_8_);
	BIT_VEC cppVar_50235 = IRAM.rd(cppVar_50234);
	BIT_VEC cppVar_50236 = IRAM.rd(cppVar_50235);
	BIT_VEC cppVar_50237 = ((cppVar_50236 & cppMask_bit_8_) ? (cppVar_50236 | cppMask_sign_8_) : cppVar_50236);
	BIT_VEC cppVar_50238 = cppVar_50231 - cppVar_50237;
	cppVar_50238 = (cppVar_50238 & cppMask_un_9_);
	BIT_VEC cppVar_50239 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50240 = ((cppVar_50239 & cppMask_bit_1_) ? (cppVar_50239 | cppMask_sign_1_) : cppVar_50239);
	BIT_VEC cppVar_50241 = cppVar_50238 + cppVar_50240;
	cppVar_50241 = (cppVar_50241 & cppMask_un_9_);
	BIT_VEC cppVar_50242 = (cppVar_50241 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_50243 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_50244 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_50245 = (cppVar_50244 << 3) | 0;
	cppVar_50245 = (cppVar_50245 & cppMask_un_5_);
	BIT_VEC cppVar_50246 = (0 << 5) | cppVar_50245;
	cppVar_50246 = (cppVar_50246 & cppMask_un_8_);
	BIT_VEC cppVar_50247 = IRAM.rd(cppVar_50246);
	BIT_VEC cppVar_50248 = IRAM.rd(cppVar_50247);
	BIT_VEC cppVar_50249 = ((cppVar_50248 & cppMask_bit_8_) ? (cppVar_50248 | cppMask_sign_8_) : cppVar_50248);
	BIT_VEC cppVar_50250 = cppVar_50243 - cppVar_50249;
	cppVar_50250 = (cppVar_50250 & cppMask_un_9_);
	BIT_VEC cppVar_50251 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50252 = ((cppVar_50251 & cppMask_bit_1_) ? (cppVar_50251 | cppMask_sign_1_) : cppVar_50251);
	BIT_VEC cppVar_50253 = cppVar_50250 + cppVar_50252;
	cppVar_50253 = (cppVar_50253 & cppMask_un_9_);
	BIT_VEC cppVar_50254 = (cppVar_50253 >> 7) & cppMask_un_1_;
	bool cppVar_50255 = (cppVar_50242 != cppVar_50254);
	BIT_VEC cppVar_50258 = (cppVar_50255) ? 1 : 0;
	BIT_VEC cppVar_50259 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_50260 = (cppVar_50258 << 2) | cppVar_50259;
	cppVar_50260 = (cppVar_50260 & cppMask_un_3_);
	BIT_VEC cppVar_50261 = (cppVar_50230 << 3) | cppVar_50260;
	cppVar_50261 = (cppVar_50261 & cppMask_un_6_);
	BIT_VEC cppVar_50262 = (cppVar_50229 << 6) | cppVar_50261;
	cppVar_50262 = (cppVar_50262 & cppMask_un_7_);
	BIT_VEC cppVar_50263 = (cppVar_50213 << 7) | cppVar_50262;
	cppVar_50263 = (cppVar_50263 & cppMask_un_8_);
	BIT_VEC cppVar_50264 = ROM.rd(PC);
	bool cppVar_50266 = (cppVar_50264 == 149);
	BIT_VEC cppVar_50268 = PC + 1;
	cppVar_50268 = (cppVar_50268 & cppMask_un_16_);
	BIT_VEC cppVar_50269 = ROM.rd(cppVar_50268);
	BIT_VEC cppVar_50270 = (cppVar_50269 >> 7) & cppMask_un_1_;
	bool cppVar_50272 = (cppVar_50270 == 0);
	BIT_VEC cppVar_50273 = PC + 1;
	cppVar_50273 = (cppVar_50273 & cppMask_un_16_);
	BIT_VEC cppVar_50274 = ROM.rd(cppVar_50273);
	BIT_VEC cppVar_50275 = IRAM.rd(cppVar_50274);
	BIT_VEC cppVar_50276 = PC + 1;
	cppVar_50276 = (cppVar_50276 & cppMask_un_16_);
	BIT_VEC cppVar_50277 = ROM.rd(cppVar_50276);
	bool cppVar_50279 = (cppVar_50277 == 128);
	BIT_VEC cppVar_50280 = PC + 1;
	cppVar_50280 = (cppVar_50280 & cppMask_un_16_);
	BIT_VEC cppVar_50281 = ROM.rd(cppVar_50280);
	bool cppVar_50283 = (cppVar_50281 == 129);
	BIT_VEC cppVar_50284 = PC + 1;
	cppVar_50284 = (cppVar_50284 & cppMask_un_16_);
	BIT_VEC cppVar_50285 = ROM.rd(cppVar_50284);
	bool cppVar_50287 = (cppVar_50285 == 130);
	BIT_VEC cppVar_50288 = PC + 1;
	cppVar_50288 = (cppVar_50288 & cppMask_un_16_);
	BIT_VEC cppVar_50289 = ROM.rd(cppVar_50288);
	bool cppVar_50291 = (cppVar_50289 == 131);
	BIT_VEC cppVar_50292 = PC + 1;
	cppVar_50292 = (cppVar_50292 & cppMask_un_16_);
	BIT_VEC cppVar_50293 = ROM.rd(cppVar_50292);
	bool cppVar_50295 = (cppVar_50293 == 135);
	BIT_VEC cppVar_50296 = PC + 1;
	cppVar_50296 = (cppVar_50296 & cppMask_un_16_);
	BIT_VEC cppVar_50297 = ROM.rd(cppVar_50296);
	bool cppVar_50299 = (cppVar_50297 == 136);
	BIT_VEC cppVar_50300 = PC + 1;
	cppVar_50300 = (cppVar_50300 & cppMask_un_16_);
	BIT_VEC cppVar_50301 = ROM.rd(cppVar_50300);
	bool cppVar_50303 = (cppVar_50301 == 137);
	BIT_VEC cppVar_50304 = PC + 1;
	cppVar_50304 = (cppVar_50304 & cppMask_un_16_);
	BIT_VEC cppVar_50305 = ROM.rd(cppVar_50304);
	bool cppVar_50307 = (cppVar_50305 == 138);
	BIT_VEC cppVar_50308 = PC + 1;
	cppVar_50308 = (cppVar_50308 & cppMask_un_16_);
	BIT_VEC cppVar_50309 = ROM.rd(cppVar_50308);
	bool cppVar_50311 = (cppVar_50309 == 140);
	BIT_VEC cppVar_50312 = PC + 1;
	cppVar_50312 = (cppVar_50312 & cppMask_un_16_);
	BIT_VEC cppVar_50313 = ROM.rd(cppVar_50312);
	bool cppVar_50315 = (cppVar_50313 == 139);
	BIT_VEC cppVar_50316 = PC + 1;
	cppVar_50316 = (cppVar_50316 & cppMask_un_16_);
	BIT_VEC cppVar_50317 = ROM.rd(cppVar_50316);
	bool cppVar_50319 = (cppVar_50317 == 141);
	BIT_VEC cppVar_50320 = PC + 1;
	cppVar_50320 = (cppVar_50320 & cppMask_un_16_);
	BIT_VEC cppVar_50321 = ROM.rd(cppVar_50320);
	bool cppVar_50323 = (cppVar_50321 == 144);
	BIT_VEC cppVar_50324 = PC + 1;
	cppVar_50324 = (cppVar_50324 & cppMask_un_16_);
	BIT_VEC cppVar_50325 = ROM.rd(cppVar_50324);
	bool cppVar_50327 = (cppVar_50325 == 152);
	BIT_VEC cppVar_50328 = PC + 1;
	cppVar_50328 = (cppVar_50328 & cppMask_un_16_);
	BIT_VEC cppVar_50329 = ROM.rd(cppVar_50328);
	bool cppVar_50331 = (cppVar_50329 == 153);
	BIT_VEC cppVar_50332 = PC + 1;
	cppVar_50332 = (cppVar_50332 & cppMask_un_16_);
	BIT_VEC cppVar_50333 = ROM.rd(cppVar_50332);
	bool cppVar_50335 = (cppVar_50333 == 160);
	BIT_VEC cppVar_50336 = PC + 1;
	cppVar_50336 = (cppVar_50336 & cppMask_un_16_);
	BIT_VEC cppVar_50337 = ROM.rd(cppVar_50336);
	bool cppVar_50339 = (cppVar_50337 == 168);
	BIT_VEC cppVar_50340 = PC + 1;
	cppVar_50340 = (cppVar_50340 & cppMask_un_16_);
	BIT_VEC cppVar_50341 = ROM.rd(cppVar_50340);
	bool cppVar_50343 = (cppVar_50341 == 176);
	BIT_VEC cppVar_50344 = PC + 1;
	cppVar_50344 = (cppVar_50344 & cppMask_un_16_);
	BIT_VEC cppVar_50345 = ROM.rd(cppVar_50344);
	bool cppVar_50347 = (cppVar_50345 == 184);
	BIT_VEC cppVar_50348 = PC + 1;
	cppVar_50348 = (cppVar_50348 & cppMask_un_16_);
	BIT_VEC cppVar_50349 = ROM.rd(cppVar_50348);
	bool cppVar_50351 = (cppVar_50349 == 208);
	BIT_VEC cppVar_50352 = PC + 1;
	cppVar_50352 = (cppVar_50352 & cppMask_un_16_);
	BIT_VEC cppVar_50353 = ROM.rd(cppVar_50352);
	bool cppVar_50355 = (cppVar_50353 == 224);
	BIT_VEC cppVar_50356 = PC + 1;
	cppVar_50356 = (cppVar_50356 & cppMask_un_16_);
	BIT_VEC cppVar_50357 = ROM.rd(cppVar_50356);
	bool cppVar_50359 = (cppVar_50357 == 240);
	BIT_VEC cppVar_50361 = (cppVar_50359) ? B : 0;
	BIT_VEC cppVar_50362 = (cppVar_50355) ? ACC : cppVar_50361;
	BIT_VEC cppVar_50363 = (cppVar_50351) ? PSW : cppVar_50362;
	BIT_VEC cppVar_50364 = (cppVar_50347) ? IP : cppVar_50363;
	BIT_VEC cppVar_50365 = (cppVar_50343) ? P3 : cppVar_50364;
	BIT_VEC cppVar_50366 = (cppVar_50339) ? IE : cppVar_50365;
	BIT_VEC cppVar_50367 = (cppVar_50335) ? P2 : cppVar_50366;
	BIT_VEC cppVar_50368 = (cppVar_50331) ? SBUF : cppVar_50367;
	BIT_VEC cppVar_50369 = (cppVar_50327) ? SCON : cppVar_50368;
	BIT_VEC cppVar_50370 = (cppVar_50323) ? P1 : cppVar_50369;
	BIT_VEC cppVar_50371 = (cppVar_50319) ? TH1 : cppVar_50370;
	BIT_VEC cppVar_50372 = (cppVar_50315) ? TL1 : cppVar_50371;
	BIT_VEC cppVar_50373 = (cppVar_50311) ? TH0 : cppVar_50372;
	BIT_VEC cppVar_50374 = (cppVar_50307) ? TL0 : cppVar_50373;
	BIT_VEC cppVar_50375 = (cppVar_50303) ? TMOD : cppVar_50374;
	BIT_VEC cppVar_50376 = (cppVar_50299) ? TCON : cppVar_50375;
	BIT_VEC cppVar_50377 = (cppVar_50295) ? PCON : cppVar_50376;
	BIT_VEC cppVar_50378 = (cppVar_50291) ? DPH : cppVar_50377;
	BIT_VEC cppVar_50379 = (cppVar_50287) ? DPL : cppVar_50378;
	BIT_VEC cppVar_50380 = (cppVar_50283) ? SP : cppVar_50379;
	BIT_VEC cppVar_50381 = (cppVar_50279) ? P0 : cppVar_50380;
	BIT_VEC cppVar_50382 = (cppVar_50272) ? cppVar_50275 : cppVar_50381;
	BIT_VEC cppVar_50383 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50384 = (cppVar_50383 & cppMask_un_1_);
	BIT_VEC cppVar_50385 = cppVar_50382 + cppVar_50384;
	cppVar_50385 = (cppVar_50385 & cppMask_un_8_);
	bool cppVar_50386 = ACC < cppVar_50385;
	BIT_VEC cppVar_50389 = (cppVar_50386) ? 1 : 0;
	BIT_VEC cppVar_50390 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_50391 = (cppVar_50390 & cppMask_un_4_);
	BIT_VEC cppVar_50392 = PC + 1;
	cppVar_50392 = (cppVar_50392 & cppMask_un_16_);
	BIT_VEC cppVar_50393 = ROM.rd(cppVar_50392);
	BIT_VEC cppVar_50394 = (cppVar_50393 >> 7) & cppMask_un_1_;
	bool cppVar_50395 = (cppVar_50394 == 0);
	BIT_VEC cppVar_50396 = PC + 1;
	cppVar_50396 = (cppVar_50396 & cppMask_un_16_);
	BIT_VEC cppVar_50397 = ROM.rd(cppVar_50396);
	BIT_VEC cppVar_50398 = IRAM.rd(cppVar_50397);
	BIT_VEC cppVar_50399 = PC + 1;
	cppVar_50399 = (cppVar_50399 & cppMask_un_16_);
	BIT_VEC cppVar_50400 = ROM.rd(cppVar_50399);
	bool cppVar_50401 = (cppVar_50400 == 128);
	BIT_VEC cppVar_50402 = PC + 1;
	cppVar_50402 = (cppVar_50402 & cppMask_un_16_);
	BIT_VEC cppVar_50403 = ROM.rd(cppVar_50402);
	bool cppVar_50404 = (cppVar_50403 == 129);
	BIT_VEC cppVar_50405 = PC + 1;
	cppVar_50405 = (cppVar_50405 & cppMask_un_16_);
	BIT_VEC cppVar_50406 = ROM.rd(cppVar_50405);
	bool cppVar_50407 = (cppVar_50406 == 130);
	BIT_VEC cppVar_50408 = PC + 1;
	cppVar_50408 = (cppVar_50408 & cppMask_un_16_);
	BIT_VEC cppVar_50409 = ROM.rd(cppVar_50408);
	bool cppVar_50410 = (cppVar_50409 == 131);
	BIT_VEC cppVar_50411 = PC + 1;
	cppVar_50411 = (cppVar_50411 & cppMask_un_16_);
	BIT_VEC cppVar_50412 = ROM.rd(cppVar_50411);
	bool cppVar_50413 = (cppVar_50412 == 135);
	BIT_VEC cppVar_50414 = PC + 1;
	cppVar_50414 = (cppVar_50414 & cppMask_un_16_);
	BIT_VEC cppVar_50415 = ROM.rd(cppVar_50414);
	bool cppVar_50416 = (cppVar_50415 == 136);
	BIT_VEC cppVar_50417 = PC + 1;
	cppVar_50417 = (cppVar_50417 & cppMask_un_16_);
	BIT_VEC cppVar_50418 = ROM.rd(cppVar_50417);
	bool cppVar_50419 = (cppVar_50418 == 137);
	BIT_VEC cppVar_50420 = PC + 1;
	cppVar_50420 = (cppVar_50420 & cppMask_un_16_);
	BIT_VEC cppVar_50421 = ROM.rd(cppVar_50420);
	bool cppVar_50422 = (cppVar_50421 == 138);
	BIT_VEC cppVar_50423 = PC + 1;
	cppVar_50423 = (cppVar_50423 & cppMask_un_16_);
	BIT_VEC cppVar_50424 = ROM.rd(cppVar_50423);
	bool cppVar_50425 = (cppVar_50424 == 140);
	BIT_VEC cppVar_50426 = PC + 1;
	cppVar_50426 = (cppVar_50426 & cppMask_un_16_);
	BIT_VEC cppVar_50427 = ROM.rd(cppVar_50426);
	bool cppVar_50428 = (cppVar_50427 == 139);
	BIT_VEC cppVar_50429 = PC + 1;
	cppVar_50429 = (cppVar_50429 & cppMask_un_16_);
	BIT_VEC cppVar_50430 = ROM.rd(cppVar_50429);
	bool cppVar_50431 = (cppVar_50430 == 141);
	BIT_VEC cppVar_50432 = PC + 1;
	cppVar_50432 = (cppVar_50432 & cppMask_un_16_);
	BIT_VEC cppVar_50433 = ROM.rd(cppVar_50432);
	bool cppVar_50434 = (cppVar_50433 == 144);
	BIT_VEC cppVar_50435 = PC + 1;
	cppVar_50435 = (cppVar_50435 & cppMask_un_16_);
	BIT_VEC cppVar_50436 = ROM.rd(cppVar_50435);
	bool cppVar_50437 = (cppVar_50436 == 152);
	BIT_VEC cppVar_50438 = PC + 1;
	cppVar_50438 = (cppVar_50438 & cppMask_un_16_);
	BIT_VEC cppVar_50439 = ROM.rd(cppVar_50438);
	bool cppVar_50440 = (cppVar_50439 == 153);
	BIT_VEC cppVar_50441 = PC + 1;
	cppVar_50441 = (cppVar_50441 & cppMask_un_16_);
	BIT_VEC cppVar_50442 = ROM.rd(cppVar_50441);
	bool cppVar_50443 = (cppVar_50442 == 160);
	BIT_VEC cppVar_50444 = PC + 1;
	cppVar_50444 = (cppVar_50444 & cppMask_un_16_);
	BIT_VEC cppVar_50445 = ROM.rd(cppVar_50444);
	bool cppVar_50446 = (cppVar_50445 == 168);
	BIT_VEC cppVar_50447 = PC + 1;
	cppVar_50447 = (cppVar_50447 & cppMask_un_16_);
	BIT_VEC cppVar_50448 = ROM.rd(cppVar_50447);
	bool cppVar_50449 = (cppVar_50448 == 176);
	BIT_VEC cppVar_50450 = PC + 1;
	cppVar_50450 = (cppVar_50450 & cppMask_un_16_);
	BIT_VEC cppVar_50451 = ROM.rd(cppVar_50450);
	bool cppVar_50452 = (cppVar_50451 == 184);
	BIT_VEC cppVar_50453 = PC + 1;
	cppVar_50453 = (cppVar_50453 & cppMask_un_16_);
	BIT_VEC cppVar_50454 = ROM.rd(cppVar_50453);
	bool cppVar_50455 = (cppVar_50454 == 208);
	BIT_VEC cppVar_50456 = PC + 1;
	cppVar_50456 = (cppVar_50456 & cppMask_un_16_);
	BIT_VEC cppVar_50457 = ROM.rd(cppVar_50456);
	bool cppVar_50458 = (cppVar_50457 == 224);
	BIT_VEC cppVar_50459 = PC + 1;
	cppVar_50459 = (cppVar_50459 & cppMask_un_16_);
	BIT_VEC cppVar_50460 = ROM.rd(cppVar_50459);
	bool cppVar_50461 = (cppVar_50460 == 240);
	BIT_VEC cppVar_50462 = (cppVar_50461) ? B : 0;
	BIT_VEC cppVar_50463 = (cppVar_50458) ? ACC : cppVar_50462;
	BIT_VEC cppVar_50464 = (cppVar_50455) ? PSW : cppVar_50463;
	BIT_VEC cppVar_50465 = (cppVar_50452) ? IP : cppVar_50464;
	BIT_VEC cppVar_50466 = (cppVar_50449) ? P3 : cppVar_50465;
	BIT_VEC cppVar_50467 = (cppVar_50446) ? IE : cppVar_50466;
	BIT_VEC cppVar_50468 = (cppVar_50443) ? P2 : cppVar_50467;
	BIT_VEC cppVar_50469 = (cppVar_50440) ? SBUF : cppVar_50468;
	BIT_VEC cppVar_50470 = (cppVar_50437) ? SCON : cppVar_50469;
	BIT_VEC cppVar_50471 = (cppVar_50434) ? P1 : cppVar_50470;
	BIT_VEC cppVar_50472 = (cppVar_50431) ? TH1 : cppVar_50471;
	BIT_VEC cppVar_50473 = (cppVar_50428) ? TL1 : cppVar_50472;
	BIT_VEC cppVar_50474 = (cppVar_50425) ? TH0 : cppVar_50473;
	BIT_VEC cppVar_50475 = (cppVar_50422) ? TL0 : cppVar_50474;
	BIT_VEC cppVar_50476 = (cppVar_50419) ? TMOD : cppVar_50475;
	BIT_VEC cppVar_50477 = (cppVar_50416) ? TCON : cppVar_50476;
	BIT_VEC cppVar_50478 = (cppVar_50413) ? PCON : cppVar_50477;
	BIT_VEC cppVar_50479 = (cppVar_50410) ? DPH : cppVar_50478;
	BIT_VEC cppVar_50480 = (cppVar_50407) ? DPL : cppVar_50479;
	BIT_VEC cppVar_50481 = (cppVar_50404) ? SP : cppVar_50480;
	BIT_VEC cppVar_50482 = (cppVar_50401) ? P0 : cppVar_50481;
	BIT_VEC cppVar_50483 = (cppVar_50395) ? cppVar_50398 : cppVar_50482;
	BIT_VEC cppVar_50484 = (cppVar_50483 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_50485 = (cppVar_50484 & cppMask_un_4_);
	BIT_VEC cppVar_50486 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50487 = (cppVar_50486 & cppMask_un_1_);
	BIT_VEC cppVar_50488 = cppVar_50485 + cppVar_50487;
	cppVar_50488 = (cppVar_50488 & cppMask_un_5_);
	bool cppVar_50489 = cppVar_50391 < cppVar_50488;
	BIT_VEC cppVar_50492 = (cppVar_50489) ? 1 : 0;
	BIT_VEC cppVar_50493 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_50494 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_50495 = PC + 1;
	cppVar_50495 = (cppVar_50495 & cppMask_un_16_);
	BIT_VEC cppVar_50496 = ROM.rd(cppVar_50495);
	BIT_VEC cppVar_50497 = (cppVar_50496 >> 7) & cppMask_un_1_;
	bool cppVar_50498 = (cppVar_50497 == 0);
	BIT_VEC cppVar_50499 = PC + 1;
	cppVar_50499 = (cppVar_50499 & cppMask_un_16_);
	BIT_VEC cppVar_50500 = ROM.rd(cppVar_50499);
	BIT_VEC cppVar_50501 = IRAM.rd(cppVar_50500);
	BIT_VEC cppVar_50502 = PC + 1;
	cppVar_50502 = (cppVar_50502 & cppMask_un_16_);
	BIT_VEC cppVar_50503 = ROM.rd(cppVar_50502);
	bool cppVar_50504 = (cppVar_50503 == 128);
	BIT_VEC cppVar_50505 = PC + 1;
	cppVar_50505 = (cppVar_50505 & cppMask_un_16_);
	BIT_VEC cppVar_50506 = ROM.rd(cppVar_50505);
	bool cppVar_50507 = (cppVar_50506 == 129);
	BIT_VEC cppVar_50508 = PC + 1;
	cppVar_50508 = (cppVar_50508 & cppMask_un_16_);
	BIT_VEC cppVar_50509 = ROM.rd(cppVar_50508);
	bool cppVar_50510 = (cppVar_50509 == 130);
	BIT_VEC cppVar_50511 = PC + 1;
	cppVar_50511 = (cppVar_50511 & cppMask_un_16_);
	BIT_VEC cppVar_50512 = ROM.rd(cppVar_50511);
	bool cppVar_50513 = (cppVar_50512 == 131);
	BIT_VEC cppVar_50514 = PC + 1;
	cppVar_50514 = (cppVar_50514 & cppMask_un_16_);
	BIT_VEC cppVar_50515 = ROM.rd(cppVar_50514);
	bool cppVar_50516 = (cppVar_50515 == 135);
	BIT_VEC cppVar_50517 = PC + 1;
	cppVar_50517 = (cppVar_50517 & cppMask_un_16_);
	BIT_VEC cppVar_50518 = ROM.rd(cppVar_50517);
	bool cppVar_50519 = (cppVar_50518 == 136);
	BIT_VEC cppVar_50520 = PC + 1;
	cppVar_50520 = (cppVar_50520 & cppMask_un_16_);
	BIT_VEC cppVar_50521 = ROM.rd(cppVar_50520);
	bool cppVar_50522 = (cppVar_50521 == 137);
	BIT_VEC cppVar_50523 = PC + 1;
	cppVar_50523 = (cppVar_50523 & cppMask_un_16_);
	BIT_VEC cppVar_50524 = ROM.rd(cppVar_50523);
	bool cppVar_50525 = (cppVar_50524 == 138);
	BIT_VEC cppVar_50526 = PC + 1;
	cppVar_50526 = (cppVar_50526 & cppMask_un_16_);
	BIT_VEC cppVar_50527 = ROM.rd(cppVar_50526);
	bool cppVar_50528 = (cppVar_50527 == 140);
	BIT_VEC cppVar_50529 = PC + 1;
	cppVar_50529 = (cppVar_50529 & cppMask_un_16_);
	BIT_VEC cppVar_50530 = ROM.rd(cppVar_50529);
	bool cppVar_50531 = (cppVar_50530 == 139);
	BIT_VEC cppVar_50532 = PC + 1;
	cppVar_50532 = (cppVar_50532 & cppMask_un_16_);
	BIT_VEC cppVar_50533 = ROM.rd(cppVar_50532);
	bool cppVar_50534 = (cppVar_50533 == 141);
	BIT_VEC cppVar_50535 = PC + 1;
	cppVar_50535 = (cppVar_50535 & cppMask_un_16_);
	BIT_VEC cppVar_50536 = ROM.rd(cppVar_50535);
	bool cppVar_50537 = (cppVar_50536 == 144);
	BIT_VEC cppVar_50538 = PC + 1;
	cppVar_50538 = (cppVar_50538 & cppMask_un_16_);
	BIT_VEC cppVar_50539 = ROM.rd(cppVar_50538);
	bool cppVar_50540 = (cppVar_50539 == 152);
	BIT_VEC cppVar_50541 = PC + 1;
	cppVar_50541 = (cppVar_50541 & cppMask_un_16_);
	BIT_VEC cppVar_50542 = ROM.rd(cppVar_50541);
	bool cppVar_50543 = (cppVar_50542 == 153);
	BIT_VEC cppVar_50544 = PC + 1;
	cppVar_50544 = (cppVar_50544 & cppMask_un_16_);
	BIT_VEC cppVar_50545 = ROM.rd(cppVar_50544);
	bool cppVar_50546 = (cppVar_50545 == 160);
	BIT_VEC cppVar_50547 = PC + 1;
	cppVar_50547 = (cppVar_50547 & cppMask_un_16_);
	BIT_VEC cppVar_50548 = ROM.rd(cppVar_50547);
	bool cppVar_50549 = (cppVar_50548 == 168);
	BIT_VEC cppVar_50550 = PC + 1;
	cppVar_50550 = (cppVar_50550 & cppMask_un_16_);
	BIT_VEC cppVar_50551 = ROM.rd(cppVar_50550);
	bool cppVar_50552 = (cppVar_50551 == 176);
	BIT_VEC cppVar_50553 = PC + 1;
	cppVar_50553 = (cppVar_50553 & cppMask_un_16_);
	BIT_VEC cppVar_50554 = ROM.rd(cppVar_50553);
	bool cppVar_50555 = (cppVar_50554 == 184);
	BIT_VEC cppVar_50556 = PC + 1;
	cppVar_50556 = (cppVar_50556 & cppMask_un_16_);
	BIT_VEC cppVar_50557 = ROM.rd(cppVar_50556);
	bool cppVar_50558 = (cppVar_50557 == 208);
	BIT_VEC cppVar_50559 = PC + 1;
	cppVar_50559 = (cppVar_50559 & cppMask_un_16_);
	BIT_VEC cppVar_50560 = ROM.rd(cppVar_50559);
	bool cppVar_50561 = (cppVar_50560 == 224);
	BIT_VEC cppVar_50562 = PC + 1;
	cppVar_50562 = (cppVar_50562 & cppMask_un_16_);
	BIT_VEC cppVar_50563 = ROM.rd(cppVar_50562);
	bool cppVar_50564 = (cppVar_50563 == 240);
	BIT_VEC cppVar_50565 = (cppVar_50564) ? B : 0;
	BIT_VEC cppVar_50566 = (cppVar_50561) ? ACC : cppVar_50565;
	BIT_VEC cppVar_50567 = (cppVar_50558) ? PSW : cppVar_50566;
	BIT_VEC cppVar_50568 = (cppVar_50555) ? IP : cppVar_50567;
	BIT_VEC cppVar_50569 = (cppVar_50552) ? P3 : cppVar_50568;
	BIT_VEC cppVar_50570 = (cppVar_50549) ? IE : cppVar_50569;
	BIT_VEC cppVar_50571 = (cppVar_50546) ? P2 : cppVar_50570;
	BIT_VEC cppVar_50572 = (cppVar_50543) ? SBUF : cppVar_50571;
	BIT_VEC cppVar_50573 = (cppVar_50540) ? SCON : cppVar_50572;
	BIT_VEC cppVar_50574 = (cppVar_50537) ? P1 : cppVar_50573;
	BIT_VEC cppVar_50575 = (cppVar_50534) ? TH1 : cppVar_50574;
	BIT_VEC cppVar_50576 = (cppVar_50531) ? TL1 : cppVar_50575;
	BIT_VEC cppVar_50577 = (cppVar_50528) ? TH0 : cppVar_50576;
	BIT_VEC cppVar_50578 = (cppVar_50525) ? TL0 : cppVar_50577;
	BIT_VEC cppVar_50579 = (cppVar_50522) ? TMOD : cppVar_50578;
	BIT_VEC cppVar_50580 = (cppVar_50519) ? TCON : cppVar_50579;
	BIT_VEC cppVar_50581 = (cppVar_50516) ? PCON : cppVar_50580;
	BIT_VEC cppVar_50582 = (cppVar_50513) ? DPH : cppVar_50581;
	BIT_VEC cppVar_50583 = (cppVar_50510) ? DPL : cppVar_50582;
	BIT_VEC cppVar_50584 = (cppVar_50507) ? SP : cppVar_50583;
	BIT_VEC cppVar_50585 = (cppVar_50504) ? P0 : cppVar_50584;
	BIT_VEC cppVar_50586 = (cppVar_50498) ? cppVar_50501 : cppVar_50585;
	BIT_VEC cppVar_50587 = ((cppVar_50586 & cppMask_bit_8_) ? (cppVar_50586 | cppMask_sign_8_) : cppVar_50586);
	BIT_VEC cppVar_50588 = cppVar_50494 - cppVar_50587;
	cppVar_50588 = (cppVar_50588 & cppMask_un_9_);
	BIT_VEC cppVar_50589 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50590 = ((cppVar_50589 & cppMask_bit_1_) ? (cppVar_50589 | cppMask_sign_1_) : cppVar_50589);
	BIT_VEC cppVar_50591 = cppVar_50588 + cppVar_50590;
	cppVar_50591 = (cppVar_50591 & cppMask_un_9_);
	BIT_VEC cppVar_50592 = (cppVar_50591 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_50593 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_50594 = PC + 1;
	cppVar_50594 = (cppVar_50594 & cppMask_un_16_);
	BIT_VEC cppVar_50595 = ROM.rd(cppVar_50594);
	BIT_VEC cppVar_50596 = (cppVar_50595 >> 7) & cppMask_un_1_;
	bool cppVar_50597 = (cppVar_50596 == 0);
	BIT_VEC cppVar_50598 = PC + 1;
	cppVar_50598 = (cppVar_50598 & cppMask_un_16_);
	BIT_VEC cppVar_50599 = ROM.rd(cppVar_50598);
	BIT_VEC cppVar_50600 = IRAM.rd(cppVar_50599);
	BIT_VEC cppVar_50601 = PC + 1;
	cppVar_50601 = (cppVar_50601 & cppMask_un_16_);
	BIT_VEC cppVar_50602 = ROM.rd(cppVar_50601);
	bool cppVar_50603 = (cppVar_50602 == 128);
	BIT_VEC cppVar_50604 = PC + 1;
	cppVar_50604 = (cppVar_50604 & cppMask_un_16_);
	BIT_VEC cppVar_50605 = ROM.rd(cppVar_50604);
	bool cppVar_50606 = (cppVar_50605 == 129);
	BIT_VEC cppVar_50607 = PC + 1;
	cppVar_50607 = (cppVar_50607 & cppMask_un_16_);
	BIT_VEC cppVar_50608 = ROM.rd(cppVar_50607);
	bool cppVar_50609 = (cppVar_50608 == 130);
	BIT_VEC cppVar_50610 = PC + 1;
	cppVar_50610 = (cppVar_50610 & cppMask_un_16_);
	BIT_VEC cppVar_50611 = ROM.rd(cppVar_50610);
	bool cppVar_50612 = (cppVar_50611 == 131);
	BIT_VEC cppVar_50613 = PC + 1;
	cppVar_50613 = (cppVar_50613 & cppMask_un_16_);
	BIT_VEC cppVar_50614 = ROM.rd(cppVar_50613);
	bool cppVar_50615 = (cppVar_50614 == 135);
	BIT_VEC cppVar_50616 = PC + 1;
	cppVar_50616 = (cppVar_50616 & cppMask_un_16_);
	BIT_VEC cppVar_50617 = ROM.rd(cppVar_50616);
	bool cppVar_50618 = (cppVar_50617 == 136);
	BIT_VEC cppVar_50619 = PC + 1;
	cppVar_50619 = (cppVar_50619 & cppMask_un_16_);
	BIT_VEC cppVar_50620 = ROM.rd(cppVar_50619);
	bool cppVar_50621 = (cppVar_50620 == 137);
	BIT_VEC cppVar_50622 = PC + 1;
	cppVar_50622 = (cppVar_50622 & cppMask_un_16_);
	BIT_VEC cppVar_50623 = ROM.rd(cppVar_50622);
	bool cppVar_50624 = (cppVar_50623 == 138);
	BIT_VEC cppVar_50625 = PC + 1;
	cppVar_50625 = (cppVar_50625 & cppMask_un_16_);
	BIT_VEC cppVar_50626 = ROM.rd(cppVar_50625);
	bool cppVar_50627 = (cppVar_50626 == 140);
	BIT_VEC cppVar_50628 = PC + 1;
	cppVar_50628 = (cppVar_50628 & cppMask_un_16_);
	BIT_VEC cppVar_50629 = ROM.rd(cppVar_50628);
	bool cppVar_50630 = (cppVar_50629 == 139);
	BIT_VEC cppVar_50631 = PC + 1;
	cppVar_50631 = (cppVar_50631 & cppMask_un_16_);
	BIT_VEC cppVar_50632 = ROM.rd(cppVar_50631);
	bool cppVar_50633 = (cppVar_50632 == 141);
	BIT_VEC cppVar_50634 = PC + 1;
	cppVar_50634 = (cppVar_50634 & cppMask_un_16_);
	BIT_VEC cppVar_50635 = ROM.rd(cppVar_50634);
	bool cppVar_50636 = (cppVar_50635 == 144);
	BIT_VEC cppVar_50637 = PC + 1;
	cppVar_50637 = (cppVar_50637 & cppMask_un_16_);
	BIT_VEC cppVar_50638 = ROM.rd(cppVar_50637);
	bool cppVar_50639 = (cppVar_50638 == 152);
	BIT_VEC cppVar_50640 = PC + 1;
	cppVar_50640 = (cppVar_50640 & cppMask_un_16_);
	BIT_VEC cppVar_50641 = ROM.rd(cppVar_50640);
	bool cppVar_50642 = (cppVar_50641 == 153);
	BIT_VEC cppVar_50643 = PC + 1;
	cppVar_50643 = (cppVar_50643 & cppMask_un_16_);
	BIT_VEC cppVar_50644 = ROM.rd(cppVar_50643);
	bool cppVar_50645 = (cppVar_50644 == 160);
	BIT_VEC cppVar_50646 = PC + 1;
	cppVar_50646 = (cppVar_50646 & cppMask_un_16_);
	BIT_VEC cppVar_50647 = ROM.rd(cppVar_50646);
	bool cppVar_50648 = (cppVar_50647 == 168);
	BIT_VEC cppVar_50649 = PC + 1;
	cppVar_50649 = (cppVar_50649 & cppMask_un_16_);
	BIT_VEC cppVar_50650 = ROM.rd(cppVar_50649);
	bool cppVar_50651 = (cppVar_50650 == 176);
	BIT_VEC cppVar_50652 = PC + 1;
	cppVar_50652 = (cppVar_50652 & cppMask_un_16_);
	BIT_VEC cppVar_50653 = ROM.rd(cppVar_50652);
	bool cppVar_50654 = (cppVar_50653 == 184);
	BIT_VEC cppVar_50655 = PC + 1;
	cppVar_50655 = (cppVar_50655 & cppMask_un_16_);
	BIT_VEC cppVar_50656 = ROM.rd(cppVar_50655);
	bool cppVar_50657 = (cppVar_50656 == 208);
	BIT_VEC cppVar_50658 = PC + 1;
	cppVar_50658 = (cppVar_50658 & cppMask_un_16_);
	BIT_VEC cppVar_50659 = ROM.rd(cppVar_50658);
	bool cppVar_50660 = (cppVar_50659 == 224);
	BIT_VEC cppVar_50661 = PC + 1;
	cppVar_50661 = (cppVar_50661 & cppMask_un_16_);
	BIT_VEC cppVar_50662 = ROM.rd(cppVar_50661);
	bool cppVar_50663 = (cppVar_50662 == 240);
	BIT_VEC cppVar_50664 = (cppVar_50663) ? B : 0;
	BIT_VEC cppVar_50665 = (cppVar_50660) ? ACC : cppVar_50664;
	BIT_VEC cppVar_50666 = (cppVar_50657) ? PSW : cppVar_50665;
	BIT_VEC cppVar_50667 = (cppVar_50654) ? IP : cppVar_50666;
	BIT_VEC cppVar_50668 = (cppVar_50651) ? P3 : cppVar_50667;
	BIT_VEC cppVar_50669 = (cppVar_50648) ? IE : cppVar_50668;
	BIT_VEC cppVar_50670 = (cppVar_50645) ? P2 : cppVar_50669;
	BIT_VEC cppVar_50671 = (cppVar_50642) ? SBUF : cppVar_50670;
	BIT_VEC cppVar_50672 = (cppVar_50639) ? SCON : cppVar_50671;
	BIT_VEC cppVar_50673 = (cppVar_50636) ? P1 : cppVar_50672;
	BIT_VEC cppVar_50674 = (cppVar_50633) ? TH1 : cppVar_50673;
	BIT_VEC cppVar_50675 = (cppVar_50630) ? TL1 : cppVar_50674;
	BIT_VEC cppVar_50676 = (cppVar_50627) ? TH0 : cppVar_50675;
	BIT_VEC cppVar_50677 = (cppVar_50624) ? TL0 : cppVar_50676;
	BIT_VEC cppVar_50678 = (cppVar_50621) ? TMOD : cppVar_50677;
	BIT_VEC cppVar_50679 = (cppVar_50618) ? TCON : cppVar_50678;
	BIT_VEC cppVar_50680 = (cppVar_50615) ? PCON : cppVar_50679;
	BIT_VEC cppVar_50681 = (cppVar_50612) ? DPH : cppVar_50680;
	BIT_VEC cppVar_50682 = (cppVar_50609) ? DPL : cppVar_50681;
	BIT_VEC cppVar_50683 = (cppVar_50606) ? SP : cppVar_50682;
	BIT_VEC cppVar_50684 = (cppVar_50603) ? P0 : cppVar_50683;
	BIT_VEC cppVar_50685 = (cppVar_50597) ? cppVar_50600 : cppVar_50684;
	BIT_VEC cppVar_50686 = ((cppVar_50685 & cppMask_bit_8_) ? (cppVar_50685 | cppMask_sign_8_) : cppVar_50685);
	BIT_VEC cppVar_50687 = cppVar_50593 - cppVar_50686;
	cppVar_50687 = (cppVar_50687 & cppMask_un_9_);
	BIT_VEC cppVar_50688 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50689 = ((cppVar_50688 & cppMask_bit_1_) ? (cppVar_50688 | cppMask_sign_1_) : cppVar_50688);
	BIT_VEC cppVar_50690 = cppVar_50687 + cppVar_50689;
	cppVar_50690 = (cppVar_50690 & cppMask_un_9_);
	BIT_VEC cppVar_50691 = (cppVar_50690 >> 7) & cppMask_un_1_;
	bool cppVar_50692 = (cppVar_50592 != cppVar_50691);
	BIT_VEC cppVar_50695 = (cppVar_50692) ? 1 : 0;
	BIT_VEC cppVar_50696 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_50697 = (cppVar_50695 << 2) | cppVar_50696;
	cppVar_50697 = (cppVar_50697 & cppMask_un_3_);
	BIT_VEC cppVar_50698 = (cppVar_50493 << 3) | cppVar_50697;
	cppVar_50698 = (cppVar_50698 & cppMask_un_6_);
	BIT_VEC cppVar_50699 = (cppVar_50492 << 6) | cppVar_50698;
	cppVar_50699 = (cppVar_50699 & cppMask_un_7_);
	BIT_VEC cppVar_50700 = (cppVar_50389 << 7) | cppVar_50699;
	cppVar_50700 = (cppVar_50700 & cppMask_un_8_);
	BIT_VEC cppVar_50701 = ROM.rd(PC);
	bool cppVar_50703 = (cppVar_50701 == 148);
	BIT_VEC cppVar_50705 = PC + 1;
	cppVar_50705 = (cppVar_50705 & cppMask_un_16_);
	BIT_VEC cppVar_50706 = ROM.rd(cppVar_50705);
	BIT_VEC cppVar_50707 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50708 = (cppVar_50707 & cppMask_un_1_);
	BIT_VEC cppVar_50709 = cppVar_50706 + cppVar_50708;
	cppVar_50709 = (cppVar_50709 & cppMask_un_8_);
	bool cppVar_50710 = ACC < cppVar_50709;
	BIT_VEC cppVar_50713 = (cppVar_50710) ? 1 : 0;
	BIT_VEC cppVar_50714 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_50715 = (cppVar_50714 & cppMask_un_4_);
	BIT_VEC cppVar_50716 = PC + 1;
	cppVar_50716 = (cppVar_50716 & cppMask_un_16_);
	BIT_VEC cppVar_50717 = ROM.rd(cppVar_50716);
	BIT_VEC cppVar_50718 = (cppVar_50717 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_50719 = (cppVar_50718 & cppMask_un_4_);
	BIT_VEC cppVar_50720 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50721 = (cppVar_50720 & cppMask_un_1_);
	BIT_VEC cppVar_50722 = cppVar_50719 + cppVar_50721;
	cppVar_50722 = (cppVar_50722 & cppMask_un_5_);
	bool cppVar_50723 = cppVar_50715 < cppVar_50722;
	BIT_VEC cppVar_50726 = (cppVar_50723) ? 1 : 0;
	BIT_VEC cppVar_50727 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_50728 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_50729 = PC + 1;
	cppVar_50729 = (cppVar_50729 & cppMask_un_16_);
	BIT_VEC cppVar_50730 = ROM.rd(cppVar_50729);
	BIT_VEC cppVar_50731 = ((cppVar_50730 & cppMask_bit_8_) ? (cppVar_50730 | cppMask_sign_8_) : cppVar_50730);
	BIT_VEC cppVar_50732 = cppVar_50728 - cppVar_50731;
	cppVar_50732 = (cppVar_50732 & cppMask_un_9_);
	BIT_VEC cppVar_50733 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50734 = ((cppVar_50733 & cppMask_bit_1_) ? (cppVar_50733 | cppMask_sign_1_) : cppVar_50733);
	BIT_VEC cppVar_50735 = cppVar_50732 + cppVar_50734;
	cppVar_50735 = (cppVar_50735 & cppMask_un_9_);
	BIT_VEC cppVar_50736 = (cppVar_50735 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_50737 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_50738 = PC + 1;
	cppVar_50738 = (cppVar_50738 & cppMask_un_16_);
	BIT_VEC cppVar_50739 = ROM.rd(cppVar_50738);
	BIT_VEC cppVar_50740 = ((cppVar_50739 & cppMask_bit_8_) ? (cppVar_50739 | cppMask_sign_8_) : cppVar_50739);
	BIT_VEC cppVar_50741 = cppVar_50737 - cppVar_50740;
	cppVar_50741 = (cppVar_50741 & cppMask_un_9_);
	BIT_VEC cppVar_50742 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_50743 = ((cppVar_50742 & cppMask_bit_1_) ? (cppVar_50742 | cppMask_sign_1_) : cppVar_50742);
	BIT_VEC cppVar_50744 = cppVar_50741 + cppVar_50743;
	cppVar_50744 = (cppVar_50744 & cppMask_un_9_);
	BIT_VEC cppVar_50745 = (cppVar_50744 >> 7) & cppMask_un_1_;
	bool cppVar_50746 = (cppVar_50736 != cppVar_50745);
	BIT_VEC cppVar_50749 = (cppVar_50746) ? 1 : 0;
	BIT_VEC cppVar_50750 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_50751 = (cppVar_50749 << 2) | cppVar_50750;
	cppVar_50751 = (cppVar_50751 & cppMask_un_3_);
	BIT_VEC cppVar_50752 = (cppVar_50727 << 3) | cppVar_50751;
	cppVar_50752 = (cppVar_50752 & cppMask_un_6_);
	BIT_VEC cppVar_50753 = (cppVar_50726 << 6) | cppVar_50752;
	cppVar_50753 = (cppVar_50753 & cppMask_un_7_);
	BIT_VEC cppVar_50754 = (cppVar_50713 << 7) | cppVar_50753;
	cppVar_50754 = (cppVar_50754 & cppMask_un_8_);
	BIT_VEC cppVar_50755 = ROM.rd(PC);
	bool cppVar_50757 = (cppVar_50755 == 146);
	BIT_VEC cppVar_50759 = PC + 1;
	cppVar_50759 = (cppVar_50759 & cppMask_un_16_);
	BIT_VEC cppVar_50760 = ROM.rd(cppVar_50759);
	BIT_VEC cppVar_50761 = (cppVar_50760 >> 7) & cppMask_un_1_;
	bool cppVar_50763 = (cppVar_50761 == 1);
	BIT_VEC cppVar_50764 = PC + 1;
	cppVar_50764 = (cppVar_50764 & cppMask_un_16_);
	BIT_VEC cppVar_50765 = ROM.rd(cppVar_50764);
	BIT_VEC cppVar_50766 = (cppVar_50765 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50768 = (cppVar_50766 << 3) | 0;
	cppVar_50768 = (cppVar_50768 & cppMask_un_8_);
	BIT_VEC cppVar_50769 = PC + 1;
	cppVar_50769 = (cppVar_50769 & cppMask_un_16_);
	BIT_VEC cppVar_50770 = ROM.rd(cppVar_50769);
	BIT_VEC cppVar_50771 = (cppVar_50770 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50772 = (cppVar_50771 & cppMask_un_5_);
	BIT_VEC cppVar_50774 = cppVar_50772 + 32;
	cppVar_50774 = (cppVar_50774 & cppMask_un_8_);
	BIT_VEC cppVar_50775 = (cppVar_50763) ? cppVar_50768 : cppVar_50774;
	bool cppVar_50777 = (cppVar_50775 == 208);
	BIT_VEC cppVar_50779 = PC + 1;
	cppVar_50779 = (cppVar_50779 & cppMask_un_16_);
	BIT_VEC cppVar_50780 = ROM.rd(cppVar_50779);
	BIT_VEC cppVar_50781 = (cppVar_50780 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_50782 = (cppVar_50781 & cppMask_un_3_);
	BIT_VEC cppVar_50783 = 1 << static_cast<unsigned>(cppVar_50782);
	cppVar_50783 = (cppVar_50783 & cppMask_un_8_);
	BIT_VEC cppVar_50784 = ~cppVar_50783;
	BIT_VEC cppVar_50785 = PC + 1;
	cppVar_50785 = (cppVar_50785 & cppMask_un_16_);
	BIT_VEC cppVar_50786 = ROM.rd(cppVar_50785);
	BIT_VEC cppVar_50787 = (cppVar_50786 >> 7) & cppMask_un_1_;
	bool cppVar_50788 = (cppVar_50787 == 1);
	BIT_VEC cppVar_50789 = PC + 1;
	cppVar_50789 = (cppVar_50789 & cppMask_un_16_);
	BIT_VEC cppVar_50790 = ROM.rd(cppVar_50789);
	BIT_VEC cppVar_50791 = (cppVar_50790 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50792 = (cppVar_50791 << 3) | 0;
	cppVar_50792 = (cppVar_50792 & cppMask_un_8_);
	BIT_VEC cppVar_50793 = PC + 1;
	cppVar_50793 = (cppVar_50793 & cppMask_un_16_);
	BIT_VEC cppVar_50794 = ROM.rd(cppVar_50793);
	BIT_VEC cppVar_50795 = (cppVar_50794 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50796 = (cppVar_50795 & cppMask_un_5_);
	BIT_VEC cppVar_50797 = cppVar_50796 + 32;
	cppVar_50797 = (cppVar_50797 & cppMask_un_8_);
	BIT_VEC cppVar_50798 = (cppVar_50788) ? cppVar_50792 : cppVar_50797;
	BIT_VEC cppVar_50799 = (cppVar_50798 >> 7) & cppMask_un_1_;
	bool cppVar_50801 = (cppVar_50799 == 0);
	BIT_VEC cppVar_50802 = PC + 1;
	cppVar_50802 = (cppVar_50802 & cppMask_un_16_);
	BIT_VEC cppVar_50803 = ROM.rd(cppVar_50802);
	BIT_VEC cppVar_50804 = (cppVar_50803 >> 7) & cppMask_un_1_;
	bool cppVar_50805 = (cppVar_50804 == 1);
	BIT_VEC cppVar_50806 = PC + 1;
	cppVar_50806 = (cppVar_50806 & cppMask_un_16_);
	BIT_VEC cppVar_50807 = ROM.rd(cppVar_50806);
	BIT_VEC cppVar_50808 = (cppVar_50807 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50809 = (cppVar_50808 << 3) | 0;
	cppVar_50809 = (cppVar_50809 & cppMask_un_8_);
	BIT_VEC cppVar_50810 = PC + 1;
	cppVar_50810 = (cppVar_50810 & cppMask_un_16_);
	BIT_VEC cppVar_50811 = ROM.rd(cppVar_50810);
	BIT_VEC cppVar_50812 = (cppVar_50811 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50813 = (cppVar_50812 & cppMask_un_5_);
	BIT_VEC cppVar_50814 = cppVar_50813 + 32;
	cppVar_50814 = (cppVar_50814 & cppMask_un_8_);
	BIT_VEC cppVar_50815 = (cppVar_50805) ? cppVar_50809 : cppVar_50814;
	BIT_VEC cppVar_50816 = IRAM.rd(cppVar_50815);
	BIT_VEC cppVar_50817 = PC + 1;
	cppVar_50817 = (cppVar_50817 & cppMask_un_16_);
	BIT_VEC cppVar_50818 = ROM.rd(cppVar_50817);
	BIT_VEC cppVar_50819 = (cppVar_50818 >> 7) & cppMask_un_1_;
	bool cppVar_50820 = (cppVar_50819 == 1);
	BIT_VEC cppVar_50821 = PC + 1;
	cppVar_50821 = (cppVar_50821 & cppMask_un_16_);
	BIT_VEC cppVar_50822 = ROM.rd(cppVar_50821);
	BIT_VEC cppVar_50823 = (cppVar_50822 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50824 = (cppVar_50823 << 3) | 0;
	cppVar_50824 = (cppVar_50824 & cppMask_un_8_);
	BIT_VEC cppVar_50825 = PC + 1;
	cppVar_50825 = (cppVar_50825 & cppMask_un_16_);
	BIT_VEC cppVar_50826 = ROM.rd(cppVar_50825);
	BIT_VEC cppVar_50827 = (cppVar_50826 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50828 = (cppVar_50827 & cppMask_un_5_);
	BIT_VEC cppVar_50829 = cppVar_50828 + 32;
	cppVar_50829 = (cppVar_50829 & cppMask_un_8_);
	BIT_VEC cppVar_50830 = (cppVar_50820) ? cppVar_50824 : cppVar_50829;
	bool cppVar_50832 = (cppVar_50830 == 128);
	BIT_VEC cppVar_50833 = PC + 1;
	cppVar_50833 = (cppVar_50833 & cppMask_un_16_);
	BIT_VEC cppVar_50834 = ROM.rd(cppVar_50833);
	BIT_VEC cppVar_50835 = (cppVar_50834 >> 7) & cppMask_un_1_;
	bool cppVar_50836 = (cppVar_50835 == 1);
	BIT_VEC cppVar_50837 = PC + 1;
	cppVar_50837 = (cppVar_50837 & cppMask_un_16_);
	BIT_VEC cppVar_50838 = ROM.rd(cppVar_50837);
	BIT_VEC cppVar_50839 = (cppVar_50838 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50840 = (cppVar_50839 << 3) | 0;
	cppVar_50840 = (cppVar_50840 & cppMask_un_8_);
	BIT_VEC cppVar_50841 = PC + 1;
	cppVar_50841 = (cppVar_50841 & cppMask_un_16_);
	BIT_VEC cppVar_50842 = ROM.rd(cppVar_50841);
	BIT_VEC cppVar_50843 = (cppVar_50842 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50844 = (cppVar_50843 & cppMask_un_5_);
	BIT_VEC cppVar_50845 = cppVar_50844 + 32;
	cppVar_50845 = (cppVar_50845 & cppMask_un_8_);
	BIT_VEC cppVar_50846 = (cppVar_50836) ? cppVar_50840 : cppVar_50845;
	bool cppVar_50848 = (cppVar_50846 == 129);
	BIT_VEC cppVar_50849 = PC + 1;
	cppVar_50849 = (cppVar_50849 & cppMask_un_16_);
	BIT_VEC cppVar_50850 = ROM.rd(cppVar_50849);
	BIT_VEC cppVar_50851 = (cppVar_50850 >> 7) & cppMask_un_1_;
	bool cppVar_50852 = (cppVar_50851 == 1);
	BIT_VEC cppVar_50853 = PC + 1;
	cppVar_50853 = (cppVar_50853 & cppMask_un_16_);
	BIT_VEC cppVar_50854 = ROM.rd(cppVar_50853);
	BIT_VEC cppVar_50855 = (cppVar_50854 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50856 = (cppVar_50855 << 3) | 0;
	cppVar_50856 = (cppVar_50856 & cppMask_un_8_);
	BIT_VEC cppVar_50857 = PC + 1;
	cppVar_50857 = (cppVar_50857 & cppMask_un_16_);
	BIT_VEC cppVar_50858 = ROM.rd(cppVar_50857);
	BIT_VEC cppVar_50859 = (cppVar_50858 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50860 = (cppVar_50859 & cppMask_un_5_);
	BIT_VEC cppVar_50861 = cppVar_50860 + 32;
	cppVar_50861 = (cppVar_50861 & cppMask_un_8_);
	BIT_VEC cppVar_50862 = (cppVar_50852) ? cppVar_50856 : cppVar_50861;
	bool cppVar_50864 = (cppVar_50862 == 130);
	BIT_VEC cppVar_50865 = PC + 1;
	cppVar_50865 = (cppVar_50865 & cppMask_un_16_);
	BIT_VEC cppVar_50866 = ROM.rd(cppVar_50865);
	BIT_VEC cppVar_50867 = (cppVar_50866 >> 7) & cppMask_un_1_;
	bool cppVar_50868 = (cppVar_50867 == 1);
	BIT_VEC cppVar_50869 = PC + 1;
	cppVar_50869 = (cppVar_50869 & cppMask_un_16_);
	BIT_VEC cppVar_50870 = ROM.rd(cppVar_50869);
	BIT_VEC cppVar_50871 = (cppVar_50870 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50872 = (cppVar_50871 << 3) | 0;
	cppVar_50872 = (cppVar_50872 & cppMask_un_8_);
	BIT_VEC cppVar_50873 = PC + 1;
	cppVar_50873 = (cppVar_50873 & cppMask_un_16_);
	BIT_VEC cppVar_50874 = ROM.rd(cppVar_50873);
	BIT_VEC cppVar_50875 = (cppVar_50874 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50876 = (cppVar_50875 & cppMask_un_5_);
	BIT_VEC cppVar_50877 = cppVar_50876 + 32;
	cppVar_50877 = (cppVar_50877 & cppMask_un_8_);
	BIT_VEC cppVar_50878 = (cppVar_50868) ? cppVar_50872 : cppVar_50877;
	bool cppVar_50880 = (cppVar_50878 == 131);
	BIT_VEC cppVar_50881 = PC + 1;
	cppVar_50881 = (cppVar_50881 & cppMask_un_16_);
	BIT_VEC cppVar_50882 = ROM.rd(cppVar_50881);
	BIT_VEC cppVar_50883 = (cppVar_50882 >> 7) & cppMask_un_1_;
	bool cppVar_50884 = (cppVar_50883 == 1);
	BIT_VEC cppVar_50885 = PC + 1;
	cppVar_50885 = (cppVar_50885 & cppMask_un_16_);
	BIT_VEC cppVar_50886 = ROM.rd(cppVar_50885);
	BIT_VEC cppVar_50887 = (cppVar_50886 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50888 = (cppVar_50887 << 3) | 0;
	cppVar_50888 = (cppVar_50888 & cppMask_un_8_);
	BIT_VEC cppVar_50889 = PC + 1;
	cppVar_50889 = (cppVar_50889 & cppMask_un_16_);
	BIT_VEC cppVar_50890 = ROM.rd(cppVar_50889);
	BIT_VEC cppVar_50891 = (cppVar_50890 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50892 = (cppVar_50891 & cppMask_un_5_);
	BIT_VEC cppVar_50893 = cppVar_50892 + 32;
	cppVar_50893 = (cppVar_50893 & cppMask_un_8_);
	BIT_VEC cppVar_50894 = (cppVar_50884) ? cppVar_50888 : cppVar_50893;
	bool cppVar_50896 = (cppVar_50894 == 135);
	BIT_VEC cppVar_50897 = PC + 1;
	cppVar_50897 = (cppVar_50897 & cppMask_un_16_);
	BIT_VEC cppVar_50898 = ROM.rd(cppVar_50897);
	BIT_VEC cppVar_50899 = (cppVar_50898 >> 7) & cppMask_un_1_;
	bool cppVar_50900 = (cppVar_50899 == 1);
	BIT_VEC cppVar_50901 = PC + 1;
	cppVar_50901 = (cppVar_50901 & cppMask_un_16_);
	BIT_VEC cppVar_50902 = ROM.rd(cppVar_50901);
	BIT_VEC cppVar_50903 = (cppVar_50902 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50904 = (cppVar_50903 << 3) | 0;
	cppVar_50904 = (cppVar_50904 & cppMask_un_8_);
	BIT_VEC cppVar_50905 = PC + 1;
	cppVar_50905 = (cppVar_50905 & cppMask_un_16_);
	BIT_VEC cppVar_50906 = ROM.rd(cppVar_50905);
	BIT_VEC cppVar_50907 = (cppVar_50906 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50908 = (cppVar_50907 & cppMask_un_5_);
	BIT_VEC cppVar_50909 = cppVar_50908 + 32;
	cppVar_50909 = (cppVar_50909 & cppMask_un_8_);
	BIT_VEC cppVar_50910 = (cppVar_50900) ? cppVar_50904 : cppVar_50909;
	bool cppVar_50912 = (cppVar_50910 == 136);
	BIT_VEC cppVar_50913 = PC + 1;
	cppVar_50913 = (cppVar_50913 & cppMask_un_16_);
	BIT_VEC cppVar_50914 = ROM.rd(cppVar_50913);
	BIT_VEC cppVar_50915 = (cppVar_50914 >> 7) & cppMask_un_1_;
	bool cppVar_50916 = (cppVar_50915 == 1);
	BIT_VEC cppVar_50917 = PC + 1;
	cppVar_50917 = (cppVar_50917 & cppMask_un_16_);
	BIT_VEC cppVar_50918 = ROM.rd(cppVar_50917);
	BIT_VEC cppVar_50919 = (cppVar_50918 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50920 = (cppVar_50919 << 3) | 0;
	cppVar_50920 = (cppVar_50920 & cppMask_un_8_);
	BIT_VEC cppVar_50921 = PC + 1;
	cppVar_50921 = (cppVar_50921 & cppMask_un_16_);
	BIT_VEC cppVar_50922 = ROM.rd(cppVar_50921);
	BIT_VEC cppVar_50923 = (cppVar_50922 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50924 = (cppVar_50923 & cppMask_un_5_);
	BIT_VEC cppVar_50925 = cppVar_50924 + 32;
	cppVar_50925 = (cppVar_50925 & cppMask_un_8_);
	BIT_VEC cppVar_50926 = (cppVar_50916) ? cppVar_50920 : cppVar_50925;
	bool cppVar_50928 = (cppVar_50926 == 137);
	BIT_VEC cppVar_50929 = PC + 1;
	cppVar_50929 = (cppVar_50929 & cppMask_un_16_);
	BIT_VEC cppVar_50930 = ROM.rd(cppVar_50929);
	BIT_VEC cppVar_50931 = (cppVar_50930 >> 7) & cppMask_un_1_;
	bool cppVar_50932 = (cppVar_50931 == 1);
	BIT_VEC cppVar_50933 = PC + 1;
	cppVar_50933 = (cppVar_50933 & cppMask_un_16_);
	BIT_VEC cppVar_50934 = ROM.rd(cppVar_50933);
	BIT_VEC cppVar_50935 = (cppVar_50934 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50936 = (cppVar_50935 << 3) | 0;
	cppVar_50936 = (cppVar_50936 & cppMask_un_8_);
	BIT_VEC cppVar_50937 = PC + 1;
	cppVar_50937 = (cppVar_50937 & cppMask_un_16_);
	BIT_VEC cppVar_50938 = ROM.rd(cppVar_50937);
	BIT_VEC cppVar_50939 = (cppVar_50938 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50940 = (cppVar_50939 & cppMask_un_5_);
	BIT_VEC cppVar_50941 = cppVar_50940 + 32;
	cppVar_50941 = (cppVar_50941 & cppMask_un_8_);
	BIT_VEC cppVar_50942 = (cppVar_50932) ? cppVar_50936 : cppVar_50941;
	bool cppVar_50944 = (cppVar_50942 == 138);
	BIT_VEC cppVar_50945 = PC + 1;
	cppVar_50945 = (cppVar_50945 & cppMask_un_16_);
	BIT_VEC cppVar_50946 = ROM.rd(cppVar_50945);
	BIT_VEC cppVar_50947 = (cppVar_50946 >> 7) & cppMask_un_1_;
	bool cppVar_50948 = (cppVar_50947 == 1);
	BIT_VEC cppVar_50949 = PC + 1;
	cppVar_50949 = (cppVar_50949 & cppMask_un_16_);
	BIT_VEC cppVar_50950 = ROM.rd(cppVar_50949);
	BIT_VEC cppVar_50951 = (cppVar_50950 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50952 = (cppVar_50951 << 3) | 0;
	cppVar_50952 = (cppVar_50952 & cppMask_un_8_);
	BIT_VEC cppVar_50953 = PC + 1;
	cppVar_50953 = (cppVar_50953 & cppMask_un_16_);
	BIT_VEC cppVar_50954 = ROM.rd(cppVar_50953);
	BIT_VEC cppVar_50955 = (cppVar_50954 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50956 = (cppVar_50955 & cppMask_un_5_);
	BIT_VEC cppVar_50957 = cppVar_50956 + 32;
	cppVar_50957 = (cppVar_50957 & cppMask_un_8_);
	BIT_VEC cppVar_50958 = (cppVar_50948) ? cppVar_50952 : cppVar_50957;
	bool cppVar_50960 = (cppVar_50958 == 140);
	BIT_VEC cppVar_50961 = PC + 1;
	cppVar_50961 = (cppVar_50961 & cppMask_un_16_);
	BIT_VEC cppVar_50962 = ROM.rd(cppVar_50961);
	BIT_VEC cppVar_50963 = (cppVar_50962 >> 7) & cppMask_un_1_;
	bool cppVar_50964 = (cppVar_50963 == 1);
	BIT_VEC cppVar_50965 = PC + 1;
	cppVar_50965 = (cppVar_50965 & cppMask_un_16_);
	BIT_VEC cppVar_50966 = ROM.rd(cppVar_50965);
	BIT_VEC cppVar_50967 = (cppVar_50966 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50968 = (cppVar_50967 << 3) | 0;
	cppVar_50968 = (cppVar_50968 & cppMask_un_8_);
	BIT_VEC cppVar_50969 = PC + 1;
	cppVar_50969 = (cppVar_50969 & cppMask_un_16_);
	BIT_VEC cppVar_50970 = ROM.rd(cppVar_50969);
	BIT_VEC cppVar_50971 = (cppVar_50970 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50972 = (cppVar_50971 & cppMask_un_5_);
	BIT_VEC cppVar_50973 = cppVar_50972 + 32;
	cppVar_50973 = (cppVar_50973 & cppMask_un_8_);
	BIT_VEC cppVar_50974 = (cppVar_50964) ? cppVar_50968 : cppVar_50973;
	bool cppVar_50976 = (cppVar_50974 == 139);
	BIT_VEC cppVar_50977 = PC + 1;
	cppVar_50977 = (cppVar_50977 & cppMask_un_16_);
	BIT_VEC cppVar_50978 = ROM.rd(cppVar_50977);
	BIT_VEC cppVar_50979 = (cppVar_50978 >> 7) & cppMask_un_1_;
	bool cppVar_50980 = (cppVar_50979 == 1);
	BIT_VEC cppVar_50981 = PC + 1;
	cppVar_50981 = (cppVar_50981 & cppMask_un_16_);
	BIT_VEC cppVar_50982 = ROM.rd(cppVar_50981);
	BIT_VEC cppVar_50983 = (cppVar_50982 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50984 = (cppVar_50983 << 3) | 0;
	cppVar_50984 = (cppVar_50984 & cppMask_un_8_);
	BIT_VEC cppVar_50985 = PC + 1;
	cppVar_50985 = (cppVar_50985 & cppMask_un_16_);
	BIT_VEC cppVar_50986 = ROM.rd(cppVar_50985);
	BIT_VEC cppVar_50987 = (cppVar_50986 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_50988 = (cppVar_50987 & cppMask_un_5_);
	BIT_VEC cppVar_50989 = cppVar_50988 + 32;
	cppVar_50989 = (cppVar_50989 & cppMask_un_8_);
	BIT_VEC cppVar_50990 = (cppVar_50980) ? cppVar_50984 : cppVar_50989;
	bool cppVar_50992 = (cppVar_50990 == 141);
	BIT_VEC cppVar_50993 = PC + 1;
	cppVar_50993 = (cppVar_50993 & cppMask_un_16_);
	BIT_VEC cppVar_50994 = ROM.rd(cppVar_50993);
	BIT_VEC cppVar_50995 = (cppVar_50994 >> 7) & cppMask_un_1_;
	bool cppVar_50996 = (cppVar_50995 == 1);
	BIT_VEC cppVar_50997 = PC + 1;
	cppVar_50997 = (cppVar_50997 & cppMask_un_16_);
	BIT_VEC cppVar_50998 = ROM.rd(cppVar_50997);
	BIT_VEC cppVar_50999 = (cppVar_50998 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51000 = (cppVar_50999 << 3) | 0;
	cppVar_51000 = (cppVar_51000 & cppMask_un_8_);
	BIT_VEC cppVar_51001 = PC + 1;
	cppVar_51001 = (cppVar_51001 & cppMask_un_16_);
	BIT_VEC cppVar_51002 = ROM.rd(cppVar_51001);
	BIT_VEC cppVar_51003 = (cppVar_51002 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51004 = (cppVar_51003 & cppMask_un_5_);
	BIT_VEC cppVar_51005 = cppVar_51004 + 32;
	cppVar_51005 = (cppVar_51005 & cppMask_un_8_);
	BIT_VEC cppVar_51006 = (cppVar_50996) ? cppVar_51000 : cppVar_51005;
	bool cppVar_51008 = (cppVar_51006 == 144);
	BIT_VEC cppVar_51009 = PC + 1;
	cppVar_51009 = (cppVar_51009 & cppMask_un_16_);
	BIT_VEC cppVar_51010 = ROM.rd(cppVar_51009);
	BIT_VEC cppVar_51011 = (cppVar_51010 >> 7) & cppMask_un_1_;
	bool cppVar_51012 = (cppVar_51011 == 1);
	BIT_VEC cppVar_51013 = PC + 1;
	cppVar_51013 = (cppVar_51013 & cppMask_un_16_);
	BIT_VEC cppVar_51014 = ROM.rd(cppVar_51013);
	BIT_VEC cppVar_51015 = (cppVar_51014 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51016 = (cppVar_51015 << 3) | 0;
	cppVar_51016 = (cppVar_51016 & cppMask_un_8_);
	BIT_VEC cppVar_51017 = PC + 1;
	cppVar_51017 = (cppVar_51017 & cppMask_un_16_);
	BIT_VEC cppVar_51018 = ROM.rd(cppVar_51017);
	BIT_VEC cppVar_51019 = (cppVar_51018 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51020 = (cppVar_51019 & cppMask_un_5_);
	BIT_VEC cppVar_51021 = cppVar_51020 + 32;
	cppVar_51021 = (cppVar_51021 & cppMask_un_8_);
	BIT_VEC cppVar_51022 = (cppVar_51012) ? cppVar_51016 : cppVar_51021;
	bool cppVar_51024 = (cppVar_51022 == 152);
	BIT_VEC cppVar_51025 = PC + 1;
	cppVar_51025 = (cppVar_51025 & cppMask_un_16_);
	BIT_VEC cppVar_51026 = ROM.rd(cppVar_51025);
	BIT_VEC cppVar_51027 = (cppVar_51026 >> 7) & cppMask_un_1_;
	bool cppVar_51028 = (cppVar_51027 == 1);
	BIT_VEC cppVar_51029 = PC + 1;
	cppVar_51029 = (cppVar_51029 & cppMask_un_16_);
	BIT_VEC cppVar_51030 = ROM.rd(cppVar_51029);
	BIT_VEC cppVar_51031 = (cppVar_51030 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51032 = (cppVar_51031 << 3) | 0;
	cppVar_51032 = (cppVar_51032 & cppMask_un_8_);
	BIT_VEC cppVar_51033 = PC + 1;
	cppVar_51033 = (cppVar_51033 & cppMask_un_16_);
	BIT_VEC cppVar_51034 = ROM.rd(cppVar_51033);
	BIT_VEC cppVar_51035 = (cppVar_51034 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51036 = (cppVar_51035 & cppMask_un_5_);
	BIT_VEC cppVar_51037 = cppVar_51036 + 32;
	cppVar_51037 = (cppVar_51037 & cppMask_un_8_);
	BIT_VEC cppVar_51038 = (cppVar_51028) ? cppVar_51032 : cppVar_51037;
	bool cppVar_51040 = (cppVar_51038 == 153);
	BIT_VEC cppVar_51041 = PC + 1;
	cppVar_51041 = (cppVar_51041 & cppMask_un_16_);
	BIT_VEC cppVar_51042 = ROM.rd(cppVar_51041);
	BIT_VEC cppVar_51043 = (cppVar_51042 >> 7) & cppMask_un_1_;
	bool cppVar_51044 = (cppVar_51043 == 1);
	BIT_VEC cppVar_51045 = PC + 1;
	cppVar_51045 = (cppVar_51045 & cppMask_un_16_);
	BIT_VEC cppVar_51046 = ROM.rd(cppVar_51045);
	BIT_VEC cppVar_51047 = (cppVar_51046 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51048 = (cppVar_51047 << 3) | 0;
	cppVar_51048 = (cppVar_51048 & cppMask_un_8_);
	BIT_VEC cppVar_51049 = PC + 1;
	cppVar_51049 = (cppVar_51049 & cppMask_un_16_);
	BIT_VEC cppVar_51050 = ROM.rd(cppVar_51049);
	BIT_VEC cppVar_51051 = (cppVar_51050 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51052 = (cppVar_51051 & cppMask_un_5_);
	BIT_VEC cppVar_51053 = cppVar_51052 + 32;
	cppVar_51053 = (cppVar_51053 & cppMask_un_8_);
	BIT_VEC cppVar_51054 = (cppVar_51044) ? cppVar_51048 : cppVar_51053;
	bool cppVar_51056 = (cppVar_51054 == 160);
	BIT_VEC cppVar_51057 = PC + 1;
	cppVar_51057 = (cppVar_51057 & cppMask_un_16_);
	BIT_VEC cppVar_51058 = ROM.rd(cppVar_51057);
	BIT_VEC cppVar_51059 = (cppVar_51058 >> 7) & cppMask_un_1_;
	bool cppVar_51060 = (cppVar_51059 == 1);
	BIT_VEC cppVar_51061 = PC + 1;
	cppVar_51061 = (cppVar_51061 & cppMask_un_16_);
	BIT_VEC cppVar_51062 = ROM.rd(cppVar_51061);
	BIT_VEC cppVar_51063 = (cppVar_51062 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51064 = (cppVar_51063 << 3) | 0;
	cppVar_51064 = (cppVar_51064 & cppMask_un_8_);
	BIT_VEC cppVar_51065 = PC + 1;
	cppVar_51065 = (cppVar_51065 & cppMask_un_16_);
	BIT_VEC cppVar_51066 = ROM.rd(cppVar_51065);
	BIT_VEC cppVar_51067 = (cppVar_51066 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51068 = (cppVar_51067 & cppMask_un_5_);
	BIT_VEC cppVar_51069 = cppVar_51068 + 32;
	cppVar_51069 = (cppVar_51069 & cppMask_un_8_);
	BIT_VEC cppVar_51070 = (cppVar_51060) ? cppVar_51064 : cppVar_51069;
	bool cppVar_51072 = (cppVar_51070 == 168);
	BIT_VEC cppVar_51073 = PC + 1;
	cppVar_51073 = (cppVar_51073 & cppMask_un_16_);
	BIT_VEC cppVar_51074 = ROM.rd(cppVar_51073);
	BIT_VEC cppVar_51075 = (cppVar_51074 >> 7) & cppMask_un_1_;
	bool cppVar_51076 = (cppVar_51075 == 1);
	BIT_VEC cppVar_51077 = PC + 1;
	cppVar_51077 = (cppVar_51077 & cppMask_un_16_);
	BIT_VEC cppVar_51078 = ROM.rd(cppVar_51077);
	BIT_VEC cppVar_51079 = (cppVar_51078 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51080 = (cppVar_51079 << 3) | 0;
	cppVar_51080 = (cppVar_51080 & cppMask_un_8_);
	BIT_VEC cppVar_51081 = PC + 1;
	cppVar_51081 = (cppVar_51081 & cppMask_un_16_);
	BIT_VEC cppVar_51082 = ROM.rd(cppVar_51081);
	BIT_VEC cppVar_51083 = (cppVar_51082 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51084 = (cppVar_51083 & cppMask_un_5_);
	BIT_VEC cppVar_51085 = cppVar_51084 + 32;
	cppVar_51085 = (cppVar_51085 & cppMask_un_8_);
	BIT_VEC cppVar_51086 = (cppVar_51076) ? cppVar_51080 : cppVar_51085;
	bool cppVar_51088 = (cppVar_51086 == 176);
	BIT_VEC cppVar_51089 = PC + 1;
	cppVar_51089 = (cppVar_51089 & cppMask_un_16_);
	BIT_VEC cppVar_51090 = ROM.rd(cppVar_51089);
	BIT_VEC cppVar_51091 = (cppVar_51090 >> 7) & cppMask_un_1_;
	bool cppVar_51092 = (cppVar_51091 == 1);
	BIT_VEC cppVar_51093 = PC + 1;
	cppVar_51093 = (cppVar_51093 & cppMask_un_16_);
	BIT_VEC cppVar_51094 = ROM.rd(cppVar_51093);
	BIT_VEC cppVar_51095 = (cppVar_51094 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51096 = (cppVar_51095 << 3) | 0;
	cppVar_51096 = (cppVar_51096 & cppMask_un_8_);
	BIT_VEC cppVar_51097 = PC + 1;
	cppVar_51097 = (cppVar_51097 & cppMask_un_16_);
	BIT_VEC cppVar_51098 = ROM.rd(cppVar_51097);
	BIT_VEC cppVar_51099 = (cppVar_51098 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51100 = (cppVar_51099 & cppMask_un_5_);
	BIT_VEC cppVar_51101 = cppVar_51100 + 32;
	cppVar_51101 = (cppVar_51101 & cppMask_un_8_);
	BIT_VEC cppVar_51102 = (cppVar_51092) ? cppVar_51096 : cppVar_51101;
	bool cppVar_51104 = (cppVar_51102 == 184);
	BIT_VEC cppVar_51105 = PC + 1;
	cppVar_51105 = (cppVar_51105 & cppMask_un_16_);
	BIT_VEC cppVar_51106 = ROM.rd(cppVar_51105);
	BIT_VEC cppVar_51107 = (cppVar_51106 >> 7) & cppMask_un_1_;
	bool cppVar_51108 = (cppVar_51107 == 1);
	BIT_VEC cppVar_51109 = PC + 1;
	cppVar_51109 = (cppVar_51109 & cppMask_un_16_);
	BIT_VEC cppVar_51110 = ROM.rd(cppVar_51109);
	BIT_VEC cppVar_51111 = (cppVar_51110 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51112 = (cppVar_51111 << 3) | 0;
	cppVar_51112 = (cppVar_51112 & cppMask_un_8_);
	BIT_VEC cppVar_51113 = PC + 1;
	cppVar_51113 = (cppVar_51113 & cppMask_un_16_);
	BIT_VEC cppVar_51114 = ROM.rd(cppVar_51113);
	BIT_VEC cppVar_51115 = (cppVar_51114 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51116 = (cppVar_51115 & cppMask_un_5_);
	BIT_VEC cppVar_51117 = cppVar_51116 + 32;
	cppVar_51117 = (cppVar_51117 & cppMask_un_8_);
	BIT_VEC cppVar_51118 = (cppVar_51108) ? cppVar_51112 : cppVar_51117;
	bool cppVar_51120 = (cppVar_51118 == 208);
	BIT_VEC cppVar_51121 = PC + 1;
	cppVar_51121 = (cppVar_51121 & cppMask_un_16_);
	BIT_VEC cppVar_51122 = ROM.rd(cppVar_51121);
	BIT_VEC cppVar_51123 = (cppVar_51122 >> 7) & cppMask_un_1_;
	bool cppVar_51124 = (cppVar_51123 == 1);
	BIT_VEC cppVar_51125 = PC + 1;
	cppVar_51125 = (cppVar_51125 & cppMask_un_16_);
	BIT_VEC cppVar_51126 = ROM.rd(cppVar_51125);
	BIT_VEC cppVar_51127 = (cppVar_51126 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51128 = (cppVar_51127 << 3) | 0;
	cppVar_51128 = (cppVar_51128 & cppMask_un_8_);
	BIT_VEC cppVar_51129 = PC + 1;
	cppVar_51129 = (cppVar_51129 & cppMask_un_16_);
	BIT_VEC cppVar_51130 = ROM.rd(cppVar_51129);
	BIT_VEC cppVar_51131 = (cppVar_51130 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51132 = (cppVar_51131 & cppMask_un_5_);
	BIT_VEC cppVar_51133 = cppVar_51132 + 32;
	cppVar_51133 = (cppVar_51133 & cppMask_un_8_);
	BIT_VEC cppVar_51134 = (cppVar_51124) ? cppVar_51128 : cppVar_51133;
	bool cppVar_51136 = (cppVar_51134 == 224);
	BIT_VEC cppVar_51137 = PC + 1;
	cppVar_51137 = (cppVar_51137 & cppMask_un_16_);
	BIT_VEC cppVar_51138 = ROM.rd(cppVar_51137);
	BIT_VEC cppVar_51139 = (cppVar_51138 >> 7) & cppMask_un_1_;
	bool cppVar_51140 = (cppVar_51139 == 1);
	BIT_VEC cppVar_51141 = PC + 1;
	cppVar_51141 = (cppVar_51141 & cppMask_un_16_);
	BIT_VEC cppVar_51142 = ROM.rd(cppVar_51141);
	BIT_VEC cppVar_51143 = (cppVar_51142 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51144 = (cppVar_51143 << 3) | 0;
	cppVar_51144 = (cppVar_51144 & cppMask_un_8_);
	BIT_VEC cppVar_51145 = PC + 1;
	cppVar_51145 = (cppVar_51145 & cppMask_un_16_);
	BIT_VEC cppVar_51146 = ROM.rd(cppVar_51145);
	BIT_VEC cppVar_51147 = (cppVar_51146 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_51148 = (cppVar_51147 & cppMask_un_5_);
	BIT_VEC cppVar_51149 = cppVar_51148 + 32;
	cppVar_51149 = (cppVar_51149 & cppMask_un_8_);
	BIT_VEC cppVar_51150 = (cppVar_51140) ? cppVar_51144 : cppVar_51149;
	bool cppVar_51152 = (cppVar_51150 == 240);
	BIT_VEC cppVar_51154 = (cppVar_51152) ? B : 0;
	BIT_VEC cppVar_51155 = (cppVar_51136) ? ACC : cppVar_51154;
	BIT_VEC cppVar_51156 = (cppVar_51120) ? PSW : cppVar_51155;
	BIT_VEC cppVar_51157 = (cppVar_51104) ? IP : cppVar_51156;
	BIT_VEC cppVar_51158 = (cppVar_51088) ? P3 : cppVar_51157;
	BIT_VEC cppVar_51159 = (cppVar_51072) ? IE : cppVar_51158;
	BIT_VEC cppVar_51160 = (cppVar_51056) ? P2 : cppVar_51159;
	BIT_VEC cppVar_51161 = (cppVar_51040) ? SBUF : cppVar_51160;
	BIT_VEC cppVar_51162 = (cppVar_51024) ? SCON : cppVar_51161;
	BIT_VEC cppVar_51163 = (cppVar_51008) ? P1 : cppVar_51162;
	BIT_VEC cppVar_51164 = (cppVar_50992) ? TH1 : cppVar_51163;
	BIT_VEC cppVar_51165 = (cppVar_50976) ? TL1 : cppVar_51164;
	BIT_VEC cppVar_51166 = (cppVar_50960) ? TH0 : cppVar_51165;
	BIT_VEC cppVar_51167 = (cppVar_50944) ? TL0 : cppVar_51166;
	BIT_VEC cppVar_51168 = (cppVar_50928) ? TMOD : cppVar_51167;
	BIT_VEC cppVar_51169 = (cppVar_50912) ? TCON : cppVar_51168;
	BIT_VEC cppVar_51170 = (cppVar_50896) ? PCON : cppVar_51169;
	BIT_VEC cppVar_51171 = (cppVar_50880) ? DPH : cppVar_51170;
	BIT_VEC cppVar_51172 = (cppVar_50864) ? DPL : cppVar_51171;
	BIT_VEC cppVar_51173 = (cppVar_50848) ? SP : cppVar_51172;
	BIT_VEC cppVar_51174 = (cppVar_50832) ? P0 : cppVar_51173;
	BIT_VEC cppVar_51175 = (cppVar_50801) ? cppVar_50816 : cppVar_51174;
	BIT_VEC cppVar_51176 = cppVar_50784 & cppVar_51175;
	BIT_VEC cppVar_51177 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_51178 = (cppVar_51177 & cppMask_un_1_);
	BIT_VEC cppVar_51179 = PC + 1;
	cppVar_51179 = (cppVar_51179 & cppMask_un_16_);
	BIT_VEC cppVar_51180 = ROM.rd(cppVar_51179);
	BIT_VEC cppVar_51181 = (cppVar_51180 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_51182 = (cppVar_51181 & cppMask_un_3_);
	BIT_VEC cppVar_51183 = cppVar_51178 << static_cast<unsigned>(cppVar_51182);
	cppVar_51183 = (cppVar_51183 & cppMask_un_8_);
	BIT_VEC cppVar_51184 = cppVar_51176 | cppVar_51183;
	BIT_VEC cppVar_51185 = (cppVar_50777) ? cppVar_51184 : PSW;
	BIT_VEC cppVar_51186 = ROM.rd(PC);
	bool cppVar_51188 = (cppVar_51186 == 143);
	BIT_VEC cppVar_51190 = PC + 1;
	cppVar_51190 = (cppVar_51190 & cppMask_un_16_);
	BIT_VEC cppVar_51191 = ROM.rd(cppVar_51190);
	bool cppVar_51193 = (cppVar_51191 == 208);
	BIT_VEC cppVar_51195 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51197 = (cppVar_51195 << 3) | 7;
	cppVar_51197 = (cppVar_51197 & cppMask_un_5_);
	BIT_VEC cppVar_51198 = (0 << 5) | cppVar_51197;
	cppVar_51198 = (cppVar_51198 & cppMask_un_8_);
	BIT_VEC cppVar_51199 = (cppVar_51198 >> 7) & cppMask_un_1_;
	bool cppVar_51201 = (cppVar_51199 == 0);
	BIT_VEC cppVar_51202 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51203 = (cppVar_51202 << 3) | 7;
	cppVar_51203 = (cppVar_51203 & cppMask_un_5_);
	BIT_VEC cppVar_51204 = (0 << 5) | cppVar_51203;
	cppVar_51204 = (cppVar_51204 & cppMask_un_8_);
	BIT_VEC cppVar_51205 = IRAM.rd(cppVar_51204);
	BIT_VEC cppVar_51206 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51207 = (cppVar_51206 << 3) | 7;
	cppVar_51207 = (cppVar_51207 & cppMask_un_5_);
	BIT_VEC cppVar_51208 = (0 << 5) | cppVar_51207;
	cppVar_51208 = (cppVar_51208 & cppMask_un_8_);
	bool cppVar_51210 = (cppVar_51208 == 128);
	BIT_VEC cppVar_51211 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51212 = (cppVar_51211 << 3) | 7;
	cppVar_51212 = (cppVar_51212 & cppMask_un_5_);
	BIT_VEC cppVar_51213 = (0 << 5) | cppVar_51212;
	cppVar_51213 = (cppVar_51213 & cppMask_un_8_);
	bool cppVar_51215 = (cppVar_51213 == 129);
	BIT_VEC cppVar_51216 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51217 = (cppVar_51216 << 3) | 7;
	cppVar_51217 = (cppVar_51217 & cppMask_un_5_);
	BIT_VEC cppVar_51218 = (0 << 5) | cppVar_51217;
	cppVar_51218 = (cppVar_51218 & cppMask_un_8_);
	bool cppVar_51220 = (cppVar_51218 == 130);
	BIT_VEC cppVar_51221 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51222 = (cppVar_51221 << 3) | 7;
	cppVar_51222 = (cppVar_51222 & cppMask_un_5_);
	BIT_VEC cppVar_51223 = (0 << 5) | cppVar_51222;
	cppVar_51223 = (cppVar_51223 & cppMask_un_8_);
	bool cppVar_51225 = (cppVar_51223 == 131);
	BIT_VEC cppVar_51226 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51227 = (cppVar_51226 << 3) | 7;
	cppVar_51227 = (cppVar_51227 & cppMask_un_5_);
	BIT_VEC cppVar_51228 = (0 << 5) | cppVar_51227;
	cppVar_51228 = (cppVar_51228 & cppMask_un_8_);
	bool cppVar_51230 = (cppVar_51228 == 135);
	BIT_VEC cppVar_51231 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51232 = (cppVar_51231 << 3) | 7;
	cppVar_51232 = (cppVar_51232 & cppMask_un_5_);
	BIT_VEC cppVar_51233 = (0 << 5) | cppVar_51232;
	cppVar_51233 = (cppVar_51233 & cppMask_un_8_);
	bool cppVar_51235 = (cppVar_51233 == 136);
	BIT_VEC cppVar_51236 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51237 = (cppVar_51236 << 3) | 7;
	cppVar_51237 = (cppVar_51237 & cppMask_un_5_);
	BIT_VEC cppVar_51238 = (0 << 5) | cppVar_51237;
	cppVar_51238 = (cppVar_51238 & cppMask_un_8_);
	bool cppVar_51240 = (cppVar_51238 == 137);
	BIT_VEC cppVar_51241 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51242 = (cppVar_51241 << 3) | 7;
	cppVar_51242 = (cppVar_51242 & cppMask_un_5_);
	BIT_VEC cppVar_51243 = (0 << 5) | cppVar_51242;
	cppVar_51243 = (cppVar_51243 & cppMask_un_8_);
	bool cppVar_51245 = (cppVar_51243 == 138);
	BIT_VEC cppVar_51246 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51247 = (cppVar_51246 << 3) | 7;
	cppVar_51247 = (cppVar_51247 & cppMask_un_5_);
	BIT_VEC cppVar_51248 = (0 << 5) | cppVar_51247;
	cppVar_51248 = (cppVar_51248 & cppMask_un_8_);
	bool cppVar_51250 = (cppVar_51248 == 140);
	BIT_VEC cppVar_51251 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51252 = (cppVar_51251 << 3) | 7;
	cppVar_51252 = (cppVar_51252 & cppMask_un_5_);
	BIT_VEC cppVar_51253 = (0 << 5) | cppVar_51252;
	cppVar_51253 = (cppVar_51253 & cppMask_un_8_);
	bool cppVar_51255 = (cppVar_51253 == 139);
	BIT_VEC cppVar_51256 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51257 = (cppVar_51256 << 3) | 7;
	cppVar_51257 = (cppVar_51257 & cppMask_un_5_);
	BIT_VEC cppVar_51258 = (0 << 5) | cppVar_51257;
	cppVar_51258 = (cppVar_51258 & cppMask_un_8_);
	bool cppVar_51260 = (cppVar_51258 == 141);
	BIT_VEC cppVar_51261 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51262 = (cppVar_51261 << 3) | 7;
	cppVar_51262 = (cppVar_51262 & cppMask_un_5_);
	BIT_VEC cppVar_51263 = (0 << 5) | cppVar_51262;
	cppVar_51263 = (cppVar_51263 & cppMask_un_8_);
	bool cppVar_51265 = (cppVar_51263 == 144);
	BIT_VEC cppVar_51266 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51267 = (cppVar_51266 << 3) | 7;
	cppVar_51267 = (cppVar_51267 & cppMask_un_5_);
	BIT_VEC cppVar_51268 = (0 << 5) | cppVar_51267;
	cppVar_51268 = (cppVar_51268 & cppMask_un_8_);
	bool cppVar_51270 = (cppVar_51268 == 152);
	BIT_VEC cppVar_51271 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51272 = (cppVar_51271 << 3) | 7;
	cppVar_51272 = (cppVar_51272 & cppMask_un_5_);
	BIT_VEC cppVar_51273 = (0 << 5) | cppVar_51272;
	cppVar_51273 = (cppVar_51273 & cppMask_un_8_);
	bool cppVar_51275 = (cppVar_51273 == 153);
	BIT_VEC cppVar_51276 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51277 = (cppVar_51276 << 3) | 7;
	cppVar_51277 = (cppVar_51277 & cppMask_un_5_);
	BIT_VEC cppVar_51278 = (0 << 5) | cppVar_51277;
	cppVar_51278 = (cppVar_51278 & cppMask_un_8_);
	bool cppVar_51280 = (cppVar_51278 == 160);
	BIT_VEC cppVar_51281 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51282 = (cppVar_51281 << 3) | 7;
	cppVar_51282 = (cppVar_51282 & cppMask_un_5_);
	BIT_VEC cppVar_51283 = (0 << 5) | cppVar_51282;
	cppVar_51283 = (cppVar_51283 & cppMask_un_8_);
	bool cppVar_51285 = (cppVar_51283 == 168);
	BIT_VEC cppVar_51286 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51287 = (cppVar_51286 << 3) | 7;
	cppVar_51287 = (cppVar_51287 & cppMask_un_5_);
	BIT_VEC cppVar_51288 = (0 << 5) | cppVar_51287;
	cppVar_51288 = (cppVar_51288 & cppMask_un_8_);
	bool cppVar_51290 = (cppVar_51288 == 176);
	BIT_VEC cppVar_51291 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51292 = (cppVar_51291 << 3) | 7;
	cppVar_51292 = (cppVar_51292 & cppMask_un_5_);
	BIT_VEC cppVar_51293 = (0 << 5) | cppVar_51292;
	cppVar_51293 = (cppVar_51293 & cppMask_un_8_);
	bool cppVar_51295 = (cppVar_51293 == 184);
	BIT_VEC cppVar_51296 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51297 = (cppVar_51296 << 3) | 7;
	cppVar_51297 = (cppVar_51297 & cppMask_un_5_);
	BIT_VEC cppVar_51298 = (0 << 5) | cppVar_51297;
	cppVar_51298 = (cppVar_51298 & cppMask_un_8_);
	bool cppVar_51300 = (cppVar_51298 == 208);
	BIT_VEC cppVar_51301 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51302 = (cppVar_51301 << 3) | 7;
	cppVar_51302 = (cppVar_51302 & cppMask_un_5_);
	BIT_VEC cppVar_51303 = (0 << 5) | cppVar_51302;
	cppVar_51303 = (cppVar_51303 & cppMask_un_8_);
	bool cppVar_51305 = (cppVar_51303 == 224);
	BIT_VEC cppVar_51306 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51307 = (cppVar_51306 << 3) | 7;
	cppVar_51307 = (cppVar_51307 & cppMask_un_5_);
	BIT_VEC cppVar_51308 = (0 << 5) | cppVar_51307;
	cppVar_51308 = (cppVar_51308 & cppMask_un_8_);
	bool cppVar_51310 = (cppVar_51308 == 240);
	BIT_VEC cppVar_51312 = (cppVar_51310) ? B : 0;
	BIT_VEC cppVar_51313 = (cppVar_51305) ? ACC : cppVar_51312;
	BIT_VEC cppVar_51314 = (cppVar_51300) ? PSW : cppVar_51313;
	BIT_VEC cppVar_51315 = (cppVar_51295) ? IP : cppVar_51314;
	BIT_VEC cppVar_51316 = (cppVar_51290) ? P3 : cppVar_51315;
	BIT_VEC cppVar_51317 = (cppVar_51285) ? IE : cppVar_51316;
	BIT_VEC cppVar_51318 = (cppVar_51280) ? P2 : cppVar_51317;
	BIT_VEC cppVar_51319 = (cppVar_51275) ? SBUF : cppVar_51318;
	BIT_VEC cppVar_51320 = (cppVar_51270) ? SCON : cppVar_51319;
	BIT_VEC cppVar_51321 = (cppVar_51265) ? P1 : cppVar_51320;
	BIT_VEC cppVar_51322 = (cppVar_51260) ? TH1 : cppVar_51321;
	BIT_VEC cppVar_51323 = (cppVar_51255) ? TL1 : cppVar_51322;
	BIT_VEC cppVar_51324 = (cppVar_51250) ? TH0 : cppVar_51323;
	BIT_VEC cppVar_51325 = (cppVar_51245) ? TL0 : cppVar_51324;
	BIT_VEC cppVar_51326 = (cppVar_51240) ? TMOD : cppVar_51325;
	BIT_VEC cppVar_51327 = (cppVar_51235) ? TCON : cppVar_51326;
	BIT_VEC cppVar_51328 = (cppVar_51230) ? PCON : cppVar_51327;
	BIT_VEC cppVar_51329 = (cppVar_51225) ? DPH : cppVar_51328;
	BIT_VEC cppVar_51330 = (cppVar_51220) ? DPL : cppVar_51329;
	BIT_VEC cppVar_51331 = (cppVar_51215) ? SP : cppVar_51330;
	BIT_VEC cppVar_51332 = (cppVar_51210) ? P0 : cppVar_51331;
	BIT_VEC cppVar_51333 = (cppVar_51201) ? cppVar_51205 : cppVar_51332;
	BIT_VEC cppVar_51334 = (cppVar_51193) ? cppVar_51333 : PSW;
	BIT_VEC cppVar_51335 = ROM.rd(PC);
	bool cppVar_51337 = (cppVar_51335 == 142);
	BIT_VEC cppVar_51339 = PC + 1;
	cppVar_51339 = (cppVar_51339 & cppMask_un_16_);
	BIT_VEC cppVar_51340 = ROM.rd(cppVar_51339);
	bool cppVar_51342 = (cppVar_51340 == 208);
	BIT_VEC cppVar_51344 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51346 = (cppVar_51344 << 3) | 6;
	cppVar_51346 = (cppVar_51346 & cppMask_un_5_);
	BIT_VEC cppVar_51347 = (0 << 5) | cppVar_51346;
	cppVar_51347 = (cppVar_51347 & cppMask_un_8_);
	BIT_VEC cppVar_51348 = (cppVar_51347 >> 7) & cppMask_un_1_;
	bool cppVar_51350 = (cppVar_51348 == 0);
	BIT_VEC cppVar_51351 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51352 = (cppVar_51351 << 3) | 6;
	cppVar_51352 = (cppVar_51352 & cppMask_un_5_);
	BIT_VEC cppVar_51353 = (0 << 5) | cppVar_51352;
	cppVar_51353 = (cppVar_51353 & cppMask_un_8_);
	BIT_VEC cppVar_51354 = IRAM.rd(cppVar_51353);
	BIT_VEC cppVar_51355 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51356 = (cppVar_51355 << 3) | 6;
	cppVar_51356 = (cppVar_51356 & cppMask_un_5_);
	BIT_VEC cppVar_51357 = (0 << 5) | cppVar_51356;
	cppVar_51357 = (cppVar_51357 & cppMask_un_8_);
	bool cppVar_51359 = (cppVar_51357 == 128);
	BIT_VEC cppVar_51360 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51361 = (cppVar_51360 << 3) | 6;
	cppVar_51361 = (cppVar_51361 & cppMask_un_5_);
	BIT_VEC cppVar_51362 = (0 << 5) | cppVar_51361;
	cppVar_51362 = (cppVar_51362 & cppMask_un_8_);
	bool cppVar_51364 = (cppVar_51362 == 129);
	BIT_VEC cppVar_51365 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51366 = (cppVar_51365 << 3) | 6;
	cppVar_51366 = (cppVar_51366 & cppMask_un_5_);
	BIT_VEC cppVar_51367 = (0 << 5) | cppVar_51366;
	cppVar_51367 = (cppVar_51367 & cppMask_un_8_);
	bool cppVar_51369 = (cppVar_51367 == 130);
	BIT_VEC cppVar_51370 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51371 = (cppVar_51370 << 3) | 6;
	cppVar_51371 = (cppVar_51371 & cppMask_un_5_);
	BIT_VEC cppVar_51372 = (0 << 5) | cppVar_51371;
	cppVar_51372 = (cppVar_51372 & cppMask_un_8_);
	bool cppVar_51374 = (cppVar_51372 == 131);
	BIT_VEC cppVar_51375 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51376 = (cppVar_51375 << 3) | 6;
	cppVar_51376 = (cppVar_51376 & cppMask_un_5_);
	BIT_VEC cppVar_51377 = (0 << 5) | cppVar_51376;
	cppVar_51377 = (cppVar_51377 & cppMask_un_8_);
	bool cppVar_51379 = (cppVar_51377 == 135);
	BIT_VEC cppVar_51380 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51381 = (cppVar_51380 << 3) | 6;
	cppVar_51381 = (cppVar_51381 & cppMask_un_5_);
	BIT_VEC cppVar_51382 = (0 << 5) | cppVar_51381;
	cppVar_51382 = (cppVar_51382 & cppMask_un_8_);
	bool cppVar_51384 = (cppVar_51382 == 136);
	BIT_VEC cppVar_51385 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51386 = (cppVar_51385 << 3) | 6;
	cppVar_51386 = (cppVar_51386 & cppMask_un_5_);
	BIT_VEC cppVar_51387 = (0 << 5) | cppVar_51386;
	cppVar_51387 = (cppVar_51387 & cppMask_un_8_);
	bool cppVar_51389 = (cppVar_51387 == 137);
	BIT_VEC cppVar_51390 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51391 = (cppVar_51390 << 3) | 6;
	cppVar_51391 = (cppVar_51391 & cppMask_un_5_);
	BIT_VEC cppVar_51392 = (0 << 5) | cppVar_51391;
	cppVar_51392 = (cppVar_51392 & cppMask_un_8_);
	bool cppVar_51394 = (cppVar_51392 == 138);
	BIT_VEC cppVar_51395 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51396 = (cppVar_51395 << 3) | 6;
	cppVar_51396 = (cppVar_51396 & cppMask_un_5_);
	BIT_VEC cppVar_51397 = (0 << 5) | cppVar_51396;
	cppVar_51397 = (cppVar_51397 & cppMask_un_8_);
	bool cppVar_51399 = (cppVar_51397 == 140);
	BIT_VEC cppVar_51400 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51401 = (cppVar_51400 << 3) | 6;
	cppVar_51401 = (cppVar_51401 & cppMask_un_5_);
	BIT_VEC cppVar_51402 = (0 << 5) | cppVar_51401;
	cppVar_51402 = (cppVar_51402 & cppMask_un_8_);
	bool cppVar_51404 = (cppVar_51402 == 139);
	BIT_VEC cppVar_51405 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51406 = (cppVar_51405 << 3) | 6;
	cppVar_51406 = (cppVar_51406 & cppMask_un_5_);
	BIT_VEC cppVar_51407 = (0 << 5) | cppVar_51406;
	cppVar_51407 = (cppVar_51407 & cppMask_un_8_);
	bool cppVar_51409 = (cppVar_51407 == 141);
	BIT_VEC cppVar_51410 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51411 = (cppVar_51410 << 3) | 6;
	cppVar_51411 = (cppVar_51411 & cppMask_un_5_);
	BIT_VEC cppVar_51412 = (0 << 5) | cppVar_51411;
	cppVar_51412 = (cppVar_51412 & cppMask_un_8_);
	bool cppVar_51414 = (cppVar_51412 == 144);
	BIT_VEC cppVar_51415 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51416 = (cppVar_51415 << 3) | 6;
	cppVar_51416 = (cppVar_51416 & cppMask_un_5_);
	BIT_VEC cppVar_51417 = (0 << 5) | cppVar_51416;
	cppVar_51417 = (cppVar_51417 & cppMask_un_8_);
	bool cppVar_51419 = (cppVar_51417 == 152);
	BIT_VEC cppVar_51420 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51421 = (cppVar_51420 << 3) | 6;
	cppVar_51421 = (cppVar_51421 & cppMask_un_5_);
	BIT_VEC cppVar_51422 = (0 << 5) | cppVar_51421;
	cppVar_51422 = (cppVar_51422 & cppMask_un_8_);
	bool cppVar_51424 = (cppVar_51422 == 153);
	BIT_VEC cppVar_51425 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51426 = (cppVar_51425 << 3) | 6;
	cppVar_51426 = (cppVar_51426 & cppMask_un_5_);
	BIT_VEC cppVar_51427 = (0 << 5) | cppVar_51426;
	cppVar_51427 = (cppVar_51427 & cppMask_un_8_);
	bool cppVar_51429 = (cppVar_51427 == 160);
	BIT_VEC cppVar_51430 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51431 = (cppVar_51430 << 3) | 6;
	cppVar_51431 = (cppVar_51431 & cppMask_un_5_);
	BIT_VEC cppVar_51432 = (0 << 5) | cppVar_51431;
	cppVar_51432 = (cppVar_51432 & cppMask_un_8_);
	bool cppVar_51434 = (cppVar_51432 == 168);
	BIT_VEC cppVar_51435 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51436 = (cppVar_51435 << 3) | 6;
	cppVar_51436 = (cppVar_51436 & cppMask_un_5_);
	BIT_VEC cppVar_51437 = (0 << 5) | cppVar_51436;
	cppVar_51437 = (cppVar_51437 & cppMask_un_8_);
	bool cppVar_51439 = (cppVar_51437 == 176);
	BIT_VEC cppVar_51440 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51441 = (cppVar_51440 << 3) | 6;
	cppVar_51441 = (cppVar_51441 & cppMask_un_5_);
	BIT_VEC cppVar_51442 = (0 << 5) | cppVar_51441;
	cppVar_51442 = (cppVar_51442 & cppMask_un_8_);
	bool cppVar_51444 = (cppVar_51442 == 184);
	BIT_VEC cppVar_51445 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51446 = (cppVar_51445 << 3) | 6;
	cppVar_51446 = (cppVar_51446 & cppMask_un_5_);
	BIT_VEC cppVar_51447 = (0 << 5) | cppVar_51446;
	cppVar_51447 = (cppVar_51447 & cppMask_un_8_);
	bool cppVar_51449 = (cppVar_51447 == 208);
	BIT_VEC cppVar_51450 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51451 = (cppVar_51450 << 3) | 6;
	cppVar_51451 = (cppVar_51451 & cppMask_un_5_);
	BIT_VEC cppVar_51452 = (0 << 5) | cppVar_51451;
	cppVar_51452 = (cppVar_51452 & cppMask_un_8_);
	bool cppVar_51454 = (cppVar_51452 == 224);
	BIT_VEC cppVar_51455 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51456 = (cppVar_51455 << 3) | 6;
	cppVar_51456 = (cppVar_51456 & cppMask_un_5_);
	BIT_VEC cppVar_51457 = (0 << 5) | cppVar_51456;
	cppVar_51457 = (cppVar_51457 & cppMask_un_8_);
	bool cppVar_51459 = (cppVar_51457 == 240);
	BIT_VEC cppVar_51461 = (cppVar_51459) ? B : 0;
	BIT_VEC cppVar_51462 = (cppVar_51454) ? ACC : cppVar_51461;
	BIT_VEC cppVar_51463 = (cppVar_51449) ? PSW : cppVar_51462;
	BIT_VEC cppVar_51464 = (cppVar_51444) ? IP : cppVar_51463;
	BIT_VEC cppVar_51465 = (cppVar_51439) ? P3 : cppVar_51464;
	BIT_VEC cppVar_51466 = (cppVar_51434) ? IE : cppVar_51465;
	BIT_VEC cppVar_51467 = (cppVar_51429) ? P2 : cppVar_51466;
	BIT_VEC cppVar_51468 = (cppVar_51424) ? SBUF : cppVar_51467;
	BIT_VEC cppVar_51469 = (cppVar_51419) ? SCON : cppVar_51468;
	BIT_VEC cppVar_51470 = (cppVar_51414) ? P1 : cppVar_51469;
	BIT_VEC cppVar_51471 = (cppVar_51409) ? TH1 : cppVar_51470;
	BIT_VEC cppVar_51472 = (cppVar_51404) ? TL1 : cppVar_51471;
	BIT_VEC cppVar_51473 = (cppVar_51399) ? TH0 : cppVar_51472;
	BIT_VEC cppVar_51474 = (cppVar_51394) ? TL0 : cppVar_51473;
	BIT_VEC cppVar_51475 = (cppVar_51389) ? TMOD : cppVar_51474;
	BIT_VEC cppVar_51476 = (cppVar_51384) ? TCON : cppVar_51475;
	BIT_VEC cppVar_51477 = (cppVar_51379) ? PCON : cppVar_51476;
	BIT_VEC cppVar_51478 = (cppVar_51374) ? DPH : cppVar_51477;
	BIT_VEC cppVar_51479 = (cppVar_51369) ? DPL : cppVar_51478;
	BIT_VEC cppVar_51480 = (cppVar_51364) ? SP : cppVar_51479;
	BIT_VEC cppVar_51481 = (cppVar_51359) ? P0 : cppVar_51480;
	BIT_VEC cppVar_51482 = (cppVar_51350) ? cppVar_51354 : cppVar_51481;
	BIT_VEC cppVar_51483 = (cppVar_51342) ? cppVar_51482 : PSW;
	BIT_VEC cppVar_51484 = ROM.rd(PC);
	bool cppVar_51486 = (cppVar_51484 == 141);
	BIT_VEC cppVar_51488 = PC + 1;
	cppVar_51488 = (cppVar_51488 & cppMask_un_16_);
	BIT_VEC cppVar_51489 = ROM.rd(cppVar_51488);
	bool cppVar_51491 = (cppVar_51489 == 208);
	BIT_VEC cppVar_51493 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51495 = (cppVar_51493 << 3) | 5;
	cppVar_51495 = (cppVar_51495 & cppMask_un_5_);
	BIT_VEC cppVar_51496 = (0 << 5) | cppVar_51495;
	cppVar_51496 = (cppVar_51496 & cppMask_un_8_);
	BIT_VEC cppVar_51497 = (cppVar_51496 >> 7) & cppMask_un_1_;
	bool cppVar_51499 = (cppVar_51497 == 0);
	BIT_VEC cppVar_51500 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51501 = (cppVar_51500 << 3) | 5;
	cppVar_51501 = (cppVar_51501 & cppMask_un_5_);
	BIT_VEC cppVar_51502 = (0 << 5) | cppVar_51501;
	cppVar_51502 = (cppVar_51502 & cppMask_un_8_);
	BIT_VEC cppVar_51503 = IRAM.rd(cppVar_51502);
	BIT_VEC cppVar_51504 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51505 = (cppVar_51504 << 3) | 5;
	cppVar_51505 = (cppVar_51505 & cppMask_un_5_);
	BIT_VEC cppVar_51506 = (0 << 5) | cppVar_51505;
	cppVar_51506 = (cppVar_51506 & cppMask_un_8_);
	bool cppVar_51508 = (cppVar_51506 == 128);
	BIT_VEC cppVar_51509 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51510 = (cppVar_51509 << 3) | 5;
	cppVar_51510 = (cppVar_51510 & cppMask_un_5_);
	BIT_VEC cppVar_51511 = (0 << 5) | cppVar_51510;
	cppVar_51511 = (cppVar_51511 & cppMask_un_8_);
	bool cppVar_51513 = (cppVar_51511 == 129);
	BIT_VEC cppVar_51514 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51515 = (cppVar_51514 << 3) | 5;
	cppVar_51515 = (cppVar_51515 & cppMask_un_5_);
	BIT_VEC cppVar_51516 = (0 << 5) | cppVar_51515;
	cppVar_51516 = (cppVar_51516 & cppMask_un_8_);
	bool cppVar_51518 = (cppVar_51516 == 130);
	BIT_VEC cppVar_51519 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51520 = (cppVar_51519 << 3) | 5;
	cppVar_51520 = (cppVar_51520 & cppMask_un_5_);
	BIT_VEC cppVar_51521 = (0 << 5) | cppVar_51520;
	cppVar_51521 = (cppVar_51521 & cppMask_un_8_);
	bool cppVar_51523 = (cppVar_51521 == 131);
	BIT_VEC cppVar_51524 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51525 = (cppVar_51524 << 3) | 5;
	cppVar_51525 = (cppVar_51525 & cppMask_un_5_);
	BIT_VEC cppVar_51526 = (0 << 5) | cppVar_51525;
	cppVar_51526 = (cppVar_51526 & cppMask_un_8_);
	bool cppVar_51528 = (cppVar_51526 == 135);
	BIT_VEC cppVar_51529 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51530 = (cppVar_51529 << 3) | 5;
	cppVar_51530 = (cppVar_51530 & cppMask_un_5_);
	BIT_VEC cppVar_51531 = (0 << 5) | cppVar_51530;
	cppVar_51531 = (cppVar_51531 & cppMask_un_8_);
	bool cppVar_51533 = (cppVar_51531 == 136);
	BIT_VEC cppVar_51534 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51535 = (cppVar_51534 << 3) | 5;
	cppVar_51535 = (cppVar_51535 & cppMask_un_5_);
	BIT_VEC cppVar_51536 = (0 << 5) | cppVar_51535;
	cppVar_51536 = (cppVar_51536 & cppMask_un_8_);
	bool cppVar_51538 = (cppVar_51536 == 137);
	BIT_VEC cppVar_51539 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51540 = (cppVar_51539 << 3) | 5;
	cppVar_51540 = (cppVar_51540 & cppMask_un_5_);
	BIT_VEC cppVar_51541 = (0 << 5) | cppVar_51540;
	cppVar_51541 = (cppVar_51541 & cppMask_un_8_);
	bool cppVar_51543 = (cppVar_51541 == 138);
	BIT_VEC cppVar_51544 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51545 = (cppVar_51544 << 3) | 5;
	cppVar_51545 = (cppVar_51545 & cppMask_un_5_);
	BIT_VEC cppVar_51546 = (0 << 5) | cppVar_51545;
	cppVar_51546 = (cppVar_51546 & cppMask_un_8_);
	bool cppVar_51548 = (cppVar_51546 == 140);
	BIT_VEC cppVar_51549 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51550 = (cppVar_51549 << 3) | 5;
	cppVar_51550 = (cppVar_51550 & cppMask_un_5_);
	BIT_VEC cppVar_51551 = (0 << 5) | cppVar_51550;
	cppVar_51551 = (cppVar_51551 & cppMask_un_8_);
	bool cppVar_51553 = (cppVar_51551 == 139);
	BIT_VEC cppVar_51554 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51555 = (cppVar_51554 << 3) | 5;
	cppVar_51555 = (cppVar_51555 & cppMask_un_5_);
	BIT_VEC cppVar_51556 = (0 << 5) | cppVar_51555;
	cppVar_51556 = (cppVar_51556 & cppMask_un_8_);
	bool cppVar_51558 = (cppVar_51556 == 141);
	BIT_VEC cppVar_51559 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51560 = (cppVar_51559 << 3) | 5;
	cppVar_51560 = (cppVar_51560 & cppMask_un_5_);
	BIT_VEC cppVar_51561 = (0 << 5) | cppVar_51560;
	cppVar_51561 = (cppVar_51561 & cppMask_un_8_);
	bool cppVar_51563 = (cppVar_51561 == 144);
	BIT_VEC cppVar_51564 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51565 = (cppVar_51564 << 3) | 5;
	cppVar_51565 = (cppVar_51565 & cppMask_un_5_);
	BIT_VEC cppVar_51566 = (0 << 5) | cppVar_51565;
	cppVar_51566 = (cppVar_51566 & cppMask_un_8_);
	bool cppVar_51568 = (cppVar_51566 == 152);
	BIT_VEC cppVar_51569 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51570 = (cppVar_51569 << 3) | 5;
	cppVar_51570 = (cppVar_51570 & cppMask_un_5_);
	BIT_VEC cppVar_51571 = (0 << 5) | cppVar_51570;
	cppVar_51571 = (cppVar_51571 & cppMask_un_8_);
	bool cppVar_51573 = (cppVar_51571 == 153);
	BIT_VEC cppVar_51574 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51575 = (cppVar_51574 << 3) | 5;
	cppVar_51575 = (cppVar_51575 & cppMask_un_5_);
	BIT_VEC cppVar_51576 = (0 << 5) | cppVar_51575;
	cppVar_51576 = (cppVar_51576 & cppMask_un_8_);
	bool cppVar_51578 = (cppVar_51576 == 160);
	BIT_VEC cppVar_51579 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51580 = (cppVar_51579 << 3) | 5;
	cppVar_51580 = (cppVar_51580 & cppMask_un_5_);
	BIT_VEC cppVar_51581 = (0 << 5) | cppVar_51580;
	cppVar_51581 = (cppVar_51581 & cppMask_un_8_);
	bool cppVar_51583 = (cppVar_51581 == 168);
	BIT_VEC cppVar_51584 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51585 = (cppVar_51584 << 3) | 5;
	cppVar_51585 = (cppVar_51585 & cppMask_un_5_);
	BIT_VEC cppVar_51586 = (0 << 5) | cppVar_51585;
	cppVar_51586 = (cppVar_51586 & cppMask_un_8_);
	bool cppVar_51588 = (cppVar_51586 == 176);
	BIT_VEC cppVar_51589 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51590 = (cppVar_51589 << 3) | 5;
	cppVar_51590 = (cppVar_51590 & cppMask_un_5_);
	BIT_VEC cppVar_51591 = (0 << 5) | cppVar_51590;
	cppVar_51591 = (cppVar_51591 & cppMask_un_8_);
	bool cppVar_51593 = (cppVar_51591 == 184);
	BIT_VEC cppVar_51594 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51595 = (cppVar_51594 << 3) | 5;
	cppVar_51595 = (cppVar_51595 & cppMask_un_5_);
	BIT_VEC cppVar_51596 = (0 << 5) | cppVar_51595;
	cppVar_51596 = (cppVar_51596 & cppMask_un_8_);
	bool cppVar_51598 = (cppVar_51596 == 208);
	BIT_VEC cppVar_51599 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51600 = (cppVar_51599 << 3) | 5;
	cppVar_51600 = (cppVar_51600 & cppMask_un_5_);
	BIT_VEC cppVar_51601 = (0 << 5) | cppVar_51600;
	cppVar_51601 = (cppVar_51601 & cppMask_un_8_);
	bool cppVar_51603 = (cppVar_51601 == 224);
	BIT_VEC cppVar_51604 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51605 = (cppVar_51604 << 3) | 5;
	cppVar_51605 = (cppVar_51605 & cppMask_un_5_);
	BIT_VEC cppVar_51606 = (0 << 5) | cppVar_51605;
	cppVar_51606 = (cppVar_51606 & cppMask_un_8_);
	bool cppVar_51608 = (cppVar_51606 == 240);
	BIT_VEC cppVar_51610 = (cppVar_51608) ? B : 0;
	BIT_VEC cppVar_51611 = (cppVar_51603) ? ACC : cppVar_51610;
	BIT_VEC cppVar_51612 = (cppVar_51598) ? PSW : cppVar_51611;
	BIT_VEC cppVar_51613 = (cppVar_51593) ? IP : cppVar_51612;
	BIT_VEC cppVar_51614 = (cppVar_51588) ? P3 : cppVar_51613;
	BIT_VEC cppVar_51615 = (cppVar_51583) ? IE : cppVar_51614;
	BIT_VEC cppVar_51616 = (cppVar_51578) ? P2 : cppVar_51615;
	BIT_VEC cppVar_51617 = (cppVar_51573) ? SBUF : cppVar_51616;
	BIT_VEC cppVar_51618 = (cppVar_51568) ? SCON : cppVar_51617;
	BIT_VEC cppVar_51619 = (cppVar_51563) ? P1 : cppVar_51618;
	BIT_VEC cppVar_51620 = (cppVar_51558) ? TH1 : cppVar_51619;
	BIT_VEC cppVar_51621 = (cppVar_51553) ? TL1 : cppVar_51620;
	BIT_VEC cppVar_51622 = (cppVar_51548) ? TH0 : cppVar_51621;
	BIT_VEC cppVar_51623 = (cppVar_51543) ? TL0 : cppVar_51622;
	BIT_VEC cppVar_51624 = (cppVar_51538) ? TMOD : cppVar_51623;
	BIT_VEC cppVar_51625 = (cppVar_51533) ? TCON : cppVar_51624;
	BIT_VEC cppVar_51626 = (cppVar_51528) ? PCON : cppVar_51625;
	BIT_VEC cppVar_51627 = (cppVar_51523) ? DPH : cppVar_51626;
	BIT_VEC cppVar_51628 = (cppVar_51518) ? DPL : cppVar_51627;
	BIT_VEC cppVar_51629 = (cppVar_51513) ? SP : cppVar_51628;
	BIT_VEC cppVar_51630 = (cppVar_51508) ? P0 : cppVar_51629;
	BIT_VEC cppVar_51631 = (cppVar_51499) ? cppVar_51503 : cppVar_51630;
	BIT_VEC cppVar_51632 = (cppVar_51491) ? cppVar_51631 : PSW;
	BIT_VEC cppVar_51633 = ROM.rd(PC);
	bool cppVar_51635 = (cppVar_51633 == 140);
	BIT_VEC cppVar_51637 = PC + 1;
	cppVar_51637 = (cppVar_51637 & cppMask_un_16_);
	BIT_VEC cppVar_51638 = ROM.rd(cppVar_51637);
	bool cppVar_51640 = (cppVar_51638 == 208);
	BIT_VEC cppVar_51642 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51644 = (cppVar_51642 << 3) | 4;
	cppVar_51644 = (cppVar_51644 & cppMask_un_5_);
	BIT_VEC cppVar_51645 = (0 << 5) | cppVar_51644;
	cppVar_51645 = (cppVar_51645 & cppMask_un_8_);
	BIT_VEC cppVar_51646 = (cppVar_51645 >> 7) & cppMask_un_1_;
	bool cppVar_51648 = (cppVar_51646 == 0);
	BIT_VEC cppVar_51649 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51650 = (cppVar_51649 << 3) | 4;
	cppVar_51650 = (cppVar_51650 & cppMask_un_5_);
	BIT_VEC cppVar_51651 = (0 << 5) | cppVar_51650;
	cppVar_51651 = (cppVar_51651 & cppMask_un_8_);
	BIT_VEC cppVar_51652 = IRAM.rd(cppVar_51651);
	BIT_VEC cppVar_51653 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51654 = (cppVar_51653 << 3) | 4;
	cppVar_51654 = (cppVar_51654 & cppMask_un_5_);
	BIT_VEC cppVar_51655 = (0 << 5) | cppVar_51654;
	cppVar_51655 = (cppVar_51655 & cppMask_un_8_);
	bool cppVar_51657 = (cppVar_51655 == 128);
	BIT_VEC cppVar_51658 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51659 = (cppVar_51658 << 3) | 4;
	cppVar_51659 = (cppVar_51659 & cppMask_un_5_);
	BIT_VEC cppVar_51660 = (0 << 5) | cppVar_51659;
	cppVar_51660 = (cppVar_51660 & cppMask_un_8_);
	bool cppVar_51662 = (cppVar_51660 == 129);
	BIT_VEC cppVar_51663 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51664 = (cppVar_51663 << 3) | 4;
	cppVar_51664 = (cppVar_51664 & cppMask_un_5_);
	BIT_VEC cppVar_51665 = (0 << 5) | cppVar_51664;
	cppVar_51665 = (cppVar_51665 & cppMask_un_8_);
	bool cppVar_51667 = (cppVar_51665 == 130);
	BIT_VEC cppVar_51668 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51669 = (cppVar_51668 << 3) | 4;
	cppVar_51669 = (cppVar_51669 & cppMask_un_5_);
	BIT_VEC cppVar_51670 = (0 << 5) | cppVar_51669;
	cppVar_51670 = (cppVar_51670 & cppMask_un_8_);
	bool cppVar_51672 = (cppVar_51670 == 131);
	BIT_VEC cppVar_51673 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51674 = (cppVar_51673 << 3) | 4;
	cppVar_51674 = (cppVar_51674 & cppMask_un_5_);
	BIT_VEC cppVar_51675 = (0 << 5) | cppVar_51674;
	cppVar_51675 = (cppVar_51675 & cppMask_un_8_);
	bool cppVar_51677 = (cppVar_51675 == 135);
	BIT_VEC cppVar_51678 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51679 = (cppVar_51678 << 3) | 4;
	cppVar_51679 = (cppVar_51679 & cppMask_un_5_);
	BIT_VEC cppVar_51680 = (0 << 5) | cppVar_51679;
	cppVar_51680 = (cppVar_51680 & cppMask_un_8_);
	bool cppVar_51682 = (cppVar_51680 == 136);
	BIT_VEC cppVar_51683 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51684 = (cppVar_51683 << 3) | 4;
	cppVar_51684 = (cppVar_51684 & cppMask_un_5_);
	BIT_VEC cppVar_51685 = (0 << 5) | cppVar_51684;
	cppVar_51685 = (cppVar_51685 & cppMask_un_8_);
	bool cppVar_51687 = (cppVar_51685 == 137);
	BIT_VEC cppVar_51688 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51689 = (cppVar_51688 << 3) | 4;
	cppVar_51689 = (cppVar_51689 & cppMask_un_5_);
	BIT_VEC cppVar_51690 = (0 << 5) | cppVar_51689;
	cppVar_51690 = (cppVar_51690 & cppMask_un_8_);
	bool cppVar_51692 = (cppVar_51690 == 138);
	BIT_VEC cppVar_51693 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51694 = (cppVar_51693 << 3) | 4;
	cppVar_51694 = (cppVar_51694 & cppMask_un_5_);
	BIT_VEC cppVar_51695 = (0 << 5) | cppVar_51694;
	cppVar_51695 = (cppVar_51695 & cppMask_un_8_);
	bool cppVar_51697 = (cppVar_51695 == 140);
	BIT_VEC cppVar_51698 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51699 = (cppVar_51698 << 3) | 4;
	cppVar_51699 = (cppVar_51699 & cppMask_un_5_);
	BIT_VEC cppVar_51700 = (0 << 5) | cppVar_51699;
	cppVar_51700 = (cppVar_51700 & cppMask_un_8_);
	bool cppVar_51702 = (cppVar_51700 == 139);
	BIT_VEC cppVar_51703 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51704 = (cppVar_51703 << 3) | 4;
	cppVar_51704 = (cppVar_51704 & cppMask_un_5_);
	BIT_VEC cppVar_51705 = (0 << 5) | cppVar_51704;
	cppVar_51705 = (cppVar_51705 & cppMask_un_8_);
	bool cppVar_51707 = (cppVar_51705 == 141);
	BIT_VEC cppVar_51708 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51709 = (cppVar_51708 << 3) | 4;
	cppVar_51709 = (cppVar_51709 & cppMask_un_5_);
	BIT_VEC cppVar_51710 = (0 << 5) | cppVar_51709;
	cppVar_51710 = (cppVar_51710 & cppMask_un_8_);
	bool cppVar_51712 = (cppVar_51710 == 144);
	BIT_VEC cppVar_51713 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51714 = (cppVar_51713 << 3) | 4;
	cppVar_51714 = (cppVar_51714 & cppMask_un_5_);
	BIT_VEC cppVar_51715 = (0 << 5) | cppVar_51714;
	cppVar_51715 = (cppVar_51715 & cppMask_un_8_);
	bool cppVar_51717 = (cppVar_51715 == 152);
	BIT_VEC cppVar_51718 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51719 = (cppVar_51718 << 3) | 4;
	cppVar_51719 = (cppVar_51719 & cppMask_un_5_);
	BIT_VEC cppVar_51720 = (0 << 5) | cppVar_51719;
	cppVar_51720 = (cppVar_51720 & cppMask_un_8_);
	bool cppVar_51722 = (cppVar_51720 == 153);
	BIT_VEC cppVar_51723 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51724 = (cppVar_51723 << 3) | 4;
	cppVar_51724 = (cppVar_51724 & cppMask_un_5_);
	BIT_VEC cppVar_51725 = (0 << 5) | cppVar_51724;
	cppVar_51725 = (cppVar_51725 & cppMask_un_8_);
	bool cppVar_51727 = (cppVar_51725 == 160);
	BIT_VEC cppVar_51728 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51729 = (cppVar_51728 << 3) | 4;
	cppVar_51729 = (cppVar_51729 & cppMask_un_5_);
	BIT_VEC cppVar_51730 = (0 << 5) | cppVar_51729;
	cppVar_51730 = (cppVar_51730 & cppMask_un_8_);
	bool cppVar_51732 = (cppVar_51730 == 168);
	BIT_VEC cppVar_51733 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51734 = (cppVar_51733 << 3) | 4;
	cppVar_51734 = (cppVar_51734 & cppMask_un_5_);
	BIT_VEC cppVar_51735 = (0 << 5) | cppVar_51734;
	cppVar_51735 = (cppVar_51735 & cppMask_un_8_);
	bool cppVar_51737 = (cppVar_51735 == 176);
	BIT_VEC cppVar_51738 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51739 = (cppVar_51738 << 3) | 4;
	cppVar_51739 = (cppVar_51739 & cppMask_un_5_);
	BIT_VEC cppVar_51740 = (0 << 5) | cppVar_51739;
	cppVar_51740 = (cppVar_51740 & cppMask_un_8_);
	bool cppVar_51742 = (cppVar_51740 == 184);
	BIT_VEC cppVar_51743 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51744 = (cppVar_51743 << 3) | 4;
	cppVar_51744 = (cppVar_51744 & cppMask_un_5_);
	BIT_VEC cppVar_51745 = (0 << 5) | cppVar_51744;
	cppVar_51745 = (cppVar_51745 & cppMask_un_8_);
	bool cppVar_51747 = (cppVar_51745 == 208);
	BIT_VEC cppVar_51748 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51749 = (cppVar_51748 << 3) | 4;
	cppVar_51749 = (cppVar_51749 & cppMask_un_5_);
	BIT_VEC cppVar_51750 = (0 << 5) | cppVar_51749;
	cppVar_51750 = (cppVar_51750 & cppMask_un_8_);
	bool cppVar_51752 = (cppVar_51750 == 224);
	BIT_VEC cppVar_51753 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51754 = (cppVar_51753 << 3) | 4;
	cppVar_51754 = (cppVar_51754 & cppMask_un_5_);
	BIT_VEC cppVar_51755 = (0 << 5) | cppVar_51754;
	cppVar_51755 = (cppVar_51755 & cppMask_un_8_);
	bool cppVar_51757 = (cppVar_51755 == 240);
	BIT_VEC cppVar_51759 = (cppVar_51757) ? B : 0;
	BIT_VEC cppVar_51760 = (cppVar_51752) ? ACC : cppVar_51759;
	BIT_VEC cppVar_51761 = (cppVar_51747) ? PSW : cppVar_51760;
	BIT_VEC cppVar_51762 = (cppVar_51742) ? IP : cppVar_51761;
	BIT_VEC cppVar_51763 = (cppVar_51737) ? P3 : cppVar_51762;
	BIT_VEC cppVar_51764 = (cppVar_51732) ? IE : cppVar_51763;
	BIT_VEC cppVar_51765 = (cppVar_51727) ? P2 : cppVar_51764;
	BIT_VEC cppVar_51766 = (cppVar_51722) ? SBUF : cppVar_51765;
	BIT_VEC cppVar_51767 = (cppVar_51717) ? SCON : cppVar_51766;
	BIT_VEC cppVar_51768 = (cppVar_51712) ? P1 : cppVar_51767;
	BIT_VEC cppVar_51769 = (cppVar_51707) ? TH1 : cppVar_51768;
	BIT_VEC cppVar_51770 = (cppVar_51702) ? TL1 : cppVar_51769;
	BIT_VEC cppVar_51771 = (cppVar_51697) ? TH0 : cppVar_51770;
	BIT_VEC cppVar_51772 = (cppVar_51692) ? TL0 : cppVar_51771;
	BIT_VEC cppVar_51773 = (cppVar_51687) ? TMOD : cppVar_51772;
	BIT_VEC cppVar_51774 = (cppVar_51682) ? TCON : cppVar_51773;
	BIT_VEC cppVar_51775 = (cppVar_51677) ? PCON : cppVar_51774;
	BIT_VEC cppVar_51776 = (cppVar_51672) ? DPH : cppVar_51775;
	BIT_VEC cppVar_51777 = (cppVar_51667) ? DPL : cppVar_51776;
	BIT_VEC cppVar_51778 = (cppVar_51662) ? SP : cppVar_51777;
	BIT_VEC cppVar_51779 = (cppVar_51657) ? P0 : cppVar_51778;
	BIT_VEC cppVar_51780 = (cppVar_51648) ? cppVar_51652 : cppVar_51779;
	BIT_VEC cppVar_51781 = (cppVar_51640) ? cppVar_51780 : PSW;
	BIT_VEC cppVar_51782 = ROM.rd(PC);
	bool cppVar_51784 = (cppVar_51782 == 139);
	BIT_VEC cppVar_51786 = PC + 1;
	cppVar_51786 = (cppVar_51786 & cppMask_un_16_);
	BIT_VEC cppVar_51787 = ROM.rd(cppVar_51786);
	bool cppVar_51789 = (cppVar_51787 == 208);
	BIT_VEC cppVar_51791 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51793 = (cppVar_51791 << 3) | 3;
	cppVar_51793 = (cppVar_51793 & cppMask_un_5_);
	BIT_VEC cppVar_51794 = (0 << 5) | cppVar_51793;
	cppVar_51794 = (cppVar_51794 & cppMask_un_8_);
	BIT_VEC cppVar_51795 = (cppVar_51794 >> 7) & cppMask_un_1_;
	bool cppVar_51797 = (cppVar_51795 == 0);
	BIT_VEC cppVar_51798 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51799 = (cppVar_51798 << 3) | 3;
	cppVar_51799 = (cppVar_51799 & cppMask_un_5_);
	BIT_VEC cppVar_51800 = (0 << 5) | cppVar_51799;
	cppVar_51800 = (cppVar_51800 & cppMask_un_8_);
	BIT_VEC cppVar_51801 = IRAM.rd(cppVar_51800);
	BIT_VEC cppVar_51802 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51803 = (cppVar_51802 << 3) | 3;
	cppVar_51803 = (cppVar_51803 & cppMask_un_5_);
	BIT_VEC cppVar_51804 = (0 << 5) | cppVar_51803;
	cppVar_51804 = (cppVar_51804 & cppMask_un_8_);
	bool cppVar_51806 = (cppVar_51804 == 128);
	BIT_VEC cppVar_51807 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51808 = (cppVar_51807 << 3) | 3;
	cppVar_51808 = (cppVar_51808 & cppMask_un_5_);
	BIT_VEC cppVar_51809 = (0 << 5) | cppVar_51808;
	cppVar_51809 = (cppVar_51809 & cppMask_un_8_);
	bool cppVar_51811 = (cppVar_51809 == 129);
	BIT_VEC cppVar_51812 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51813 = (cppVar_51812 << 3) | 3;
	cppVar_51813 = (cppVar_51813 & cppMask_un_5_);
	BIT_VEC cppVar_51814 = (0 << 5) | cppVar_51813;
	cppVar_51814 = (cppVar_51814 & cppMask_un_8_);
	bool cppVar_51816 = (cppVar_51814 == 130);
	BIT_VEC cppVar_51817 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51818 = (cppVar_51817 << 3) | 3;
	cppVar_51818 = (cppVar_51818 & cppMask_un_5_);
	BIT_VEC cppVar_51819 = (0 << 5) | cppVar_51818;
	cppVar_51819 = (cppVar_51819 & cppMask_un_8_);
	bool cppVar_51821 = (cppVar_51819 == 131);
	BIT_VEC cppVar_51822 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51823 = (cppVar_51822 << 3) | 3;
	cppVar_51823 = (cppVar_51823 & cppMask_un_5_);
	BIT_VEC cppVar_51824 = (0 << 5) | cppVar_51823;
	cppVar_51824 = (cppVar_51824 & cppMask_un_8_);
	bool cppVar_51826 = (cppVar_51824 == 135);
	BIT_VEC cppVar_51827 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51828 = (cppVar_51827 << 3) | 3;
	cppVar_51828 = (cppVar_51828 & cppMask_un_5_);
	BIT_VEC cppVar_51829 = (0 << 5) | cppVar_51828;
	cppVar_51829 = (cppVar_51829 & cppMask_un_8_);
	bool cppVar_51831 = (cppVar_51829 == 136);
	BIT_VEC cppVar_51832 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51833 = (cppVar_51832 << 3) | 3;
	cppVar_51833 = (cppVar_51833 & cppMask_un_5_);
	BIT_VEC cppVar_51834 = (0 << 5) | cppVar_51833;
	cppVar_51834 = (cppVar_51834 & cppMask_un_8_);
	bool cppVar_51836 = (cppVar_51834 == 137);
	BIT_VEC cppVar_51837 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51838 = (cppVar_51837 << 3) | 3;
	cppVar_51838 = (cppVar_51838 & cppMask_un_5_);
	BIT_VEC cppVar_51839 = (0 << 5) | cppVar_51838;
	cppVar_51839 = (cppVar_51839 & cppMask_un_8_);
	bool cppVar_51841 = (cppVar_51839 == 138);
	BIT_VEC cppVar_51842 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51843 = (cppVar_51842 << 3) | 3;
	cppVar_51843 = (cppVar_51843 & cppMask_un_5_);
	BIT_VEC cppVar_51844 = (0 << 5) | cppVar_51843;
	cppVar_51844 = (cppVar_51844 & cppMask_un_8_);
	bool cppVar_51846 = (cppVar_51844 == 140);
	BIT_VEC cppVar_51847 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51848 = (cppVar_51847 << 3) | 3;
	cppVar_51848 = (cppVar_51848 & cppMask_un_5_);
	BIT_VEC cppVar_51849 = (0 << 5) | cppVar_51848;
	cppVar_51849 = (cppVar_51849 & cppMask_un_8_);
	bool cppVar_51851 = (cppVar_51849 == 139);
	BIT_VEC cppVar_51852 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51853 = (cppVar_51852 << 3) | 3;
	cppVar_51853 = (cppVar_51853 & cppMask_un_5_);
	BIT_VEC cppVar_51854 = (0 << 5) | cppVar_51853;
	cppVar_51854 = (cppVar_51854 & cppMask_un_8_);
	bool cppVar_51856 = (cppVar_51854 == 141);
	BIT_VEC cppVar_51857 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51858 = (cppVar_51857 << 3) | 3;
	cppVar_51858 = (cppVar_51858 & cppMask_un_5_);
	BIT_VEC cppVar_51859 = (0 << 5) | cppVar_51858;
	cppVar_51859 = (cppVar_51859 & cppMask_un_8_);
	bool cppVar_51861 = (cppVar_51859 == 144);
	BIT_VEC cppVar_51862 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51863 = (cppVar_51862 << 3) | 3;
	cppVar_51863 = (cppVar_51863 & cppMask_un_5_);
	BIT_VEC cppVar_51864 = (0 << 5) | cppVar_51863;
	cppVar_51864 = (cppVar_51864 & cppMask_un_8_);
	bool cppVar_51866 = (cppVar_51864 == 152);
	BIT_VEC cppVar_51867 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51868 = (cppVar_51867 << 3) | 3;
	cppVar_51868 = (cppVar_51868 & cppMask_un_5_);
	BIT_VEC cppVar_51869 = (0 << 5) | cppVar_51868;
	cppVar_51869 = (cppVar_51869 & cppMask_un_8_);
	bool cppVar_51871 = (cppVar_51869 == 153);
	BIT_VEC cppVar_51872 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51873 = (cppVar_51872 << 3) | 3;
	cppVar_51873 = (cppVar_51873 & cppMask_un_5_);
	BIT_VEC cppVar_51874 = (0 << 5) | cppVar_51873;
	cppVar_51874 = (cppVar_51874 & cppMask_un_8_);
	bool cppVar_51876 = (cppVar_51874 == 160);
	BIT_VEC cppVar_51877 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51878 = (cppVar_51877 << 3) | 3;
	cppVar_51878 = (cppVar_51878 & cppMask_un_5_);
	BIT_VEC cppVar_51879 = (0 << 5) | cppVar_51878;
	cppVar_51879 = (cppVar_51879 & cppMask_un_8_);
	bool cppVar_51881 = (cppVar_51879 == 168);
	BIT_VEC cppVar_51882 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51883 = (cppVar_51882 << 3) | 3;
	cppVar_51883 = (cppVar_51883 & cppMask_un_5_);
	BIT_VEC cppVar_51884 = (0 << 5) | cppVar_51883;
	cppVar_51884 = (cppVar_51884 & cppMask_un_8_);
	bool cppVar_51886 = (cppVar_51884 == 176);
	BIT_VEC cppVar_51887 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51888 = (cppVar_51887 << 3) | 3;
	cppVar_51888 = (cppVar_51888 & cppMask_un_5_);
	BIT_VEC cppVar_51889 = (0 << 5) | cppVar_51888;
	cppVar_51889 = (cppVar_51889 & cppMask_un_8_);
	bool cppVar_51891 = (cppVar_51889 == 184);
	BIT_VEC cppVar_51892 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51893 = (cppVar_51892 << 3) | 3;
	cppVar_51893 = (cppVar_51893 & cppMask_un_5_);
	BIT_VEC cppVar_51894 = (0 << 5) | cppVar_51893;
	cppVar_51894 = (cppVar_51894 & cppMask_un_8_);
	bool cppVar_51896 = (cppVar_51894 == 208);
	BIT_VEC cppVar_51897 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51898 = (cppVar_51897 << 3) | 3;
	cppVar_51898 = (cppVar_51898 & cppMask_un_5_);
	BIT_VEC cppVar_51899 = (0 << 5) | cppVar_51898;
	cppVar_51899 = (cppVar_51899 & cppMask_un_8_);
	bool cppVar_51901 = (cppVar_51899 == 224);
	BIT_VEC cppVar_51902 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51903 = (cppVar_51902 << 3) | 3;
	cppVar_51903 = (cppVar_51903 & cppMask_un_5_);
	BIT_VEC cppVar_51904 = (0 << 5) | cppVar_51903;
	cppVar_51904 = (cppVar_51904 & cppMask_un_8_);
	bool cppVar_51906 = (cppVar_51904 == 240);
	BIT_VEC cppVar_51908 = (cppVar_51906) ? B : 0;
	BIT_VEC cppVar_51909 = (cppVar_51901) ? ACC : cppVar_51908;
	BIT_VEC cppVar_51910 = (cppVar_51896) ? PSW : cppVar_51909;
	BIT_VEC cppVar_51911 = (cppVar_51891) ? IP : cppVar_51910;
	BIT_VEC cppVar_51912 = (cppVar_51886) ? P3 : cppVar_51911;
	BIT_VEC cppVar_51913 = (cppVar_51881) ? IE : cppVar_51912;
	BIT_VEC cppVar_51914 = (cppVar_51876) ? P2 : cppVar_51913;
	BIT_VEC cppVar_51915 = (cppVar_51871) ? SBUF : cppVar_51914;
	BIT_VEC cppVar_51916 = (cppVar_51866) ? SCON : cppVar_51915;
	BIT_VEC cppVar_51917 = (cppVar_51861) ? P1 : cppVar_51916;
	BIT_VEC cppVar_51918 = (cppVar_51856) ? TH1 : cppVar_51917;
	BIT_VEC cppVar_51919 = (cppVar_51851) ? TL1 : cppVar_51918;
	BIT_VEC cppVar_51920 = (cppVar_51846) ? TH0 : cppVar_51919;
	BIT_VEC cppVar_51921 = (cppVar_51841) ? TL0 : cppVar_51920;
	BIT_VEC cppVar_51922 = (cppVar_51836) ? TMOD : cppVar_51921;
	BIT_VEC cppVar_51923 = (cppVar_51831) ? TCON : cppVar_51922;
	BIT_VEC cppVar_51924 = (cppVar_51826) ? PCON : cppVar_51923;
	BIT_VEC cppVar_51925 = (cppVar_51821) ? DPH : cppVar_51924;
	BIT_VEC cppVar_51926 = (cppVar_51816) ? DPL : cppVar_51925;
	BIT_VEC cppVar_51927 = (cppVar_51811) ? SP : cppVar_51926;
	BIT_VEC cppVar_51928 = (cppVar_51806) ? P0 : cppVar_51927;
	BIT_VEC cppVar_51929 = (cppVar_51797) ? cppVar_51801 : cppVar_51928;
	BIT_VEC cppVar_51930 = (cppVar_51789) ? cppVar_51929 : PSW;
	BIT_VEC cppVar_51931 = ROM.rd(PC);
	bool cppVar_51933 = (cppVar_51931 == 138);
	BIT_VEC cppVar_51935 = PC + 1;
	cppVar_51935 = (cppVar_51935 & cppMask_un_16_);
	BIT_VEC cppVar_51936 = ROM.rd(cppVar_51935);
	bool cppVar_51938 = (cppVar_51936 == 208);
	BIT_VEC cppVar_51940 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51942 = (cppVar_51940 << 3) | 2;
	cppVar_51942 = (cppVar_51942 & cppMask_un_5_);
	BIT_VEC cppVar_51943 = (0 << 5) | cppVar_51942;
	cppVar_51943 = (cppVar_51943 & cppMask_un_8_);
	BIT_VEC cppVar_51944 = (cppVar_51943 >> 7) & cppMask_un_1_;
	bool cppVar_51946 = (cppVar_51944 == 0);
	BIT_VEC cppVar_51947 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51948 = (cppVar_51947 << 3) | 2;
	cppVar_51948 = (cppVar_51948 & cppMask_un_5_);
	BIT_VEC cppVar_51949 = (0 << 5) | cppVar_51948;
	cppVar_51949 = (cppVar_51949 & cppMask_un_8_);
	BIT_VEC cppVar_51950 = IRAM.rd(cppVar_51949);
	BIT_VEC cppVar_51951 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51952 = (cppVar_51951 << 3) | 2;
	cppVar_51952 = (cppVar_51952 & cppMask_un_5_);
	BIT_VEC cppVar_51953 = (0 << 5) | cppVar_51952;
	cppVar_51953 = (cppVar_51953 & cppMask_un_8_);
	bool cppVar_51955 = (cppVar_51953 == 128);
	BIT_VEC cppVar_51956 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51957 = (cppVar_51956 << 3) | 2;
	cppVar_51957 = (cppVar_51957 & cppMask_un_5_);
	BIT_VEC cppVar_51958 = (0 << 5) | cppVar_51957;
	cppVar_51958 = (cppVar_51958 & cppMask_un_8_);
	bool cppVar_51960 = (cppVar_51958 == 129);
	BIT_VEC cppVar_51961 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51962 = (cppVar_51961 << 3) | 2;
	cppVar_51962 = (cppVar_51962 & cppMask_un_5_);
	BIT_VEC cppVar_51963 = (0 << 5) | cppVar_51962;
	cppVar_51963 = (cppVar_51963 & cppMask_un_8_);
	bool cppVar_51965 = (cppVar_51963 == 130);
	BIT_VEC cppVar_51966 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51967 = (cppVar_51966 << 3) | 2;
	cppVar_51967 = (cppVar_51967 & cppMask_un_5_);
	BIT_VEC cppVar_51968 = (0 << 5) | cppVar_51967;
	cppVar_51968 = (cppVar_51968 & cppMask_un_8_);
	bool cppVar_51970 = (cppVar_51968 == 131);
	BIT_VEC cppVar_51971 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51972 = (cppVar_51971 << 3) | 2;
	cppVar_51972 = (cppVar_51972 & cppMask_un_5_);
	BIT_VEC cppVar_51973 = (0 << 5) | cppVar_51972;
	cppVar_51973 = (cppVar_51973 & cppMask_un_8_);
	bool cppVar_51975 = (cppVar_51973 == 135);
	BIT_VEC cppVar_51976 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51977 = (cppVar_51976 << 3) | 2;
	cppVar_51977 = (cppVar_51977 & cppMask_un_5_);
	BIT_VEC cppVar_51978 = (0 << 5) | cppVar_51977;
	cppVar_51978 = (cppVar_51978 & cppMask_un_8_);
	bool cppVar_51980 = (cppVar_51978 == 136);
	BIT_VEC cppVar_51981 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51982 = (cppVar_51981 << 3) | 2;
	cppVar_51982 = (cppVar_51982 & cppMask_un_5_);
	BIT_VEC cppVar_51983 = (0 << 5) | cppVar_51982;
	cppVar_51983 = (cppVar_51983 & cppMask_un_8_);
	bool cppVar_51985 = (cppVar_51983 == 137);
	BIT_VEC cppVar_51986 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51987 = (cppVar_51986 << 3) | 2;
	cppVar_51987 = (cppVar_51987 & cppMask_un_5_);
	BIT_VEC cppVar_51988 = (0 << 5) | cppVar_51987;
	cppVar_51988 = (cppVar_51988 & cppMask_un_8_);
	bool cppVar_51990 = (cppVar_51988 == 138);
	BIT_VEC cppVar_51991 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51992 = (cppVar_51991 << 3) | 2;
	cppVar_51992 = (cppVar_51992 & cppMask_un_5_);
	BIT_VEC cppVar_51993 = (0 << 5) | cppVar_51992;
	cppVar_51993 = (cppVar_51993 & cppMask_un_8_);
	bool cppVar_51995 = (cppVar_51993 == 140);
	BIT_VEC cppVar_51996 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_51997 = (cppVar_51996 << 3) | 2;
	cppVar_51997 = (cppVar_51997 & cppMask_un_5_);
	BIT_VEC cppVar_51998 = (0 << 5) | cppVar_51997;
	cppVar_51998 = (cppVar_51998 & cppMask_un_8_);
	bool cppVar_52000 = (cppVar_51998 == 139);
	BIT_VEC cppVar_52001 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52002 = (cppVar_52001 << 3) | 2;
	cppVar_52002 = (cppVar_52002 & cppMask_un_5_);
	BIT_VEC cppVar_52003 = (0 << 5) | cppVar_52002;
	cppVar_52003 = (cppVar_52003 & cppMask_un_8_);
	bool cppVar_52005 = (cppVar_52003 == 141);
	BIT_VEC cppVar_52006 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52007 = (cppVar_52006 << 3) | 2;
	cppVar_52007 = (cppVar_52007 & cppMask_un_5_);
	BIT_VEC cppVar_52008 = (0 << 5) | cppVar_52007;
	cppVar_52008 = (cppVar_52008 & cppMask_un_8_);
	bool cppVar_52010 = (cppVar_52008 == 144);
	BIT_VEC cppVar_52011 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52012 = (cppVar_52011 << 3) | 2;
	cppVar_52012 = (cppVar_52012 & cppMask_un_5_);
	BIT_VEC cppVar_52013 = (0 << 5) | cppVar_52012;
	cppVar_52013 = (cppVar_52013 & cppMask_un_8_);
	bool cppVar_52015 = (cppVar_52013 == 152);
	BIT_VEC cppVar_52016 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52017 = (cppVar_52016 << 3) | 2;
	cppVar_52017 = (cppVar_52017 & cppMask_un_5_);
	BIT_VEC cppVar_52018 = (0 << 5) | cppVar_52017;
	cppVar_52018 = (cppVar_52018 & cppMask_un_8_);
	bool cppVar_52020 = (cppVar_52018 == 153);
	BIT_VEC cppVar_52021 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52022 = (cppVar_52021 << 3) | 2;
	cppVar_52022 = (cppVar_52022 & cppMask_un_5_);
	BIT_VEC cppVar_52023 = (0 << 5) | cppVar_52022;
	cppVar_52023 = (cppVar_52023 & cppMask_un_8_);
	bool cppVar_52025 = (cppVar_52023 == 160);
	BIT_VEC cppVar_52026 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52027 = (cppVar_52026 << 3) | 2;
	cppVar_52027 = (cppVar_52027 & cppMask_un_5_);
	BIT_VEC cppVar_52028 = (0 << 5) | cppVar_52027;
	cppVar_52028 = (cppVar_52028 & cppMask_un_8_);
	bool cppVar_52030 = (cppVar_52028 == 168);
	BIT_VEC cppVar_52031 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52032 = (cppVar_52031 << 3) | 2;
	cppVar_52032 = (cppVar_52032 & cppMask_un_5_);
	BIT_VEC cppVar_52033 = (0 << 5) | cppVar_52032;
	cppVar_52033 = (cppVar_52033 & cppMask_un_8_);
	bool cppVar_52035 = (cppVar_52033 == 176);
	BIT_VEC cppVar_52036 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52037 = (cppVar_52036 << 3) | 2;
	cppVar_52037 = (cppVar_52037 & cppMask_un_5_);
	BIT_VEC cppVar_52038 = (0 << 5) | cppVar_52037;
	cppVar_52038 = (cppVar_52038 & cppMask_un_8_);
	bool cppVar_52040 = (cppVar_52038 == 184);
	BIT_VEC cppVar_52041 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52042 = (cppVar_52041 << 3) | 2;
	cppVar_52042 = (cppVar_52042 & cppMask_un_5_);
	BIT_VEC cppVar_52043 = (0 << 5) | cppVar_52042;
	cppVar_52043 = (cppVar_52043 & cppMask_un_8_);
	bool cppVar_52045 = (cppVar_52043 == 208);
	BIT_VEC cppVar_52046 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52047 = (cppVar_52046 << 3) | 2;
	cppVar_52047 = (cppVar_52047 & cppMask_un_5_);
	BIT_VEC cppVar_52048 = (0 << 5) | cppVar_52047;
	cppVar_52048 = (cppVar_52048 & cppMask_un_8_);
	bool cppVar_52050 = (cppVar_52048 == 224);
	BIT_VEC cppVar_52051 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52052 = (cppVar_52051 << 3) | 2;
	cppVar_52052 = (cppVar_52052 & cppMask_un_5_);
	BIT_VEC cppVar_52053 = (0 << 5) | cppVar_52052;
	cppVar_52053 = (cppVar_52053 & cppMask_un_8_);
	bool cppVar_52055 = (cppVar_52053 == 240);
	BIT_VEC cppVar_52057 = (cppVar_52055) ? B : 0;
	BIT_VEC cppVar_52058 = (cppVar_52050) ? ACC : cppVar_52057;
	BIT_VEC cppVar_52059 = (cppVar_52045) ? PSW : cppVar_52058;
	BIT_VEC cppVar_52060 = (cppVar_52040) ? IP : cppVar_52059;
	BIT_VEC cppVar_52061 = (cppVar_52035) ? P3 : cppVar_52060;
	BIT_VEC cppVar_52062 = (cppVar_52030) ? IE : cppVar_52061;
	BIT_VEC cppVar_52063 = (cppVar_52025) ? P2 : cppVar_52062;
	BIT_VEC cppVar_52064 = (cppVar_52020) ? SBUF : cppVar_52063;
	BIT_VEC cppVar_52065 = (cppVar_52015) ? SCON : cppVar_52064;
	BIT_VEC cppVar_52066 = (cppVar_52010) ? P1 : cppVar_52065;
	BIT_VEC cppVar_52067 = (cppVar_52005) ? TH1 : cppVar_52066;
	BIT_VEC cppVar_52068 = (cppVar_52000) ? TL1 : cppVar_52067;
	BIT_VEC cppVar_52069 = (cppVar_51995) ? TH0 : cppVar_52068;
	BIT_VEC cppVar_52070 = (cppVar_51990) ? TL0 : cppVar_52069;
	BIT_VEC cppVar_52071 = (cppVar_51985) ? TMOD : cppVar_52070;
	BIT_VEC cppVar_52072 = (cppVar_51980) ? TCON : cppVar_52071;
	BIT_VEC cppVar_52073 = (cppVar_51975) ? PCON : cppVar_52072;
	BIT_VEC cppVar_52074 = (cppVar_51970) ? DPH : cppVar_52073;
	BIT_VEC cppVar_52075 = (cppVar_51965) ? DPL : cppVar_52074;
	BIT_VEC cppVar_52076 = (cppVar_51960) ? SP : cppVar_52075;
	BIT_VEC cppVar_52077 = (cppVar_51955) ? P0 : cppVar_52076;
	BIT_VEC cppVar_52078 = (cppVar_51946) ? cppVar_51950 : cppVar_52077;
	BIT_VEC cppVar_52079 = (cppVar_51938) ? cppVar_52078 : PSW;
	BIT_VEC cppVar_52080 = ROM.rd(PC);
	bool cppVar_52082 = (cppVar_52080 == 137);
	BIT_VEC cppVar_52084 = PC + 1;
	cppVar_52084 = (cppVar_52084 & cppMask_un_16_);
	BIT_VEC cppVar_52085 = ROM.rd(cppVar_52084);
	bool cppVar_52087 = (cppVar_52085 == 208);
	BIT_VEC cppVar_52089 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52091 = (cppVar_52089 << 3) | 1;
	cppVar_52091 = (cppVar_52091 & cppMask_un_5_);
	BIT_VEC cppVar_52092 = (0 << 5) | cppVar_52091;
	cppVar_52092 = (cppVar_52092 & cppMask_un_8_);
	BIT_VEC cppVar_52093 = (cppVar_52092 >> 7) & cppMask_un_1_;
	bool cppVar_52095 = (cppVar_52093 == 0);
	BIT_VEC cppVar_52096 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52097 = (cppVar_52096 << 3) | 1;
	cppVar_52097 = (cppVar_52097 & cppMask_un_5_);
	BIT_VEC cppVar_52098 = (0 << 5) | cppVar_52097;
	cppVar_52098 = (cppVar_52098 & cppMask_un_8_);
	BIT_VEC cppVar_52099 = IRAM.rd(cppVar_52098);
	BIT_VEC cppVar_52100 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52101 = (cppVar_52100 << 3) | 1;
	cppVar_52101 = (cppVar_52101 & cppMask_un_5_);
	BIT_VEC cppVar_52102 = (0 << 5) | cppVar_52101;
	cppVar_52102 = (cppVar_52102 & cppMask_un_8_);
	bool cppVar_52104 = (cppVar_52102 == 128);
	BIT_VEC cppVar_52105 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52106 = (cppVar_52105 << 3) | 1;
	cppVar_52106 = (cppVar_52106 & cppMask_un_5_);
	BIT_VEC cppVar_52107 = (0 << 5) | cppVar_52106;
	cppVar_52107 = (cppVar_52107 & cppMask_un_8_);
	bool cppVar_52109 = (cppVar_52107 == 129);
	BIT_VEC cppVar_52110 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52111 = (cppVar_52110 << 3) | 1;
	cppVar_52111 = (cppVar_52111 & cppMask_un_5_);
	BIT_VEC cppVar_52112 = (0 << 5) | cppVar_52111;
	cppVar_52112 = (cppVar_52112 & cppMask_un_8_);
	bool cppVar_52114 = (cppVar_52112 == 130);
	BIT_VEC cppVar_52115 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52116 = (cppVar_52115 << 3) | 1;
	cppVar_52116 = (cppVar_52116 & cppMask_un_5_);
	BIT_VEC cppVar_52117 = (0 << 5) | cppVar_52116;
	cppVar_52117 = (cppVar_52117 & cppMask_un_8_);
	bool cppVar_52119 = (cppVar_52117 == 131);
	BIT_VEC cppVar_52120 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52121 = (cppVar_52120 << 3) | 1;
	cppVar_52121 = (cppVar_52121 & cppMask_un_5_);
	BIT_VEC cppVar_52122 = (0 << 5) | cppVar_52121;
	cppVar_52122 = (cppVar_52122 & cppMask_un_8_);
	bool cppVar_52124 = (cppVar_52122 == 135);
	BIT_VEC cppVar_52125 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52126 = (cppVar_52125 << 3) | 1;
	cppVar_52126 = (cppVar_52126 & cppMask_un_5_);
	BIT_VEC cppVar_52127 = (0 << 5) | cppVar_52126;
	cppVar_52127 = (cppVar_52127 & cppMask_un_8_);
	bool cppVar_52129 = (cppVar_52127 == 136);
	BIT_VEC cppVar_52130 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52131 = (cppVar_52130 << 3) | 1;
	cppVar_52131 = (cppVar_52131 & cppMask_un_5_);
	BIT_VEC cppVar_52132 = (0 << 5) | cppVar_52131;
	cppVar_52132 = (cppVar_52132 & cppMask_un_8_);
	bool cppVar_52134 = (cppVar_52132 == 137);
	BIT_VEC cppVar_52135 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52136 = (cppVar_52135 << 3) | 1;
	cppVar_52136 = (cppVar_52136 & cppMask_un_5_);
	BIT_VEC cppVar_52137 = (0 << 5) | cppVar_52136;
	cppVar_52137 = (cppVar_52137 & cppMask_un_8_);
	bool cppVar_52139 = (cppVar_52137 == 138);
	BIT_VEC cppVar_52140 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52141 = (cppVar_52140 << 3) | 1;
	cppVar_52141 = (cppVar_52141 & cppMask_un_5_);
	BIT_VEC cppVar_52142 = (0 << 5) | cppVar_52141;
	cppVar_52142 = (cppVar_52142 & cppMask_un_8_);
	bool cppVar_52144 = (cppVar_52142 == 140);
	BIT_VEC cppVar_52145 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52146 = (cppVar_52145 << 3) | 1;
	cppVar_52146 = (cppVar_52146 & cppMask_un_5_);
	BIT_VEC cppVar_52147 = (0 << 5) | cppVar_52146;
	cppVar_52147 = (cppVar_52147 & cppMask_un_8_);
	bool cppVar_52149 = (cppVar_52147 == 139);
	BIT_VEC cppVar_52150 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52151 = (cppVar_52150 << 3) | 1;
	cppVar_52151 = (cppVar_52151 & cppMask_un_5_);
	BIT_VEC cppVar_52152 = (0 << 5) | cppVar_52151;
	cppVar_52152 = (cppVar_52152 & cppMask_un_8_);
	bool cppVar_52154 = (cppVar_52152 == 141);
	BIT_VEC cppVar_52155 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52156 = (cppVar_52155 << 3) | 1;
	cppVar_52156 = (cppVar_52156 & cppMask_un_5_);
	BIT_VEC cppVar_52157 = (0 << 5) | cppVar_52156;
	cppVar_52157 = (cppVar_52157 & cppMask_un_8_);
	bool cppVar_52159 = (cppVar_52157 == 144);
	BIT_VEC cppVar_52160 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52161 = (cppVar_52160 << 3) | 1;
	cppVar_52161 = (cppVar_52161 & cppMask_un_5_);
	BIT_VEC cppVar_52162 = (0 << 5) | cppVar_52161;
	cppVar_52162 = (cppVar_52162 & cppMask_un_8_);
	bool cppVar_52164 = (cppVar_52162 == 152);
	BIT_VEC cppVar_52165 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52166 = (cppVar_52165 << 3) | 1;
	cppVar_52166 = (cppVar_52166 & cppMask_un_5_);
	BIT_VEC cppVar_52167 = (0 << 5) | cppVar_52166;
	cppVar_52167 = (cppVar_52167 & cppMask_un_8_);
	bool cppVar_52169 = (cppVar_52167 == 153);
	BIT_VEC cppVar_52170 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52171 = (cppVar_52170 << 3) | 1;
	cppVar_52171 = (cppVar_52171 & cppMask_un_5_);
	BIT_VEC cppVar_52172 = (0 << 5) | cppVar_52171;
	cppVar_52172 = (cppVar_52172 & cppMask_un_8_);
	bool cppVar_52174 = (cppVar_52172 == 160);
	BIT_VEC cppVar_52175 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52176 = (cppVar_52175 << 3) | 1;
	cppVar_52176 = (cppVar_52176 & cppMask_un_5_);
	BIT_VEC cppVar_52177 = (0 << 5) | cppVar_52176;
	cppVar_52177 = (cppVar_52177 & cppMask_un_8_);
	bool cppVar_52179 = (cppVar_52177 == 168);
	BIT_VEC cppVar_52180 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52181 = (cppVar_52180 << 3) | 1;
	cppVar_52181 = (cppVar_52181 & cppMask_un_5_);
	BIT_VEC cppVar_52182 = (0 << 5) | cppVar_52181;
	cppVar_52182 = (cppVar_52182 & cppMask_un_8_);
	bool cppVar_52184 = (cppVar_52182 == 176);
	BIT_VEC cppVar_52185 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52186 = (cppVar_52185 << 3) | 1;
	cppVar_52186 = (cppVar_52186 & cppMask_un_5_);
	BIT_VEC cppVar_52187 = (0 << 5) | cppVar_52186;
	cppVar_52187 = (cppVar_52187 & cppMask_un_8_);
	bool cppVar_52189 = (cppVar_52187 == 184);
	BIT_VEC cppVar_52190 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52191 = (cppVar_52190 << 3) | 1;
	cppVar_52191 = (cppVar_52191 & cppMask_un_5_);
	BIT_VEC cppVar_52192 = (0 << 5) | cppVar_52191;
	cppVar_52192 = (cppVar_52192 & cppMask_un_8_);
	bool cppVar_52194 = (cppVar_52192 == 208);
	BIT_VEC cppVar_52195 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52196 = (cppVar_52195 << 3) | 1;
	cppVar_52196 = (cppVar_52196 & cppMask_un_5_);
	BIT_VEC cppVar_52197 = (0 << 5) | cppVar_52196;
	cppVar_52197 = (cppVar_52197 & cppMask_un_8_);
	bool cppVar_52199 = (cppVar_52197 == 224);
	BIT_VEC cppVar_52200 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52201 = (cppVar_52200 << 3) | 1;
	cppVar_52201 = (cppVar_52201 & cppMask_un_5_);
	BIT_VEC cppVar_52202 = (0 << 5) | cppVar_52201;
	cppVar_52202 = (cppVar_52202 & cppMask_un_8_);
	bool cppVar_52204 = (cppVar_52202 == 240);
	BIT_VEC cppVar_52206 = (cppVar_52204) ? B : 0;
	BIT_VEC cppVar_52207 = (cppVar_52199) ? ACC : cppVar_52206;
	BIT_VEC cppVar_52208 = (cppVar_52194) ? PSW : cppVar_52207;
	BIT_VEC cppVar_52209 = (cppVar_52189) ? IP : cppVar_52208;
	BIT_VEC cppVar_52210 = (cppVar_52184) ? P3 : cppVar_52209;
	BIT_VEC cppVar_52211 = (cppVar_52179) ? IE : cppVar_52210;
	BIT_VEC cppVar_52212 = (cppVar_52174) ? P2 : cppVar_52211;
	BIT_VEC cppVar_52213 = (cppVar_52169) ? SBUF : cppVar_52212;
	BIT_VEC cppVar_52214 = (cppVar_52164) ? SCON : cppVar_52213;
	BIT_VEC cppVar_52215 = (cppVar_52159) ? P1 : cppVar_52214;
	BIT_VEC cppVar_52216 = (cppVar_52154) ? TH1 : cppVar_52215;
	BIT_VEC cppVar_52217 = (cppVar_52149) ? TL1 : cppVar_52216;
	BIT_VEC cppVar_52218 = (cppVar_52144) ? TH0 : cppVar_52217;
	BIT_VEC cppVar_52219 = (cppVar_52139) ? TL0 : cppVar_52218;
	BIT_VEC cppVar_52220 = (cppVar_52134) ? TMOD : cppVar_52219;
	BIT_VEC cppVar_52221 = (cppVar_52129) ? TCON : cppVar_52220;
	BIT_VEC cppVar_52222 = (cppVar_52124) ? PCON : cppVar_52221;
	BIT_VEC cppVar_52223 = (cppVar_52119) ? DPH : cppVar_52222;
	BIT_VEC cppVar_52224 = (cppVar_52114) ? DPL : cppVar_52223;
	BIT_VEC cppVar_52225 = (cppVar_52109) ? SP : cppVar_52224;
	BIT_VEC cppVar_52226 = (cppVar_52104) ? P0 : cppVar_52225;
	BIT_VEC cppVar_52227 = (cppVar_52095) ? cppVar_52099 : cppVar_52226;
	BIT_VEC cppVar_52228 = (cppVar_52087) ? cppVar_52227 : PSW;
	BIT_VEC cppVar_52229 = ROM.rd(PC);
	bool cppVar_52231 = (cppVar_52229 == 136);
	BIT_VEC cppVar_52233 = PC + 1;
	cppVar_52233 = (cppVar_52233 & cppMask_un_16_);
	BIT_VEC cppVar_52234 = ROM.rd(cppVar_52233);
	bool cppVar_52236 = (cppVar_52234 == 208);
	BIT_VEC cppVar_52238 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52240 = (cppVar_52238 << 3) | 0;
	cppVar_52240 = (cppVar_52240 & cppMask_un_5_);
	BIT_VEC cppVar_52241 = (0 << 5) | cppVar_52240;
	cppVar_52241 = (cppVar_52241 & cppMask_un_8_);
	BIT_VEC cppVar_52242 = (cppVar_52241 >> 7) & cppMask_un_1_;
	bool cppVar_52244 = (cppVar_52242 == 0);
	BIT_VEC cppVar_52245 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52246 = (cppVar_52245 << 3) | 0;
	cppVar_52246 = (cppVar_52246 & cppMask_un_5_);
	BIT_VEC cppVar_52247 = (0 << 5) | cppVar_52246;
	cppVar_52247 = (cppVar_52247 & cppMask_un_8_);
	BIT_VEC cppVar_52248 = IRAM.rd(cppVar_52247);
	BIT_VEC cppVar_52249 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52250 = (cppVar_52249 << 3) | 0;
	cppVar_52250 = (cppVar_52250 & cppMask_un_5_);
	BIT_VEC cppVar_52251 = (0 << 5) | cppVar_52250;
	cppVar_52251 = (cppVar_52251 & cppMask_un_8_);
	bool cppVar_52253 = (cppVar_52251 == 128);
	BIT_VEC cppVar_52254 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52255 = (cppVar_52254 << 3) | 0;
	cppVar_52255 = (cppVar_52255 & cppMask_un_5_);
	BIT_VEC cppVar_52256 = (0 << 5) | cppVar_52255;
	cppVar_52256 = (cppVar_52256 & cppMask_un_8_);
	bool cppVar_52258 = (cppVar_52256 == 129);
	BIT_VEC cppVar_52259 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52260 = (cppVar_52259 << 3) | 0;
	cppVar_52260 = (cppVar_52260 & cppMask_un_5_);
	BIT_VEC cppVar_52261 = (0 << 5) | cppVar_52260;
	cppVar_52261 = (cppVar_52261 & cppMask_un_8_);
	bool cppVar_52263 = (cppVar_52261 == 130);
	BIT_VEC cppVar_52264 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52265 = (cppVar_52264 << 3) | 0;
	cppVar_52265 = (cppVar_52265 & cppMask_un_5_);
	BIT_VEC cppVar_52266 = (0 << 5) | cppVar_52265;
	cppVar_52266 = (cppVar_52266 & cppMask_un_8_);
	bool cppVar_52268 = (cppVar_52266 == 131);
	BIT_VEC cppVar_52269 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52270 = (cppVar_52269 << 3) | 0;
	cppVar_52270 = (cppVar_52270 & cppMask_un_5_);
	BIT_VEC cppVar_52271 = (0 << 5) | cppVar_52270;
	cppVar_52271 = (cppVar_52271 & cppMask_un_8_);
	bool cppVar_52273 = (cppVar_52271 == 135);
	BIT_VEC cppVar_52274 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52275 = (cppVar_52274 << 3) | 0;
	cppVar_52275 = (cppVar_52275 & cppMask_un_5_);
	BIT_VEC cppVar_52276 = (0 << 5) | cppVar_52275;
	cppVar_52276 = (cppVar_52276 & cppMask_un_8_);
	bool cppVar_52278 = (cppVar_52276 == 136);
	BIT_VEC cppVar_52279 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52280 = (cppVar_52279 << 3) | 0;
	cppVar_52280 = (cppVar_52280 & cppMask_un_5_);
	BIT_VEC cppVar_52281 = (0 << 5) | cppVar_52280;
	cppVar_52281 = (cppVar_52281 & cppMask_un_8_);
	bool cppVar_52283 = (cppVar_52281 == 137);
	BIT_VEC cppVar_52284 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52285 = (cppVar_52284 << 3) | 0;
	cppVar_52285 = (cppVar_52285 & cppMask_un_5_);
	BIT_VEC cppVar_52286 = (0 << 5) | cppVar_52285;
	cppVar_52286 = (cppVar_52286 & cppMask_un_8_);
	bool cppVar_52288 = (cppVar_52286 == 138);
	BIT_VEC cppVar_52289 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52290 = (cppVar_52289 << 3) | 0;
	cppVar_52290 = (cppVar_52290 & cppMask_un_5_);
	BIT_VEC cppVar_52291 = (0 << 5) | cppVar_52290;
	cppVar_52291 = (cppVar_52291 & cppMask_un_8_);
	bool cppVar_52293 = (cppVar_52291 == 140);
	BIT_VEC cppVar_52294 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52295 = (cppVar_52294 << 3) | 0;
	cppVar_52295 = (cppVar_52295 & cppMask_un_5_);
	BIT_VEC cppVar_52296 = (0 << 5) | cppVar_52295;
	cppVar_52296 = (cppVar_52296 & cppMask_un_8_);
	bool cppVar_52298 = (cppVar_52296 == 139);
	BIT_VEC cppVar_52299 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52300 = (cppVar_52299 << 3) | 0;
	cppVar_52300 = (cppVar_52300 & cppMask_un_5_);
	BIT_VEC cppVar_52301 = (0 << 5) | cppVar_52300;
	cppVar_52301 = (cppVar_52301 & cppMask_un_8_);
	bool cppVar_52303 = (cppVar_52301 == 141);
	BIT_VEC cppVar_52304 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52305 = (cppVar_52304 << 3) | 0;
	cppVar_52305 = (cppVar_52305 & cppMask_un_5_);
	BIT_VEC cppVar_52306 = (0 << 5) | cppVar_52305;
	cppVar_52306 = (cppVar_52306 & cppMask_un_8_);
	bool cppVar_52308 = (cppVar_52306 == 144);
	BIT_VEC cppVar_52309 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52310 = (cppVar_52309 << 3) | 0;
	cppVar_52310 = (cppVar_52310 & cppMask_un_5_);
	BIT_VEC cppVar_52311 = (0 << 5) | cppVar_52310;
	cppVar_52311 = (cppVar_52311 & cppMask_un_8_);
	bool cppVar_52313 = (cppVar_52311 == 152);
	BIT_VEC cppVar_52314 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52315 = (cppVar_52314 << 3) | 0;
	cppVar_52315 = (cppVar_52315 & cppMask_un_5_);
	BIT_VEC cppVar_52316 = (0 << 5) | cppVar_52315;
	cppVar_52316 = (cppVar_52316 & cppMask_un_8_);
	bool cppVar_52318 = (cppVar_52316 == 153);
	BIT_VEC cppVar_52319 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52320 = (cppVar_52319 << 3) | 0;
	cppVar_52320 = (cppVar_52320 & cppMask_un_5_);
	BIT_VEC cppVar_52321 = (0 << 5) | cppVar_52320;
	cppVar_52321 = (cppVar_52321 & cppMask_un_8_);
	bool cppVar_52323 = (cppVar_52321 == 160);
	BIT_VEC cppVar_52324 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52325 = (cppVar_52324 << 3) | 0;
	cppVar_52325 = (cppVar_52325 & cppMask_un_5_);
	BIT_VEC cppVar_52326 = (0 << 5) | cppVar_52325;
	cppVar_52326 = (cppVar_52326 & cppMask_un_8_);
	bool cppVar_52328 = (cppVar_52326 == 168);
	BIT_VEC cppVar_52329 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52330 = (cppVar_52329 << 3) | 0;
	cppVar_52330 = (cppVar_52330 & cppMask_un_5_);
	BIT_VEC cppVar_52331 = (0 << 5) | cppVar_52330;
	cppVar_52331 = (cppVar_52331 & cppMask_un_8_);
	bool cppVar_52333 = (cppVar_52331 == 176);
	BIT_VEC cppVar_52334 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52335 = (cppVar_52334 << 3) | 0;
	cppVar_52335 = (cppVar_52335 & cppMask_un_5_);
	BIT_VEC cppVar_52336 = (0 << 5) | cppVar_52335;
	cppVar_52336 = (cppVar_52336 & cppMask_un_8_);
	bool cppVar_52338 = (cppVar_52336 == 184);
	BIT_VEC cppVar_52339 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52340 = (cppVar_52339 << 3) | 0;
	cppVar_52340 = (cppVar_52340 & cppMask_un_5_);
	BIT_VEC cppVar_52341 = (0 << 5) | cppVar_52340;
	cppVar_52341 = (cppVar_52341 & cppMask_un_8_);
	bool cppVar_52343 = (cppVar_52341 == 208);
	BIT_VEC cppVar_52344 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52345 = (cppVar_52344 << 3) | 0;
	cppVar_52345 = (cppVar_52345 & cppMask_un_5_);
	BIT_VEC cppVar_52346 = (0 << 5) | cppVar_52345;
	cppVar_52346 = (cppVar_52346 & cppMask_un_8_);
	bool cppVar_52348 = (cppVar_52346 == 224);
	BIT_VEC cppVar_52349 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52350 = (cppVar_52349 << 3) | 0;
	cppVar_52350 = (cppVar_52350 & cppMask_un_5_);
	BIT_VEC cppVar_52351 = (0 << 5) | cppVar_52350;
	cppVar_52351 = (cppVar_52351 & cppMask_un_8_);
	bool cppVar_52353 = (cppVar_52351 == 240);
	BIT_VEC cppVar_52355 = (cppVar_52353) ? B : 0;
	BIT_VEC cppVar_52356 = (cppVar_52348) ? ACC : cppVar_52355;
	BIT_VEC cppVar_52357 = (cppVar_52343) ? PSW : cppVar_52356;
	BIT_VEC cppVar_52358 = (cppVar_52338) ? IP : cppVar_52357;
	BIT_VEC cppVar_52359 = (cppVar_52333) ? P3 : cppVar_52358;
	BIT_VEC cppVar_52360 = (cppVar_52328) ? IE : cppVar_52359;
	BIT_VEC cppVar_52361 = (cppVar_52323) ? P2 : cppVar_52360;
	BIT_VEC cppVar_52362 = (cppVar_52318) ? SBUF : cppVar_52361;
	BIT_VEC cppVar_52363 = (cppVar_52313) ? SCON : cppVar_52362;
	BIT_VEC cppVar_52364 = (cppVar_52308) ? P1 : cppVar_52363;
	BIT_VEC cppVar_52365 = (cppVar_52303) ? TH1 : cppVar_52364;
	BIT_VEC cppVar_52366 = (cppVar_52298) ? TL1 : cppVar_52365;
	BIT_VEC cppVar_52367 = (cppVar_52293) ? TH0 : cppVar_52366;
	BIT_VEC cppVar_52368 = (cppVar_52288) ? TL0 : cppVar_52367;
	BIT_VEC cppVar_52369 = (cppVar_52283) ? TMOD : cppVar_52368;
	BIT_VEC cppVar_52370 = (cppVar_52278) ? TCON : cppVar_52369;
	BIT_VEC cppVar_52371 = (cppVar_52273) ? PCON : cppVar_52370;
	BIT_VEC cppVar_52372 = (cppVar_52268) ? DPH : cppVar_52371;
	BIT_VEC cppVar_52373 = (cppVar_52263) ? DPL : cppVar_52372;
	BIT_VEC cppVar_52374 = (cppVar_52258) ? SP : cppVar_52373;
	BIT_VEC cppVar_52375 = (cppVar_52253) ? P0 : cppVar_52374;
	BIT_VEC cppVar_52376 = (cppVar_52244) ? cppVar_52248 : cppVar_52375;
	BIT_VEC cppVar_52377 = (cppVar_52236) ? cppVar_52376 : PSW;
	BIT_VEC cppVar_52378 = ROM.rd(PC);
	bool cppVar_52380 = (cppVar_52378 == 135);
	BIT_VEC cppVar_52382 = PC + 1;
	cppVar_52382 = (cppVar_52382 & cppMask_un_16_);
	BIT_VEC cppVar_52383 = ROM.rd(cppVar_52382);
	bool cppVar_52385 = (cppVar_52383 == 208);
	BIT_VEC cppVar_52387 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52389 = (cppVar_52387 << 3) | 1;
	cppVar_52389 = (cppVar_52389 & cppMask_un_5_);
	BIT_VEC cppVar_52390 = (0 << 5) | cppVar_52389;
	cppVar_52390 = (cppVar_52390 & cppMask_un_8_);
	BIT_VEC cppVar_52391 = IRAM.rd(cppVar_52390);
	BIT_VEC cppVar_52392 = IRAM.rd(cppVar_52391);
	BIT_VEC cppVar_52393 = (cppVar_52385) ? cppVar_52392 : PSW;
	BIT_VEC cppVar_52394 = ROM.rd(PC);
	bool cppVar_52396 = (cppVar_52394 == 134);
	BIT_VEC cppVar_52398 = PC + 1;
	cppVar_52398 = (cppVar_52398 & cppMask_un_16_);
	BIT_VEC cppVar_52399 = ROM.rd(cppVar_52398);
	bool cppVar_52401 = (cppVar_52399 == 208);
	BIT_VEC cppVar_52403 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_52405 = (cppVar_52403 << 3) | 0;
	cppVar_52405 = (cppVar_52405 & cppMask_un_5_);
	BIT_VEC cppVar_52406 = (0 << 5) | cppVar_52405;
	cppVar_52406 = (cppVar_52406 & cppMask_un_8_);
	BIT_VEC cppVar_52407 = IRAM.rd(cppVar_52406);
	BIT_VEC cppVar_52408 = IRAM.rd(cppVar_52407);
	BIT_VEC cppVar_52409 = (cppVar_52401) ? cppVar_52408 : PSW;
	BIT_VEC cppVar_52410 = ROM.rd(PC);
	bool cppVar_52412 = (cppVar_52410 == 133);
	BIT_VEC cppVar_52414 = PC + 2;
	cppVar_52414 = (cppVar_52414 & cppMask_un_16_);
	BIT_VEC cppVar_52415 = ROM.rd(cppVar_52414);
	bool cppVar_52417 = (cppVar_52415 == 208);
	BIT_VEC cppVar_52419 = PC + 1;
	cppVar_52419 = (cppVar_52419 & cppMask_un_16_);
	BIT_VEC cppVar_52420 = ROM.rd(cppVar_52419);
	BIT_VEC cppVar_52421 = (cppVar_52420 >> 7) & cppMask_un_1_;
	bool cppVar_52423 = (cppVar_52421 == 0);
	BIT_VEC cppVar_52424 = PC + 1;
	cppVar_52424 = (cppVar_52424 & cppMask_un_16_);
	BIT_VEC cppVar_52425 = ROM.rd(cppVar_52424);
	BIT_VEC cppVar_52426 = IRAM.rd(cppVar_52425);
	BIT_VEC cppVar_52427 = PC + 1;
	cppVar_52427 = (cppVar_52427 & cppMask_un_16_);
	BIT_VEC cppVar_52428 = ROM.rd(cppVar_52427);
	bool cppVar_52430 = (cppVar_52428 == 128);
	BIT_VEC cppVar_52431 = PC + 1;
	cppVar_52431 = (cppVar_52431 & cppMask_un_16_);
	BIT_VEC cppVar_52432 = ROM.rd(cppVar_52431);
	bool cppVar_52434 = (cppVar_52432 == 129);
	BIT_VEC cppVar_52435 = PC + 1;
	cppVar_52435 = (cppVar_52435 & cppMask_un_16_);
	BIT_VEC cppVar_52436 = ROM.rd(cppVar_52435);
	bool cppVar_52438 = (cppVar_52436 == 130);
	BIT_VEC cppVar_52439 = PC + 1;
	cppVar_52439 = (cppVar_52439 & cppMask_un_16_);
	BIT_VEC cppVar_52440 = ROM.rd(cppVar_52439);
	bool cppVar_52442 = (cppVar_52440 == 131);
	BIT_VEC cppVar_52443 = PC + 1;
	cppVar_52443 = (cppVar_52443 & cppMask_un_16_);
	BIT_VEC cppVar_52444 = ROM.rd(cppVar_52443);
	bool cppVar_52446 = (cppVar_52444 == 135);
	BIT_VEC cppVar_52447 = PC + 1;
	cppVar_52447 = (cppVar_52447 & cppMask_un_16_);
	BIT_VEC cppVar_52448 = ROM.rd(cppVar_52447);
	bool cppVar_52450 = (cppVar_52448 == 136);
	BIT_VEC cppVar_52451 = PC + 1;
	cppVar_52451 = (cppVar_52451 & cppMask_un_16_);
	BIT_VEC cppVar_52452 = ROM.rd(cppVar_52451);
	bool cppVar_52454 = (cppVar_52452 == 137);
	BIT_VEC cppVar_52455 = PC + 1;
	cppVar_52455 = (cppVar_52455 & cppMask_un_16_);
	BIT_VEC cppVar_52456 = ROM.rd(cppVar_52455);
	bool cppVar_52458 = (cppVar_52456 == 138);
	BIT_VEC cppVar_52459 = PC + 1;
	cppVar_52459 = (cppVar_52459 & cppMask_un_16_);
	BIT_VEC cppVar_52460 = ROM.rd(cppVar_52459);
	bool cppVar_52462 = (cppVar_52460 == 140);
	BIT_VEC cppVar_52463 = PC + 1;
	cppVar_52463 = (cppVar_52463 & cppMask_un_16_);
	BIT_VEC cppVar_52464 = ROM.rd(cppVar_52463);
	bool cppVar_52466 = (cppVar_52464 == 139);
	BIT_VEC cppVar_52467 = PC + 1;
	cppVar_52467 = (cppVar_52467 & cppMask_un_16_);
	BIT_VEC cppVar_52468 = ROM.rd(cppVar_52467);
	bool cppVar_52470 = (cppVar_52468 == 141);
	BIT_VEC cppVar_52471 = PC + 1;
	cppVar_52471 = (cppVar_52471 & cppMask_un_16_);
	BIT_VEC cppVar_52472 = ROM.rd(cppVar_52471);
	bool cppVar_52474 = (cppVar_52472 == 144);
	BIT_VEC cppVar_52475 = PC + 1;
	cppVar_52475 = (cppVar_52475 & cppMask_un_16_);
	BIT_VEC cppVar_52476 = ROM.rd(cppVar_52475);
	bool cppVar_52478 = (cppVar_52476 == 152);
	BIT_VEC cppVar_52479 = PC + 1;
	cppVar_52479 = (cppVar_52479 & cppMask_un_16_);
	BIT_VEC cppVar_52480 = ROM.rd(cppVar_52479);
	bool cppVar_52482 = (cppVar_52480 == 153);
	BIT_VEC cppVar_52483 = PC + 1;
	cppVar_52483 = (cppVar_52483 & cppMask_un_16_);
	BIT_VEC cppVar_52484 = ROM.rd(cppVar_52483);
	bool cppVar_52486 = (cppVar_52484 == 160);
	BIT_VEC cppVar_52487 = PC + 1;
	cppVar_52487 = (cppVar_52487 & cppMask_un_16_);
	BIT_VEC cppVar_52488 = ROM.rd(cppVar_52487);
	bool cppVar_52490 = (cppVar_52488 == 168);
	BIT_VEC cppVar_52491 = PC + 1;
	cppVar_52491 = (cppVar_52491 & cppMask_un_16_);
	BIT_VEC cppVar_52492 = ROM.rd(cppVar_52491);
	bool cppVar_52494 = (cppVar_52492 == 176);
	BIT_VEC cppVar_52495 = PC + 1;
	cppVar_52495 = (cppVar_52495 & cppMask_un_16_);
	BIT_VEC cppVar_52496 = ROM.rd(cppVar_52495);
	bool cppVar_52498 = (cppVar_52496 == 184);
	BIT_VEC cppVar_52499 = PC + 1;
	cppVar_52499 = (cppVar_52499 & cppMask_un_16_);
	BIT_VEC cppVar_52500 = ROM.rd(cppVar_52499);
	bool cppVar_52502 = (cppVar_52500 == 208);
	BIT_VEC cppVar_52503 = PC + 1;
	cppVar_52503 = (cppVar_52503 & cppMask_un_16_);
	BIT_VEC cppVar_52504 = ROM.rd(cppVar_52503);
	bool cppVar_52506 = (cppVar_52504 == 224);
	BIT_VEC cppVar_52507 = PC + 1;
	cppVar_52507 = (cppVar_52507 & cppMask_un_16_);
	BIT_VEC cppVar_52508 = ROM.rd(cppVar_52507);
	bool cppVar_52510 = (cppVar_52508 == 240);
	BIT_VEC cppVar_52512 = (cppVar_52510) ? B : 0;
	BIT_VEC cppVar_52513 = (cppVar_52506) ? ACC : cppVar_52512;
	BIT_VEC cppVar_52514 = (cppVar_52502) ? PSW : cppVar_52513;
	BIT_VEC cppVar_52515 = (cppVar_52498) ? IP : cppVar_52514;
	BIT_VEC cppVar_52516 = (cppVar_52494) ? P3 : cppVar_52515;
	BIT_VEC cppVar_52517 = (cppVar_52490) ? IE : cppVar_52516;
	BIT_VEC cppVar_52518 = (cppVar_52486) ? P2 : cppVar_52517;
	BIT_VEC cppVar_52519 = (cppVar_52482) ? SBUF : cppVar_52518;
	BIT_VEC cppVar_52520 = (cppVar_52478) ? SCON : cppVar_52519;
	BIT_VEC cppVar_52521 = (cppVar_52474) ? P1 : cppVar_52520;
	BIT_VEC cppVar_52522 = (cppVar_52470) ? TH1 : cppVar_52521;
	BIT_VEC cppVar_52523 = (cppVar_52466) ? TL1 : cppVar_52522;
	BIT_VEC cppVar_52524 = (cppVar_52462) ? TH0 : cppVar_52523;
	BIT_VEC cppVar_52525 = (cppVar_52458) ? TL0 : cppVar_52524;
	BIT_VEC cppVar_52526 = (cppVar_52454) ? TMOD : cppVar_52525;
	BIT_VEC cppVar_52527 = (cppVar_52450) ? TCON : cppVar_52526;
	BIT_VEC cppVar_52528 = (cppVar_52446) ? PCON : cppVar_52527;
	BIT_VEC cppVar_52529 = (cppVar_52442) ? DPH : cppVar_52528;
	BIT_VEC cppVar_52530 = (cppVar_52438) ? DPL : cppVar_52529;
	BIT_VEC cppVar_52531 = (cppVar_52434) ? SP : cppVar_52530;
	BIT_VEC cppVar_52532 = (cppVar_52430) ? P0 : cppVar_52531;
	BIT_VEC cppVar_52533 = (cppVar_52423) ? cppVar_52426 : cppVar_52532;
	BIT_VEC cppVar_52534 = (cppVar_52417) ? cppVar_52533 : PSW;
	BIT_VEC cppVar_52535 = ROM.rd(PC);
	bool cppVar_52537 = (cppVar_52535 == 132);
	BIT_VEC cppVar_52539 = (PSW >> 3) & cppMask_un_4_;
	bool cppVar_52541 = (B == 0);
	BIT_VEC cppVar_52544 = (cppVar_52541) ? 1 : 0;
	BIT_VEC cppVar_52545 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_52546 = (cppVar_52544 << 2) | cppVar_52545;
	cppVar_52546 = (cppVar_52546 & cppMask_un_3_);
	BIT_VEC cppVar_52547 = (cppVar_52539 << 3) | cppVar_52546;
	cppVar_52547 = (cppVar_52547 & cppMask_un_7_);
	BIT_VEC cppVar_52548 = (0 << 7) | cppVar_52547;
	cppVar_52548 = (cppVar_52548 & cppMask_un_8_);
	BIT_VEC cppVar_52549 = ROM.rd(PC);
	bool cppVar_52551 = (cppVar_52549 == 130);
	BIT_VEC cppVar_52552 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_52554 = PC + 1;
	cppVar_52554 = (cppVar_52554 & cppMask_un_16_);
	BIT_VEC cppVar_52555 = ROM.rd(cppVar_52554);
	BIT_VEC cppVar_52556 = (cppVar_52555 >> 7) & cppMask_un_1_;
	bool cppVar_52558 = (cppVar_52556 == 1);
	BIT_VEC cppVar_52559 = PC + 1;
	cppVar_52559 = (cppVar_52559 & cppMask_un_16_);
	BIT_VEC cppVar_52560 = ROM.rd(cppVar_52559);
	BIT_VEC cppVar_52561 = (cppVar_52560 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52563 = (cppVar_52561 << 3) | 0;
	cppVar_52563 = (cppVar_52563 & cppMask_un_8_);
	BIT_VEC cppVar_52564 = PC + 1;
	cppVar_52564 = (cppVar_52564 & cppMask_un_16_);
	BIT_VEC cppVar_52565 = ROM.rd(cppVar_52564);
	BIT_VEC cppVar_52566 = (cppVar_52565 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52567 = (cppVar_52566 & cppMask_un_5_);
	BIT_VEC cppVar_52569 = cppVar_52567 + 32;
	cppVar_52569 = (cppVar_52569 & cppMask_un_8_);
	BIT_VEC cppVar_52570 = (cppVar_52558) ? cppVar_52563 : cppVar_52569;
	BIT_VEC cppVar_52571 = (cppVar_52570 >> 7) & cppMask_un_1_;
	bool cppVar_52573 = (cppVar_52571 == 0);
	BIT_VEC cppVar_52574 = PC + 1;
	cppVar_52574 = (cppVar_52574 & cppMask_un_16_);
	BIT_VEC cppVar_52575 = ROM.rd(cppVar_52574);
	BIT_VEC cppVar_52576 = (cppVar_52575 >> 7) & cppMask_un_1_;
	bool cppVar_52577 = (cppVar_52576 == 1);
	BIT_VEC cppVar_52578 = PC + 1;
	cppVar_52578 = (cppVar_52578 & cppMask_un_16_);
	BIT_VEC cppVar_52579 = ROM.rd(cppVar_52578);
	BIT_VEC cppVar_52580 = (cppVar_52579 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52581 = (cppVar_52580 << 3) | 0;
	cppVar_52581 = (cppVar_52581 & cppMask_un_8_);
	BIT_VEC cppVar_52582 = PC + 1;
	cppVar_52582 = (cppVar_52582 & cppMask_un_16_);
	BIT_VEC cppVar_52583 = ROM.rd(cppVar_52582);
	BIT_VEC cppVar_52584 = (cppVar_52583 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52585 = (cppVar_52584 & cppMask_un_5_);
	BIT_VEC cppVar_52586 = cppVar_52585 + 32;
	cppVar_52586 = (cppVar_52586 & cppMask_un_8_);
	BIT_VEC cppVar_52587 = (cppVar_52577) ? cppVar_52581 : cppVar_52586;
	BIT_VEC cppVar_52588 = IRAM.rd(cppVar_52587);
	BIT_VEC cppVar_52589 = PC + 1;
	cppVar_52589 = (cppVar_52589 & cppMask_un_16_);
	BIT_VEC cppVar_52590 = ROM.rd(cppVar_52589);
	BIT_VEC cppVar_52591 = (cppVar_52590 >> 7) & cppMask_un_1_;
	bool cppVar_52592 = (cppVar_52591 == 1);
	BIT_VEC cppVar_52593 = PC + 1;
	cppVar_52593 = (cppVar_52593 & cppMask_un_16_);
	BIT_VEC cppVar_52594 = ROM.rd(cppVar_52593);
	BIT_VEC cppVar_52595 = (cppVar_52594 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52596 = (cppVar_52595 << 3) | 0;
	cppVar_52596 = (cppVar_52596 & cppMask_un_8_);
	BIT_VEC cppVar_52597 = PC + 1;
	cppVar_52597 = (cppVar_52597 & cppMask_un_16_);
	BIT_VEC cppVar_52598 = ROM.rd(cppVar_52597);
	BIT_VEC cppVar_52599 = (cppVar_52598 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52600 = (cppVar_52599 & cppMask_un_5_);
	BIT_VEC cppVar_52601 = cppVar_52600 + 32;
	cppVar_52601 = (cppVar_52601 & cppMask_un_8_);
	BIT_VEC cppVar_52602 = (cppVar_52592) ? cppVar_52596 : cppVar_52601;
	bool cppVar_52604 = (cppVar_52602 == 128);
	BIT_VEC cppVar_52605 = PC + 1;
	cppVar_52605 = (cppVar_52605 & cppMask_un_16_);
	BIT_VEC cppVar_52606 = ROM.rd(cppVar_52605);
	BIT_VEC cppVar_52607 = (cppVar_52606 >> 7) & cppMask_un_1_;
	bool cppVar_52608 = (cppVar_52607 == 1);
	BIT_VEC cppVar_52609 = PC + 1;
	cppVar_52609 = (cppVar_52609 & cppMask_un_16_);
	BIT_VEC cppVar_52610 = ROM.rd(cppVar_52609);
	BIT_VEC cppVar_52611 = (cppVar_52610 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52612 = (cppVar_52611 << 3) | 0;
	cppVar_52612 = (cppVar_52612 & cppMask_un_8_);
	BIT_VEC cppVar_52613 = PC + 1;
	cppVar_52613 = (cppVar_52613 & cppMask_un_16_);
	BIT_VEC cppVar_52614 = ROM.rd(cppVar_52613);
	BIT_VEC cppVar_52615 = (cppVar_52614 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52616 = (cppVar_52615 & cppMask_un_5_);
	BIT_VEC cppVar_52617 = cppVar_52616 + 32;
	cppVar_52617 = (cppVar_52617 & cppMask_un_8_);
	BIT_VEC cppVar_52618 = (cppVar_52608) ? cppVar_52612 : cppVar_52617;
	bool cppVar_52620 = (cppVar_52618 == 129);
	BIT_VEC cppVar_52621 = PC + 1;
	cppVar_52621 = (cppVar_52621 & cppMask_un_16_);
	BIT_VEC cppVar_52622 = ROM.rd(cppVar_52621);
	BIT_VEC cppVar_52623 = (cppVar_52622 >> 7) & cppMask_un_1_;
	bool cppVar_52624 = (cppVar_52623 == 1);
	BIT_VEC cppVar_52625 = PC + 1;
	cppVar_52625 = (cppVar_52625 & cppMask_un_16_);
	BIT_VEC cppVar_52626 = ROM.rd(cppVar_52625);
	BIT_VEC cppVar_52627 = (cppVar_52626 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52628 = (cppVar_52627 << 3) | 0;
	cppVar_52628 = (cppVar_52628 & cppMask_un_8_);
	BIT_VEC cppVar_52629 = PC + 1;
	cppVar_52629 = (cppVar_52629 & cppMask_un_16_);
	BIT_VEC cppVar_52630 = ROM.rd(cppVar_52629);
	BIT_VEC cppVar_52631 = (cppVar_52630 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52632 = (cppVar_52631 & cppMask_un_5_);
	BIT_VEC cppVar_52633 = cppVar_52632 + 32;
	cppVar_52633 = (cppVar_52633 & cppMask_un_8_);
	BIT_VEC cppVar_52634 = (cppVar_52624) ? cppVar_52628 : cppVar_52633;
	bool cppVar_52636 = (cppVar_52634 == 130);
	BIT_VEC cppVar_52637 = PC + 1;
	cppVar_52637 = (cppVar_52637 & cppMask_un_16_);
	BIT_VEC cppVar_52638 = ROM.rd(cppVar_52637);
	BIT_VEC cppVar_52639 = (cppVar_52638 >> 7) & cppMask_un_1_;
	bool cppVar_52640 = (cppVar_52639 == 1);
	BIT_VEC cppVar_52641 = PC + 1;
	cppVar_52641 = (cppVar_52641 & cppMask_un_16_);
	BIT_VEC cppVar_52642 = ROM.rd(cppVar_52641);
	BIT_VEC cppVar_52643 = (cppVar_52642 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52644 = (cppVar_52643 << 3) | 0;
	cppVar_52644 = (cppVar_52644 & cppMask_un_8_);
	BIT_VEC cppVar_52645 = PC + 1;
	cppVar_52645 = (cppVar_52645 & cppMask_un_16_);
	BIT_VEC cppVar_52646 = ROM.rd(cppVar_52645);
	BIT_VEC cppVar_52647 = (cppVar_52646 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52648 = (cppVar_52647 & cppMask_un_5_);
	BIT_VEC cppVar_52649 = cppVar_52648 + 32;
	cppVar_52649 = (cppVar_52649 & cppMask_un_8_);
	BIT_VEC cppVar_52650 = (cppVar_52640) ? cppVar_52644 : cppVar_52649;
	bool cppVar_52652 = (cppVar_52650 == 131);
	BIT_VEC cppVar_52653 = PC + 1;
	cppVar_52653 = (cppVar_52653 & cppMask_un_16_);
	BIT_VEC cppVar_52654 = ROM.rd(cppVar_52653);
	BIT_VEC cppVar_52655 = (cppVar_52654 >> 7) & cppMask_un_1_;
	bool cppVar_52656 = (cppVar_52655 == 1);
	BIT_VEC cppVar_52657 = PC + 1;
	cppVar_52657 = (cppVar_52657 & cppMask_un_16_);
	BIT_VEC cppVar_52658 = ROM.rd(cppVar_52657);
	BIT_VEC cppVar_52659 = (cppVar_52658 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52660 = (cppVar_52659 << 3) | 0;
	cppVar_52660 = (cppVar_52660 & cppMask_un_8_);
	BIT_VEC cppVar_52661 = PC + 1;
	cppVar_52661 = (cppVar_52661 & cppMask_un_16_);
	BIT_VEC cppVar_52662 = ROM.rd(cppVar_52661);
	BIT_VEC cppVar_52663 = (cppVar_52662 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52664 = (cppVar_52663 & cppMask_un_5_);
	BIT_VEC cppVar_52665 = cppVar_52664 + 32;
	cppVar_52665 = (cppVar_52665 & cppMask_un_8_);
	BIT_VEC cppVar_52666 = (cppVar_52656) ? cppVar_52660 : cppVar_52665;
	bool cppVar_52668 = (cppVar_52666 == 135);
	BIT_VEC cppVar_52669 = PC + 1;
	cppVar_52669 = (cppVar_52669 & cppMask_un_16_);
	BIT_VEC cppVar_52670 = ROM.rd(cppVar_52669);
	BIT_VEC cppVar_52671 = (cppVar_52670 >> 7) & cppMask_un_1_;
	bool cppVar_52672 = (cppVar_52671 == 1);
	BIT_VEC cppVar_52673 = PC + 1;
	cppVar_52673 = (cppVar_52673 & cppMask_un_16_);
	BIT_VEC cppVar_52674 = ROM.rd(cppVar_52673);
	BIT_VEC cppVar_52675 = (cppVar_52674 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52676 = (cppVar_52675 << 3) | 0;
	cppVar_52676 = (cppVar_52676 & cppMask_un_8_);
	BIT_VEC cppVar_52677 = PC + 1;
	cppVar_52677 = (cppVar_52677 & cppMask_un_16_);
	BIT_VEC cppVar_52678 = ROM.rd(cppVar_52677);
	BIT_VEC cppVar_52679 = (cppVar_52678 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52680 = (cppVar_52679 & cppMask_un_5_);
	BIT_VEC cppVar_52681 = cppVar_52680 + 32;
	cppVar_52681 = (cppVar_52681 & cppMask_un_8_);
	BIT_VEC cppVar_52682 = (cppVar_52672) ? cppVar_52676 : cppVar_52681;
	bool cppVar_52684 = (cppVar_52682 == 136);
	BIT_VEC cppVar_52685 = PC + 1;
	cppVar_52685 = (cppVar_52685 & cppMask_un_16_);
	BIT_VEC cppVar_52686 = ROM.rd(cppVar_52685);
	BIT_VEC cppVar_52687 = (cppVar_52686 >> 7) & cppMask_un_1_;
	bool cppVar_52688 = (cppVar_52687 == 1);
	BIT_VEC cppVar_52689 = PC + 1;
	cppVar_52689 = (cppVar_52689 & cppMask_un_16_);
	BIT_VEC cppVar_52690 = ROM.rd(cppVar_52689);
	BIT_VEC cppVar_52691 = (cppVar_52690 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52692 = (cppVar_52691 << 3) | 0;
	cppVar_52692 = (cppVar_52692 & cppMask_un_8_);
	BIT_VEC cppVar_52693 = PC + 1;
	cppVar_52693 = (cppVar_52693 & cppMask_un_16_);
	BIT_VEC cppVar_52694 = ROM.rd(cppVar_52693);
	BIT_VEC cppVar_52695 = (cppVar_52694 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52696 = (cppVar_52695 & cppMask_un_5_);
	BIT_VEC cppVar_52697 = cppVar_52696 + 32;
	cppVar_52697 = (cppVar_52697 & cppMask_un_8_);
	BIT_VEC cppVar_52698 = (cppVar_52688) ? cppVar_52692 : cppVar_52697;
	bool cppVar_52700 = (cppVar_52698 == 137);
	BIT_VEC cppVar_52701 = PC + 1;
	cppVar_52701 = (cppVar_52701 & cppMask_un_16_);
	BIT_VEC cppVar_52702 = ROM.rd(cppVar_52701);
	BIT_VEC cppVar_52703 = (cppVar_52702 >> 7) & cppMask_un_1_;
	bool cppVar_52704 = (cppVar_52703 == 1);
	BIT_VEC cppVar_52705 = PC + 1;
	cppVar_52705 = (cppVar_52705 & cppMask_un_16_);
	BIT_VEC cppVar_52706 = ROM.rd(cppVar_52705);
	BIT_VEC cppVar_52707 = (cppVar_52706 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52708 = (cppVar_52707 << 3) | 0;
	cppVar_52708 = (cppVar_52708 & cppMask_un_8_);
	BIT_VEC cppVar_52709 = PC + 1;
	cppVar_52709 = (cppVar_52709 & cppMask_un_16_);
	BIT_VEC cppVar_52710 = ROM.rd(cppVar_52709);
	BIT_VEC cppVar_52711 = (cppVar_52710 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52712 = (cppVar_52711 & cppMask_un_5_);
	BIT_VEC cppVar_52713 = cppVar_52712 + 32;
	cppVar_52713 = (cppVar_52713 & cppMask_un_8_);
	BIT_VEC cppVar_52714 = (cppVar_52704) ? cppVar_52708 : cppVar_52713;
	bool cppVar_52716 = (cppVar_52714 == 138);
	BIT_VEC cppVar_52717 = PC + 1;
	cppVar_52717 = (cppVar_52717 & cppMask_un_16_);
	BIT_VEC cppVar_52718 = ROM.rd(cppVar_52717);
	BIT_VEC cppVar_52719 = (cppVar_52718 >> 7) & cppMask_un_1_;
	bool cppVar_52720 = (cppVar_52719 == 1);
	BIT_VEC cppVar_52721 = PC + 1;
	cppVar_52721 = (cppVar_52721 & cppMask_un_16_);
	BIT_VEC cppVar_52722 = ROM.rd(cppVar_52721);
	BIT_VEC cppVar_52723 = (cppVar_52722 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52724 = (cppVar_52723 << 3) | 0;
	cppVar_52724 = (cppVar_52724 & cppMask_un_8_);
	BIT_VEC cppVar_52725 = PC + 1;
	cppVar_52725 = (cppVar_52725 & cppMask_un_16_);
	BIT_VEC cppVar_52726 = ROM.rd(cppVar_52725);
	BIT_VEC cppVar_52727 = (cppVar_52726 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52728 = (cppVar_52727 & cppMask_un_5_);
	BIT_VEC cppVar_52729 = cppVar_52728 + 32;
	cppVar_52729 = (cppVar_52729 & cppMask_un_8_);
	BIT_VEC cppVar_52730 = (cppVar_52720) ? cppVar_52724 : cppVar_52729;
	bool cppVar_52732 = (cppVar_52730 == 140);
	BIT_VEC cppVar_52733 = PC + 1;
	cppVar_52733 = (cppVar_52733 & cppMask_un_16_);
	BIT_VEC cppVar_52734 = ROM.rd(cppVar_52733);
	BIT_VEC cppVar_52735 = (cppVar_52734 >> 7) & cppMask_un_1_;
	bool cppVar_52736 = (cppVar_52735 == 1);
	BIT_VEC cppVar_52737 = PC + 1;
	cppVar_52737 = (cppVar_52737 & cppMask_un_16_);
	BIT_VEC cppVar_52738 = ROM.rd(cppVar_52737);
	BIT_VEC cppVar_52739 = (cppVar_52738 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52740 = (cppVar_52739 << 3) | 0;
	cppVar_52740 = (cppVar_52740 & cppMask_un_8_);
	BIT_VEC cppVar_52741 = PC + 1;
	cppVar_52741 = (cppVar_52741 & cppMask_un_16_);
	BIT_VEC cppVar_52742 = ROM.rd(cppVar_52741);
	BIT_VEC cppVar_52743 = (cppVar_52742 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52744 = (cppVar_52743 & cppMask_un_5_);
	BIT_VEC cppVar_52745 = cppVar_52744 + 32;
	cppVar_52745 = (cppVar_52745 & cppMask_un_8_);
	BIT_VEC cppVar_52746 = (cppVar_52736) ? cppVar_52740 : cppVar_52745;
	bool cppVar_52748 = (cppVar_52746 == 139);
	BIT_VEC cppVar_52749 = PC + 1;
	cppVar_52749 = (cppVar_52749 & cppMask_un_16_);
	BIT_VEC cppVar_52750 = ROM.rd(cppVar_52749);
	BIT_VEC cppVar_52751 = (cppVar_52750 >> 7) & cppMask_un_1_;
	bool cppVar_52752 = (cppVar_52751 == 1);
	BIT_VEC cppVar_52753 = PC + 1;
	cppVar_52753 = (cppVar_52753 & cppMask_un_16_);
	BIT_VEC cppVar_52754 = ROM.rd(cppVar_52753);
	BIT_VEC cppVar_52755 = (cppVar_52754 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52756 = (cppVar_52755 << 3) | 0;
	cppVar_52756 = (cppVar_52756 & cppMask_un_8_);
	BIT_VEC cppVar_52757 = PC + 1;
	cppVar_52757 = (cppVar_52757 & cppMask_un_16_);
	BIT_VEC cppVar_52758 = ROM.rd(cppVar_52757);
	BIT_VEC cppVar_52759 = (cppVar_52758 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52760 = (cppVar_52759 & cppMask_un_5_);
	BIT_VEC cppVar_52761 = cppVar_52760 + 32;
	cppVar_52761 = (cppVar_52761 & cppMask_un_8_);
	BIT_VEC cppVar_52762 = (cppVar_52752) ? cppVar_52756 : cppVar_52761;
	bool cppVar_52764 = (cppVar_52762 == 141);
	BIT_VEC cppVar_52765 = PC + 1;
	cppVar_52765 = (cppVar_52765 & cppMask_un_16_);
	BIT_VEC cppVar_52766 = ROM.rd(cppVar_52765);
	BIT_VEC cppVar_52767 = (cppVar_52766 >> 7) & cppMask_un_1_;
	bool cppVar_52768 = (cppVar_52767 == 1);
	BIT_VEC cppVar_52769 = PC + 1;
	cppVar_52769 = (cppVar_52769 & cppMask_un_16_);
	BIT_VEC cppVar_52770 = ROM.rd(cppVar_52769);
	BIT_VEC cppVar_52771 = (cppVar_52770 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52772 = (cppVar_52771 << 3) | 0;
	cppVar_52772 = (cppVar_52772 & cppMask_un_8_);
	BIT_VEC cppVar_52773 = PC + 1;
	cppVar_52773 = (cppVar_52773 & cppMask_un_16_);
	BIT_VEC cppVar_52774 = ROM.rd(cppVar_52773);
	BIT_VEC cppVar_52775 = (cppVar_52774 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52776 = (cppVar_52775 & cppMask_un_5_);
	BIT_VEC cppVar_52777 = cppVar_52776 + 32;
	cppVar_52777 = (cppVar_52777 & cppMask_un_8_);
	BIT_VEC cppVar_52778 = (cppVar_52768) ? cppVar_52772 : cppVar_52777;
	bool cppVar_52780 = (cppVar_52778 == 144);
	BIT_VEC cppVar_52781 = PC + 1;
	cppVar_52781 = (cppVar_52781 & cppMask_un_16_);
	BIT_VEC cppVar_52782 = ROM.rd(cppVar_52781);
	BIT_VEC cppVar_52783 = (cppVar_52782 >> 7) & cppMask_un_1_;
	bool cppVar_52784 = (cppVar_52783 == 1);
	BIT_VEC cppVar_52785 = PC + 1;
	cppVar_52785 = (cppVar_52785 & cppMask_un_16_);
	BIT_VEC cppVar_52786 = ROM.rd(cppVar_52785);
	BIT_VEC cppVar_52787 = (cppVar_52786 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52788 = (cppVar_52787 << 3) | 0;
	cppVar_52788 = (cppVar_52788 & cppMask_un_8_);
	BIT_VEC cppVar_52789 = PC + 1;
	cppVar_52789 = (cppVar_52789 & cppMask_un_16_);
	BIT_VEC cppVar_52790 = ROM.rd(cppVar_52789);
	BIT_VEC cppVar_52791 = (cppVar_52790 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52792 = (cppVar_52791 & cppMask_un_5_);
	BIT_VEC cppVar_52793 = cppVar_52792 + 32;
	cppVar_52793 = (cppVar_52793 & cppMask_un_8_);
	BIT_VEC cppVar_52794 = (cppVar_52784) ? cppVar_52788 : cppVar_52793;
	bool cppVar_52796 = (cppVar_52794 == 152);
	BIT_VEC cppVar_52797 = PC + 1;
	cppVar_52797 = (cppVar_52797 & cppMask_un_16_);
	BIT_VEC cppVar_52798 = ROM.rd(cppVar_52797);
	BIT_VEC cppVar_52799 = (cppVar_52798 >> 7) & cppMask_un_1_;
	bool cppVar_52800 = (cppVar_52799 == 1);
	BIT_VEC cppVar_52801 = PC + 1;
	cppVar_52801 = (cppVar_52801 & cppMask_un_16_);
	BIT_VEC cppVar_52802 = ROM.rd(cppVar_52801);
	BIT_VEC cppVar_52803 = (cppVar_52802 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52804 = (cppVar_52803 << 3) | 0;
	cppVar_52804 = (cppVar_52804 & cppMask_un_8_);
	BIT_VEC cppVar_52805 = PC + 1;
	cppVar_52805 = (cppVar_52805 & cppMask_un_16_);
	BIT_VEC cppVar_52806 = ROM.rd(cppVar_52805);
	BIT_VEC cppVar_52807 = (cppVar_52806 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52808 = (cppVar_52807 & cppMask_un_5_);
	BIT_VEC cppVar_52809 = cppVar_52808 + 32;
	cppVar_52809 = (cppVar_52809 & cppMask_un_8_);
	BIT_VEC cppVar_52810 = (cppVar_52800) ? cppVar_52804 : cppVar_52809;
	bool cppVar_52812 = (cppVar_52810 == 153);
	BIT_VEC cppVar_52813 = PC + 1;
	cppVar_52813 = (cppVar_52813 & cppMask_un_16_);
	BIT_VEC cppVar_52814 = ROM.rd(cppVar_52813);
	BIT_VEC cppVar_52815 = (cppVar_52814 >> 7) & cppMask_un_1_;
	bool cppVar_52816 = (cppVar_52815 == 1);
	BIT_VEC cppVar_52817 = PC + 1;
	cppVar_52817 = (cppVar_52817 & cppMask_un_16_);
	BIT_VEC cppVar_52818 = ROM.rd(cppVar_52817);
	BIT_VEC cppVar_52819 = (cppVar_52818 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52820 = (cppVar_52819 << 3) | 0;
	cppVar_52820 = (cppVar_52820 & cppMask_un_8_);
	BIT_VEC cppVar_52821 = PC + 1;
	cppVar_52821 = (cppVar_52821 & cppMask_un_16_);
	BIT_VEC cppVar_52822 = ROM.rd(cppVar_52821);
	BIT_VEC cppVar_52823 = (cppVar_52822 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52824 = (cppVar_52823 & cppMask_un_5_);
	BIT_VEC cppVar_52825 = cppVar_52824 + 32;
	cppVar_52825 = (cppVar_52825 & cppMask_un_8_);
	BIT_VEC cppVar_52826 = (cppVar_52816) ? cppVar_52820 : cppVar_52825;
	bool cppVar_52828 = (cppVar_52826 == 160);
	BIT_VEC cppVar_52829 = PC + 1;
	cppVar_52829 = (cppVar_52829 & cppMask_un_16_);
	BIT_VEC cppVar_52830 = ROM.rd(cppVar_52829);
	BIT_VEC cppVar_52831 = (cppVar_52830 >> 7) & cppMask_un_1_;
	bool cppVar_52832 = (cppVar_52831 == 1);
	BIT_VEC cppVar_52833 = PC + 1;
	cppVar_52833 = (cppVar_52833 & cppMask_un_16_);
	BIT_VEC cppVar_52834 = ROM.rd(cppVar_52833);
	BIT_VEC cppVar_52835 = (cppVar_52834 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52836 = (cppVar_52835 << 3) | 0;
	cppVar_52836 = (cppVar_52836 & cppMask_un_8_);
	BIT_VEC cppVar_52837 = PC + 1;
	cppVar_52837 = (cppVar_52837 & cppMask_un_16_);
	BIT_VEC cppVar_52838 = ROM.rd(cppVar_52837);
	BIT_VEC cppVar_52839 = (cppVar_52838 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52840 = (cppVar_52839 & cppMask_un_5_);
	BIT_VEC cppVar_52841 = cppVar_52840 + 32;
	cppVar_52841 = (cppVar_52841 & cppMask_un_8_);
	BIT_VEC cppVar_52842 = (cppVar_52832) ? cppVar_52836 : cppVar_52841;
	bool cppVar_52844 = (cppVar_52842 == 168);
	BIT_VEC cppVar_52845 = PC + 1;
	cppVar_52845 = (cppVar_52845 & cppMask_un_16_);
	BIT_VEC cppVar_52846 = ROM.rd(cppVar_52845);
	BIT_VEC cppVar_52847 = (cppVar_52846 >> 7) & cppMask_un_1_;
	bool cppVar_52848 = (cppVar_52847 == 1);
	BIT_VEC cppVar_52849 = PC + 1;
	cppVar_52849 = (cppVar_52849 & cppMask_un_16_);
	BIT_VEC cppVar_52850 = ROM.rd(cppVar_52849);
	BIT_VEC cppVar_52851 = (cppVar_52850 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52852 = (cppVar_52851 << 3) | 0;
	cppVar_52852 = (cppVar_52852 & cppMask_un_8_);
	BIT_VEC cppVar_52853 = PC + 1;
	cppVar_52853 = (cppVar_52853 & cppMask_un_16_);
	BIT_VEC cppVar_52854 = ROM.rd(cppVar_52853);
	BIT_VEC cppVar_52855 = (cppVar_52854 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52856 = (cppVar_52855 & cppMask_un_5_);
	BIT_VEC cppVar_52857 = cppVar_52856 + 32;
	cppVar_52857 = (cppVar_52857 & cppMask_un_8_);
	BIT_VEC cppVar_52858 = (cppVar_52848) ? cppVar_52852 : cppVar_52857;
	bool cppVar_52860 = (cppVar_52858 == 176);
	BIT_VEC cppVar_52861 = PC + 1;
	cppVar_52861 = (cppVar_52861 & cppMask_un_16_);
	BIT_VEC cppVar_52862 = ROM.rd(cppVar_52861);
	BIT_VEC cppVar_52863 = (cppVar_52862 >> 7) & cppMask_un_1_;
	bool cppVar_52864 = (cppVar_52863 == 1);
	BIT_VEC cppVar_52865 = PC + 1;
	cppVar_52865 = (cppVar_52865 & cppMask_un_16_);
	BIT_VEC cppVar_52866 = ROM.rd(cppVar_52865);
	BIT_VEC cppVar_52867 = (cppVar_52866 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52868 = (cppVar_52867 << 3) | 0;
	cppVar_52868 = (cppVar_52868 & cppMask_un_8_);
	BIT_VEC cppVar_52869 = PC + 1;
	cppVar_52869 = (cppVar_52869 & cppMask_un_16_);
	BIT_VEC cppVar_52870 = ROM.rd(cppVar_52869);
	BIT_VEC cppVar_52871 = (cppVar_52870 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52872 = (cppVar_52871 & cppMask_un_5_);
	BIT_VEC cppVar_52873 = cppVar_52872 + 32;
	cppVar_52873 = (cppVar_52873 & cppMask_un_8_);
	BIT_VEC cppVar_52874 = (cppVar_52864) ? cppVar_52868 : cppVar_52873;
	bool cppVar_52876 = (cppVar_52874 == 184);
	BIT_VEC cppVar_52877 = PC + 1;
	cppVar_52877 = (cppVar_52877 & cppMask_un_16_);
	BIT_VEC cppVar_52878 = ROM.rd(cppVar_52877);
	BIT_VEC cppVar_52879 = (cppVar_52878 >> 7) & cppMask_un_1_;
	bool cppVar_52880 = (cppVar_52879 == 1);
	BIT_VEC cppVar_52881 = PC + 1;
	cppVar_52881 = (cppVar_52881 & cppMask_un_16_);
	BIT_VEC cppVar_52882 = ROM.rd(cppVar_52881);
	BIT_VEC cppVar_52883 = (cppVar_52882 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52884 = (cppVar_52883 << 3) | 0;
	cppVar_52884 = (cppVar_52884 & cppMask_un_8_);
	BIT_VEC cppVar_52885 = PC + 1;
	cppVar_52885 = (cppVar_52885 & cppMask_un_16_);
	BIT_VEC cppVar_52886 = ROM.rd(cppVar_52885);
	BIT_VEC cppVar_52887 = (cppVar_52886 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52888 = (cppVar_52887 & cppMask_un_5_);
	BIT_VEC cppVar_52889 = cppVar_52888 + 32;
	cppVar_52889 = (cppVar_52889 & cppMask_un_8_);
	BIT_VEC cppVar_52890 = (cppVar_52880) ? cppVar_52884 : cppVar_52889;
	bool cppVar_52892 = (cppVar_52890 == 208);
	BIT_VEC cppVar_52893 = PC + 1;
	cppVar_52893 = (cppVar_52893 & cppMask_un_16_);
	BIT_VEC cppVar_52894 = ROM.rd(cppVar_52893);
	BIT_VEC cppVar_52895 = (cppVar_52894 >> 7) & cppMask_un_1_;
	bool cppVar_52896 = (cppVar_52895 == 1);
	BIT_VEC cppVar_52897 = PC + 1;
	cppVar_52897 = (cppVar_52897 & cppMask_un_16_);
	BIT_VEC cppVar_52898 = ROM.rd(cppVar_52897);
	BIT_VEC cppVar_52899 = (cppVar_52898 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52900 = (cppVar_52899 << 3) | 0;
	cppVar_52900 = (cppVar_52900 & cppMask_un_8_);
	BIT_VEC cppVar_52901 = PC + 1;
	cppVar_52901 = (cppVar_52901 & cppMask_un_16_);
	BIT_VEC cppVar_52902 = ROM.rd(cppVar_52901);
	BIT_VEC cppVar_52903 = (cppVar_52902 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52904 = (cppVar_52903 & cppMask_un_5_);
	BIT_VEC cppVar_52905 = cppVar_52904 + 32;
	cppVar_52905 = (cppVar_52905 & cppMask_un_8_);
	BIT_VEC cppVar_52906 = (cppVar_52896) ? cppVar_52900 : cppVar_52905;
	bool cppVar_52908 = (cppVar_52906 == 224);
	BIT_VEC cppVar_52909 = PC + 1;
	cppVar_52909 = (cppVar_52909 & cppMask_un_16_);
	BIT_VEC cppVar_52910 = ROM.rd(cppVar_52909);
	BIT_VEC cppVar_52911 = (cppVar_52910 >> 7) & cppMask_un_1_;
	bool cppVar_52912 = (cppVar_52911 == 1);
	BIT_VEC cppVar_52913 = PC + 1;
	cppVar_52913 = (cppVar_52913 & cppMask_un_16_);
	BIT_VEC cppVar_52914 = ROM.rd(cppVar_52913);
	BIT_VEC cppVar_52915 = (cppVar_52914 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52916 = (cppVar_52915 << 3) | 0;
	cppVar_52916 = (cppVar_52916 & cppMask_un_8_);
	BIT_VEC cppVar_52917 = PC + 1;
	cppVar_52917 = (cppVar_52917 & cppMask_un_16_);
	BIT_VEC cppVar_52918 = ROM.rd(cppVar_52917);
	BIT_VEC cppVar_52919 = (cppVar_52918 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52920 = (cppVar_52919 & cppMask_un_5_);
	BIT_VEC cppVar_52921 = cppVar_52920 + 32;
	cppVar_52921 = (cppVar_52921 & cppMask_un_8_);
	BIT_VEC cppVar_52922 = (cppVar_52912) ? cppVar_52916 : cppVar_52921;
	bool cppVar_52924 = (cppVar_52922 == 240);
	BIT_VEC cppVar_52926 = (cppVar_52924) ? B : 0;
	BIT_VEC cppVar_52927 = (cppVar_52908) ? ACC : cppVar_52926;
	BIT_VEC cppVar_52928 = (cppVar_52892) ? PSW : cppVar_52927;
	BIT_VEC cppVar_52929 = (cppVar_52876) ? IP : cppVar_52928;
	BIT_VEC cppVar_52930 = (cppVar_52860) ? P3 : cppVar_52929;
	BIT_VEC cppVar_52931 = (cppVar_52844) ? IE : cppVar_52930;
	BIT_VEC cppVar_52932 = (cppVar_52828) ? P2 : cppVar_52931;
	BIT_VEC cppVar_52933 = (cppVar_52812) ? SBUF : cppVar_52932;
	BIT_VEC cppVar_52934 = (cppVar_52796) ? SCON : cppVar_52933;
	BIT_VEC cppVar_52935 = (cppVar_52780) ? P1 : cppVar_52934;
	BIT_VEC cppVar_52936 = (cppVar_52764) ? TH1 : cppVar_52935;
	BIT_VEC cppVar_52937 = (cppVar_52748) ? TL1 : cppVar_52936;
	BIT_VEC cppVar_52938 = (cppVar_52732) ? TH0 : cppVar_52937;
	BIT_VEC cppVar_52939 = (cppVar_52716) ? TL0 : cppVar_52938;
	BIT_VEC cppVar_52940 = (cppVar_52700) ? TMOD : cppVar_52939;
	BIT_VEC cppVar_52941 = (cppVar_52684) ? TCON : cppVar_52940;
	BIT_VEC cppVar_52942 = (cppVar_52668) ? PCON : cppVar_52941;
	BIT_VEC cppVar_52943 = (cppVar_52652) ? DPH : cppVar_52942;
	BIT_VEC cppVar_52944 = (cppVar_52636) ? DPL : cppVar_52943;
	BIT_VEC cppVar_52945 = (cppVar_52620) ? SP : cppVar_52944;
	BIT_VEC cppVar_52946 = (cppVar_52604) ? P0 : cppVar_52945;
	BIT_VEC cppVar_52947 = (cppVar_52573) ? cppVar_52588 : cppVar_52946;
	BIT_VEC cppVar_52948 = PC + 1;
	cppVar_52948 = (cppVar_52948 & cppMask_un_16_);
	BIT_VEC cppVar_52949 = ROM.rd(cppVar_52948);
	BIT_VEC cppVar_52950 = (cppVar_52949 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_52951 = (cppVar_52947 >> static_cast<unsigned>(cppVar_52950)) & 0x1;
	BIT_VEC cppVar_52952 = cppVar_52552 & cppVar_52951;
	BIT_VEC cppVar_52953 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_52954 = (cppVar_52952 << 7) | cppVar_52953;
	cppVar_52954 = (cppVar_52954 & cppMask_un_8_);
	BIT_VEC cppVar_52955 = ROM.rd(PC);
	bool cppVar_52957 = (cppVar_52955 == 117);
	BIT_VEC cppVar_52959 = PC + 1;
	cppVar_52959 = (cppVar_52959 & cppMask_un_16_);
	BIT_VEC cppVar_52960 = ROM.rd(cppVar_52959);
	bool cppVar_52962 = (cppVar_52960 == 208);
	BIT_VEC cppVar_52964 = PC + 2;
	cppVar_52964 = (cppVar_52964 & cppMask_un_16_);
	BIT_VEC cppVar_52965 = ROM.rd(cppVar_52964);
	BIT_VEC cppVar_52966 = (cppVar_52962) ? cppVar_52965 : PSW;
	BIT_VEC cppVar_52967 = ROM.rd(PC);
	bool cppVar_52969 = (cppVar_52967 == 114);
	BIT_VEC cppVar_52970 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_52972 = PC + 1;
	cppVar_52972 = (cppVar_52972 & cppMask_un_16_);
	BIT_VEC cppVar_52973 = ROM.rd(cppVar_52972);
	BIT_VEC cppVar_52974 = (cppVar_52973 >> 7) & cppMask_un_1_;
	bool cppVar_52976 = (cppVar_52974 == 1);
	BIT_VEC cppVar_52977 = PC + 1;
	cppVar_52977 = (cppVar_52977 & cppMask_un_16_);
	BIT_VEC cppVar_52978 = ROM.rd(cppVar_52977);
	BIT_VEC cppVar_52979 = (cppVar_52978 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52981 = (cppVar_52979 << 3) | 0;
	cppVar_52981 = (cppVar_52981 & cppMask_un_8_);
	BIT_VEC cppVar_52982 = PC + 1;
	cppVar_52982 = (cppVar_52982 & cppMask_un_16_);
	BIT_VEC cppVar_52983 = ROM.rd(cppVar_52982);
	BIT_VEC cppVar_52984 = (cppVar_52983 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52985 = (cppVar_52984 & cppMask_un_5_);
	BIT_VEC cppVar_52987 = cppVar_52985 + 32;
	cppVar_52987 = (cppVar_52987 & cppMask_un_8_);
	BIT_VEC cppVar_52988 = (cppVar_52976) ? cppVar_52981 : cppVar_52987;
	BIT_VEC cppVar_52989 = (cppVar_52988 >> 7) & cppMask_un_1_;
	bool cppVar_52991 = (cppVar_52989 == 0);
	BIT_VEC cppVar_52992 = PC + 1;
	cppVar_52992 = (cppVar_52992 & cppMask_un_16_);
	BIT_VEC cppVar_52993 = ROM.rd(cppVar_52992);
	BIT_VEC cppVar_52994 = (cppVar_52993 >> 7) & cppMask_un_1_;
	bool cppVar_52995 = (cppVar_52994 == 1);
	BIT_VEC cppVar_52996 = PC + 1;
	cppVar_52996 = (cppVar_52996 & cppMask_un_16_);
	BIT_VEC cppVar_52997 = ROM.rd(cppVar_52996);
	BIT_VEC cppVar_52998 = (cppVar_52997 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_52999 = (cppVar_52998 << 3) | 0;
	cppVar_52999 = (cppVar_52999 & cppMask_un_8_);
	BIT_VEC cppVar_53000 = PC + 1;
	cppVar_53000 = (cppVar_53000 & cppMask_un_16_);
	BIT_VEC cppVar_53001 = ROM.rd(cppVar_53000);
	BIT_VEC cppVar_53002 = (cppVar_53001 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53003 = (cppVar_53002 & cppMask_un_5_);
	BIT_VEC cppVar_53004 = cppVar_53003 + 32;
	cppVar_53004 = (cppVar_53004 & cppMask_un_8_);
	BIT_VEC cppVar_53005 = (cppVar_52995) ? cppVar_52999 : cppVar_53004;
	BIT_VEC cppVar_53006 = IRAM.rd(cppVar_53005);
	BIT_VEC cppVar_53007 = PC + 1;
	cppVar_53007 = (cppVar_53007 & cppMask_un_16_);
	BIT_VEC cppVar_53008 = ROM.rd(cppVar_53007);
	BIT_VEC cppVar_53009 = (cppVar_53008 >> 7) & cppMask_un_1_;
	bool cppVar_53010 = (cppVar_53009 == 1);
	BIT_VEC cppVar_53011 = PC + 1;
	cppVar_53011 = (cppVar_53011 & cppMask_un_16_);
	BIT_VEC cppVar_53012 = ROM.rd(cppVar_53011);
	BIT_VEC cppVar_53013 = (cppVar_53012 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53014 = (cppVar_53013 << 3) | 0;
	cppVar_53014 = (cppVar_53014 & cppMask_un_8_);
	BIT_VEC cppVar_53015 = PC + 1;
	cppVar_53015 = (cppVar_53015 & cppMask_un_16_);
	BIT_VEC cppVar_53016 = ROM.rd(cppVar_53015);
	BIT_VEC cppVar_53017 = (cppVar_53016 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53018 = (cppVar_53017 & cppMask_un_5_);
	BIT_VEC cppVar_53019 = cppVar_53018 + 32;
	cppVar_53019 = (cppVar_53019 & cppMask_un_8_);
	BIT_VEC cppVar_53020 = (cppVar_53010) ? cppVar_53014 : cppVar_53019;
	bool cppVar_53022 = (cppVar_53020 == 128);
	BIT_VEC cppVar_53023 = PC + 1;
	cppVar_53023 = (cppVar_53023 & cppMask_un_16_);
	BIT_VEC cppVar_53024 = ROM.rd(cppVar_53023);
	BIT_VEC cppVar_53025 = (cppVar_53024 >> 7) & cppMask_un_1_;
	bool cppVar_53026 = (cppVar_53025 == 1);
	BIT_VEC cppVar_53027 = PC + 1;
	cppVar_53027 = (cppVar_53027 & cppMask_un_16_);
	BIT_VEC cppVar_53028 = ROM.rd(cppVar_53027);
	BIT_VEC cppVar_53029 = (cppVar_53028 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53030 = (cppVar_53029 << 3) | 0;
	cppVar_53030 = (cppVar_53030 & cppMask_un_8_);
	BIT_VEC cppVar_53031 = PC + 1;
	cppVar_53031 = (cppVar_53031 & cppMask_un_16_);
	BIT_VEC cppVar_53032 = ROM.rd(cppVar_53031);
	BIT_VEC cppVar_53033 = (cppVar_53032 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53034 = (cppVar_53033 & cppMask_un_5_);
	BIT_VEC cppVar_53035 = cppVar_53034 + 32;
	cppVar_53035 = (cppVar_53035 & cppMask_un_8_);
	BIT_VEC cppVar_53036 = (cppVar_53026) ? cppVar_53030 : cppVar_53035;
	bool cppVar_53038 = (cppVar_53036 == 129);
	BIT_VEC cppVar_53039 = PC + 1;
	cppVar_53039 = (cppVar_53039 & cppMask_un_16_);
	BIT_VEC cppVar_53040 = ROM.rd(cppVar_53039);
	BIT_VEC cppVar_53041 = (cppVar_53040 >> 7) & cppMask_un_1_;
	bool cppVar_53042 = (cppVar_53041 == 1);
	BIT_VEC cppVar_53043 = PC + 1;
	cppVar_53043 = (cppVar_53043 & cppMask_un_16_);
	BIT_VEC cppVar_53044 = ROM.rd(cppVar_53043);
	BIT_VEC cppVar_53045 = (cppVar_53044 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53046 = (cppVar_53045 << 3) | 0;
	cppVar_53046 = (cppVar_53046 & cppMask_un_8_);
	BIT_VEC cppVar_53047 = PC + 1;
	cppVar_53047 = (cppVar_53047 & cppMask_un_16_);
	BIT_VEC cppVar_53048 = ROM.rd(cppVar_53047);
	BIT_VEC cppVar_53049 = (cppVar_53048 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53050 = (cppVar_53049 & cppMask_un_5_);
	BIT_VEC cppVar_53051 = cppVar_53050 + 32;
	cppVar_53051 = (cppVar_53051 & cppMask_un_8_);
	BIT_VEC cppVar_53052 = (cppVar_53042) ? cppVar_53046 : cppVar_53051;
	bool cppVar_53054 = (cppVar_53052 == 130);
	BIT_VEC cppVar_53055 = PC + 1;
	cppVar_53055 = (cppVar_53055 & cppMask_un_16_);
	BIT_VEC cppVar_53056 = ROM.rd(cppVar_53055);
	BIT_VEC cppVar_53057 = (cppVar_53056 >> 7) & cppMask_un_1_;
	bool cppVar_53058 = (cppVar_53057 == 1);
	BIT_VEC cppVar_53059 = PC + 1;
	cppVar_53059 = (cppVar_53059 & cppMask_un_16_);
	BIT_VEC cppVar_53060 = ROM.rd(cppVar_53059);
	BIT_VEC cppVar_53061 = (cppVar_53060 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53062 = (cppVar_53061 << 3) | 0;
	cppVar_53062 = (cppVar_53062 & cppMask_un_8_);
	BIT_VEC cppVar_53063 = PC + 1;
	cppVar_53063 = (cppVar_53063 & cppMask_un_16_);
	BIT_VEC cppVar_53064 = ROM.rd(cppVar_53063);
	BIT_VEC cppVar_53065 = (cppVar_53064 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53066 = (cppVar_53065 & cppMask_un_5_);
	BIT_VEC cppVar_53067 = cppVar_53066 + 32;
	cppVar_53067 = (cppVar_53067 & cppMask_un_8_);
	BIT_VEC cppVar_53068 = (cppVar_53058) ? cppVar_53062 : cppVar_53067;
	bool cppVar_53070 = (cppVar_53068 == 131);
	BIT_VEC cppVar_53071 = PC + 1;
	cppVar_53071 = (cppVar_53071 & cppMask_un_16_);
	BIT_VEC cppVar_53072 = ROM.rd(cppVar_53071);
	BIT_VEC cppVar_53073 = (cppVar_53072 >> 7) & cppMask_un_1_;
	bool cppVar_53074 = (cppVar_53073 == 1);
	BIT_VEC cppVar_53075 = PC + 1;
	cppVar_53075 = (cppVar_53075 & cppMask_un_16_);
	BIT_VEC cppVar_53076 = ROM.rd(cppVar_53075);
	BIT_VEC cppVar_53077 = (cppVar_53076 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53078 = (cppVar_53077 << 3) | 0;
	cppVar_53078 = (cppVar_53078 & cppMask_un_8_);
	BIT_VEC cppVar_53079 = PC + 1;
	cppVar_53079 = (cppVar_53079 & cppMask_un_16_);
	BIT_VEC cppVar_53080 = ROM.rd(cppVar_53079);
	BIT_VEC cppVar_53081 = (cppVar_53080 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53082 = (cppVar_53081 & cppMask_un_5_);
	BIT_VEC cppVar_53083 = cppVar_53082 + 32;
	cppVar_53083 = (cppVar_53083 & cppMask_un_8_);
	BIT_VEC cppVar_53084 = (cppVar_53074) ? cppVar_53078 : cppVar_53083;
	bool cppVar_53086 = (cppVar_53084 == 135);
	BIT_VEC cppVar_53087 = PC + 1;
	cppVar_53087 = (cppVar_53087 & cppMask_un_16_);
	BIT_VEC cppVar_53088 = ROM.rd(cppVar_53087);
	BIT_VEC cppVar_53089 = (cppVar_53088 >> 7) & cppMask_un_1_;
	bool cppVar_53090 = (cppVar_53089 == 1);
	BIT_VEC cppVar_53091 = PC + 1;
	cppVar_53091 = (cppVar_53091 & cppMask_un_16_);
	BIT_VEC cppVar_53092 = ROM.rd(cppVar_53091);
	BIT_VEC cppVar_53093 = (cppVar_53092 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53094 = (cppVar_53093 << 3) | 0;
	cppVar_53094 = (cppVar_53094 & cppMask_un_8_);
	BIT_VEC cppVar_53095 = PC + 1;
	cppVar_53095 = (cppVar_53095 & cppMask_un_16_);
	BIT_VEC cppVar_53096 = ROM.rd(cppVar_53095);
	BIT_VEC cppVar_53097 = (cppVar_53096 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53098 = (cppVar_53097 & cppMask_un_5_);
	BIT_VEC cppVar_53099 = cppVar_53098 + 32;
	cppVar_53099 = (cppVar_53099 & cppMask_un_8_);
	BIT_VEC cppVar_53100 = (cppVar_53090) ? cppVar_53094 : cppVar_53099;
	bool cppVar_53102 = (cppVar_53100 == 136);
	BIT_VEC cppVar_53103 = PC + 1;
	cppVar_53103 = (cppVar_53103 & cppMask_un_16_);
	BIT_VEC cppVar_53104 = ROM.rd(cppVar_53103);
	BIT_VEC cppVar_53105 = (cppVar_53104 >> 7) & cppMask_un_1_;
	bool cppVar_53106 = (cppVar_53105 == 1);
	BIT_VEC cppVar_53107 = PC + 1;
	cppVar_53107 = (cppVar_53107 & cppMask_un_16_);
	BIT_VEC cppVar_53108 = ROM.rd(cppVar_53107);
	BIT_VEC cppVar_53109 = (cppVar_53108 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53110 = (cppVar_53109 << 3) | 0;
	cppVar_53110 = (cppVar_53110 & cppMask_un_8_);
	BIT_VEC cppVar_53111 = PC + 1;
	cppVar_53111 = (cppVar_53111 & cppMask_un_16_);
	BIT_VEC cppVar_53112 = ROM.rd(cppVar_53111);
	BIT_VEC cppVar_53113 = (cppVar_53112 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53114 = (cppVar_53113 & cppMask_un_5_);
	BIT_VEC cppVar_53115 = cppVar_53114 + 32;
	cppVar_53115 = (cppVar_53115 & cppMask_un_8_);
	BIT_VEC cppVar_53116 = (cppVar_53106) ? cppVar_53110 : cppVar_53115;
	bool cppVar_53118 = (cppVar_53116 == 137);
	BIT_VEC cppVar_53119 = PC + 1;
	cppVar_53119 = (cppVar_53119 & cppMask_un_16_);
	BIT_VEC cppVar_53120 = ROM.rd(cppVar_53119);
	BIT_VEC cppVar_53121 = (cppVar_53120 >> 7) & cppMask_un_1_;
	bool cppVar_53122 = (cppVar_53121 == 1);
	BIT_VEC cppVar_53123 = PC + 1;
	cppVar_53123 = (cppVar_53123 & cppMask_un_16_);
	BIT_VEC cppVar_53124 = ROM.rd(cppVar_53123);
	BIT_VEC cppVar_53125 = (cppVar_53124 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53126 = (cppVar_53125 << 3) | 0;
	cppVar_53126 = (cppVar_53126 & cppMask_un_8_);
	BIT_VEC cppVar_53127 = PC + 1;
	cppVar_53127 = (cppVar_53127 & cppMask_un_16_);
	BIT_VEC cppVar_53128 = ROM.rd(cppVar_53127);
	BIT_VEC cppVar_53129 = (cppVar_53128 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53130 = (cppVar_53129 & cppMask_un_5_);
	BIT_VEC cppVar_53131 = cppVar_53130 + 32;
	cppVar_53131 = (cppVar_53131 & cppMask_un_8_);
	BIT_VEC cppVar_53132 = (cppVar_53122) ? cppVar_53126 : cppVar_53131;
	bool cppVar_53134 = (cppVar_53132 == 138);
	BIT_VEC cppVar_53135 = PC + 1;
	cppVar_53135 = (cppVar_53135 & cppMask_un_16_);
	BIT_VEC cppVar_53136 = ROM.rd(cppVar_53135);
	BIT_VEC cppVar_53137 = (cppVar_53136 >> 7) & cppMask_un_1_;
	bool cppVar_53138 = (cppVar_53137 == 1);
	BIT_VEC cppVar_53139 = PC + 1;
	cppVar_53139 = (cppVar_53139 & cppMask_un_16_);
	BIT_VEC cppVar_53140 = ROM.rd(cppVar_53139);
	BIT_VEC cppVar_53141 = (cppVar_53140 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53142 = (cppVar_53141 << 3) | 0;
	cppVar_53142 = (cppVar_53142 & cppMask_un_8_);
	BIT_VEC cppVar_53143 = PC + 1;
	cppVar_53143 = (cppVar_53143 & cppMask_un_16_);
	BIT_VEC cppVar_53144 = ROM.rd(cppVar_53143);
	BIT_VEC cppVar_53145 = (cppVar_53144 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53146 = (cppVar_53145 & cppMask_un_5_);
	BIT_VEC cppVar_53147 = cppVar_53146 + 32;
	cppVar_53147 = (cppVar_53147 & cppMask_un_8_);
	BIT_VEC cppVar_53148 = (cppVar_53138) ? cppVar_53142 : cppVar_53147;
	bool cppVar_53150 = (cppVar_53148 == 140);
	BIT_VEC cppVar_53151 = PC + 1;
	cppVar_53151 = (cppVar_53151 & cppMask_un_16_);
	BIT_VEC cppVar_53152 = ROM.rd(cppVar_53151);
	BIT_VEC cppVar_53153 = (cppVar_53152 >> 7) & cppMask_un_1_;
	bool cppVar_53154 = (cppVar_53153 == 1);
	BIT_VEC cppVar_53155 = PC + 1;
	cppVar_53155 = (cppVar_53155 & cppMask_un_16_);
	BIT_VEC cppVar_53156 = ROM.rd(cppVar_53155);
	BIT_VEC cppVar_53157 = (cppVar_53156 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53158 = (cppVar_53157 << 3) | 0;
	cppVar_53158 = (cppVar_53158 & cppMask_un_8_);
	BIT_VEC cppVar_53159 = PC + 1;
	cppVar_53159 = (cppVar_53159 & cppMask_un_16_);
	BIT_VEC cppVar_53160 = ROM.rd(cppVar_53159);
	BIT_VEC cppVar_53161 = (cppVar_53160 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53162 = (cppVar_53161 & cppMask_un_5_);
	BIT_VEC cppVar_53163 = cppVar_53162 + 32;
	cppVar_53163 = (cppVar_53163 & cppMask_un_8_);
	BIT_VEC cppVar_53164 = (cppVar_53154) ? cppVar_53158 : cppVar_53163;
	bool cppVar_53166 = (cppVar_53164 == 139);
	BIT_VEC cppVar_53167 = PC + 1;
	cppVar_53167 = (cppVar_53167 & cppMask_un_16_);
	BIT_VEC cppVar_53168 = ROM.rd(cppVar_53167);
	BIT_VEC cppVar_53169 = (cppVar_53168 >> 7) & cppMask_un_1_;
	bool cppVar_53170 = (cppVar_53169 == 1);
	BIT_VEC cppVar_53171 = PC + 1;
	cppVar_53171 = (cppVar_53171 & cppMask_un_16_);
	BIT_VEC cppVar_53172 = ROM.rd(cppVar_53171);
	BIT_VEC cppVar_53173 = (cppVar_53172 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53174 = (cppVar_53173 << 3) | 0;
	cppVar_53174 = (cppVar_53174 & cppMask_un_8_);
	BIT_VEC cppVar_53175 = PC + 1;
	cppVar_53175 = (cppVar_53175 & cppMask_un_16_);
	BIT_VEC cppVar_53176 = ROM.rd(cppVar_53175);
	BIT_VEC cppVar_53177 = (cppVar_53176 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53178 = (cppVar_53177 & cppMask_un_5_);
	BIT_VEC cppVar_53179 = cppVar_53178 + 32;
	cppVar_53179 = (cppVar_53179 & cppMask_un_8_);
	BIT_VEC cppVar_53180 = (cppVar_53170) ? cppVar_53174 : cppVar_53179;
	bool cppVar_53182 = (cppVar_53180 == 141);
	BIT_VEC cppVar_53183 = PC + 1;
	cppVar_53183 = (cppVar_53183 & cppMask_un_16_);
	BIT_VEC cppVar_53184 = ROM.rd(cppVar_53183);
	BIT_VEC cppVar_53185 = (cppVar_53184 >> 7) & cppMask_un_1_;
	bool cppVar_53186 = (cppVar_53185 == 1);
	BIT_VEC cppVar_53187 = PC + 1;
	cppVar_53187 = (cppVar_53187 & cppMask_un_16_);
	BIT_VEC cppVar_53188 = ROM.rd(cppVar_53187);
	BIT_VEC cppVar_53189 = (cppVar_53188 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53190 = (cppVar_53189 << 3) | 0;
	cppVar_53190 = (cppVar_53190 & cppMask_un_8_);
	BIT_VEC cppVar_53191 = PC + 1;
	cppVar_53191 = (cppVar_53191 & cppMask_un_16_);
	BIT_VEC cppVar_53192 = ROM.rd(cppVar_53191);
	BIT_VEC cppVar_53193 = (cppVar_53192 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53194 = (cppVar_53193 & cppMask_un_5_);
	BIT_VEC cppVar_53195 = cppVar_53194 + 32;
	cppVar_53195 = (cppVar_53195 & cppMask_un_8_);
	BIT_VEC cppVar_53196 = (cppVar_53186) ? cppVar_53190 : cppVar_53195;
	bool cppVar_53198 = (cppVar_53196 == 144);
	BIT_VEC cppVar_53199 = PC + 1;
	cppVar_53199 = (cppVar_53199 & cppMask_un_16_);
	BIT_VEC cppVar_53200 = ROM.rd(cppVar_53199);
	BIT_VEC cppVar_53201 = (cppVar_53200 >> 7) & cppMask_un_1_;
	bool cppVar_53202 = (cppVar_53201 == 1);
	BIT_VEC cppVar_53203 = PC + 1;
	cppVar_53203 = (cppVar_53203 & cppMask_un_16_);
	BIT_VEC cppVar_53204 = ROM.rd(cppVar_53203);
	BIT_VEC cppVar_53205 = (cppVar_53204 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53206 = (cppVar_53205 << 3) | 0;
	cppVar_53206 = (cppVar_53206 & cppMask_un_8_);
	BIT_VEC cppVar_53207 = PC + 1;
	cppVar_53207 = (cppVar_53207 & cppMask_un_16_);
	BIT_VEC cppVar_53208 = ROM.rd(cppVar_53207);
	BIT_VEC cppVar_53209 = (cppVar_53208 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53210 = (cppVar_53209 & cppMask_un_5_);
	BIT_VEC cppVar_53211 = cppVar_53210 + 32;
	cppVar_53211 = (cppVar_53211 & cppMask_un_8_);
	BIT_VEC cppVar_53212 = (cppVar_53202) ? cppVar_53206 : cppVar_53211;
	bool cppVar_53214 = (cppVar_53212 == 152);
	BIT_VEC cppVar_53215 = PC + 1;
	cppVar_53215 = (cppVar_53215 & cppMask_un_16_);
	BIT_VEC cppVar_53216 = ROM.rd(cppVar_53215);
	BIT_VEC cppVar_53217 = (cppVar_53216 >> 7) & cppMask_un_1_;
	bool cppVar_53218 = (cppVar_53217 == 1);
	BIT_VEC cppVar_53219 = PC + 1;
	cppVar_53219 = (cppVar_53219 & cppMask_un_16_);
	BIT_VEC cppVar_53220 = ROM.rd(cppVar_53219);
	BIT_VEC cppVar_53221 = (cppVar_53220 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53222 = (cppVar_53221 << 3) | 0;
	cppVar_53222 = (cppVar_53222 & cppMask_un_8_);
	BIT_VEC cppVar_53223 = PC + 1;
	cppVar_53223 = (cppVar_53223 & cppMask_un_16_);
	BIT_VEC cppVar_53224 = ROM.rd(cppVar_53223);
	BIT_VEC cppVar_53225 = (cppVar_53224 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53226 = (cppVar_53225 & cppMask_un_5_);
	BIT_VEC cppVar_53227 = cppVar_53226 + 32;
	cppVar_53227 = (cppVar_53227 & cppMask_un_8_);
	BIT_VEC cppVar_53228 = (cppVar_53218) ? cppVar_53222 : cppVar_53227;
	bool cppVar_53230 = (cppVar_53228 == 153);
	BIT_VEC cppVar_53231 = PC + 1;
	cppVar_53231 = (cppVar_53231 & cppMask_un_16_);
	BIT_VEC cppVar_53232 = ROM.rd(cppVar_53231);
	BIT_VEC cppVar_53233 = (cppVar_53232 >> 7) & cppMask_un_1_;
	bool cppVar_53234 = (cppVar_53233 == 1);
	BIT_VEC cppVar_53235 = PC + 1;
	cppVar_53235 = (cppVar_53235 & cppMask_un_16_);
	BIT_VEC cppVar_53236 = ROM.rd(cppVar_53235);
	BIT_VEC cppVar_53237 = (cppVar_53236 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53238 = (cppVar_53237 << 3) | 0;
	cppVar_53238 = (cppVar_53238 & cppMask_un_8_);
	BIT_VEC cppVar_53239 = PC + 1;
	cppVar_53239 = (cppVar_53239 & cppMask_un_16_);
	BIT_VEC cppVar_53240 = ROM.rd(cppVar_53239);
	BIT_VEC cppVar_53241 = (cppVar_53240 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53242 = (cppVar_53241 & cppMask_un_5_);
	BIT_VEC cppVar_53243 = cppVar_53242 + 32;
	cppVar_53243 = (cppVar_53243 & cppMask_un_8_);
	BIT_VEC cppVar_53244 = (cppVar_53234) ? cppVar_53238 : cppVar_53243;
	bool cppVar_53246 = (cppVar_53244 == 160);
	BIT_VEC cppVar_53247 = PC + 1;
	cppVar_53247 = (cppVar_53247 & cppMask_un_16_);
	BIT_VEC cppVar_53248 = ROM.rd(cppVar_53247);
	BIT_VEC cppVar_53249 = (cppVar_53248 >> 7) & cppMask_un_1_;
	bool cppVar_53250 = (cppVar_53249 == 1);
	BIT_VEC cppVar_53251 = PC + 1;
	cppVar_53251 = (cppVar_53251 & cppMask_un_16_);
	BIT_VEC cppVar_53252 = ROM.rd(cppVar_53251);
	BIT_VEC cppVar_53253 = (cppVar_53252 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53254 = (cppVar_53253 << 3) | 0;
	cppVar_53254 = (cppVar_53254 & cppMask_un_8_);
	BIT_VEC cppVar_53255 = PC + 1;
	cppVar_53255 = (cppVar_53255 & cppMask_un_16_);
	BIT_VEC cppVar_53256 = ROM.rd(cppVar_53255);
	BIT_VEC cppVar_53257 = (cppVar_53256 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53258 = (cppVar_53257 & cppMask_un_5_);
	BIT_VEC cppVar_53259 = cppVar_53258 + 32;
	cppVar_53259 = (cppVar_53259 & cppMask_un_8_);
	BIT_VEC cppVar_53260 = (cppVar_53250) ? cppVar_53254 : cppVar_53259;
	bool cppVar_53262 = (cppVar_53260 == 168);
	BIT_VEC cppVar_53263 = PC + 1;
	cppVar_53263 = (cppVar_53263 & cppMask_un_16_);
	BIT_VEC cppVar_53264 = ROM.rd(cppVar_53263);
	BIT_VEC cppVar_53265 = (cppVar_53264 >> 7) & cppMask_un_1_;
	bool cppVar_53266 = (cppVar_53265 == 1);
	BIT_VEC cppVar_53267 = PC + 1;
	cppVar_53267 = (cppVar_53267 & cppMask_un_16_);
	BIT_VEC cppVar_53268 = ROM.rd(cppVar_53267);
	BIT_VEC cppVar_53269 = (cppVar_53268 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53270 = (cppVar_53269 << 3) | 0;
	cppVar_53270 = (cppVar_53270 & cppMask_un_8_);
	BIT_VEC cppVar_53271 = PC + 1;
	cppVar_53271 = (cppVar_53271 & cppMask_un_16_);
	BIT_VEC cppVar_53272 = ROM.rd(cppVar_53271);
	BIT_VEC cppVar_53273 = (cppVar_53272 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53274 = (cppVar_53273 & cppMask_un_5_);
	BIT_VEC cppVar_53275 = cppVar_53274 + 32;
	cppVar_53275 = (cppVar_53275 & cppMask_un_8_);
	BIT_VEC cppVar_53276 = (cppVar_53266) ? cppVar_53270 : cppVar_53275;
	bool cppVar_53278 = (cppVar_53276 == 176);
	BIT_VEC cppVar_53279 = PC + 1;
	cppVar_53279 = (cppVar_53279 & cppMask_un_16_);
	BIT_VEC cppVar_53280 = ROM.rd(cppVar_53279);
	BIT_VEC cppVar_53281 = (cppVar_53280 >> 7) & cppMask_un_1_;
	bool cppVar_53282 = (cppVar_53281 == 1);
	BIT_VEC cppVar_53283 = PC + 1;
	cppVar_53283 = (cppVar_53283 & cppMask_un_16_);
	BIT_VEC cppVar_53284 = ROM.rd(cppVar_53283);
	BIT_VEC cppVar_53285 = (cppVar_53284 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53286 = (cppVar_53285 << 3) | 0;
	cppVar_53286 = (cppVar_53286 & cppMask_un_8_);
	BIT_VEC cppVar_53287 = PC + 1;
	cppVar_53287 = (cppVar_53287 & cppMask_un_16_);
	BIT_VEC cppVar_53288 = ROM.rd(cppVar_53287);
	BIT_VEC cppVar_53289 = (cppVar_53288 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53290 = (cppVar_53289 & cppMask_un_5_);
	BIT_VEC cppVar_53291 = cppVar_53290 + 32;
	cppVar_53291 = (cppVar_53291 & cppMask_un_8_);
	BIT_VEC cppVar_53292 = (cppVar_53282) ? cppVar_53286 : cppVar_53291;
	bool cppVar_53294 = (cppVar_53292 == 184);
	BIT_VEC cppVar_53295 = PC + 1;
	cppVar_53295 = (cppVar_53295 & cppMask_un_16_);
	BIT_VEC cppVar_53296 = ROM.rd(cppVar_53295);
	BIT_VEC cppVar_53297 = (cppVar_53296 >> 7) & cppMask_un_1_;
	bool cppVar_53298 = (cppVar_53297 == 1);
	BIT_VEC cppVar_53299 = PC + 1;
	cppVar_53299 = (cppVar_53299 & cppMask_un_16_);
	BIT_VEC cppVar_53300 = ROM.rd(cppVar_53299);
	BIT_VEC cppVar_53301 = (cppVar_53300 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53302 = (cppVar_53301 << 3) | 0;
	cppVar_53302 = (cppVar_53302 & cppMask_un_8_);
	BIT_VEC cppVar_53303 = PC + 1;
	cppVar_53303 = (cppVar_53303 & cppMask_un_16_);
	BIT_VEC cppVar_53304 = ROM.rd(cppVar_53303);
	BIT_VEC cppVar_53305 = (cppVar_53304 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53306 = (cppVar_53305 & cppMask_un_5_);
	BIT_VEC cppVar_53307 = cppVar_53306 + 32;
	cppVar_53307 = (cppVar_53307 & cppMask_un_8_);
	BIT_VEC cppVar_53308 = (cppVar_53298) ? cppVar_53302 : cppVar_53307;
	bool cppVar_53310 = (cppVar_53308 == 208);
	BIT_VEC cppVar_53311 = PC + 1;
	cppVar_53311 = (cppVar_53311 & cppMask_un_16_);
	BIT_VEC cppVar_53312 = ROM.rd(cppVar_53311);
	BIT_VEC cppVar_53313 = (cppVar_53312 >> 7) & cppMask_un_1_;
	bool cppVar_53314 = (cppVar_53313 == 1);
	BIT_VEC cppVar_53315 = PC + 1;
	cppVar_53315 = (cppVar_53315 & cppMask_un_16_);
	BIT_VEC cppVar_53316 = ROM.rd(cppVar_53315);
	BIT_VEC cppVar_53317 = (cppVar_53316 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53318 = (cppVar_53317 << 3) | 0;
	cppVar_53318 = (cppVar_53318 & cppMask_un_8_);
	BIT_VEC cppVar_53319 = PC + 1;
	cppVar_53319 = (cppVar_53319 & cppMask_un_16_);
	BIT_VEC cppVar_53320 = ROM.rd(cppVar_53319);
	BIT_VEC cppVar_53321 = (cppVar_53320 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53322 = (cppVar_53321 & cppMask_un_5_);
	BIT_VEC cppVar_53323 = cppVar_53322 + 32;
	cppVar_53323 = (cppVar_53323 & cppMask_un_8_);
	BIT_VEC cppVar_53324 = (cppVar_53314) ? cppVar_53318 : cppVar_53323;
	bool cppVar_53326 = (cppVar_53324 == 224);
	BIT_VEC cppVar_53327 = PC + 1;
	cppVar_53327 = (cppVar_53327 & cppMask_un_16_);
	BIT_VEC cppVar_53328 = ROM.rd(cppVar_53327);
	BIT_VEC cppVar_53329 = (cppVar_53328 >> 7) & cppMask_un_1_;
	bool cppVar_53330 = (cppVar_53329 == 1);
	BIT_VEC cppVar_53331 = PC + 1;
	cppVar_53331 = (cppVar_53331 & cppMask_un_16_);
	BIT_VEC cppVar_53332 = ROM.rd(cppVar_53331);
	BIT_VEC cppVar_53333 = (cppVar_53332 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53334 = (cppVar_53333 << 3) | 0;
	cppVar_53334 = (cppVar_53334 & cppMask_un_8_);
	BIT_VEC cppVar_53335 = PC + 1;
	cppVar_53335 = (cppVar_53335 & cppMask_un_16_);
	BIT_VEC cppVar_53336 = ROM.rd(cppVar_53335);
	BIT_VEC cppVar_53337 = (cppVar_53336 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_53338 = (cppVar_53337 & cppMask_un_5_);
	BIT_VEC cppVar_53339 = cppVar_53338 + 32;
	cppVar_53339 = (cppVar_53339 & cppMask_un_8_);
	BIT_VEC cppVar_53340 = (cppVar_53330) ? cppVar_53334 : cppVar_53339;
	bool cppVar_53342 = (cppVar_53340 == 240);
	BIT_VEC cppVar_53344 = (cppVar_53342) ? B : 0;
	BIT_VEC cppVar_53345 = (cppVar_53326) ? ACC : cppVar_53344;
	BIT_VEC cppVar_53346 = (cppVar_53310) ? PSW : cppVar_53345;
	BIT_VEC cppVar_53347 = (cppVar_53294) ? IP : cppVar_53346;
	BIT_VEC cppVar_53348 = (cppVar_53278) ? P3 : cppVar_53347;
	BIT_VEC cppVar_53349 = (cppVar_53262) ? IE : cppVar_53348;
	BIT_VEC cppVar_53350 = (cppVar_53246) ? P2 : cppVar_53349;
	BIT_VEC cppVar_53351 = (cppVar_53230) ? SBUF : cppVar_53350;
	BIT_VEC cppVar_53352 = (cppVar_53214) ? SCON : cppVar_53351;
	BIT_VEC cppVar_53353 = (cppVar_53198) ? P1 : cppVar_53352;
	BIT_VEC cppVar_53354 = (cppVar_53182) ? TH1 : cppVar_53353;
	BIT_VEC cppVar_53355 = (cppVar_53166) ? TL1 : cppVar_53354;
	BIT_VEC cppVar_53356 = (cppVar_53150) ? TH0 : cppVar_53355;
	BIT_VEC cppVar_53357 = (cppVar_53134) ? TL0 : cppVar_53356;
	BIT_VEC cppVar_53358 = (cppVar_53118) ? TMOD : cppVar_53357;
	BIT_VEC cppVar_53359 = (cppVar_53102) ? TCON : cppVar_53358;
	BIT_VEC cppVar_53360 = (cppVar_53086) ? PCON : cppVar_53359;
	BIT_VEC cppVar_53361 = (cppVar_53070) ? DPH : cppVar_53360;
	BIT_VEC cppVar_53362 = (cppVar_53054) ? DPL : cppVar_53361;
	BIT_VEC cppVar_53363 = (cppVar_53038) ? SP : cppVar_53362;
	BIT_VEC cppVar_53364 = (cppVar_53022) ? P0 : cppVar_53363;
	BIT_VEC cppVar_53365 = (cppVar_52991) ? cppVar_53006 : cppVar_53364;
	BIT_VEC cppVar_53366 = PC + 1;
	cppVar_53366 = (cppVar_53366 & cppMask_un_16_);
	BIT_VEC cppVar_53367 = ROM.rd(cppVar_53366);
	BIT_VEC cppVar_53368 = (cppVar_53367 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_53369 = (cppVar_53365 >> static_cast<unsigned>(cppVar_53368)) & 0x1;
	BIT_VEC cppVar_53370 = cppVar_52970 | cppVar_53369;
	BIT_VEC cppVar_53371 = (PSW >> 0) & cppMask_un_7_;
	BIT_VEC cppVar_53372 = (cppVar_53370 << 7) | cppVar_53371;
	cppVar_53372 = (cppVar_53372 & cppMask_un_8_);
	BIT_VEC cppVar_53373 = ROM.rd(PC);
	bool cppVar_53375 = (cppVar_53373 == 99);
	BIT_VEC cppVar_53377 = PC + 1;
	cppVar_53377 = (cppVar_53377 & cppMask_un_16_);
	BIT_VEC cppVar_53378 = ROM.rd(cppVar_53377);
	bool cppVar_53380 = (cppVar_53378 == 208);
	BIT_VEC cppVar_53381 = PC + 1;
	cppVar_53381 = (cppVar_53381 & cppMask_un_16_);
	BIT_VEC cppVar_53382 = ROM.rd(cppVar_53381);
	BIT_VEC cppVar_53383 = (cppVar_53382 >> 7) & cppMask_un_1_;
	bool cppVar_53385 = (cppVar_53383 == 0);
	BIT_VEC cppVar_53386 = PC + 1;
	cppVar_53386 = (cppVar_53386 & cppMask_un_16_);
	BIT_VEC cppVar_53387 = ROM.rd(cppVar_53386);
	BIT_VEC cppVar_53388 = IRAM.rd(cppVar_53387);
	BIT_VEC cppVar_53389 = PC + 1;
	cppVar_53389 = (cppVar_53389 & cppMask_un_16_);
	BIT_VEC cppVar_53390 = ROM.rd(cppVar_53389);
	bool cppVar_53392 = (cppVar_53390 == 128);
	BIT_VEC cppVar_53393 = PC + 1;
	cppVar_53393 = (cppVar_53393 & cppMask_un_16_);
	BIT_VEC cppVar_53394 = ROM.rd(cppVar_53393);
	bool cppVar_53396 = (cppVar_53394 == 129);
	BIT_VEC cppVar_53397 = PC + 1;
	cppVar_53397 = (cppVar_53397 & cppMask_un_16_);
	BIT_VEC cppVar_53398 = ROM.rd(cppVar_53397);
	bool cppVar_53400 = (cppVar_53398 == 130);
	BIT_VEC cppVar_53401 = PC + 1;
	cppVar_53401 = (cppVar_53401 & cppMask_un_16_);
	BIT_VEC cppVar_53402 = ROM.rd(cppVar_53401);
	bool cppVar_53404 = (cppVar_53402 == 131);
	BIT_VEC cppVar_53405 = PC + 1;
	cppVar_53405 = (cppVar_53405 & cppMask_un_16_);
	BIT_VEC cppVar_53406 = ROM.rd(cppVar_53405);
	bool cppVar_53408 = (cppVar_53406 == 135);
	BIT_VEC cppVar_53409 = PC + 1;
	cppVar_53409 = (cppVar_53409 & cppMask_un_16_);
	BIT_VEC cppVar_53410 = ROM.rd(cppVar_53409);
	bool cppVar_53412 = (cppVar_53410 == 136);
	BIT_VEC cppVar_53413 = PC + 1;
	cppVar_53413 = (cppVar_53413 & cppMask_un_16_);
	BIT_VEC cppVar_53414 = ROM.rd(cppVar_53413);
	bool cppVar_53416 = (cppVar_53414 == 137);
	BIT_VEC cppVar_53417 = PC + 1;
	cppVar_53417 = (cppVar_53417 & cppMask_un_16_);
	BIT_VEC cppVar_53418 = ROM.rd(cppVar_53417);
	bool cppVar_53420 = (cppVar_53418 == 138);
	BIT_VEC cppVar_53421 = PC + 1;
	cppVar_53421 = (cppVar_53421 & cppMask_un_16_);
	BIT_VEC cppVar_53422 = ROM.rd(cppVar_53421);
	bool cppVar_53424 = (cppVar_53422 == 140);
	BIT_VEC cppVar_53425 = PC + 1;
	cppVar_53425 = (cppVar_53425 & cppMask_un_16_);
	BIT_VEC cppVar_53426 = ROM.rd(cppVar_53425);
	bool cppVar_53428 = (cppVar_53426 == 139);
	BIT_VEC cppVar_53429 = PC + 1;
	cppVar_53429 = (cppVar_53429 & cppMask_un_16_);
	BIT_VEC cppVar_53430 = ROM.rd(cppVar_53429);
	bool cppVar_53432 = (cppVar_53430 == 141);
	BIT_VEC cppVar_53433 = PC + 1;
	cppVar_53433 = (cppVar_53433 & cppMask_un_16_);
	BIT_VEC cppVar_53434 = ROM.rd(cppVar_53433);
	bool cppVar_53436 = (cppVar_53434 == 144);
	BIT_VEC cppVar_53437 = PC + 1;
	cppVar_53437 = (cppVar_53437 & cppMask_un_16_);
	BIT_VEC cppVar_53438 = ROM.rd(cppVar_53437);
	bool cppVar_53440 = (cppVar_53438 == 152);
	BIT_VEC cppVar_53441 = PC + 1;
	cppVar_53441 = (cppVar_53441 & cppMask_un_16_);
	BIT_VEC cppVar_53442 = ROM.rd(cppVar_53441);
	bool cppVar_53444 = (cppVar_53442 == 153);
	BIT_VEC cppVar_53445 = PC + 1;
	cppVar_53445 = (cppVar_53445 & cppMask_un_16_);
	BIT_VEC cppVar_53446 = ROM.rd(cppVar_53445);
	bool cppVar_53448 = (cppVar_53446 == 160);
	BIT_VEC cppVar_53449 = PC + 1;
	cppVar_53449 = (cppVar_53449 & cppMask_un_16_);
	BIT_VEC cppVar_53450 = ROM.rd(cppVar_53449);
	bool cppVar_53452 = (cppVar_53450 == 168);
	BIT_VEC cppVar_53453 = PC + 1;
	cppVar_53453 = (cppVar_53453 & cppMask_un_16_);
	BIT_VEC cppVar_53454 = ROM.rd(cppVar_53453);
	bool cppVar_53456 = (cppVar_53454 == 176);
	BIT_VEC cppVar_53457 = PC + 1;
	cppVar_53457 = (cppVar_53457 & cppMask_un_16_);
	BIT_VEC cppVar_53458 = ROM.rd(cppVar_53457);
	bool cppVar_53460 = (cppVar_53458 == 184);
	BIT_VEC cppVar_53461 = PC + 1;
	cppVar_53461 = (cppVar_53461 & cppMask_un_16_);
	BIT_VEC cppVar_53462 = ROM.rd(cppVar_53461);
	bool cppVar_53464 = (cppVar_53462 == 208);
	BIT_VEC cppVar_53465 = PC + 1;
	cppVar_53465 = (cppVar_53465 & cppMask_un_16_);
	BIT_VEC cppVar_53466 = ROM.rd(cppVar_53465);
	bool cppVar_53468 = (cppVar_53466 == 224);
	BIT_VEC cppVar_53469 = PC + 1;
	cppVar_53469 = (cppVar_53469 & cppMask_un_16_);
	BIT_VEC cppVar_53470 = ROM.rd(cppVar_53469);
	bool cppVar_53472 = (cppVar_53470 == 240);
	BIT_VEC cppVar_53474 = (cppVar_53472) ? B : 0;
	BIT_VEC cppVar_53475 = (cppVar_53468) ? ACC : cppVar_53474;
	BIT_VEC cppVar_53476 = (cppVar_53464) ? PSW : cppVar_53475;
	BIT_VEC cppVar_53477 = (cppVar_53460) ? IP : cppVar_53476;
	BIT_VEC cppVar_53478 = (cppVar_53456) ? P3 : cppVar_53477;
	BIT_VEC cppVar_53479 = (cppVar_53452) ? IE : cppVar_53478;
	BIT_VEC cppVar_53480 = (cppVar_53448) ? P2 : cppVar_53479;
	BIT_VEC cppVar_53481 = (cppVar_53444) ? SBUF : cppVar_53480;
	BIT_VEC cppVar_53482 = (cppVar_53440) ? SCON : cppVar_53481;
	BIT_VEC cppVar_53483 = (cppVar_53436) ? P1 : cppVar_53482;
	BIT_VEC cppVar_53484 = (cppVar_53432) ? TH1 : cppVar_53483;
	BIT_VEC cppVar_53485 = (cppVar_53428) ? TL1 : cppVar_53484;
	BIT_VEC cppVar_53486 = (cppVar_53424) ? TH0 : cppVar_53485;
	BIT_VEC cppVar_53487 = (cppVar_53420) ? TL0 : cppVar_53486;
	BIT_VEC cppVar_53488 = (cppVar_53416) ? TMOD : cppVar_53487;
	BIT_VEC cppVar_53489 = (cppVar_53412) ? TCON : cppVar_53488;
	BIT_VEC cppVar_53490 = (cppVar_53408) ? PCON : cppVar_53489;
	BIT_VEC cppVar_53491 = (cppVar_53404) ? DPH : cppVar_53490;
	BIT_VEC cppVar_53492 = (cppVar_53400) ? DPL : cppVar_53491;
	BIT_VEC cppVar_53493 = (cppVar_53396) ? SP : cppVar_53492;
	BIT_VEC cppVar_53494 = (cppVar_53392) ? P0 : cppVar_53493;
	BIT_VEC cppVar_53495 = (cppVar_53385) ? cppVar_53388 : cppVar_53494;
	BIT_VEC cppVar_53497 = PC + 2;
	cppVar_53497 = (cppVar_53497 & cppMask_un_16_);
	BIT_VEC cppVar_53498 = ROM.rd(cppVar_53497);
	BIT_VEC cppVar_53499 = cppVar_53495 ^ cppVar_53498;
	BIT_VEC cppVar_53500 = (cppVar_53380) ? cppVar_53499 : PSW;
	BIT_VEC cppVar_53501 = ROM.rd(PC);
	bool cppVar_53503 = (cppVar_53501 == 98);
	BIT_VEC cppVar_53505 = PC + 1;
	cppVar_53505 = (cppVar_53505 & cppMask_un_16_);
	BIT_VEC cppVar_53506 = ROM.rd(cppVar_53505);
	bool cppVar_53508 = (cppVar_53506 == 208);
	BIT_VEC cppVar_53509 = PC + 1;
	cppVar_53509 = (cppVar_53509 & cppMask_un_16_);
	BIT_VEC cppVar_53510 = ROM.rd(cppVar_53509);
	BIT_VEC cppVar_53511 = (cppVar_53510 >> 7) & cppMask_un_1_;
	bool cppVar_53513 = (cppVar_53511 == 0);
	BIT_VEC cppVar_53514 = PC + 1;
	cppVar_53514 = (cppVar_53514 & cppMask_un_16_);
	BIT_VEC cppVar_53515 = ROM.rd(cppVar_53514);
	BIT_VEC cppVar_53516 = IRAM.rd(cppVar_53515);
	BIT_VEC cppVar_53517 = PC + 1;
	cppVar_53517 = (cppVar_53517 & cppMask_un_16_);
	BIT_VEC cppVar_53518 = ROM.rd(cppVar_53517);
	bool cppVar_53520 = (cppVar_53518 == 128);
	BIT_VEC cppVar_53521 = PC + 1;
	cppVar_53521 = (cppVar_53521 & cppMask_un_16_);
	BIT_VEC cppVar_53522 = ROM.rd(cppVar_53521);
	bool cppVar_53524 = (cppVar_53522 == 129);
	BIT_VEC cppVar_53525 = PC + 1;
	cppVar_53525 = (cppVar_53525 & cppMask_un_16_);
	BIT_VEC cppVar_53526 = ROM.rd(cppVar_53525);
	bool cppVar_53528 = (cppVar_53526 == 130);
	BIT_VEC cppVar_53529 = PC + 1;
	cppVar_53529 = (cppVar_53529 & cppMask_un_16_);
	BIT_VEC cppVar_53530 = ROM.rd(cppVar_53529);
	bool cppVar_53532 = (cppVar_53530 == 131);
	BIT_VEC cppVar_53533 = PC + 1;
	cppVar_53533 = (cppVar_53533 & cppMask_un_16_);
	BIT_VEC cppVar_53534 = ROM.rd(cppVar_53533);
	bool cppVar_53536 = (cppVar_53534 == 135);
	BIT_VEC cppVar_53537 = PC + 1;
	cppVar_53537 = (cppVar_53537 & cppMask_un_16_);
	BIT_VEC cppVar_53538 = ROM.rd(cppVar_53537);
	bool cppVar_53540 = (cppVar_53538 == 136);
	BIT_VEC cppVar_53541 = PC + 1;
	cppVar_53541 = (cppVar_53541 & cppMask_un_16_);
	BIT_VEC cppVar_53542 = ROM.rd(cppVar_53541);
	bool cppVar_53544 = (cppVar_53542 == 137);
	BIT_VEC cppVar_53545 = PC + 1;
	cppVar_53545 = (cppVar_53545 & cppMask_un_16_);
	BIT_VEC cppVar_53546 = ROM.rd(cppVar_53545);
	bool cppVar_53548 = (cppVar_53546 == 138);
	BIT_VEC cppVar_53549 = PC + 1;
	cppVar_53549 = (cppVar_53549 & cppMask_un_16_);
	BIT_VEC cppVar_53550 = ROM.rd(cppVar_53549);
	bool cppVar_53552 = (cppVar_53550 == 140);
	BIT_VEC cppVar_53553 = PC + 1;
	cppVar_53553 = (cppVar_53553 & cppMask_un_16_);
	BIT_VEC cppVar_53554 = ROM.rd(cppVar_53553);
	bool cppVar_53556 = (cppVar_53554 == 139);
	BIT_VEC cppVar_53557 = PC + 1;
	cppVar_53557 = (cppVar_53557 & cppMask_un_16_);
	BIT_VEC cppVar_53558 = ROM.rd(cppVar_53557);
	bool cppVar_53560 = (cppVar_53558 == 141);
	BIT_VEC cppVar_53561 = PC + 1;
	cppVar_53561 = (cppVar_53561 & cppMask_un_16_);
	BIT_VEC cppVar_53562 = ROM.rd(cppVar_53561);
	bool cppVar_53564 = (cppVar_53562 == 144);
	BIT_VEC cppVar_53565 = PC + 1;
	cppVar_53565 = (cppVar_53565 & cppMask_un_16_);
	BIT_VEC cppVar_53566 = ROM.rd(cppVar_53565);
	bool cppVar_53568 = (cppVar_53566 == 152);
	BIT_VEC cppVar_53569 = PC + 1;
	cppVar_53569 = (cppVar_53569 & cppMask_un_16_);
	BIT_VEC cppVar_53570 = ROM.rd(cppVar_53569);
	bool cppVar_53572 = (cppVar_53570 == 153);
	BIT_VEC cppVar_53573 = PC + 1;
	cppVar_53573 = (cppVar_53573 & cppMask_un_16_);
	BIT_VEC cppVar_53574 = ROM.rd(cppVar_53573);
	bool cppVar_53576 = (cppVar_53574 == 160);
	BIT_VEC cppVar_53577 = PC + 1;
	cppVar_53577 = (cppVar_53577 & cppMask_un_16_);
	BIT_VEC cppVar_53578 = ROM.rd(cppVar_53577);
	bool cppVar_53580 = (cppVar_53578 == 168);
	BIT_VEC cppVar_53581 = PC + 1;
	cppVar_53581 = (cppVar_53581 & cppMask_un_16_);
	BIT_VEC cppVar_53582 = ROM.rd(cppVar_53581);
	bool cppVar_53584 = (cppVar_53582 == 176);
	BIT_VEC cppVar_53585 = PC + 1;
	cppVar_53585 = (cppVar_53585 & cppMask_un_16_);
	BIT_VEC cppVar_53586 = ROM.rd(cppVar_53585);
	bool cppVar_53588 = (cppVar_53586 == 184);
	BIT_VEC cppVar_53589 = PC + 1;
	cppVar_53589 = (cppVar_53589 & cppMask_un_16_);
	BIT_VEC cppVar_53590 = ROM.rd(cppVar_53589);
	bool cppVar_53592 = (cppVar_53590 == 208);
	BIT_VEC cppVar_53593 = PC + 1;
	cppVar_53593 = (cppVar_53593 & cppMask_un_16_);
	BIT_VEC cppVar_53594 = ROM.rd(cppVar_53593);
	bool cppVar_53596 = (cppVar_53594 == 224);
	BIT_VEC cppVar_53597 = PC + 1;
	cppVar_53597 = (cppVar_53597 & cppMask_un_16_);
	BIT_VEC cppVar_53598 = ROM.rd(cppVar_53597);
	bool cppVar_53600 = (cppVar_53598 == 240);
	BIT_VEC cppVar_53602 = (cppVar_53600) ? B : 0;
	BIT_VEC cppVar_53603 = (cppVar_53596) ? ACC : cppVar_53602;
	BIT_VEC cppVar_53604 = (cppVar_53592) ? PSW : cppVar_53603;
	BIT_VEC cppVar_53605 = (cppVar_53588) ? IP : cppVar_53604;
	BIT_VEC cppVar_53606 = (cppVar_53584) ? P3 : cppVar_53605;
	BIT_VEC cppVar_53607 = (cppVar_53580) ? IE : cppVar_53606;
	BIT_VEC cppVar_53608 = (cppVar_53576) ? P2 : cppVar_53607;
	BIT_VEC cppVar_53609 = (cppVar_53572) ? SBUF : cppVar_53608;
	BIT_VEC cppVar_53610 = (cppVar_53568) ? SCON : cppVar_53609;
	BIT_VEC cppVar_53611 = (cppVar_53564) ? P1 : cppVar_53610;
	BIT_VEC cppVar_53612 = (cppVar_53560) ? TH1 : cppVar_53611;
	BIT_VEC cppVar_53613 = (cppVar_53556) ? TL1 : cppVar_53612;
	BIT_VEC cppVar_53614 = (cppVar_53552) ? TH0 : cppVar_53613;
	BIT_VEC cppVar_53615 = (cppVar_53548) ? TL0 : cppVar_53614;
	BIT_VEC cppVar_53616 = (cppVar_53544) ? TMOD : cppVar_53615;
	BIT_VEC cppVar_53617 = (cppVar_53540) ? TCON : cppVar_53616;
	BIT_VEC cppVar_53618 = (cppVar_53536) ? PCON : cppVar_53617;
	BIT_VEC cppVar_53619 = (cppVar_53532) ? DPH : cppVar_53618;
	BIT_VEC cppVar_53620 = (cppVar_53528) ? DPL : cppVar_53619;
	BIT_VEC cppVar_53621 = (cppVar_53524) ? SP : cppVar_53620;
	BIT_VEC cppVar_53622 = (cppVar_53520) ? P0 : cppVar_53621;
	BIT_VEC cppVar_53623 = (cppVar_53513) ? cppVar_53516 : cppVar_53622;
	BIT_VEC cppVar_53624 = cppVar_53623 ^ ACC;
	BIT_VEC cppVar_53625 = (cppVar_53508) ? cppVar_53624 : PSW;
	BIT_VEC cppVar_53626 = ROM.rd(PC);
	bool cppVar_53628 = (cppVar_53626 == 83);
	BIT_VEC cppVar_53630 = PC + 1;
	cppVar_53630 = (cppVar_53630 & cppMask_un_16_);
	BIT_VEC cppVar_53631 = ROM.rd(cppVar_53630);
	bool cppVar_53633 = (cppVar_53631 == 208);
	BIT_VEC cppVar_53634 = PC + 1;
	cppVar_53634 = (cppVar_53634 & cppMask_un_16_);
	BIT_VEC cppVar_53635 = ROM.rd(cppVar_53634);
	BIT_VEC cppVar_53636 = (cppVar_53635 >> 7) & cppMask_un_1_;
	bool cppVar_53638 = (cppVar_53636 == 0);
	BIT_VEC cppVar_53639 = PC + 1;
	cppVar_53639 = (cppVar_53639 & cppMask_un_16_);
	BIT_VEC cppVar_53640 = ROM.rd(cppVar_53639);
	BIT_VEC cppVar_53641 = IRAM.rd(cppVar_53640);
	BIT_VEC cppVar_53642 = PC + 1;
	cppVar_53642 = (cppVar_53642 & cppMask_un_16_);
	BIT_VEC cppVar_53643 = ROM.rd(cppVar_53642);
	bool cppVar_53645 = (cppVar_53643 == 128);
	BIT_VEC cppVar_53646 = PC + 1;
	cppVar_53646 = (cppVar_53646 & cppMask_un_16_);
	BIT_VEC cppVar_53647 = ROM.rd(cppVar_53646);
	bool cppVar_53649 = (cppVar_53647 == 129);
	BIT_VEC cppVar_53650 = PC + 1;
	cppVar_53650 = (cppVar_53650 & cppMask_un_16_);
	BIT_VEC cppVar_53651 = ROM.rd(cppVar_53650);
	bool cppVar_53653 = (cppVar_53651 == 130);
	BIT_VEC cppVar_53654 = PC + 1;
	cppVar_53654 = (cppVar_53654 & cppMask_un_16_);
	BIT_VEC cppVar_53655 = ROM.rd(cppVar_53654);
	bool cppVar_53657 = (cppVar_53655 == 131);
	BIT_VEC cppVar_53658 = PC + 1;
	cppVar_53658 = (cppVar_53658 & cppMask_un_16_);
	BIT_VEC cppVar_53659 = ROM.rd(cppVar_53658);
	bool cppVar_53661 = (cppVar_53659 == 135);
	BIT_VEC cppVar_53662 = PC + 1;
	cppVar_53662 = (cppVar_53662 & cppMask_un_16_);
	BIT_VEC cppVar_53663 = ROM.rd(cppVar_53662);
	bool cppVar_53665 = (cppVar_53663 == 136);
	BIT_VEC cppVar_53666 = PC + 1;
	cppVar_53666 = (cppVar_53666 & cppMask_un_16_);
	BIT_VEC cppVar_53667 = ROM.rd(cppVar_53666);
	bool cppVar_53669 = (cppVar_53667 == 137);
	BIT_VEC cppVar_53670 = PC + 1;
	cppVar_53670 = (cppVar_53670 & cppMask_un_16_);
	BIT_VEC cppVar_53671 = ROM.rd(cppVar_53670);
	bool cppVar_53673 = (cppVar_53671 == 138);
	BIT_VEC cppVar_53674 = PC + 1;
	cppVar_53674 = (cppVar_53674 & cppMask_un_16_);
	BIT_VEC cppVar_53675 = ROM.rd(cppVar_53674);
	bool cppVar_53677 = (cppVar_53675 == 140);
	BIT_VEC cppVar_53678 = PC + 1;
	cppVar_53678 = (cppVar_53678 & cppMask_un_16_);
	BIT_VEC cppVar_53679 = ROM.rd(cppVar_53678);
	bool cppVar_53681 = (cppVar_53679 == 139);
	BIT_VEC cppVar_53682 = PC + 1;
	cppVar_53682 = (cppVar_53682 & cppMask_un_16_);
	BIT_VEC cppVar_53683 = ROM.rd(cppVar_53682);
	bool cppVar_53685 = (cppVar_53683 == 141);
	BIT_VEC cppVar_53686 = PC + 1;
	cppVar_53686 = (cppVar_53686 & cppMask_un_16_);
	BIT_VEC cppVar_53687 = ROM.rd(cppVar_53686);
	bool cppVar_53689 = (cppVar_53687 == 144);
	BIT_VEC cppVar_53690 = PC + 1;
	cppVar_53690 = (cppVar_53690 & cppMask_un_16_);
	BIT_VEC cppVar_53691 = ROM.rd(cppVar_53690);
	bool cppVar_53693 = (cppVar_53691 == 152);
	BIT_VEC cppVar_53694 = PC + 1;
	cppVar_53694 = (cppVar_53694 & cppMask_un_16_);
	BIT_VEC cppVar_53695 = ROM.rd(cppVar_53694);
	bool cppVar_53697 = (cppVar_53695 == 153);
	BIT_VEC cppVar_53698 = PC + 1;
	cppVar_53698 = (cppVar_53698 & cppMask_un_16_);
	BIT_VEC cppVar_53699 = ROM.rd(cppVar_53698);
	bool cppVar_53701 = (cppVar_53699 == 160);
	BIT_VEC cppVar_53702 = PC + 1;
	cppVar_53702 = (cppVar_53702 & cppMask_un_16_);
	BIT_VEC cppVar_53703 = ROM.rd(cppVar_53702);
	bool cppVar_53705 = (cppVar_53703 == 168);
	BIT_VEC cppVar_53706 = PC + 1;
	cppVar_53706 = (cppVar_53706 & cppMask_un_16_);
	BIT_VEC cppVar_53707 = ROM.rd(cppVar_53706);
	bool cppVar_53709 = (cppVar_53707 == 176);
	BIT_VEC cppVar_53710 = PC + 1;
	cppVar_53710 = (cppVar_53710 & cppMask_un_16_);
	BIT_VEC cppVar_53711 = ROM.rd(cppVar_53710);
	bool cppVar_53713 = (cppVar_53711 == 184);
	BIT_VEC cppVar_53714 = PC + 1;
	cppVar_53714 = (cppVar_53714 & cppMask_un_16_);
	BIT_VEC cppVar_53715 = ROM.rd(cppVar_53714);
	bool cppVar_53717 = (cppVar_53715 == 208);
	BIT_VEC cppVar_53718 = PC + 1;
	cppVar_53718 = (cppVar_53718 & cppMask_un_16_);
	BIT_VEC cppVar_53719 = ROM.rd(cppVar_53718);
	bool cppVar_53721 = (cppVar_53719 == 224);
	BIT_VEC cppVar_53722 = PC + 1;
	cppVar_53722 = (cppVar_53722 & cppMask_un_16_);
	BIT_VEC cppVar_53723 = ROM.rd(cppVar_53722);
	bool cppVar_53725 = (cppVar_53723 == 240);
	BIT_VEC cppVar_53727 = (cppVar_53725) ? B : 0;
	BIT_VEC cppVar_53728 = (cppVar_53721) ? ACC : cppVar_53727;
	BIT_VEC cppVar_53729 = (cppVar_53717) ? PSW : cppVar_53728;
	BIT_VEC cppVar_53730 = (cppVar_53713) ? IP : cppVar_53729;
	BIT_VEC cppVar_53731 = (cppVar_53709) ? P3 : cppVar_53730;
	BIT_VEC cppVar_53732 = (cppVar_53705) ? IE : cppVar_53731;
	BIT_VEC cppVar_53733 = (cppVar_53701) ? P2 : cppVar_53732;
	BIT_VEC cppVar_53734 = (cppVar_53697) ? SBUF : cppVar_53733;
	BIT_VEC cppVar_53735 = (cppVar_53693) ? SCON : cppVar_53734;
	BIT_VEC cppVar_53736 = (cppVar_53689) ? P1 : cppVar_53735;
	BIT_VEC cppVar_53737 = (cppVar_53685) ? TH1 : cppVar_53736;
	BIT_VEC cppVar_53738 = (cppVar_53681) ? TL1 : cppVar_53737;
	BIT_VEC cppVar_53739 = (cppVar_53677) ? TH0 : cppVar_53738;
	BIT_VEC cppVar_53740 = (cppVar_53673) ? TL0 : cppVar_53739;
	BIT_VEC cppVar_53741 = (cppVar_53669) ? TMOD : cppVar_53740;
	BIT_VEC cppVar_53742 = (cppVar_53665) ? TCON : cppVar_53741;
	BIT_VEC cppVar_53743 = (cppVar_53661) ? PCON : cppVar_53742;
	BIT_VEC cppVar_53744 = (cppVar_53657) ? DPH : cppVar_53743;
	BIT_VEC cppVar_53745 = (cppVar_53653) ? DPL : cppVar_53744;
	BIT_VEC cppVar_53746 = (cppVar_53649) ? SP : cppVar_53745;
	BIT_VEC cppVar_53747 = (cppVar_53645) ? P0 : cppVar_53746;
	BIT_VEC cppVar_53748 = (cppVar_53638) ? cppVar_53641 : cppVar_53747;
	BIT_VEC cppVar_53750 = PC + 2;
	cppVar_53750 = (cppVar_53750 & cppMask_un_16_);
	BIT_VEC cppVar_53751 = ROM.rd(cppVar_53750);
	BIT_VEC cppVar_53752 = cppVar_53748 & cppVar_53751;
	BIT_VEC cppVar_53753 = (cppVar_53633) ? cppVar_53752 : PSW;
	BIT_VEC cppVar_53754 = ROM.rd(PC);
	bool cppVar_53756 = (cppVar_53754 == 82);
	BIT_VEC cppVar_53758 = PC + 1;
	cppVar_53758 = (cppVar_53758 & cppMask_un_16_);
	BIT_VEC cppVar_53759 = ROM.rd(cppVar_53758);
	bool cppVar_53761 = (cppVar_53759 == 208);
	BIT_VEC cppVar_53762 = PC + 1;
	cppVar_53762 = (cppVar_53762 & cppMask_un_16_);
	BIT_VEC cppVar_53763 = ROM.rd(cppVar_53762);
	BIT_VEC cppVar_53764 = (cppVar_53763 >> 7) & cppMask_un_1_;
	bool cppVar_53766 = (cppVar_53764 == 0);
	BIT_VEC cppVar_53767 = PC + 1;
	cppVar_53767 = (cppVar_53767 & cppMask_un_16_);
	BIT_VEC cppVar_53768 = ROM.rd(cppVar_53767);
	BIT_VEC cppVar_53769 = IRAM.rd(cppVar_53768);
	BIT_VEC cppVar_53770 = PC + 1;
	cppVar_53770 = (cppVar_53770 & cppMask_un_16_);
	BIT_VEC cppVar_53771 = ROM.rd(cppVar_53770);
	bool cppVar_53773 = (cppVar_53771 == 128);
	BIT_VEC cppVar_53774 = PC + 1;
	cppVar_53774 = (cppVar_53774 & cppMask_un_16_);
	BIT_VEC cppVar_53775 = ROM.rd(cppVar_53774);
	bool cppVar_53777 = (cppVar_53775 == 129);
	BIT_VEC cppVar_53778 = PC + 1;
	cppVar_53778 = (cppVar_53778 & cppMask_un_16_);
	BIT_VEC cppVar_53779 = ROM.rd(cppVar_53778);
	bool cppVar_53781 = (cppVar_53779 == 130);
	BIT_VEC cppVar_53782 = PC + 1;
	cppVar_53782 = (cppVar_53782 & cppMask_un_16_);
	BIT_VEC cppVar_53783 = ROM.rd(cppVar_53782);
	bool cppVar_53785 = (cppVar_53783 == 131);
	BIT_VEC cppVar_53786 = PC + 1;
	cppVar_53786 = (cppVar_53786 & cppMask_un_16_);
	BIT_VEC cppVar_53787 = ROM.rd(cppVar_53786);
	bool cppVar_53789 = (cppVar_53787 == 135);
	BIT_VEC cppVar_53790 = PC + 1;
	cppVar_53790 = (cppVar_53790 & cppMask_un_16_);
	BIT_VEC cppVar_53791 = ROM.rd(cppVar_53790);
	bool cppVar_53793 = (cppVar_53791 == 136);
	BIT_VEC cppVar_53794 = PC + 1;
	cppVar_53794 = (cppVar_53794 & cppMask_un_16_);
	BIT_VEC cppVar_53795 = ROM.rd(cppVar_53794);
	bool cppVar_53797 = (cppVar_53795 == 137);
	BIT_VEC cppVar_53798 = PC + 1;
	cppVar_53798 = (cppVar_53798 & cppMask_un_16_);
	BIT_VEC cppVar_53799 = ROM.rd(cppVar_53798);
	bool cppVar_53801 = (cppVar_53799 == 138);
	BIT_VEC cppVar_53802 = PC + 1;
	cppVar_53802 = (cppVar_53802 & cppMask_un_16_);
	BIT_VEC cppVar_53803 = ROM.rd(cppVar_53802);
	bool cppVar_53805 = (cppVar_53803 == 140);
	BIT_VEC cppVar_53806 = PC + 1;
	cppVar_53806 = (cppVar_53806 & cppMask_un_16_);
	BIT_VEC cppVar_53807 = ROM.rd(cppVar_53806);
	bool cppVar_53809 = (cppVar_53807 == 139);
	BIT_VEC cppVar_53810 = PC + 1;
	cppVar_53810 = (cppVar_53810 & cppMask_un_16_);
	BIT_VEC cppVar_53811 = ROM.rd(cppVar_53810);
	bool cppVar_53813 = (cppVar_53811 == 141);
	BIT_VEC cppVar_53814 = PC + 1;
	cppVar_53814 = (cppVar_53814 & cppMask_un_16_);
	BIT_VEC cppVar_53815 = ROM.rd(cppVar_53814);
	bool cppVar_53817 = (cppVar_53815 == 144);
	BIT_VEC cppVar_53818 = PC + 1;
	cppVar_53818 = (cppVar_53818 & cppMask_un_16_);
	BIT_VEC cppVar_53819 = ROM.rd(cppVar_53818);
	bool cppVar_53821 = (cppVar_53819 == 152);
	BIT_VEC cppVar_53822 = PC + 1;
	cppVar_53822 = (cppVar_53822 & cppMask_un_16_);
	BIT_VEC cppVar_53823 = ROM.rd(cppVar_53822);
	bool cppVar_53825 = (cppVar_53823 == 153);
	BIT_VEC cppVar_53826 = PC + 1;
	cppVar_53826 = (cppVar_53826 & cppMask_un_16_);
	BIT_VEC cppVar_53827 = ROM.rd(cppVar_53826);
	bool cppVar_53829 = (cppVar_53827 == 160);
	BIT_VEC cppVar_53830 = PC + 1;
	cppVar_53830 = (cppVar_53830 & cppMask_un_16_);
	BIT_VEC cppVar_53831 = ROM.rd(cppVar_53830);
	bool cppVar_53833 = (cppVar_53831 == 168);
	BIT_VEC cppVar_53834 = PC + 1;
	cppVar_53834 = (cppVar_53834 & cppMask_un_16_);
	BIT_VEC cppVar_53835 = ROM.rd(cppVar_53834);
	bool cppVar_53837 = (cppVar_53835 == 176);
	BIT_VEC cppVar_53838 = PC + 1;
	cppVar_53838 = (cppVar_53838 & cppMask_un_16_);
	BIT_VEC cppVar_53839 = ROM.rd(cppVar_53838);
	bool cppVar_53841 = (cppVar_53839 == 184);
	BIT_VEC cppVar_53842 = PC + 1;
	cppVar_53842 = (cppVar_53842 & cppMask_un_16_);
	BIT_VEC cppVar_53843 = ROM.rd(cppVar_53842);
	bool cppVar_53845 = (cppVar_53843 == 208);
	BIT_VEC cppVar_53846 = PC + 1;
	cppVar_53846 = (cppVar_53846 & cppMask_un_16_);
	BIT_VEC cppVar_53847 = ROM.rd(cppVar_53846);
	bool cppVar_53849 = (cppVar_53847 == 224);
	BIT_VEC cppVar_53850 = PC + 1;
	cppVar_53850 = (cppVar_53850 & cppMask_un_16_);
	BIT_VEC cppVar_53851 = ROM.rd(cppVar_53850);
	bool cppVar_53853 = (cppVar_53851 == 240);
	BIT_VEC cppVar_53855 = (cppVar_53853) ? B : 0;
	BIT_VEC cppVar_53856 = (cppVar_53849) ? ACC : cppVar_53855;
	BIT_VEC cppVar_53857 = (cppVar_53845) ? PSW : cppVar_53856;
	BIT_VEC cppVar_53858 = (cppVar_53841) ? IP : cppVar_53857;
	BIT_VEC cppVar_53859 = (cppVar_53837) ? P3 : cppVar_53858;
	BIT_VEC cppVar_53860 = (cppVar_53833) ? IE : cppVar_53859;
	BIT_VEC cppVar_53861 = (cppVar_53829) ? P2 : cppVar_53860;
	BIT_VEC cppVar_53862 = (cppVar_53825) ? SBUF : cppVar_53861;
	BIT_VEC cppVar_53863 = (cppVar_53821) ? SCON : cppVar_53862;
	BIT_VEC cppVar_53864 = (cppVar_53817) ? P1 : cppVar_53863;
	BIT_VEC cppVar_53865 = (cppVar_53813) ? TH1 : cppVar_53864;
	BIT_VEC cppVar_53866 = (cppVar_53809) ? TL1 : cppVar_53865;
	BIT_VEC cppVar_53867 = (cppVar_53805) ? TH0 : cppVar_53866;
	BIT_VEC cppVar_53868 = (cppVar_53801) ? TL0 : cppVar_53867;
	BIT_VEC cppVar_53869 = (cppVar_53797) ? TMOD : cppVar_53868;
	BIT_VEC cppVar_53870 = (cppVar_53793) ? TCON : cppVar_53869;
	BIT_VEC cppVar_53871 = (cppVar_53789) ? PCON : cppVar_53870;
	BIT_VEC cppVar_53872 = (cppVar_53785) ? DPH : cppVar_53871;
	BIT_VEC cppVar_53873 = (cppVar_53781) ? DPL : cppVar_53872;
	BIT_VEC cppVar_53874 = (cppVar_53777) ? SP : cppVar_53873;
	BIT_VEC cppVar_53875 = (cppVar_53773) ? P0 : cppVar_53874;
	BIT_VEC cppVar_53876 = (cppVar_53766) ? cppVar_53769 : cppVar_53875;
	BIT_VEC cppVar_53877 = cppVar_53876 & ACC;
	BIT_VEC cppVar_53878 = (cppVar_53761) ? cppVar_53877 : PSW;
	BIT_VEC cppVar_53879 = ROM.rd(PC);
	bool cppVar_53881 = (cppVar_53879 == 67);
	BIT_VEC cppVar_53883 = PC + 1;
	cppVar_53883 = (cppVar_53883 & cppMask_un_16_);
	BIT_VEC cppVar_53884 = ROM.rd(cppVar_53883);
	bool cppVar_53886 = (cppVar_53884 == 208);
	BIT_VEC cppVar_53887 = PC + 1;
	cppVar_53887 = (cppVar_53887 & cppMask_un_16_);
	BIT_VEC cppVar_53888 = ROM.rd(cppVar_53887);
	BIT_VEC cppVar_53889 = (cppVar_53888 >> 7) & cppMask_un_1_;
	bool cppVar_53891 = (cppVar_53889 == 0);
	BIT_VEC cppVar_53892 = PC + 1;
	cppVar_53892 = (cppVar_53892 & cppMask_un_16_);
	BIT_VEC cppVar_53893 = ROM.rd(cppVar_53892);
	BIT_VEC cppVar_53894 = IRAM.rd(cppVar_53893);
	BIT_VEC cppVar_53895 = PC + 1;
	cppVar_53895 = (cppVar_53895 & cppMask_un_16_);
	BIT_VEC cppVar_53896 = ROM.rd(cppVar_53895);
	bool cppVar_53898 = (cppVar_53896 == 128);
	BIT_VEC cppVar_53899 = PC + 1;
	cppVar_53899 = (cppVar_53899 & cppMask_un_16_);
	BIT_VEC cppVar_53900 = ROM.rd(cppVar_53899);
	bool cppVar_53902 = (cppVar_53900 == 129);
	BIT_VEC cppVar_53903 = PC + 1;
	cppVar_53903 = (cppVar_53903 & cppMask_un_16_);
	BIT_VEC cppVar_53904 = ROM.rd(cppVar_53903);
	bool cppVar_53906 = (cppVar_53904 == 130);
	BIT_VEC cppVar_53907 = PC + 1;
	cppVar_53907 = (cppVar_53907 & cppMask_un_16_);
	BIT_VEC cppVar_53908 = ROM.rd(cppVar_53907);
	bool cppVar_53910 = (cppVar_53908 == 131);
	BIT_VEC cppVar_53911 = PC + 1;
	cppVar_53911 = (cppVar_53911 & cppMask_un_16_);
	BIT_VEC cppVar_53912 = ROM.rd(cppVar_53911);
	bool cppVar_53914 = (cppVar_53912 == 135);
	BIT_VEC cppVar_53915 = PC + 1;
	cppVar_53915 = (cppVar_53915 & cppMask_un_16_);
	BIT_VEC cppVar_53916 = ROM.rd(cppVar_53915);
	bool cppVar_53918 = (cppVar_53916 == 136);
	BIT_VEC cppVar_53919 = PC + 1;
	cppVar_53919 = (cppVar_53919 & cppMask_un_16_);
	BIT_VEC cppVar_53920 = ROM.rd(cppVar_53919);
	bool cppVar_53922 = (cppVar_53920 == 137);
	BIT_VEC cppVar_53923 = PC + 1;
	cppVar_53923 = (cppVar_53923 & cppMask_un_16_);
	BIT_VEC cppVar_53924 = ROM.rd(cppVar_53923);
	bool cppVar_53926 = (cppVar_53924 == 138);
	BIT_VEC cppVar_53927 = PC + 1;
	cppVar_53927 = (cppVar_53927 & cppMask_un_16_);
	BIT_VEC cppVar_53928 = ROM.rd(cppVar_53927);
	bool cppVar_53930 = (cppVar_53928 == 140);
	BIT_VEC cppVar_53931 = PC + 1;
	cppVar_53931 = (cppVar_53931 & cppMask_un_16_);
	BIT_VEC cppVar_53932 = ROM.rd(cppVar_53931);
	bool cppVar_53934 = (cppVar_53932 == 139);
	BIT_VEC cppVar_53935 = PC + 1;
	cppVar_53935 = (cppVar_53935 & cppMask_un_16_);
	BIT_VEC cppVar_53936 = ROM.rd(cppVar_53935);
	bool cppVar_53938 = (cppVar_53936 == 141);
	BIT_VEC cppVar_53939 = PC + 1;
	cppVar_53939 = (cppVar_53939 & cppMask_un_16_);
	BIT_VEC cppVar_53940 = ROM.rd(cppVar_53939);
	bool cppVar_53942 = (cppVar_53940 == 144);
	BIT_VEC cppVar_53943 = PC + 1;
	cppVar_53943 = (cppVar_53943 & cppMask_un_16_);
	BIT_VEC cppVar_53944 = ROM.rd(cppVar_53943);
	bool cppVar_53946 = (cppVar_53944 == 152);
	BIT_VEC cppVar_53947 = PC + 1;
	cppVar_53947 = (cppVar_53947 & cppMask_un_16_);
	BIT_VEC cppVar_53948 = ROM.rd(cppVar_53947);
	bool cppVar_53950 = (cppVar_53948 == 153);
	BIT_VEC cppVar_53951 = PC + 1;
	cppVar_53951 = (cppVar_53951 & cppMask_un_16_);
	BIT_VEC cppVar_53952 = ROM.rd(cppVar_53951);
	bool cppVar_53954 = (cppVar_53952 == 160);
	BIT_VEC cppVar_53955 = PC + 1;
	cppVar_53955 = (cppVar_53955 & cppMask_un_16_);
	BIT_VEC cppVar_53956 = ROM.rd(cppVar_53955);
	bool cppVar_53958 = (cppVar_53956 == 168);
	BIT_VEC cppVar_53959 = PC + 1;
	cppVar_53959 = (cppVar_53959 & cppMask_un_16_);
	BIT_VEC cppVar_53960 = ROM.rd(cppVar_53959);
	bool cppVar_53962 = (cppVar_53960 == 176);
	BIT_VEC cppVar_53963 = PC + 1;
	cppVar_53963 = (cppVar_53963 & cppMask_un_16_);
	BIT_VEC cppVar_53964 = ROM.rd(cppVar_53963);
	bool cppVar_53966 = (cppVar_53964 == 184);
	BIT_VEC cppVar_53967 = PC + 1;
	cppVar_53967 = (cppVar_53967 & cppMask_un_16_);
	BIT_VEC cppVar_53968 = ROM.rd(cppVar_53967);
	bool cppVar_53970 = (cppVar_53968 == 208);
	BIT_VEC cppVar_53971 = PC + 1;
	cppVar_53971 = (cppVar_53971 & cppMask_un_16_);
	BIT_VEC cppVar_53972 = ROM.rd(cppVar_53971);
	bool cppVar_53974 = (cppVar_53972 == 224);
	BIT_VEC cppVar_53975 = PC + 1;
	cppVar_53975 = (cppVar_53975 & cppMask_un_16_);
	BIT_VEC cppVar_53976 = ROM.rd(cppVar_53975);
	bool cppVar_53978 = (cppVar_53976 == 240);
	BIT_VEC cppVar_53980 = (cppVar_53978) ? B : 0;
	BIT_VEC cppVar_53981 = (cppVar_53974) ? ACC : cppVar_53980;
	BIT_VEC cppVar_53982 = (cppVar_53970) ? PSW : cppVar_53981;
	BIT_VEC cppVar_53983 = (cppVar_53966) ? IP : cppVar_53982;
	BIT_VEC cppVar_53984 = (cppVar_53962) ? P3 : cppVar_53983;
	BIT_VEC cppVar_53985 = (cppVar_53958) ? IE : cppVar_53984;
	BIT_VEC cppVar_53986 = (cppVar_53954) ? P2 : cppVar_53985;
	BIT_VEC cppVar_53987 = (cppVar_53950) ? SBUF : cppVar_53986;
	BIT_VEC cppVar_53988 = (cppVar_53946) ? SCON : cppVar_53987;
	BIT_VEC cppVar_53989 = (cppVar_53942) ? P1 : cppVar_53988;
	BIT_VEC cppVar_53990 = (cppVar_53938) ? TH1 : cppVar_53989;
	BIT_VEC cppVar_53991 = (cppVar_53934) ? TL1 : cppVar_53990;
	BIT_VEC cppVar_53992 = (cppVar_53930) ? TH0 : cppVar_53991;
	BIT_VEC cppVar_53993 = (cppVar_53926) ? TL0 : cppVar_53992;
	BIT_VEC cppVar_53994 = (cppVar_53922) ? TMOD : cppVar_53993;
	BIT_VEC cppVar_53995 = (cppVar_53918) ? TCON : cppVar_53994;
	BIT_VEC cppVar_53996 = (cppVar_53914) ? PCON : cppVar_53995;
	BIT_VEC cppVar_53997 = (cppVar_53910) ? DPH : cppVar_53996;
	BIT_VEC cppVar_53998 = (cppVar_53906) ? DPL : cppVar_53997;
	BIT_VEC cppVar_53999 = (cppVar_53902) ? SP : cppVar_53998;
	BIT_VEC cppVar_54000 = (cppVar_53898) ? P0 : cppVar_53999;
	BIT_VEC cppVar_54001 = (cppVar_53891) ? cppVar_53894 : cppVar_54000;
	BIT_VEC cppVar_54003 = PC + 2;
	cppVar_54003 = (cppVar_54003 & cppMask_un_16_);
	BIT_VEC cppVar_54004 = ROM.rd(cppVar_54003);
	BIT_VEC cppVar_54005 = cppVar_54001 | cppVar_54004;
	BIT_VEC cppVar_54006 = (cppVar_53886) ? cppVar_54005 : PSW;
	BIT_VEC cppVar_54007 = ROM.rd(PC);
	bool cppVar_54009 = (cppVar_54007 == 66);
	BIT_VEC cppVar_54011 = PC + 1;
	cppVar_54011 = (cppVar_54011 & cppMask_un_16_);
	BIT_VEC cppVar_54012 = ROM.rd(cppVar_54011);
	bool cppVar_54014 = (cppVar_54012 == 208);
	BIT_VEC cppVar_54015 = PC + 1;
	cppVar_54015 = (cppVar_54015 & cppMask_un_16_);
	BIT_VEC cppVar_54016 = ROM.rd(cppVar_54015);
	BIT_VEC cppVar_54017 = (cppVar_54016 >> 7) & cppMask_un_1_;
	bool cppVar_54019 = (cppVar_54017 == 0);
	BIT_VEC cppVar_54020 = PC + 1;
	cppVar_54020 = (cppVar_54020 & cppMask_un_16_);
	BIT_VEC cppVar_54021 = ROM.rd(cppVar_54020);
	BIT_VEC cppVar_54022 = IRAM.rd(cppVar_54021);
	BIT_VEC cppVar_54023 = PC + 1;
	cppVar_54023 = (cppVar_54023 & cppMask_un_16_);
	BIT_VEC cppVar_54024 = ROM.rd(cppVar_54023);
	bool cppVar_54026 = (cppVar_54024 == 128);
	BIT_VEC cppVar_54027 = PC + 1;
	cppVar_54027 = (cppVar_54027 & cppMask_un_16_);
	BIT_VEC cppVar_54028 = ROM.rd(cppVar_54027);
	bool cppVar_54030 = (cppVar_54028 == 129);
	BIT_VEC cppVar_54031 = PC + 1;
	cppVar_54031 = (cppVar_54031 & cppMask_un_16_);
	BIT_VEC cppVar_54032 = ROM.rd(cppVar_54031);
	bool cppVar_54034 = (cppVar_54032 == 130);
	BIT_VEC cppVar_54035 = PC + 1;
	cppVar_54035 = (cppVar_54035 & cppMask_un_16_);
	BIT_VEC cppVar_54036 = ROM.rd(cppVar_54035);
	bool cppVar_54038 = (cppVar_54036 == 131);
	BIT_VEC cppVar_54039 = PC + 1;
	cppVar_54039 = (cppVar_54039 & cppMask_un_16_);
	BIT_VEC cppVar_54040 = ROM.rd(cppVar_54039);
	bool cppVar_54042 = (cppVar_54040 == 135);
	BIT_VEC cppVar_54043 = PC + 1;
	cppVar_54043 = (cppVar_54043 & cppMask_un_16_);
	BIT_VEC cppVar_54044 = ROM.rd(cppVar_54043);
	bool cppVar_54046 = (cppVar_54044 == 136);
	BIT_VEC cppVar_54047 = PC + 1;
	cppVar_54047 = (cppVar_54047 & cppMask_un_16_);
	BIT_VEC cppVar_54048 = ROM.rd(cppVar_54047);
	bool cppVar_54050 = (cppVar_54048 == 137);
	BIT_VEC cppVar_54051 = PC + 1;
	cppVar_54051 = (cppVar_54051 & cppMask_un_16_);
	BIT_VEC cppVar_54052 = ROM.rd(cppVar_54051);
	bool cppVar_54054 = (cppVar_54052 == 138);
	BIT_VEC cppVar_54055 = PC + 1;
	cppVar_54055 = (cppVar_54055 & cppMask_un_16_);
	BIT_VEC cppVar_54056 = ROM.rd(cppVar_54055);
	bool cppVar_54058 = (cppVar_54056 == 140);
	BIT_VEC cppVar_54059 = PC + 1;
	cppVar_54059 = (cppVar_54059 & cppMask_un_16_);
	BIT_VEC cppVar_54060 = ROM.rd(cppVar_54059);
	bool cppVar_54062 = (cppVar_54060 == 139);
	BIT_VEC cppVar_54063 = PC + 1;
	cppVar_54063 = (cppVar_54063 & cppMask_un_16_);
	BIT_VEC cppVar_54064 = ROM.rd(cppVar_54063);
	bool cppVar_54066 = (cppVar_54064 == 141);
	BIT_VEC cppVar_54067 = PC + 1;
	cppVar_54067 = (cppVar_54067 & cppMask_un_16_);
	BIT_VEC cppVar_54068 = ROM.rd(cppVar_54067);
	bool cppVar_54070 = (cppVar_54068 == 144);
	BIT_VEC cppVar_54071 = PC + 1;
	cppVar_54071 = (cppVar_54071 & cppMask_un_16_);
	BIT_VEC cppVar_54072 = ROM.rd(cppVar_54071);
	bool cppVar_54074 = (cppVar_54072 == 152);
	BIT_VEC cppVar_54075 = PC + 1;
	cppVar_54075 = (cppVar_54075 & cppMask_un_16_);
	BIT_VEC cppVar_54076 = ROM.rd(cppVar_54075);
	bool cppVar_54078 = (cppVar_54076 == 153);
	BIT_VEC cppVar_54079 = PC + 1;
	cppVar_54079 = (cppVar_54079 & cppMask_un_16_);
	BIT_VEC cppVar_54080 = ROM.rd(cppVar_54079);
	bool cppVar_54082 = (cppVar_54080 == 160);
	BIT_VEC cppVar_54083 = PC + 1;
	cppVar_54083 = (cppVar_54083 & cppMask_un_16_);
	BIT_VEC cppVar_54084 = ROM.rd(cppVar_54083);
	bool cppVar_54086 = (cppVar_54084 == 168);
	BIT_VEC cppVar_54087 = PC + 1;
	cppVar_54087 = (cppVar_54087 & cppMask_un_16_);
	BIT_VEC cppVar_54088 = ROM.rd(cppVar_54087);
	bool cppVar_54090 = (cppVar_54088 == 176);
	BIT_VEC cppVar_54091 = PC + 1;
	cppVar_54091 = (cppVar_54091 & cppMask_un_16_);
	BIT_VEC cppVar_54092 = ROM.rd(cppVar_54091);
	bool cppVar_54094 = (cppVar_54092 == 184);
	BIT_VEC cppVar_54095 = PC + 1;
	cppVar_54095 = (cppVar_54095 & cppMask_un_16_);
	BIT_VEC cppVar_54096 = ROM.rd(cppVar_54095);
	bool cppVar_54098 = (cppVar_54096 == 208);
	BIT_VEC cppVar_54099 = PC + 1;
	cppVar_54099 = (cppVar_54099 & cppMask_un_16_);
	BIT_VEC cppVar_54100 = ROM.rd(cppVar_54099);
	bool cppVar_54102 = (cppVar_54100 == 224);
	BIT_VEC cppVar_54103 = PC + 1;
	cppVar_54103 = (cppVar_54103 & cppMask_un_16_);
	BIT_VEC cppVar_54104 = ROM.rd(cppVar_54103);
	bool cppVar_54106 = (cppVar_54104 == 240);
	BIT_VEC cppVar_54108 = (cppVar_54106) ? B : 0;
	BIT_VEC cppVar_54109 = (cppVar_54102) ? ACC : cppVar_54108;
	BIT_VEC cppVar_54110 = (cppVar_54098) ? PSW : cppVar_54109;
	BIT_VEC cppVar_54111 = (cppVar_54094) ? IP : cppVar_54110;
	BIT_VEC cppVar_54112 = (cppVar_54090) ? P3 : cppVar_54111;
	BIT_VEC cppVar_54113 = (cppVar_54086) ? IE : cppVar_54112;
	BIT_VEC cppVar_54114 = (cppVar_54082) ? P2 : cppVar_54113;
	BIT_VEC cppVar_54115 = (cppVar_54078) ? SBUF : cppVar_54114;
	BIT_VEC cppVar_54116 = (cppVar_54074) ? SCON : cppVar_54115;
	BIT_VEC cppVar_54117 = (cppVar_54070) ? P1 : cppVar_54116;
	BIT_VEC cppVar_54118 = (cppVar_54066) ? TH1 : cppVar_54117;
	BIT_VEC cppVar_54119 = (cppVar_54062) ? TL1 : cppVar_54118;
	BIT_VEC cppVar_54120 = (cppVar_54058) ? TH0 : cppVar_54119;
	BIT_VEC cppVar_54121 = (cppVar_54054) ? TL0 : cppVar_54120;
	BIT_VEC cppVar_54122 = (cppVar_54050) ? TMOD : cppVar_54121;
	BIT_VEC cppVar_54123 = (cppVar_54046) ? TCON : cppVar_54122;
	BIT_VEC cppVar_54124 = (cppVar_54042) ? PCON : cppVar_54123;
	BIT_VEC cppVar_54125 = (cppVar_54038) ? DPH : cppVar_54124;
	BIT_VEC cppVar_54126 = (cppVar_54034) ? DPL : cppVar_54125;
	BIT_VEC cppVar_54127 = (cppVar_54030) ? SP : cppVar_54126;
	BIT_VEC cppVar_54128 = (cppVar_54026) ? P0 : cppVar_54127;
	BIT_VEC cppVar_54129 = (cppVar_54019) ? cppVar_54022 : cppVar_54128;
	BIT_VEC cppVar_54130 = cppVar_54129 | ACC;
	BIT_VEC cppVar_54131 = (cppVar_54014) ? cppVar_54130 : PSW;
	BIT_VEC cppVar_54132 = ROM.rd(PC);
	bool cppVar_54134 = (cppVar_54132 == 63);
	BIT_VEC cppVar_54135 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_54137 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54139 = (cppVar_54137 << 3) | 7;
	cppVar_54139 = (cppVar_54139 & cppMask_un_5_);
	BIT_VEC cppVar_54140 = (0 << 5) | cppVar_54139;
	cppVar_54140 = (cppVar_54140 & cppMask_un_8_);
	BIT_VEC cppVar_54141 = IRAM.rd(cppVar_54140);
	BIT_VEC cppVar_54142 = (cppVar_54141 & cppMask_un_8_);
	BIT_VEC cppVar_54143 = cppVar_54135 + cppVar_54142;
	cppVar_54143 = (cppVar_54143 & cppMask_un_9_);
	BIT_VEC cppVar_54144 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54145 = (cppVar_54144 & cppMask_un_1_);
	BIT_VEC cppVar_54146 = cppVar_54143 + cppVar_54145;
	cppVar_54146 = (cppVar_54146 & cppMask_un_9_);
	BIT_VEC cppVar_54147 = (cppVar_54146 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54148 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54149 = (cppVar_54148 & cppMask_un_4_);
	BIT_VEC cppVar_54150 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54151 = (cppVar_54150 << 3) | 7;
	cppVar_54151 = (cppVar_54151 & cppMask_un_5_);
	BIT_VEC cppVar_54152 = (0 << 5) | cppVar_54151;
	cppVar_54152 = (cppVar_54152 & cppMask_un_8_);
	BIT_VEC cppVar_54153 = IRAM.rd(cppVar_54152);
	BIT_VEC cppVar_54154 = (cppVar_54153 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54155 = (cppVar_54154 & cppMask_un_4_);
	BIT_VEC cppVar_54156 = cppVar_54149 + cppVar_54155;
	cppVar_54156 = (cppVar_54156 & cppMask_un_5_);
	BIT_VEC cppVar_54157 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54158 = (cppVar_54157 & cppMask_un_1_);
	BIT_VEC cppVar_54159 = cppVar_54156 + cppVar_54158;
	cppVar_54159 = (cppVar_54159 & cppMask_un_5_);
	BIT_VEC cppVar_54160 = (cppVar_54159 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_54161 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_54162 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54163 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54164 = (cppVar_54163 << 3) | 7;
	cppVar_54164 = (cppVar_54164 & cppMask_un_5_);
	BIT_VEC cppVar_54165 = (0 << 5) | cppVar_54164;
	cppVar_54165 = (cppVar_54165 & cppMask_un_8_);
	BIT_VEC cppVar_54166 = IRAM.rd(cppVar_54165);
	BIT_VEC cppVar_54167 = ((cppVar_54166 & cppMask_bit_8_) ? (cppVar_54166 | cppMask_sign_8_) : cppVar_54166);
	BIT_VEC cppVar_54168 = cppVar_54162 + cppVar_54167;
	cppVar_54168 = (cppVar_54168 & cppMask_un_9_);
	BIT_VEC cppVar_54169 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54170 = (cppVar_54169 & cppMask_un_1_);
	BIT_VEC cppVar_54171 = cppVar_54168 + cppVar_54170;
	cppVar_54171 = (cppVar_54171 & cppMask_un_9_);
	BIT_VEC cppVar_54172 = (cppVar_54171 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54173 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54174 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54175 = (cppVar_54174 << 3) | 7;
	cppVar_54175 = (cppVar_54175 & cppMask_un_5_);
	BIT_VEC cppVar_54176 = (0 << 5) | cppVar_54175;
	cppVar_54176 = (cppVar_54176 & cppMask_un_8_);
	BIT_VEC cppVar_54177 = IRAM.rd(cppVar_54176);
	BIT_VEC cppVar_54178 = ((cppVar_54177 & cppMask_bit_8_) ? (cppVar_54177 | cppMask_sign_8_) : cppVar_54177);
	BIT_VEC cppVar_54179 = cppVar_54173 + cppVar_54178;
	cppVar_54179 = (cppVar_54179 & cppMask_un_9_);
	BIT_VEC cppVar_54180 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54181 = (cppVar_54180 & cppMask_un_1_);
	BIT_VEC cppVar_54182 = cppVar_54179 + cppVar_54181;
	cppVar_54182 = (cppVar_54182 & cppMask_un_9_);
	BIT_VEC cppVar_54183 = (cppVar_54182 >> 7) & cppMask_un_1_;
	bool cppVar_54184 = (cppVar_54172 != cppVar_54183);
	BIT_VEC cppVar_54187 = (cppVar_54184) ? 1 : 0;
	BIT_VEC cppVar_54188 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_54189 = (cppVar_54187 << 2) | cppVar_54188;
	cppVar_54189 = (cppVar_54189 & cppMask_un_3_);
	BIT_VEC cppVar_54190 = (cppVar_54161 << 3) | cppVar_54189;
	cppVar_54190 = (cppVar_54190 & cppMask_un_6_);
	BIT_VEC cppVar_54191 = (cppVar_54160 << 6) | cppVar_54190;
	cppVar_54191 = (cppVar_54191 & cppMask_un_7_);
	BIT_VEC cppVar_54192 = (cppVar_54147 << 7) | cppVar_54191;
	cppVar_54192 = (cppVar_54192 & cppMask_un_8_);
	BIT_VEC cppVar_54193 = ROM.rd(PC);
	bool cppVar_54195 = (cppVar_54193 == 62);
	BIT_VEC cppVar_54196 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_54198 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54200 = (cppVar_54198 << 3) | 6;
	cppVar_54200 = (cppVar_54200 & cppMask_un_5_);
	BIT_VEC cppVar_54201 = (0 << 5) | cppVar_54200;
	cppVar_54201 = (cppVar_54201 & cppMask_un_8_);
	BIT_VEC cppVar_54202 = IRAM.rd(cppVar_54201);
	BIT_VEC cppVar_54203 = (cppVar_54202 & cppMask_un_8_);
	BIT_VEC cppVar_54204 = cppVar_54196 + cppVar_54203;
	cppVar_54204 = (cppVar_54204 & cppMask_un_9_);
	BIT_VEC cppVar_54205 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54206 = (cppVar_54205 & cppMask_un_1_);
	BIT_VEC cppVar_54207 = cppVar_54204 + cppVar_54206;
	cppVar_54207 = (cppVar_54207 & cppMask_un_9_);
	BIT_VEC cppVar_54208 = (cppVar_54207 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54209 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54210 = (cppVar_54209 & cppMask_un_4_);
	BIT_VEC cppVar_54211 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54212 = (cppVar_54211 << 3) | 6;
	cppVar_54212 = (cppVar_54212 & cppMask_un_5_);
	BIT_VEC cppVar_54213 = (0 << 5) | cppVar_54212;
	cppVar_54213 = (cppVar_54213 & cppMask_un_8_);
	BIT_VEC cppVar_54214 = IRAM.rd(cppVar_54213);
	BIT_VEC cppVar_54215 = (cppVar_54214 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54216 = (cppVar_54215 & cppMask_un_4_);
	BIT_VEC cppVar_54217 = cppVar_54210 + cppVar_54216;
	cppVar_54217 = (cppVar_54217 & cppMask_un_5_);
	BIT_VEC cppVar_54218 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54219 = (cppVar_54218 & cppMask_un_1_);
	BIT_VEC cppVar_54220 = cppVar_54217 + cppVar_54219;
	cppVar_54220 = (cppVar_54220 & cppMask_un_5_);
	BIT_VEC cppVar_54221 = (cppVar_54220 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_54222 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_54223 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54224 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54225 = (cppVar_54224 << 3) | 6;
	cppVar_54225 = (cppVar_54225 & cppMask_un_5_);
	BIT_VEC cppVar_54226 = (0 << 5) | cppVar_54225;
	cppVar_54226 = (cppVar_54226 & cppMask_un_8_);
	BIT_VEC cppVar_54227 = IRAM.rd(cppVar_54226);
	BIT_VEC cppVar_54228 = ((cppVar_54227 & cppMask_bit_8_) ? (cppVar_54227 | cppMask_sign_8_) : cppVar_54227);
	BIT_VEC cppVar_54229 = cppVar_54223 + cppVar_54228;
	cppVar_54229 = (cppVar_54229 & cppMask_un_9_);
	BIT_VEC cppVar_54230 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54231 = (cppVar_54230 & cppMask_un_1_);
	BIT_VEC cppVar_54232 = cppVar_54229 + cppVar_54231;
	cppVar_54232 = (cppVar_54232 & cppMask_un_9_);
	BIT_VEC cppVar_54233 = (cppVar_54232 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54234 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54235 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54236 = (cppVar_54235 << 3) | 6;
	cppVar_54236 = (cppVar_54236 & cppMask_un_5_);
	BIT_VEC cppVar_54237 = (0 << 5) | cppVar_54236;
	cppVar_54237 = (cppVar_54237 & cppMask_un_8_);
	BIT_VEC cppVar_54238 = IRAM.rd(cppVar_54237);
	BIT_VEC cppVar_54239 = ((cppVar_54238 & cppMask_bit_8_) ? (cppVar_54238 | cppMask_sign_8_) : cppVar_54238);
	BIT_VEC cppVar_54240 = cppVar_54234 + cppVar_54239;
	cppVar_54240 = (cppVar_54240 & cppMask_un_9_);
	BIT_VEC cppVar_54241 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54242 = (cppVar_54241 & cppMask_un_1_);
	BIT_VEC cppVar_54243 = cppVar_54240 + cppVar_54242;
	cppVar_54243 = (cppVar_54243 & cppMask_un_9_);
	BIT_VEC cppVar_54244 = (cppVar_54243 >> 7) & cppMask_un_1_;
	bool cppVar_54245 = (cppVar_54233 != cppVar_54244);
	BIT_VEC cppVar_54248 = (cppVar_54245) ? 1 : 0;
	BIT_VEC cppVar_54249 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_54250 = (cppVar_54248 << 2) | cppVar_54249;
	cppVar_54250 = (cppVar_54250 & cppMask_un_3_);
	BIT_VEC cppVar_54251 = (cppVar_54222 << 3) | cppVar_54250;
	cppVar_54251 = (cppVar_54251 & cppMask_un_6_);
	BIT_VEC cppVar_54252 = (cppVar_54221 << 6) | cppVar_54251;
	cppVar_54252 = (cppVar_54252 & cppMask_un_7_);
	BIT_VEC cppVar_54253 = (cppVar_54208 << 7) | cppVar_54252;
	cppVar_54253 = (cppVar_54253 & cppMask_un_8_);
	BIT_VEC cppVar_54254 = ROM.rd(PC);
	bool cppVar_54256 = (cppVar_54254 == 61);
	BIT_VEC cppVar_54257 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_54259 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54261 = (cppVar_54259 << 3) | 5;
	cppVar_54261 = (cppVar_54261 & cppMask_un_5_);
	BIT_VEC cppVar_54262 = (0 << 5) | cppVar_54261;
	cppVar_54262 = (cppVar_54262 & cppMask_un_8_);
	BIT_VEC cppVar_54263 = IRAM.rd(cppVar_54262);
	BIT_VEC cppVar_54264 = (cppVar_54263 & cppMask_un_8_);
	BIT_VEC cppVar_54265 = cppVar_54257 + cppVar_54264;
	cppVar_54265 = (cppVar_54265 & cppMask_un_9_);
	BIT_VEC cppVar_54266 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54267 = (cppVar_54266 & cppMask_un_1_);
	BIT_VEC cppVar_54268 = cppVar_54265 + cppVar_54267;
	cppVar_54268 = (cppVar_54268 & cppMask_un_9_);
	BIT_VEC cppVar_54269 = (cppVar_54268 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54270 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54271 = (cppVar_54270 & cppMask_un_4_);
	BIT_VEC cppVar_54272 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54273 = (cppVar_54272 << 3) | 5;
	cppVar_54273 = (cppVar_54273 & cppMask_un_5_);
	BIT_VEC cppVar_54274 = (0 << 5) | cppVar_54273;
	cppVar_54274 = (cppVar_54274 & cppMask_un_8_);
	BIT_VEC cppVar_54275 = IRAM.rd(cppVar_54274);
	BIT_VEC cppVar_54276 = (cppVar_54275 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54277 = (cppVar_54276 & cppMask_un_4_);
	BIT_VEC cppVar_54278 = cppVar_54271 + cppVar_54277;
	cppVar_54278 = (cppVar_54278 & cppMask_un_5_);
	BIT_VEC cppVar_54279 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54280 = (cppVar_54279 & cppMask_un_1_);
	BIT_VEC cppVar_54281 = cppVar_54278 + cppVar_54280;
	cppVar_54281 = (cppVar_54281 & cppMask_un_5_);
	BIT_VEC cppVar_54282 = (cppVar_54281 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_54283 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_54284 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54285 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54286 = (cppVar_54285 << 3) | 5;
	cppVar_54286 = (cppVar_54286 & cppMask_un_5_);
	BIT_VEC cppVar_54287 = (0 << 5) | cppVar_54286;
	cppVar_54287 = (cppVar_54287 & cppMask_un_8_);
	BIT_VEC cppVar_54288 = IRAM.rd(cppVar_54287);
	BIT_VEC cppVar_54289 = ((cppVar_54288 & cppMask_bit_8_) ? (cppVar_54288 | cppMask_sign_8_) : cppVar_54288);
	BIT_VEC cppVar_54290 = cppVar_54284 + cppVar_54289;
	cppVar_54290 = (cppVar_54290 & cppMask_un_9_);
	BIT_VEC cppVar_54291 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54292 = (cppVar_54291 & cppMask_un_1_);
	BIT_VEC cppVar_54293 = cppVar_54290 + cppVar_54292;
	cppVar_54293 = (cppVar_54293 & cppMask_un_9_);
	BIT_VEC cppVar_54294 = (cppVar_54293 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54295 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54296 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54297 = (cppVar_54296 << 3) | 5;
	cppVar_54297 = (cppVar_54297 & cppMask_un_5_);
	BIT_VEC cppVar_54298 = (0 << 5) | cppVar_54297;
	cppVar_54298 = (cppVar_54298 & cppMask_un_8_);
	BIT_VEC cppVar_54299 = IRAM.rd(cppVar_54298);
	BIT_VEC cppVar_54300 = ((cppVar_54299 & cppMask_bit_8_) ? (cppVar_54299 | cppMask_sign_8_) : cppVar_54299);
	BIT_VEC cppVar_54301 = cppVar_54295 + cppVar_54300;
	cppVar_54301 = (cppVar_54301 & cppMask_un_9_);
	BIT_VEC cppVar_54302 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54303 = (cppVar_54302 & cppMask_un_1_);
	BIT_VEC cppVar_54304 = cppVar_54301 + cppVar_54303;
	cppVar_54304 = (cppVar_54304 & cppMask_un_9_);
	BIT_VEC cppVar_54305 = (cppVar_54304 >> 7) & cppMask_un_1_;
	bool cppVar_54306 = (cppVar_54294 != cppVar_54305);
	BIT_VEC cppVar_54309 = (cppVar_54306) ? 1 : 0;
	BIT_VEC cppVar_54310 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_54311 = (cppVar_54309 << 2) | cppVar_54310;
	cppVar_54311 = (cppVar_54311 & cppMask_un_3_);
	BIT_VEC cppVar_54312 = (cppVar_54283 << 3) | cppVar_54311;
	cppVar_54312 = (cppVar_54312 & cppMask_un_6_);
	BIT_VEC cppVar_54313 = (cppVar_54282 << 6) | cppVar_54312;
	cppVar_54313 = (cppVar_54313 & cppMask_un_7_);
	BIT_VEC cppVar_54314 = (cppVar_54269 << 7) | cppVar_54313;
	cppVar_54314 = (cppVar_54314 & cppMask_un_8_);
	BIT_VEC cppVar_54315 = ROM.rd(PC);
	bool cppVar_54317 = (cppVar_54315 == 60);
	BIT_VEC cppVar_54318 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_54320 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54322 = (cppVar_54320 << 3) | 4;
	cppVar_54322 = (cppVar_54322 & cppMask_un_5_);
	BIT_VEC cppVar_54323 = (0 << 5) | cppVar_54322;
	cppVar_54323 = (cppVar_54323 & cppMask_un_8_);
	BIT_VEC cppVar_54324 = IRAM.rd(cppVar_54323);
	BIT_VEC cppVar_54325 = (cppVar_54324 & cppMask_un_8_);
	BIT_VEC cppVar_54326 = cppVar_54318 + cppVar_54325;
	cppVar_54326 = (cppVar_54326 & cppMask_un_9_);
	BIT_VEC cppVar_54327 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54328 = (cppVar_54327 & cppMask_un_1_);
	BIT_VEC cppVar_54329 = cppVar_54326 + cppVar_54328;
	cppVar_54329 = (cppVar_54329 & cppMask_un_9_);
	BIT_VEC cppVar_54330 = (cppVar_54329 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54331 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54332 = (cppVar_54331 & cppMask_un_4_);
	BIT_VEC cppVar_54333 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54334 = (cppVar_54333 << 3) | 4;
	cppVar_54334 = (cppVar_54334 & cppMask_un_5_);
	BIT_VEC cppVar_54335 = (0 << 5) | cppVar_54334;
	cppVar_54335 = (cppVar_54335 & cppMask_un_8_);
	BIT_VEC cppVar_54336 = IRAM.rd(cppVar_54335);
	BIT_VEC cppVar_54337 = (cppVar_54336 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54338 = (cppVar_54337 & cppMask_un_4_);
	BIT_VEC cppVar_54339 = cppVar_54332 + cppVar_54338;
	cppVar_54339 = (cppVar_54339 & cppMask_un_5_);
	BIT_VEC cppVar_54340 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54341 = (cppVar_54340 & cppMask_un_1_);
	BIT_VEC cppVar_54342 = cppVar_54339 + cppVar_54341;
	cppVar_54342 = (cppVar_54342 & cppMask_un_5_);
	BIT_VEC cppVar_54343 = (cppVar_54342 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_54344 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_54345 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54346 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54347 = (cppVar_54346 << 3) | 4;
	cppVar_54347 = (cppVar_54347 & cppMask_un_5_);
	BIT_VEC cppVar_54348 = (0 << 5) | cppVar_54347;
	cppVar_54348 = (cppVar_54348 & cppMask_un_8_);
	BIT_VEC cppVar_54349 = IRAM.rd(cppVar_54348);
	BIT_VEC cppVar_54350 = ((cppVar_54349 & cppMask_bit_8_) ? (cppVar_54349 | cppMask_sign_8_) : cppVar_54349);
	BIT_VEC cppVar_54351 = cppVar_54345 + cppVar_54350;
	cppVar_54351 = (cppVar_54351 & cppMask_un_9_);
	BIT_VEC cppVar_54352 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54353 = (cppVar_54352 & cppMask_un_1_);
	BIT_VEC cppVar_54354 = cppVar_54351 + cppVar_54353;
	cppVar_54354 = (cppVar_54354 & cppMask_un_9_);
	BIT_VEC cppVar_54355 = (cppVar_54354 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54356 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54357 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54358 = (cppVar_54357 << 3) | 4;
	cppVar_54358 = (cppVar_54358 & cppMask_un_5_);
	BIT_VEC cppVar_54359 = (0 << 5) | cppVar_54358;
	cppVar_54359 = (cppVar_54359 & cppMask_un_8_);
	BIT_VEC cppVar_54360 = IRAM.rd(cppVar_54359);
	BIT_VEC cppVar_54361 = ((cppVar_54360 & cppMask_bit_8_) ? (cppVar_54360 | cppMask_sign_8_) : cppVar_54360);
	BIT_VEC cppVar_54362 = cppVar_54356 + cppVar_54361;
	cppVar_54362 = (cppVar_54362 & cppMask_un_9_);
	BIT_VEC cppVar_54363 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54364 = (cppVar_54363 & cppMask_un_1_);
	BIT_VEC cppVar_54365 = cppVar_54362 + cppVar_54364;
	cppVar_54365 = (cppVar_54365 & cppMask_un_9_);
	BIT_VEC cppVar_54366 = (cppVar_54365 >> 7) & cppMask_un_1_;
	bool cppVar_54367 = (cppVar_54355 != cppVar_54366);
	BIT_VEC cppVar_54370 = (cppVar_54367) ? 1 : 0;
	BIT_VEC cppVar_54371 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_54372 = (cppVar_54370 << 2) | cppVar_54371;
	cppVar_54372 = (cppVar_54372 & cppMask_un_3_);
	BIT_VEC cppVar_54373 = (cppVar_54344 << 3) | cppVar_54372;
	cppVar_54373 = (cppVar_54373 & cppMask_un_6_);
	BIT_VEC cppVar_54374 = (cppVar_54343 << 6) | cppVar_54373;
	cppVar_54374 = (cppVar_54374 & cppMask_un_7_);
	BIT_VEC cppVar_54375 = (cppVar_54330 << 7) | cppVar_54374;
	cppVar_54375 = (cppVar_54375 & cppMask_un_8_);
	BIT_VEC cppVar_54376 = ROM.rd(PC);
	bool cppVar_54378 = (cppVar_54376 == 59);
	BIT_VEC cppVar_54379 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_54381 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54383 = (cppVar_54381 << 3) | 3;
	cppVar_54383 = (cppVar_54383 & cppMask_un_5_);
	BIT_VEC cppVar_54384 = (0 << 5) | cppVar_54383;
	cppVar_54384 = (cppVar_54384 & cppMask_un_8_);
	BIT_VEC cppVar_54385 = IRAM.rd(cppVar_54384);
	BIT_VEC cppVar_54386 = (cppVar_54385 & cppMask_un_8_);
	BIT_VEC cppVar_54387 = cppVar_54379 + cppVar_54386;
	cppVar_54387 = (cppVar_54387 & cppMask_un_9_);
	BIT_VEC cppVar_54388 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54389 = (cppVar_54388 & cppMask_un_1_);
	BIT_VEC cppVar_54390 = cppVar_54387 + cppVar_54389;
	cppVar_54390 = (cppVar_54390 & cppMask_un_9_);
	BIT_VEC cppVar_54391 = (cppVar_54390 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54392 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54393 = (cppVar_54392 & cppMask_un_4_);
	BIT_VEC cppVar_54394 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54395 = (cppVar_54394 << 3) | 3;
	cppVar_54395 = (cppVar_54395 & cppMask_un_5_);
	BIT_VEC cppVar_54396 = (0 << 5) | cppVar_54395;
	cppVar_54396 = (cppVar_54396 & cppMask_un_8_);
	BIT_VEC cppVar_54397 = IRAM.rd(cppVar_54396);
	BIT_VEC cppVar_54398 = (cppVar_54397 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54399 = (cppVar_54398 & cppMask_un_4_);
	BIT_VEC cppVar_54400 = cppVar_54393 + cppVar_54399;
	cppVar_54400 = (cppVar_54400 & cppMask_un_5_);
	BIT_VEC cppVar_54401 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54402 = (cppVar_54401 & cppMask_un_1_);
	BIT_VEC cppVar_54403 = cppVar_54400 + cppVar_54402;
	cppVar_54403 = (cppVar_54403 & cppMask_un_5_);
	BIT_VEC cppVar_54404 = (cppVar_54403 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_54405 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_54406 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54407 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54408 = (cppVar_54407 << 3) | 3;
	cppVar_54408 = (cppVar_54408 & cppMask_un_5_);
	BIT_VEC cppVar_54409 = (0 << 5) | cppVar_54408;
	cppVar_54409 = (cppVar_54409 & cppMask_un_8_);
	BIT_VEC cppVar_54410 = IRAM.rd(cppVar_54409);
	BIT_VEC cppVar_54411 = ((cppVar_54410 & cppMask_bit_8_) ? (cppVar_54410 | cppMask_sign_8_) : cppVar_54410);
	BIT_VEC cppVar_54412 = cppVar_54406 + cppVar_54411;
	cppVar_54412 = (cppVar_54412 & cppMask_un_9_);
	BIT_VEC cppVar_54413 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54414 = (cppVar_54413 & cppMask_un_1_);
	BIT_VEC cppVar_54415 = cppVar_54412 + cppVar_54414;
	cppVar_54415 = (cppVar_54415 & cppMask_un_9_);
	BIT_VEC cppVar_54416 = (cppVar_54415 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54417 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54418 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54419 = (cppVar_54418 << 3) | 3;
	cppVar_54419 = (cppVar_54419 & cppMask_un_5_);
	BIT_VEC cppVar_54420 = (0 << 5) | cppVar_54419;
	cppVar_54420 = (cppVar_54420 & cppMask_un_8_);
	BIT_VEC cppVar_54421 = IRAM.rd(cppVar_54420);
	BIT_VEC cppVar_54422 = ((cppVar_54421 & cppMask_bit_8_) ? (cppVar_54421 | cppMask_sign_8_) : cppVar_54421);
	BIT_VEC cppVar_54423 = cppVar_54417 + cppVar_54422;
	cppVar_54423 = (cppVar_54423 & cppMask_un_9_);
	BIT_VEC cppVar_54424 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54425 = (cppVar_54424 & cppMask_un_1_);
	BIT_VEC cppVar_54426 = cppVar_54423 + cppVar_54425;
	cppVar_54426 = (cppVar_54426 & cppMask_un_9_);
	BIT_VEC cppVar_54427 = (cppVar_54426 >> 7) & cppMask_un_1_;
	bool cppVar_54428 = (cppVar_54416 != cppVar_54427);
	BIT_VEC cppVar_54431 = (cppVar_54428) ? 1 : 0;
	BIT_VEC cppVar_54432 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_54433 = (cppVar_54431 << 2) | cppVar_54432;
	cppVar_54433 = (cppVar_54433 & cppMask_un_3_);
	BIT_VEC cppVar_54434 = (cppVar_54405 << 3) | cppVar_54433;
	cppVar_54434 = (cppVar_54434 & cppMask_un_6_);
	BIT_VEC cppVar_54435 = (cppVar_54404 << 6) | cppVar_54434;
	cppVar_54435 = (cppVar_54435 & cppMask_un_7_);
	BIT_VEC cppVar_54436 = (cppVar_54391 << 7) | cppVar_54435;
	cppVar_54436 = (cppVar_54436 & cppMask_un_8_);
	BIT_VEC cppVar_54437 = ROM.rd(PC);
	bool cppVar_54439 = (cppVar_54437 == 58);
	BIT_VEC cppVar_54440 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_54442 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54444 = (cppVar_54442 << 3) | 2;
	cppVar_54444 = (cppVar_54444 & cppMask_un_5_);
	BIT_VEC cppVar_54445 = (0 << 5) | cppVar_54444;
	cppVar_54445 = (cppVar_54445 & cppMask_un_8_);
	BIT_VEC cppVar_54446 = IRAM.rd(cppVar_54445);
	BIT_VEC cppVar_54447 = (cppVar_54446 & cppMask_un_8_);
	BIT_VEC cppVar_54448 = cppVar_54440 + cppVar_54447;
	cppVar_54448 = (cppVar_54448 & cppMask_un_9_);
	BIT_VEC cppVar_54449 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54450 = (cppVar_54449 & cppMask_un_1_);
	BIT_VEC cppVar_54451 = cppVar_54448 + cppVar_54450;
	cppVar_54451 = (cppVar_54451 & cppMask_un_9_);
	BIT_VEC cppVar_54452 = (cppVar_54451 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54453 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54454 = (cppVar_54453 & cppMask_un_4_);
	BIT_VEC cppVar_54455 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54456 = (cppVar_54455 << 3) | 2;
	cppVar_54456 = (cppVar_54456 & cppMask_un_5_);
	BIT_VEC cppVar_54457 = (0 << 5) | cppVar_54456;
	cppVar_54457 = (cppVar_54457 & cppMask_un_8_);
	BIT_VEC cppVar_54458 = IRAM.rd(cppVar_54457);
	BIT_VEC cppVar_54459 = (cppVar_54458 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54460 = (cppVar_54459 & cppMask_un_4_);
	BIT_VEC cppVar_54461 = cppVar_54454 + cppVar_54460;
	cppVar_54461 = (cppVar_54461 & cppMask_un_5_);
	BIT_VEC cppVar_54462 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54463 = (cppVar_54462 & cppMask_un_1_);
	BIT_VEC cppVar_54464 = cppVar_54461 + cppVar_54463;
	cppVar_54464 = (cppVar_54464 & cppMask_un_5_);
	BIT_VEC cppVar_54465 = (cppVar_54464 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_54466 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_54467 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54468 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54469 = (cppVar_54468 << 3) | 2;
	cppVar_54469 = (cppVar_54469 & cppMask_un_5_);
	BIT_VEC cppVar_54470 = (0 << 5) | cppVar_54469;
	cppVar_54470 = (cppVar_54470 & cppMask_un_8_);
	BIT_VEC cppVar_54471 = IRAM.rd(cppVar_54470);
	BIT_VEC cppVar_54472 = ((cppVar_54471 & cppMask_bit_8_) ? (cppVar_54471 | cppMask_sign_8_) : cppVar_54471);
	BIT_VEC cppVar_54473 = cppVar_54467 + cppVar_54472;
	cppVar_54473 = (cppVar_54473 & cppMask_un_9_);
	BIT_VEC cppVar_54474 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54475 = (cppVar_54474 & cppMask_un_1_);
	BIT_VEC cppVar_54476 = cppVar_54473 + cppVar_54475;
	cppVar_54476 = (cppVar_54476 & cppMask_un_9_);
	BIT_VEC cppVar_54477 = (cppVar_54476 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54478 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54479 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54480 = (cppVar_54479 << 3) | 2;
	cppVar_54480 = (cppVar_54480 & cppMask_un_5_);
	BIT_VEC cppVar_54481 = (0 << 5) | cppVar_54480;
	cppVar_54481 = (cppVar_54481 & cppMask_un_8_);
	BIT_VEC cppVar_54482 = IRAM.rd(cppVar_54481);
	BIT_VEC cppVar_54483 = ((cppVar_54482 & cppMask_bit_8_) ? (cppVar_54482 | cppMask_sign_8_) : cppVar_54482);
	BIT_VEC cppVar_54484 = cppVar_54478 + cppVar_54483;
	cppVar_54484 = (cppVar_54484 & cppMask_un_9_);
	BIT_VEC cppVar_54485 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54486 = (cppVar_54485 & cppMask_un_1_);
	BIT_VEC cppVar_54487 = cppVar_54484 + cppVar_54486;
	cppVar_54487 = (cppVar_54487 & cppMask_un_9_);
	BIT_VEC cppVar_54488 = (cppVar_54487 >> 7) & cppMask_un_1_;
	bool cppVar_54489 = (cppVar_54477 != cppVar_54488);
	BIT_VEC cppVar_54492 = (cppVar_54489) ? 1 : 0;
	BIT_VEC cppVar_54493 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_54494 = (cppVar_54492 << 2) | cppVar_54493;
	cppVar_54494 = (cppVar_54494 & cppMask_un_3_);
	BIT_VEC cppVar_54495 = (cppVar_54466 << 3) | cppVar_54494;
	cppVar_54495 = (cppVar_54495 & cppMask_un_6_);
	BIT_VEC cppVar_54496 = (cppVar_54465 << 6) | cppVar_54495;
	cppVar_54496 = (cppVar_54496 & cppMask_un_7_);
	BIT_VEC cppVar_54497 = (cppVar_54452 << 7) | cppVar_54496;
	cppVar_54497 = (cppVar_54497 & cppMask_un_8_);
	BIT_VEC cppVar_54498 = ROM.rd(PC);
	bool cppVar_54500 = (cppVar_54498 == 57);
	BIT_VEC cppVar_54501 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_54503 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54505 = (cppVar_54503 << 3) | 1;
	cppVar_54505 = (cppVar_54505 & cppMask_un_5_);
	BIT_VEC cppVar_54506 = (0 << 5) | cppVar_54505;
	cppVar_54506 = (cppVar_54506 & cppMask_un_8_);
	BIT_VEC cppVar_54507 = IRAM.rd(cppVar_54506);
	BIT_VEC cppVar_54508 = (cppVar_54507 & cppMask_un_8_);
	BIT_VEC cppVar_54509 = cppVar_54501 + cppVar_54508;
	cppVar_54509 = (cppVar_54509 & cppMask_un_9_);
	BIT_VEC cppVar_54510 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54511 = (cppVar_54510 & cppMask_un_1_);
	BIT_VEC cppVar_54512 = cppVar_54509 + cppVar_54511;
	cppVar_54512 = (cppVar_54512 & cppMask_un_9_);
	BIT_VEC cppVar_54513 = (cppVar_54512 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54514 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54515 = (cppVar_54514 & cppMask_un_4_);
	BIT_VEC cppVar_54516 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54517 = (cppVar_54516 << 3) | 1;
	cppVar_54517 = (cppVar_54517 & cppMask_un_5_);
	BIT_VEC cppVar_54518 = (0 << 5) | cppVar_54517;
	cppVar_54518 = (cppVar_54518 & cppMask_un_8_);
	BIT_VEC cppVar_54519 = IRAM.rd(cppVar_54518);
	BIT_VEC cppVar_54520 = (cppVar_54519 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54521 = (cppVar_54520 & cppMask_un_4_);
	BIT_VEC cppVar_54522 = cppVar_54515 + cppVar_54521;
	cppVar_54522 = (cppVar_54522 & cppMask_un_5_);
	BIT_VEC cppVar_54523 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54524 = (cppVar_54523 & cppMask_un_1_);
	BIT_VEC cppVar_54525 = cppVar_54522 + cppVar_54524;
	cppVar_54525 = (cppVar_54525 & cppMask_un_5_);
	BIT_VEC cppVar_54526 = (cppVar_54525 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_54527 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_54528 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54529 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54530 = (cppVar_54529 << 3) | 1;
	cppVar_54530 = (cppVar_54530 & cppMask_un_5_);
	BIT_VEC cppVar_54531 = (0 << 5) | cppVar_54530;
	cppVar_54531 = (cppVar_54531 & cppMask_un_8_);
	BIT_VEC cppVar_54532 = IRAM.rd(cppVar_54531);
	BIT_VEC cppVar_54533 = ((cppVar_54532 & cppMask_bit_8_) ? (cppVar_54532 | cppMask_sign_8_) : cppVar_54532);
	BIT_VEC cppVar_54534 = cppVar_54528 + cppVar_54533;
	cppVar_54534 = (cppVar_54534 & cppMask_un_9_);
	BIT_VEC cppVar_54535 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54536 = (cppVar_54535 & cppMask_un_1_);
	BIT_VEC cppVar_54537 = cppVar_54534 + cppVar_54536;
	cppVar_54537 = (cppVar_54537 & cppMask_un_9_);
	BIT_VEC cppVar_54538 = (cppVar_54537 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54539 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54540 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54541 = (cppVar_54540 << 3) | 1;
	cppVar_54541 = (cppVar_54541 & cppMask_un_5_);
	BIT_VEC cppVar_54542 = (0 << 5) | cppVar_54541;
	cppVar_54542 = (cppVar_54542 & cppMask_un_8_);
	BIT_VEC cppVar_54543 = IRAM.rd(cppVar_54542);
	BIT_VEC cppVar_54544 = ((cppVar_54543 & cppMask_bit_8_) ? (cppVar_54543 | cppMask_sign_8_) : cppVar_54543);
	BIT_VEC cppVar_54545 = cppVar_54539 + cppVar_54544;
	cppVar_54545 = (cppVar_54545 & cppMask_un_9_);
	BIT_VEC cppVar_54546 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54547 = (cppVar_54546 & cppMask_un_1_);
	BIT_VEC cppVar_54548 = cppVar_54545 + cppVar_54547;
	cppVar_54548 = (cppVar_54548 & cppMask_un_9_);
	BIT_VEC cppVar_54549 = (cppVar_54548 >> 7) & cppMask_un_1_;
	bool cppVar_54550 = (cppVar_54538 != cppVar_54549);
	BIT_VEC cppVar_54553 = (cppVar_54550) ? 1 : 0;
	BIT_VEC cppVar_54554 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_54555 = (cppVar_54553 << 2) | cppVar_54554;
	cppVar_54555 = (cppVar_54555 & cppMask_un_3_);
	BIT_VEC cppVar_54556 = (cppVar_54527 << 3) | cppVar_54555;
	cppVar_54556 = (cppVar_54556 & cppMask_un_6_);
	BIT_VEC cppVar_54557 = (cppVar_54526 << 6) | cppVar_54556;
	cppVar_54557 = (cppVar_54557 & cppMask_un_7_);
	BIT_VEC cppVar_54558 = (cppVar_54513 << 7) | cppVar_54557;
	cppVar_54558 = (cppVar_54558 & cppMask_un_8_);
	BIT_VEC cppVar_54559 = ROM.rd(PC);
	bool cppVar_54561 = (cppVar_54559 == 56);
	BIT_VEC cppVar_54562 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_54564 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54566 = (cppVar_54564 << 3) | 0;
	cppVar_54566 = (cppVar_54566 & cppMask_un_5_);
	BIT_VEC cppVar_54567 = (0 << 5) | cppVar_54566;
	cppVar_54567 = (cppVar_54567 & cppMask_un_8_);
	BIT_VEC cppVar_54568 = IRAM.rd(cppVar_54567);
	BIT_VEC cppVar_54569 = (cppVar_54568 & cppMask_un_8_);
	BIT_VEC cppVar_54570 = cppVar_54562 + cppVar_54569;
	cppVar_54570 = (cppVar_54570 & cppMask_un_9_);
	BIT_VEC cppVar_54571 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54572 = (cppVar_54571 & cppMask_un_1_);
	BIT_VEC cppVar_54573 = cppVar_54570 + cppVar_54572;
	cppVar_54573 = (cppVar_54573 & cppMask_un_9_);
	BIT_VEC cppVar_54574 = (cppVar_54573 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54575 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54576 = (cppVar_54575 & cppMask_un_4_);
	BIT_VEC cppVar_54577 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54578 = (cppVar_54577 << 3) | 0;
	cppVar_54578 = (cppVar_54578 & cppMask_un_5_);
	BIT_VEC cppVar_54579 = (0 << 5) | cppVar_54578;
	cppVar_54579 = (cppVar_54579 & cppMask_un_8_);
	BIT_VEC cppVar_54580 = IRAM.rd(cppVar_54579);
	BIT_VEC cppVar_54581 = (cppVar_54580 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54582 = (cppVar_54581 & cppMask_un_4_);
	BIT_VEC cppVar_54583 = cppVar_54576 + cppVar_54582;
	cppVar_54583 = (cppVar_54583 & cppMask_un_5_);
	BIT_VEC cppVar_54584 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54585 = (cppVar_54584 & cppMask_un_1_);
	BIT_VEC cppVar_54586 = cppVar_54583 + cppVar_54585;
	cppVar_54586 = (cppVar_54586 & cppMask_un_5_);
	BIT_VEC cppVar_54587 = (cppVar_54586 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_54588 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_54589 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54590 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54591 = (cppVar_54590 << 3) | 0;
	cppVar_54591 = (cppVar_54591 & cppMask_un_5_);
	BIT_VEC cppVar_54592 = (0 << 5) | cppVar_54591;
	cppVar_54592 = (cppVar_54592 & cppMask_un_8_);
	BIT_VEC cppVar_54593 = IRAM.rd(cppVar_54592);
	BIT_VEC cppVar_54594 = ((cppVar_54593 & cppMask_bit_8_) ? (cppVar_54593 | cppMask_sign_8_) : cppVar_54593);
	BIT_VEC cppVar_54595 = cppVar_54589 + cppVar_54594;
	cppVar_54595 = (cppVar_54595 & cppMask_un_9_);
	BIT_VEC cppVar_54596 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54597 = (cppVar_54596 & cppMask_un_1_);
	BIT_VEC cppVar_54598 = cppVar_54595 + cppVar_54597;
	cppVar_54598 = (cppVar_54598 & cppMask_un_9_);
	BIT_VEC cppVar_54599 = (cppVar_54598 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54600 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54601 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54602 = (cppVar_54601 << 3) | 0;
	cppVar_54602 = (cppVar_54602 & cppMask_un_5_);
	BIT_VEC cppVar_54603 = (0 << 5) | cppVar_54602;
	cppVar_54603 = (cppVar_54603 & cppMask_un_8_);
	BIT_VEC cppVar_54604 = IRAM.rd(cppVar_54603);
	BIT_VEC cppVar_54605 = ((cppVar_54604 & cppMask_bit_8_) ? (cppVar_54604 | cppMask_sign_8_) : cppVar_54604);
	BIT_VEC cppVar_54606 = cppVar_54600 + cppVar_54605;
	cppVar_54606 = (cppVar_54606 & cppMask_un_9_);
	BIT_VEC cppVar_54607 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54608 = (cppVar_54607 & cppMask_un_1_);
	BIT_VEC cppVar_54609 = cppVar_54606 + cppVar_54608;
	cppVar_54609 = (cppVar_54609 & cppMask_un_9_);
	BIT_VEC cppVar_54610 = (cppVar_54609 >> 7) & cppMask_un_1_;
	bool cppVar_54611 = (cppVar_54599 != cppVar_54610);
	BIT_VEC cppVar_54614 = (cppVar_54611) ? 1 : 0;
	BIT_VEC cppVar_54615 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_54616 = (cppVar_54614 << 2) | cppVar_54615;
	cppVar_54616 = (cppVar_54616 & cppMask_un_3_);
	BIT_VEC cppVar_54617 = (cppVar_54588 << 3) | cppVar_54616;
	cppVar_54617 = (cppVar_54617 & cppMask_un_6_);
	BIT_VEC cppVar_54618 = (cppVar_54587 << 6) | cppVar_54617;
	cppVar_54618 = (cppVar_54618 & cppMask_un_7_);
	BIT_VEC cppVar_54619 = (cppVar_54574 << 7) | cppVar_54618;
	cppVar_54619 = (cppVar_54619 & cppMask_un_8_);
	BIT_VEC cppVar_54620 = ROM.rd(PC);
	bool cppVar_54622 = (cppVar_54620 == 55);
	BIT_VEC cppVar_54623 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_54625 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54627 = (cppVar_54625 << 3) | 1;
	cppVar_54627 = (cppVar_54627 & cppMask_un_5_);
	BIT_VEC cppVar_54628 = (0 << 5) | cppVar_54627;
	cppVar_54628 = (cppVar_54628 & cppMask_un_8_);
	BIT_VEC cppVar_54629 = IRAM.rd(cppVar_54628);
	BIT_VEC cppVar_54630 = IRAM.rd(cppVar_54629);
	BIT_VEC cppVar_54631 = (cppVar_54630 & cppMask_un_8_);
	BIT_VEC cppVar_54632 = cppVar_54623 + cppVar_54631;
	cppVar_54632 = (cppVar_54632 & cppMask_un_9_);
	BIT_VEC cppVar_54633 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54634 = (cppVar_54633 & cppMask_un_1_);
	BIT_VEC cppVar_54635 = cppVar_54632 + cppVar_54634;
	cppVar_54635 = (cppVar_54635 & cppMask_un_9_);
	BIT_VEC cppVar_54636 = (cppVar_54635 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54637 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54638 = (cppVar_54637 & cppMask_un_4_);
	BIT_VEC cppVar_54639 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54640 = (cppVar_54639 << 3) | 1;
	cppVar_54640 = (cppVar_54640 & cppMask_un_5_);
	BIT_VEC cppVar_54641 = (0 << 5) | cppVar_54640;
	cppVar_54641 = (cppVar_54641 & cppMask_un_8_);
	BIT_VEC cppVar_54642 = IRAM.rd(cppVar_54641);
	BIT_VEC cppVar_54643 = IRAM.rd(cppVar_54642);
	BIT_VEC cppVar_54644 = (cppVar_54643 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54645 = (cppVar_54644 & cppMask_un_4_);
	BIT_VEC cppVar_54646 = cppVar_54638 + cppVar_54645;
	cppVar_54646 = (cppVar_54646 & cppMask_un_5_);
	BIT_VEC cppVar_54647 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54648 = (cppVar_54647 & cppMask_un_1_);
	BIT_VEC cppVar_54649 = cppVar_54646 + cppVar_54648;
	cppVar_54649 = (cppVar_54649 & cppMask_un_5_);
	BIT_VEC cppVar_54650 = (cppVar_54649 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_54651 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_54652 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54653 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54654 = (cppVar_54653 << 3) | 1;
	cppVar_54654 = (cppVar_54654 & cppMask_un_5_);
	BIT_VEC cppVar_54655 = (0 << 5) | cppVar_54654;
	cppVar_54655 = (cppVar_54655 & cppMask_un_8_);
	BIT_VEC cppVar_54656 = IRAM.rd(cppVar_54655);
	BIT_VEC cppVar_54657 = IRAM.rd(cppVar_54656);
	BIT_VEC cppVar_54658 = ((cppVar_54657 & cppMask_bit_8_) ? (cppVar_54657 | cppMask_sign_8_) : cppVar_54657);
	BIT_VEC cppVar_54659 = cppVar_54652 + cppVar_54658;
	cppVar_54659 = (cppVar_54659 & cppMask_un_9_);
	BIT_VEC cppVar_54660 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54661 = (cppVar_54660 & cppMask_un_1_);
	BIT_VEC cppVar_54662 = cppVar_54659 + cppVar_54661;
	cppVar_54662 = (cppVar_54662 & cppMask_un_9_);
	BIT_VEC cppVar_54663 = (cppVar_54662 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54664 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54665 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54666 = (cppVar_54665 << 3) | 1;
	cppVar_54666 = (cppVar_54666 & cppMask_un_5_);
	BIT_VEC cppVar_54667 = (0 << 5) | cppVar_54666;
	cppVar_54667 = (cppVar_54667 & cppMask_un_8_);
	BIT_VEC cppVar_54668 = IRAM.rd(cppVar_54667);
	BIT_VEC cppVar_54669 = IRAM.rd(cppVar_54668);
	BIT_VEC cppVar_54670 = ((cppVar_54669 & cppMask_bit_8_) ? (cppVar_54669 | cppMask_sign_8_) : cppVar_54669);
	BIT_VEC cppVar_54671 = cppVar_54664 + cppVar_54670;
	cppVar_54671 = (cppVar_54671 & cppMask_un_9_);
	BIT_VEC cppVar_54672 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54673 = (cppVar_54672 & cppMask_un_1_);
	BIT_VEC cppVar_54674 = cppVar_54671 + cppVar_54673;
	cppVar_54674 = (cppVar_54674 & cppMask_un_9_);
	BIT_VEC cppVar_54675 = (cppVar_54674 >> 7) & cppMask_un_1_;
	bool cppVar_54676 = (cppVar_54663 != cppVar_54675);
	BIT_VEC cppVar_54679 = (cppVar_54676) ? 1 : 0;
	BIT_VEC cppVar_54680 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_54681 = (cppVar_54679 << 2) | cppVar_54680;
	cppVar_54681 = (cppVar_54681 & cppMask_un_3_);
	BIT_VEC cppVar_54682 = (cppVar_54651 << 3) | cppVar_54681;
	cppVar_54682 = (cppVar_54682 & cppMask_un_6_);
	BIT_VEC cppVar_54683 = (cppVar_54650 << 6) | cppVar_54682;
	cppVar_54683 = (cppVar_54683 & cppMask_un_7_);
	BIT_VEC cppVar_54684 = (cppVar_54636 << 7) | cppVar_54683;
	cppVar_54684 = (cppVar_54684 & cppMask_un_8_);
	BIT_VEC cppVar_54685 = ROM.rd(PC);
	bool cppVar_54687 = (cppVar_54685 == 54);
	BIT_VEC cppVar_54688 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_54690 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54692 = (cppVar_54690 << 3) | 0;
	cppVar_54692 = (cppVar_54692 & cppMask_un_5_);
	BIT_VEC cppVar_54693 = (0 << 5) | cppVar_54692;
	cppVar_54693 = (cppVar_54693 & cppMask_un_8_);
	BIT_VEC cppVar_54694 = IRAM.rd(cppVar_54693);
	BIT_VEC cppVar_54695 = IRAM.rd(cppVar_54694);
	BIT_VEC cppVar_54696 = (cppVar_54695 & cppMask_un_8_);
	BIT_VEC cppVar_54697 = cppVar_54688 + cppVar_54696;
	cppVar_54697 = (cppVar_54697 & cppMask_un_9_);
	BIT_VEC cppVar_54698 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54699 = (cppVar_54698 & cppMask_un_1_);
	BIT_VEC cppVar_54700 = cppVar_54697 + cppVar_54699;
	cppVar_54700 = (cppVar_54700 & cppMask_un_9_);
	BIT_VEC cppVar_54701 = (cppVar_54700 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54702 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54703 = (cppVar_54702 & cppMask_un_4_);
	BIT_VEC cppVar_54704 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54705 = (cppVar_54704 << 3) | 0;
	cppVar_54705 = (cppVar_54705 & cppMask_un_5_);
	BIT_VEC cppVar_54706 = (0 << 5) | cppVar_54705;
	cppVar_54706 = (cppVar_54706 & cppMask_un_8_);
	BIT_VEC cppVar_54707 = IRAM.rd(cppVar_54706);
	BIT_VEC cppVar_54708 = IRAM.rd(cppVar_54707);
	BIT_VEC cppVar_54709 = (cppVar_54708 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54710 = (cppVar_54709 & cppMask_un_4_);
	BIT_VEC cppVar_54711 = cppVar_54703 + cppVar_54710;
	cppVar_54711 = (cppVar_54711 & cppMask_un_5_);
	BIT_VEC cppVar_54712 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54713 = (cppVar_54712 & cppMask_un_1_);
	BIT_VEC cppVar_54714 = cppVar_54711 + cppVar_54713;
	cppVar_54714 = (cppVar_54714 & cppMask_un_5_);
	BIT_VEC cppVar_54715 = (cppVar_54714 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_54716 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_54717 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54718 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54719 = (cppVar_54718 << 3) | 0;
	cppVar_54719 = (cppVar_54719 & cppMask_un_5_);
	BIT_VEC cppVar_54720 = (0 << 5) | cppVar_54719;
	cppVar_54720 = (cppVar_54720 & cppMask_un_8_);
	BIT_VEC cppVar_54721 = IRAM.rd(cppVar_54720);
	BIT_VEC cppVar_54722 = IRAM.rd(cppVar_54721);
	BIT_VEC cppVar_54723 = ((cppVar_54722 & cppMask_bit_8_) ? (cppVar_54722 | cppMask_sign_8_) : cppVar_54722);
	BIT_VEC cppVar_54724 = cppVar_54717 + cppVar_54723;
	cppVar_54724 = (cppVar_54724 & cppMask_un_9_);
	BIT_VEC cppVar_54725 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54726 = (cppVar_54725 & cppMask_un_1_);
	BIT_VEC cppVar_54727 = cppVar_54724 + cppVar_54726;
	cppVar_54727 = (cppVar_54727 & cppMask_un_9_);
	BIT_VEC cppVar_54728 = (cppVar_54727 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54729 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54730 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_54731 = (cppVar_54730 << 3) | 0;
	cppVar_54731 = (cppVar_54731 & cppMask_un_5_);
	BIT_VEC cppVar_54732 = (0 << 5) | cppVar_54731;
	cppVar_54732 = (cppVar_54732 & cppMask_un_8_);
	BIT_VEC cppVar_54733 = IRAM.rd(cppVar_54732);
	BIT_VEC cppVar_54734 = IRAM.rd(cppVar_54733);
	BIT_VEC cppVar_54735 = ((cppVar_54734 & cppMask_bit_8_) ? (cppVar_54734 | cppMask_sign_8_) : cppVar_54734);
	BIT_VEC cppVar_54736 = cppVar_54729 + cppVar_54735;
	cppVar_54736 = (cppVar_54736 & cppMask_un_9_);
	BIT_VEC cppVar_54737 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54738 = (cppVar_54737 & cppMask_un_1_);
	BIT_VEC cppVar_54739 = cppVar_54736 + cppVar_54738;
	cppVar_54739 = (cppVar_54739 & cppMask_un_9_);
	BIT_VEC cppVar_54740 = (cppVar_54739 >> 7) & cppMask_un_1_;
	bool cppVar_54741 = (cppVar_54728 != cppVar_54740);
	BIT_VEC cppVar_54744 = (cppVar_54741) ? 1 : 0;
	BIT_VEC cppVar_54745 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_54746 = (cppVar_54744 << 2) | cppVar_54745;
	cppVar_54746 = (cppVar_54746 & cppMask_un_3_);
	BIT_VEC cppVar_54747 = (cppVar_54716 << 3) | cppVar_54746;
	cppVar_54747 = (cppVar_54747 & cppMask_un_6_);
	BIT_VEC cppVar_54748 = (cppVar_54715 << 6) | cppVar_54747;
	cppVar_54748 = (cppVar_54748 & cppMask_un_7_);
	BIT_VEC cppVar_54749 = (cppVar_54701 << 7) | cppVar_54748;
	cppVar_54749 = (cppVar_54749 & cppMask_un_8_);
	BIT_VEC cppVar_54750 = ROM.rd(PC);
	bool cppVar_54752 = (cppVar_54750 == 53);
	BIT_VEC cppVar_54753 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_54755 = PC + 1;
	cppVar_54755 = (cppVar_54755 & cppMask_un_16_);
	BIT_VEC cppVar_54756 = ROM.rd(cppVar_54755);
	BIT_VEC cppVar_54757 = (cppVar_54756 >> 7) & cppMask_un_1_;
	bool cppVar_54759 = (cppVar_54757 == 0);
	BIT_VEC cppVar_54760 = PC + 1;
	cppVar_54760 = (cppVar_54760 & cppMask_un_16_);
	BIT_VEC cppVar_54761 = ROM.rd(cppVar_54760);
	BIT_VEC cppVar_54762 = IRAM.rd(cppVar_54761);
	BIT_VEC cppVar_54763 = PC + 1;
	cppVar_54763 = (cppVar_54763 & cppMask_un_16_);
	BIT_VEC cppVar_54764 = ROM.rd(cppVar_54763);
	bool cppVar_54766 = (cppVar_54764 == 128);
	BIT_VEC cppVar_54767 = PC + 1;
	cppVar_54767 = (cppVar_54767 & cppMask_un_16_);
	BIT_VEC cppVar_54768 = ROM.rd(cppVar_54767);
	bool cppVar_54770 = (cppVar_54768 == 129);
	BIT_VEC cppVar_54771 = PC + 1;
	cppVar_54771 = (cppVar_54771 & cppMask_un_16_);
	BIT_VEC cppVar_54772 = ROM.rd(cppVar_54771);
	bool cppVar_54774 = (cppVar_54772 == 130);
	BIT_VEC cppVar_54775 = PC + 1;
	cppVar_54775 = (cppVar_54775 & cppMask_un_16_);
	BIT_VEC cppVar_54776 = ROM.rd(cppVar_54775);
	bool cppVar_54778 = (cppVar_54776 == 131);
	BIT_VEC cppVar_54779 = PC + 1;
	cppVar_54779 = (cppVar_54779 & cppMask_un_16_);
	BIT_VEC cppVar_54780 = ROM.rd(cppVar_54779);
	bool cppVar_54782 = (cppVar_54780 == 135);
	BIT_VEC cppVar_54783 = PC + 1;
	cppVar_54783 = (cppVar_54783 & cppMask_un_16_);
	BIT_VEC cppVar_54784 = ROM.rd(cppVar_54783);
	bool cppVar_54786 = (cppVar_54784 == 136);
	BIT_VEC cppVar_54787 = PC + 1;
	cppVar_54787 = (cppVar_54787 & cppMask_un_16_);
	BIT_VEC cppVar_54788 = ROM.rd(cppVar_54787);
	bool cppVar_54790 = (cppVar_54788 == 137);
	BIT_VEC cppVar_54791 = PC + 1;
	cppVar_54791 = (cppVar_54791 & cppMask_un_16_);
	BIT_VEC cppVar_54792 = ROM.rd(cppVar_54791);
	bool cppVar_54794 = (cppVar_54792 == 138);
	BIT_VEC cppVar_54795 = PC + 1;
	cppVar_54795 = (cppVar_54795 & cppMask_un_16_);
	BIT_VEC cppVar_54796 = ROM.rd(cppVar_54795);
	bool cppVar_54798 = (cppVar_54796 == 140);
	BIT_VEC cppVar_54799 = PC + 1;
	cppVar_54799 = (cppVar_54799 & cppMask_un_16_);
	BIT_VEC cppVar_54800 = ROM.rd(cppVar_54799);
	bool cppVar_54802 = (cppVar_54800 == 139);
	BIT_VEC cppVar_54803 = PC + 1;
	cppVar_54803 = (cppVar_54803 & cppMask_un_16_);
	BIT_VEC cppVar_54804 = ROM.rd(cppVar_54803);
	bool cppVar_54806 = (cppVar_54804 == 141);
	BIT_VEC cppVar_54807 = PC + 1;
	cppVar_54807 = (cppVar_54807 & cppMask_un_16_);
	BIT_VEC cppVar_54808 = ROM.rd(cppVar_54807);
	bool cppVar_54810 = (cppVar_54808 == 144);
	BIT_VEC cppVar_54811 = PC + 1;
	cppVar_54811 = (cppVar_54811 & cppMask_un_16_);
	BIT_VEC cppVar_54812 = ROM.rd(cppVar_54811);
	bool cppVar_54814 = (cppVar_54812 == 152);
	BIT_VEC cppVar_54815 = PC + 1;
	cppVar_54815 = (cppVar_54815 & cppMask_un_16_);
	BIT_VEC cppVar_54816 = ROM.rd(cppVar_54815);
	bool cppVar_54818 = (cppVar_54816 == 153);
	BIT_VEC cppVar_54819 = PC + 1;
	cppVar_54819 = (cppVar_54819 & cppMask_un_16_);
	BIT_VEC cppVar_54820 = ROM.rd(cppVar_54819);
	bool cppVar_54822 = (cppVar_54820 == 160);
	BIT_VEC cppVar_54823 = PC + 1;
	cppVar_54823 = (cppVar_54823 & cppMask_un_16_);
	BIT_VEC cppVar_54824 = ROM.rd(cppVar_54823);
	bool cppVar_54826 = (cppVar_54824 == 168);
	BIT_VEC cppVar_54827 = PC + 1;
	cppVar_54827 = (cppVar_54827 & cppMask_un_16_);
	BIT_VEC cppVar_54828 = ROM.rd(cppVar_54827);
	bool cppVar_54830 = (cppVar_54828 == 176);
	BIT_VEC cppVar_54831 = PC + 1;
	cppVar_54831 = (cppVar_54831 & cppMask_un_16_);
	BIT_VEC cppVar_54832 = ROM.rd(cppVar_54831);
	bool cppVar_54834 = (cppVar_54832 == 184);
	BIT_VEC cppVar_54835 = PC + 1;
	cppVar_54835 = (cppVar_54835 & cppMask_un_16_);
	BIT_VEC cppVar_54836 = ROM.rd(cppVar_54835);
	bool cppVar_54838 = (cppVar_54836 == 208);
	BIT_VEC cppVar_54839 = PC + 1;
	cppVar_54839 = (cppVar_54839 & cppMask_un_16_);
	BIT_VEC cppVar_54840 = ROM.rd(cppVar_54839);
	bool cppVar_54842 = (cppVar_54840 == 224);
	BIT_VEC cppVar_54843 = PC + 1;
	cppVar_54843 = (cppVar_54843 & cppMask_un_16_);
	BIT_VEC cppVar_54844 = ROM.rd(cppVar_54843);
	bool cppVar_54846 = (cppVar_54844 == 240);
	BIT_VEC cppVar_54848 = (cppVar_54846) ? B : 0;
	BIT_VEC cppVar_54849 = (cppVar_54842) ? ACC : cppVar_54848;
	BIT_VEC cppVar_54850 = (cppVar_54838) ? PSW : cppVar_54849;
	BIT_VEC cppVar_54851 = (cppVar_54834) ? IP : cppVar_54850;
	BIT_VEC cppVar_54852 = (cppVar_54830) ? P3 : cppVar_54851;
	BIT_VEC cppVar_54853 = (cppVar_54826) ? IE : cppVar_54852;
	BIT_VEC cppVar_54854 = (cppVar_54822) ? P2 : cppVar_54853;
	BIT_VEC cppVar_54855 = (cppVar_54818) ? SBUF : cppVar_54854;
	BIT_VEC cppVar_54856 = (cppVar_54814) ? SCON : cppVar_54855;
	BIT_VEC cppVar_54857 = (cppVar_54810) ? P1 : cppVar_54856;
	BIT_VEC cppVar_54858 = (cppVar_54806) ? TH1 : cppVar_54857;
	BIT_VEC cppVar_54859 = (cppVar_54802) ? TL1 : cppVar_54858;
	BIT_VEC cppVar_54860 = (cppVar_54798) ? TH0 : cppVar_54859;
	BIT_VEC cppVar_54861 = (cppVar_54794) ? TL0 : cppVar_54860;
	BIT_VEC cppVar_54862 = (cppVar_54790) ? TMOD : cppVar_54861;
	BIT_VEC cppVar_54863 = (cppVar_54786) ? TCON : cppVar_54862;
	BIT_VEC cppVar_54864 = (cppVar_54782) ? PCON : cppVar_54863;
	BIT_VEC cppVar_54865 = (cppVar_54778) ? DPH : cppVar_54864;
	BIT_VEC cppVar_54866 = (cppVar_54774) ? DPL : cppVar_54865;
	BIT_VEC cppVar_54867 = (cppVar_54770) ? SP : cppVar_54866;
	BIT_VEC cppVar_54868 = (cppVar_54766) ? P0 : cppVar_54867;
	BIT_VEC cppVar_54869 = (cppVar_54759) ? cppVar_54762 : cppVar_54868;
	BIT_VEC cppVar_54870 = (cppVar_54869 & cppMask_un_8_);
	BIT_VEC cppVar_54871 = cppVar_54753 + cppVar_54870;
	cppVar_54871 = (cppVar_54871 & cppMask_un_9_);
	BIT_VEC cppVar_54872 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54873 = (cppVar_54872 & cppMask_un_1_);
	BIT_VEC cppVar_54874 = cppVar_54871 + cppVar_54873;
	cppVar_54874 = (cppVar_54874 & cppMask_un_9_);
	BIT_VEC cppVar_54875 = (cppVar_54874 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_54876 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54877 = (cppVar_54876 & cppMask_un_4_);
	BIT_VEC cppVar_54878 = PC + 1;
	cppVar_54878 = (cppVar_54878 & cppMask_un_16_);
	BIT_VEC cppVar_54879 = ROM.rd(cppVar_54878);
	BIT_VEC cppVar_54880 = (cppVar_54879 >> 7) & cppMask_un_1_;
	bool cppVar_54881 = (cppVar_54880 == 0);
	BIT_VEC cppVar_54882 = PC + 1;
	cppVar_54882 = (cppVar_54882 & cppMask_un_16_);
	BIT_VEC cppVar_54883 = ROM.rd(cppVar_54882);
	BIT_VEC cppVar_54884 = IRAM.rd(cppVar_54883);
	BIT_VEC cppVar_54885 = PC + 1;
	cppVar_54885 = (cppVar_54885 & cppMask_un_16_);
	BIT_VEC cppVar_54886 = ROM.rd(cppVar_54885);
	bool cppVar_54887 = (cppVar_54886 == 128);
	BIT_VEC cppVar_54888 = PC + 1;
	cppVar_54888 = (cppVar_54888 & cppMask_un_16_);
	BIT_VEC cppVar_54889 = ROM.rd(cppVar_54888);
	bool cppVar_54890 = (cppVar_54889 == 129);
	BIT_VEC cppVar_54891 = PC + 1;
	cppVar_54891 = (cppVar_54891 & cppMask_un_16_);
	BIT_VEC cppVar_54892 = ROM.rd(cppVar_54891);
	bool cppVar_54893 = (cppVar_54892 == 130);
	BIT_VEC cppVar_54894 = PC + 1;
	cppVar_54894 = (cppVar_54894 & cppMask_un_16_);
	BIT_VEC cppVar_54895 = ROM.rd(cppVar_54894);
	bool cppVar_54896 = (cppVar_54895 == 131);
	BIT_VEC cppVar_54897 = PC + 1;
	cppVar_54897 = (cppVar_54897 & cppMask_un_16_);
	BIT_VEC cppVar_54898 = ROM.rd(cppVar_54897);
	bool cppVar_54899 = (cppVar_54898 == 135);
	BIT_VEC cppVar_54900 = PC + 1;
	cppVar_54900 = (cppVar_54900 & cppMask_un_16_);
	BIT_VEC cppVar_54901 = ROM.rd(cppVar_54900);
	bool cppVar_54902 = (cppVar_54901 == 136);
	BIT_VEC cppVar_54903 = PC + 1;
	cppVar_54903 = (cppVar_54903 & cppMask_un_16_);
	BIT_VEC cppVar_54904 = ROM.rd(cppVar_54903);
	bool cppVar_54905 = (cppVar_54904 == 137);
	BIT_VEC cppVar_54906 = PC + 1;
	cppVar_54906 = (cppVar_54906 & cppMask_un_16_);
	BIT_VEC cppVar_54907 = ROM.rd(cppVar_54906);
	bool cppVar_54908 = (cppVar_54907 == 138);
	BIT_VEC cppVar_54909 = PC + 1;
	cppVar_54909 = (cppVar_54909 & cppMask_un_16_);
	BIT_VEC cppVar_54910 = ROM.rd(cppVar_54909);
	bool cppVar_54911 = (cppVar_54910 == 140);
	BIT_VEC cppVar_54912 = PC + 1;
	cppVar_54912 = (cppVar_54912 & cppMask_un_16_);
	BIT_VEC cppVar_54913 = ROM.rd(cppVar_54912);
	bool cppVar_54914 = (cppVar_54913 == 139);
	BIT_VEC cppVar_54915 = PC + 1;
	cppVar_54915 = (cppVar_54915 & cppMask_un_16_);
	BIT_VEC cppVar_54916 = ROM.rd(cppVar_54915);
	bool cppVar_54917 = (cppVar_54916 == 141);
	BIT_VEC cppVar_54918 = PC + 1;
	cppVar_54918 = (cppVar_54918 & cppMask_un_16_);
	BIT_VEC cppVar_54919 = ROM.rd(cppVar_54918);
	bool cppVar_54920 = (cppVar_54919 == 144);
	BIT_VEC cppVar_54921 = PC + 1;
	cppVar_54921 = (cppVar_54921 & cppMask_un_16_);
	BIT_VEC cppVar_54922 = ROM.rd(cppVar_54921);
	bool cppVar_54923 = (cppVar_54922 == 152);
	BIT_VEC cppVar_54924 = PC + 1;
	cppVar_54924 = (cppVar_54924 & cppMask_un_16_);
	BIT_VEC cppVar_54925 = ROM.rd(cppVar_54924);
	bool cppVar_54926 = (cppVar_54925 == 153);
	BIT_VEC cppVar_54927 = PC + 1;
	cppVar_54927 = (cppVar_54927 & cppMask_un_16_);
	BIT_VEC cppVar_54928 = ROM.rd(cppVar_54927);
	bool cppVar_54929 = (cppVar_54928 == 160);
	BIT_VEC cppVar_54930 = PC + 1;
	cppVar_54930 = (cppVar_54930 & cppMask_un_16_);
	BIT_VEC cppVar_54931 = ROM.rd(cppVar_54930);
	bool cppVar_54932 = (cppVar_54931 == 168);
	BIT_VEC cppVar_54933 = PC + 1;
	cppVar_54933 = (cppVar_54933 & cppMask_un_16_);
	BIT_VEC cppVar_54934 = ROM.rd(cppVar_54933);
	bool cppVar_54935 = (cppVar_54934 == 176);
	BIT_VEC cppVar_54936 = PC + 1;
	cppVar_54936 = (cppVar_54936 & cppMask_un_16_);
	BIT_VEC cppVar_54937 = ROM.rd(cppVar_54936);
	bool cppVar_54938 = (cppVar_54937 == 184);
	BIT_VEC cppVar_54939 = PC + 1;
	cppVar_54939 = (cppVar_54939 & cppMask_un_16_);
	BIT_VEC cppVar_54940 = ROM.rd(cppVar_54939);
	bool cppVar_54941 = (cppVar_54940 == 208);
	BIT_VEC cppVar_54942 = PC + 1;
	cppVar_54942 = (cppVar_54942 & cppMask_un_16_);
	BIT_VEC cppVar_54943 = ROM.rd(cppVar_54942);
	bool cppVar_54944 = (cppVar_54943 == 224);
	BIT_VEC cppVar_54945 = PC + 1;
	cppVar_54945 = (cppVar_54945 & cppMask_un_16_);
	BIT_VEC cppVar_54946 = ROM.rd(cppVar_54945);
	bool cppVar_54947 = (cppVar_54946 == 240);
	BIT_VEC cppVar_54948 = (cppVar_54947) ? B : 0;
	BIT_VEC cppVar_54949 = (cppVar_54944) ? ACC : cppVar_54948;
	BIT_VEC cppVar_54950 = (cppVar_54941) ? PSW : cppVar_54949;
	BIT_VEC cppVar_54951 = (cppVar_54938) ? IP : cppVar_54950;
	BIT_VEC cppVar_54952 = (cppVar_54935) ? P3 : cppVar_54951;
	BIT_VEC cppVar_54953 = (cppVar_54932) ? IE : cppVar_54952;
	BIT_VEC cppVar_54954 = (cppVar_54929) ? P2 : cppVar_54953;
	BIT_VEC cppVar_54955 = (cppVar_54926) ? SBUF : cppVar_54954;
	BIT_VEC cppVar_54956 = (cppVar_54923) ? SCON : cppVar_54955;
	BIT_VEC cppVar_54957 = (cppVar_54920) ? P1 : cppVar_54956;
	BIT_VEC cppVar_54958 = (cppVar_54917) ? TH1 : cppVar_54957;
	BIT_VEC cppVar_54959 = (cppVar_54914) ? TL1 : cppVar_54958;
	BIT_VEC cppVar_54960 = (cppVar_54911) ? TH0 : cppVar_54959;
	BIT_VEC cppVar_54961 = (cppVar_54908) ? TL0 : cppVar_54960;
	BIT_VEC cppVar_54962 = (cppVar_54905) ? TMOD : cppVar_54961;
	BIT_VEC cppVar_54963 = (cppVar_54902) ? TCON : cppVar_54962;
	BIT_VEC cppVar_54964 = (cppVar_54899) ? PCON : cppVar_54963;
	BIT_VEC cppVar_54965 = (cppVar_54896) ? DPH : cppVar_54964;
	BIT_VEC cppVar_54966 = (cppVar_54893) ? DPL : cppVar_54965;
	BIT_VEC cppVar_54967 = (cppVar_54890) ? SP : cppVar_54966;
	BIT_VEC cppVar_54968 = (cppVar_54887) ? P0 : cppVar_54967;
	BIT_VEC cppVar_54969 = (cppVar_54881) ? cppVar_54884 : cppVar_54968;
	BIT_VEC cppVar_54970 = (cppVar_54969 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_54971 = (cppVar_54970 & cppMask_un_4_);
	BIT_VEC cppVar_54972 = cppVar_54877 + cppVar_54971;
	cppVar_54972 = (cppVar_54972 & cppMask_un_5_);
	BIT_VEC cppVar_54973 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_54974 = (cppVar_54973 & cppMask_un_1_);
	BIT_VEC cppVar_54975 = cppVar_54972 + cppVar_54974;
	cppVar_54975 = (cppVar_54975 & cppMask_un_5_);
	BIT_VEC cppVar_54976 = (cppVar_54975 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_54977 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_54978 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_54979 = PC + 1;
	cppVar_54979 = (cppVar_54979 & cppMask_un_16_);
	BIT_VEC cppVar_54980 = ROM.rd(cppVar_54979);
	BIT_VEC cppVar_54981 = (cppVar_54980 >> 7) & cppMask_un_1_;
	bool cppVar_54982 = (cppVar_54981 == 0);
	BIT_VEC cppVar_54983 = PC + 1;
	cppVar_54983 = (cppVar_54983 & cppMask_un_16_);
	BIT_VEC cppVar_54984 = ROM.rd(cppVar_54983);
	BIT_VEC cppVar_54985 = IRAM.rd(cppVar_54984);
	BIT_VEC cppVar_54986 = PC + 1;
	cppVar_54986 = (cppVar_54986 & cppMask_un_16_);
	BIT_VEC cppVar_54987 = ROM.rd(cppVar_54986);
	bool cppVar_54988 = (cppVar_54987 == 128);
	BIT_VEC cppVar_54989 = PC + 1;
	cppVar_54989 = (cppVar_54989 & cppMask_un_16_);
	BIT_VEC cppVar_54990 = ROM.rd(cppVar_54989);
	bool cppVar_54991 = (cppVar_54990 == 129);
	BIT_VEC cppVar_54992 = PC + 1;
	cppVar_54992 = (cppVar_54992 & cppMask_un_16_);
	BIT_VEC cppVar_54993 = ROM.rd(cppVar_54992);
	bool cppVar_54994 = (cppVar_54993 == 130);
	BIT_VEC cppVar_54995 = PC + 1;
	cppVar_54995 = (cppVar_54995 & cppMask_un_16_);
	BIT_VEC cppVar_54996 = ROM.rd(cppVar_54995);
	bool cppVar_54997 = (cppVar_54996 == 131);
	BIT_VEC cppVar_54998 = PC + 1;
	cppVar_54998 = (cppVar_54998 & cppMask_un_16_);
	BIT_VEC cppVar_54999 = ROM.rd(cppVar_54998);
	bool cppVar_55000 = (cppVar_54999 == 135);
	BIT_VEC cppVar_55001 = PC + 1;
	cppVar_55001 = (cppVar_55001 & cppMask_un_16_);
	BIT_VEC cppVar_55002 = ROM.rd(cppVar_55001);
	bool cppVar_55003 = (cppVar_55002 == 136);
	BIT_VEC cppVar_55004 = PC + 1;
	cppVar_55004 = (cppVar_55004 & cppMask_un_16_);
	BIT_VEC cppVar_55005 = ROM.rd(cppVar_55004);
	bool cppVar_55006 = (cppVar_55005 == 137);
	BIT_VEC cppVar_55007 = PC + 1;
	cppVar_55007 = (cppVar_55007 & cppMask_un_16_);
	BIT_VEC cppVar_55008 = ROM.rd(cppVar_55007);
	bool cppVar_55009 = (cppVar_55008 == 138);
	BIT_VEC cppVar_55010 = PC + 1;
	cppVar_55010 = (cppVar_55010 & cppMask_un_16_);
	BIT_VEC cppVar_55011 = ROM.rd(cppVar_55010);
	bool cppVar_55012 = (cppVar_55011 == 140);
	BIT_VEC cppVar_55013 = PC + 1;
	cppVar_55013 = (cppVar_55013 & cppMask_un_16_);
	BIT_VEC cppVar_55014 = ROM.rd(cppVar_55013);
	bool cppVar_55015 = (cppVar_55014 == 139);
	BIT_VEC cppVar_55016 = PC + 1;
	cppVar_55016 = (cppVar_55016 & cppMask_un_16_);
	BIT_VEC cppVar_55017 = ROM.rd(cppVar_55016);
	bool cppVar_55018 = (cppVar_55017 == 141);
	BIT_VEC cppVar_55019 = PC + 1;
	cppVar_55019 = (cppVar_55019 & cppMask_un_16_);
	BIT_VEC cppVar_55020 = ROM.rd(cppVar_55019);
	bool cppVar_55021 = (cppVar_55020 == 144);
	BIT_VEC cppVar_55022 = PC + 1;
	cppVar_55022 = (cppVar_55022 & cppMask_un_16_);
	BIT_VEC cppVar_55023 = ROM.rd(cppVar_55022);
	bool cppVar_55024 = (cppVar_55023 == 152);
	BIT_VEC cppVar_55025 = PC + 1;
	cppVar_55025 = (cppVar_55025 & cppMask_un_16_);
	BIT_VEC cppVar_55026 = ROM.rd(cppVar_55025);
	bool cppVar_55027 = (cppVar_55026 == 153);
	BIT_VEC cppVar_55028 = PC + 1;
	cppVar_55028 = (cppVar_55028 & cppMask_un_16_);
	BIT_VEC cppVar_55029 = ROM.rd(cppVar_55028);
	bool cppVar_55030 = (cppVar_55029 == 160);
	BIT_VEC cppVar_55031 = PC + 1;
	cppVar_55031 = (cppVar_55031 & cppMask_un_16_);
	BIT_VEC cppVar_55032 = ROM.rd(cppVar_55031);
	bool cppVar_55033 = (cppVar_55032 == 168);
	BIT_VEC cppVar_55034 = PC + 1;
	cppVar_55034 = (cppVar_55034 & cppMask_un_16_);
	BIT_VEC cppVar_55035 = ROM.rd(cppVar_55034);
	bool cppVar_55036 = (cppVar_55035 == 176);
	BIT_VEC cppVar_55037 = PC + 1;
	cppVar_55037 = (cppVar_55037 & cppMask_un_16_);
	BIT_VEC cppVar_55038 = ROM.rd(cppVar_55037);
	bool cppVar_55039 = (cppVar_55038 == 184);
	BIT_VEC cppVar_55040 = PC + 1;
	cppVar_55040 = (cppVar_55040 & cppMask_un_16_);
	BIT_VEC cppVar_55041 = ROM.rd(cppVar_55040);
	bool cppVar_55042 = (cppVar_55041 == 208);
	BIT_VEC cppVar_55043 = PC + 1;
	cppVar_55043 = (cppVar_55043 & cppMask_un_16_);
	BIT_VEC cppVar_55044 = ROM.rd(cppVar_55043);
	bool cppVar_55045 = (cppVar_55044 == 224);
	BIT_VEC cppVar_55046 = PC + 1;
	cppVar_55046 = (cppVar_55046 & cppMask_un_16_);
	BIT_VEC cppVar_55047 = ROM.rd(cppVar_55046);
	bool cppVar_55048 = (cppVar_55047 == 240);
	BIT_VEC cppVar_55049 = (cppVar_55048) ? B : 0;
	BIT_VEC cppVar_55050 = (cppVar_55045) ? ACC : cppVar_55049;
	BIT_VEC cppVar_55051 = (cppVar_55042) ? PSW : cppVar_55050;
	BIT_VEC cppVar_55052 = (cppVar_55039) ? IP : cppVar_55051;
	BIT_VEC cppVar_55053 = (cppVar_55036) ? P3 : cppVar_55052;
	BIT_VEC cppVar_55054 = (cppVar_55033) ? IE : cppVar_55053;
	BIT_VEC cppVar_55055 = (cppVar_55030) ? P2 : cppVar_55054;
	BIT_VEC cppVar_55056 = (cppVar_55027) ? SBUF : cppVar_55055;
	BIT_VEC cppVar_55057 = (cppVar_55024) ? SCON : cppVar_55056;
	BIT_VEC cppVar_55058 = (cppVar_55021) ? P1 : cppVar_55057;
	BIT_VEC cppVar_55059 = (cppVar_55018) ? TH1 : cppVar_55058;
	BIT_VEC cppVar_55060 = (cppVar_55015) ? TL1 : cppVar_55059;
	BIT_VEC cppVar_55061 = (cppVar_55012) ? TH0 : cppVar_55060;
	BIT_VEC cppVar_55062 = (cppVar_55009) ? TL0 : cppVar_55061;
	BIT_VEC cppVar_55063 = (cppVar_55006) ? TMOD : cppVar_55062;
	BIT_VEC cppVar_55064 = (cppVar_55003) ? TCON : cppVar_55063;
	BIT_VEC cppVar_55065 = (cppVar_55000) ? PCON : cppVar_55064;
	BIT_VEC cppVar_55066 = (cppVar_54997) ? DPH : cppVar_55065;
	BIT_VEC cppVar_55067 = (cppVar_54994) ? DPL : cppVar_55066;
	BIT_VEC cppVar_55068 = (cppVar_54991) ? SP : cppVar_55067;
	BIT_VEC cppVar_55069 = (cppVar_54988) ? P0 : cppVar_55068;
	BIT_VEC cppVar_55070 = (cppVar_54982) ? cppVar_54985 : cppVar_55069;
	BIT_VEC cppVar_55071 = ((cppVar_55070 & cppMask_bit_8_) ? (cppVar_55070 | cppMask_sign_8_) : cppVar_55070);
	BIT_VEC cppVar_55072 = cppVar_54978 + cppVar_55071;
	cppVar_55072 = (cppVar_55072 & cppMask_un_9_);
	BIT_VEC cppVar_55073 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_55074 = (cppVar_55073 & cppMask_un_1_);
	BIT_VEC cppVar_55075 = cppVar_55072 + cppVar_55074;
	cppVar_55075 = (cppVar_55075 & cppMask_un_9_);
	BIT_VEC cppVar_55076 = (cppVar_55075 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55077 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55078 = PC + 1;
	cppVar_55078 = (cppVar_55078 & cppMask_un_16_);
	BIT_VEC cppVar_55079 = ROM.rd(cppVar_55078);
	BIT_VEC cppVar_55080 = (cppVar_55079 >> 7) & cppMask_un_1_;
	bool cppVar_55081 = (cppVar_55080 == 0);
	BIT_VEC cppVar_55082 = PC + 1;
	cppVar_55082 = (cppVar_55082 & cppMask_un_16_);
	BIT_VEC cppVar_55083 = ROM.rd(cppVar_55082);
	BIT_VEC cppVar_55084 = IRAM.rd(cppVar_55083);
	BIT_VEC cppVar_55085 = PC + 1;
	cppVar_55085 = (cppVar_55085 & cppMask_un_16_);
	BIT_VEC cppVar_55086 = ROM.rd(cppVar_55085);
	bool cppVar_55087 = (cppVar_55086 == 128);
	BIT_VEC cppVar_55088 = PC + 1;
	cppVar_55088 = (cppVar_55088 & cppMask_un_16_);
	BIT_VEC cppVar_55089 = ROM.rd(cppVar_55088);
	bool cppVar_55090 = (cppVar_55089 == 129);
	BIT_VEC cppVar_55091 = PC + 1;
	cppVar_55091 = (cppVar_55091 & cppMask_un_16_);
	BIT_VEC cppVar_55092 = ROM.rd(cppVar_55091);
	bool cppVar_55093 = (cppVar_55092 == 130);
	BIT_VEC cppVar_55094 = PC + 1;
	cppVar_55094 = (cppVar_55094 & cppMask_un_16_);
	BIT_VEC cppVar_55095 = ROM.rd(cppVar_55094);
	bool cppVar_55096 = (cppVar_55095 == 131);
	BIT_VEC cppVar_55097 = PC + 1;
	cppVar_55097 = (cppVar_55097 & cppMask_un_16_);
	BIT_VEC cppVar_55098 = ROM.rd(cppVar_55097);
	bool cppVar_55099 = (cppVar_55098 == 135);
	BIT_VEC cppVar_55100 = PC + 1;
	cppVar_55100 = (cppVar_55100 & cppMask_un_16_);
	BIT_VEC cppVar_55101 = ROM.rd(cppVar_55100);
	bool cppVar_55102 = (cppVar_55101 == 136);
	BIT_VEC cppVar_55103 = PC + 1;
	cppVar_55103 = (cppVar_55103 & cppMask_un_16_);
	BIT_VEC cppVar_55104 = ROM.rd(cppVar_55103);
	bool cppVar_55105 = (cppVar_55104 == 137);
	BIT_VEC cppVar_55106 = PC + 1;
	cppVar_55106 = (cppVar_55106 & cppMask_un_16_);
	BIT_VEC cppVar_55107 = ROM.rd(cppVar_55106);
	bool cppVar_55108 = (cppVar_55107 == 138);
	BIT_VEC cppVar_55109 = PC + 1;
	cppVar_55109 = (cppVar_55109 & cppMask_un_16_);
	BIT_VEC cppVar_55110 = ROM.rd(cppVar_55109);
	bool cppVar_55111 = (cppVar_55110 == 140);
	BIT_VEC cppVar_55112 = PC + 1;
	cppVar_55112 = (cppVar_55112 & cppMask_un_16_);
	BIT_VEC cppVar_55113 = ROM.rd(cppVar_55112);
	bool cppVar_55114 = (cppVar_55113 == 139);
	BIT_VEC cppVar_55115 = PC + 1;
	cppVar_55115 = (cppVar_55115 & cppMask_un_16_);
	BIT_VEC cppVar_55116 = ROM.rd(cppVar_55115);
	bool cppVar_55117 = (cppVar_55116 == 141);
	BIT_VEC cppVar_55118 = PC + 1;
	cppVar_55118 = (cppVar_55118 & cppMask_un_16_);
	BIT_VEC cppVar_55119 = ROM.rd(cppVar_55118);
	bool cppVar_55120 = (cppVar_55119 == 144);
	BIT_VEC cppVar_55121 = PC + 1;
	cppVar_55121 = (cppVar_55121 & cppMask_un_16_);
	BIT_VEC cppVar_55122 = ROM.rd(cppVar_55121);
	bool cppVar_55123 = (cppVar_55122 == 152);
	BIT_VEC cppVar_55124 = PC + 1;
	cppVar_55124 = (cppVar_55124 & cppMask_un_16_);
	BIT_VEC cppVar_55125 = ROM.rd(cppVar_55124);
	bool cppVar_55126 = (cppVar_55125 == 153);
	BIT_VEC cppVar_55127 = PC + 1;
	cppVar_55127 = (cppVar_55127 & cppMask_un_16_);
	BIT_VEC cppVar_55128 = ROM.rd(cppVar_55127);
	bool cppVar_55129 = (cppVar_55128 == 160);
	BIT_VEC cppVar_55130 = PC + 1;
	cppVar_55130 = (cppVar_55130 & cppMask_un_16_);
	BIT_VEC cppVar_55131 = ROM.rd(cppVar_55130);
	bool cppVar_55132 = (cppVar_55131 == 168);
	BIT_VEC cppVar_55133 = PC + 1;
	cppVar_55133 = (cppVar_55133 & cppMask_un_16_);
	BIT_VEC cppVar_55134 = ROM.rd(cppVar_55133);
	bool cppVar_55135 = (cppVar_55134 == 176);
	BIT_VEC cppVar_55136 = PC + 1;
	cppVar_55136 = (cppVar_55136 & cppMask_un_16_);
	BIT_VEC cppVar_55137 = ROM.rd(cppVar_55136);
	bool cppVar_55138 = (cppVar_55137 == 184);
	BIT_VEC cppVar_55139 = PC + 1;
	cppVar_55139 = (cppVar_55139 & cppMask_un_16_);
	BIT_VEC cppVar_55140 = ROM.rd(cppVar_55139);
	bool cppVar_55141 = (cppVar_55140 == 208);
	BIT_VEC cppVar_55142 = PC + 1;
	cppVar_55142 = (cppVar_55142 & cppMask_un_16_);
	BIT_VEC cppVar_55143 = ROM.rd(cppVar_55142);
	bool cppVar_55144 = (cppVar_55143 == 224);
	BIT_VEC cppVar_55145 = PC + 1;
	cppVar_55145 = (cppVar_55145 & cppMask_un_16_);
	BIT_VEC cppVar_55146 = ROM.rd(cppVar_55145);
	bool cppVar_55147 = (cppVar_55146 == 240);
	BIT_VEC cppVar_55148 = (cppVar_55147) ? B : 0;
	BIT_VEC cppVar_55149 = (cppVar_55144) ? ACC : cppVar_55148;
	BIT_VEC cppVar_55150 = (cppVar_55141) ? PSW : cppVar_55149;
	BIT_VEC cppVar_55151 = (cppVar_55138) ? IP : cppVar_55150;
	BIT_VEC cppVar_55152 = (cppVar_55135) ? P3 : cppVar_55151;
	BIT_VEC cppVar_55153 = (cppVar_55132) ? IE : cppVar_55152;
	BIT_VEC cppVar_55154 = (cppVar_55129) ? P2 : cppVar_55153;
	BIT_VEC cppVar_55155 = (cppVar_55126) ? SBUF : cppVar_55154;
	BIT_VEC cppVar_55156 = (cppVar_55123) ? SCON : cppVar_55155;
	BIT_VEC cppVar_55157 = (cppVar_55120) ? P1 : cppVar_55156;
	BIT_VEC cppVar_55158 = (cppVar_55117) ? TH1 : cppVar_55157;
	BIT_VEC cppVar_55159 = (cppVar_55114) ? TL1 : cppVar_55158;
	BIT_VEC cppVar_55160 = (cppVar_55111) ? TH0 : cppVar_55159;
	BIT_VEC cppVar_55161 = (cppVar_55108) ? TL0 : cppVar_55160;
	BIT_VEC cppVar_55162 = (cppVar_55105) ? TMOD : cppVar_55161;
	BIT_VEC cppVar_55163 = (cppVar_55102) ? TCON : cppVar_55162;
	BIT_VEC cppVar_55164 = (cppVar_55099) ? PCON : cppVar_55163;
	BIT_VEC cppVar_55165 = (cppVar_55096) ? DPH : cppVar_55164;
	BIT_VEC cppVar_55166 = (cppVar_55093) ? DPL : cppVar_55165;
	BIT_VEC cppVar_55167 = (cppVar_55090) ? SP : cppVar_55166;
	BIT_VEC cppVar_55168 = (cppVar_55087) ? P0 : cppVar_55167;
	BIT_VEC cppVar_55169 = (cppVar_55081) ? cppVar_55084 : cppVar_55168;
	BIT_VEC cppVar_55170 = ((cppVar_55169 & cppMask_bit_8_) ? (cppVar_55169 | cppMask_sign_8_) : cppVar_55169);
	BIT_VEC cppVar_55171 = cppVar_55077 + cppVar_55170;
	cppVar_55171 = (cppVar_55171 & cppMask_un_9_);
	BIT_VEC cppVar_55172 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_55173 = (cppVar_55172 & cppMask_un_1_);
	BIT_VEC cppVar_55174 = cppVar_55171 + cppVar_55173;
	cppVar_55174 = (cppVar_55174 & cppMask_un_9_);
	BIT_VEC cppVar_55175 = (cppVar_55174 >> 7) & cppMask_un_1_;
	bool cppVar_55176 = (cppVar_55076 != cppVar_55175);
	BIT_VEC cppVar_55179 = (cppVar_55176) ? 1 : 0;
	BIT_VEC cppVar_55180 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_55181 = (cppVar_55179 << 2) | cppVar_55180;
	cppVar_55181 = (cppVar_55181 & cppMask_un_3_);
	BIT_VEC cppVar_55182 = (cppVar_54977 << 3) | cppVar_55181;
	cppVar_55182 = (cppVar_55182 & cppMask_un_6_);
	BIT_VEC cppVar_55183 = (cppVar_54976 << 6) | cppVar_55182;
	cppVar_55183 = (cppVar_55183 & cppMask_un_7_);
	BIT_VEC cppVar_55184 = (cppVar_54875 << 7) | cppVar_55183;
	cppVar_55184 = (cppVar_55184 & cppMask_un_8_);
	BIT_VEC cppVar_55185 = ROM.rd(PC);
	bool cppVar_55187 = (cppVar_55185 == 52);
	BIT_VEC cppVar_55188 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_55190 = PC + 1;
	cppVar_55190 = (cppVar_55190 & cppMask_un_16_);
	BIT_VEC cppVar_55191 = ROM.rd(cppVar_55190);
	BIT_VEC cppVar_55192 = (cppVar_55191 & cppMask_un_8_);
	BIT_VEC cppVar_55193 = cppVar_55188 + cppVar_55192;
	cppVar_55193 = (cppVar_55193 & cppMask_un_9_);
	BIT_VEC cppVar_55194 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_55195 = (cppVar_55194 & cppMask_un_1_);
	BIT_VEC cppVar_55196 = cppVar_55193 + cppVar_55195;
	cppVar_55196 = (cppVar_55196 & cppMask_un_9_);
	BIT_VEC cppVar_55197 = (cppVar_55196 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55198 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55199 = (cppVar_55198 & cppMask_un_4_);
	BIT_VEC cppVar_55200 = PC + 1;
	cppVar_55200 = (cppVar_55200 & cppMask_un_16_);
	BIT_VEC cppVar_55201 = ROM.rd(cppVar_55200);
	BIT_VEC cppVar_55202 = (cppVar_55201 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55203 = (cppVar_55202 & cppMask_un_4_);
	BIT_VEC cppVar_55204 = cppVar_55199 + cppVar_55203;
	cppVar_55204 = (cppVar_55204 & cppMask_un_5_);
	BIT_VEC cppVar_55205 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_55206 = (cppVar_55205 & cppMask_un_1_);
	BIT_VEC cppVar_55207 = cppVar_55204 + cppVar_55206;
	cppVar_55207 = (cppVar_55207 & cppMask_un_5_);
	BIT_VEC cppVar_55208 = (cppVar_55207 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_55209 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_55210 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55211 = PC + 1;
	cppVar_55211 = (cppVar_55211 & cppMask_un_16_);
	BIT_VEC cppVar_55212 = ROM.rd(cppVar_55211);
	BIT_VEC cppVar_55213 = ((cppVar_55212 & cppMask_bit_8_) ? (cppVar_55212 | cppMask_sign_8_) : cppVar_55212);
	BIT_VEC cppVar_55214 = cppVar_55210 + cppVar_55213;
	cppVar_55214 = (cppVar_55214 & cppMask_un_9_);
	BIT_VEC cppVar_55215 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_55216 = (cppVar_55215 & cppMask_un_1_);
	BIT_VEC cppVar_55217 = cppVar_55214 + cppVar_55216;
	cppVar_55217 = (cppVar_55217 & cppMask_un_9_);
	BIT_VEC cppVar_55218 = (cppVar_55217 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55219 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55220 = PC + 1;
	cppVar_55220 = (cppVar_55220 & cppMask_un_16_);
	BIT_VEC cppVar_55221 = ROM.rd(cppVar_55220);
	BIT_VEC cppVar_55222 = ((cppVar_55221 & cppMask_bit_8_) ? (cppVar_55221 | cppMask_sign_8_) : cppVar_55221);
	BIT_VEC cppVar_55223 = cppVar_55219 + cppVar_55222;
	cppVar_55223 = (cppVar_55223 & cppMask_un_9_);
	BIT_VEC cppVar_55224 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_55225 = (cppVar_55224 & cppMask_un_1_);
	BIT_VEC cppVar_55226 = cppVar_55223 + cppVar_55225;
	cppVar_55226 = (cppVar_55226 & cppMask_un_9_);
	BIT_VEC cppVar_55227 = (cppVar_55226 >> 7) & cppMask_un_1_;
	bool cppVar_55228 = (cppVar_55218 != cppVar_55227);
	BIT_VEC cppVar_55231 = (cppVar_55228) ? 1 : 0;
	BIT_VEC cppVar_55232 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_55233 = (cppVar_55231 << 2) | cppVar_55232;
	cppVar_55233 = (cppVar_55233 & cppMask_un_3_);
	BIT_VEC cppVar_55234 = (cppVar_55209 << 3) | cppVar_55233;
	cppVar_55234 = (cppVar_55234 & cppMask_un_6_);
	BIT_VEC cppVar_55235 = (cppVar_55208 << 6) | cppVar_55234;
	cppVar_55235 = (cppVar_55235 & cppMask_un_7_);
	BIT_VEC cppVar_55236 = (cppVar_55197 << 7) | cppVar_55235;
	cppVar_55236 = (cppVar_55236 & cppMask_un_8_);
	BIT_VEC cppVar_55237 = ROM.rd(PC);
	bool cppVar_55239 = (cppVar_55237 == 51);
	BIT_VEC cppVar_55240 = (ACC >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_55241 = (PSW >> 6) & cppMask_un_1_;
	BIT_VEC cppVar_55242 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_55243 = (PSW >> 2) & cppMask_un_1_;
	BIT_VEC cppVar_55244 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_55245 = (cppVar_55243 << 2) | cppVar_55244;
	cppVar_55245 = (cppVar_55245 & cppMask_un_3_);
	BIT_VEC cppVar_55246 = (cppVar_55242 << 3) | cppVar_55245;
	cppVar_55246 = (cppVar_55246 & cppMask_un_6_);
	BIT_VEC cppVar_55247 = (cppVar_55241 << 6) | cppVar_55246;
	cppVar_55247 = (cppVar_55247 & cppMask_un_7_);
	BIT_VEC cppVar_55248 = (cppVar_55240 << 7) | cppVar_55247;
	cppVar_55248 = (cppVar_55248 & cppMask_un_8_);
	BIT_VEC cppVar_55249 = ROM.rd(PC);
	bool cppVar_55251 = (cppVar_55249 == 47);
	BIT_VEC cppVar_55252 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_55254 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55256 = (cppVar_55254 << 3) | 7;
	cppVar_55256 = (cppVar_55256 & cppMask_un_5_);
	BIT_VEC cppVar_55257 = (0 << 5) | cppVar_55256;
	cppVar_55257 = (cppVar_55257 & cppMask_un_8_);
	BIT_VEC cppVar_55258 = IRAM.rd(cppVar_55257);
	BIT_VEC cppVar_55259 = (cppVar_55258 & cppMask_un_8_);
	BIT_VEC cppVar_55260 = cppVar_55252 + cppVar_55259;
	cppVar_55260 = (cppVar_55260 & cppMask_un_9_);
	BIT_VEC cppVar_55262 = 0;
	BIT_VEC cppVar_55263 = cppVar_55260 + cppVar_55262;
	cppVar_55263 = (cppVar_55263 & cppMask_un_9_);
	BIT_VEC cppVar_55264 = (cppVar_55263 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55265 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55266 = (cppVar_55265 & cppMask_un_4_);
	BIT_VEC cppVar_55267 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55268 = (cppVar_55267 << 3) | 7;
	cppVar_55268 = (cppVar_55268 & cppMask_un_5_);
	BIT_VEC cppVar_55269 = (0 << 5) | cppVar_55268;
	cppVar_55269 = (cppVar_55269 & cppMask_un_8_);
	BIT_VEC cppVar_55270 = IRAM.rd(cppVar_55269);
	BIT_VEC cppVar_55271 = (cppVar_55270 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55272 = (cppVar_55271 & cppMask_un_4_);
	BIT_VEC cppVar_55273 = cppVar_55266 + cppVar_55272;
	cppVar_55273 = (cppVar_55273 & cppMask_un_5_);
	BIT_VEC cppVar_55274 = 0;
	BIT_VEC cppVar_55275 = cppVar_55273 + cppVar_55274;
	cppVar_55275 = (cppVar_55275 & cppMask_un_5_);
	BIT_VEC cppVar_55276 = (cppVar_55275 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_55277 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_55278 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55279 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55280 = (cppVar_55279 << 3) | 7;
	cppVar_55280 = (cppVar_55280 & cppMask_un_5_);
	BIT_VEC cppVar_55281 = (0 << 5) | cppVar_55280;
	cppVar_55281 = (cppVar_55281 & cppMask_un_8_);
	BIT_VEC cppVar_55282 = IRAM.rd(cppVar_55281);
	BIT_VEC cppVar_55283 = ((cppVar_55282 & cppMask_bit_8_) ? (cppVar_55282 | cppMask_sign_8_) : cppVar_55282);
	BIT_VEC cppVar_55284 = cppVar_55278 + cppVar_55283;
	cppVar_55284 = (cppVar_55284 & cppMask_un_9_);
	BIT_VEC cppVar_55285 = 0;
	BIT_VEC cppVar_55286 = cppVar_55284 + cppVar_55285;
	cppVar_55286 = (cppVar_55286 & cppMask_un_9_);
	BIT_VEC cppVar_55287 = (cppVar_55286 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55288 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55289 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55290 = (cppVar_55289 << 3) | 7;
	cppVar_55290 = (cppVar_55290 & cppMask_un_5_);
	BIT_VEC cppVar_55291 = (0 << 5) | cppVar_55290;
	cppVar_55291 = (cppVar_55291 & cppMask_un_8_);
	BIT_VEC cppVar_55292 = IRAM.rd(cppVar_55291);
	BIT_VEC cppVar_55293 = ((cppVar_55292 & cppMask_bit_8_) ? (cppVar_55292 | cppMask_sign_8_) : cppVar_55292);
	BIT_VEC cppVar_55294 = cppVar_55288 + cppVar_55293;
	cppVar_55294 = (cppVar_55294 & cppMask_un_9_);
	BIT_VEC cppVar_55295 = 0;
	BIT_VEC cppVar_55296 = cppVar_55294 + cppVar_55295;
	cppVar_55296 = (cppVar_55296 & cppMask_un_9_);
	BIT_VEC cppVar_55297 = (cppVar_55296 >> 7) & cppMask_un_1_;
	bool cppVar_55298 = (cppVar_55287 != cppVar_55297);
	BIT_VEC cppVar_55301 = (cppVar_55298) ? 1 : 0;
	BIT_VEC cppVar_55302 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_55303 = (cppVar_55301 << 2) | cppVar_55302;
	cppVar_55303 = (cppVar_55303 & cppMask_un_3_);
	BIT_VEC cppVar_55304 = (cppVar_55277 << 3) | cppVar_55303;
	cppVar_55304 = (cppVar_55304 & cppMask_un_6_);
	BIT_VEC cppVar_55305 = (cppVar_55276 << 6) | cppVar_55304;
	cppVar_55305 = (cppVar_55305 & cppMask_un_7_);
	BIT_VEC cppVar_55306 = (cppVar_55264 << 7) | cppVar_55305;
	cppVar_55306 = (cppVar_55306 & cppMask_un_8_);
	BIT_VEC cppVar_55307 = ROM.rd(PC);
	bool cppVar_55309 = (cppVar_55307 == 46);
	BIT_VEC cppVar_55310 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_55312 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55314 = (cppVar_55312 << 3) | 6;
	cppVar_55314 = (cppVar_55314 & cppMask_un_5_);
	BIT_VEC cppVar_55315 = (0 << 5) | cppVar_55314;
	cppVar_55315 = (cppVar_55315 & cppMask_un_8_);
	BIT_VEC cppVar_55316 = IRAM.rd(cppVar_55315);
	BIT_VEC cppVar_55317 = (cppVar_55316 & cppMask_un_8_);
	BIT_VEC cppVar_55318 = cppVar_55310 + cppVar_55317;
	cppVar_55318 = (cppVar_55318 & cppMask_un_9_);
	BIT_VEC cppVar_55320 = 0;
	BIT_VEC cppVar_55321 = cppVar_55318 + cppVar_55320;
	cppVar_55321 = (cppVar_55321 & cppMask_un_9_);
	BIT_VEC cppVar_55322 = (cppVar_55321 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55323 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55324 = (cppVar_55323 & cppMask_un_4_);
	BIT_VEC cppVar_55325 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55326 = (cppVar_55325 << 3) | 6;
	cppVar_55326 = (cppVar_55326 & cppMask_un_5_);
	BIT_VEC cppVar_55327 = (0 << 5) | cppVar_55326;
	cppVar_55327 = (cppVar_55327 & cppMask_un_8_);
	BIT_VEC cppVar_55328 = IRAM.rd(cppVar_55327);
	BIT_VEC cppVar_55329 = (cppVar_55328 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55330 = (cppVar_55329 & cppMask_un_4_);
	BIT_VEC cppVar_55331 = cppVar_55324 + cppVar_55330;
	cppVar_55331 = (cppVar_55331 & cppMask_un_5_);
	BIT_VEC cppVar_55332 = 0;
	BIT_VEC cppVar_55333 = cppVar_55331 + cppVar_55332;
	cppVar_55333 = (cppVar_55333 & cppMask_un_5_);
	BIT_VEC cppVar_55334 = (cppVar_55333 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_55335 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_55336 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55337 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55338 = (cppVar_55337 << 3) | 6;
	cppVar_55338 = (cppVar_55338 & cppMask_un_5_);
	BIT_VEC cppVar_55339 = (0 << 5) | cppVar_55338;
	cppVar_55339 = (cppVar_55339 & cppMask_un_8_);
	BIT_VEC cppVar_55340 = IRAM.rd(cppVar_55339);
	BIT_VEC cppVar_55341 = ((cppVar_55340 & cppMask_bit_8_) ? (cppVar_55340 | cppMask_sign_8_) : cppVar_55340);
	BIT_VEC cppVar_55342 = cppVar_55336 + cppVar_55341;
	cppVar_55342 = (cppVar_55342 & cppMask_un_9_);
	BIT_VEC cppVar_55343 = 0;
	BIT_VEC cppVar_55344 = cppVar_55342 + cppVar_55343;
	cppVar_55344 = (cppVar_55344 & cppMask_un_9_);
	BIT_VEC cppVar_55345 = (cppVar_55344 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55346 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55347 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55348 = (cppVar_55347 << 3) | 6;
	cppVar_55348 = (cppVar_55348 & cppMask_un_5_);
	BIT_VEC cppVar_55349 = (0 << 5) | cppVar_55348;
	cppVar_55349 = (cppVar_55349 & cppMask_un_8_);
	BIT_VEC cppVar_55350 = IRAM.rd(cppVar_55349);
	BIT_VEC cppVar_55351 = ((cppVar_55350 & cppMask_bit_8_) ? (cppVar_55350 | cppMask_sign_8_) : cppVar_55350);
	BIT_VEC cppVar_55352 = cppVar_55346 + cppVar_55351;
	cppVar_55352 = (cppVar_55352 & cppMask_un_9_);
	BIT_VEC cppVar_55353 = 0;
	BIT_VEC cppVar_55354 = cppVar_55352 + cppVar_55353;
	cppVar_55354 = (cppVar_55354 & cppMask_un_9_);
	BIT_VEC cppVar_55355 = (cppVar_55354 >> 7) & cppMask_un_1_;
	bool cppVar_55356 = (cppVar_55345 != cppVar_55355);
	BIT_VEC cppVar_55359 = (cppVar_55356) ? 1 : 0;
	BIT_VEC cppVar_55360 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_55361 = (cppVar_55359 << 2) | cppVar_55360;
	cppVar_55361 = (cppVar_55361 & cppMask_un_3_);
	BIT_VEC cppVar_55362 = (cppVar_55335 << 3) | cppVar_55361;
	cppVar_55362 = (cppVar_55362 & cppMask_un_6_);
	BIT_VEC cppVar_55363 = (cppVar_55334 << 6) | cppVar_55362;
	cppVar_55363 = (cppVar_55363 & cppMask_un_7_);
	BIT_VEC cppVar_55364 = (cppVar_55322 << 7) | cppVar_55363;
	cppVar_55364 = (cppVar_55364 & cppMask_un_8_);
	BIT_VEC cppVar_55365 = ROM.rd(PC);
	bool cppVar_55367 = (cppVar_55365 == 45);
	BIT_VEC cppVar_55368 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_55370 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55372 = (cppVar_55370 << 3) | 5;
	cppVar_55372 = (cppVar_55372 & cppMask_un_5_);
	BIT_VEC cppVar_55373 = (0 << 5) | cppVar_55372;
	cppVar_55373 = (cppVar_55373 & cppMask_un_8_);
	BIT_VEC cppVar_55374 = IRAM.rd(cppVar_55373);
	BIT_VEC cppVar_55375 = (cppVar_55374 & cppMask_un_8_);
	BIT_VEC cppVar_55376 = cppVar_55368 + cppVar_55375;
	cppVar_55376 = (cppVar_55376 & cppMask_un_9_);
	BIT_VEC cppVar_55378 = 0;
	BIT_VEC cppVar_55379 = cppVar_55376 + cppVar_55378;
	cppVar_55379 = (cppVar_55379 & cppMask_un_9_);
	BIT_VEC cppVar_55380 = (cppVar_55379 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55381 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55382 = (cppVar_55381 & cppMask_un_4_);
	BIT_VEC cppVar_55383 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55384 = (cppVar_55383 << 3) | 5;
	cppVar_55384 = (cppVar_55384 & cppMask_un_5_);
	BIT_VEC cppVar_55385 = (0 << 5) | cppVar_55384;
	cppVar_55385 = (cppVar_55385 & cppMask_un_8_);
	BIT_VEC cppVar_55386 = IRAM.rd(cppVar_55385);
	BIT_VEC cppVar_55387 = (cppVar_55386 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55388 = (cppVar_55387 & cppMask_un_4_);
	BIT_VEC cppVar_55389 = cppVar_55382 + cppVar_55388;
	cppVar_55389 = (cppVar_55389 & cppMask_un_5_);
	BIT_VEC cppVar_55390 = 0;
	BIT_VEC cppVar_55391 = cppVar_55389 + cppVar_55390;
	cppVar_55391 = (cppVar_55391 & cppMask_un_5_);
	BIT_VEC cppVar_55392 = (cppVar_55391 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_55393 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_55394 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55395 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55396 = (cppVar_55395 << 3) | 5;
	cppVar_55396 = (cppVar_55396 & cppMask_un_5_);
	BIT_VEC cppVar_55397 = (0 << 5) | cppVar_55396;
	cppVar_55397 = (cppVar_55397 & cppMask_un_8_);
	BIT_VEC cppVar_55398 = IRAM.rd(cppVar_55397);
	BIT_VEC cppVar_55399 = ((cppVar_55398 & cppMask_bit_8_) ? (cppVar_55398 | cppMask_sign_8_) : cppVar_55398);
	BIT_VEC cppVar_55400 = cppVar_55394 + cppVar_55399;
	cppVar_55400 = (cppVar_55400 & cppMask_un_9_);
	BIT_VEC cppVar_55401 = 0;
	BIT_VEC cppVar_55402 = cppVar_55400 + cppVar_55401;
	cppVar_55402 = (cppVar_55402 & cppMask_un_9_);
	BIT_VEC cppVar_55403 = (cppVar_55402 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55404 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55405 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55406 = (cppVar_55405 << 3) | 5;
	cppVar_55406 = (cppVar_55406 & cppMask_un_5_);
	BIT_VEC cppVar_55407 = (0 << 5) | cppVar_55406;
	cppVar_55407 = (cppVar_55407 & cppMask_un_8_);
	BIT_VEC cppVar_55408 = IRAM.rd(cppVar_55407);
	BIT_VEC cppVar_55409 = ((cppVar_55408 & cppMask_bit_8_) ? (cppVar_55408 | cppMask_sign_8_) : cppVar_55408);
	BIT_VEC cppVar_55410 = cppVar_55404 + cppVar_55409;
	cppVar_55410 = (cppVar_55410 & cppMask_un_9_);
	BIT_VEC cppVar_55411 = 0;
	BIT_VEC cppVar_55412 = cppVar_55410 + cppVar_55411;
	cppVar_55412 = (cppVar_55412 & cppMask_un_9_);
	BIT_VEC cppVar_55413 = (cppVar_55412 >> 7) & cppMask_un_1_;
	bool cppVar_55414 = (cppVar_55403 != cppVar_55413);
	BIT_VEC cppVar_55417 = (cppVar_55414) ? 1 : 0;
	BIT_VEC cppVar_55418 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_55419 = (cppVar_55417 << 2) | cppVar_55418;
	cppVar_55419 = (cppVar_55419 & cppMask_un_3_);
	BIT_VEC cppVar_55420 = (cppVar_55393 << 3) | cppVar_55419;
	cppVar_55420 = (cppVar_55420 & cppMask_un_6_);
	BIT_VEC cppVar_55421 = (cppVar_55392 << 6) | cppVar_55420;
	cppVar_55421 = (cppVar_55421 & cppMask_un_7_);
	BIT_VEC cppVar_55422 = (cppVar_55380 << 7) | cppVar_55421;
	cppVar_55422 = (cppVar_55422 & cppMask_un_8_);
	BIT_VEC cppVar_55423 = ROM.rd(PC);
	bool cppVar_55425 = (cppVar_55423 == 44);
	BIT_VEC cppVar_55426 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_55428 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55430 = (cppVar_55428 << 3) | 4;
	cppVar_55430 = (cppVar_55430 & cppMask_un_5_);
	BIT_VEC cppVar_55431 = (0 << 5) | cppVar_55430;
	cppVar_55431 = (cppVar_55431 & cppMask_un_8_);
	BIT_VEC cppVar_55432 = IRAM.rd(cppVar_55431);
	BIT_VEC cppVar_55433 = (cppVar_55432 & cppMask_un_8_);
	BIT_VEC cppVar_55434 = cppVar_55426 + cppVar_55433;
	cppVar_55434 = (cppVar_55434 & cppMask_un_9_);
	BIT_VEC cppVar_55436 = 0;
	BIT_VEC cppVar_55437 = cppVar_55434 + cppVar_55436;
	cppVar_55437 = (cppVar_55437 & cppMask_un_9_);
	BIT_VEC cppVar_55438 = (cppVar_55437 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55439 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55440 = (cppVar_55439 & cppMask_un_4_);
	BIT_VEC cppVar_55441 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55442 = (cppVar_55441 << 3) | 4;
	cppVar_55442 = (cppVar_55442 & cppMask_un_5_);
	BIT_VEC cppVar_55443 = (0 << 5) | cppVar_55442;
	cppVar_55443 = (cppVar_55443 & cppMask_un_8_);
	BIT_VEC cppVar_55444 = IRAM.rd(cppVar_55443);
	BIT_VEC cppVar_55445 = (cppVar_55444 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55446 = (cppVar_55445 & cppMask_un_4_);
	BIT_VEC cppVar_55447 = cppVar_55440 + cppVar_55446;
	cppVar_55447 = (cppVar_55447 & cppMask_un_5_);
	BIT_VEC cppVar_55448 = 0;
	BIT_VEC cppVar_55449 = cppVar_55447 + cppVar_55448;
	cppVar_55449 = (cppVar_55449 & cppMask_un_5_);
	BIT_VEC cppVar_55450 = (cppVar_55449 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_55451 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_55452 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55453 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55454 = (cppVar_55453 << 3) | 4;
	cppVar_55454 = (cppVar_55454 & cppMask_un_5_);
	BIT_VEC cppVar_55455 = (0 << 5) | cppVar_55454;
	cppVar_55455 = (cppVar_55455 & cppMask_un_8_);
	BIT_VEC cppVar_55456 = IRAM.rd(cppVar_55455);
	BIT_VEC cppVar_55457 = ((cppVar_55456 & cppMask_bit_8_) ? (cppVar_55456 | cppMask_sign_8_) : cppVar_55456);
	BIT_VEC cppVar_55458 = cppVar_55452 + cppVar_55457;
	cppVar_55458 = (cppVar_55458 & cppMask_un_9_);
	BIT_VEC cppVar_55459 = 0;
	BIT_VEC cppVar_55460 = cppVar_55458 + cppVar_55459;
	cppVar_55460 = (cppVar_55460 & cppMask_un_9_);
	BIT_VEC cppVar_55461 = (cppVar_55460 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55462 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55463 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55464 = (cppVar_55463 << 3) | 4;
	cppVar_55464 = (cppVar_55464 & cppMask_un_5_);
	BIT_VEC cppVar_55465 = (0 << 5) | cppVar_55464;
	cppVar_55465 = (cppVar_55465 & cppMask_un_8_);
	BIT_VEC cppVar_55466 = IRAM.rd(cppVar_55465);
	BIT_VEC cppVar_55467 = ((cppVar_55466 & cppMask_bit_8_) ? (cppVar_55466 | cppMask_sign_8_) : cppVar_55466);
	BIT_VEC cppVar_55468 = cppVar_55462 + cppVar_55467;
	cppVar_55468 = (cppVar_55468 & cppMask_un_9_);
	BIT_VEC cppVar_55469 = 0;
	BIT_VEC cppVar_55470 = cppVar_55468 + cppVar_55469;
	cppVar_55470 = (cppVar_55470 & cppMask_un_9_);
	BIT_VEC cppVar_55471 = (cppVar_55470 >> 7) & cppMask_un_1_;
	bool cppVar_55472 = (cppVar_55461 != cppVar_55471);
	BIT_VEC cppVar_55475 = (cppVar_55472) ? 1 : 0;
	BIT_VEC cppVar_55476 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_55477 = (cppVar_55475 << 2) | cppVar_55476;
	cppVar_55477 = (cppVar_55477 & cppMask_un_3_);
	BIT_VEC cppVar_55478 = (cppVar_55451 << 3) | cppVar_55477;
	cppVar_55478 = (cppVar_55478 & cppMask_un_6_);
	BIT_VEC cppVar_55479 = (cppVar_55450 << 6) | cppVar_55478;
	cppVar_55479 = (cppVar_55479 & cppMask_un_7_);
	BIT_VEC cppVar_55480 = (cppVar_55438 << 7) | cppVar_55479;
	cppVar_55480 = (cppVar_55480 & cppMask_un_8_);
	BIT_VEC cppVar_55481 = ROM.rd(PC);
	bool cppVar_55483 = (cppVar_55481 == 43);
	BIT_VEC cppVar_55484 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_55486 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55488 = (cppVar_55486 << 3) | 3;
	cppVar_55488 = (cppVar_55488 & cppMask_un_5_);
	BIT_VEC cppVar_55489 = (0 << 5) | cppVar_55488;
	cppVar_55489 = (cppVar_55489 & cppMask_un_8_);
	BIT_VEC cppVar_55490 = IRAM.rd(cppVar_55489);
	BIT_VEC cppVar_55491 = (cppVar_55490 & cppMask_un_8_);
	BIT_VEC cppVar_55492 = cppVar_55484 + cppVar_55491;
	cppVar_55492 = (cppVar_55492 & cppMask_un_9_);
	BIT_VEC cppVar_55494 = 0;
	BIT_VEC cppVar_55495 = cppVar_55492 + cppVar_55494;
	cppVar_55495 = (cppVar_55495 & cppMask_un_9_);
	BIT_VEC cppVar_55496 = (cppVar_55495 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55497 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55498 = (cppVar_55497 & cppMask_un_4_);
	BIT_VEC cppVar_55499 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55500 = (cppVar_55499 << 3) | 3;
	cppVar_55500 = (cppVar_55500 & cppMask_un_5_);
	BIT_VEC cppVar_55501 = (0 << 5) | cppVar_55500;
	cppVar_55501 = (cppVar_55501 & cppMask_un_8_);
	BIT_VEC cppVar_55502 = IRAM.rd(cppVar_55501);
	BIT_VEC cppVar_55503 = (cppVar_55502 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55504 = (cppVar_55503 & cppMask_un_4_);
	BIT_VEC cppVar_55505 = cppVar_55498 + cppVar_55504;
	cppVar_55505 = (cppVar_55505 & cppMask_un_5_);
	BIT_VEC cppVar_55506 = 0;
	BIT_VEC cppVar_55507 = cppVar_55505 + cppVar_55506;
	cppVar_55507 = (cppVar_55507 & cppMask_un_5_);
	BIT_VEC cppVar_55508 = (cppVar_55507 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_55509 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_55510 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55511 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55512 = (cppVar_55511 << 3) | 3;
	cppVar_55512 = (cppVar_55512 & cppMask_un_5_);
	BIT_VEC cppVar_55513 = (0 << 5) | cppVar_55512;
	cppVar_55513 = (cppVar_55513 & cppMask_un_8_);
	BIT_VEC cppVar_55514 = IRAM.rd(cppVar_55513);
	BIT_VEC cppVar_55515 = ((cppVar_55514 & cppMask_bit_8_) ? (cppVar_55514 | cppMask_sign_8_) : cppVar_55514);
	BIT_VEC cppVar_55516 = cppVar_55510 + cppVar_55515;
	cppVar_55516 = (cppVar_55516 & cppMask_un_9_);
	BIT_VEC cppVar_55517 = 0;
	BIT_VEC cppVar_55518 = cppVar_55516 + cppVar_55517;
	cppVar_55518 = (cppVar_55518 & cppMask_un_9_);
	BIT_VEC cppVar_55519 = (cppVar_55518 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55520 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55521 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55522 = (cppVar_55521 << 3) | 3;
	cppVar_55522 = (cppVar_55522 & cppMask_un_5_);
	BIT_VEC cppVar_55523 = (0 << 5) | cppVar_55522;
	cppVar_55523 = (cppVar_55523 & cppMask_un_8_);
	BIT_VEC cppVar_55524 = IRAM.rd(cppVar_55523);
	BIT_VEC cppVar_55525 = ((cppVar_55524 & cppMask_bit_8_) ? (cppVar_55524 | cppMask_sign_8_) : cppVar_55524);
	BIT_VEC cppVar_55526 = cppVar_55520 + cppVar_55525;
	cppVar_55526 = (cppVar_55526 & cppMask_un_9_);
	BIT_VEC cppVar_55527 = 0;
	BIT_VEC cppVar_55528 = cppVar_55526 + cppVar_55527;
	cppVar_55528 = (cppVar_55528 & cppMask_un_9_);
	BIT_VEC cppVar_55529 = (cppVar_55528 >> 7) & cppMask_un_1_;
	bool cppVar_55530 = (cppVar_55519 != cppVar_55529);
	BIT_VEC cppVar_55533 = (cppVar_55530) ? 1 : 0;
	BIT_VEC cppVar_55534 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_55535 = (cppVar_55533 << 2) | cppVar_55534;
	cppVar_55535 = (cppVar_55535 & cppMask_un_3_);
	BIT_VEC cppVar_55536 = (cppVar_55509 << 3) | cppVar_55535;
	cppVar_55536 = (cppVar_55536 & cppMask_un_6_);
	BIT_VEC cppVar_55537 = (cppVar_55508 << 6) | cppVar_55536;
	cppVar_55537 = (cppVar_55537 & cppMask_un_7_);
	BIT_VEC cppVar_55538 = (cppVar_55496 << 7) | cppVar_55537;
	cppVar_55538 = (cppVar_55538 & cppMask_un_8_);
	BIT_VEC cppVar_55539 = ROM.rd(PC);
	bool cppVar_55541 = (cppVar_55539 == 42);
	BIT_VEC cppVar_55542 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_55544 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55546 = (cppVar_55544 << 3) | 2;
	cppVar_55546 = (cppVar_55546 & cppMask_un_5_);
	BIT_VEC cppVar_55547 = (0 << 5) | cppVar_55546;
	cppVar_55547 = (cppVar_55547 & cppMask_un_8_);
	BIT_VEC cppVar_55548 = IRAM.rd(cppVar_55547);
	BIT_VEC cppVar_55549 = (cppVar_55548 & cppMask_un_8_);
	BIT_VEC cppVar_55550 = cppVar_55542 + cppVar_55549;
	cppVar_55550 = (cppVar_55550 & cppMask_un_9_);
	BIT_VEC cppVar_55552 = 0;
	BIT_VEC cppVar_55553 = cppVar_55550 + cppVar_55552;
	cppVar_55553 = (cppVar_55553 & cppMask_un_9_);
	BIT_VEC cppVar_55554 = (cppVar_55553 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55555 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55556 = (cppVar_55555 & cppMask_un_4_);
	BIT_VEC cppVar_55557 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55558 = (cppVar_55557 << 3) | 2;
	cppVar_55558 = (cppVar_55558 & cppMask_un_5_);
	BIT_VEC cppVar_55559 = (0 << 5) | cppVar_55558;
	cppVar_55559 = (cppVar_55559 & cppMask_un_8_);
	BIT_VEC cppVar_55560 = IRAM.rd(cppVar_55559);
	BIT_VEC cppVar_55561 = (cppVar_55560 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55562 = (cppVar_55561 & cppMask_un_4_);
	BIT_VEC cppVar_55563 = cppVar_55556 + cppVar_55562;
	cppVar_55563 = (cppVar_55563 & cppMask_un_5_);
	BIT_VEC cppVar_55564 = 0;
	BIT_VEC cppVar_55565 = cppVar_55563 + cppVar_55564;
	cppVar_55565 = (cppVar_55565 & cppMask_un_5_);
	BIT_VEC cppVar_55566 = (cppVar_55565 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_55567 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_55568 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55569 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55570 = (cppVar_55569 << 3) | 2;
	cppVar_55570 = (cppVar_55570 & cppMask_un_5_);
	BIT_VEC cppVar_55571 = (0 << 5) | cppVar_55570;
	cppVar_55571 = (cppVar_55571 & cppMask_un_8_);
	BIT_VEC cppVar_55572 = IRAM.rd(cppVar_55571);
	BIT_VEC cppVar_55573 = ((cppVar_55572 & cppMask_bit_8_) ? (cppVar_55572 | cppMask_sign_8_) : cppVar_55572);
	BIT_VEC cppVar_55574 = cppVar_55568 + cppVar_55573;
	cppVar_55574 = (cppVar_55574 & cppMask_un_9_);
	BIT_VEC cppVar_55575 = 0;
	BIT_VEC cppVar_55576 = cppVar_55574 + cppVar_55575;
	cppVar_55576 = (cppVar_55576 & cppMask_un_9_);
	BIT_VEC cppVar_55577 = (cppVar_55576 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55578 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55579 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55580 = (cppVar_55579 << 3) | 2;
	cppVar_55580 = (cppVar_55580 & cppMask_un_5_);
	BIT_VEC cppVar_55581 = (0 << 5) | cppVar_55580;
	cppVar_55581 = (cppVar_55581 & cppMask_un_8_);
	BIT_VEC cppVar_55582 = IRAM.rd(cppVar_55581);
	BIT_VEC cppVar_55583 = ((cppVar_55582 & cppMask_bit_8_) ? (cppVar_55582 | cppMask_sign_8_) : cppVar_55582);
	BIT_VEC cppVar_55584 = cppVar_55578 + cppVar_55583;
	cppVar_55584 = (cppVar_55584 & cppMask_un_9_);
	BIT_VEC cppVar_55585 = 0;
	BIT_VEC cppVar_55586 = cppVar_55584 + cppVar_55585;
	cppVar_55586 = (cppVar_55586 & cppMask_un_9_);
	BIT_VEC cppVar_55587 = (cppVar_55586 >> 7) & cppMask_un_1_;
	bool cppVar_55588 = (cppVar_55577 != cppVar_55587);
	BIT_VEC cppVar_55591 = (cppVar_55588) ? 1 : 0;
	BIT_VEC cppVar_55592 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_55593 = (cppVar_55591 << 2) | cppVar_55592;
	cppVar_55593 = (cppVar_55593 & cppMask_un_3_);
	BIT_VEC cppVar_55594 = (cppVar_55567 << 3) | cppVar_55593;
	cppVar_55594 = (cppVar_55594 & cppMask_un_6_);
	BIT_VEC cppVar_55595 = (cppVar_55566 << 6) | cppVar_55594;
	cppVar_55595 = (cppVar_55595 & cppMask_un_7_);
	BIT_VEC cppVar_55596 = (cppVar_55554 << 7) | cppVar_55595;
	cppVar_55596 = (cppVar_55596 & cppMask_un_8_);
	BIT_VEC cppVar_55597 = ROM.rd(PC);
	bool cppVar_55599 = (cppVar_55597 == 41);
	BIT_VEC cppVar_55600 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_55602 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55604 = (cppVar_55602 << 3) | 1;
	cppVar_55604 = (cppVar_55604 & cppMask_un_5_);
	BIT_VEC cppVar_55605 = (0 << 5) | cppVar_55604;
	cppVar_55605 = (cppVar_55605 & cppMask_un_8_);
	BIT_VEC cppVar_55606 = IRAM.rd(cppVar_55605);
	BIT_VEC cppVar_55607 = (cppVar_55606 & cppMask_un_8_);
	BIT_VEC cppVar_55608 = cppVar_55600 + cppVar_55607;
	cppVar_55608 = (cppVar_55608 & cppMask_un_9_);
	BIT_VEC cppVar_55610 = 0;
	BIT_VEC cppVar_55611 = cppVar_55608 + cppVar_55610;
	cppVar_55611 = (cppVar_55611 & cppMask_un_9_);
	BIT_VEC cppVar_55612 = (cppVar_55611 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55613 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55614 = (cppVar_55613 & cppMask_un_4_);
	BIT_VEC cppVar_55615 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55616 = (cppVar_55615 << 3) | 1;
	cppVar_55616 = (cppVar_55616 & cppMask_un_5_);
	BIT_VEC cppVar_55617 = (0 << 5) | cppVar_55616;
	cppVar_55617 = (cppVar_55617 & cppMask_un_8_);
	BIT_VEC cppVar_55618 = IRAM.rd(cppVar_55617);
	BIT_VEC cppVar_55619 = (cppVar_55618 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55620 = (cppVar_55619 & cppMask_un_4_);
	BIT_VEC cppVar_55621 = cppVar_55614 + cppVar_55620;
	cppVar_55621 = (cppVar_55621 & cppMask_un_5_);
	BIT_VEC cppVar_55622 = 0;
	BIT_VEC cppVar_55623 = cppVar_55621 + cppVar_55622;
	cppVar_55623 = (cppVar_55623 & cppMask_un_5_);
	BIT_VEC cppVar_55624 = (cppVar_55623 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_55625 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_55626 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55627 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55628 = (cppVar_55627 << 3) | 1;
	cppVar_55628 = (cppVar_55628 & cppMask_un_5_);
	BIT_VEC cppVar_55629 = (0 << 5) | cppVar_55628;
	cppVar_55629 = (cppVar_55629 & cppMask_un_8_);
	BIT_VEC cppVar_55630 = IRAM.rd(cppVar_55629);
	BIT_VEC cppVar_55631 = ((cppVar_55630 & cppMask_bit_8_) ? (cppVar_55630 | cppMask_sign_8_) : cppVar_55630);
	BIT_VEC cppVar_55632 = cppVar_55626 + cppVar_55631;
	cppVar_55632 = (cppVar_55632 & cppMask_un_9_);
	BIT_VEC cppVar_55633 = 0;
	BIT_VEC cppVar_55634 = cppVar_55632 + cppVar_55633;
	cppVar_55634 = (cppVar_55634 & cppMask_un_9_);
	BIT_VEC cppVar_55635 = (cppVar_55634 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55636 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55637 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55638 = (cppVar_55637 << 3) | 1;
	cppVar_55638 = (cppVar_55638 & cppMask_un_5_);
	BIT_VEC cppVar_55639 = (0 << 5) | cppVar_55638;
	cppVar_55639 = (cppVar_55639 & cppMask_un_8_);
	BIT_VEC cppVar_55640 = IRAM.rd(cppVar_55639);
	BIT_VEC cppVar_55641 = ((cppVar_55640 & cppMask_bit_8_) ? (cppVar_55640 | cppMask_sign_8_) : cppVar_55640);
	BIT_VEC cppVar_55642 = cppVar_55636 + cppVar_55641;
	cppVar_55642 = (cppVar_55642 & cppMask_un_9_);
	BIT_VEC cppVar_55643 = 0;
	BIT_VEC cppVar_55644 = cppVar_55642 + cppVar_55643;
	cppVar_55644 = (cppVar_55644 & cppMask_un_9_);
	BIT_VEC cppVar_55645 = (cppVar_55644 >> 7) & cppMask_un_1_;
	bool cppVar_55646 = (cppVar_55635 != cppVar_55645);
	BIT_VEC cppVar_55649 = (cppVar_55646) ? 1 : 0;
	BIT_VEC cppVar_55650 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_55651 = (cppVar_55649 << 2) | cppVar_55650;
	cppVar_55651 = (cppVar_55651 & cppMask_un_3_);
	BIT_VEC cppVar_55652 = (cppVar_55625 << 3) | cppVar_55651;
	cppVar_55652 = (cppVar_55652 & cppMask_un_6_);
	BIT_VEC cppVar_55653 = (cppVar_55624 << 6) | cppVar_55652;
	cppVar_55653 = (cppVar_55653 & cppMask_un_7_);
	BIT_VEC cppVar_55654 = (cppVar_55612 << 7) | cppVar_55653;
	cppVar_55654 = (cppVar_55654 & cppMask_un_8_);
	BIT_VEC cppVar_55655 = ROM.rd(PC);
	bool cppVar_55657 = (cppVar_55655 == 40);
	BIT_VEC cppVar_55658 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_55660 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55662 = (cppVar_55660 << 3) | 0;
	cppVar_55662 = (cppVar_55662 & cppMask_un_5_);
	BIT_VEC cppVar_55663 = (0 << 5) | cppVar_55662;
	cppVar_55663 = (cppVar_55663 & cppMask_un_8_);
	BIT_VEC cppVar_55664 = IRAM.rd(cppVar_55663);
	BIT_VEC cppVar_55665 = (cppVar_55664 & cppMask_un_8_);
	BIT_VEC cppVar_55666 = cppVar_55658 + cppVar_55665;
	cppVar_55666 = (cppVar_55666 & cppMask_un_9_);
	BIT_VEC cppVar_55668 = 0;
	BIT_VEC cppVar_55669 = cppVar_55666 + cppVar_55668;
	cppVar_55669 = (cppVar_55669 & cppMask_un_9_);
	BIT_VEC cppVar_55670 = (cppVar_55669 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55671 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55672 = (cppVar_55671 & cppMask_un_4_);
	BIT_VEC cppVar_55673 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55674 = (cppVar_55673 << 3) | 0;
	cppVar_55674 = (cppVar_55674 & cppMask_un_5_);
	BIT_VEC cppVar_55675 = (0 << 5) | cppVar_55674;
	cppVar_55675 = (cppVar_55675 & cppMask_un_8_);
	BIT_VEC cppVar_55676 = IRAM.rd(cppVar_55675);
	BIT_VEC cppVar_55677 = (cppVar_55676 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55678 = (cppVar_55677 & cppMask_un_4_);
	BIT_VEC cppVar_55679 = cppVar_55672 + cppVar_55678;
	cppVar_55679 = (cppVar_55679 & cppMask_un_5_);
	BIT_VEC cppVar_55680 = 0;
	BIT_VEC cppVar_55681 = cppVar_55679 + cppVar_55680;
	cppVar_55681 = (cppVar_55681 & cppMask_un_5_);
	BIT_VEC cppVar_55682 = (cppVar_55681 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_55683 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_55684 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55685 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55686 = (cppVar_55685 << 3) | 0;
	cppVar_55686 = (cppVar_55686 & cppMask_un_5_);
	BIT_VEC cppVar_55687 = (0 << 5) | cppVar_55686;
	cppVar_55687 = (cppVar_55687 & cppMask_un_8_);
	BIT_VEC cppVar_55688 = IRAM.rd(cppVar_55687);
	BIT_VEC cppVar_55689 = ((cppVar_55688 & cppMask_bit_8_) ? (cppVar_55688 | cppMask_sign_8_) : cppVar_55688);
	BIT_VEC cppVar_55690 = cppVar_55684 + cppVar_55689;
	cppVar_55690 = (cppVar_55690 & cppMask_un_9_);
	BIT_VEC cppVar_55691 = 0;
	BIT_VEC cppVar_55692 = cppVar_55690 + cppVar_55691;
	cppVar_55692 = (cppVar_55692 & cppMask_un_9_);
	BIT_VEC cppVar_55693 = (cppVar_55692 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55694 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55695 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55696 = (cppVar_55695 << 3) | 0;
	cppVar_55696 = (cppVar_55696 & cppMask_un_5_);
	BIT_VEC cppVar_55697 = (0 << 5) | cppVar_55696;
	cppVar_55697 = (cppVar_55697 & cppMask_un_8_);
	BIT_VEC cppVar_55698 = IRAM.rd(cppVar_55697);
	BIT_VEC cppVar_55699 = ((cppVar_55698 & cppMask_bit_8_) ? (cppVar_55698 | cppMask_sign_8_) : cppVar_55698);
	BIT_VEC cppVar_55700 = cppVar_55694 + cppVar_55699;
	cppVar_55700 = (cppVar_55700 & cppMask_un_9_);
	BIT_VEC cppVar_55701 = 0;
	BIT_VEC cppVar_55702 = cppVar_55700 + cppVar_55701;
	cppVar_55702 = (cppVar_55702 & cppMask_un_9_);
	BIT_VEC cppVar_55703 = (cppVar_55702 >> 7) & cppMask_un_1_;
	bool cppVar_55704 = (cppVar_55693 != cppVar_55703);
	BIT_VEC cppVar_55707 = (cppVar_55704) ? 1 : 0;
	BIT_VEC cppVar_55708 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_55709 = (cppVar_55707 << 2) | cppVar_55708;
	cppVar_55709 = (cppVar_55709 & cppMask_un_3_);
	BIT_VEC cppVar_55710 = (cppVar_55683 << 3) | cppVar_55709;
	cppVar_55710 = (cppVar_55710 & cppMask_un_6_);
	BIT_VEC cppVar_55711 = (cppVar_55682 << 6) | cppVar_55710;
	cppVar_55711 = (cppVar_55711 & cppMask_un_7_);
	BIT_VEC cppVar_55712 = (cppVar_55670 << 7) | cppVar_55711;
	cppVar_55712 = (cppVar_55712 & cppMask_un_8_);
	BIT_VEC cppVar_55713 = ROM.rd(PC);
	bool cppVar_55715 = (cppVar_55713 == 39);
	BIT_VEC cppVar_55716 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_55718 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55720 = (cppVar_55718 << 3) | 1;
	cppVar_55720 = (cppVar_55720 & cppMask_un_5_);
	BIT_VEC cppVar_55721 = (0 << 5) | cppVar_55720;
	cppVar_55721 = (cppVar_55721 & cppMask_un_8_);
	BIT_VEC cppVar_55722 = IRAM.rd(cppVar_55721);
	BIT_VEC cppVar_55723 = IRAM.rd(cppVar_55722);
	BIT_VEC cppVar_55724 = (cppVar_55723 & cppMask_un_8_);
	BIT_VEC cppVar_55725 = cppVar_55716 + cppVar_55724;
	cppVar_55725 = (cppVar_55725 & cppMask_un_9_);
	BIT_VEC cppVar_55727 = 0;
	BIT_VEC cppVar_55728 = cppVar_55725 + cppVar_55727;
	cppVar_55728 = (cppVar_55728 & cppMask_un_9_);
	BIT_VEC cppVar_55729 = (cppVar_55728 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55730 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55731 = (cppVar_55730 & cppMask_un_4_);
	BIT_VEC cppVar_55732 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55733 = (cppVar_55732 << 3) | 1;
	cppVar_55733 = (cppVar_55733 & cppMask_un_5_);
	BIT_VEC cppVar_55734 = (0 << 5) | cppVar_55733;
	cppVar_55734 = (cppVar_55734 & cppMask_un_8_);
	BIT_VEC cppVar_55735 = IRAM.rd(cppVar_55734);
	BIT_VEC cppVar_55736 = IRAM.rd(cppVar_55735);
	BIT_VEC cppVar_55737 = (cppVar_55736 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55738 = (cppVar_55737 & cppMask_un_4_);
	BIT_VEC cppVar_55739 = cppVar_55731 + cppVar_55738;
	cppVar_55739 = (cppVar_55739 & cppMask_un_5_);
	BIT_VEC cppVar_55740 = 0;
	BIT_VEC cppVar_55741 = cppVar_55739 + cppVar_55740;
	cppVar_55741 = (cppVar_55741 & cppMask_un_5_);
	BIT_VEC cppVar_55742 = (cppVar_55741 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_55743 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_55744 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55745 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55746 = (cppVar_55745 << 3) | 1;
	cppVar_55746 = (cppVar_55746 & cppMask_un_5_);
	BIT_VEC cppVar_55747 = (0 << 5) | cppVar_55746;
	cppVar_55747 = (cppVar_55747 & cppMask_un_8_);
	BIT_VEC cppVar_55748 = IRAM.rd(cppVar_55747);
	BIT_VEC cppVar_55749 = IRAM.rd(cppVar_55748);
	BIT_VEC cppVar_55750 = ((cppVar_55749 & cppMask_bit_8_) ? (cppVar_55749 | cppMask_sign_8_) : cppVar_55749);
	BIT_VEC cppVar_55751 = cppVar_55744 + cppVar_55750;
	cppVar_55751 = (cppVar_55751 & cppMask_un_9_);
	BIT_VEC cppVar_55752 = 0;
	BIT_VEC cppVar_55753 = cppVar_55751 + cppVar_55752;
	cppVar_55753 = (cppVar_55753 & cppMask_un_9_);
	BIT_VEC cppVar_55754 = (cppVar_55753 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55755 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55756 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55757 = (cppVar_55756 << 3) | 1;
	cppVar_55757 = (cppVar_55757 & cppMask_un_5_);
	BIT_VEC cppVar_55758 = (0 << 5) | cppVar_55757;
	cppVar_55758 = (cppVar_55758 & cppMask_un_8_);
	BIT_VEC cppVar_55759 = IRAM.rd(cppVar_55758);
	BIT_VEC cppVar_55760 = IRAM.rd(cppVar_55759);
	BIT_VEC cppVar_55761 = ((cppVar_55760 & cppMask_bit_8_) ? (cppVar_55760 | cppMask_sign_8_) : cppVar_55760);
	BIT_VEC cppVar_55762 = cppVar_55755 + cppVar_55761;
	cppVar_55762 = (cppVar_55762 & cppMask_un_9_);
	BIT_VEC cppVar_55763 = 0;
	BIT_VEC cppVar_55764 = cppVar_55762 + cppVar_55763;
	cppVar_55764 = (cppVar_55764 & cppMask_un_9_);
	BIT_VEC cppVar_55765 = (cppVar_55764 >> 7) & cppMask_un_1_;
	bool cppVar_55766 = (cppVar_55754 != cppVar_55765);
	BIT_VEC cppVar_55769 = (cppVar_55766) ? 1 : 0;
	BIT_VEC cppVar_55770 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_55771 = (cppVar_55769 << 2) | cppVar_55770;
	cppVar_55771 = (cppVar_55771 & cppMask_un_3_);
	BIT_VEC cppVar_55772 = (cppVar_55743 << 3) | cppVar_55771;
	cppVar_55772 = (cppVar_55772 & cppMask_un_6_);
	BIT_VEC cppVar_55773 = (cppVar_55742 << 6) | cppVar_55772;
	cppVar_55773 = (cppVar_55773 & cppMask_un_7_);
	BIT_VEC cppVar_55774 = (cppVar_55729 << 7) | cppVar_55773;
	cppVar_55774 = (cppVar_55774 & cppMask_un_8_);
	BIT_VEC cppVar_55775 = ROM.rd(PC);
	bool cppVar_55777 = (cppVar_55775 == 38);
	BIT_VEC cppVar_55778 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_55780 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55782 = (cppVar_55780 << 3) | 0;
	cppVar_55782 = (cppVar_55782 & cppMask_un_5_);
	BIT_VEC cppVar_55783 = (0 << 5) | cppVar_55782;
	cppVar_55783 = (cppVar_55783 & cppMask_un_8_);
	BIT_VEC cppVar_55784 = IRAM.rd(cppVar_55783);
	BIT_VEC cppVar_55785 = IRAM.rd(cppVar_55784);
	BIT_VEC cppVar_55786 = (cppVar_55785 & cppMask_un_8_);
	BIT_VEC cppVar_55787 = cppVar_55778 + cppVar_55786;
	cppVar_55787 = (cppVar_55787 & cppMask_un_9_);
	BIT_VEC cppVar_55789 = 0;
	BIT_VEC cppVar_55790 = cppVar_55787 + cppVar_55789;
	cppVar_55790 = (cppVar_55790 & cppMask_un_9_);
	BIT_VEC cppVar_55791 = (cppVar_55790 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55792 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55793 = (cppVar_55792 & cppMask_un_4_);
	BIT_VEC cppVar_55794 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55795 = (cppVar_55794 << 3) | 0;
	cppVar_55795 = (cppVar_55795 & cppMask_un_5_);
	BIT_VEC cppVar_55796 = (0 << 5) | cppVar_55795;
	cppVar_55796 = (cppVar_55796 & cppMask_un_8_);
	BIT_VEC cppVar_55797 = IRAM.rd(cppVar_55796);
	BIT_VEC cppVar_55798 = IRAM.rd(cppVar_55797);
	BIT_VEC cppVar_55799 = (cppVar_55798 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55800 = (cppVar_55799 & cppMask_un_4_);
	BIT_VEC cppVar_55801 = cppVar_55793 + cppVar_55800;
	cppVar_55801 = (cppVar_55801 & cppMask_un_5_);
	BIT_VEC cppVar_55802 = 0;
	BIT_VEC cppVar_55803 = cppVar_55801 + cppVar_55802;
	cppVar_55803 = (cppVar_55803 & cppMask_un_5_);
	BIT_VEC cppVar_55804 = (cppVar_55803 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_55805 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_55806 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55807 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55808 = (cppVar_55807 << 3) | 0;
	cppVar_55808 = (cppVar_55808 & cppMask_un_5_);
	BIT_VEC cppVar_55809 = (0 << 5) | cppVar_55808;
	cppVar_55809 = (cppVar_55809 & cppMask_un_8_);
	BIT_VEC cppVar_55810 = IRAM.rd(cppVar_55809);
	BIT_VEC cppVar_55811 = IRAM.rd(cppVar_55810);
	BIT_VEC cppVar_55812 = ((cppVar_55811 & cppMask_bit_8_) ? (cppVar_55811 | cppMask_sign_8_) : cppVar_55811);
	BIT_VEC cppVar_55813 = cppVar_55806 + cppVar_55812;
	cppVar_55813 = (cppVar_55813 & cppMask_un_9_);
	BIT_VEC cppVar_55814 = 0;
	BIT_VEC cppVar_55815 = cppVar_55813 + cppVar_55814;
	cppVar_55815 = (cppVar_55815 & cppMask_un_9_);
	BIT_VEC cppVar_55816 = (cppVar_55815 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55817 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_55818 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_55819 = (cppVar_55818 << 3) | 0;
	cppVar_55819 = (cppVar_55819 & cppMask_un_5_);
	BIT_VEC cppVar_55820 = (0 << 5) | cppVar_55819;
	cppVar_55820 = (cppVar_55820 & cppMask_un_8_);
	BIT_VEC cppVar_55821 = IRAM.rd(cppVar_55820);
	BIT_VEC cppVar_55822 = IRAM.rd(cppVar_55821);
	BIT_VEC cppVar_55823 = ((cppVar_55822 & cppMask_bit_8_) ? (cppVar_55822 | cppMask_sign_8_) : cppVar_55822);
	BIT_VEC cppVar_55824 = cppVar_55817 + cppVar_55823;
	cppVar_55824 = (cppVar_55824 & cppMask_un_9_);
	BIT_VEC cppVar_55825 = 0;
	BIT_VEC cppVar_55826 = cppVar_55824 + cppVar_55825;
	cppVar_55826 = (cppVar_55826 & cppMask_un_9_);
	BIT_VEC cppVar_55827 = (cppVar_55826 >> 7) & cppMask_un_1_;
	bool cppVar_55828 = (cppVar_55816 != cppVar_55827);
	BIT_VEC cppVar_55831 = (cppVar_55828) ? 1 : 0;
	BIT_VEC cppVar_55832 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_55833 = (cppVar_55831 << 2) | cppVar_55832;
	cppVar_55833 = (cppVar_55833 & cppMask_un_3_);
	BIT_VEC cppVar_55834 = (cppVar_55805 << 3) | cppVar_55833;
	cppVar_55834 = (cppVar_55834 & cppMask_un_6_);
	BIT_VEC cppVar_55835 = (cppVar_55804 << 6) | cppVar_55834;
	cppVar_55835 = (cppVar_55835 & cppMask_un_7_);
	BIT_VEC cppVar_55836 = (cppVar_55791 << 7) | cppVar_55835;
	cppVar_55836 = (cppVar_55836 & cppMask_un_8_);
	BIT_VEC cppVar_55837 = ROM.rd(PC);
	bool cppVar_55839 = (cppVar_55837 == 37);
	BIT_VEC cppVar_55840 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_55842 = PC + 1;
	cppVar_55842 = (cppVar_55842 & cppMask_un_16_);
	BIT_VEC cppVar_55843 = ROM.rd(cppVar_55842);
	BIT_VEC cppVar_55844 = (cppVar_55843 >> 7) & cppMask_un_1_;
	bool cppVar_55846 = (cppVar_55844 == 0);
	BIT_VEC cppVar_55847 = PC + 1;
	cppVar_55847 = (cppVar_55847 & cppMask_un_16_);
	BIT_VEC cppVar_55848 = ROM.rd(cppVar_55847);
	BIT_VEC cppVar_55849 = IRAM.rd(cppVar_55848);
	BIT_VEC cppVar_55850 = PC + 1;
	cppVar_55850 = (cppVar_55850 & cppMask_un_16_);
	BIT_VEC cppVar_55851 = ROM.rd(cppVar_55850);
	bool cppVar_55853 = (cppVar_55851 == 128);
	BIT_VEC cppVar_55854 = PC + 1;
	cppVar_55854 = (cppVar_55854 & cppMask_un_16_);
	BIT_VEC cppVar_55855 = ROM.rd(cppVar_55854);
	bool cppVar_55857 = (cppVar_55855 == 129);
	BIT_VEC cppVar_55858 = PC + 1;
	cppVar_55858 = (cppVar_55858 & cppMask_un_16_);
	BIT_VEC cppVar_55859 = ROM.rd(cppVar_55858);
	bool cppVar_55861 = (cppVar_55859 == 130);
	BIT_VEC cppVar_55862 = PC + 1;
	cppVar_55862 = (cppVar_55862 & cppMask_un_16_);
	BIT_VEC cppVar_55863 = ROM.rd(cppVar_55862);
	bool cppVar_55865 = (cppVar_55863 == 131);
	BIT_VEC cppVar_55866 = PC + 1;
	cppVar_55866 = (cppVar_55866 & cppMask_un_16_);
	BIT_VEC cppVar_55867 = ROM.rd(cppVar_55866);
	bool cppVar_55869 = (cppVar_55867 == 135);
	BIT_VEC cppVar_55870 = PC + 1;
	cppVar_55870 = (cppVar_55870 & cppMask_un_16_);
	BIT_VEC cppVar_55871 = ROM.rd(cppVar_55870);
	bool cppVar_55873 = (cppVar_55871 == 136);
	BIT_VEC cppVar_55874 = PC + 1;
	cppVar_55874 = (cppVar_55874 & cppMask_un_16_);
	BIT_VEC cppVar_55875 = ROM.rd(cppVar_55874);
	bool cppVar_55877 = (cppVar_55875 == 137);
	BIT_VEC cppVar_55878 = PC + 1;
	cppVar_55878 = (cppVar_55878 & cppMask_un_16_);
	BIT_VEC cppVar_55879 = ROM.rd(cppVar_55878);
	bool cppVar_55881 = (cppVar_55879 == 138);
	BIT_VEC cppVar_55882 = PC + 1;
	cppVar_55882 = (cppVar_55882 & cppMask_un_16_);
	BIT_VEC cppVar_55883 = ROM.rd(cppVar_55882);
	bool cppVar_55885 = (cppVar_55883 == 140);
	BIT_VEC cppVar_55886 = PC + 1;
	cppVar_55886 = (cppVar_55886 & cppMask_un_16_);
	BIT_VEC cppVar_55887 = ROM.rd(cppVar_55886);
	bool cppVar_55889 = (cppVar_55887 == 139);
	BIT_VEC cppVar_55890 = PC + 1;
	cppVar_55890 = (cppVar_55890 & cppMask_un_16_);
	BIT_VEC cppVar_55891 = ROM.rd(cppVar_55890);
	bool cppVar_55893 = (cppVar_55891 == 141);
	BIT_VEC cppVar_55894 = PC + 1;
	cppVar_55894 = (cppVar_55894 & cppMask_un_16_);
	BIT_VEC cppVar_55895 = ROM.rd(cppVar_55894);
	bool cppVar_55897 = (cppVar_55895 == 144);
	BIT_VEC cppVar_55898 = PC + 1;
	cppVar_55898 = (cppVar_55898 & cppMask_un_16_);
	BIT_VEC cppVar_55899 = ROM.rd(cppVar_55898);
	bool cppVar_55901 = (cppVar_55899 == 152);
	BIT_VEC cppVar_55902 = PC + 1;
	cppVar_55902 = (cppVar_55902 & cppMask_un_16_);
	BIT_VEC cppVar_55903 = ROM.rd(cppVar_55902);
	bool cppVar_55905 = (cppVar_55903 == 153);
	BIT_VEC cppVar_55906 = PC + 1;
	cppVar_55906 = (cppVar_55906 & cppMask_un_16_);
	BIT_VEC cppVar_55907 = ROM.rd(cppVar_55906);
	bool cppVar_55909 = (cppVar_55907 == 160);
	BIT_VEC cppVar_55910 = PC + 1;
	cppVar_55910 = (cppVar_55910 & cppMask_un_16_);
	BIT_VEC cppVar_55911 = ROM.rd(cppVar_55910);
	bool cppVar_55913 = (cppVar_55911 == 168);
	BIT_VEC cppVar_55914 = PC + 1;
	cppVar_55914 = (cppVar_55914 & cppMask_un_16_);
	BIT_VEC cppVar_55915 = ROM.rd(cppVar_55914);
	bool cppVar_55917 = (cppVar_55915 == 176);
	BIT_VEC cppVar_55918 = PC + 1;
	cppVar_55918 = (cppVar_55918 & cppMask_un_16_);
	BIT_VEC cppVar_55919 = ROM.rd(cppVar_55918);
	bool cppVar_55921 = (cppVar_55919 == 184);
	BIT_VEC cppVar_55922 = PC + 1;
	cppVar_55922 = (cppVar_55922 & cppMask_un_16_);
	BIT_VEC cppVar_55923 = ROM.rd(cppVar_55922);
	bool cppVar_55925 = (cppVar_55923 == 208);
	BIT_VEC cppVar_55926 = PC + 1;
	cppVar_55926 = (cppVar_55926 & cppMask_un_16_);
	BIT_VEC cppVar_55927 = ROM.rd(cppVar_55926);
	bool cppVar_55929 = (cppVar_55927 == 224);
	BIT_VEC cppVar_55930 = PC + 1;
	cppVar_55930 = (cppVar_55930 & cppMask_un_16_);
	BIT_VEC cppVar_55931 = ROM.rd(cppVar_55930);
	bool cppVar_55933 = (cppVar_55931 == 240);
	BIT_VEC cppVar_55935 = (cppVar_55933) ? B : 0;
	BIT_VEC cppVar_55936 = (cppVar_55929) ? ACC : cppVar_55935;
	BIT_VEC cppVar_55937 = (cppVar_55925) ? PSW : cppVar_55936;
	BIT_VEC cppVar_55938 = (cppVar_55921) ? IP : cppVar_55937;
	BIT_VEC cppVar_55939 = (cppVar_55917) ? P3 : cppVar_55938;
	BIT_VEC cppVar_55940 = (cppVar_55913) ? IE : cppVar_55939;
	BIT_VEC cppVar_55941 = (cppVar_55909) ? P2 : cppVar_55940;
	BIT_VEC cppVar_55942 = (cppVar_55905) ? SBUF : cppVar_55941;
	BIT_VEC cppVar_55943 = (cppVar_55901) ? SCON : cppVar_55942;
	BIT_VEC cppVar_55944 = (cppVar_55897) ? P1 : cppVar_55943;
	BIT_VEC cppVar_55945 = (cppVar_55893) ? TH1 : cppVar_55944;
	BIT_VEC cppVar_55946 = (cppVar_55889) ? TL1 : cppVar_55945;
	BIT_VEC cppVar_55947 = (cppVar_55885) ? TH0 : cppVar_55946;
	BIT_VEC cppVar_55948 = (cppVar_55881) ? TL0 : cppVar_55947;
	BIT_VEC cppVar_55949 = (cppVar_55877) ? TMOD : cppVar_55948;
	BIT_VEC cppVar_55950 = (cppVar_55873) ? TCON : cppVar_55949;
	BIT_VEC cppVar_55951 = (cppVar_55869) ? PCON : cppVar_55950;
	BIT_VEC cppVar_55952 = (cppVar_55865) ? DPH : cppVar_55951;
	BIT_VEC cppVar_55953 = (cppVar_55861) ? DPL : cppVar_55952;
	BIT_VEC cppVar_55954 = (cppVar_55857) ? SP : cppVar_55953;
	BIT_VEC cppVar_55955 = (cppVar_55853) ? P0 : cppVar_55954;
	BIT_VEC cppVar_55956 = (cppVar_55846) ? cppVar_55849 : cppVar_55955;
	BIT_VEC cppVar_55957 = (cppVar_55956 & cppMask_un_8_);
	BIT_VEC cppVar_55958 = cppVar_55840 + cppVar_55957;
	cppVar_55958 = (cppVar_55958 & cppMask_un_9_);
	BIT_VEC cppVar_55960 = 0;
	BIT_VEC cppVar_55961 = cppVar_55958 + cppVar_55960;
	cppVar_55961 = (cppVar_55961 & cppMask_un_9_);
	BIT_VEC cppVar_55962 = (cppVar_55961 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_55963 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_55964 = (cppVar_55963 & cppMask_un_4_);
	BIT_VEC cppVar_55965 = PC + 1;
	cppVar_55965 = (cppVar_55965 & cppMask_un_16_);
	BIT_VEC cppVar_55966 = ROM.rd(cppVar_55965);
	BIT_VEC cppVar_55967 = (cppVar_55966 >> 7) & cppMask_un_1_;
	bool cppVar_55968 = (cppVar_55967 == 0);
	BIT_VEC cppVar_55969 = PC + 1;
	cppVar_55969 = (cppVar_55969 & cppMask_un_16_);
	BIT_VEC cppVar_55970 = ROM.rd(cppVar_55969);
	BIT_VEC cppVar_55971 = IRAM.rd(cppVar_55970);
	BIT_VEC cppVar_55972 = PC + 1;
	cppVar_55972 = (cppVar_55972 & cppMask_un_16_);
	BIT_VEC cppVar_55973 = ROM.rd(cppVar_55972);
	bool cppVar_55974 = (cppVar_55973 == 128);
	BIT_VEC cppVar_55975 = PC + 1;
	cppVar_55975 = (cppVar_55975 & cppMask_un_16_);
	BIT_VEC cppVar_55976 = ROM.rd(cppVar_55975);
	bool cppVar_55977 = (cppVar_55976 == 129);
	BIT_VEC cppVar_55978 = PC + 1;
	cppVar_55978 = (cppVar_55978 & cppMask_un_16_);
	BIT_VEC cppVar_55979 = ROM.rd(cppVar_55978);
	bool cppVar_55980 = (cppVar_55979 == 130);
	BIT_VEC cppVar_55981 = PC + 1;
	cppVar_55981 = (cppVar_55981 & cppMask_un_16_);
	BIT_VEC cppVar_55982 = ROM.rd(cppVar_55981);
	bool cppVar_55983 = (cppVar_55982 == 131);
	BIT_VEC cppVar_55984 = PC + 1;
	cppVar_55984 = (cppVar_55984 & cppMask_un_16_);
	BIT_VEC cppVar_55985 = ROM.rd(cppVar_55984);
	bool cppVar_55986 = (cppVar_55985 == 135);
	BIT_VEC cppVar_55987 = PC + 1;
	cppVar_55987 = (cppVar_55987 & cppMask_un_16_);
	BIT_VEC cppVar_55988 = ROM.rd(cppVar_55987);
	bool cppVar_55989 = (cppVar_55988 == 136);
	BIT_VEC cppVar_55990 = PC + 1;
	cppVar_55990 = (cppVar_55990 & cppMask_un_16_);
	BIT_VEC cppVar_55991 = ROM.rd(cppVar_55990);
	bool cppVar_55992 = (cppVar_55991 == 137);
	BIT_VEC cppVar_55993 = PC + 1;
	cppVar_55993 = (cppVar_55993 & cppMask_un_16_);
	BIT_VEC cppVar_55994 = ROM.rd(cppVar_55993);
	bool cppVar_55995 = (cppVar_55994 == 138);
	BIT_VEC cppVar_55996 = PC + 1;
	cppVar_55996 = (cppVar_55996 & cppMask_un_16_);
	BIT_VEC cppVar_55997 = ROM.rd(cppVar_55996);
	bool cppVar_55998 = (cppVar_55997 == 140);
	BIT_VEC cppVar_55999 = PC + 1;
	cppVar_55999 = (cppVar_55999 & cppMask_un_16_);
	BIT_VEC cppVar_56000 = ROM.rd(cppVar_55999);
	bool cppVar_56001 = (cppVar_56000 == 139);
	BIT_VEC cppVar_56002 = PC + 1;
	cppVar_56002 = (cppVar_56002 & cppMask_un_16_);
	BIT_VEC cppVar_56003 = ROM.rd(cppVar_56002);
	bool cppVar_56004 = (cppVar_56003 == 141);
	BIT_VEC cppVar_56005 = PC + 1;
	cppVar_56005 = (cppVar_56005 & cppMask_un_16_);
	BIT_VEC cppVar_56006 = ROM.rd(cppVar_56005);
	bool cppVar_56007 = (cppVar_56006 == 144);
	BIT_VEC cppVar_56008 = PC + 1;
	cppVar_56008 = (cppVar_56008 & cppMask_un_16_);
	BIT_VEC cppVar_56009 = ROM.rd(cppVar_56008);
	bool cppVar_56010 = (cppVar_56009 == 152);
	BIT_VEC cppVar_56011 = PC + 1;
	cppVar_56011 = (cppVar_56011 & cppMask_un_16_);
	BIT_VEC cppVar_56012 = ROM.rd(cppVar_56011);
	bool cppVar_56013 = (cppVar_56012 == 153);
	BIT_VEC cppVar_56014 = PC + 1;
	cppVar_56014 = (cppVar_56014 & cppMask_un_16_);
	BIT_VEC cppVar_56015 = ROM.rd(cppVar_56014);
	bool cppVar_56016 = (cppVar_56015 == 160);
	BIT_VEC cppVar_56017 = PC + 1;
	cppVar_56017 = (cppVar_56017 & cppMask_un_16_);
	BIT_VEC cppVar_56018 = ROM.rd(cppVar_56017);
	bool cppVar_56019 = (cppVar_56018 == 168);
	BIT_VEC cppVar_56020 = PC + 1;
	cppVar_56020 = (cppVar_56020 & cppMask_un_16_);
	BIT_VEC cppVar_56021 = ROM.rd(cppVar_56020);
	bool cppVar_56022 = (cppVar_56021 == 176);
	BIT_VEC cppVar_56023 = PC + 1;
	cppVar_56023 = (cppVar_56023 & cppMask_un_16_);
	BIT_VEC cppVar_56024 = ROM.rd(cppVar_56023);
	bool cppVar_56025 = (cppVar_56024 == 184);
	BIT_VEC cppVar_56026 = PC + 1;
	cppVar_56026 = (cppVar_56026 & cppMask_un_16_);
	BIT_VEC cppVar_56027 = ROM.rd(cppVar_56026);
	bool cppVar_56028 = (cppVar_56027 == 208);
	BIT_VEC cppVar_56029 = PC + 1;
	cppVar_56029 = (cppVar_56029 & cppMask_un_16_);
	BIT_VEC cppVar_56030 = ROM.rd(cppVar_56029);
	bool cppVar_56031 = (cppVar_56030 == 224);
	BIT_VEC cppVar_56032 = PC + 1;
	cppVar_56032 = (cppVar_56032 & cppMask_un_16_);
	BIT_VEC cppVar_56033 = ROM.rd(cppVar_56032);
	bool cppVar_56034 = (cppVar_56033 == 240);
	BIT_VEC cppVar_56035 = (cppVar_56034) ? B : 0;
	BIT_VEC cppVar_56036 = (cppVar_56031) ? ACC : cppVar_56035;
	BIT_VEC cppVar_56037 = (cppVar_56028) ? PSW : cppVar_56036;
	BIT_VEC cppVar_56038 = (cppVar_56025) ? IP : cppVar_56037;
	BIT_VEC cppVar_56039 = (cppVar_56022) ? P3 : cppVar_56038;
	BIT_VEC cppVar_56040 = (cppVar_56019) ? IE : cppVar_56039;
	BIT_VEC cppVar_56041 = (cppVar_56016) ? P2 : cppVar_56040;
	BIT_VEC cppVar_56042 = (cppVar_56013) ? SBUF : cppVar_56041;
	BIT_VEC cppVar_56043 = (cppVar_56010) ? SCON : cppVar_56042;
	BIT_VEC cppVar_56044 = (cppVar_56007) ? P1 : cppVar_56043;
	BIT_VEC cppVar_56045 = (cppVar_56004) ? TH1 : cppVar_56044;
	BIT_VEC cppVar_56046 = (cppVar_56001) ? TL1 : cppVar_56045;
	BIT_VEC cppVar_56047 = (cppVar_55998) ? TH0 : cppVar_56046;
	BIT_VEC cppVar_56048 = (cppVar_55995) ? TL0 : cppVar_56047;
	BIT_VEC cppVar_56049 = (cppVar_55992) ? TMOD : cppVar_56048;
	BIT_VEC cppVar_56050 = (cppVar_55989) ? TCON : cppVar_56049;
	BIT_VEC cppVar_56051 = (cppVar_55986) ? PCON : cppVar_56050;
	BIT_VEC cppVar_56052 = (cppVar_55983) ? DPH : cppVar_56051;
	BIT_VEC cppVar_56053 = (cppVar_55980) ? DPL : cppVar_56052;
	BIT_VEC cppVar_56054 = (cppVar_55977) ? SP : cppVar_56053;
	BIT_VEC cppVar_56055 = (cppVar_55974) ? P0 : cppVar_56054;
	BIT_VEC cppVar_56056 = (cppVar_55968) ? cppVar_55971 : cppVar_56055;
	BIT_VEC cppVar_56057 = (cppVar_56056 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_56058 = (cppVar_56057 & cppMask_un_4_);
	BIT_VEC cppVar_56059 = cppVar_55964 + cppVar_56058;
	cppVar_56059 = (cppVar_56059 & cppMask_un_5_);
	BIT_VEC cppVar_56060 = 0;
	BIT_VEC cppVar_56061 = cppVar_56059 + cppVar_56060;
	cppVar_56061 = (cppVar_56061 & cppMask_un_5_);
	BIT_VEC cppVar_56062 = (cppVar_56061 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_56063 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_56064 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_56065 = PC + 1;
	cppVar_56065 = (cppVar_56065 & cppMask_un_16_);
	BIT_VEC cppVar_56066 = ROM.rd(cppVar_56065);
	BIT_VEC cppVar_56067 = (cppVar_56066 >> 7) & cppMask_un_1_;
	bool cppVar_56068 = (cppVar_56067 == 0);
	BIT_VEC cppVar_56069 = PC + 1;
	cppVar_56069 = (cppVar_56069 & cppMask_un_16_);
	BIT_VEC cppVar_56070 = ROM.rd(cppVar_56069);
	BIT_VEC cppVar_56071 = IRAM.rd(cppVar_56070);
	BIT_VEC cppVar_56072 = PC + 1;
	cppVar_56072 = (cppVar_56072 & cppMask_un_16_);
	BIT_VEC cppVar_56073 = ROM.rd(cppVar_56072);
	bool cppVar_56074 = (cppVar_56073 == 128);
	BIT_VEC cppVar_56075 = PC + 1;
	cppVar_56075 = (cppVar_56075 & cppMask_un_16_);
	BIT_VEC cppVar_56076 = ROM.rd(cppVar_56075);
	bool cppVar_56077 = (cppVar_56076 == 129);
	BIT_VEC cppVar_56078 = PC + 1;
	cppVar_56078 = (cppVar_56078 & cppMask_un_16_);
	BIT_VEC cppVar_56079 = ROM.rd(cppVar_56078);
	bool cppVar_56080 = (cppVar_56079 == 130);
	BIT_VEC cppVar_56081 = PC + 1;
	cppVar_56081 = (cppVar_56081 & cppMask_un_16_);
	BIT_VEC cppVar_56082 = ROM.rd(cppVar_56081);
	bool cppVar_56083 = (cppVar_56082 == 131);
	BIT_VEC cppVar_56084 = PC + 1;
	cppVar_56084 = (cppVar_56084 & cppMask_un_16_);
	BIT_VEC cppVar_56085 = ROM.rd(cppVar_56084);
	bool cppVar_56086 = (cppVar_56085 == 135);
	BIT_VEC cppVar_56087 = PC + 1;
	cppVar_56087 = (cppVar_56087 & cppMask_un_16_);
	BIT_VEC cppVar_56088 = ROM.rd(cppVar_56087);
	bool cppVar_56089 = (cppVar_56088 == 136);
	BIT_VEC cppVar_56090 = PC + 1;
	cppVar_56090 = (cppVar_56090 & cppMask_un_16_);
	BIT_VEC cppVar_56091 = ROM.rd(cppVar_56090);
	bool cppVar_56092 = (cppVar_56091 == 137);
	BIT_VEC cppVar_56093 = PC + 1;
	cppVar_56093 = (cppVar_56093 & cppMask_un_16_);
	BIT_VEC cppVar_56094 = ROM.rd(cppVar_56093);
	bool cppVar_56095 = (cppVar_56094 == 138);
	BIT_VEC cppVar_56096 = PC + 1;
	cppVar_56096 = (cppVar_56096 & cppMask_un_16_);
	BIT_VEC cppVar_56097 = ROM.rd(cppVar_56096);
	bool cppVar_56098 = (cppVar_56097 == 140);
	BIT_VEC cppVar_56099 = PC + 1;
	cppVar_56099 = (cppVar_56099 & cppMask_un_16_);
	BIT_VEC cppVar_56100 = ROM.rd(cppVar_56099);
	bool cppVar_56101 = (cppVar_56100 == 139);
	BIT_VEC cppVar_56102 = PC + 1;
	cppVar_56102 = (cppVar_56102 & cppMask_un_16_);
	BIT_VEC cppVar_56103 = ROM.rd(cppVar_56102);
	bool cppVar_56104 = (cppVar_56103 == 141);
	BIT_VEC cppVar_56105 = PC + 1;
	cppVar_56105 = (cppVar_56105 & cppMask_un_16_);
	BIT_VEC cppVar_56106 = ROM.rd(cppVar_56105);
	bool cppVar_56107 = (cppVar_56106 == 144);
	BIT_VEC cppVar_56108 = PC + 1;
	cppVar_56108 = (cppVar_56108 & cppMask_un_16_);
	BIT_VEC cppVar_56109 = ROM.rd(cppVar_56108);
	bool cppVar_56110 = (cppVar_56109 == 152);
	BIT_VEC cppVar_56111 = PC + 1;
	cppVar_56111 = (cppVar_56111 & cppMask_un_16_);
	BIT_VEC cppVar_56112 = ROM.rd(cppVar_56111);
	bool cppVar_56113 = (cppVar_56112 == 153);
	BIT_VEC cppVar_56114 = PC + 1;
	cppVar_56114 = (cppVar_56114 & cppMask_un_16_);
	BIT_VEC cppVar_56115 = ROM.rd(cppVar_56114);
	bool cppVar_56116 = (cppVar_56115 == 160);
	BIT_VEC cppVar_56117 = PC + 1;
	cppVar_56117 = (cppVar_56117 & cppMask_un_16_);
	BIT_VEC cppVar_56118 = ROM.rd(cppVar_56117);
	bool cppVar_56119 = (cppVar_56118 == 168);
	BIT_VEC cppVar_56120 = PC + 1;
	cppVar_56120 = (cppVar_56120 & cppMask_un_16_);
	BIT_VEC cppVar_56121 = ROM.rd(cppVar_56120);
	bool cppVar_56122 = (cppVar_56121 == 176);
	BIT_VEC cppVar_56123 = PC + 1;
	cppVar_56123 = (cppVar_56123 & cppMask_un_16_);
	BIT_VEC cppVar_56124 = ROM.rd(cppVar_56123);
	bool cppVar_56125 = (cppVar_56124 == 184);
	BIT_VEC cppVar_56126 = PC + 1;
	cppVar_56126 = (cppVar_56126 & cppMask_un_16_);
	BIT_VEC cppVar_56127 = ROM.rd(cppVar_56126);
	bool cppVar_56128 = (cppVar_56127 == 208);
	BIT_VEC cppVar_56129 = PC + 1;
	cppVar_56129 = (cppVar_56129 & cppMask_un_16_);
	BIT_VEC cppVar_56130 = ROM.rd(cppVar_56129);
	bool cppVar_56131 = (cppVar_56130 == 224);
	BIT_VEC cppVar_56132 = PC + 1;
	cppVar_56132 = (cppVar_56132 & cppMask_un_16_);
	BIT_VEC cppVar_56133 = ROM.rd(cppVar_56132);
	bool cppVar_56134 = (cppVar_56133 == 240);
	BIT_VEC cppVar_56135 = (cppVar_56134) ? B : 0;
	BIT_VEC cppVar_56136 = (cppVar_56131) ? ACC : cppVar_56135;
	BIT_VEC cppVar_56137 = (cppVar_56128) ? PSW : cppVar_56136;
	BIT_VEC cppVar_56138 = (cppVar_56125) ? IP : cppVar_56137;
	BIT_VEC cppVar_56139 = (cppVar_56122) ? P3 : cppVar_56138;
	BIT_VEC cppVar_56140 = (cppVar_56119) ? IE : cppVar_56139;
	BIT_VEC cppVar_56141 = (cppVar_56116) ? P2 : cppVar_56140;
	BIT_VEC cppVar_56142 = (cppVar_56113) ? SBUF : cppVar_56141;
	BIT_VEC cppVar_56143 = (cppVar_56110) ? SCON : cppVar_56142;
	BIT_VEC cppVar_56144 = (cppVar_56107) ? P1 : cppVar_56143;
	BIT_VEC cppVar_56145 = (cppVar_56104) ? TH1 : cppVar_56144;
	BIT_VEC cppVar_56146 = (cppVar_56101) ? TL1 : cppVar_56145;
	BIT_VEC cppVar_56147 = (cppVar_56098) ? TH0 : cppVar_56146;
	BIT_VEC cppVar_56148 = (cppVar_56095) ? TL0 : cppVar_56147;
	BIT_VEC cppVar_56149 = (cppVar_56092) ? TMOD : cppVar_56148;
	BIT_VEC cppVar_56150 = (cppVar_56089) ? TCON : cppVar_56149;
	BIT_VEC cppVar_56151 = (cppVar_56086) ? PCON : cppVar_56150;
	BIT_VEC cppVar_56152 = (cppVar_56083) ? DPH : cppVar_56151;
	BIT_VEC cppVar_56153 = (cppVar_56080) ? DPL : cppVar_56152;
	BIT_VEC cppVar_56154 = (cppVar_56077) ? SP : cppVar_56153;
	BIT_VEC cppVar_56155 = (cppVar_56074) ? P0 : cppVar_56154;
	BIT_VEC cppVar_56156 = (cppVar_56068) ? cppVar_56071 : cppVar_56155;
	BIT_VEC cppVar_56157 = ((cppVar_56156 & cppMask_bit_8_) ? (cppVar_56156 | cppMask_sign_8_) : cppVar_56156);
	BIT_VEC cppVar_56158 = cppVar_56064 + cppVar_56157;
	cppVar_56158 = (cppVar_56158 & cppMask_un_9_);
	BIT_VEC cppVar_56159 = 0;
	BIT_VEC cppVar_56160 = cppVar_56158 + cppVar_56159;
	cppVar_56160 = (cppVar_56160 & cppMask_un_9_);
	BIT_VEC cppVar_56161 = (cppVar_56160 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_56162 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_56163 = PC + 1;
	cppVar_56163 = (cppVar_56163 & cppMask_un_16_);
	BIT_VEC cppVar_56164 = ROM.rd(cppVar_56163);
	BIT_VEC cppVar_56165 = (cppVar_56164 >> 7) & cppMask_un_1_;
	bool cppVar_56166 = (cppVar_56165 == 0);
	BIT_VEC cppVar_56167 = PC + 1;
	cppVar_56167 = (cppVar_56167 & cppMask_un_16_);
	BIT_VEC cppVar_56168 = ROM.rd(cppVar_56167);
	BIT_VEC cppVar_56169 = IRAM.rd(cppVar_56168);
	BIT_VEC cppVar_56170 = PC + 1;
	cppVar_56170 = (cppVar_56170 & cppMask_un_16_);
	BIT_VEC cppVar_56171 = ROM.rd(cppVar_56170);
	bool cppVar_56172 = (cppVar_56171 == 128);
	BIT_VEC cppVar_56173 = PC + 1;
	cppVar_56173 = (cppVar_56173 & cppMask_un_16_);
	BIT_VEC cppVar_56174 = ROM.rd(cppVar_56173);
	bool cppVar_56175 = (cppVar_56174 == 129);
	BIT_VEC cppVar_56176 = PC + 1;
	cppVar_56176 = (cppVar_56176 & cppMask_un_16_);
	BIT_VEC cppVar_56177 = ROM.rd(cppVar_56176);
	bool cppVar_56178 = (cppVar_56177 == 130);
	BIT_VEC cppVar_56179 = PC + 1;
	cppVar_56179 = (cppVar_56179 & cppMask_un_16_);
	BIT_VEC cppVar_56180 = ROM.rd(cppVar_56179);
	bool cppVar_56181 = (cppVar_56180 == 131);
	BIT_VEC cppVar_56182 = PC + 1;
	cppVar_56182 = (cppVar_56182 & cppMask_un_16_);
	BIT_VEC cppVar_56183 = ROM.rd(cppVar_56182);
	bool cppVar_56184 = (cppVar_56183 == 135);
	BIT_VEC cppVar_56185 = PC + 1;
	cppVar_56185 = (cppVar_56185 & cppMask_un_16_);
	BIT_VEC cppVar_56186 = ROM.rd(cppVar_56185);
	bool cppVar_56187 = (cppVar_56186 == 136);
	BIT_VEC cppVar_56188 = PC + 1;
	cppVar_56188 = (cppVar_56188 & cppMask_un_16_);
	BIT_VEC cppVar_56189 = ROM.rd(cppVar_56188);
	bool cppVar_56190 = (cppVar_56189 == 137);
	BIT_VEC cppVar_56191 = PC + 1;
	cppVar_56191 = (cppVar_56191 & cppMask_un_16_);
	BIT_VEC cppVar_56192 = ROM.rd(cppVar_56191);
	bool cppVar_56193 = (cppVar_56192 == 138);
	BIT_VEC cppVar_56194 = PC + 1;
	cppVar_56194 = (cppVar_56194 & cppMask_un_16_);
	BIT_VEC cppVar_56195 = ROM.rd(cppVar_56194);
	bool cppVar_56196 = (cppVar_56195 == 140);
	BIT_VEC cppVar_56197 = PC + 1;
	cppVar_56197 = (cppVar_56197 & cppMask_un_16_);
	BIT_VEC cppVar_56198 = ROM.rd(cppVar_56197);
	bool cppVar_56199 = (cppVar_56198 == 139);
	BIT_VEC cppVar_56200 = PC + 1;
	cppVar_56200 = (cppVar_56200 & cppMask_un_16_);
	BIT_VEC cppVar_56201 = ROM.rd(cppVar_56200);
	bool cppVar_56202 = (cppVar_56201 == 141);
	BIT_VEC cppVar_56203 = PC + 1;
	cppVar_56203 = (cppVar_56203 & cppMask_un_16_);
	BIT_VEC cppVar_56204 = ROM.rd(cppVar_56203);
	bool cppVar_56205 = (cppVar_56204 == 144);
	BIT_VEC cppVar_56206 = PC + 1;
	cppVar_56206 = (cppVar_56206 & cppMask_un_16_);
	BIT_VEC cppVar_56207 = ROM.rd(cppVar_56206);
	bool cppVar_56208 = (cppVar_56207 == 152);
	BIT_VEC cppVar_56209 = PC + 1;
	cppVar_56209 = (cppVar_56209 & cppMask_un_16_);
	BIT_VEC cppVar_56210 = ROM.rd(cppVar_56209);
	bool cppVar_56211 = (cppVar_56210 == 153);
	BIT_VEC cppVar_56212 = PC + 1;
	cppVar_56212 = (cppVar_56212 & cppMask_un_16_);
	BIT_VEC cppVar_56213 = ROM.rd(cppVar_56212);
	bool cppVar_56214 = (cppVar_56213 == 160);
	BIT_VEC cppVar_56215 = PC + 1;
	cppVar_56215 = (cppVar_56215 & cppMask_un_16_);
	BIT_VEC cppVar_56216 = ROM.rd(cppVar_56215);
	bool cppVar_56217 = (cppVar_56216 == 168);
	BIT_VEC cppVar_56218 = PC + 1;
	cppVar_56218 = (cppVar_56218 & cppMask_un_16_);
	BIT_VEC cppVar_56219 = ROM.rd(cppVar_56218);
	bool cppVar_56220 = (cppVar_56219 == 176);
	BIT_VEC cppVar_56221 = PC + 1;
	cppVar_56221 = (cppVar_56221 & cppMask_un_16_);
	BIT_VEC cppVar_56222 = ROM.rd(cppVar_56221);
	bool cppVar_56223 = (cppVar_56222 == 184);
	BIT_VEC cppVar_56224 = PC + 1;
	cppVar_56224 = (cppVar_56224 & cppMask_un_16_);
	BIT_VEC cppVar_56225 = ROM.rd(cppVar_56224);
	bool cppVar_56226 = (cppVar_56225 == 208);
	BIT_VEC cppVar_56227 = PC + 1;
	cppVar_56227 = (cppVar_56227 & cppMask_un_16_);
	BIT_VEC cppVar_56228 = ROM.rd(cppVar_56227);
	bool cppVar_56229 = (cppVar_56228 == 224);
	BIT_VEC cppVar_56230 = PC + 1;
	cppVar_56230 = (cppVar_56230 & cppMask_un_16_);
	BIT_VEC cppVar_56231 = ROM.rd(cppVar_56230);
	bool cppVar_56232 = (cppVar_56231 == 240);
	BIT_VEC cppVar_56233 = (cppVar_56232) ? B : 0;
	BIT_VEC cppVar_56234 = (cppVar_56229) ? ACC : cppVar_56233;
	BIT_VEC cppVar_56235 = (cppVar_56226) ? PSW : cppVar_56234;
	BIT_VEC cppVar_56236 = (cppVar_56223) ? IP : cppVar_56235;
	BIT_VEC cppVar_56237 = (cppVar_56220) ? P3 : cppVar_56236;
	BIT_VEC cppVar_56238 = (cppVar_56217) ? IE : cppVar_56237;
	BIT_VEC cppVar_56239 = (cppVar_56214) ? P2 : cppVar_56238;
	BIT_VEC cppVar_56240 = (cppVar_56211) ? SBUF : cppVar_56239;
	BIT_VEC cppVar_56241 = (cppVar_56208) ? SCON : cppVar_56240;
	BIT_VEC cppVar_56242 = (cppVar_56205) ? P1 : cppVar_56241;
	BIT_VEC cppVar_56243 = (cppVar_56202) ? TH1 : cppVar_56242;
	BIT_VEC cppVar_56244 = (cppVar_56199) ? TL1 : cppVar_56243;
	BIT_VEC cppVar_56245 = (cppVar_56196) ? TH0 : cppVar_56244;
	BIT_VEC cppVar_56246 = (cppVar_56193) ? TL0 : cppVar_56245;
	BIT_VEC cppVar_56247 = (cppVar_56190) ? TMOD : cppVar_56246;
	BIT_VEC cppVar_56248 = (cppVar_56187) ? TCON : cppVar_56247;
	BIT_VEC cppVar_56249 = (cppVar_56184) ? PCON : cppVar_56248;
	BIT_VEC cppVar_56250 = (cppVar_56181) ? DPH : cppVar_56249;
	BIT_VEC cppVar_56251 = (cppVar_56178) ? DPL : cppVar_56250;
	BIT_VEC cppVar_56252 = (cppVar_56175) ? SP : cppVar_56251;
	BIT_VEC cppVar_56253 = (cppVar_56172) ? P0 : cppVar_56252;
	BIT_VEC cppVar_56254 = (cppVar_56166) ? cppVar_56169 : cppVar_56253;
	BIT_VEC cppVar_56255 = ((cppVar_56254 & cppMask_bit_8_) ? (cppVar_56254 | cppMask_sign_8_) : cppVar_56254);
	BIT_VEC cppVar_56256 = cppVar_56162 + cppVar_56255;
	cppVar_56256 = (cppVar_56256 & cppMask_un_9_);
	BIT_VEC cppVar_56257 = 0;
	BIT_VEC cppVar_56258 = cppVar_56256 + cppVar_56257;
	cppVar_56258 = (cppVar_56258 & cppMask_un_9_);
	BIT_VEC cppVar_56259 = (cppVar_56258 >> 7) & cppMask_un_1_;
	bool cppVar_56260 = (cppVar_56161 != cppVar_56259);
	BIT_VEC cppVar_56263 = (cppVar_56260) ? 1 : 0;
	BIT_VEC cppVar_56264 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_56265 = (cppVar_56263 << 2) | cppVar_56264;
	cppVar_56265 = (cppVar_56265 & cppMask_un_3_);
	BIT_VEC cppVar_56266 = (cppVar_56063 << 3) | cppVar_56265;
	cppVar_56266 = (cppVar_56266 & cppMask_un_6_);
	BIT_VEC cppVar_56267 = (cppVar_56062 << 6) | cppVar_56266;
	cppVar_56267 = (cppVar_56267 & cppMask_un_7_);
	BIT_VEC cppVar_56268 = (cppVar_55962 << 7) | cppVar_56267;
	cppVar_56268 = (cppVar_56268 & cppMask_un_8_);
	BIT_VEC cppVar_56269 = ROM.rd(PC);
	bool cppVar_56271 = (cppVar_56269 == 36);
	BIT_VEC cppVar_56272 = (ACC & cppMask_un_8_);
	BIT_VEC cppVar_56274 = PC + 1;
	cppVar_56274 = (cppVar_56274 & cppMask_un_16_);
	BIT_VEC cppVar_56275 = ROM.rd(cppVar_56274);
	BIT_VEC cppVar_56276 = (cppVar_56275 & cppMask_un_8_);
	BIT_VEC cppVar_56277 = cppVar_56272 + cppVar_56276;
	cppVar_56277 = (cppVar_56277 & cppMask_un_9_);
	BIT_VEC cppVar_56279 = 0;
	BIT_VEC cppVar_56280 = cppVar_56277 + cppVar_56279;
	cppVar_56280 = (cppVar_56280 & cppMask_un_9_);
	BIT_VEC cppVar_56281 = (cppVar_56280 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_56282 = (ACC >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_56283 = (cppVar_56282 & cppMask_un_4_);
	BIT_VEC cppVar_56284 = PC + 1;
	cppVar_56284 = (cppVar_56284 & cppMask_un_16_);
	BIT_VEC cppVar_56285 = ROM.rd(cppVar_56284);
	BIT_VEC cppVar_56286 = (cppVar_56285 >> 0) & cppMask_un_4_;
	BIT_VEC cppVar_56287 = (cppVar_56286 & cppMask_un_4_);
	BIT_VEC cppVar_56288 = cppVar_56283 + cppVar_56287;
	cppVar_56288 = (cppVar_56288 & cppMask_un_5_);
	BIT_VEC cppVar_56289 = 0;
	BIT_VEC cppVar_56290 = cppVar_56288 + cppVar_56289;
	cppVar_56290 = (cppVar_56290 & cppMask_un_5_);
	BIT_VEC cppVar_56291 = (cppVar_56290 >> 4) & cppMask_un_1_;
	BIT_VEC cppVar_56292 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_56293 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_56294 = PC + 1;
	cppVar_56294 = (cppVar_56294 & cppMask_un_16_);
	BIT_VEC cppVar_56295 = ROM.rd(cppVar_56294);
	BIT_VEC cppVar_56296 = ((cppVar_56295 & cppMask_bit_8_) ? (cppVar_56295 | cppMask_sign_8_) : cppVar_56295);
	BIT_VEC cppVar_56297 = cppVar_56293 + cppVar_56296;
	cppVar_56297 = (cppVar_56297 & cppMask_un_9_);
	BIT_VEC cppVar_56298 = 0;
	BIT_VEC cppVar_56299 = cppVar_56297 + cppVar_56298;
	cppVar_56299 = (cppVar_56299 & cppMask_un_9_);
	BIT_VEC cppVar_56300 = (cppVar_56299 >> 8) & cppMask_un_1_;
	BIT_VEC cppVar_56301 = ((ACC & cppMask_bit_8_) ? (ACC | cppMask_sign_8_) : ACC);
	BIT_VEC cppVar_56302 = PC + 1;
	cppVar_56302 = (cppVar_56302 & cppMask_un_16_);
	BIT_VEC cppVar_56303 = ROM.rd(cppVar_56302);
	BIT_VEC cppVar_56304 = ((cppVar_56303 & cppMask_bit_8_) ? (cppVar_56303 | cppMask_sign_8_) : cppVar_56303);
	BIT_VEC cppVar_56305 = cppVar_56301 + cppVar_56304;
	cppVar_56305 = (cppVar_56305 & cppMask_un_9_);
	BIT_VEC cppVar_56306 = 0;
	BIT_VEC cppVar_56307 = cppVar_56305 + cppVar_56306;
	cppVar_56307 = (cppVar_56307 & cppMask_un_9_);
	BIT_VEC cppVar_56308 = (cppVar_56307 >> 7) & cppMask_un_1_;
	bool cppVar_56309 = (cppVar_56300 != cppVar_56308);
	BIT_VEC cppVar_56312 = (cppVar_56309) ? 1 : 0;
	BIT_VEC cppVar_56313 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_56314 = (cppVar_56312 << 2) | cppVar_56313;
	cppVar_56314 = (cppVar_56314 & cppMask_un_3_);
	BIT_VEC cppVar_56315 = (cppVar_56292 << 3) | cppVar_56314;
	cppVar_56315 = (cppVar_56315 & cppMask_un_6_);
	BIT_VEC cppVar_56316 = (cppVar_56291 << 6) | cppVar_56315;
	cppVar_56316 = (cppVar_56316 & cppMask_un_7_);
	BIT_VEC cppVar_56317 = (cppVar_56281 << 7) | cppVar_56316;
	cppVar_56317 = (cppVar_56317 & cppMask_un_8_);
	BIT_VEC cppVar_56318 = ROM.rd(PC);
	bool cppVar_56320 = (cppVar_56318 == 213);
	BIT_VEC cppVar_56321 = ROM.rd(PC);
	bool cppVar_56323 = (cppVar_56321 == 21);
	bool cppVar_56324 = cppVar_56320 || cppVar_56323;
	BIT_VEC cppVar_56326 = PC + 1;
	cppVar_56326 = (cppVar_56326 & cppMask_un_16_);
	BIT_VEC cppVar_56327 = ROM.rd(cppVar_56326);
	bool cppVar_56329 = (cppVar_56327 == 208);
	BIT_VEC cppVar_56330 = PC + 1;
	cppVar_56330 = (cppVar_56330 & cppMask_un_16_);
	BIT_VEC cppVar_56331 = ROM.rd(cppVar_56330);
	BIT_VEC cppVar_56332 = (cppVar_56331 >> 7) & cppMask_un_1_;
	bool cppVar_56334 = (cppVar_56332 == 0);
	BIT_VEC cppVar_56335 = PC + 1;
	cppVar_56335 = (cppVar_56335 & cppMask_un_16_);
	BIT_VEC cppVar_56336 = ROM.rd(cppVar_56335);
	BIT_VEC cppVar_56337 = IRAM.rd(cppVar_56336);
	BIT_VEC cppVar_56338 = PC + 1;
	cppVar_56338 = (cppVar_56338 & cppMask_un_16_);
	BIT_VEC cppVar_56339 = ROM.rd(cppVar_56338);
	bool cppVar_56341 = (cppVar_56339 == 128);
	BIT_VEC cppVar_56342 = PC + 1;
	cppVar_56342 = (cppVar_56342 & cppMask_un_16_);
	BIT_VEC cppVar_56343 = ROM.rd(cppVar_56342);
	bool cppVar_56345 = (cppVar_56343 == 129);
	BIT_VEC cppVar_56346 = PC + 1;
	cppVar_56346 = (cppVar_56346 & cppMask_un_16_);
	BIT_VEC cppVar_56347 = ROM.rd(cppVar_56346);
	bool cppVar_56349 = (cppVar_56347 == 130);
	BIT_VEC cppVar_56350 = PC + 1;
	cppVar_56350 = (cppVar_56350 & cppMask_un_16_);
	BIT_VEC cppVar_56351 = ROM.rd(cppVar_56350);
	bool cppVar_56353 = (cppVar_56351 == 131);
	BIT_VEC cppVar_56354 = PC + 1;
	cppVar_56354 = (cppVar_56354 & cppMask_un_16_);
	BIT_VEC cppVar_56355 = ROM.rd(cppVar_56354);
	bool cppVar_56357 = (cppVar_56355 == 135);
	BIT_VEC cppVar_56358 = PC + 1;
	cppVar_56358 = (cppVar_56358 & cppMask_un_16_);
	BIT_VEC cppVar_56359 = ROM.rd(cppVar_56358);
	bool cppVar_56361 = (cppVar_56359 == 136);
	BIT_VEC cppVar_56362 = PC + 1;
	cppVar_56362 = (cppVar_56362 & cppMask_un_16_);
	BIT_VEC cppVar_56363 = ROM.rd(cppVar_56362);
	bool cppVar_56365 = (cppVar_56363 == 137);
	BIT_VEC cppVar_56366 = PC + 1;
	cppVar_56366 = (cppVar_56366 & cppMask_un_16_);
	BIT_VEC cppVar_56367 = ROM.rd(cppVar_56366);
	bool cppVar_56369 = (cppVar_56367 == 138);
	BIT_VEC cppVar_56370 = PC + 1;
	cppVar_56370 = (cppVar_56370 & cppMask_un_16_);
	BIT_VEC cppVar_56371 = ROM.rd(cppVar_56370);
	bool cppVar_56373 = (cppVar_56371 == 140);
	BIT_VEC cppVar_56374 = PC + 1;
	cppVar_56374 = (cppVar_56374 & cppMask_un_16_);
	BIT_VEC cppVar_56375 = ROM.rd(cppVar_56374);
	bool cppVar_56377 = (cppVar_56375 == 139);
	BIT_VEC cppVar_56378 = PC + 1;
	cppVar_56378 = (cppVar_56378 & cppMask_un_16_);
	BIT_VEC cppVar_56379 = ROM.rd(cppVar_56378);
	bool cppVar_56381 = (cppVar_56379 == 141);
	BIT_VEC cppVar_56382 = PC + 1;
	cppVar_56382 = (cppVar_56382 & cppMask_un_16_);
	BIT_VEC cppVar_56383 = ROM.rd(cppVar_56382);
	bool cppVar_56385 = (cppVar_56383 == 144);
	BIT_VEC cppVar_56386 = PC + 1;
	cppVar_56386 = (cppVar_56386 & cppMask_un_16_);
	BIT_VEC cppVar_56387 = ROM.rd(cppVar_56386);
	bool cppVar_56389 = (cppVar_56387 == 152);
	BIT_VEC cppVar_56390 = PC + 1;
	cppVar_56390 = (cppVar_56390 & cppMask_un_16_);
	BIT_VEC cppVar_56391 = ROM.rd(cppVar_56390);
	bool cppVar_56393 = (cppVar_56391 == 153);
	BIT_VEC cppVar_56394 = PC + 1;
	cppVar_56394 = (cppVar_56394 & cppMask_un_16_);
	BIT_VEC cppVar_56395 = ROM.rd(cppVar_56394);
	bool cppVar_56397 = (cppVar_56395 == 160);
	BIT_VEC cppVar_56398 = PC + 1;
	cppVar_56398 = (cppVar_56398 & cppMask_un_16_);
	BIT_VEC cppVar_56399 = ROM.rd(cppVar_56398);
	bool cppVar_56401 = (cppVar_56399 == 168);
	BIT_VEC cppVar_56402 = PC + 1;
	cppVar_56402 = (cppVar_56402 & cppMask_un_16_);
	BIT_VEC cppVar_56403 = ROM.rd(cppVar_56402);
	bool cppVar_56405 = (cppVar_56403 == 176);
	BIT_VEC cppVar_56406 = PC + 1;
	cppVar_56406 = (cppVar_56406 & cppMask_un_16_);
	BIT_VEC cppVar_56407 = ROM.rd(cppVar_56406);
	bool cppVar_56409 = (cppVar_56407 == 184);
	BIT_VEC cppVar_56410 = PC + 1;
	cppVar_56410 = (cppVar_56410 & cppMask_un_16_);
	BIT_VEC cppVar_56411 = ROM.rd(cppVar_56410);
	bool cppVar_56413 = (cppVar_56411 == 208);
	BIT_VEC cppVar_56414 = PC + 1;
	cppVar_56414 = (cppVar_56414 & cppMask_un_16_);
	BIT_VEC cppVar_56415 = ROM.rd(cppVar_56414);
	bool cppVar_56417 = (cppVar_56415 == 224);
	BIT_VEC cppVar_56418 = PC + 1;
	cppVar_56418 = (cppVar_56418 & cppMask_un_16_);
	BIT_VEC cppVar_56419 = ROM.rd(cppVar_56418);
	bool cppVar_56421 = (cppVar_56419 == 240);
	BIT_VEC cppVar_56423 = (cppVar_56421) ? B : 0;
	BIT_VEC cppVar_56424 = (cppVar_56417) ? ACC : cppVar_56423;
	BIT_VEC cppVar_56425 = (cppVar_56413) ? PSW : cppVar_56424;
	BIT_VEC cppVar_56426 = (cppVar_56409) ? IP : cppVar_56425;
	BIT_VEC cppVar_56427 = (cppVar_56405) ? P3 : cppVar_56426;
	BIT_VEC cppVar_56428 = (cppVar_56401) ? IE : cppVar_56427;
	BIT_VEC cppVar_56429 = (cppVar_56397) ? P2 : cppVar_56428;
	BIT_VEC cppVar_56430 = (cppVar_56393) ? SBUF : cppVar_56429;
	BIT_VEC cppVar_56431 = (cppVar_56389) ? SCON : cppVar_56430;
	BIT_VEC cppVar_56432 = (cppVar_56385) ? P1 : cppVar_56431;
	BIT_VEC cppVar_56433 = (cppVar_56381) ? TH1 : cppVar_56432;
	BIT_VEC cppVar_56434 = (cppVar_56377) ? TL1 : cppVar_56433;
	BIT_VEC cppVar_56435 = (cppVar_56373) ? TH0 : cppVar_56434;
	BIT_VEC cppVar_56436 = (cppVar_56369) ? TL0 : cppVar_56435;
	BIT_VEC cppVar_56437 = (cppVar_56365) ? TMOD : cppVar_56436;
	BIT_VEC cppVar_56438 = (cppVar_56361) ? TCON : cppVar_56437;
	BIT_VEC cppVar_56439 = (cppVar_56357) ? PCON : cppVar_56438;
	BIT_VEC cppVar_56440 = (cppVar_56353) ? DPH : cppVar_56439;
	BIT_VEC cppVar_56441 = (cppVar_56349) ? DPL : cppVar_56440;
	BIT_VEC cppVar_56442 = (cppVar_56345) ? SP : cppVar_56441;
	BIT_VEC cppVar_56443 = (cppVar_56341) ? P0 : cppVar_56442;
	BIT_VEC cppVar_56444 = (cppVar_56334) ? cppVar_56337 : cppVar_56443;
	BIT_VEC cppVar_56446 = cppVar_56444 - 1;
	cppVar_56446 = (cppVar_56446 & cppMask_un_8_);
	BIT_VEC cppVar_56447 = (cppVar_56329) ? cppVar_56446 : PSW;
	BIT_VEC cppVar_56448 = ROM.rd(PC);
	bool cppVar_56450 = (cppVar_56448 == 19);
	BIT_VEC cppVar_56451 = (ACC >> 0) & cppMask_un_1_;
	BIT_VEC cppVar_56452 = (PSW >> 6) & cppMask_un_1_;
	BIT_VEC cppVar_56453 = (PSW >> 3) & cppMask_un_3_;
	BIT_VEC cppVar_56454 = (PSW >> 2) & cppMask_un_1_;
	BIT_VEC cppVar_56455 = (PSW >> 0) & cppMask_un_2_;
	BIT_VEC cppVar_56456 = (cppVar_56454 << 2) | cppVar_56455;
	cppVar_56456 = (cppVar_56456 & cppMask_un_3_);
	BIT_VEC cppVar_56457 = (cppVar_56453 << 3) | cppVar_56456;
	cppVar_56457 = (cppVar_56457 & cppMask_un_6_);
	BIT_VEC cppVar_56458 = (cppVar_56452 << 6) | cppVar_56457;
	cppVar_56458 = (cppVar_56458 & cppMask_un_7_);
	BIT_VEC cppVar_56459 = (cppVar_56451 << 7) | cppVar_56458;
	cppVar_56459 = (cppVar_56459 & cppMask_un_8_);
	BIT_VEC cppVar_56460 = ROM.rd(PC);
	bool cppVar_56462 = (cppVar_56460 == 194);
	BIT_VEC cppVar_56463 = ROM.rd(PC);
	bool cppVar_56465 = (cppVar_56463 == 16);
	bool cppVar_56466 = cppVar_56462 || cppVar_56465;
	BIT_VEC cppVar_56468 = PC + 1;
	cppVar_56468 = (cppVar_56468 & cppMask_un_16_);
	BIT_VEC cppVar_56469 = ROM.rd(cppVar_56468);
	BIT_VEC cppVar_56470 = (cppVar_56469 >> 7) & cppMask_un_1_;
	bool cppVar_56472 = (cppVar_56470 == 1);
	BIT_VEC cppVar_56473 = PC + 1;
	cppVar_56473 = (cppVar_56473 & cppMask_un_16_);
	BIT_VEC cppVar_56474 = ROM.rd(cppVar_56473);
	BIT_VEC cppVar_56475 = (cppVar_56474 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56477 = (cppVar_56475 << 3) | 0;
	cppVar_56477 = (cppVar_56477 & cppMask_un_8_);
	BIT_VEC cppVar_56478 = PC + 1;
	cppVar_56478 = (cppVar_56478 & cppMask_un_16_);
	BIT_VEC cppVar_56479 = ROM.rd(cppVar_56478);
	BIT_VEC cppVar_56480 = (cppVar_56479 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56481 = (cppVar_56480 & cppMask_un_5_);
	BIT_VEC cppVar_56483 = cppVar_56481 + 32;
	cppVar_56483 = (cppVar_56483 & cppMask_un_8_);
	BIT_VEC cppVar_56484 = (cppVar_56472) ? cppVar_56477 : cppVar_56483;
	bool cppVar_56486 = (cppVar_56484 == 208);
	BIT_VEC cppVar_56488 = PC + 1;
	cppVar_56488 = (cppVar_56488 & cppMask_un_16_);
	BIT_VEC cppVar_56489 = ROM.rd(cppVar_56488);
	BIT_VEC cppVar_56490 = (cppVar_56489 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_56491 = (cppVar_56490 & cppMask_un_3_);
	BIT_VEC cppVar_56492 = 1 << static_cast<unsigned>(cppVar_56491);
	cppVar_56492 = (cppVar_56492 & cppMask_un_8_);
	BIT_VEC cppVar_56493 = ~cppVar_56492;
	BIT_VEC cppVar_56494 = PC + 1;
	cppVar_56494 = (cppVar_56494 & cppMask_un_16_);
	BIT_VEC cppVar_56495 = ROM.rd(cppVar_56494);
	BIT_VEC cppVar_56496 = (cppVar_56495 >> 7) & cppMask_un_1_;
	bool cppVar_56497 = (cppVar_56496 == 1);
	BIT_VEC cppVar_56498 = PC + 1;
	cppVar_56498 = (cppVar_56498 & cppMask_un_16_);
	BIT_VEC cppVar_56499 = ROM.rd(cppVar_56498);
	BIT_VEC cppVar_56500 = (cppVar_56499 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56501 = (cppVar_56500 << 3) | 0;
	cppVar_56501 = (cppVar_56501 & cppMask_un_8_);
	BIT_VEC cppVar_56502 = PC + 1;
	cppVar_56502 = (cppVar_56502 & cppMask_un_16_);
	BIT_VEC cppVar_56503 = ROM.rd(cppVar_56502);
	BIT_VEC cppVar_56504 = (cppVar_56503 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56505 = (cppVar_56504 & cppMask_un_5_);
	BIT_VEC cppVar_56506 = cppVar_56505 + 32;
	cppVar_56506 = (cppVar_56506 & cppMask_un_8_);
	BIT_VEC cppVar_56507 = (cppVar_56497) ? cppVar_56501 : cppVar_56506;
	BIT_VEC cppVar_56508 = (cppVar_56507 >> 7) & cppMask_un_1_;
	bool cppVar_56510 = (cppVar_56508 == 0);
	BIT_VEC cppVar_56511 = PC + 1;
	cppVar_56511 = (cppVar_56511 & cppMask_un_16_);
	BIT_VEC cppVar_56512 = ROM.rd(cppVar_56511);
	BIT_VEC cppVar_56513 = (cppVar_56512 >> 7) & cppMask_un_1_;
	bool cppVar_56514 = (cppVar_56513 == 1);
	BIT_VEC cppVar_56515 = PC + 1;
	cppVar_56515 = (cppVar_56515 & cppMask_un_16_);
	BIT_VEC cppVar_56516 = ROM.rd(cppVar_56515);
	BIT_VEC cppVar_56517 = (cppVar_56516 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56518 = (cppVar_56517 << 3) | 0;
	cppVar_56518 = (cppVar_56518 & cppMask_un_8_);
	BIT_VEC cppVar_56519 = PC + 1;
	cppVar_56519 = (cppVar_56519 & cppMask_un_16_);
	BIT_VEC cppVar_56520 = ROM.rd(cppVar_56519);
	BIT_VEC cppVar_56521 = (cppVar_56520 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56522 = (cppVar_56521 & cppMask_un_5_);
	BIT_VEC cppVar_56523 = cppVar_56522 + 32;
	cppVar_56523 = (cppVar_56523 & cppMask_un_8_);
	BIT_VEC cppVar_56524 = (cppVar_56514) ? cppVar_56518 : cppVar_56523;
	BIT_VEC cppVar_56525 = IRAM.rd(cppVar_56524);
	BIT_VEC cppVar_56526 = PC + 1;
	cppVar_56526 = (cppVar_56526 & cppMask_un_16_);
	BIT_VEC cppVar_56527 = ROM.rd(cppVar_56526);
	BIT_VEC cppVar_56528 = (cppVar_56527 >> 7) & cppMask_un_1_;
	bool cppVar_56529 = (cppVar_56528 == 1);
	BIT_VEC cppVar_56530 = PC + 1;
	cppVar_56530 = (cppVar_56530 & cppMask_un_16_);
	BIT_VEC cppVar_56531 = ROM.rd(cppVar_56530);
	BIT_VEC cppVar_56532 = (cppVar_56531 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56533 = (cppVar_56532 << 3) | 0;
	cppVar_56533 = (cppVar_56533 & cppMask_un_8_);
	BIT_VEC cppVar_56534 = PC + 1;
	cppVar_56534 = (cppVar_56534 & cppMask_un_16_);
	BIT_VEC cppVar_56535 = ROM.rd(cppVar_56534);
	BIT_VEC cppVar_56536 = (cppVar_56535 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56537 = (cppVar_56536 & cppMask_un_5_);
	BIT_VEC cppVar_56538 = cppVar_56537 + 32;
	cppVar_56538 = (cppVar_56538 & cppMask_un_8_);
	BIT_VEC cppVar_56539 = (cppVar_56529) ? cppVar_56533 : cppVar_56538;
	bool cppVar_56541 = (cppVar_56539 == 128);
	BIT_VEC cppVar_56542 = PC + 1;
	cppVar_56542 = (cppVar_56542 & cppMask_un_16_);
	BIT_VEC cppVar_56543 = ROM.rd(cppVar_56542);
	BIT_VEC cppVar_56544 = (cppVar_56543 >> 7) & cppMask_un_1_;
	bool cppVar_56545 = (cppVar_56544 == 1);
	BIT_VEC cppVar_56546 = PC + 1;
	cppVar_56546 = (cppVar_56546 & cppMask_un_16_);
	BIT_VEC cppVar_56547 = ROM.rd(cppVar_56546);
	BIT_VEC cppVar_56548 = (cppVar_56547 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56549 = (cppVar_56548 << 3) | 0;
	cppVar_56549 = (cppVar_56549 & cppMask_un_8_);
	BIT_VEC cppVar_56550 = PC + 1;
	cppVar_56550 = (cppVar_56550 & cppMask_un_16_);
	BIT_VEC cppVar_56551 = ROM.rd(cppVar_56550);
	BIT_VEC cppVar_56552 = (cppVar_56551 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56553 = (cppVar_56552 & cppMask_un_5_);
	BIT_VEC cppVar_56554 = cppVar_56553 + 32;
	cppVar_56554 = (cppVar_56554 & cppMask_un_8_);
	BIT_VEC cppVar_56555 = (cppVar_56545) ? cppVar_56549 : cppVar_56554;
	bool cppVar_56557 = (cppVar_56555 == 129);
	BIT_VEC cppVar_56558 = PC + 1;
	cppVar_56558 = (cppVar_56558 & cppMask_un_16_);
	BIT_VEC cppVar_56559 = ROM.rd(cppVar_56558);
	BIT_VEC cppVar_56560 = (cppVar_56559 >> 7) & cppMask_un_1_;
	bool cppVar_56561 = (cppVar_56560 == 1);
	BIT_VEC cppVar_56562 = PC + 1;
	cppVar_56562 = (cppVar_56562 & cppMask_un_16_);
	BIT_VEC cppVar_56563 = ROM.rd(cppVar_56562);
	BIT_VEC cppVar_56564 = (cppVar_56563 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56565 = (cppVar_56564 << 3) | 0;
	cppVar_56565 = (cppVar_56565 & cppMask_un_8_);
	BIT_VEC cppVar_56566 = PC + 1;
	cppVar_56566 = (cppVar_56566 & cppMask_un_16_);
	BIT_VEC cppVar_56567 = ROM.rd(cppVar_56566);
	BIT_VEC cppVar_56568 = (cppVar_56567 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56569 = (cppVar_56568 & cppMask_un_5_);
	BIT_VEC cppVar_56570 = cppVar_56569 + 32;
	cppVar_56570 = (cppVar_56570 & cppMask_un_8_);
	BIT_VEC cppVar_56571 = (cppVar_56561) ? cppVar_56565 : cppVar_56570;
	bool cppVar_56573 = (cppVar_56571 == 130);
	BIT_VEC cppVar_56574 = PC + 1;
	cppVar_56574 = (cppVar_56574 & cppMask_un_16_);
	BIT_VEC cppVar_56575 = ROM.rd(cppVar_56574);
	BIT_VEC cppVar_56576 = (cppVar_56575 >> 7) & cppMask_un_1_;
	bool cppVar_56577 = (cppVar_56576 == 1);
	BIT_VEC cppVar_56578 = PC + 1;
	cppVar_56578 = (cppVar_56578 & cppMask_un_16_);
	BIT_VEC cppVar_56579 = ROM.rd(cppVar_56578);
	BIT_VEC cppVar_56580 = (cppVar_56579 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56581 = (cppVar_56580 << 3) | 0;
	cppVar_56581 = (cppVar_56581 & cppMask_un_8_);
	BIT_VEC cppVar_56582 = PC + 1;
	cppVar_56582 = (cppVar_56582 & cppMask_un_16_);
	BIT_VEC cppVar_56583 = ROM.rd(cppVar_56582);
	BIT_VEC cppVar_56584 = (cppVar_56583 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56585 = (cppVar_56584 & cppMask_un_5_);
	BIT_VEC cppVar_56586 = cppVar_56585 + 32;
	cppVar_56586 = (cppVar_56586 & cppMask_un_8_);
	BIT_VEC cppVar_56587 = (cppVar_56577) ? cppVar_56581 : cppVar_56586;
	bool cppVar_56589 = (cppVar_56587 == 131);
	BIT_VEC cppVar_56590 = PC + 1;
	cppVar_56590 = (cppVar_56590 & cppMask_un_16_);
	BIT_VEC cppVar_56591 = ROM.rd(cppVar_56590);
	BIT_VEC cppVar_56592 = (cppVar_56591 >> 7) & cppMask_un_1_;
	bool cppVar_56593 = (cppVar_56592 == 1);
	BIT_VEC cppVar_56594 = PC + 1;
	cppVar_56594 = (cppVar_56594 & cppMask_un_16_);
	BIT_VEC cppVar_56595 = ROM.rd(cppVar_56594);
	BIT_VEC cppVar_56596 = (cppVar_56595 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56597 = (cppVar_56596 << 3) | 0;
	cppVar_56597 = (cppVar_56597 & cppMask_un_8_);
	BIT_VEC cppVar_56598 = PC + 1;
	cppVar_56598 = (cppVar_56598 & cppMask_un_16_);
	BIT_VEC cppVar_56599 = ROM.rd(cppVar_56598);
	BIT_VEC cppVar_56600 = (cppVar_56599 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56601 = (cppVar_56600 & cppMask_un_5_);
	BIT_VEC cppVar_56602 = cppVar_56601 + 32;
	cppVar_56602 = (cppVar_56602 & cppMask_un_8_);
	BIT_VEC cppVar_56603 = (cppVar_56593) ? cppVar_56597 : cppVar_56602;
	bool cppVar_56605 = (cppVar_56603 == 135);
	BIT_VEC cppVar_56606 = PC + 1;
	cppVar_56606 = (cppVar_56606 & cppMask_un_16_);
	BIT_VEC cppVar_56607 = ROM.rd(cppVar_56606);
	BIT_VEC cppVar_56608 = (cppVar_56607 >> 7) & cppMask_un_1_;
	bool cppVar_56609 = (cppVar_56608 == 1);
	BIT_VEC cppVar_56610 = PC + 1;
	cppVar_56610 = (cppVar_56610 & cppMask_un_16_);
	BIT_VEC cppVar_56611 = ROM.rd(cppVar_56610);
	BIT_VEC cppVar_56612 = (cppVar_56611 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56613 = (cppVar_56612 << 3) | 0;
	cppVar_56613 = (cppVar_56613 & cppMask_un_8_);
	BIT_VEC cppVar_56614 = PC + 1;
	cppVar_56614 = (cppVar_56614 & cppMask_un_16_);
	BIT_VEC cppVar_56615 = ROM.rd(cppVar_56614);
	BIT_VEC cppVar_56616 = (cppVar_56615 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56617 = (cppVar_56616 & cppMask_un_5_);
	BIT_VEC cppVar_56618 = cppVar_56617 + 32;
	cppVar_56618 = (cppVar_56618 & cppMask_un_8_);
	BIT_VEC cppVar_56619 = (cppVar_56609) ? cppVar_56613 : cppVar_56618;
	bool cppVar_56621 = (cppVar_56619 == 136);
	BIT_VEC cppVar_56622 = PC + 1;
	cppVar_56622 = (cppVar_56622 & cppMask_un_16_);
	BIT_VEC cppVar_56623 = ROM.rd(cppVar_56622);
	BIT_VEC cppVar_56624 = (cppVar_56623 >> 7) & cppMask_un_1_;
	bool cppVar_56625 = (cppVar_56624 == 1);
	BIT_VEC cppVar_56626 = PC + 1;
	cppVar_56626 = (cppVar_56626 & cppMask_un_16_);
	BIT_VEC cppVar_56627 = ROM.rd(cppVar_56626);
	BIT_VEC cppVar_56628 = (cppVar_56627 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56629 = (cppVar_56628 << 3) | 0;
	cppVar_56629 = (cppVar_56629 & cppMask_un_8_);
	BIT_VEC cppVar_56630 = PC + 1;
	cppVar_56630 = (cppVar_56630 & cppMask_un_16_);
	BIT_VEC cppVar_56631 = ROM.rd(cppVar_56630);
	BIT_VEC cppVar_56632 = (cppVar_56631 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56633 = (cppVar_56632 & cppMask_un_5_);
	BIT_VEC cppVar_56634 = cppVar_56633 + 32;
	cppVar_56634 = (cppVar_56634 & cppMask_un_8_);
	BIT_VEC cppVar_56635 = (cppVar_56625) ? cppVar_56629 : cppVar_56634;
	bool cppVar_56637 = (cppVar_56635 == 137);
	BIT_VEC cppVar_56638 = PC + 1;
	cppVar_56638 = (cppVar_56638 & cppMask_un_16_);
	BIT_VEC cppVar_56639 = ROM.rd(cppVar_56638);
	BIT_VEC cppVar_56640 = (cppVar_56639 >> 7) & cppMask_un_1_;
	bool cppVar_56641 = (cppVar_56640 == 1);
	BIT_VEC cppVar_56642 = PC + 1;
	cppVar_56642 = (cppVar_56642 & cppMask_un_16_);
	BIT_VEC cppVar_56643 = ROM.rd(cppVar_56642);
	BIT_VEC cppVar_56644 = (cppVar_56643 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56645 = (cppVar_56644 << 3) | 0;
	cppVar_56645 = (cppVar_56645 & cppMask_un_8_);
	BIT_VEC cppVar_56646 = PC + 1;
	cppVar_56646 = (cppVar_56646 & cppMask_un_16_);
	BIT_VEC cppVar_56647 = ROM.rd(cppVar_56646);
	BIT_VEC cppVar_56648 = (cppVar_56647 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56649 = (cppVar_56648 & cppMask_un_5_);
	BIT_VEC cppVar_56650 = cppVar_56649 + 32;
	cppVar_56650 = (cppVar_56650 & cppMask_un_8_);
	BIT_VEC cppVar_56651 = (cppVar_56641) ? cppVar_56645 : cppVar_56650;
	bool cppVar_56653 = (cppVar_56651 == 138);
	BIT_VEC cppVar_56654 = PC + 1;
	cppVar_56654 = (cppVar_56654 & cppMask_un_16_);
	BIT_VEC cppVar_56655 = ROM.rd(cppVar_56654);
	BIT_VEC cppVar_56656 = (cppVar_56655 >> 7) & cppMask_un_1_;
	bool cppVar_56657 = (cppVar_56656 == 1);
	BIT_VEC cppVar_56658 = PC + 1;
	cppVar_56658 = (cppVar_56658 & cppMask_un_16_);
	BIT_VEC cppVar_56659 = ROM.rd(cppVar_56658);
	BIT_VEC cppVar_56660 = (cppVar_56659 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56661 = (cppVar_56660 << 3) | 0;
	cppVar_56661 = (cppVar_56661 & cppMask_un_8_);
	BIT_VEC cppVar_56662 = PC + 1;
	cppVar_56662 = (cppVar_56662 & cppMask_un_16_);
	BIT_VEC cppVar_56663 = ROM.rd(cppVar_56662);
	BIT_VEC cppVar_56664 = (cppVar_56663 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56665 = (cppVar_56664 & cppMask_un_5_);
	BIT_VEC cppVar_56666 = cppVar_56665 + 32;
	cppVar_56666 = (cppVar_56666 & cppMask_un_8_);
	BIT_VEC cppVar_56667 = (cppVar_56657) ? cppVar_56661 : cppVar_56666;
	bool cppVar_56669 = (cppVar_56667 == 140);
	BIT_VEC cppVar_56670 = PC + 1;
	cppVar_56670 = (cppVar_56670 & cppMask_un_16_);
	BIT_VEC cppVar_56671 = ROM.rd(cppVar_56670);
	BIT_VEC cppVar_56672 = (cppVar_56671 >> 7) & cppMask_un_1_;
	bool cppVar_56673 = (cppVar_56672 == 1);
	BIT_VEC cppVar_56674 = PC + 1;
	cppVar_56674 = (cppVar_56674 & cppMask_un_16_);
	BIT_VEC cppVar_56675 = ROM.rd(cppVar_56674);
	BIT_VEC cppVar_56676 = (cppVar_56675 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56677 = (cppVar_56676 << 3) | 0;
	cppVar_56677 = (cppVar_56677 & cppMask_un_8_);
	BIT_VEC cppVar_56678 = PC + 1;
	cppVar_56678 = (cppVar_56678 & cppMask_un_16_);
	BIT_VEC cppVar_56679 = ROM.rd(cppVar_56678);
	BIT_VEC cppVar_56680 = (cppVar_56679 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56681 = (cppVar_56680 & cppMask_un_5_);
	BIT_VEC cppVar_56682 = cppVar_56681 + 32;
	cppVar_56682 = (cppVar_56682 & cppMask_un_8_);
	BIT_VEC cppVar_56683 = (cppVar_56673) ? cppVar_56677 : cppVar_56682;
	bool cppVar_56685 = (cppVar_56683 == 139);
	BIT_VEC cppVar_56686 = PC + 1;
	cppVar_56686 = (cppVar_56686 & cppMask_un_16_);
	BIT_VEC cppVar_56687 = ROM.rd(cppVar_56686);
	BIT_VEC cppVar_56688 = (cppVar_56687 >> 7) & cppMask_un_1_;
	bool cppVar_56689 = (cppVar_56688 == 1);
	BIT_VEC cppVar_56690 = PC + 1;
	cppVar_56690 = (cppVar_56690 & cppMask_un_16_);
	BIT_VEC cppVar_56691 = ROM.rd(cppVar_56690);
	BIT_VEC cppVar_56692 = (cppVar_56691 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56693 = (cppVar_56692 << 3) | 0;
	cppVar_56693 = (cppVar_56693 & cppMask_un_8_);
	BIT_VEC cppVar_56694 = PC + 1;
	cppVar_56694 = (cppVar_56694 & cppMask_un_16_);
	BIT_VEC cppVar_56695 = ROM.rd(cppVar_56694);
	BIT_VEC cppVar_56696 = (cppVar_56695 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56697 = (cppVar_56696 & cppMask_un_5_);
	BIT_VEC cppVar_56698 = cppVar_56697 + 32;
	cppVar_56698 = (cppVar_56698 & cppMask_un_8_);
	BIT_VEC cppVar_56699 = (cppVar_56689) ? cppVar_56693 : cppVar_56698;
	bool cppVar_56701 = (cppVar_56699 == 141);
	BIT_VEC cppVar_56702 = PC + 1;
	cppVar_56702 = (cppVar_56702 & cppMask_un_16_);
	BIT_VEC cppVar_56703 = ROM.rd(cppVar_56702);
	BIT_VEC cppVar_56704 = (cppVar_56703 >> 7) & cppMask_un_1_;
	bool cppVar_56705 = (cppVar_56704 == 1);
	BIT_VEC cppVar_56706 = PC + 1;
	cppVar_56706 = (cppVar_56706 & cppMask_un_16_);
	BIT_VEC cppVar_56707 = ROM.rd(cppVar_56706);
	BIT_VEC cppVar_56708 = (cppVar_56707 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56709 = (cppVar_56708 << 3) | 0;
	cppVar_56709 = (cppVar_56709 & cppMask_un_8_);
	BIT_VEC cppVar_56710 = PC + 1;
	cppVar_56710 = (cppVar_56710 & cppMask_un_16_);
	BIT_VEC cppVar_56711 = ROM.rd(cppVar_56710);
	BIT_VEC cppVar_56712 = (cppVar_56711 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56713 = (cppVar_56712 & cppMask_un_5_);
	BIT_VEC cppVar_56714 = cppVar_56713 + 32;
	cppVar_56714 = (cppVar_56714 & cppMask_un_8_);
	BIT_VEC cppVar_56715 = (cppVar_56705) ? cppVar_56709 : cppVar_56714;
	bool cppVar_56717 = (cppVar_56715 == 144);
	BIT_VEC cppVar_56718 = PC + 1;
	cppVar_56718 = (cppVar_56718 & cppMask_un_16_);
	BIT_VEC cppVar_56719 = ROM.rd(cppVar_56718);
	BIT_VEC cppVar_56720 = (cppVar_56719 >> 7) & cppMask_un_1_;
	bool cppVar_56721 = (cppVar_56720 == 1);
	BIT_VEC cppVar_56722 = PC + 1;
	cppVar_56722 = (cppVar_56722 & cppMask_un_16_);
	BIT_VEC cppVar_56723 = ROM.rd(cppVar_56722);
	BIT_VEC cppVar_56724 = (cppVar_56723 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56725 = (cppVar_56724 << 3) | 0;
	cppVar_56725 = (cppVar_56725 & cppMask_un_8_);
	BIT_VEC cppVar_56726 = PC + 1;
	cppVar_56726 = (cppVar_56726 & cppMask_un_16_);
	BIT_VEC cppVar_56727 = ROM.rd(cppVar_56726);
	BIT_VEC cppVar_56728 = (cppVar_56727 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56729 = (cppVar_56728 & cppMask_un_5_);
	BIT_VEC cppVar_56730 = cppVar_56729 + 32;
	cppVar_56730 = (cppVar_56730 & cppMask_un_8_);
	BIT_VEC cppVar_56731 = (cppVar_56721) ? cppVar_56725 : cppVar_56730;
	bool cppVar_56733 = (cppVar_56731 == 152);
	BIT_VEC cppVar_56734 = PC + 1;
	cppVar_56734 = (cppVar_56734 & cppMask_un_16_);
	BIT_VEC cppVar_56735 = ROM.rd(cppVar_56734);
	BIT_VEC cppVar_56736 = (cppVar_56735 >> 7) & cppMask_un_1_;
	bool cppVar_56737 = (cppVar_56736 == 1);
	BIT_VEC cppVar_56738 = PC + 1;
	cppVar_56738 = (cppVar_56738 & cppMask_un_16_);
	BIT_VEC cppVar_56739 = ROM.rd(cppVar_56738);
	BIT_VEC cppVar_56740 = (cppVar_56739 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56741 = (cppVar_56740 << 3) | 0;
	cppVar_56741 = (cppVar_56741 & cppMask_un_8_);
	BIT_VEC cppVar_56742 = PC + 1;
	cppVar_56742 = (cppVar_56742 & cppMask_un_16_);
	BIT_VEC cppVar_56743 = ROM.rd(cppVar_56742);
	BIT_VEC cppVar_56744 = (cppVar_56743 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56745 = (cppVar_56744 & cppMask_un_5_);
	BIT_VEC cppVar_56746 = cppVar_56745 + 32;
	cppVar_56746 = (cppVar_56746 & cppMask_un_8_);
	BIT_VEC cppVar_56747 = (cppVar_56737) ? cppVar_56741 : cppVar_56746;
	bool cppVar_56749 = (cppVar_56747 == 153);
	BIT_VEC cppVar_56750 = PC + 1;
	cppVar_56750 = (cppVar_56750 & cppMask_un_16_);
	BIT_VEC cppVar_56751 = ROM.rd(cppVar_56750);
	BIT_VEC cppVar_56752 = (cppVar_56751 >> 7) & cppMask_un_1_;
	bool cppVar_56753 = (cppVar_56752 == 1);
	BIT_VEC cppVar_56754 = PC + 1;
	cppVar_56754 = (cppVar_56754 & cppMask_un_16_);
	BIT_VEC cppVar_56755 = ROM.rd(cppVar_56754);
	BIT_VEC cppVar_56756 = (cppVar_56755 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56757 = (cppVar_56756 << 3) | 0;
	cppVar_56757 = (cppVar_56757 & cppMask_un_8_);
	BIT_VEC cppVar_56758 = PC + 1;
	cppVar_56758 = (cppVar_56758 & cppMask_un_16_);
	BIT_VEC cppVar_56759 = ROM.rd(cppVar_56758);
	BIT_VEC cppVar_56760 = (cppVar_56759 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56761 = (cppVar_56760 & cppMask_un_5_);
	BIT_VEC cppVar_56762 = cppVar_56761 + 32;
	cppVar_56762 = (cppVar_56762 & cppMask_un_8_);
	BIT_VEC cppVar_56763 = (cppVar_56753) ? cppVar_56757 : cppVar_56762;
	bool cppVar_56765 = (cppVar_56763 == 160);
	BIT_VEC cppVar_56766 = PC + 1;
	cppVar_56766 = (cppVar_56766 & cppMask_un_16_);
	BIT_VEC cppVar_56767 = ROM.rd(cppVar_56766);
	BIT_VEC cppVar_56768 = (cppVar_56767 >> 7) & cppMask_un_1_;
	bool cppVar_56769 = (cppVar_56768 == 1);
	BIT_VEC cppVar_56770 = PC + 1;
	cppVar_56770 = (cppVar_56770 & cppMask_un_16_);
	BIT_VEC cppVar_56771 = ROM.rd(cppVar_56770);
	BIT_VEC cppVar_56772 = (cppVar_56771 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56773 = (cppVar_56772 << 3) | 0;
	cppVar_56773 = (cppVar_56773 & cppMask_un_8_);
	BIT_VEC cppVar_56774 = PC + 1;
	cppVar_56774 = (cppVar_56774 & cppMask_un_16_);
	BIT_VEC cppVar_56775 = ROM.rd(cppVar_56774);
	BIT_VEC cppVar_56776 = (cppVar_56775 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56777 = (cppVar_56776 & cppMask_un_5_);
	BIT_VEC cppVar_56778 = cppVar_56777 + 32;
	cppVar_56778 = (cppVar_56778 & cppMask_un_8_);
	BIT_VEC cppVar_56779 = (cppVar_56769) ? cppVar_56773 : cppVar_56778;
	bool cppVar_56781 = (cppVar_56779 == 168);
	BIT_VEC cppVar_56782 = PC + 1;
	cppVar_56782 = (cppVar_56782 & cppMask_un_16_);
	BIT_VEC cppVar_56783 = ROM.rd(cppVar_56782);
	BIT_VEC cppVar_56784 = (cppVar_56783 >> 7) & cppMask_un_1_;
	bool cppVar_56785 = (cppVar_56784 == 1);
	BIT_VEC cppVar_56786 = PC + 1;
	cppVar_56786 = (cppVar_56786 & cppMask_un_16_);
	BIT_VEC cppVar_56787 = ROM.rd(cppVar_56786);
	BIT_VEC cppVar_56788 = (cppVar_56787 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56789 = (cppVar_56788 << 3) | 0;
	cppVar_56789 = (cppVar_56789 & cppMask_un_8_);
	BIT_VEC cppVar_56790 = PC + 1;
	cppVar_56790 = (cppVar_56790 & cppMask_un_16_);
	BIT_VEC cppVar_56791 = ROM.rd(cppVar_56790);
	BIT_VEC cppVar_56792 = (cppVar_56791 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56793 = (cppVar_56792 & cppMask_un_5_);
	BIT_VEC cppVar_56794 = cppVar_56793 + 32;
	cppVar_56794 = (cppVar_56794 & cppMask_un_8_);
	BIT_VEC cppVar_56795 = (cppVar_56785) ? cppVar_56789 : cppVar_56794;
	bool cppVar_56797 = (cppVar_56795 == 176);
	BIT_VEC cppVar_56798 = PC + 1;
	cppVar_56798 = (cppVar_56798 & cppMask_un_16_);
	BIT_VEC cppVar_56799 = ROM.rd(cppVar_56798);
	BIT_VEC cppVar_56800 = (cppVar_56799 >> 7) & cppMask_un_1_;
	bool cppVar_56801 = (cppVar_56800 == 1);
	BIT_VEC cppVar_56802 = PC + 1;
	cppVar_56802 = (cppVar_56802 & cppMask_un_16_);
	BIT_VEC cppVar_56803 = ROM.rd(cppVar_56802);
	BIT_VEC cppVar_56804 = (cppVar_56803 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56805 = (cppVar_56804 << 3) | 0;
	cppVar_56805 = (cppVar_56805 & cppMask_un_8_);
	BIT_VEC cppVar_56806 = PC + 1;
	cppVar_56806 = (cppVar_56806 & cppMask_un_16_);
	BIT_VEC cppVar_56807 = ROM.rd(cppVar_56806);
	BIT_VEC cppVar_56808 = (cppVar_56807 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56809 = (cppVar_56808 & cppMask_un_5_);
	BIT_VEC cppVar_56810 = cppVar_56809 + 32;
	cppVar_56810 = (cppVar_56810 & cppMask_un_8_);
	BIT_VEC cppVar_56811 = (cppVar_56801) ? cppVar_56805 : cppVar_56810;
	bool cppVar_56813 = (cppVar_56811 == 184);
	BIT_VEC cppVar_56814 = PC + 1;
	cppVar_56814 = (cppVar_56814 & cppMask_un_16_);
	BIT_VEC cppVar_56815 = ROM.rd(cppVar_56814);
	BIT_VEC cppVar_56816 = (cppVar_56815 >> 7) & cppMask_un_1_;
	bool cppVar_56817 = (cppVar_56816 == 1);
	BIT_VEC cppVar_56818 = PC + 1;
	cppVar_56818 = (cppVar_56818 & cppMask_un_16_);
	BIT_VEC cppVar_56819 = ROM.rd(cppVar_56818);
	BIT_VEC cppVar_56820 = (cppVar_56819 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56821 = (cppVar_56820 << 3) | 0;
	cppVar_56821 = (cppVar_56821 & cppMask_un_8_);
	BIT_VEC cppVar_56822 = PC + 1;
	cppVar_56822 = (cppVar_56822 & cppMask_un_16_);
	BIT_VEC cppVar_56823 = ROM.rd(cppVar_56822);
	BIT_VEC cppVar_56824 = (cppVar_56823 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56825 = (cppVar_56824 & cppMask_un_5_);
	BIT_VEC cppVar_56826 = cppVar_56825 + 32;
	cppVar_56826 = (cppVar_56826 & cppMask_un_8_);
	BIT_VEC cppVar_56827 = (cppVar_56817) ? cppVar_56821 : cppVar_56826;
	bool cppVar_56829 = (cppVar_56827 == 208);
	BIT_VEC cppVar_56830 = PC + 1;
	cppVar_56830 = (cppVar_56830 & cppMask_un_16_);
	BIT_VEC cppVar_56831 = ROM.rd(cppVar_56830);
	BIT_VEC cppVar_56832 = (cppVar_56831 >> 7) & cppMask_un_1_;
	bool cppVar_56833 = (cppVar_56832 == 1);
	BIT_VEC cppVar_56834 = PC + 1;
	cppVar_56834 = (cppVar_56834 & cppMask_un_16_);
	BIT_VEC cppVar_56835 = ROM.rd(cppVar_56834);
	BIT_VEC cppVar_56836 = (cppVar_56835 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56837 = (cppVar_56836 << 3) | 0;
	cppVar_56837 = (cppVar_56837 & cppMask_un_8_);
	BIT_VEC cppVar_56838 = PC + 1;
	cppVar_56838 = (cppVar_56838 & cppMask_un_16_);
	BIT_VEC cppVar_56839 = ROM.rd(cppVar_56838);
	BIT_VEC cppVar_56840 = (cppVar_56839 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56841 = (cppVar_56840 & cppMask_un_5_);
	BIT_VEC cppVar_56842 = cppVar_56841 + 32;
	cppVar_56842 = (cppVar_56842 & cppMask_un_8_);
	BIT_VEC cppVar_56843 = (cppVar_56833) ? cppVar_56837 : cppVar_56842;
	bool cppVar_56845 = (cppVar_56843 == 224);
	BIT_VEC cppVar_56846 = PC + 1;
	cppVar_56846 = (cppVar_56846 & cppMask_un_16_);
	BIT_VEC cppVar_56847 = ROM.rd(cppVar_56846);
	BIT_VEC cppVar_56848 = (cppVar_56847 >> 7) & cppMask_un_1_;
	bool cppVar_56849 = (cppVar_56848 == 1);
	BIT_VEC cppVar_56850 = PC + 1;
	cppVar_56850 = (cppVar_56850 & cppMask_un_16_);
	BIT_VEC cppVar_56851 = ROM.rd(cppVar_56850);
	BIT_VEC cppVar_56852 = (cppVar_56851 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56853 = (cppVar_56852 << 3) | 0;
	cppVar_56853 = (cppVar_56853 & cppMask_un_8_);
	BIT_VEC cppVar_56854 = PC + 1;
	cppVar_56854 = (cppVar_56854 & cppMask_un_16_);
	BIT_VEC cppVar_56855 = ROM.rd(cppVar_56854);
	BIT_VEC cppVar_56856 = (cppVar_56855 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_56857 = (cppVar_56856 & cppMask_un_5_);
	BIT_VEC cppVar_56858 = cppVar_56857 + 32;
	cppVar_56858 = (cppVar_56858 & cppMask_un_8_);
	BIT_VEC cppVar_56859 = (cppVar_56849) ? cppVar_56853 : cppVar_56858;
	bool cppVar_56861 = (cppVar_56859 == 240);
	BIT_VEC cppVar_56863 = (cppVar_56861) ? B : 0;
	BIT_VEC cppVar_56864 = (cppVar_56845) ? ACC : cppVar_56863;
	BIT_VEC cppVar_56865 = (cppVar_56829) ? PSW : cppVar_56864;
	BIT_VEC cppVar_56866 = (cppVar_56813) ? IP : cppVar_56865;
	BIT_VEC cppVar_56867 = (cppVar_56797) ? P3 : cppVar_56866;
	BIT_VEC cppVar_56868 = (cppVar_56781) ? IE : cppVar_56867;
	BIT_VEC cppVar_56869 = (cppVar_56765) ? P2 : cppVar_56868;
	BIT_VEC cppVar_56870 = (cppVar_56749) ? SBUF : cppVar_56869;
	BIT_VEC cppVar_56871 = (cppVar_56733) ? SCON : cppVar_56870;
	BIT_VEC cppVar_56872 = (cppVar_56717) ? P1 : cppVar_56871;
	BIT_VEC cppVar_56873 = (cppVar_56701) ? TH1 : cppVar_56872;
	BIT_VEC cppVar_56874 = (cppVar_56685) ? TL1 : cppVar_56873;
	BIT_VEC cppVar_56875 = (cppVar_56669) ? TH0 : cppVar_56874;
	BIT_VEC cppVar_56876 = (cppVar_56653) ? TL0 : cppVar_56875;
	BIT_VEC cppVar_56877 = (cppVar_56637) ? TMOD : cppVar_56876;
	BIT_VEC cppVar_56878 = (cppVar_56621) ? TCON : cppVar_56877;
	BIT_VEC cppVar_56879 = (cppVar_56605) ? PCON : cppVar_56878;
	BIT_VEC cppVar_56880 = (cppVar_56589) ? DPH : cppVar_56879;
	BIT_VEC cppVar_56881 = (cppVar_56573) ? DPL : cppVar_56880;
	BIT_VEC cppVar_56882 = (cppVar_56557) ? SP : cppVar_56881;
	BIT_VEC cppVar_56883 = (cppVar_56541) ? P0 : cppVar_56882;
	BIT_VEC cppVar_56884 = (cppVar_56510) ? cppVar_56525 : cppVar_56883;
	BIT_VEC cppVar_56885 = cppVar_56493 & cppVar_56884;
	BIT_VEC cppVar_56887 = 0;
	BIT_VEC cppVar_56888 = PC + 1;
	cppVar_56888 = (cppVar_56888 & cppMask_un_16_);
	BIT_VEC cppVar_56889 = ROM.rd(cppVar_56888);
	BIT_VEC cppVar_56890 = (cppVar_56889 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_56891 = (cppVar_56890 & cppMask_un_3_);
	BIT_VEC cppVar_56892 = cppVar_56887 << static_cast<unsigned>(cppVar_56891);
	cppVar_56892 = (cppVar_56892 & cppMask_un_8_);
	BIT_VEC cppVar_56893 = cppVar_56885 | cppVar_56892;
	BIT_VEC cppVar_56894 = (cppVar_56486) ? cppVar_56893 : PSW;
	BIT_VEC cppVar_56895 = ROM.rd(PC);
	bool cppVar_56897 = (cppVar_56895 == 5);
	BIT_VEC cppVar_56899 = PC + 1;
	cppVar_56899 = (cppVar_56899 & cppMask_un_16_);
	BIT_VEC cppVar_56900 = ROM.rd(cppVar_56899);
	bool cppVar_56902 = (cppVar_56900 == 208);
	BIT_VEC cppVar_56903 = PC + 1;
	cppVar_56903 = (cppVar_56903 & cppMask_un_16_);
	BIT_VEC cppVar_56904 = ROM.rd(cppVar_56903);
	BIT_VEC cppVar_56905 = (cppVar_56904 >> 7) & cppMask_un_1_;
	bool cppVar_56907 = (cppVar_56905 == 0);
	BIT_VEC cppVar_56908 = PC + 1;
	cppVar_56908 = (cppVar_56908 & cppMask_un_16_);
	BIT_VEC cppVar_56909 = ROM.rd(cppVar_56908);
	BIT_VEC cppVar_56910 = IRAM.rd(cppVar_56909);
	BIT_VEC cppVar_56911 = PC + 1;
	cppVar_56911 = (cppVar_56911 & cppMask_un_16_);
	BIT_VEC cppVar_56912 = ROM.rd(cppVar_56911);
	bool cppVar_56914 = (cppVar_56912 == 128);
	BIT_VEC cppVar_56915 = PC + 1;
	cppVar_56915 = (cppVar_56915 & cppMask_un_16_);
	BIT_VEC cppVar_56916 = ROM.rd(cppVar_56915);
	bool cppVar_56918 = (cppVar_56916 == 129);
	BIT_VEC cppVar_56919 = PC + 1;
	cppVar_56919 = (cppVar_56919 & cppMask_un_16_);
	BIT_VEC cppVar_56920 = ROM.rd(cppVar_56919);
	bool cppVar_56922 = (cppVar_56920 == 130);
	BIT_VEC cppVar_56923 = PC + 1;
	cppVar_56923 = (cppVar_56923 & cppMask_un_16_);
	BIT_VEC cppVar_56924 = ROM.rd(cppVar_56923);
	bool cppVar_56926 = (cppVar_56924 == 131);
	BIT_VEC cppVar_56927 = PC + 1;
	cppVar_56927 = (cppVar_56927 & cppMask_un_16_);
	BIT_VEC cppVar_56928 = ROM.rd(cppVar_56927);
	bool cppVar_56930 = (cppVar_56928 == 135);
	BIT_VEC cppVar_56931 = PC + 1;
	cppVar_56931 = (cppVar_56931 & cppMask_un_16_);
	BIT_VEC cppVar_56932 = ROM.rd(cppVar_56931);
	bool cppVar_56934 = (cppVar_56932 == 136);
	BIT_VEC cppVar_56935 = PC + 1;
	cppVar_56935 = (cppVar_56935 & cppMask_un_16_);
	BIT_VEC cppVar_56936 = ROM.rd(cppVar_56935);
	bool cppVar_56938 = (cppVar_56936 == 137);
	BIT_VEC cppVar_56939 = PC + 1;
	cppVar_56939 = (cppVar_56939 & cppMask_un_16_);
	BIT_VEC cppVar_56940 = ROM.rd(cppVar_56939);
	bool cppVar_56942 = (cppVar_56940 == 138);
	BIT_VEC cppVar_56943 = PC + 1;
	cppVar_56943 = (cppVar_56943 & cppMask_un_16_);
	BIT_VEC cppVar_56944 = ROM.rd(cppVar_56943);
	bool cppVar_56946 = (cppVar_56944 == 140);
	BIT_VEC cppVar_56947 = PC + 1;
	cppVar_56947 = (cppVar_56947 & cppMask_un_16_);
	BIT_VEC cppVar_56948 = ROM.rd(cppVar_56947);
	bool cppVar_56950 = (cppVar_56948 == 139);
	BIT_VEC cppVar_56951 = PC + 1;
	cppVar_56951 = (cppVar_56951 & cppMask_un_16_);
	BIT_VEC cppVar_56952 = ROM.rd(cppVar_56951);
	bool cppVar_56954 = (cppVar_56952 == 141);
	BIT_VEC cppVar_56955 = PC + 1;
	cppVar_56955 = (cppVar_56955 & cppMask_un_16_);
	BIT_VEC cppVar_56956 = ROM.rd(cppVar_56955);
	bool cppVar_56958 = (cppVar_56956 == 144);
	BIT_VEC cppVar_56959 = PC + 1;
	cppVar_56959 = (cppVar_56959 & cppMask_un_16_);
	BIT_VEC cppVar_56960 = ROM.rd(cppVar_56959);
	bool cppVar_56962 = (cppVar_56960 == 152);
	BIT_VEC cppVar_56963 = PC + 1;
	cppVar_56963 = (cppVar_56963 & cppMask_un_16_);
	BIT_VEC cppVar_56964 = ROM.rd(cppVar_56963);
	bool cppVar_56966 = (cppVar_56964 == 153);
	BIT_VEC cppVar_56967 = PC + 1;
	cppVar_56967 = (cppVar_56967 & cppMask_un_16_);
	BIT_VEC cppVar_56968 = ROM.rd(cppVar_56967);
	bool cppVar_56970 = (cppVar_56968 == 160);
	BIT_VEC cppVar_56971 = PC + 1;
	cppVar_56971 = (cppVar_56971 & cppMask_un_16_);
	BIT_VEC cppVar_56972 = ROM.rd(cppVar_56971);
	bool cppVar_56974 = (cppVar_56972 == 168);
	BIT_VEC cppVar_56975 = PC + 1;
	cppVar_56975 = (cppVar_56975 & cppMask_un_16_);
	BIT_VEC cppVar_56976 = ROM.rd(cppVar_56975);
	bool cppVar_56978 = (cppVar_56976 == 176);
	BIT_VEC cppVar_56979 = PC + 1;
	cppVar_56979 = (cppVar_56979 & cppMask_un_16_);
	BIT_VEC cppVar_56980 = ROM.rd(cppVar_56979);
	bool cppVar_56982 = (cppVar_56980 == 184);
	BIT_VEC cppVar_56983 = PC + 1;
	cppVar_56983 = (cppVar_56983 & cppMask_un_16_);
	BIT_VEC cppVar_56984 = ROM.rd(cppVar_56983);
	bool cppVar_56986 = (cppVar_56984 == 208);
	BIT_VEC cppVar_56987 = PC + 1;
	cppVar_56987 = (cppVar_56987 & cppMask_un_16_);
	BIT_VEC cppVar_56988 = ROM.rd(cppVar_56987);
	bool cppVar_56990 = (cppVar_56988 == 224);
	BIT_VEC cppVar_56991 = PC + 1;
	cppVar_56991 = (cppVar_56991 & cppMask_un_16_);
	BIT_VEC cppVar_56992 = ROM.rd(cppVar_56991);
	bool cppVar_56994 = (cppVar_56992 == 240);
	BIT_VEC cppVar_56996 = (cppVar_56994) ? B : 0;
	BIT_VEC cppVar_56997 = (cppVar_56990) ? ACC : cppVar_56996;
	BIT_VEC cppVar_56998 = (cppVar_56986) ? PSW : cppVar_56997;
	BIT_VEC cppVar_56999 = (cppVar_56982) ? IP : cppVar_56998;
	BIT_VEC cppVar_57000 = (cppVar_56978) ? P3 : cppVar_56999;
	BIT_VEC cppVar_57001 = (cppVar_56974) ? IE : cppVar_57000;
	BIT_VEC cppVar_57002 = (cppVar_56970) ? P2 : cppVar_57001;
	BIT_VEC cppVar_57003 = (cppVar_56966) ? SBUF : cppVar_57002;
	BIT_VEC cppVar_57004 = (cppVar_56962) ? SCON : cppVar_57003;
	BIT_VEC cppVar_57005 = (cppVar_56958) ? P1 : cppVar_57004;
	BIT_VEC cppVar_57006 = (cppVar_56954) ? TH1 : cppVar_57005;
	BIT_VEC cppVar_57007 = (cppVar_56950) ? TL1 : cppVar_57006;
	BIT_VEC cppVar_57008 = (cppVar_56946) ? TH0 : cppVar_57007;
	BIT_VEC cppVar_57009 = (cppVar_56942) ? TL0 : cppVar_57008;
	BIT_VEC cppVar_57010 = (cppVar_56938) ? TMOD : cppVar_57009;
	BIT_VEC cppVar_57011 = (cppVar_56934) ? TCON : cppVar_57010;
	BIT_VEC cppVar_57012 = (cppVar_56930) ? PCON : cppVar_57011;
	BIT_VEC cppVar_57013 = (cppVar_56926) ? DPH : cppVar_57012;
	BIT_VEC cppVar_57014 = (cppVar_56922) ? DPL : cppVar_57013;
	BIT_VEC cppVar_57015 = (cppVar_56918) ? SP : cppVar_57014;
	BIT_VEC cppVar_57016 = (cppVar_56914) ? P0 : cppVar_57015;
	BIT_VEC cppVar_57017 = (cppVar_56907) ? cppVar_56910 : cppVar_57016;
	BIT_VEC cppVar_57019 = cppVar_57017 + 1;
	cppVar_57019 = (cppVar_57019 & cppMask_un_8_);
	BIT_VEC cppVar_57020 = (cppVar_56902) ? cppVar_57019 : PSW;
	BIT_VEC cppVar_57021 = (cppVar_56897) ? cppVar_57020 : PSW;
	BIT_VEC cppVar_57022 = (cppVar_56466) ? cppVar_56894 : cppVar_57021;
	BIT_VEC cppVar_57023 = (cppVar_56450) ? cppVar_56459 : cppVar_57022;
	BIT_VEC cppVar_57024 = (cppVar_56324) ? cppVar_56447 : cppVar_57023;
	BIT_VEC cppVar_57025 = (cppVar_56271) ? cppVar_56317 : cppVar_57024;
	BIT_VEC cppVar_57026 = (cppVar_55839) ? cppVar_56268 : cppVar_57025;
	BIT_VEC cppVar_57027 = (cppVar_55777) ? cppVar_55836 : cppVar_57026;
	BIT_VEC cppVar_57028 = (cppVar_55715) ? cppVar_55774 : cppVar_57027;
	BIT_VEC cppVar_57029 = (cppVar_55657) ? cppVar_55712 : cppVar_57028;
	BIT_VEC cppVar_57030 = (cppVar_55599) ? cppVar_55654 : cppVar_57029;
	BIT_VEC cppVar_57031 = (cppVar_55541) ? cppVar_55596 : cppVar_57030;
	BIT_VEC cppVar_57032 = (cppVar_55483) ? cppVar_55538 : cppVar_57031;
	BIT_VEC cppVar_57033 = (cppVar_55425) ? cppVar_55480 : cppVar_57032;
	BIT_VEC cppVar_57034 = (cppVar_55367) ? cppVar_55422 : cppVar_57033;
	BIT_VEC cppVar_57035 = (cppVar_55309) ? cppVar_55364 : cppVar_57034;
	BIT_VEC cppVar_57036 = (cppVar_55251) ? cppVar_55306 : cppVar_57035;
	BIT_VEC cppVar_57037 = (cppVar_55239) ? cppVar_55248 : cppVar_57036;
	BIT_VEC cppVar_57038 = (cppVar_55187) ? cppVar_55236 : cppVar_57037;
	BIT_VEC cppVar_57039 = (cppVar_54752) ? cppVar_55184 : cppVar_57038;
	BIT_VEC cppVar_57040 = (cppVar_54687) ? cppVar_54749 : cppVar_57039;
	BIT_VEC cppVar_57041 = (cppVar_54622) ? cppVar_54684 : cppVar_57040;
	BIT_VEC cppVar_57042 = (cppVar_54561) ? cppVar_54619 : cppVar_57041;
	BIT_VEC cppVar_57043 = (cppVar_54500) ? cppVar_54558 : cppVar_57042;
	BIT_VEC cppVar_57044 = (cppVar_54439) ? cppVar_54497 : cppVar_57043;
	BIT_VEC cppVar_57045 = (cppVar_54378) ? cppVar_54436 : cppVar_57044;
	BIT_VEC cppVar_57046 = (cppVar_54317) ? cppVar_54375 : cppVar_57045;
	BIT_VEC cppVar_57047 = (cppVar_54256) ? cppVar_54314 : cppVar_57046;
	BIT_VEC cppVar_57048 = (cppVar_54195) ? cppVar_54253 : cppVar_57047;
	BIT_VEC cppVar_57049 = (cppVar_54134) ? cppVar_54192 : cppVar_57048;
	BIT_VEC cppVar_57050 = (cppVar_54009) ? cppVar_54131 : cppVar_57049;
	BIT_VEC cppVar_57051 = (cppVar_53881) ? cppVar_54006 : cppVar_57050;
	BIT_VEC cppVar_57052 = (cppVar_53756) ? cppVar_53878 : cppVar_57051;
	BIT_VEC cppVar_57053 = (cppVar_53628) ? cppVar_53753 : cppVar_57052;
	BIT_VEC cppVar_57054 = (cppVar_53503) ? cppVar_53625 : cppVar_57053;
	BIT_VEC cppVar_57055 = (cppVar_53375) ? cppVar_53500 : cppVar_57054;
	BIT_VEC cppVar_57056 = (cppVar_52969) ? cppVar_53372 : cppVar_57055;
	BIT_VEC cppVar_57057 = (cppVar_52957) ? cppVar_52966 : cppVar_57056;
	BIT_VEC cppVar_57058 = (cppVar_52551) ? cppVar_52954 : cppVar_57057;
	BIT_VEC cppVar_57059 = (cppVar_52537) ? cppVar_52548 : cppVar_57058;
	BIT_VEC cppVar_57060 = (cppVar_52412) ? cppVar_52534 : cppVar_57059;
	BIT_VEC cppVar_57061 = (cppVar_52396) ? cppVar_52409 : cppVar_57060;
	BIT_VEC cppVar_57062 = (cppVar_52380) ? cppVar_52393 : cppVar_57061;
	BIT_VEC cppVar_57063 = (cppVar_52231) ? cppVar_52377 : cppVar_57062;
	BIT_VEC cppVar_57064 = (cppVar_52082) ? cppVar_52228 : cppVar_57063;
	BIT_VEC cppVar_57065 = (cppVar_51933) ? cppVar_52079 : cppVar_57064;
	BIT_VEC cppVar_57066 = (cppVar_51784) ? cppVar_51930 : cppVar_57065;
	BIT_VEC cppVar_57067 = (cppVar_51635) ? cppVar_51781 : cppVar_57066;
	BIT_VEC cppVar_57068 = (cppVar_51486) ? cppVar_51632 : cppVar_57067;
	BIT_VEC cppVar_57069 = (cppVar_51337) ? cppVar_51483 : cppVar_57068;
	BIT_VEC cppVar_57070 = (cppVar_51188) ? cppVar_51334 : cppVar_57069;
	BIT_VEC cppVar_57071 = (cppVar_50757) ? cppVar_51185 : cppVar_57070;
	BIT_VEC cppVar_57072 = (cppVar_50703) ? cppVar_50754 : cppVar_57071;
	BIT_VEC cppVar_57073 = (cppVar_50266) ? cppVar_50700 : cppVar_57072;
	BIT_VEC cppVar_57074 = (cppVar_50197) ? cppVar_50263 : cppVar_57073;
	BIT_VEC cppVar_57075 = (cppVar_50128) ? cppVar_50194 : cppVar_57074;
	BIT_VEC cppVar_57076 = (cppVar_50065) ? cppVar_50125 : cppVar_57075;
	BIT_VEC cppVar_57077 = (cppVar_50002) ? cppVar_50062 : cppVar_57076;
	BIT_VEC cppVar_57078 = (cppVar_49939) ? cppVar_49999 : cppVar_57077;
	BIT_VEC cppVar_57079 = (cppVar_49876) ? cppVar_49936 : cppVar_57078;
	BIT_VEC cppVar_57080 = (cppVar_49813) ? cppVar_49873 : cppVar_57079;
	BIT_VEC cppVar_57081 = (cppVar_49750) ? cppVar_49810 : cppVar_57080;
	BIT_VEC cppVar_57082 = (cppVar_49687) ? cppVar_49747 : cppVar_57081;
	BIT_VEC cppVar_57083 = (cppVar_49624) ? cppVar_49684 : cppVar_57082;
	BIT_VEC cppVar_57084 = (cppVar_49217) ? cppVar_49621 : cppVar_57083;
	BIT_VEC cppVar_57085 = (cppVar_48813) ? cppVar_49214 : cppVar_57084;
	BIT_VEC cppVar_57086 = (cppVar_48795) ? cppVar_48810 : cppVar_57085;
	BIT_VEC cppVar_57087 = (cppVar_48388) ? cppVar_48792 : cppVar_57086;
	BIT_VEC cppVar_57088 = (cppVar_47559) ? cppVar_48385 : cppVar_57087;
	BIT_VEC cppVar_57089 = (cppVar_47552) ? cppVar_47556 : cppVar_57088;
	BIT_VEC cppVar_57090 = (cppVar_47540) ? cppVar_47549 : cppVar_57089;
	BIT_VEC cppVar_57091 = (cppVar_47415) ? cppVar_47537 : cppVar_57090;
	BIT_VEC cppVar_57092 = (cppVar_47396) ? cppVar_47412 : cppVar_57091;
	BIT_VEC cppVar_57093 = (cppVar_47377) ? cppVar_47393 : cppVar_57092;
	BIT_VEC cppVar_57094 = (cppVar_47359) ? cppVar_47374 : cppVar_57093;
	BIT_VEC cppVar_57095 = (cppVar_47341) ? cppVar_47356 : cppVar_57094;
	BIT_VEC cppVar_57096 = (cppVar_47323) ? cppVar_47338 : cppVar_57095;
	BIT_VEC cppVar_57097 = (cppVar_47305) ? cppVar_47320 : cppVar_57096;
	BIT_VEC cppVar_57098 = (cppVar_47287) ? cppVar_47302 : cppVar_57097;
	BIT_VEC cppVar_57099 = (cppVar_47269) ? cppVar_47284 : cppVar_57098;
	BIT_VEC cppVar_57100 = (cppVar_47251) ? cppVar_47266 : cppVar_57099;
	BIT_VEC cppVar_57101 = (cppVar_47233) ? cppVar_47248 : cppVar_57100;
	BIT_VEC cppVar_57102 = (cppVar_47227) ? cppVar_47230 : cppVar_57101;
	BIT_VEC cppVar_57103 = (cppVar_47218) ? cppVar_47224 : cppVar_57102;
	BIT_VEC cppVar_57104 = (cppVar_47204) ? cppVar_47211 : cppVar_57103;
	BIT_VEC cppVar_57105 = (cppVar_46773) ? cppVar_47201 : cppVar_57104;
	BIT_VEC cppVar_57106 = (cppVar_46767) ? cppVar_46770 : cppVar_57105;
	BIT_VEC cppVar_57107 = (cppVar_46697) ? cppVar_46764 : cppVar_57106;
	return cppVar_57107;
}
