#include "common.hpp"
#include "model_oc8051_class.hpp"

BIT_VEC model_oc8051::cppUpdateFun_DPH()
{
	BIT_VEC cppVar_7516 = ROM.rd(PC);
	bool cppVar_7518 = (cppVar_7516 == 208);
	BIT_VEC cppVar_7520 = PC + 1;
	cppVar_7520 = (cppVar_7520 & cppMask_un_16_);
	BIT_VEC cppVar_7521 = ROM.rd(cppVar_7520);
	bool cppVar_7523 = (cppVar_7521 == 131);
	BIT_VEC cppVar_7524 = IRAM.rd(SP);
	BIT_VEC cppVar_7525 = (cppVar_7523) ? cppVar_7524 : DPH;
	BIT_VEC cppVar_7526 = ROM.rd(PC);
	bool cppVar_7528 = (cppVar_7526 == 245);
	BIT_VEC cppVar_7529 = ROM.rd(PC);
	bool cppVar_7531 = (cppVar_7529 == 197);
	bool cppVar_7532 = cppVar_7528 || cppVar_7531;
	BIT_VEC cppVar_7534 = PC + 1;
	cppVar_7534 = (cppVar_7534 & cppMask_un_16_);
	BIT_VEC cppVar_7535 = ROM.rd(cppVar_7534);
	bool cppVar_7537 = (cppVar_7535 == 131);
	BIT_VEC cppVar_7538 = (cppVar_7537) ? ACC : DPH;
	BIT_VEC cppVar_7539 = ROM.rd(PC);
	bool cppVar_7541 = (cppVar_7539 == 144);
	BIT_VEC cppVar_7543 = PC + 1;
	cppVar_7543 = (cppVar_7543 & cppMask_un_16_);
	BIT_VEC cppVar_7544 = ROM.rd(cppVar_7543);
	bool cppVar_7546 = (cppVar_7544 == 131);
	BIT_VEC cppVar_7547 = PC + 1;
	cppVar_7547 = (cppVar_7547 & cppMask_un_16_);
	BIT_VEC cppVar_7548 = ROM.rd(cppVar_7547);
	BIT_VEC cppVar_7549 = (cppVar_7546) ? cppVar_7548 : DPH;
	BIT_VEC cppVar_7550 = ROM.rd(PC);
	bool cppVar_7552 = (cppVar_7550 == 143);
	BIT_VEC cppVar_7554 = PC + 1;
	cppVar_7554 = (cppVar_7554 & cppMask_un_16_);
	BIT_VEC cppVar_7555 = ROM.rd(cppVar_7554);
	bool cppVar_7557 = (cppVar_7555 == 131);
	BIT_VEC cppVar_7559 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7561 = (cppVar_7559 << 3) | 7;
	cppVar_7561 = (cppVar_7561 & cppMask_un_5_);
	BIT_VEC cppVar_7562 = (0 << 5) | cppVar_7561;
	cppVar_7562 = (cppVar_7562 & cppMask_un_8_);
	BIT_VEC cppVar_7563 = (cppVar_7562 >> 7) & cppMask_un_1_;
	bool cppVar_7565 = (cppVar_7563 == 0);
	BIT_VEC cppVar_7566 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7567 = (cppVar_7566 << 3) | 7;
	cppVar_7567 = (cppVar_7567 & cppMask_un_5_);
	BIT_VEC cppVar_7568 = (0 << 5) | cppVar_7567;
	cppVar_7568 = (cppVar_7568 & cppMask_un_8_);
	BIT_VEC cppVar_7569 = IRAM.rd(cppVar_7568);
	BIT_VEC cppVar_7570 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7571 = (cppVar_7570 << 3) | 7;
	cppVar_7571 = (cppVar_7571 & cppMask_un_5_);
	BIT_VEC cppVar_7572 = (0 << 5) | cppVar_7571;
	cppVar_7572 = (cppVar_7572 & cppMask_un_8_);
	bool cppVar_7574 = (cppVar_7572 == 128);
	BIT_VEC cppVar_7575 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7576 = (cppVar_7575 << 3) | 7;
	cppVar_7576 = (cppVar_7576 & cppMask_un_5_);
	BIT_VEC cppVar_7577 = (0 << 5) | cppVar_7576;
	cppVar_7577 = (cppVar_7577 & cppMask_un_8_);
	bool cppVar_7579 = (cppVar_7577 == 129);
	BIT_VEC cppVar_7580 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7581 = (cppVar_7580 << 3) | 7;
	cppVar_7581 = (cppVar_7581 & cppMask_un_5_);
	BIT_VEC cppVar_7582 = (0 << 5) | cppVar_7581;
	cppVar_7582 = (cppVar_7582 & cppMask_un_8_);
	bool cppVar_7584 = (cppVar_7582 == 130);
	BIT_VEC cppVar_7585 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7586 = (cppVar_7585 << 3) | 7;
	cppVar_7586 = (cppVar_7586 & cppMask_un_5_);
	BIT_VEC cppVar_7587 = (0 << 5) | cppVar_7586;
	cppVar_7587 = (cppVar_7587 & cppMask_un_8_);
	bool cppVar_7589 = (cppVar_7587 == 131);
	BIT_VEC cppVar_7590 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7591 = (cppVar_7590 << 3) | 7;
	cppVar_7591 = (cppVar_7591 & cppMask_un_5_);
	BIT_VEC cppVar_7592 = (0 << 5) | cppVar_7591;
	cppVar_7592 = (cppVar_7592 & cppMask_un_8_);
	bool cppVar_7594 = (cppVar_7592 == 135);
	BIT_VEC cppVar_7595 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7596 = (cppVar_7595 << 3) | 7;
	cppVar_7596 = (cppVar_7596 & cppMask_un_5_);
	BIT_VEC cppVar_7597 = (0 << 5) | cppVar_7596;
	cppVar_7597 = (cppVar_7597 & cppMask_un_8_);
	bool cppVar_7599 = (cppVar_7597 == 136);
	BIT_VEC cppVar_7600 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7601 = (cppVar_7600 << 3) | 7;
	cppVar_7601 = (cppVar_7601 & cppMask_un_5_);
	BIT_VEC cppVar_7602 = (0 << 5) | cppVar_7601;
	cppVar_7602 = (cppVar_7602 & cppMask_un_8_);
	bool cppVar_7604 = (cppVar_7602 == 137);
	BIT_VEC cppVar_7605 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7606 = (cppVar_7605 << 3) | 7;
	cppVar_7606 = (cppVar_7606 & cppMask_un_5_);
	BIT_VEC cppVar_7607 = (0 << 5) | cppVar_7606;
	cppVar_7607 = (cppVar_7607 & cppMask_un_8_);
	bool cppVar_7609 = (cppVar_7607 == 138);
	BIT_VEC cppVar_7610 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7611 = (cppVar_7610 << 3) | 7;
	cppVar_7611 = (cppVar_7611 & cppMask_un_5_);
	BIT_VEC cppVar_7612 = (0 << 5) | cppVar_7611;
	cppVar_7612 = (cppVar_7612 & cppMask_un_8_);
	bool cppVar_7614 = (cppVar_7612 == 140);
	BIT_VEC cppVar_7615 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7616 = (cppVar_7615 << 3) | 7;
	cppVar_7616 = (cppVar_7616 & cppMask_un_5_);
	BIT_VEC cppVar_7617 = (0 << 5) | cppVar_7616;
	cppVar_7617 = (cppVar_7617 & cppMask_un_8_);
	bool cppVar_7619 = (cppVar_7617 == 139);
	BIT_VEC cppVar_7620 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7621 = (cppVar_7620 << 3) | 7;
	cppVar_7621 = (cppVar_7621 & cppMask_un_5_);
	BIT_VEC cppVar_7622 = (0 << 5) | cppVar_7621;
	cppVar_7622 = (cppVar_7622 & cppMask_un_8_);
	bool cppVar_7624 = (cppVar_7622 == 141);
	BIT_VEC cppVar_7625 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7626 = (cppVar_7625 << 3) | 7;
	cppVar_7626 = (cppVar_7626 & cppMask_un_5_);
	BIT_VEC cppVar_7627 = (0 << 5) | cppVar_7626;
	cppVar_7627 = (cppVar_7627 & cppMask_un_8_);
	bool cppVar_7629 = (cppVar_7627 == 144);
	BIT_VEC cppVar_7630 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7631 = (cppVar_7630 << 3) | 7;
	cppVar_7631 = (cppVar_7631 & cppMask_un_5_);
	BIT_VEC cppVar_7632 = (0 << 5) | cppVar_7631;
	cppVar_7632 = (cppVar_7632 & cppMask_un_8_);
	bool cppVar_7634 = (cppVar_7632 == 152);
	BIT_VEC cppVar_7635 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7636 = (cppVar_7635 << 3) | 7;
	cppVar_7636 = (cppVar_7636 & cppMask_un_5_);
	BIT_VEC cppVar_7637 = (0 << 5) | cppVar_7636;
	cppVar_7637 = (cppVar_7637 & cppMask_un_8_);
	bool cppVar_7639 = (cppVar_7637 == 153);
	BIT_VEC cppVar_7640 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7641 = (cppVar_7640 << 3) | 7;
	cppVar_7641 = (cppVar_7641 & cppMask_un_5_);
	BIT_VEC cppVar_7642 = (0 << 5) | cppVar_7641;
	cppVar_7642 = (cppVar_7642 & cppMask_un_8_);
	bool cppVar_7644 = (cppVar_7642 == 160);
	BIT_VEC cppVar_7645 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7646 = (cppVar_7645 << 3) | 7;
	cppVar_7646 = (cppVar_7646 & cppMask_un_5_);
	BIT_VEC cppVar_7647 = (0 << 5) | cppVar_7646;
	cppVar_7647 = (cppVar_7647 & cppMask_un_8_);
	bool cppVar_7649 = (cppVar_7647 == 168);
	BIT_VEC cppVar_7650 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7651 = (cppVar_7650 << 3) | 7;
	cppVar_7651 = (cppVar_7651 & cppMask_un_5_);
	BIT_VEC cppVar_7652 = (0 << 5) | cppVar_7651;
	cppVar_7652 = (cppVar_7652 & cppMask_un_8_);
	bool cppVar_7654 = (cppVar_7652 == 176);
	BIT_VEC cppVar_7655 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7656 = (cppVar_7655 << 3) | 7;
	cppVar_7656 = (cppVar_7656 & cppMask_un_5_);
	BIT_VEC cppVar_7657 = (0 << 5) | cppVar_7656;
	cppVar_7657 = (cppVar_7657 & cppMask_un_8_);
	bool cppVar_7659 = (cppVar_7657 == 184);
	BIT_VEC cppVar_7660 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7661 = (cppVar_7660 << 3) | 7;
	cppVar_7661 = (cppVar_7661 & cppMask_un_5_);
	BIT_VEC cppVar_7662 = (0 << 5) | cppVar_7661;
	cppVar_7662 = (cppVar_7662 & cppMask_un_8_);
	bool cppVar_7664 = (cppVar_7662 == 208);
	BIT_VEC cppVar_7665 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7666 = (cppVar_7665 << 3) | 7;
	cppVar_7666 = (cppVar_7666 & cppMask_un_5_);
	BIT_VEC cppVar_7667 = (0 << 5) | cppVar_7666;
	cppVar_7667 = (cppVar_7667 & cppMask_un_8_);
	bool cppVar_7669 = (cppVar_7667 == 224);
	BIT_VEC cppVar_7670 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7671 = (cppVar_7670 << 3) | 7;
	cppVar_7671 = (cppVar_7671 & cppMask_un_5_);
	BIT_VEC cppVar_7672 = (0 << 5) | cppVar_7671;
	cppVar_7672 = (cppVar_7672 & cppMask_un_8_);
	bool cppVar_7674 = (cppVar_7672 == 240);
	BIT_VEC cppVar_7676 = (cppVar_7674) ? B : 0;
	BIT_VEC cppVar_7677 = (cppVar_7669) ? ACC : cppVar_7676;
	BIT_VEC cppVar_7678 = (cppVar_7664) ? PSW : cppVar_7677;
	BIT_VEC cppVar_7679 = (cppVar_7659) ? IP : cppVar_7678;
	BIT_VEC cppVar_7680 = (cppVar_7654) ? P3 : cppVar_7679;
	BIT_VEC cppVar_7681 = (cppVar_7649) ? IE : cppVar_7680;
	BIT_VEC cppVar_7682 = (cppVar_7644) ? P2 : cppVar_7681;
	BIT_VEC cppVar_7683 = (cppVar_7639) ? SBUF : cppVar_7682;
	BIT_VEC cppVar_7684 = (cppVar_7634) ? SCON : cppVar_7683;
	BIT_VEC cppVar_7685 = (cppVar_7629) ? P1 : cppVar_7684;
	BIT_VEC cppVar_7686 = (cppVar_7624) ? TH1 : cppVar_7685;
	BIT_VEC cppVar_7687 = (cppVar_7619) ? TL1 : cppVar_7686;
	BIT_VEC cppVar_7688 = (cppVar_7614) ? TH0 : cppVar_7687;
	BIT_VEC cppVar_7689 = (cppVar_7609) ? TL0 : cppVar_7688;
	BIT_VEC cppVar_7690 = (cppVar_7604) ? TMOD : cppVar_7689;
	BIT_VEC cppVar_7691 = (cppVar_7599) ? TCON : cppVar_7690;
	BIT_VEC cppVar_7692 = (cppVar_7594) ? PCON : cppVar_7691;
	BIT_VEC cppVar_7693 = (cppVar_7589) ? DPH : cppVar_7692;
	BIT_VEC cppVar_7694 = (cppVar_7584) ? DPL : cppVar_7693;
	BIT_VEC cppVar_7695 = (cppVar_7579) ? SP : cppVar_7694;
	BIT_VEC cppVar_7696 = (cppVar_7574) ? P0 : cppVar_7695;
	BIT_VEC cppVar_7697 = (cppVar_7565) ? cppVar_7569 : cppVar_7696;
	BIT_VEC cppVar_7698 = (cppVar_7557) ? cppVar_7697 : DPH;
	BIT_VEC cppVar_7699 = ROM.rd(PC);
	bool cppVar_7701 = (cppVar_7699 == 142);
	BIT_VEC cppVar_7703 = PC + 1;
	cppVar_7703 = (cppVar_7703 & cppMask_un_16_);
	BIT_VEC cppVar_7704 = ROM.rd(cppVar_7703);
	bool cppVar_7706 = (cppVar_7704 == 131);
	BIT_VEC cppVar_7708 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7710 = (cppVar_7708 << 3) | 6;
	cppVar_7710 = (cppVar_7710 & cppMask_un_5_);
	BIT_VEC cppVar_7711 = (0 << 5) | cppVar_7710;
	cppVar_7711 = (cppVar_7711 & cppMask_un_8_);
	BIT_VEC cppVar_7712 = (cppVar_7711 >> 7) & cppMask_un_1_;
	bool cppVar_7714 = (cppVar_7712 == 0);
	BIT_VEC cppVar_7715 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7716 = (cppVar_7715 << 3) | 6;
	cppVar_7716 = (cppVar_7716 & cppMask_un_5_);
	BIT_VEC cppVar_7717 = (0 << 5) | cppVar_7716;
	cppVar_7717 = (cppVar_7717 & cppMask_un_8_);
	BIT_VEC cppVar_7718 = IRAM.rd(cppVar_7717);
	BIT_VEC cppVar_7719 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7720 = (cppVar_7719 << 3) | 6;
	cppVar_7720 = (cppVar_7720 & cppMask_un_5_);
	BIT_VEC cppVar_7721 = (0 << 5) | cppVar_7720;
	cppVar_7721 = (cppVar_7721 & cppMask_un_8_);
	bool cppVar_7723 = (cppVar_7721 == 128);
	BIT_VEC cppVar_7724 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7725 = (cppVar_7724 << 3) | 6;
	cppVar_7725 = (cppVar_7725 & cppMask_un_5_);
	BIT_VEC cppVar_7726 = (0 << 5) | cppVar_7725;
	cppVar_7726 = (cppVar_7726 & cppMask_un_8_);
	bool cppVar_7728 = (cppVar_7726 == 129);
	BIT_VEC cppVar_7729 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7730 = (cppVar_7729 << 3) | 6;
	cppVar_7730 = (cppVar_7730 & cppMask_un_5_);
	BIT_VEC cppVar_7731 = (0 << 5) | cppVar_7730;
	cppVar_7731 = (cppVar_7731 & cppMask_un_8_);
	bool cppVar_7733 = (cppVar_7731 == 130);
	BIT_VEC cppVar_7734 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7735 = (cppVar_7734 << 3) | 6;
	cppVar_7735 = (cppVar_7735 & cppMask_un_5_);
	BIT_VEC cppVar_7736 = (0 << 5) | cppVar_7735;
	cppVar_7736 = (cppVar_7736 & cppMask_un_8_);
	bool cppVar_7738 = (cppVar_7736 == 131);
	BIT_VEC cppVar_7739 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7740 = (cppVar_7739 << 3) | 6;
	cppVar_7740 = (cppVar_7740 & cppMask_un_5_);
	BIT_VEC cppVar_7741 = (0 << 5) | cppVar_7740;
	cppVar_7741 = (cppVar_7741 & cppMask_un_8_);
	bool cppVar_7743 = (cppVar_7741 == 135);
	BIT_VEC cppVar_7744 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7745 = (cppVar_7744 << 3) | 6;
	cppVar_7745 = (cppVar_7745 & cppMask_un_5_);
	BIT_VEC cppVar_7746 = (0 << 5) | cppVar_7745;
	cppVar_7746 = (cppVar_7746 & cppMask_un_8_);
	bool cppVar_7748 = (cppVar_7746 == 136);
	BIT_VEC cppVar_7749 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7750 = (cppVar_7749 << 3) | 6;
	cppVar_7750 = (cppVar_7750 & cppMask_un_5_);
	BIT_VEC cppVar_7751 = (0 << 5) | cppVar_7750;
	cppVar_7751 = (cppVar_7751 & cppMask_un_8_);
	bool cppVar_7753 = (cppVar_7751 == 137);
	BIT_VEC cppVar_7754 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7755 = (cppVar_7754 << 3) | 6;
	cppVar_7755 = (cppVar_7755 & cppMask_un_5_);
	BIT_VEC cppVar_7756 = (0 << 5) | cppVar_7755;
	cppVar_7756 = (cppVar_7756 & cppMask_un_8_);
	bool cppVar_7758 = (cppVar_7756 == 138);
	BIT_VEC cppVar_7759 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7760 = (cppVar_7759 << 3) | 6;
	cppVar_7760 = (cppVar_7760 & cppMask_un_5_);
	BIT_VEC cppVar_7761 = (0 << 5) | cppVar_7760;
	cppVar_7761 = (cppVar_7761 & cppMask_un_8_);
	bool cppVar_7763 = (cppVar_7761 == 140);
	BIT_VEC cppVar_7764 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7765 = (cppVar_7764 << 3) | 6;
	cppVar_7765 = (cppVar_7765 & cppMask_un_5_);
	BIT_VEC cppVar_7766 = (0 << 5) | cppVar_7765;
	cppVar_7766 = (cppVar_7766 & cppMask_un_8_);
	bool cppVar_7768 = (cppVar_7766 == 139);
	BIT_VEC cppVar_7769 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7770 = (cppVar_7769 << 3) | 6;
	cppVar_7770 = (cppVar_7770 & cppMask_un_5_);
	BIT_VEC cppVar_7771 = (0 << 5) | cppVar_7770;
	cppVar_7771 = (cppVar_7771 & cppMask_un_8_);
	bool cppVar_7773 = (cppVar_7771 == 141);
	BIT_VEC cppVar_7774 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7775 = (cppVar_7774 << 3) | 6;
	cppVar_7775 = (cppVar_7775 & cppMask_un_5_);
	BIT_VEC cppVar_7776 = (0 << 5) | cppVar_7775;
	cppVar_7776 = (cppVar_7776 & cppMask_un_8_);
	bool cppVar_7778 = (cppVar_7776 == 144);
	BIT_VEC cppVar_7779 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7780 = (cppVar_7779 << 3) | 6;
	cppVar_7780 = (cppVar_7780 & cppMask_un_5_);
	BIT_VEC cppVar_7781 = (0 << 5) | cppVar_7780;
	cppVar_7781 = (cppVar_7781 & cppMask_un_8_);
	bool cppVar_7783 = (cppVar_7781 == 152);
	BIT_VEC cppVar_7784 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7785 = (cppVar_7784 << 3) | 6;
	cppVar_7785 = (cppVar_7785 & cppMask_un_5_);
	BIT_VEC cppVar_7786 = (0 << 5) | cppVar_7785;
	cppVar_7786 = (cppVar_7786 & cppMask_un_8_);
	bool cppVar_7788 = (cppVar_7786 == 153);
	BIT_VEC cppVar_7789 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7790 = (cppVar_7789 << 3) | 6;
	cppVar_7790 = (cppVar_7790 & cppMask_un_5_);
	BIT_VEC cppVar_7791 = (0 << 5) | cppVar_7790;
	cppVar_7791 = (cppVar_7791 & cppMask_un_8_);
	bool cppVar_7793 = (cppVar_7791 == 160);
	BIT_VEC cppVar_7794 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7795 = (cppVar_7794 << 3) | 6;
	cppVar_7795 = (cppVar_7795 & cppMask_un_5_);
	BIT_VEC cppVar_7796 = (0 << 5) | cppVar_7795;
	cppVar_7796 = (cppVar_7796 & cppMask_un_8_);
	bool cppVar_7798 = (cppVar_7796 == 168);
	BIT_VEC cppVar_7799 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7800 = (cppVar_7799 << 3) | 6;
	cppVar_7800 = (cppVar_7800 & cppMask_un_5_);
	BIT_VEC cppVar_7801 = (0 << 5) | cppVar_7800;
	cppVar_7801 = (cppVar_7801 & cppMask_un_8_);
	bool cppVar_7803 = (cppVar_7801 == 176);
	BIT_VEC cppVar_7804 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7805 = (cppVar_7804 << 3) | 6;
	cppVar_7805 = (cppVar_7805 & cppMask_un_5_);
	BIT_VEC cppVar_7806 = (0 << 5) | cppVar_7805;
	cppVar_7806 = (cppVar_7806 & cppMask_un_8_);
	bool cppVar_7808 = (cppVar_7806 == 184);
	BIT_VEC cppVar_7809 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7810 = (cppVar_7809 << 3) | 6;
	cppVar_7810 = (cppVar_7810 & cppMask_un_5_);
	BIT_VEC cppVar_7811 = (0 << 5) | cppVar_7810;
	cppVar_7811 = (cppVar_7811 & cppMask_un_8_);
	bool cppVar_7813 = (cppVar_7811 == 208);
	BIT_VEC cppVar_7814 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7815 = (cppVar_7814 << 3) | 6;
	cppVar_7815 = (cppVar_7815 & cppMask_un_5_);
	BIT_VEC cppVar_7816 = (0 << 5) | cppVar_7815;
	cppVar_7816 = (cppVar_7816 & cppMask_un_8_);
	bool cppVar_7818 = (cppVar_7816 == 224);
	BIT_VEC cppVar_7819 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7820 = (cppVar_7819 << 3) | 6;
	cppVar_7820 = (cppVar_7820 & cppMask_un_5_);
	BIT_VEC cppVar_7821 = (0 << 5) | cppVar_7820;
	cppVar_7821 = (cppVar_7821 & cppMask_un_8_);
	bool cppVar_7823 = (cppVar_7821 == 240);
	BIT_VEC cppVar_7825 = (cppVar_7823) ? B : 0;
	BIT_VEC cppVar_7826 = (cppVar_7818) ? ACC : cppVar_7825;
	BIT_VEC cppVar_7827 = (cppVar_7813) ? PSW : cppVar_7826;
	BIT_VEC cppVar_7828 = (cppVar_7808) ? IP : cppVar_7827;
	BIT_VEC cppVar_7829 = (cppVar_7803) ? P3 : cppVar_7828;
	BIT_VEC cppVar_7830 = (cppVar_7798) ? IE : cppVar_7829;
	BIT_VEC cppVar_7831 = (cppVar_7793) ? P2 : cppVar_7830;
	BIT_VEC cppVar_7832 = (cppVar_7788) ? SBUF : cppVar_7831;
	BIT_VEC cppVar_7833 = (cppVar_7783) ? SCON : cppVar_7832;
	BIT_VEC cppVar_7834 = (cppVar_7778) ? P1 : cppVar_7833;
	BIT_VEC cppVar_7835 = (cppVar_7773) ? TH1 : cppVar_7834;
	BIT_VEC cppVar_7836 = (cppVar_7768) ? TL1 : cppVar_7835;
	BIT_VEC cppVar_7837 = (cppVar_7763) ? TH0 : cppVar_7836;
	BIT_VEC cppVar_7838 = (cppVar_7758) ? TL0 : cppVar_7837;
	BIT_VEC cppVar_7839 = (cppVar_7753) ? TMOD : cppVar_7838;
	BIT_VEC cppVar_7840 = (cppVar_7748) ? TCON : cppVar_7839;
	BIT_VEC cppVar_7841 = (cppVar_7743) ? PCON : cppVar_7840;
	BIT_VEC cppVar_7842 = (cppVar_7738) ? DPH : cppVar_7841;
	BIT_VEC cppVar_7843 = (cppVar_7733) ? DPL : cppVar_7842;
	BIT_VEC cppVar_7844 = (cppVar_7728) ? SP : cppVar_7843;
	BIT_VEC cppVar_7845 = (cppVar_7723) ? P0 : cppVar_7844;
	BIT_VEC cppVar_7846 = (cppVar_7714) ? cppVar_7718 : cppVar_7845;
	BIT_VEC cppVar_7847 = (cppVar_7706) ? cppVar_7846 : DPH;
	BIT_VEC cppVar_7848 = ROM.rd(PC);
	bool cppVar_7850 = (cppVar_7848 == 141);
	BIT_VEC cppVar_7852 = PC + 1;
	cppVar_7852 = (cppVar_7852 & cppMask_un_16_);
	BIT_VEC cppVar_7853 = ROM.rd(cppVar_7852);
	bool cppVar_7855 = (cppVar_7853 == 131);
	BIT_VEC cppVar_7857 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7859 = (cppVar_7857 << 3) | 5;
	cppVar_7859 = (cppVar_7859 & cppMask_un_5_);
	BIT_VEC cppVar_7860 = (0 << 5) | cppVar_7859;
	cppVar_7860 = (cppVar_7860 & cppMask_un_8_);
	BIT_VEC cppVar_7861 = (cppVar_7860 >> 7) & cppMask_un_1_;
	bool cppVar_7863 = (cppVar_7861 == 0);
	BIT_VEC cppVar_7864 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7865 = (cppVar_7864 << 3) | 5;
	cppVar_7865 = (cppVar_7865 & cppMask_un_5_);
	BIT_VEC cppVar_7866 = (0 << 5) | cppVar_7865;
	cppVar_7866 = (cppVar_7866 & cppMask_un_8_);
	BIT_VEC cppVar_7867 = IRAM.rd(cppVar_7866);
	BIT_VEC cppVar_7868 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7869 = (cppVar_7868 << 3) | 5;
	cppVar_7869 = (cppVar_7869 & cppMask_un_5_);
	BIT_VEC cppVar_7870 = (0 << 5) | cppVar_7869;
	cppVar_7870 = (cppVar_7870 & cppMask_un_8_);
	bool cppVar_7872 = (cppVar_7870 == 128);
	BIT_VEC cppVar_7873 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7874 = (cppVar_7873 << 3) | 5;
	cppVar_7874 = (cppVar_7874 & cppMask_un_5_);
	BIT_VEC cppVar_7875 = (0 << 5) | cppVar_7874;
	cppVar_7875 = (cppVar_7875 & cppMask_un_8_);
	bool cppVar_7877 = (cppVar_7875 == 129);
	BIT_VEC cppVar_7878 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7879 = (cppVar_7878 << 3) | 5;
	cppVar_7879 = (cppVar_7879 & cppMask_un_5_);
	BIT_VEC cppVar_7880 = (0 << 5) | cppVar_7879;
	cppVar_7880 = (cppVar_7880 & cppMask_un_8_);
	bool cppVar_7882 = (cppVar_7880 == 130);
	BIT_VEC cppVar_7883 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7884 = (cppVar_7883 << 3) | 5;
	cppVar_7884 = (cppVar_7884 & cppMask_un_5_);
	BIT_VEC cppVar_7885 = (0 << 5) | cppVar_7884;
	cppVar_7885 = (cppVar_7885 & cppMask_un_8_);
	bool cppVar_7887 = (cppVar_7885 == 131);
	BIT_VEC cppVar_7888 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7889 = (cppVar_7888 << 3) | 5;
	cppVar_7889 = (cppVar_7889 & cppMask_un_5_);
	BIT_VEC cppVar_7890 = (0 << 5) | cppVar_7889;
	cppVar_7890 = (cppVar_7890 & cppMask_un_8_);
	bool cppVar_7892 = (cppVar_7890 == 135);
	BIT_VEC cppVar_7893 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7894 = (cppVar_7893 << 3) | 5;
	cppVar_7894 = (cppVar_7894 & cppMask_un_5_);
	BIT_VEC cppVar_7895 = (0 << 5) | cppVar_7894;
	cppVar_7895 = (cppVar_7895 & cppMask_un_8_);
	bool cppVar_7897 = (cppVar_7895 == 136);
	BIT_VEC cppVar_7898 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7899 = (cppVar_7898 << 3) | 5;
	cppVar_7899 = (cppVar_7899 & cppMask_un_5_);
	BIT_VEC cppVar_7900 = (0 << 5) | cppVar_7899;
	cppVar_7900 = (cppVar_7900 & cppMask_un_8_);
	bool cppVar_7902 = (cppVar_7900 == 137);
	BIT_VEC cppVar_7903 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7904 = (cppVar_7903 << 3) | 5;
	cppVar_7904 = (cppVar_7904 & cppMask_un_5_);
	BIT_VEC cppVar_7905 = (0 << 5) | cppVar_7904;
	cppVar_7905 = (cppVar_7905 & cppMask_un_8_);
	bool cppVar_7907 = (cppVar_7905 == 138);
	BIT_VEC cppVar_7908 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7909 = (cppVar_7908 << 3) | 5;
	cppVar_7909 = (cppVar_7909 & cppMask_un_5_);
	BIT_VEC cppVar_7910 = (0 << 5) | cppVar_7909;
	cppVar_7910 = (cppVar_7910 & cppMask_un_8_);
	bool cppVar_7912 = (cppVar_7910 == 140);
	BIT_VEC cppVar_7913 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7914 = (cppVar_7913 << 3) | 5;
	cppVar_7914 = (cppVar_7914 & cppMask_un_5_);
	BIT_VEC cppVar_7915 = (0 << 5) | cppVar_7914;
	cppVar_7915 = (cppVar_7915 & cppMask_un_8_);
	bool cppVar_7917 = (cppVar_7915 == 139);
	BIT_VEC cppVar_7918 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7919 = (cppVar_7918 << 3) | 5;
	cppVar_7919 = (cppVar_7919 & cppMask_un_5_);
	BIT_VEC cppVar_7920 = (0 << 5) | cppVar_7919;
	cppVar_7920 = (cppVar_7920 & cppMask_un_8_);
	bool cppVar_7922 = (cppVar_7920 == 141);
	BIT_VEC cppVar_7923 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7924 = (cppVar_7923 << 3) | 5;
	cppVar_7924 = (cppVar_7924 & cppMask_un_5_);
	BIT_VEC cppVar_7925 = (0 << 5) | cppVar_7924;
	cppVar_7925 = (cppVar_7925 & cppMask_un_8_);
	bool cppVar_7927 = (cppVar_7925 == 144);
	BIT_VEC cppVar_7928 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7929 = (cppVar_7928 << 3) | 5;
	cppVar_7929 = (cppVar_7929 & cppMask_un_5_);
	BIT_VEC cppVar_7930 = (0 << 5) | cppVar_7929;
	cppVar_7930 = (cppVar_7930 & cppMask_un_8_);
	bool cppVar_7932 = (cppVar_7930 == 152);
	BIT_VEC cppVar_7933 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7934 = (cppVar_7933 << 3) | 5;
	cppVar_7934 = (cppVar_7934 & cppMask_un_5_);
	BIT_VEC cppVar_7935 = (0 << 5) | cppVar_7934;
	cppVar_7935 = (cppVar_7935 & cppMask_un_8_);
	bool cppVar_7937 = (cppVar_7935 == 153);
	BIT_VEC cppVar_7938 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7939 = (cppVar_7938 << 3) | 5;
	cppVar_7939 = (cppVar_7939 & cppMask_un_5_);
	BIT_VEC cppVar_7940 = (0 << 5) | cppVar_7939;
	cppVar_7940 = (cppVar_7940 & cppMask_un_8_);
	bool cppVar_7942 = (cppVar_7940 == 160);
	BIT_VEC cppVar_7943 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7944 = (cppVar_7943 << 3) | 5;
	cppVar_7944 = (cppVar_7944 & cppMask_un_5_);
	BIT_VEC cppVar_7945 = (0 << 5) | cppVar_7944;
	cppVar_7945 = (cppVar_7945 & cppMask_un_8_);
	bool cppVar_7947 = (cppVar_7945 == 168);
	BIT_VEC cppVar_7948 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7949 = (cppVar_7948 << 3) | 5;
	cppVar_7949 = (cppVar_7949 & cppMask_un_5_);
	BIT_VEC cppVar_7950 = (0 << 5) | cppVar_7949;
	cppVar_7950 = (cppVar_7950 & cppMask_un_8_);
	bool cppVar_7952 = (cppVar_7950 == 176);
	BIT_VEC cppVar_7953 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7954 = (cppVar_7953 << 3) | 5;
	cppVar_7954 = (cppVar_7954 & cppMask_un_5_);
	BIT_VEC cppVar_7955 = (0 << 5) | cppVar_7954;
	cppVar_7955 = (cppVar_7955 & cppMask_un_8_);
	bool cppVar_7957 = (cppVar_7955 == 184);
	BIT_VEC cppVar_7958 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7959 = (cppVar_7958 << 3) | 5;
	cppVar_7959 = (cppVar_7959 & cppMask_un_5_);
	BIT_VEC cppVar_7960 = (0 << 5) | cppVar_7959;
	cppVar_7960 = (cppVar_7960 & cppMask_un_8_);
	bool cppVar_7962 = (cppVar_7960 == 208);
	BIT_VEC cppVar_7963 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7964 = (cppVar_7963 << 3) | 5;
	cppVar_7964 = (cppVar_7964 & cppMask_un_5_);
	BIT_VEC cppVar_7965 = (0 << 5) | cppVar_7964;
	cppVar_7965 = (cppVar_7965 & cppMask_un_8_);
	bool cppVar_7967 = (cppVar_7965 == 224);
	BIT_VEC cppVar_7968 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_7969 = (cppVar_7968 << 3) | 5;
	cppVar_7969 = (cppVar_7969 & cppMask_un_5_);
	BIT_VEC cppVar_7970 = (0 << 5) | cppVar_7969;
	cppVar_7970 = (cppVar_7970 & cppMask_un_8_);
	bool cppVar_7972 = (cppVar_7970 == 240);
	BIT_VEC cppVar_7974 = (cppVar_7972) ? B : 0;
	BIT_VEC cppVar_7975 = (cppVar_7967) ? ACC : cppVar_7974;
	BIT_VEC cppVar_7976 = (cppVar_7962) ? PSW : cppVar_7975;
	BIT_VEC cppVar_7977 = (cppVar_7957) ? IP : cppVar_7976;
	BIT_VEC cppVar_7978 = (cppVar_7952) ? P3 : cppVar_7977;
	BIT_VEC cppVar_7979 = (cppVar_7947) ? IE : cppVar_7978;
	BIT_VEC cppVar_7980 = (cppVar_7942) ? P2 : cppVar_7979;
	BIT_VEC cppVar_7981 = (cppVar_7937) ? SBUF : cppVar_7980;
	BIT_VEC cppVar_7982 = (cppVar_7932) ? SCON : cppVar_7981;
	BIT_VEC cppVar_7983 = (cppVar_7927) ? P1 : cppVar_7982;
	BIT_VEC cppVar_7984 = (cppVar_7922) ? TH1 : cppVar_7983;
	BIT_VEC cppVar_7985 = (cppVar_7917) ? TL1 : cppVar_7984;
	BIT_VEC cppVar_7986 = (cppVar_7912) ? TH0 : cppVar_7985;
	BIT_VEC cppVar_7987 = (cppVar_7907) ? TL0 : cppVar_7986;
	BIT_VEC cppVar_7988 = (cppVar_7902) ? TMOD : cppVar_7987;
	BIT_VEC cppVar_7989 = (cppVar_7897) ? TCON : cppVar_7988;
	BIT_VEC cppVar_7990 = (cppVar_7892) ? PCON : cppVar_7989;
	BIT_VEC cppVar_7991 = (cppVar_7887) ? DPH : cppVar_7990;
	BIT_VEC cppVar_7992 = (cppVar_7882) ? DPL : cppVar_7991;
	BIT_VEC cppVar_7993 = (cppVar_7877) ? SP : cppVar_7992;
	BIT_VEC cppVar_7994 = (cppVar_7872) ? P0 : cppVar_7993;
	BIT_VEC cppVar_7995 = (cppVar_7863) ? cppVar_7867 : cppVar_7994;
	BIT_VEC cppVar_7996 = (cppVar_7855) ? cppVar_7995 : DPH;
	BIT_VEC cppVar_7997 = ROM.rd(PC);
	bool cppVar_7999 = (cppVar_7997 == 140);
	BIT_VEC cppVar_8001 = PC + 1;
	cppVar_8001 = (cppVar_8001 & cppMask_un_16_);
	BIT_VEC cppVar_8002 = ROM.rd(cppVar_8001);
	bool cppVar_8004 = (cppVar_8002 == 131);
	BIT_VEC cppVar_8006 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8008 = (cppVar_8006 << 3) | 4;
	cppVar_8008 = (cppVar_8008 & cppMask_un_5_);
	BIT_VEC cppVar_8009 = (0 << 5) | cppVar_8008;
	cppVar_8009 = (cppVar_8009 & cppMask_un_8_);
	BIT_VEC cppVar_8010 = (cppVar_8009 >> 7) & cppMask_un_1_;
	bool cppVar_8012 = (cppVar_8010 == 0);
	BIT_VEC cppVar_8013 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8014 = (cppVar_8013 << 3) | 4;
	cppVar_8014 = (cppVar_8014 & cppMask_un_5_);
	BIT_VEC cppVar_8015 = (0 << 5) | cppVar_8014;
	cppVar_8015 = (cppVar_8015 & cppMask_un_8_);
	BIT_VEC cppVar_8016 = IRAM.rd(cppVar_8015);
	BIT_VEC cppVar_8017 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8018 = (cppVar_8017 << 3) | 4;
	cppVar_8018 = (cppVar_8018 & cppMask_un_5_);
	BIT_VEC cppVar_8019 = (0 << 5) | cppVar_8018;
	cppVar_8019 = (cppVar_8019 & cppMask_un_8_);
	bool cppVar_8021 = (cppVar_8019 == 128);
	BIT_VEC cppVar_8022 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8023 = (cppVar_8022 << 3) | 4;
	cppVar_8023 = (cppVar_8023 & cppMask_un_5_);
	BIT_VEC cppVar_8024 = (0 << 5) | cppVar_8023;
	cppVar_8024 = (cppVar_8024 & cppMask_un_8_);
	bool cppVar_8026 = (cppVar_8024 == 129);
	BIT_VEC cppVar_8027 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8028 = (cppVar_8027 << 3) | 4;
	cppVar_8028 = (cppVar_8028 & cppMask_un_5_);
	BIT_VEC cppVar_8029 = (0 << 5) | cppVar_8028;
	cppVar_8029 = (cppVar_8029 & cppMask_un_8_);
	bool cppVar_8031 = (cppVar_8029 == 130);
	BIT_VEC cppVar_8032 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8033 = (cppVar_8032 << 3) | 4;
	cppVar_8033 = (cppVar_8033 & cppMask_un_5_);
	BIT_VEC cppVar_8034 = (0 << 5) | cppVar_8033;
	cppVar_8034 = (cppVar_8034 & cppMask_un_8_);
	bool cppVar_8036 = (cppVar_8034 == 131);
	BIT_VEC cppVar_8037 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8038 = (cppVar_8037 << 3) | 4;
	cppVar_8038 = (cppVar_8038 & cppMask_un_5_);
	BIT_VEC cppVar_8039 = (0 << 5) | cppVar_8038;
	cppVar_8039 = (cppVar_8039 & cppMask_un_8_);
	bool cppVar_8041 = (cppVar_8039 == 135);
	BIT_VEC cppVar_8042 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8043 = (cppVar_8042 << 3) | 4;
	cppVar_8043 = (cppVar_8043 & cppMask_un_5_);
	BIT_VEC cppVar_8044 = (0 << 5) | cppVar_8043;
	cppVar_8044 = (cppVar_8044 & cppMask_un_8_);
	bool cppVar_8046 = (cppVar_8044 == 136);
	BIT_VEC cppVar_8047 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8048 = (cppVar_8047 << 3) | 4;
	cppVar_8048 = (cppVar_8048 & cppMask_un_5_);
	BIT_VEC cppVar_8049 = (0 << 5) | cppVar_8048;
	cppVar_8049 = (cppVar_8049 & cppMask_un_8_);
	bool cppVar_8051 = (cppVar_8049 == 137);
	BIT_VEC cppVar_8052 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8053 = (cppVar_8052 << 3) | 4;
	cppVar_8053 = (cppVar_8053 & cppMask_un_5_);
	BIT_VEC cppVar_8054 = (0 << 5) | cppVar_8053;
	cppVar_8054 = (cppVar_8054 & cppMask_un_8_);
	bool cppVar_8056 = (cppVar_8054 == 138);
	BIT_VEC cppVar_8057 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8058 = (cppVar_8057 << 3) | 4;
	cppVar_8058 = (cppVar_8058 & cppMask_un_5_);
	BIT_VEC cppVar_8059 = (0 << 5) | cppVar_8058;
	cppVar_8059 = (cppVar_8059 & cppMask_un_8_);
	bool cppVar_8061 = (cppVar_8059 == 140);
	BIT_VEC cppVar_8062 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8063 = (cppVar_8062 << 3) | 4;
	cppVar_8063 = (cppVar_8063 & cppMask_un_5_);
	BIT_VEC cppVar_8064 = (0 << 5) | cppVar_8063;
	cppVar_8064 = (cppVar_8064 & cppMask_un_8_);
	bool cppVar_8066 = (cppVar_8064 == 139);
	BIT_VEC cppVar_8067 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8068 = (cppVar_8067 << 3) | 4;
	cppVar_8068 = (cppVar_8068 & cppMask_un_5_);
	BIT_VEC cppVar_8069 = (0 << 5) | cppVar_8068;
	cppVar_8069 = (cppVar_8069 & cppMask_un_8_);
	bool cppVar_8071 = (cppVar_8069 == 141);
	BIT_VEC cppVar_8072 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8073 = (cppVar_8072 << 3) | 4;
	cppVar_8073 = (cppVar_8073 & cppMask_un_5_);
	BIT_VEC cppVar_8074 = (0 << 5) | cppVar_8073;
	cppVar_8074 = (cppVar_8074 & cppMask_un_8_);
	bool cppVar_8076 = (cppVar_8074 == 144);
	BIT_VEC cppVar_8077 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8078 = (cppVar_8077 << 3) | 4;
	cppVar_8078 = (cppVar_8078 & cppMask_un_5_);
	BIT_VEC cppVar_8079 = (0 << 5) | cppVar_8078;
	cppVar_8079 = (cppVar_8079 & cppMask_un_8_);
	bool cppVar_8081 = (cppVar_8079 == 152);
	BIT_VEC cppVar_8082 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8083 = (cppVar_8082 << 3) | 4;
	cppVar_8083 = (cppVar_8083 & cppMask_un_5_);
	BIT_VEC cppVar_8084 = (0 << 5) | cppVar_8083;
	cppVar_8084 = (cppVar_8084 & cppMask_un_8_);
	bool cppVar_8086 = (cppVar_8084 == 153);
	BIT_VEC cppVar_8087 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8088 = (cppVar_8087 << 3) | 4;
	cppVar_8088 = (cppVar_8088 & cppMask_un_5_);
	BIT_VEC cppVar_8089 = (0 << 5) | cppVar_8088;
	cppVar_8089 = (cppVar_8089 & cppMask_un_8_);
	bool cppVar_8091 = (cppVar_8089 == 160);
	BIT_VEC cppVar_8092 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8093 = (cppVar_8092 << 3) | 4;
	cppVar_8093 = (cppVar_8093 & cppMask_un_5_);
	BIT_VEC cppVar_8094 = (0 << 5) | cppVar_8093;
	cppVar_8094 = (cppVar_8094 & cppMask_un_8_);
	bool cppVar_8096 = (cppVar_8094 == 168);
	BIT_VEC cppVar_8097 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8098 = (cppVar_8097 << 3) | 4;
	cppVar_8098 = (cppVar_8098 & cppMask_un_5_);
	BIT_VEC cppVar_8099 = (0 << 5) | cppVar_8098;
	cppVar_8099 = (cppVar_8099 & cppMask_un_8_);
	bool cppVar_8101 = (cppVar_8099 == 176);
	BIT_VEC cppVar_8102 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8103 = (cppVar_8102 << 3) | 4;
	cppVar_8103 = (cppVar_8103 & cppMask_un_5_);
	BIT_VEC cppVar_8104 = (0 << 5) | cppVar_8103;
	cppVar_8104 = (cppVar_8104 & cppMask_un_8_);
	bool cppVar_8106 = (cppVar_8104 == 184);
	BIT_VEC cppVar_8107 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8108 = (cppVar_8107 << 3) | 4;
	cppVar_8108 = (cppVar_8108 & cppMask_un_5_);
	BIT_VEC cppVar_8109 = (0 << 5) | cppVar_8108;
	cppVar_8109 = (cppVar_8109 & cppMask_un_8_);
	bool cppVar_8111 = (cppVar_8109 == 208);
	BIT_VEC cppVar_8112 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8113 = (cppVar_8112 << 3) | 4;
	cppVar_8113 = (cppVar_8113 & cppMask_un_5_);
	BIT_VEC cppVar_8114 = (0 << 5) | cppVar_8113;
	cppVar_8114 = (cppVar_8114 & cppMask_un_8_);
	bool cppVar_8116 = (cppVar_8114 == 224);
	BIT_VEC cppVar_8117 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8118 = (cppVar_8117 << 3) | 4;
	cppVar_8118 = (cppVar_8118 & cppMask_un_5_);
	BIT_VEC cppVar_8119 = (0 << 5) | cppVar_8118;
	cppVar_8119 = (cppVar_8119 & cppMask_un_8_);
	bool cppVar_8121 = (cppVar_8119 == 240);
	BIT_VEC cppVar_8123 = (cppVar_8121) ? B : 0;
	BIT_VEC cppVar_8124 = (cppVar_8116) ? ACC : cppVar_8123;
	BIT_VEC cppVar_8125 = (cppVar_8111) ? PSW : cppVar_8124;
	BIT_VEC cppVar_8126 = (cppVar_8106) ? IP : cppVar_8125;
	BIT_VEC cppVar_8127 = (cppVar_8101) ? P3 : cppVar_8126;
	BIT_VEC cppVar_8128 = (cppVar_8096) ? IE : cppVar_8127;
	BIT_VEC cppVar_8129 = (cppVar_8091) ? P2 : cppVar_8128;
	BIT_VEC cppVar_8130 = (cppVar_8086) ? SBUF : cppVar_8129;
	BIT_VEC cppVar_8131 = (cppVar_8081) ? SCON : cppVar_8130;
	BIT_VEC cppVar_8132 = (cppVar_8076) ? P1 : cppVar_8131;
	BIT_VEC cppVar_8133 = (cppVar_8071) ? TH1 : cppVar_8132;
	BIT_VEC cppVar_8134 = (cppVar_8066) ? TL1 : cppVar_8133;
	BIT_VEC cppVar_8135 = (cppVar_8061) ? TH0 : cppVar_8134;
	BIT_VEC cppVar_8136 = (cppVar_8056) ? TL0 : cppVar_8135;
	BIT_VEC cppVar_8137 = (cppVar_8051) ? TMOD : cppVar_8136;
	BIT_VEC cppVar_8138 = (cppVar_8046) ? TCON : cppVar_8137;
	BIT_VEC cppVar_8139 = (cppVar_8041) ? PCON : cppVar_8138;
	BIT_VEC cppVar_8140 = (cppVar_8036) ? DPH : cppVar_8139;
	BIT_VEC cppVar_8141 = (cppVar_8031) ? DPL : cppVar_8140;
	BIT_VEC cppVar_8142 = (cppVar_8026) ? SP : cppVar_8141;
	BIT_VEC cppVar_8143 = (cppVar_8021) ? P0 : cppVar_8142;
	BIT_VEC cppVar_8144 = (cppVar_8012) ? cppVar_8016 : cppVar_8143;
	BIT_VEC cppVar_8145 = (cppVar_8004) ? cppVar_8144 : DPH;
	BIT_VEC cppVar_8146 = ROM.rd(PC);
	bool cppVar_8148 = (cppVar_8146 == 139);
	BIT_VEC cppVar_8150 = PC + 1;
	cppVar_8150 = (cppVar_8150 & cppMask_un_16_);
	BIT_VEC cppVar_8151 = ROM.rd(cppVar_8150);
	bool cppVar_8153 = (cppVar_8151 == 131);
	BIT_VEC cppVar_8155 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8157 = (cppVar_8155 << 3) | 3;
	cppVar_8157 = (cppVar_8157 & cppMask_un_5_);
	BIT_VEC cppVar_8158 = (0 << 5) | cppVar_8157;
	cppVar_8158 = (cppVar_8158 & cppMask_un_8_);
	BIT_VEC cppVar_8159 = (cppVar_8158 >> 7) & cppMask_un_1_;
	bool cppVar_8161 = (cppVar_8159 == 0);
	BIT_VEC cppVar_8162 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8163 = (cppVar_8162 << 3) | 3;
	cppVar_8163 = (cppVar_8163 & cppMask_un_5_);
	BIT_VEC cppVar_8164 = (0 << 5) | cppVar_8163;
	cppVar_8164 = (cppVar_8164 & cppMask_un_8_);
	BIT_VEC cppVar_8165 = IRAM.rd(cppVar_8164);
	BIT_VEC cppVar_8166 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8167 = (cppVar_8166 << 3) | 3;
	cppVar_8167 = (cppVar_8167 & cppMask_un_5_);
	BIT_VEC cppVar_8168 = (0 << 5) | cppVar_8167;
	cppVar_8168 = (cppVar_8168 & cppMask_un_8_);
	bool cppVar_8170 = (cppVar_8168 == 128);
	BIT_VEC cppVar_8171 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8172 = (cppVar_8171 << 3) | 3;
	cppVar_8172 = (cppVar_8172 & cppMask_un_5_);
	BIT_VEC cppVar_8173 = (0 << 5) | cppVar_8172;
	cppVar_8173 = (cppVar_8173 & cppMask_un_8_);
	bool cppVar_8175 = (cppVar_8173 == 129);
	BIT_VEC cppVar_8176 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8177 = (cppVar_8176 << 3) | 3;
	cppVar_8177 = (cppVar_8177 & cppMask_un_5_);
	BIT_VEC cppVar_8178 = (0 << 5) | cppVar_8177;
	cppVar_8178 = (cppVar_8178 & cppMask_un_8_);
	bool cppVar_8180 = (cppVar_8178 == 130);
	BIT_VEC cppVar_8181 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8182 = (cppVar_8181 << 3) | 3;
	cppVar_8182 = (cppVar_8182 & cppMask_un_5_);
	BIT_VEC cppVar_8183 = (0 << 5) | cppVar_8182;
	cppVar_8183 = (cppVar_8183 & cppMask_un_8_);
	bool cppVar_8185 = (cppVar_8183 == 131);
	BIT_VEC cppVar_8186 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8187 = (cppVar_8186 << 3) | 3;
	cppVar_8187 = (cppVar_8187 & cppMask_un_5_);
	BIT_VEC cppVar_8188 = (0 << 5) | cppVar_8187;
	cppVar_8188 = (cppVar_8188 & cppMask_un_8_);
	bool cppVar_8190 = (cppVar_8188 == 135);
	BIT_VEC cppVar_8191 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8192 = (cppVar_8191 << 3) | 3;
	cppVar_8192 = (cppVar_8192 & cppMask_un_5_);
	BIT_VEC cppVar_8193 = (0 << 5) | cppVar_8192;
	cppVar_8193 = (cppVar_8193 & cppMask_un_8_);
	bool cppVar_8195 = (cppVar_8193 == 136);
	BIT_VEC cppVar_8196 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8197 = (cppVar_8196 << 3) | 3;
	cppVar_8197 = (cppVar_8197 & cppMask_un_5_);
	BIT_VEC cppVar_8198 = (0 << 5) | cppVar_8197;
	cppVar_8198 = (cppVar_8198 & cppMask_un_8_);
	bool cppVar_8200 = (cppVar_8198 == 137);
	BIT_VEC cppVar_8201 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8202 = (cppVar_8201 << 3) | 3;
	cppVar_8202 = (cppVar_8202 & cppMask_un_5_);
	BIT_VEC cppVar_8203 = (0 << 5) | cppVar_8202;
	cppVar_8203 = (cppVar_8203 & cppMask_un_8_);
	bool cppVar_8205 = (cppVar_8203 == 138);
	BIT_VEC cppVar_8206 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8207 = (cppVar_8206 << 3) | 3;
	cppVar_8207 = (cppVar_8207 & cppMask_un_5_);
	BIT_VEC cppVar_8208 = (0 << 5) | cppVar_8207;
	cppVar_8208 = (cppVar_8208 & cppMask_un_8_);
	bool cppVar_8210 = (cppVar_8208 == 140);
	BIT_VEC cppVar_8211 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8212 = (cppVar_8211 << 3) | 3;
	cppVar_8212 = (cppVar_8212 & cppMask_un_5_);
	BIT_VEC cppVar_8213 = (0 << 5) | cppVar_8212;
	cppVar_8213 = (cppVar_8213 & cppMask_un_8_);
	bool cppVar_8215 = (cppVar_8213 == 139);
	BIT_VEC cppVar_8216 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8217 = (cppVar_8216 << 3) | 3;
	cppVar_8217 = (cppVar_8217 & cppMask_un_5_);
	BIT_VEC cppVar_8218 = (0 << 5) | cppVar_8217;
	cppVar_8218 = (cppVar_8218 & cppMask_un_8_);
	bool cppVar_8220 = (cppVar_8218 == 141);
	BIT_VEC cppVar_8221 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8222 = (cppVar_8221 << 3) | 3;
	cppVar_8222 = (cppVar_8222 & cppMask_un_5_);
	BIT_VEC cppVar_8223 = (0 << 5) | cppVar_8222;
	cppVar_8223 = (cppVar_8223 & cppMask_un_8_);
	bool cppVar_8225 = (cppVar_8223 == 144);
	BIT_VEC cppVar_8226 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8227 = (cppVar_8226 << 3) | 3;
	cppVar_8227 = (cppVar_8227 & cppMask_un_5_);
	BIT_VEC cppVar_8228 = (0 << 5) | cppVar_8227;
	cppVar_8228 = (cppVar_8228 & cppMask_un_8_);
	bool cppVar_8230 = (cppVar_8228 == 152);
	BIT_VEC cppVar_8231 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8232 = (cppVar_8231 << 3) | 3;
	cppVar_8232 = (cppVar_8232 & cppMask_un_5_);
	BIT_VEC cppVar_8233 = (0 << 5) | cppVar_8232;
	cppVar_8233 = (cppVar_8233 & cppMask_un_8_);
	bool cppVar_8235 = (cppVar_8233 == 153);
	BIT_VEC cppVar_8236 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8237 = (cppVar_8236 << 3) | 3;
	cppVar_8237 = (cppVar_8237 & cppMask_un_5_);
	BIT_VEC cppVar_8238 = (0 << 5) | cppVar_8237;
	cppVar_8238 = (cppVar_8238 & cppMask_un_8_);
	bool cppVar_8240 = (cppVar_8238 == 160);
	BIT_VEC cppVar_8241 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8242 = (cppVar_8241 << 3) | 3;
	cppVar_8242 = (cppVar_8242 & cppMask_un_5_);
	BIT_VEC cppVar_8243 = (0 << 5) | cppVar_8242;
	cppVar_8243 = (cppVar_8243 & cppMask_un_8_);
	bool cppVar_8245 = (cppVar_8243 == 168);
	BIT_VEC cppVar_8246 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8247 = (cppVar_8246 << 3) | 3;
	cppVar_8247 = (cppVar_8247 & cppMask_un_5_);
	BIT_VEC cppVar_8248 = (0 << 5) | cppVar_8247;
	cppVar_8248 = (cppVar_8248 & cppMask_un_8_);
	bool cppVar_8250 = (cppVar_8248 == 176);
	BIT_VEC cppVar_8251 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8252 = (cppVar_8251 << 3) | 3;
	cppVar_8252 = (cppVar_8252 & cppMask_un_5_);
	BIT_VEC cppVar_8253 = (0 << 5) | cppVar_8252;
	cppVar_8253 = (cppVar_8253 & cppMask_un_8_);
	bool cppVar_8255 = (cppVar_8253 == 184);
	BIT_VEC cppVar_8256 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8257 = (cppVar_8256 << 3) | 3;
	cppVar_8257 = (cppVar_8257 & cppMask_un_5_);
	BIT_VEC cppVar_8258 = (0 << 5) | cppVar_8257;
	cppVar_8258 = (cppVar_8258 & cppMask_un_8_);
	bool cppVar_8260 = (cppVar_8258 == 208);
	BIT_VEC cppVar_8261 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8262 = (cppVar_8261 << 3) | 3;
	cppVar_8262 = (cppVar_8262 & cppMask_un_5_);
	BIT_VEC cppVar_8263 = (0 << 5) | cppVar_8262;
	cppVar_8263 = (cppVar_8263 & cppMask_un_8_);
	bool cppVar_8265 = (cppVar_8263 == 224);
	BIT_VEC cppVar_8266 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8267 = (cppVar_8266 << 3) | 3;
	cppVar_8267 = (cppVar_8267 & cppMask_un_5_);
	BIT_VEC cppVar_8268 = (0 << 5) | cppVar_8267;
	cppVar_8268 = (cppVar_8268 & cppMask_un_8_);
	bool cppVar_8270 = (cppVar_8268 == 240);
	BIT_VEC cppVar_8272 = (cppVar_8270) ? B : 0;
	BIT_VEC cppVar_8273 = (cppVar_8265) ? ACC : cppVar_8272;
	BIT_VEC cppVar_8274 = (cppVar_8260) ? PSW : cppVar_8273;
	BIT_VEC cppVar_8275 = (cppVar_8255) ? IP : cppVar_8274;
	BIT_VEC cppVar_8276 = (cppVar_8250) ? P3 : cppVar_8275;
	BIT_VEC cppVar_8277 = (cppVar_8245) ? IE : cppVar_8276;
	BIT_VEC cppVar_8278 = (cppVar_8240) ? P2 : cppVar_8277;
	BIT_VEC cppVar_8279 = (cppVar_8235) ? SBUF : cppVar_8278;
	BIT_VEC cppVar_8280 = (cppVar_8230) ? SCON : cppVar_8279;
	BIT_VEC cppVar_8281 = (cppVar_8225) ? P1 : cppVar_8280;
	BIT_VEC cppVar_8282 = (cppVar_8220) ? TH1 : cppVar_8281;
	BIT_VEC cppVar_8283 = (cppVar_8215) ? TL1 : cppVar_8282;
	BIT_VEC cppVar_8284 = (cppVar_8210) ? TH0 : cppVar_8283;
	BIT_VEC cppVar_8285 = (cppVar_8205) ? TL0 : cppVar_8284;
	BIT_VEC cppVar_8286 = (cppVar_8200) ? TMOD : cppVar_8285;
	BIT_VEC cppVar_8287 = (cppVar_8195) ? TCON : cppVar_8286;
	BIT_VEC cppVar_8288 = (cppVar_8190) ? PCON : cppVar_8287;
	BIT_VEC cppVar_8289 = (cppVar_8185) ? DPH : cppVar_8288;
	BIT_VEC cppVar_8290 = (cppVar_8180) ? DPL : cppVar_8289;
	BIT_VEC cppVar_8291 = (cppVar_8175) ? SP : cppVar_8290;
	BIT_VEC cppVar_8292 = (cppVar_8170) ? P0 : cppVar_8291;
	BIT_VEC cppVar_8293 = (cppVar_8161) ? cppVar_8165 : cppVar_8292;
	BIT_VEC cppVar_8294 = (cppVar_8153) ? cppVar_8293 : DPH;
	BIT_VEC cppVar_8295 = ROM.rd(PC);
	bool cppVar_8297 = (cppVar_8295 == 138);
	BIT_VEC cppVar_8299 = PC + 1;
	cppVar_8299 = (cppVar_8299 & cppMask_un_16_);
	BIT_VEC cppVar_8300 = ROM.rd(cppVar_8299);
	bool cppVar_8302 = (cppVar_8300 == 131);
	BIT_VEC cppVar_8304 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8306 = (cppVar_8304 << 3) | 2;
	cppVar_8306 = (cppVar_8306 & cppMask_un_5_);
	BIT_VEC cppVar_8307 = (0 << 5) | cppVar_8306;
	cppVar_8307 = (cppVar_8307 & cppMask_un_8_);
	BIT_VEC cppVar_8308 = (cppVar_8307 >> 7) & cppMask_un_1_;
	bool cppVar_8310 = (cppVar_8308 == 0);
	BIT_VEC cppVar_8311 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8312 = (cppVar_8311 << 3) | 2;
	cppVar_8312 = (cppVar_8312 & cppMask_un_5_);
	BIT_VEC cppVar_8313 = (0 << 5) | cppVar_8312;
	cppVar_8313 = (cppVar_8313 & cppMask_un_8_);
	BIT_VEC cppVar_8314 = IRAM.rd(cppVar_8313);
	BIT_VEC cppVar_8315 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8316 = (cppVar_8315 << 3) | 2;
	cppVar_8316 = (cppVar_8316 & cppMask_un_5_);
	BIT_VEC cppVar_8317 = (0 << 5) | cppVar_8316;
	cppVar_8317 = (cppVar_8317 & cppMask_un_8_);
	bool cppVar_8319 = (cppVar_8317 == 128);
	BIT_VEC cppVar_8320 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8321 = (cppVar_8320 << 3) | 2;
	cppVar_8321 = (cppVar_8321 & cppMask_un_5_);
	BIT_VEC cppVar_8322 = (0 << 5) | cppVar_8321;
	cppVar_8322 = (cppVar_8322 & cppMask_un_8_);
	bool cppVar_8324 = (cppVar_8322 == 129);
	BIT_VEC cppVar_8325 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8326 = (cppVar_8325 << 3) | 2;
	cppVar_8326 = (cppVar_8326 & cppMask_un_5_);
	BIT_VEC cppVar_8327 = (0 << 5) | cppVar_8326;
	cppVar_8327 = (cppVar_8327 & cppMask_un_8_);
	bool cppVar_8329 = (cppVar_8327 == 130);
	BIT_VEC cppVar_8330 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8331 = (cppVar_8330 << 3) | 2;
	cppVar_8331 = (cppVar_8331 & cppMask_un_5_);
	BIT_VEC cppVar_8332 = (0 << 5) | cppVar_8331;
	cppVar_8332 = (cppVar_8332 & cppMask_un_8_);
	bool cppVar_8334 = (cppVar_8332 == 131);
	BIT_VEC cppVar_8335 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8336 = (cppVar_8335 << 3) | 2;
	cppVar_8336 = (cppVar_8336 & cppMask_un_5_);
	BIT_VEC cppVar_8337 = (0 << 5) | cppVar_8336;
	cppVar_8337 = (cppVar_8337 & cppMask_un_8_);
	bool cppVar_8339 = (cppVar_8337 == 135);
	BIT_VEC cppVar_8340 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8341 = (cppVar_8340 << 3) | 2;
	cppVar_8341 = (cppVar_8341 & cppMask_un_5_);
	BIT_VEC cppVar_8342 = (0 << 5) | cppVar_8341;
	cppVar_8342 = (cppVar_8342 & cppMask_un_8_);
	bool cppVar_8344 = (cppVar_8342 == 136);
	BIT_VEC cppVar_8345 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8346 = (cppVar_8345 << 3) | 2;
	cppVar_8346 = (cppVar_8346 & cppMask_un_5_);
	BIT_VEC cppVar_8347 = (0 << 5) | cppVar_8346;
	cppVar_8347 = (cppVar_8347 & cppMask_un_8_);
	bool cppVar_8349 = (cppVar_8347 == 137);
	BIT_VEC cppVar_8350 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8351 = (cppVar_8350 << 3) | 2;
	cppVar_8351 = (cppVar_8351 & cppMask_un_5_);
	BIT_VEC cppVar_8352 = (0 << 5) | cppVar_8351;
	cppVar_8352 = (cppVar_8352 & cppMask_un_8_);
	bool cppVar_8354 = (cppVar_8352 == 138);
	BIT_VEC cppVar_8355 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8356 = (cppVar_8355 << 3) | 2;
	cppVar_8356 = (cppVar_8356 & cppMask_un_5_);
	BIT_VEC cppVar_8357 = (0 << 5) | cppVar_8356;
	cppVar_8357 = (cppVar_8357 & cppMask_un_8_);
	bool cppVar_8359 = (cppVar_8357 == 140);
	BIT_VEC cppVar_8360 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8361 = (cppVar_8360 << 3) | 2;
	cppVar_8361 = (cppVar_8361 & cppMask_un_5_);
	BIT_VEC cppVar_8362 = (0 << 5) | cppVar_8361;
	cppVar_8362 = (cppVar_8362 & cppMask_un_8_);
	bool cppVar_8364 = (cppVar_8362 == 139);
	BIT_VEC cppVar_8365 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8366 = (cppVar_8365 << 3) | 2;
	cppVar_8366 = (cppVar_8366 & cppMask_un_5_);
	BIT_VEC cppVar_8367 = (0 << 5) | cppVar_8366;
	cppVar_8367 = (cppVar_8367 & cppMask_un_8_);
	bool cppVar_8369 = (cppVar_8367 == 141);
	BIT_VEC cppVar_8370 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8371 = (cppVar_8370 << 3) | 2;
	cppVar_8371 = (cppVar_8371 & cppMask_un_5_);
	BIT_VEC cppVar_8372 = (0 << 5) | cppVar_8371;
	cppVar_8372 = (cppVar_8372 & cppMask_un_8_);
	bool cppVar_8374 = (cppVar_8372 == 144);
	BIT_VEC cppVar_8375 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8376 = (cppVar_8375 << 3) | 2;
	cppVar_8376 = (cppVar_8376 & cppMask_un_5_);
	BIT_VEC cppVar_8377 = (0 << 5) | cppVar_8376;
	cppVar_8377 = (cppVar_8377 & cppMask_un_8_);
	bool cppVar_8379 = (cppVar_8377 == 152);
	BIT_VEC cppVar_8380 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8381 = (cppVar_8380 << 3) | 2;
	cppVar_8381 = (cppVar_8381 & cppMask_un_5_);
	BIT_VEC cppVar_8382 = (0 << 5) | cppVar_8381;
	cppVar_8382 = (cppVar_8382 & cppMask_un_8_);
	bool cppVar_8384 = (cppVar_8382 == 153);
	BIT_VEC cppVar_8385 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8386 = (cppVar_8385 << 3) | 2;
	cppVar_8386 = (cppVar_8386 & cppMask_un_5_);
	BIT_VEC cppVar_8387 = (0 << 5) | cppVar_8386;
	cppVar_8387 = (cppVar_8387 & cppMask_un_8_);
	bool cppVar_8389 = (cppVar_8387 == 160);
	BIT_VEC cppVar_8390 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8391 = (cppVar_8390 << 3) | 2;
	cppVar_8391 = (cppVar_8391 & cppMask_un_5_);
	BIT_VEC cppVar_8392 = (0 << 5) | cppVar_8391;
	cppVar_8392 = (cppVar_8392 & cppMask_un_8_);
	bool cppVar_8394 = (cppVar_8392 == 168);
	BIT_VEC cppVar_8395 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8396 = (cppVar_8395 << 3) | 2;
	cppVar_8396 = (cppVar_8396 & cppMask_un_5_);
	BIT_VEC cppVar_8397 = (0 << 5) | cppVar_8396;
	cppVar_8397 = (cppVar_8397 & cppMask_un_8_);
	bool cppVar_8399 = (cppVar_8397 == 176);
	BIT_VEC cppVar_8400 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8401 = (cppVar_8400 << 3) | 2;
	cppVar_8401 = (cppVar_8401 & cppMask_un_5_);
	BIT_VEC cppVar_8402 = (0 << 5) | cppVar_8401;
	cppVar_8402 = (cppVar_8402 & cppMask_un_8_);
	bool cppVar_8404 = (cppVar_8402 == 184);
	BIT_VEC cppVar_8405 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8406 = (cppVar_8405 << 3) | 2;
	cppVar_8406 = (cppVar_8406 & cppMask_un_5_);
	BIT_VEC cppVar_8407 = (0 << 5) | cppVar_8406;
	cppVar_8407 = (cppVar_8407 & cppMask_un_8_);
	bool cppVar_8409 = (cppVar_8407 == 208);
	BIT_VEC cppVar_8410 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8411 = (cppVar_8410 << 3) | 2;
	cppVar_8411 = (cppVar_8411 & cppMask_un_5_);
	BIT_VEC cppVar_8412 = (0 << 5) | cppVar_8411;
	cppVar_8412 = (cppVar_8412 & cppMask_un_8_);
	bool cppVar_8414 = (cppVar_8412 == 224);
	BIT_VEC cppVar_8415 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8416 = (cppVar_8415 << 3) | 2;
	cppVar_8416 = (cppVar_8416 & cppMask_un_5_);
	BIT_VEC cppVar_8417 = (0 << 5) | cppVar_8416;
	cppVar_8417 = (cppVar_8417 & cppMask_un_8_);
	bool cppVar_8419 = (cppVar_8417 == 240);
	BIT_VEC cppVar_8421 = (cppVar_8419) ? B : 0;
	BIT_VEC cppVar_8422 = (cppVar_8414) ? ACC : cppVar_8421;
	BIT_VEC cppVar_8423 = (cppVar_8409) ? PSW : cppVar_8422;
	BIT_VEC cppVar_8424 = (cppVar_8404) ? IP : cppVar_8423;
	BIT_VEC cppVar_8425 = (cppVar_8399) ? P3 : cppVar_8424;
	BIT_VEC cppVar_8426 = (cppVar_8394) ? IE : cppVar_8425;
	BIT_VEC cppVar_8427 = (cppVar_8389) ? P2 : cppVar_8426;
	BIT_VEC cppVar_8428 = (cppVar_8384) ? SBUF : cppVar_8427;
	BIT_VEC cppVar_8429 = (cppVar_8379) ? SCON : cppVar_8428;
	BIT_VEC cppVar_8430 = (cppVar_8374) ? P1 : cppVar_8429;
	BIT_VEC cppVar_8431 = (cppVar_8369) ? TH1 : cppVar_8430;
	BIT_VEC cppVar_8432 = (cppVar_8364) ? TL1 : cppVar_8431;
	BIT_VEC cppVar_8433 = (cppVar_8359) ? TH0 : cppVar_8432;
	BIT_VEC cppVar_8434 = (cppVar_8354) ? TL0 : cppVar_8433;
	BIT_VEC cppVar_8435 = (cppVar_8349) ? TMOD : cppVar_8434;
	BIT_VEC cppVar_8436 = (cppVar_8344) ? TCON : cppVar_8435;
	BIT_VEC cppVar_8437 = (cppVar_8339) ? PCON : cppVar_8436;
	BIT_VEC cppVar_8438 = (cppVar_8334) ? DPH : cppVar_8437;
	BIT_VEC cppVar_8439 = (cppVar_8329) ? DPL : cppVar_8438;
	BIT_VEC cppVar_8440 = (cppVar_8324) ? SP : cppVar_8439;
	BIT_VEC cppVar_8441 = (cppVar_8319) ? P0 : cppVar_8440;
	BIT_VEC cppVar_8442 = (cppVar_8310) ? cppVar_8314 : cppVar_8441;
	BIT_VEC cppVar_8443 = (cppVar_8302) ? cppVar_8442 : DPH;
	BIT_VEC cppVar_8444 = ROM.rd(PC);
	bool cppVar_8446 = (cppVar_8444 == 137);
	BIT_VEC cppVar_8448 = PC + 1;
	cppVar_8448 = (cppVar_8448 & cppMask_un_16_);
	BIT_VEC cppVar_8449 = ROM.rd(cppVar_8448);
	bool cppVar_8451 = (cppVar_8449 == 131);
	BIT_VEC cppVar_8453 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8455 = (cppVar_8453 << 3) | 1;
	cppVar_8455 = (cppVar_8455 & cppMask_un_5_);
	BIT_VEC cppVar_8456 = (0 << 5) | cppVar_8455;
	cppVar_8456 = (cppVar_8456 & cppMask_un_8_);
	BIT_VEC cppVar_8457 = (cppVar_8456 >> 7) & cppMask_un_1_;
	bool cppVar_8459 = (cppVar_8457 == 0);
	BIT_VEC cppVar_8460 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8461 = (cppVar_8460 << 3) | 1;
	cppVar_8461 = (cppVar_8461 & cppMask_un_5_);
	BIT_VEC cppVar_8462 = (0 << 5) | cppVar_8461;
	cppVar_8462 = (cppVar_8462 & cppMask_un_8_);
	BIT_VEC cppVar_8463 = IRAM.rd(cppVar_8462);
	BIT_VEC cppVar_8464 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8465 = (cppVar_8464 << 3) | 1;
	cppVar_8465 = (cppVar_8465 & cppMask_un_5_);
	BIT_VEC cppVar_8466 = (0 << 5) | cppVar_8465;
	cppVar_8466 = (cppVar_8466 & cppMask_un_8_);
	bool cppVar_8468 = (cppVar_8466 == 128);
	BIT_VEC cppVar_8469 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8470 = (cppVar_8469 << 3) | 1;
	cppVar_8470 = (cppVar_8470 & cppMask_un_5_);
	BIT_VEC cppVar_8471 = (0 << 5) | cppVar_8470;
	cppVar_8471 = (cppVar_8471 & cppMask_un_8_);
	bool cppVar_8473 = (cppVar_8471 == 129);
	BIT_VEC cppVar_8474 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8475 = (cppVar_8474 << 3) | 1;
	cppVar_8475 = (cppVar_8475 & cppMask_un_5_);
	BIT_VEC cppVar_8476 = (0 << 5) | cppVar_8475;
	cppVar_8476 = (cppVar_8476 & cppMask_un_8_);
	bool cppVar_8478 = (cppVar_8476 == 130);
	BIT_VEC cppVar_8479 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8480 = (cppVar_8479 << 3) | 1;
	cppVar_8480 = (cppVar_8480 & cppMask_un_5_);
	BIT_VEC cppVar_8481 = (0 << 5) | cppVar_8480;
	cppVar_8481 = (cppVar_8481 & cppMask_un_8_);
	bool cppVar_8483 = (cppVar_8481 == 131);
	BIT_VEC cppVar_8484 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8485 = (cppVar_8484 << 3) | 1;
	cppVar_8485 = (cppVar_8485 & cppMask_un_5_);
	BIT_VEC cppVar_8486 = (0 << 5) | cppVar_8485;
	cppVar_8486 = (cppVar_8486 & cppMask_un_8_);
	bool cppVar_8488 = (cppVar_8486 == 135);
	BIT_VEC cppVar_8489 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8490 = (cppVar_8489 << 3) | 1;
	cppVar_8490 = (cppVar_8490 & cppMask_un_5_);
	BIT_VEC cppVar_8491 = (0 << 5) | cppVar_8490;
	cppVar_8491 = (cppVar_8491 & cppMask_un_8_);
	bool cppVar_8493 = (cppVar_8491 == 136);
	BIT_VEC cppVar_8494 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8495 = (cppVar_8494 << 3) | 1;
	cppVar_8495 = (cppVar_8495 & cppMask_un_5_);
	BIT_VEC cppVar_8496 = (0 << 5) | cppVar_8495;
	cppVar_8496 = (cppVar_8496 & cppMask_un_8_);
	bool cppVar_8498 = (cppVar_8496 == 137);
	BIT_VEC cppVar_8499 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8500 = (cppVar_8499 << 3) | 1;
	cppVar_8500 = (cppVar_8500 & cppMask_un_5_);
	BIT_VEC cppVar_8501 = (0 << 5) | cppVar_8500;
	cppVar_8501 = (cppVar_8501 & cppMask_un_8_);
	bool cppVar_8503 = (cppVar_8501 == 138);
	BIT_VEC cppVar_8504 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8505 = (cppVar_8504 << 3) | 1;
	cppVar_8505 = (cppVar_8505 & cppMask_un_5_);
	BIT_VEC cppVar_8506 = (0 << 5) | cppVar_8505;
	cppVar_8506 = (cppVar_8506 & cppMask_un_8_);
	bool cppVar_8508 = (cppVar_8506 == 140);
	BIT_VEC cppVar_8509 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8510 = (cppVar_8509 << 3) | 1;
	cppVar_8510 = (cppVar_8510 & cppMask_un_5_);
	BIT_VEC cppVar_8511 = (0 << 5) | cppVar_8510;
	cppVar_8511 = (cppVar_8511 & cppMask_un_8_);
	bool cppVar_8513 = (cppVar_8511 == 139);
	BIT_VEC cppVar_8514 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8515 = (cppVar_8514 << 3) | 1;
	cppVar_8515 = (cppVar_8515 & cppMask_un_5_);
	BIT_VEC cppVar_8516 = (0 << 5) | cppVar_8515;
	cppVar_8516 = (cppVar_8516 & cppMask_un_8_);
	bool cppVar_8518 = (cppVar_8516 == 141);
	BIT_VEC cppVar_8519 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8520 = (cppVar_8519 << 3) | 1;
	cppVar_8520 = (cppVar_8520 & cppMask_un_5_);
	BIT_VEC cppVar_8521 = (0 << 5) | cppVar_8520;
	cppVar_8521 = (cppVar_8521 & cppMask_un_8_);
	bool cppVar_8523 = (cppVar_8521 == 144);
	BIT_VEC cppVar_8524 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8525 = (cppVar_8524 << 3) | 1;
	cppVar_8525 = (cppVar_8525 & cppMask_un_5_);
	BIT_VEC cppVar_8526 = (0 << 5) | cppVar_8525;
	cppVar_8526 = (cppVar_8526 & cppMask_un_8_);
	bool cppVar_8528 = (cppVar_8526 == 152);
	BIT_VEC cppVar_8529 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8530 = (cppVar_8529 << 3) | 1;
	cppVar_8530 = (cppVar_8530 & cppMask_un_5_);
	BIT_VEC cppVar_8531 = (0 << 5) | cppVar_8530;
	cppVar_8531 = (cppVar_8531 & cppMask_un_8_);
	bool cppVar_8533 = (cppVar_8531 == 153);
	BIT_VEC cppVar_8534 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8535 = (cppVar_8534 << 3) | 1;
	cppVar_8535 = (cppVar_8535 & cppMask_un_5_);
	BIT_VEC cppVar_8536 = (0 << 5) | cppVar_8535;
	cppVar_8536 = (cppVar_8536 & cppMask_un_8_);
	bool cppVar_8538 = (cppVar_8536 == 160);
	BIT_VEC cppVar_8539 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8540 = (cppVar_8539 << 3) | 1;
	cppVar_8540 = (cppVar_8540 & cppMask_un_5_);
	BIT_VEC cppVar_8541 = (0 << 5) | cppVar_8540;
	cppVar_8541 = (cppVar_8541 & cppMask_un_8_);
	bool cppVar_8543 = (cppVar_8541 == 168);
	BIT_VEC cppVar_8544 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8545 = (cppVar_8544 << 3) | 1;
	cppVar_8545 = (cppVar_8545 & cppMask_un_5_);
	BIT_VEC cppVar_8546 = (0 << 5) | cppVar_8545;
	cppVar_8546 = (cppVar_8546 & cppMask_un_8_);
	bool cppVar_8548 = (cppVar_8546 == 176);
	BIT_VEC cppVar_8549 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8550 = (cppVar_8549 << 3) | 1;
	cppVar_8550 = (cppVar_8550 & cppMask_un_5_);
	BIT_VEC cppVar_8551 = (0 << 5) | cppVar_8550;
	cppVar_8551 = (cppVar_8551 & cppMask_un_8_);
	bool cppVar_8553 = (cppVar_8551 == 184);
	BIT_VEC cppVar_8554 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8555 = (cppVar_8554 << 3) | 1;
	cppVar_8555 = (cppVar_8555 & cppMask_un_5_);
	BIT_VEC cppVar_8556 = (0 << 5) | cppVar_8555;
	cppVar_8556 = (cppVar_8556 & cppMask_un_8_);
	bool cppVar_8558 = (cppVar_8556 == 208);
	BIT_VEC cppVar_8559 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8560 = (cppVar_8559 << 3) | 1;
	cppVar_8560 = (cppVar_8560 & cppMask_un_5_);
	BIT_VEC cppVar_8561 = (0 << 5) | cppVar_8560;
	cppVar_8561 = (cppVar_8561 & cppMask_un_8_);
	bool cppVar_8563 = (cppVar_8561 == 224);
	BIT_VEC cppVar_8564 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8565 = (cppVar_8564 << 3) | 1;
	cppVar_8565 = (cppVar_8565 & cppMask_un_5_);
	BIT_VEC cppVar_8566 = (0 << 5) | cppVar_8565;
	cppVar_8566 = (cppVar_8566 & cppMask_un_8_);
	bool cppVar_8568 = (cppVar_8566 == 240);
	BIT_VEC cppVar_8570 = (cppVar_8568) ? B : 0;
	BIT_VEC cppVar_8571 = (cppVar_8563) ? ACC : cppVar_8570;
	BIT_VEC cppVar_8572 = (cppVar_8558) ? PSW : cppVar_8571;
	BIT_VEC cppVar_8573 = (cppVar_8553) ? IP : cppVar_8572;
	BIT_VEC cppVar_8574 = (cppVar_8548) ? P3 : cppVar_8573;
	BIT_VEC cppVar_8575 = (cppVar_8543) ? IE : cppVar_8574;
	BIT_VEC cppVar_8576 = (cppVar_8538) ? P2 : cppVar_8575;
	BIT_VEC cppVar_8577 = (cppVar_8533) ? SBUF : cppVar_8576;
	BIT_VEC cppVar_8578 = (cppVar_8528) ? SCON : cppVar_8577;
	BIT_VEC cppVar_8579 = (cppVar_8523) ? P1 : cppVar_8578;
	BIT_VEC cppVar_8580 = (cppVar_8518) ? TH1 : cppVar_8579;
	BIT_VEC cppVar_8581 = (cppVar_8513) ? TL1 : cppVar_8580;
	BIT_VEC cppVar_8582 = (cppVar_8508) ? TH0 : cppVar_8581;
	BIT_VEC cppVar_8583 = (cppVar_8503) ? TL0 : cppVar_8582;
	BIT_VEC cppVar_8584 = (cppVar_8498) ? TMOD : cppVar_8583;
	BIT_VEC cppVar_8585 = (cppVar_8493) ? TCON : cppVar_8584;
	BIT_VEC cppVar_8586 = (cppVar_8488) ? PCON : cppVar_8585;
	BIT_VEC cppVar_8587 = (cppVar_8483) ? DPH : cppVar_8586;
	BIT_VEC cppVar_8588 = (cppVar_8478) ? DPL : cppVar_8587;
	BIT_VEC cppVar_8589 = (cppVar_8473) ? SP : cppVar_8588;
	BIT_VEC cppVar_8590 = (cppVar_8468) ? P0 : cppVar_8589;
	BIT_VEC cppVar_8591 = (cppVar_8459) ? cppVar_8463 : cppVar_8590;
	BIT_VEC cppVar_8592 = (cppVar_8451) ? cppVar_8591 : DPH;
	BIT_VEC cppVar_8593 = ROM.rd(PC);
	bool cppVar_8595 = (cppVar_8593 == 136);
	BIT_VEC cppVar_8597 = PC + 1;
	cppVar_8597 = (cppVar_8597 & cppMask_un_16_);
	BIT_VEC cppVar_8598 = ROM.rd(cppVar_8597);
	bool cppVar_8600 = (cppVar_8598 == 131);
	BIT_VEC cppVar_8602 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8604 = (cppVar_8602 << 3) | 0;
	cppVar_8604 = (cppVar_8604 & cppMask_un_5_);
	BIT_VEC cppVar_8605 = (0 << 5) | cppVar_8604;
	cppVar_8605 = (cppVar_8605 & cppMask_un_8_);
	BIT_VEC cppVar_8606 = (cppVar_8605 >> 7) & cppMask_un_1_;
	bool cppVar_8608 = (cppVar_8606 == 0);
	BIT_VEC cppVar_8609 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8610 = (cppVar_8609 << 3) | 0;
	cppVar_8610 = (cppVar_8610 & cppMask_un_5_);
	BIT_VEC cppVar_8611 = (0 << 5) | cppVar_8610;
	cppVar_8611 = (cppVar_8611 & cppMask_un_8_);
	BIT_VEC cppVar_8612 = IRAM.rd(cppVar_8611);
	BIT_VEC cppVar_8613 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8614 = (cppVar_8613 << 3) | 0;
	cppVar_8614 = (cppVar_8614 & cppMask_un_5_);
	BIT_VEC cppVar_8615 = (0 << 5) | cppVar_8614;
	cppVar_8615 = (cppVar_8615 & cppMask_un_8_);
	bool cppVar_8617 = (cppVar_8615 == 128);
	BIT_VEC cppVar_8618 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8619 = (cppVar_8618 << 3) | 0;
	cppVar_8619 = (cppVar_8619 & cppMask_un_5_);
	BIT_VEC cppVar_8620 = (0 << 5) | cppVar_8619;
	cppVar_8620 = (cppVar_8620 & cppMask_un_8_);
	bool cppVar_8622 = (cppVar_8620 == 129);
	BIT_VEC cppVar_8623 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8624 = (cppVar_8623 << 3) | 0;
	cppVar_8624 = (cppVar_8624 & cppMask_un_5_);
	BIT_VEC cppVar_8625 = (0 << 5) | cppVar_8624;
	cppVar_8625 = (cppVar_8625 & cppMask_un_8_);
	bool cppVar_8627 = (cppVar_8625 == 130);
	BIT_VEC cppVar_8628 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8629 = (cppVar_8628 << 3) | 0;
	cppVar_8629 = (cppVar_8629 & cppMask_un_5_);
	BIT_VEC cppVar_8630 = (0 << 5) | cppVar_8629;
	cppVar_8630 = (cppVar_8630 & cppMask_un_8_);
	bool cppVar_8632 = (cppVar_8630 == 131);
	BIT_VEC cppVar_8633 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8634 = (cppVar_8633 << 3) | 0;
	cppVar_8634 = (cppVar_8634 & cppMask_un_5_);
	BIT_VEC cppVar_8635 = (0 << 5) | cppVar_8634;
	cppVar_8635 = (cppVar_8635 & cppMask_un_8_);
	bool cppVar_8637 = (cppVar_8635 == 135);
	BIT_VEC cppVar_8638 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8639 = (cppVar_8638 << 3) | 0;
	cppVar_8639 = (cppVar_8639 & cppMask_un_5_);
	BIT_VEC cppVar_8640 = (0 << 5) | cppVar_8639;
	cppVar_8640 = (cppVar_8640 & cppMask_un_8_);
	bool cppVar_8642 = (cppVar_8640 == 136);
	BIT_VEC cppVar_8643 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8644 = (cppVar_8643 << 3) | 0;
	cppVar_8644 = (cppVar_8644 & cppMask_un_5_);
	BIT_VEC cppVar_8645 = (0 << 5) | cppVar_8644;
	cppVar_8645 = (cppVar_8645 & cppMask_un_8_);
	bool cppVar_8647 = (cppVar_8645 == 137);
	BIT_VEC cppVar_8648 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8649 = (cppVar_8648 << 3) | 0;
	cppVar_8649 = (cppVar_8649 & cppMask_un_5_);
	BIT_VEC cppVar_8650 = (0 << 5) | cppVar_8649;
	cppVar_8650 = (cppVar_8650 & cppMask_un_8_);
	bool cppVar_8652 = (cppVar_8650 == 138);
	BIT_VEC cppVar_8653 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8654 = (cppVar_8653 << 3) | 0;
	cppVar_8654 = (cppVar_8654 & cppMask_un_5_);
	BIT_VEC cppVar_8655 = (0 << 5) | cppVar_8654;
	cppVar_8655 = (cppVar_8655 & cppMask_un_8_);
	bool cppVar_8657 = (cppVar_8655 == 140);
	BIT_VEC cppVar_8658 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8659 = (cppVar_8658 << 3) | 0;
	cppVar_8659 = (cppVar_8659 & cppMask_un_5_);
	BIT_VEC cppVar_8660 = (0 << 5) | cppVar_8659;
	cppVar_8660 = (cppVar_8660 & cppMask_un_8_);
	bool cppVar_8662 = (cppVar_8660 == 139);
	BIT_VEC cppVar_8663 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8664 = (cppVar_8663 << 3) | 0;
	cppVar_8664 = (cppVar_8664 & cppMask_un_5_);
	BIT_VEC cppVar_8665 = (0 << 5) | cppVar_8664;
	cppVar_8665 = (cppVar_8665 & cppMask_un_8_);
	bool cppVar_8667 = (cppVar_8665 == 141);
	BIT_VEC cppVar_8668 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8669 = (cppVar_8668 << 3) | 0;
	cppVar_8669 = (cppVar_8669 & cppMask_un_5_);
	BIT_VEC cppVar_8670 = (0 << 5) | cppVar_8669;
	cppVar_8670 = (cppVar_8670 & cppMask_un_8_);
	bool cppVar_8672 = (cppVar_8670 == 144);
	BIT_VEC cppVar_8673 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8674 = (cppVar_8673 << 3) | 0;
	cppVar_8674 = (cppVar_8674 & cppMask_un_5_);
	BIT_VEC cppVar_8675 = (0 << 5) | cppVar_8674;
	cppVar_8675 = (cppVar_8675 & cppMask_un_8_);
	bool cppVar_8677 = (cppVar_8675 == 152);
	BIT_VEC cppVar_8678 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8679 = (cppVar_8678 << 3) | 0;
	cppVar_8679 = (cppVar_8679 & cppMask_un_5_);
	BIT_VEC cppVar_8680 = (0 << 5) | cppVar_8679;
	cppVar_8680 = (cppVar_8680 & cppMask_un_8_);
	bool cppVar_8682 = (cppVar_8680 == 153);
	BIT_VEC cppVar_8683 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8684 = (cppVar_8683 << 3) | 0;
	cppVar_8684 = (cppVar_8684 & cppMask_un_5_);
	BIT_VEC cppVar_8685 = (0 << 5) | cppVar_8684;
	cppVar_8685 = (cppVar_8685 & cppMask_un_8_);
	bool cppVar_8687 = (cppVar_8685 == 160);
	BIT_VEC cppVar_8688 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8689 = (cppVar_8688 << 3) | 0;
	cppVar_8689 = (cppVar_8689 & cppMask_un_5_);
	BIT_VEC cppVar_8690 = (0 << 5) | cppVar_8689;
	cppVar_8690 = (cppVar_8690 & cppMask_un_8_);
	bool cppVar_8692 = (cppVar_8690 == 168);
	BIT_VEC cppVar_8693 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8694 = (cppVar_8693 << 3) | 0;
	cppVar_8694 = (cppVar_8694 & cppMask_un_5_);
	BIT_VEC cppVar_8695 = (0 << 5) | cppVar_8694;
	cppVar_8695 = (cppVar_8695 & cppMask_un_8_);
	bool cppVar_8697 = (cppVar_8695 == 176);
	BIT_VEC cppVar_8698 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8699 = (cppVar_8698 << 3) | 0;
	cppVar_8699 = (cppVar_8699 & cppMask_un_5_);
	BIT_VEC cppVar_8700 = (0 << 5) | cppVar_8699;
	cppVar_8700 = (cppVar_8700 & cppMask_un_8_);
	bool cppVar_8702 = (cppVar_8700 == 184);
	BIT_VEC cppVar_8703 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8704 = (cppVar_8703 << 3) | 0;
	cppVar_8704 = (cppVar_8704 & cppMask_un_5_);
	BIT_VEC cppVar_8705 = (0 << 5) | cppVar_8704;
	cppVar_8705 = (cppVar_8705 & cppMask_un_8_);
	bool cppVar_8707 = (cppVar_8705 == 208);
	BIT_VEC cppVar_8708 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8709 = (cppVar_8708 << 3) | 0;
	cppVar_8709 = (cppVar_8709 & cppMask_un_5_);
	BIT_VEC cppVar_8710 = (0 << 5) | cppVar_8709;
	cppVar_8710 = (cppVar_8710 & cppMask_un_8_);
	bool cppVar_8712 = (cppVar_8710 == 224);
	BIT_VEC cppVar_8713 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8714 = (cppVar_8713 << 3) | 0;
	cppVar_8714 = (cppVar_8714 & cppMask_un_5_);
	BIT_VEC cppVar_8715 = (0 << 5) | cppVar_8714;
	cppVar_8715 = (cppVar_8715 & cppMask_un_8_);
	bool cppVar_8717 = (cppVar_8715 == 240);
	BIT_VEC cppVar_8719 = (cppVar_8717) ? B : 0;
	BIT_VEC cppVar_8720 = (cppVar_8712) ? ACC : cppVar_8719;
	BIT_VEC cppVar_8721 = (cppVar_8707) ? PSW : cppVar_8720;
	BIT_VEC cppVar_8722 = (cppVar_8702) ? IP : cppVar_8721;
	BIT_VEC cppVar_8723 = (cppVar_8697) ? P3 : cppVar_8722;
	BIT_VEC cppVar_8724 = (cppVar_8692) ? IE : cppVar_8723;
	BIT_VEC cppVar_8725 = (cppVar_8687) ? P2 : cppVar_8724;
	BIT_VEC cppVar_8726 = (cppVar_8682) ? SBUF : cppVar_8725;
	BIT_VEC cppVar_8727 = (cppVar_8677) ? SCON : cppVar_8726;
	BIT_VEC cppVar_8728 = (cppVar_8672) ? P1 : cppVar_8727;
	BIT_VEC cppVar_8729 = (cppVar_8667) ? TH1 : cppVar_8728;
	BIT_VEC cppVar_8730 = (cppVar_8662) ? TL1 : cppVar_8729;
	BIT_VEC cppVar_8731 = (cppVar_8657) ? TH0 : cppVar_8730;
	BIT_VEC cppVar_8732 = (cppVar_8652) ? TL0 : cppVar_8731;
	BIT_VEC cppVar_8733 = (cppVar_8647) ? TMOD : cppVar_8732;
	BIT_VEC cppVar_8734 = (cppVar_8642) ? TCON : cppVar_8733;
	BIT_VEC cppVar_8735 = (cppVar_8637) ? PCON : cppVar_8734;
	BIT_VEC cppVar_8736 = (cppVar_8632) ? DPH : cppVar_8735;
	BIT_VEC cppVar_8737 = (cppVar_8627) ? DPL : cppVar_8736;
	BIT_VEC cppVar_8738 = (cppVar_8622) ? SP : cppVar_8737;
	BIT_VEC cppVar_8739 = (cppVar_8617) ? P0 : cppVar_8738;
	BIT_VEC cppVar_8740 = (cppVar_8608) ? cppVar_8612 : cppVar_8739;
	BIT_VEC cppVar_8741 = (cppVar_8600) ? cppVar_8740 : DPH;
	BIT_VEC cppVar_8742 = ROM.rd(PC);
	bool cppVar_8744 = (cppVar_8742 == 135);
	BIT_VEC cppVar_8746 = PC + 1;
	cppVar_8746 = (cppVar_8746 & cppMask_un_16_);
	BIT_VEC cppVar_8747 = ROM.rd(cppVar_8746);
	bool cppVar_8749 = (cppVar_8747 == 131);
	BIT_VEC cppVar_8751 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8753 = (cppVar_8751 << 3) | 1;
	cppVar_8753 = (cppVar_8753 & cppMask_un_5_);
	BIT_VEC cppVar_8754 = (0 << 5) | cppVar_8753;
	cppVar_8754 = (cppVar_8754 & cppMask_un_8_);
	BIT_VEC cppVar_8755 = IRAM.rd(cppVar_8754);
	BIT_VEC cppVar_8756 = IRAM.rd(cppVar_8755);
	BIT_VEC cppVar_8757 = (cppVar_8749) ? cppVar_8756 : DPH;
	BIT_VEC cppVar_8758 = ROM.rd(PC);
	bool cppVar_8760 = (cppVar_8758 == 134);
	BIT_VEC cppVar_8762 = PC + 1;
	cppVar_8762 = (cppVar_8762 & cppMask_un_16_);
	BIT_VEC cppVar_8763 = ROM.rd(cppVar_8762);
	bool cppVar_8765 = (cppVar_8763 == 131);
	BIT_VEC cppVar_8767 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_8769 = (cppVar_8767 << 3) | 0;
	cppVar_8769 = (cppVar_8769 & cppMask_un_5_);
	BIT_VEC cppVar_8770 = (0 << 5) | cppVar_8769;
	cppVar_8770 = (cppVar_8770 & cppMask_un_8_);
	BIT_VEC cppVar_8771 = IRAM.rd(cppVar_8770);
	BIT_VEC cppVar_8772 = IRAM.rd(cppVar_8771);
	BIT_VEC cppVar_8773 = (cppVar_8765) ? cppVar_8772 : DPH;
	BIT_VEC cppVar_8774 = ROM.rd(PC);
	bool cppVar_8776 = (cppVar_8774 == 133);
	BIT_VEC cppVar_8778 = PC + 2;
	cppVar_8778 = (cppVar_8778 & cppMask_un_16_);
	BIT_VEC cppVar_8779 = ROM.rd(cppVar_8778);
	bool cppVar_8781 = (cppVar_8779 == 131);
	BIT_VEC cppVar_8783 = PC + 1;
	cppVar_8783 = (cppVar_8783 & cppMask_un_16_);
	BIT_VEC cppVar_8784 = ROM.rd(cppVar_8783);
	BIT_VEC cppVar_8785 = (cppVar_8784 >> 7) & cppMask_un_1_;
	bool cppVar_8787 = (cppVar_8785 == 0);
	BIT_VEC cppVar_8788 = PC + 1;
	cppVar_8788 = (cppVar_8788 & cppMask_un_16_);
	BIT_VEC cppVar_8789 = ROM.rd(cppVar_8788);
	BIT_VEC cppVar_8790 = IRAM.rd(cppVar_8789);
	BIT_VEC cppVar_8791 = PC + 1;
	cppVar_8791 = (cppVar_8791 & cppMask_un_16_);
	BIT_VEC cppVar_8792 = ROM.rd(cppVar_8791);
	bool cppVar_8794 = (cppVar_8792 == 128);
	BIT_VEC cppVar_8795 = PC + 1;
	cppVar_8795 = (cppVar_8795 & cppMask_un_16_);
	BIT_VEC cppVar_8796 = ROM.rd(cppVar_8795);
	bool cppVar_8798 = (cppVar_8796 == 129);
	BIT_VEC cppVar_8799 = PC + 1;
	cppVar_8799 = (cppVar_8799 & cppMask_un_16_);
	BIT_VEC cppVar_8800 = ROM.rd(cppVar_8799);
	bool cppVar_8802 = (cppVar_8800 == 130);
	BIT_VEC cppVar_8803 = PC + 1;
	cppVar_8803 = (cppVar_8803 & cppMask_un_16_);
	BIT_VEC cppVar_8804 = ROM.rd(cppVar_8803);
	bool cppVar_8806 = (cppVar_8804 == 131);
	BIT_VEC cppVar_8807 = PC + 1;
	cppVar_8807 = (cppVar_8807 & cppMask_un_16_);
	BIT_VEC cppVar_8808 = ROM.rd(cppVar_8807);
	bool cppVar_8810 = (cppVar_8808 == 135);
	BIT_VEC cppVar_8811 = PC + 1;
	cppVar_8811 = (cppVar_8811 & cppMask_un_16_);
	BIT_VEC cppVar_8812 = ROM.rd(cppVar_8811);
	bool cppVar_8814 = (cppVar_8812 == 136);
	BIT_VEC cppVar_8815 = PC + 1;
	cppVar_8815 = (cppVar_8815 & cppMask_un_16_);
	BIT_VEC cppVar_8816 = ROM.rd(cppVar_8815);
	bool cppVar_8818 = (cppVar_8816 == 137);
	BIT_VEC cppVar_8819 = PC + 1;
	cppVar_8819 = (cppVar_8819 & cppMask_un_16_);
	BIT_VEC cppVar_8820 = ROM.rd(cppVar_8819);
	bool cppVar_8822 = (cppVar_8820 == 138);
	BIT_VEC cppVar_8823 = PC + 1;
	cppVar_8823 = (cppVar_8823 & cppMask_un_16_);
	BIT_VEC cppVar_8824 = ROM.rd(cppVar_8823);
	bool cppVar_8826 = (cppVar_8824 == 140);
	BIT_VEC cppVar_8827 = PC + 1;
	cppVar_8827 = (cppVar_8827 & cppMask_un_16_);
	BIT_VEC cppVar_8828 = ROM.rd(cppVar_8827);
	bool cppVar_8830 = (cppVar_8828 == 139);
	BIT_VEC cppVar_8831 = PC + 1;
	cppVar_8831 = (cppVar_8831 & cppMask_un_16_);
	BIT_VEC cppVar_8832 = ROM.rd(cppVar_8831);
	bool cppVar_8834 = (cppVar_8832 == 141);
	BIT_VEC cppVar_8835 = PC + 1;
	cppVar_8835 = (cppVar_8835 & cppMask_un_16_);
	BIT_VEC cppVar_8836 = ROM.rd(cppVar_8835);
	bool cppVar_8838 = (cppVar_8836 == 144);
	BIT_VEC cppVar_8839 = PC + 1;
	cppVar_8839 = (cppVar_8839 & cppMask_un_16_);
	BIT_VEC cppVar_8840 = ROM.rd(cppVar_8839);
	bool cppVar_8842 = (cppVar_8840 == 152);
	BIT_VEC cppVar_8843 = PC + 1;
	cppVar_8843 = (cppVar_8843 & cppMask_un_16_);
	BIT_VEC cppVar_8844 = ROM.rd(cppVar_8843);
	bool cppVar_8846 = (cppVar_8844 == 153);
	BIT_VEC cppVar_8847 = PC + 1;
	cppVar_8847 = (cppVar_8847 & cppMask_un_16_);
	BIT_VEC cppVar_8848 = ROM.rd(cppVar_8847);
	bool cppVar_8850 = (cppVar_8848 == 160);
	BIT_VEC cppVar_8851 = PC + 1;
	cppVar_8851 = (cppVar_8851 & cppMask_un_16_);
	BIT_VEC cppVar_8852 = ROM.rd(cppVar_8851);
	bool cppVar_8854 = (cppVar_8852 == 168);
	BIT_VEC cppVar_8855 = PC + 1;
	cppVar_8855 = (cppVar_8855 & cppMask_un_16_);
	BIT_VEC cppVar_8856 = ROM.rd(cppVar_8855);
	bool cppVar_8858 = (cppVar_8856 == 176);
	BIT_VEC cppVar_8859 = PC + 1;
	cppVar_8859 = (cppVar_8859 & cppMask_un_16_);
	BIT_VEC cppVar_8860 = ROM.rd(cppVar_8859);
	bool cppVar_8862 = (cppVar_8860 == 184);
	BIT_VEC cppVar_8863 = PC + 1;
	cppVar_8863 = (cppVar_8863 & cppMask_un_16_);
	BIT_VEC cppVar_8864 = ROM.rd(cppVar_8863);
	bool cppVar_8866 = (cppVar_8864 == 208);
	BIT_VEC cppVar_8867 = PC + 1;
	cppVar_8867 = (cppVar_8867 & cppMask_un_16_);
	BIT_VEC cppVar_8868 = ROM.rd(cppVar_8867);
	bool cppVar_8870 = (cppVar_8868 == 224);
	BIT_VEC cppVar_8871 = PC + 1;
	cppVar_8871 = (cppVar_8871 & cppMask_un_16_);
	BIT_VEC cppVar_8872 = ROM.rd(cppVar_8871);
	bool cppVar_8874 = (cppVar_8872 == 240);
	BIT_VEC cppVar_8876 = (cppVar_8874) ? B : 0;
	BIT_VEC cppVar_8877 = (cppVar_8870) ? ACC : cppVar_8876;
	BIT_VEC cppVar_8878 = (cppVar_8866) ? PSW : cppVar_8877;
	BIT_VEC cppVar_8879 = (cppVar_8862) ? IP : cppVar_8878;
	BIT_VEC cppVar_8880 = (cppVar_8858) ? P3 : cppVar_8879;
	BIT_VEC cppVar_8881 = (cppVar_8854) ? IE : cppVar_8880;
	BIT_VEC cppVar_8882 = (cppVar_8850) ? P2 : cppVar_8881;
	BIT_VEC cppVar_8883 = (cppVar_8846) ? SBUF : cppVar_8882;
	BIT_VEC cppVar_8884 = (cppVar_8842) ? SCON : cppVar_8883;
	BIT_VEC cppVar_8885 = (cppVar_8838) ? P1 : cppVar_8884;
	BIT_VEC cppVar_8886 = (cppVar_8834) ? TH1 : cppVar_8885;
	BIT_VEC cppVar_8887 = (cppVar_8830) ? TL1 : cppVar_8886;
	BIT_VEC cppVar_8888 = (cppVar_8826) ? TH0 : cppVar_8887;
	BIT_VEC cppVar_8889 = (cppVar_8822) ? TL0 : cppVar_8888;
	BIT_VEC cppVar_8890 = (cppVar_8818) ? TMOD : cppVar_8889;
	BIT_VEC cppVar_8891 = (cppVar_8814) ? TCON : cppVar_8890;
	BIT_VEC cppVar_8892 = (cppVar_8810) ? PCON : cppVar_8891;
	BIT_VEC cppVar_8893 = (cppVar_8806) ? DPH : cppVar_8892;
	BIT_VEC cppVar_8894 = (cppVar_8802) ? DPL : cppVar_8893;
	BIT_VEC cppVar_8895 = (cppVar_8798) ? SP : cppVar_8894;
	BIT_VEC cppVar_8896 = (cppVar_8794) ? P0 : cppVar_8895;
	BIT_VEC cppVar_8897 = (cppVar_8787) ? cppVar_8790 : cppVar_8896;
	BIT_VEC cppVar_8898 = (cppVar_8781) ? cppVar_8897 : DPH;
	BIT_VEC cppVar_8899 = ROM.rd(PC);
	bool cppVar_8901 = (cppVar_8899 == 117);
	BIT_VEC cppVar_8903 = PC + 1;
	cppVar_8903 = (cppVar_8903 & cppMask_un_16_);
	BIT_VEC cppVar_8904 = ROM.rd(cppVar_8903);
	bool cppVar_8906 = (cppVar_8904 == 131);
	BIT_VEC cppVar_8908 = PC + 2;
	cppVar_8908 = (cppVar_8908 & cppMask_un_16_);
	BIT_VEC cppVar_8909 = ROM.rd(cppVar_8908);
	BIT_VEC cppVar_8910 = (cppVar_8906) ? cppVar_8909 : DPH;
	BIT_VEC cppVar_8911 = ROM.rd(PC);
	bool cppVar_8913 = (cppVar_8911 == 99);
	BIT_VEC cppVar_8915 = PC + 1;
	cppVar_8915 = (cppVar_8915 & cppMask_un_16_);
	BIT_VEC cppVar_8916 = ROM.rd(cppVar_8915);
	bool cppVar_8918 = (cppVar_8916 == 131);
	BIT_VEC cppVar_8919 = PC + 1;
	cppVar_8919 = (cppVar_8919 & cppMask_un_16_);
	BIT_VEC cppVar_8920 = ROM.rd(cppVar_8919);
	BIT_VEC cppVar_8921 = (cppVar_8920 >> 7) & cppMask_un_1_;
	bool cppVar_8923 = (cppVar_8921 == 0);
	BIT_VEC cppVar_8924 = PC + 1;
	cppVar_8924 = (cppVar_8924 & cppMask_un_16_);
	BIT_VEC cppVar_8925 = ROM.rd(cppVar_8924);
	BIT_VEC cppVar_8926 = IRAM.rd(cppVar_8925);
	BIT_VEC cppVar_8927 = PC + 1;
	cppVar_8927 = (cppVar_8927 & cppMask_un_16_);
	BIT_VEC cppVar_8928 = ROM.rd(cppVar_8927);
	bool cppVar_8930 = (cppVar_8928 == 128);
	BIT_VEC cppVar_8931 = PC + 1;
	cppVar_8931 = (cppVar_8931 & cppMask_un_16_);
	BIT_VEC cppVar_8932 = ROM.rd(cppVar_8931);
	bool cppVar_8934 = (cppVar_8932 == 129);
	BIT_VEC cppVar_8935 = PC + 1;
	cppVar_8935 = (cppVar_8935 & cppMask_un_16_);
	BIT_VEC cppVar_8936 = ROM.rd(cppVar_8935);
	bool cppVar_8938 = (cppVar_8936 == 130);
	BIT_VEC cppVar_8939 = PC + 1;
	cppVar_8939 = (cppVar_8939 & cppMask_un_16_);
	BIT_VEC cppVar_8940 = ROM.rd(cppVar_8939);
	bool cppVar_8942 = (cppVar_8940 == 131);
	BIT_VEC cppVar_8943 = PC + 1;
	cppVar_8943 = (cppVar_8943 & cppMask_un_16_);
	BIT_VEC cppVar_8944 = ROM.rd(cppVar_8943);
	bool cppVar_8946 = (cppVar_8944 == 135);
	BIT_VEC cppVar_8947 = PC + 1;
	cppVar_8947 = (cppVar_8947 & cppMask_un_16_);
	BIT_VEC cppVar_8948 = ROM.rd(cppVar_8947);
	bool cppVar_8950 = (cppVar_8948 == 136);
	BIT_VEC cppVar_8951 = PC + 1;
	cppVar_8951 = (cppVar_8951 & cppMask_un_16_);
	BIT_VEC cppVar_8952 = ROM.rd(cppVar_8951);
	bool cppVar_8954 = (cppVar_8952 == 137);
	BIT_VEC cppVar_8955 = PC + 1;
	cppVar_8955 = (cppVar_8955 & cppMask_un_16_);
	BIT_VEC cppVar_8956 = ROM.rd(cppVar_8955);
	bool cppVar_8958 = (cppVar_8956 == 138);
	BIT_VEC cppVar_8959 = PC + 1;
	cppVar_8959 = (cppVar_8959 & cppMask_un_16_);
	BIT_VEC cppVar_8960 = ROM.rd(cppVar_8959);
	bool cppVar_8962 = (cppVar_8960 == 140);
	BIT_VEC cppVar_8963 = PC + 1;
	cppVar_8963 = (cppVar_8963 & cppMask_un_16_);
	BIT_VEC cppVar_8964 = ROM.rd(cppVar_8963);
	bool cppVar_8966 = (cppVar_8964 == 139);
	BIT_VEC cppVar_8967 = PC + 1;
	cppVar_8967 = (cppVar_8967 & cppMask_un_16_);
	BIT_VEC cppVar_8968 = ROM.rd(cppVar_8967);
	bool cppVar_8970 = (cppVar_8968 == 141);
	BIT_VEC cppVar_8971 = PC + 1;
	cppVar_8971 = (cppVar_8971 & cppMask_un_16_);
	BIT_VEC cppVar_8972 = ROM.rd(cppVar_8971);
	bool cppVar_8974 = (cppVar_8972 == 144);
	BIT_VEC cppVar_8975 = PC + 1;
	cppVar_8975 = (cppVar_8975 & cppMask_un_16_);
	BIT_VEC cppVar_8976 = ROM.rd(cppVar_8975);
	bool cppVar_8978 = (cppVar_8976 == 152);
	BIT_VEC cppVar_8979 = PC + 1;
	cppVar_8979 = (cppVar_8979 & cppMask_un_16_);
	BIT_VEC cppVar_8980 = ROM.rd(cppVar_8979);
	bool cppVar_8982 = (cppVar_8980 == 153);
	BIT_VEC cppVar_8983 = PC + 1;
	cppVar_8983 = (cppVar_8983 & cppMask_un_16_);
	BIT_VEC cppVar_8984 = ROM.rd(cppVar_8983);
	bool cppVar_8986 = (cppVar_8984 == 160);
	BIT_VEC cppVar_8987 = PC + 1;
	cppVar_8987 = (cppVar_8987 & cppMask_un_16_);
	BIT_VEC cppVar_8988 = ROM.rd(cppVar_8987);
	bool cppVar_8990 = (cppVar_8988 == 168);
	BIT_VEC cppVar_8991 = PC + 1;
	cppVar_8991 = (cppVar_8991 & cppMask_un_16_);
	BIT_VEC cppVar_8992 = ROM.rd(cppVar_8991);
	bool cppVar_8994 = (cppVar_8992 == 176);
	BIT_VEC cppVar_8995 = PC + 1;
	cppVar_8995 = (cppVar_8995 & cppMask_un_16_);
	BIT_VEC cppVar_8996 = ROM.rd(cppVar_8995);
	bool cppVar_8998 = (cppVar_8996 == 184);
	BIT_VEC cppVar_8999 = PC + 1;
	cppVar_8999 = (cppVar_8999 & cppMask_un_16_);
	BIT_VEC cppVar_9000 = ROM.rd(cppVar_8999);
	bool cppVar_9002 = (cppVar_9000 == 208);
	BIT_VEC cppVar_9003 = PC + 1;
	cppVar_9003 = (cppVar_9003 & cppMask_un_16_);
	BIT_VEC cppVar_9004 = ROM.rd(cppVar_9003);
	bool cppVar_9006 = (cppVar_9004 == 224);
	BIT_VEC cppVar_9007 = PC + 1;
	cppVar_9007 = (cppVar_9007 & cppMask_un_16_);
	BIT_VEC cppVar_9008 = ROM.rd(cppVar_9007);
	bool cppVar_9010 = (cppVar_9008 == 240);
	BIT_VEC cppVar_9012 = (cppVar_9010) ? B : 0;
	BIT_VEC cppVar_9013 = (cppVar_9006) ? ACC : cppVar_9012;
	BIT_VEC cppVar_9014 = (cppVar_9002) ? PSW : cppVar_9013;
	BIT_VEC cppVar_9015 = (cppVar_8998) ? IP : cppVar_9014;
	BIT_VEC cppVar_9016 = (cppVar_8994) ? P3 : cppVar_9015;
	BIT_VEC cppVar_9017 = (cppVar_8990) ? IE : cppVar_9016;
	BIT_VEC cppVar_9018 = (cppVar_8986) ? P2 : cppVar_9017;
	BIT_VEC cppVar_9019 = (cppVar_8982) ? SBUF : cppVar_9018;
	BIT_VEC cppVar_9020 = (cppVar_8978) ? SCON : cppVar_9019;
	BIT_VEC cppVar_9021 = (cppVar_8974) ? P1 : cppVar_9020;
	BIT_VEC cppVar_9022 = (cppVar_8970) ? TH1 : cppVar_9021;
	BIT_VEC cppVar_9023 = (cppVar_8966) ? TL1 : cppVar_9022;
	BIT_VEC cppVar_9024 = (cppVar_8962) ? TH0 : cppVar_9023;
	BIT_VEC cppVar_9025 = (cppVar_8958) ? TL0 : cppVar_9024;
	BIT_VEC cppVar_9026 = (cppVar_8954) ? TMOD : cppVar_9025;
	BIT_VEC cppVar_9027 = (cppVar_8950) ? TCON : cppVar_9026;
	BIT_VEC cppVar_9028 = (cppVar_8946) ? PCON : cppVar_9027;
	BIT_VEC cppVar_9029 = (cppVar_8942) ? DPH : cppVar_9028;
	BIT_VEC cppVar_9030 = (cppVar_8938) ? DPL : cppVar_9029;
	BIT_VEC cppVar_9031 = (cppVar_8934) ? SP : cppVar_9030;
	BIT_VEC cppVar_9032 = (cppVar_8930) ? P0 : cppVar_9031;
	BIT_VEC cppVar_9033 = (cppVar_8923) ? cppVar_8926 : cppVar_9032;
	BIT_VEC cppVar_9035 = PC + 2;
	cppVar_9035 = (cppVar_9035 & cppMask_un_16_);
	BIT_VEC cppVar_9036 = ROM.rd(cppVar_9035);
	BIT_VEC cppVar_9037 = cppVar_9033 ^ cppVar_9036;
	BIT_VEC cppVar_9038 = (cppVar_8918) ? cppVar_9037 : DPH;
	BIT_VEC cppVar_9039 = ROM.rd(PC);
	bool cppVar_9041 = (cppVar_9039 == 98);
	BIT_VEC cppVar_9043 = PC + 1;
	cppVar_9043 = (cppVar_9043 & cppMask_un_16_);
	BIT_VEC cppVar_9044 = ROM.rd(cppVar_9043);
	bool cppVar_9046 = (cppVar_9044 == 131);
	BIT_VEC cppVar_9047 = PC + 1;
	cppVar_9047 = (cppVar_9047 & cppMask_un_16_);
	BIT_VEC cppVar_9048 = ROM.rd(cppVar_9047);
	BIT_VEC cppVar_9049 = (cppVar_9048 >> 7) & cppMask_un_1_;
	bool cppVar_9051 = (cppVar_9049 == 0);
	BIT_VEC cppVar_9052 = PC + 1;
	cppVar_9052 = (cppVar_9052 & cppMask_un_16_);
	BIT_VEC cppVar_9053 = ROM.rd(cppVar_9052);
	BIT_VEC cppVar_9054 = IRAM.rd(cppVar_9053);
	BIT_VEC cppVar_9055 = PC + 1;
	cppVar_9055 = (cppVar_9055 & cppMask_un_16_);
	BIT_VEC cppVar_9056 = ROM.rd(cppVar_9055);
	bool cppVar_9058 = (cppVar_9056 == 128);
	BIT_VEC cppVar_9059 = PC + 1;
	cppVar_9059 = (cppVar_9059 & cppMask_un_16_);
	BIT_VEC cppVar_9060 = ROM.rd(cppVar_9059);
	bool cppVar_9062 = (cppVar_9060 == 129);
	BIT_VEC cppVar_9063 = PC + 1;
	cppVar_9063 = (cppVar_9063 & cppMask_un_16_);
	BIT_VEC cppVar_9064 = ROM.rd(cppVar_9063);
	bool cppVar_9066 = (cppVar_9064 == 130);
	BIT_VEC cppVar_9067 = PC + 1;
	cppVar_9067 = (cppVar_9067 & cppMask_un_16_);
	BIT_VEC cppVar_9068 = ROM.rd(cppVar_9067);
	bool cppVar_9070 = (cppVar_9068 == 131);
	BIT_VEC cppVar_9071 = PC + 1;
	cppVar_9071 = (cppVar_9071 & cppMask_un_16_);
	BIT_VEC cppVar_9072 = ROM.rd(cppVar_9071);
	bool cppVar_9074 = (cppVar_9072 == 135);
	BIT_VEC cppVar_9075 = PC + 1;
	cppVar_9075 = (cppVar_9075 & cppMask_un_16_);
	BIT_VEC cppVar_9076 = ROM.rd(cppVar_9075);
	bool cppVar_9078 = (cppVar_9076 == 136);
	BIT_VEC cppVar_9079 = PC + 1;
	cppVar_9079 = (cppVar_9079 & cppMask_un_16_);
	BIT_VEC cppVar_9080 = ROM.rd(cppVar_9079);
	bool cppVar_9082 = (cppVar_9080 == 137);
	BIT_VEC cppVar_9083 = PC + 1;
	cppVar_9083 = (cppVar_9083 & cppMask_un_16_);
	BIT_VEC cppVar_9084 = ROM.rd(cppVar_9083);
	bool cppVar_9086 = (cppVar_9084 == 138);
	BIT_VEC cppVar_9087 = PC + 1;
	cppVar_9087 = (cppVar_9087 & cppMask_un_16_);
	BIT_VEC cppVar_9088 = ROM.rd(cppVar_9087);
	bool cppVar_9090 = (cppVar_9088 == 140);
	BIT_VEC cppVar_9091 = PC + 1;
	cppVar_9091 = (cppVar_9091 & cppMask_un_16_);
	BIT_VEC cppVar_9092 = ROM.rd(cppVar_9091);
	bool cppVar_9094 = (cppVar_9092 == 139);
	BIT_VEC cppVar_9095 = PC + 1;
	cppVar_9095 = (cppVar_9095 & cppMask_un_16_);
	BIT_VEC cppVar_9096 = ROM.rd(cppVar_9095);
	bool cppVar_9098 = (cppVar_9096 == 141);
	BIT_VEC cppVar_9099 = PC + 1;
	cppVar_9099 = (cppVar_9099 & cppMask_un_16_);
	BIT_VEC cppVar_9100 = ROM.rd(cppVar_9099);
	bool cppVar_9102 = (cppVar_9100 == 144);
	BIT_VEC cppVar_9103 = PC + 1;
	cppVar_9103 = (cppVar_9103 & cppMask_un_16_);
	BIT_VEC cppVar_9104 = ROM.rd(cppVar_9103);
	bool cppVar_9106 = (cppVar_9104 == 152);
	BIT_VEC cppVar_9107 = PC + 1;
	cppVar_9107 = (cppVar_9107 & cppMask_un_16_);
	BIT_VEC cppVar_9108 = ROM.rd(cppVar_9107);
	bool cppVar_9110 = (cppVar_9108 == 153);
	BIT_VEC cppVar_9111 = PC + 1;
	cppVar_9111 = (cppVar_9111 & cppMask_un_16_);
	BIT_VEC cppVar_9112 = ROM.rd(cppVar_9111);
	bool cppVar_9114 = (cppVar_9112 == 160);
	BIT_VEC cppVar_9115 = PC + 1;
	cppVar_9115 = (cppVar_9115 & cppMask_un_16_);
	BIT_VEC cppVar_9116 = ROM.rd(cppVar_9115);
	bool cppVar_9118 = (cppVar_9116 == 168);
	BIT_VEC cppVar_9119 = PC + 1;
	cppVar_9119 = (cppVar_9119 & cppMask_un_16_);
	BIT_VEC cppVar_9120 = ROM.rd(cppVar_9119);
	bool cppVar_9122 = (cppVar_9120 == 176);
	BIT_VEC cppVar_9123 = PC + 1;
	cppVar_9123 = (cppVar_9123 & cppMask_un_16_);
	BIT_VEC cppVar_9124 = ROM.rd(cppVar_9123);
	bool cppVar_9126 = (cppVar_9124 == 184);
	BIT_VEC cppVar_9127 = PC + 1;
	cppVar_9127 = (cppVar_9127 & cppMask_un_16_);
	BIT_VEC cppVar_9128 = ROM.rd(cppVar_9127);
	bool cppVar_9130 = (cppVar_9128 == 208);
	BIT_VEC cppVar_9131 = PC + 1;
	cppVar_9131 = (cppVar_9131 & cppMask_un_16_);
	BIT_VEC cppVar_9132 = ROM.rd(cppVar_9131);
	bool cppVar_9134 = (cppVar_9132 == 224);
	BIT_VEC cppVar_9135 = PC + 1;
	cppVar_9135 = (cppVar_9135 & cppMask_un_16_);
	BIT_VEC cppVar_9136 = ROM.rd(cppVar_9135);
	bool cppVar_9138 = (cppVar_9136 == 240);
	BIT_VEC cppVar_9140 = (cppVar_9138) ? B : 0;
	BIT_VEC cppVar_9141 = (cppVar_9134) ? ACC : cppVar_9140;
	BIT_VEC cppVar_9142 = (cppVar_9130) ? PSW : cppVar_9141;
	BIT_VEC cppVar_9143 = (cppVar_9126) ? IP : cppVar_9142;
	BIT_VEC cppVar_9144 = (cppVar_9122) ? P3 : cppVar_9143;
	BIT_VEC cppVar_9145 = (cppVar_9118) ? IE : cppVar_9144;
	BIT_VEC cppVar_9146 = (cppVar_9114) ? P2 : cppVar_9145;
	BIT_VEC cppVar_9147 = (cppVar_9110) ? SBUF : cppVar_9146;
	BIT_VEC cppVar_9148 = (cppVar_9106) ? SCON : cppVar_9147;
	BIT_VEC cppVar_9149 = (cppVar_9102) ? P1 : cppVar_9148;
	BIT_VEC cppVar_9150 = (cppVar_9098) ? TH1 : cppVar_9149;
	BIT_VEC cppVar_9151 = (cppVar_9094) ? TL1 : cppVar_9150;
	BIT_VEC cppVar_9152 = (cppVar_9090) ? TH0 : cppVar_9151;
	BIT_VEC cppVar_9153 = (cppVar_9086) ? TL0 : cppVar_9152;
	BIT_VEC cppVar_9154 = (cppVar_9082) ? TMOD : cppVar_9153;
	BIT_VEC cppVar_9155 = (cppVar_9078) ? TCON : cppVar_9154;
	BIT_VEC cppVar_9156 = (cppVar_9074) ? PCON : cppVar_9155;
	BIT_VEC cppVar_9157 = (cppVar_9070) ? DPH : cppVar_9156;
	BIT_VEC cppVar_9158 = (cppVar_9066) ? DPL : cppVar_9157;
	BIT_VEC cppVar_9159 = (cppVar_9062) ? SP : cppVar_9158;
	BIT_VEC cppVar_9160 = (cppVar_9058) ? P0 : cppVar_9159;
	BIT_VEC cppVar_9161 = (cppVar_9051) ? cppVar_9054 : cppVar_9160;
	BIT_VEC cppVar_9162 = cppVar_9161 ^ ACC;
	BIT_VEC cppVar_9163 = (cppVar_9046) ? cppVar_9162 : DPH;
	BIT_VEC cppVar_9164 = ROM.rd(PC);
	bool cppVar_9166 = (cppVar_9164 == 83);
	BIT_VEC cppVar_9168 = PC + 1;
	cppVar_9168 = (cppVar_9168 & cppMask_un_16_);
	BIT_VEC cppVar_9169 = ROM.rd(cppVar_9168);
	bool cppVar_9171 = (cppVar_9169 == 131);
	BIT_VEC cppVar_9172 = PC + 1;
	cppVar_9172 = (cppVar_9172 & cppMask_un_16_);
	BIT_VEC cppVar_9173 = ROM.rd(cppVar_9172);
	BIT_VEC cppVar_9174 = (cppVar_9173 >> 7) & cppMask_un_1_;
	bool cppVar_9176 = (cppVar_9174 == 0);
	BIT_VEC cppVar_9177 = PC + 1;
	cppVar_9177 = (cppVar_9177 & cppMask_un_16_);
	BIT_VEC cppVar_9178 = ROM.rd(cppVar_9177);
	BIT_VEC cppVar_9179 = IRAM.rd(cppVar_9178);
	BIT_VEC cppVar_9180 = PC + 1;
	cppVar_9180 = (cppVar_9180 & cppMask_un_16_);
	BIT_VEC cppVar_9181 = ROM.rd(cppVar_9180);
	bool cppVar_9183 = (cppVar_9181 == 128);
	BIT_VEC cppVar_9184 = PC + 1;
	cppVar_9184 = (cppVar_9184 & cppMask_un_16_);
	BIT_VEC cppVar_9185 = ROM.rd(cppVar_9184);
	bool cppVar_9187 = (cppVar_9185 == 129);
	BIT_VEC cppVar_9188 = PC + 1;
	cppVar_9188 = (cppVar_9188 & cppMask_un_16_);
	BIT_VEC cppVar_9189 = ROM.rd(cppVar_9188);
	bool cppVar_9191 = (cppVar_9189 == 130);
	BIT_VEC cppVar_9192 = PC + 1;
	cppVar_9192 = (cppVar_9192 & cppMask_un_16_);
	BIT_VEC cppVar_9193 = ROM.rd(cppVar_9192);
	bool cppVar_9195 = (cppVar_9193 == 131);
	BIT_VEC cppVar_9196 = PC + 1;
	cppVar_9196 = (cppVar_9196 & cppMask_un_16_);
	BIT_VEC cppVar_9197 = ROM.rd(cppVar_9196);
	bool cppVar_9199 = (cppVar_9197 == 135);
	BIT_VEC cppVar_9200 = PC + 1;
	cppVar_9200 = (cppVar_9200 & cppMask_un_16_);
	BIT_VEC cppVar_9201 = ROM.rd(cppVar_9200);
	bool cppVar_9203 = (cppVar_9201 == 136);
	BIT_VEC cppVar_9204 = PC + 1;
	cppVar_9204 = (cppVar_9204 & cppMask_un_16_);
	BIT_VEC cppVar_9205 = ROM.rd(cppVar_9204);
	bool cppVar_9207 = (cppVar_9205 == 137);
	BIT_VEC cppVar_9208 = PC + 1;
	cppVar_9208 = (cppVar_9208 & cppMask_un_16_);
	BIT_VEC cppVar_9209 = ROM.rd(cppVar_9208);
	bool cppVar_9211 = (cppVar_9209 == 138);
	BIT_VEC cppVar_9212 = PC + 1;
	cppVar_9212 = (cppVar_9212 & cppMask_un_16_);
	BIT_VEC cppVar_9213 = ROM.rd(cppVar_9212);
	bool cppVar_9215 = (cppVar_9213 == 140);
	BIT_VEC cppVar_9216 = PC + 1;
	cppVar_9216 = (cppVar_9216 & cppMask_un_16_);
	BIT_VEC cppVar_9217 = ROM.rd(cppVar_9216);
	bool cppVar_9219 = (cppVar_9217 == 139);
	BIT_VEC cppVar_9220 = PC + 1;
	cppVar_9220 = (cppVar_9220 & cppMask_un_16_);
	BIT_VEC cppVar_9221 = ROM.rd(cppVar_9220);
	bool cppVar_9223 = (cppVar_9221 == 141);
	BIT_VEC cppVar_9224 = PC + 1;
	cppVar_9224 = (cppVar_9224 & cppMask_un_16_);
	BIT_VEC cppVar_9225 = ROM.rd(cppVar_9224);
	bool cppVar_9227 = (cppVar_9225 == 144);
	BIT_VEC cppVar_9228 = PC + 1;
	cppVar_9228 = (cppVar_9228 & cppMask_un_16_);
	BIT_VEC cppVar_9229 = ROM.rd(cppVar_9228);
	bool cppVar_9231 = (cppVar_9229 == 152);
	BIT_VEC cppVar_9232 = PC + 1;
	cppVar_9232 = (cppVar_9232 & cppMask_un_16_);
	BIT_VEC cppVar_9233 = ROM.rd(cppVar_9232);
	bool cppVar_9235 = (cppVar_9233 == 153);
	BIT_VEC cppVar_9236 = PC + 1;
	cppVar_9236 = (cppVar_9236 & cppMask_un_16_);
	BIT_VEC cppVar_9237 = ROM.rd(cppVar_9236);
	bool cppVar_9239 = (cppVar_9237 == 160);
	BIT_VEC cppVar_9240 = PC + 1;
	cppVar_9240 = (cppVar_9240 & cppMask_un_16_);
	BIT_VEC cppVar_9241 = ROM.rd(cppVar_9240);
	bool cppVar_9243 = (cppVar_9241 == 168);
	BIT_VEC cppVar_9244 = PC + 1;
	cppVar_9244 = (cppVar_9244 & cppMask_un_16_);
	BIT_VEC cppVar_9245 = ROM.rd(cppVar_9244);
	bool cppVar_9247 = (cppVar_9245 == 176);
	BIT_VEC cppVar_9248 = PC + 1;
	cppVar_9248 = (cppVar_9248 & cppMask_un_16_);
	BIT_VEC cppVar_9249 = ROM.rd(cppVar_9248);
	bool cppVar_9251 = (cppVar_9249 == 184);
	BIT_VEC cppVar_9252 = PC + 1;
	cppVar_9252 = (cppVar_9252 & cppMask_un_16_);
	BIT_VEC cppVar_9253 = ROM.rd(cppVar_9252);
	bool cppVar_9255 = (cppVar_9253 == 208);
	BIT_VEC cppVar_9256 = PC + 1;
	cppVar_9256 = (cppVar_9256 & cppMask_un_16_);
	BIT_VEC cppVar_9257 = ROM.rd(cppVar_9256);
	bool cppVar_9259 = (cppVar_9257 == 224);
	BIT_VEC cppVar_9260 = PC + 1;
	cppVar_9260 = (cppVar_9260 & cppMask_un_16_);
	BIT_VEC cppVar_9261 = ROM.rd(cppVar_9260);
	bool cppVar_9263 = (cppVar_9261 == 240);
	BIT_VEC cppVar_9265 = (cppVar_9263) ? B : 0;
	BIT_VEC cppVar_9266 = (cppVar_9259) ? ACC : cppVar_9265;
	BIT_VEC cppVar_9267 = (cppVar_9255) ? PSW : cppVar_9266;
	BIT_VEC cppVar_9268 = (cppVar_9251) ? IP : cppVar_9267;
	BIT_VEC cppVar_9269 = (cppVar_9247) ? P3 : cppVar_9268;
	BIT_VEC cppVar_9270 = (cppVar_9243) ? IE : cppVar_9269;
	BIT_VEC cppVar_9271 = (cppVar_9239) ? P2 : cppVar_9270;
	BIT_VEC cppVar_9272 = (cppVar_9235) ? SBUF : cppVar_9271;
	BIT_VEC cppVar_9273 = (cppVar_9231) ? SCON : cppVar_9272;
	BIT_VEC cppVar_9274 = (cppVar_9227) ? P1 : cppVar_9273;
	BIT_VEC cppVar_9275 = (cppVar_9223) ? TH1 : cppVar_9274;
	BIT_VEC cppVar_9276 = (cppVar_9219) ? TL1 : cppVar_9275;
	BIT_VEC cppVar_9277 = (cppVar_9215) ? TH0 : cppVar_9276;
	BIT_VEC cppVar_9278 = (cppVar_9211) ? TL0 : cppVar_9277;
	BIT_VEC cppVar_9279 = (cppVar_9207) ? TMOD : cppVar_9278;
	BIT_VEC cppVar_9280 = (cppVar_9203) ? TCON : cppVar_9279;
	BIT_VEC cppVar_9281 = (cppVar_9199) ? PCON : cppVar_9280;
	BIT_VEC cppVar_9282 = (cppVar_9195) ? DPH : cppVar_9281;
	BIT_VEC cppVar_9283 = (cppVar_9191) ? DPL : cppVar_9282;
	BIT_VEC cppVar_9284 = (cppVar_9187) ? SP : cppVar_9283;
	BIT_VEC cppVar_9285 = (cppVar_9183) ? P0 : cppVar_9284;
	BIT_VEC cppVar_9286 = (cppVar_9176) ? cppVar_9179 : cppVar_9285;
	BIT_VEC cppVar_9288 = PC + 2;
	cppVar_9288 = (cppVar_9288 & cppMask_un_16_);
	BIT_VEC cppVar_9289 = ROM.rd(cppVar_9288);
	BIT_VEC cppVar_9290 = cppVar_9286 & cppVar_9289;
	BIT_VEC cppVar_9291 = (cppVar_9171) ? cppVar_9290 : DPH;
	BIT_VEC cppVar_9292 = ROM.rd(PC);
	bool cppVar_9294 = (cppVar_9292 == 82);
	BIT_VEC cppVar_9296 = PC + 1;
	cppVar_9296 = (cppVar_9296 & cppMask_un_16_);
	BIT_VEC cppVar_9297 = ROM.rd(cppVar_9296);
	bool cppVar_9299 = (cppVar_9297 == 131);
	BIT_VEC cppVar_9300 = PC + 1;
	cppVar_9300 = (cppVar_9300 & cppMask_un_16_);
	BIT_VEC cppVar_9301 = ROM.rd(cppVar_9300);
	BIT_VEC cppVar_9302 = (cppVar_9301 >> 7) & cppMask_un_1_;
	bool cppVar_9304 = (cppVar_9302 == 0);
	BIT_VEC cppVar_9305 = PC + 1;
	cppVar_9305 = (cppVar_9305 & cppMask_un_16_);
	BIT_VEC cppVar_9306 = ROM.rd(cppVar_9305);
	BIT_VEC cppVar_9307 = IRAM.rd(cppVar_9306);
	BIT_VEC cppVar_9308 = PC + 1;
	cppVar_9308 = (cppVar_9308 & cppMask_un_16_);
	BIT_VEC cppVar_9309 = ROM.rd(cppVar_9308);
	bool cppVar_9311 = (cppVar_9309 == 128);
	BIT_VEC cppVar_9312 = PC + 1;
	cppVar_9312 = (cppVar_9312 & cppMask_un_16_);
	BIT_VEC cppVar_9313 = ROM.rd(cppVar_9312);
	bool cppVar_9315 = (cppVar_9313 == 129);
	BIT_VEC cppVar_9316 = PC + 1;
	cppVar_9316 = (cppVar_9316 & cppMask_un_16_);
	BIT_VEC cppVar_9317 = ROM.rd(cppVar_9316);
	bool cppVar_9319 = (cppVar_9317 == 130);
	BIT_VEC cppVar_9320 = PC + 1;
	cppVar_9320 = (cppVar_9320 & cppMask_un_16_);
	BIT_VEC cppVar_9321 = ROM.rd(cppVar_9320);
	bool cppVar_9323 = (cppVar_9321 == 131);
	BIT_VEC cppVar_9324 = PC + 1;
	cppVar_9324 = (cppVar_9324 & cppMask_un_16_);
	BIT_VEC cppVar_9325 = ROM.rd(cppVar_9324);
	bool cppVar_9327 = (cppVar_9325 == 135);
	BIT_VEC cppVar_9328 = PC + 1;
	cppVar_9328 = (cppVar_9328 & cppMask_un_16_);
	BIT_VEC cppVar_9329 = ROM.rd(cppVar_9328);
	bool cppVar_9331 = (cppVar_9329 == 136);
	BIT_VEC cppVar_9332 = PC + 1;
	cppVar_9332 = (cppVar_9332 & cppMask_un_16_);
	BIT_VEC cppVar_9333 = ROM.rd(cppVar_9332);
	bool cppVar_9335 = (cppVar_9333 == 137);
	BIT_VEC cppVar_9336 = PC + 1;
	cppVar_9336 = (cppVar_9336 & cppMask_un_16_);
	BIT_VEC cppVar_9337 = ROM.rd(cppVar_9336);
	bool cppVar_9339 = (cppVar_9337 == 138);
	BIT_VEC cppVar_9340 = PC + 1;
	cppVar_9340 = (cppVar_9340 & cppMask_un_16_);
	BIT_VEC cppVar_9341 = ROM.rd(cppVar_9340);
	bool cppVar_9343 = (cppVar_9341 == 140);
	BIT_VEC cppVar_9344 = PC + 1;
	cppVar_9344 = (cppVar_9344 & cppMask_un_16_);
	BIT_VEC cppVar_9345 = ROM.rd(cppVar_9344);
	bool cppVar_9347 = (cppVar_9345 == 139);
	BIT_VEC cppVar_9348 = PC + 1;
	cppVar_9348 = (cppVar_9348 & cppMask_un_16_);
	BIT_VEC cppVar_9349 = ROM.rd(cppVar_9348);
	bool cppVar_9351 = (cppVar_9349 == 141);
	BIT_VEC cppVar_9352 = PC + 1;
	cppVar_9352 = (cppVar_9352 & cppMask_un_16_);
	BIT_VEC cppVar_9353 = ROM.rd(cppVar_9352);
	bool cppVar_9355 = (cppVar_9353 == 144);
	BIT_VEC cppVar_9356 = PC + 1;
	cppVar_9356 = (cppVar_9356 & cppMask_un_16_);
	BIT_VEC cppVar_9357 = ROM.rd(cppVar_9356);
	bool cppVar_9359 = (cppVar_9357 == 152);
	BIT_VEC cppVar_9360 = PC + 1;
	cppVar_9360 = (cppVar_9360 & cppMask_un_16_);
	BIT_VEC cppVar_9361 = ROM.rd(cppVar_9360);
	bool cppVar_9363 = (cppVar_9361 == 153);
	BIT_VEC cppVar_9364 = PC + 1;
	cppVar_9364 = (cppVar_9364 & cppMask_un_16_);
	BIT_VEC cppVar_9365 = ROM.rd(cppVar_9364);
	bool cppVar_9367 = (cppVar_9365 == 160);
	BIT_VEC cppVar_9368 = PC + 1;
	cppVar_9368 = (cppVar_9368 & cppMask_un_16_);
	BIT_VEC cppVar_9369 = ROM.rd(cppVar_9368);
	bool cppVar_9371 = (cppVar_9369 == 168);
	BIT_VEC cppVar_9372 = PC + 1;
	cppVar_9372 = (cppVar_9372 & cppMask_un_16_);
	BIT_VEC cppVar_9373 = ROM.rd(cppVar_9372);
	bool cppVar_9375 = (cppVar_9373 == 176);
	BIT_VEC cppVar_9376 = PC + 1;
	cppVar_9376 = (cppVar_9376 & cppMask_un_16_);
	BIT_VEC cppVar_9377 = ROM.rd(cppVar_9376);
	bool cppVar_9379 = (cppVar_9377 == 184);
	BIT_VEC cppVar_9380 = PC + 1;
	cppVar_9380 = (cppVar_9380 & cppMask_un_16_);
	BIT_VEC cppVar_9381 = ROM.rd(cppVar_9380);
	bool cppVar_9383 = (cppVar_9381 == 208);
	BIT_VEC cppVar_9384 = PC + 1;
	cppVar_9384 = (cppVar_9384 & cppMask_un_16_);
	BIT_VEC cppVar_9385 = ROM.rd(cppVar_9384);
	bool cppVar_9387 = (cppVar_9385 == 224);
	BIT_VEC cppVar_9388 = PC + 1;
	cppVar_9388 = (cppVar_9388 & cppMask_un_16_);
	BIT_VEC cppVar_9389 = ROM.rd(cppVar_9388);
	bool cppVar_9391 = (cppVar_9389 == 240);
	BIT_VEC cppVar_9393 = (cppVar_9391) ? B : 0;
	BIT_VEC cppVar_9394 = (cppVar_9387) ? ACC : cppVar_9393;
	BIT_VEC cppVar_9395 = (cppVar_9383) ? PSW : cppVar_9394;
	BIT_VEC cppVar_9396 = (cppVar_9379) ? IP : cppVar_9395;
	BIT_VEC cppVar_9397 = (cppVar_9375) ? P3 : cppVar_9396;
	BIT_VEC cppVar_9398 = (cppVar_9371) ? IE : cppVar_9397;
	BIT_VEC cppVar_9399 = (cppVar_9367) ? P2 : cppVar_9398;
	BIT_VEC cppVar_9400 = (cppVar_9363) ? SBUF : cppVar_9399;
	BIT_VEC cppVar_9401 = (cppVar_9359) ? SCON : cppVar_9400;
	BIT_VEC cppVar_9402 = (cppVar_9355) ? P1 : cppVar_9401;
	BIT_VEC cppVar_9403 = (cppVar_9351) ? TH1 : cppVar_9402;
	BIT_VEC cppVar_9404 = (cppVar_9347) ? TL1 : cppVar_9403;
	BIT_VEC cppVar_9405 = (cppVar_9343) ? TH0 : cppVar_9404;
	BIT_VEC cppVar_9406 = (cppVar_9339) ? TL0 : cppVar_9405;
	BIT_VEC cppVar_9407 = (cppVar_9335) ? TMOD : cppVar_9406;
	BIT_VEC cppVar_9408 = (cppVar_9331) ? TCON : cppVar_9407;
	BIT_VEC cppVar_9409 = (cppVar_9327) ? PCON : cppVar_9408;
	BIT_VEC cppVar_9410 = (cppVar_9323) ? DPH : cppVar_9409;
	BIT_VEC cppVar_9411 = (cppVar_9319) ? DPL : cppVar_9410;
	BIT_VEC cppVar_9412 = (cppVar_9315) ? SP : cppVar_9411;
	BIT_VEC cppVar_9413 = (cppVar_9311) ? P0 : cppVar_9412;
	BIT_VEC cppVar_9414 = (cppVar_9304) ? cppVar_9307 : cppVar_9413;
	BIT_VEC cppVar_9415 = cppVar_9414 & ACC;
	BIT_VEC cppVar_9416 = (cppVar_9299) ? cppVar_9415 : DPH;
	BIT_VEC cppVar_9417 = ROM.rd(PC);
	bool cppVar_9419 = (cppVar_9417 == 67);
	BIT_VEC cppVar_9421 = PC + 1;
	cppVar_9421 = (cppVar_9421 & cppMask_un_16_);
	BIT_VEC cppVar_9422 = ROM.rd(cppVar_9421);
	bool cppVar_9424 = (cppVar_9422 == 131);
	BIT_VEC cppVar_9425 = PC + 1;
	cppVar_9425 = (cppVar_9425 & cppMask_un_16_);
	BIT_VEC cppVar_9426 = ROM.rd(cppVar_9425);
	BIT_VEC cppVar_9427 = (cppVar_9426 >> 7) & cppMask_un_1_;
	bool cppVar_9429 = (cppVar_9427 == 0);
	BIT_VEC cppVar_9430 = PC + 1;
	cppVar_9430 = (cppVar_9430 & cppMask_un_16_);
	BIT_VEC cppVar_9431 = ROM.rd(cppVar_9430);
	BIT_VEC cppVar_9432 = IRAM.rd(cppVar_9431);
	BIT_VEC cppVar_9433 = PC + 1;
	cppVar_9433 = (cppVar_9433 & cppMask_un_16_);
	BIT_VEC cppVar_9434 = ROM.rd(cppVar_9433);
	bool cppVar_9436 = (cppVar_9434 == 128);
	BIT_VEC cppVar_9437 = PC + 1;
	cppVar_9437 = (cppVar_9437 & cppMask_un_16_);
	BIT_VEC cppVar_9438 = ROM.rd(cppVar_9437);
	bool cppVar_9440 = (cppVar_9438 == 129);
	BIT_VEC cppVar_9441 = PC + 1;
	cppVar_9441 = (cppVar_9441 & cppMask_un_16_);
	BIT_VEC cppVar_9442 = ROM.rd(cppVar_9441);
	bool cppVar_9444 = (cppVar_9442 == 130);
	BIT_VEC cppVar_9445 = PC + 1;
	cppVar_9445 = (cppVar_9445 & cppMask_un_16_);
	BIT_VEC cppVar_9446 = ROM.rd(cppVar_9445);
	bool cppVar_9448 = (cppVar_9446 == 131);
	BIT_VEC cppVar_9449 = PC + 1;
	cppVar_9449 = (cppVar_9449 & cppMask_un_16_);
	BIT_VEC cppVar_9450 = ROM.rd(cppVar_9449);
	bool cppVar_9452 = (cppVar_9450 == 135);
	BIT_VEC cppVar_9453 = PC + 1;
	cppVar_9453 = (cppVar_9453 & cppMask_un_16_);
	BIT_VEC cppVar_9454 = ROM.rd(cppVar_9453);
	bool cppVar_9456 = (cppVar_9454 == 136);
	BIT_VEC cppVar_9457 = PC + 1;
	cppVar_9457 = (cppVar_9457 & cppMask_un_16_);
	BIT_VEC cppVar_9458 = ROM.rd(cppVar_9457);
	bool cppVar_9460 = (cppVar_9458 == 137);
	BIT_VEC cppVar_9461 = PC + 1;
	cppVar_9461 = (cppVar_9461 & cppMask_un_16_);
	BIT_VEC cppVar_9462 = ROM.rd(cppVar_9461);
	bool cppVar_9464 = (cppVar_9462 == 138);
	BIT_VEC cppVar_9465 = PC + 1;
	cppVar_9465 = (cppVar_9465 & cppMask_un_16_);
	BIT_VEC cppVar_9466 = ROM.rd(cppVar_9465);
	bool cppVar_9468 = (cppVar_9466 == 140);
	BIT_VEC cppVar_9469 = PC + 1;
	cppVar_9469 = (cppVar_9469 & cppMask_un_16_);
	BIT_VEC cppVar_9470 = ROM.rd(cppVar_9469);
	bool cppVar_9472 = (cppVar_9470 == 139);
	BIT_VEC cppVar_9473 = PC + 1;
	cppVar_9473 = (cppVar_9473 & cppMask_un_16_);
	BIT_VEC cppVar_9474 = ROM.rd(cppVar_9473);
	bool cppVar_9476 = (cppVar_9474 == 141);
	BIT_VEC cppVar_9477 = PC + 1;
	cppVar_9477 = (cppVar_9477 & cppMask_un_16_);
	BIT_VEC cppVar_9478 = ROM.rd(cppVar_9477);
	bool cppVar_9480 = (cppVar_9478 == 144);
	BIT_VEC cppVar_9481 = PC + 1;
	cppVar_9481 = (cppVar_9481 & cppMask_un_16_);
	BIT_VEC cppVar_9482 = ROM.rd(cppVar_9481);
	bool cppVar_9484 = (cppVar_9482 == 152);
	BIT_VEC cppVar_9485 = PC + 1;
	cppVar_9485 = (cppVar_9485 & cppMask_un_16_);
	BIT_VEC cppVar_9486 = ROM.rd(cppVar_9485);
	bool cppVar_9488 = (cppVar_9486 == 153);
	BIT_VEC cppVar_9489 = PC + 1;
	cppVar_9489 = (cppVar_9489 & cppMask_un_16_);
	BIT_VEC cppVar_9490 = ROM.rd(cppVar_9489);
	bool cppVar_9492 = (cppVar_9490 == 160);
	BIT_VEC cppVar_9493 = PC + 1;
	cppVar_9493 = (cppVar_9493 & cppMask_un_16_);
	BIT_VEC cppVar_9494 = ROM.rd(cppVar_9493);
	bool cppVar_9496 = (cppVar_9494 == 168);
	BIT_VEC cppVar_9497 = PC + 1;
	cppVar_9497 = (cppVar_9497 & cppMask_un_16_);
	BIT_VEC cppVar_9498 = ROM.rd(cppVar_9497);
	bool cppVar_9500 = (cppVar_9498 == 176);
	BIT_VEC cppVar_9501 = PC + 1;
	cppVar_9501 = (cppVar_9501 & cppMask_un_16_);
	BIT_VEC cppVar_9502 = ROM.rd(cppVar_9501);
	bool cppVar_9504 = (cppVar_9502 == 184);
	BIT_VEC cppVar_9505 = PC + 1;
	cppVar_9505 = (cppVar_9505 & cppMask_un_16_);
	BIT_VEC cppVar_9506 = ROM.rd(cppVar_9505);
	bool cppVar_9508 = (cppVar_9506 == 208);
	BIT_VEC cppVar_9509 = PC + 1;
	cppVar_9509 = (cppVar_9509 & cppMask_un_16_);
	BIT_VEC cppVar_9510 = ROM.rd(cppVar_9509);
	bool cppVar_9512 = (cppVar_9510 == 224);
	BIT_VEC cppVar_9513 = PC + 1;
	cppVar_9513 = (cppVar_9513 & cppMask_un_16_);
	BIT_VEC cppVar_9514 = ROM.rd(cppVar_9513);
	bool cppVar_9516 = (cppVar_9514 == 240);
	BIT_VEC cppVar_9518 = (cppVar_9516) ? B : 0;
	BIT_VEC cppVar_9519 = (cppVar_9512) ? ACC : cppVar_9518;
	BIT_VEC cppVar_9520 = (cppVar_9508) ? PSW : cppVar_9519;
	BIT_VEC cppVar_9521 = (cppVar_9504) ? IP : cppVar_9520;
	BIT_VEC cppVar_9522 = (cppVar_9500) ? P3 : cppVar_9521;
	BIT_VEC cppVar_9523 = (cppVar_9496) ? IE : cppVar_9522;
	BIT_VEC cppVar_9524 = (cppVar_9492) ? P2 : cppVar_9523;
	BIT_VEC cppVar_9525 = (cppVar_9488) ? SBUF : cppVar_9524;
	BIT_VEC cppVar_9526 = (cppVar_9484) ? SCON : cppVar_9525;
	BIT_VEC cppVar_9527 = (cppVar_9480) ? P1 : cppVar_9526;
	BIT_VEC cppVar_9528 = (cppVar_9476) ? TH1 : cppVar_9527;
	BIT_VEC cppVar_9529 = (cppVar_9472) ? TL1 : cppVar_9528;
	BIT_VEC cppVar_9530 = (cppVar_9468) ? TH0 : cppVar_9529;
	BIT_VEC cppVar_9531 = (cppVar_9464) ? TL0 : cppVar_9530;
	BIT_VEC cppVar_9532 = (cppVar_9460) ? TMOD : cppVar_9531;
	BIT_VEC cppVar_9533 = (cppVar_9456) ? TCON : cppVar_9532;
	BIT_VEC cppVar_9534 = (cppVar_9452) ? PCON : cppVar_9533;
	BIT_VEC cppVar_9535 = (cppVar_9448) ? DPH : cppVar_9534;
	BIT_VEC cppVar_9536 = (cppVar_9444) ? DPL : cppVar_9535;
	BIT_VEC cppVar_9537 = (cppVar_9440) ? SP : cppVar_9536;
	BIT_VEC cppVar_9538 = (cppVar_9436) ? P0 : cppVar_9537;
	BIT_VEC cppVar_9539 = (cppVar_9429) ? cppVar_9432 : cppVar_9538;
	BIT_VEC cppVar_9541 = PC + 2;
	cppVar_9541 = (cppVar_9541 & cppMask_un_16_);
	BIT_VEC cppVar_9542 = ROM.rd(cppVar_9541);
	BIT_VEC cppVar_9543 = cppVar_9539 | cppVar_9542;
	BIT_VEC cppVar_9544 = (cppVar_9424) ? cppVar_9543 : DPH;
	BIT_VEC cppVar_9545 = ROM.rd(PC);
	bool cppVar_9547 = (cppVar_9545 == 66);
	BIT_VEC cppVar_9549 = PC + 1;
	cppVar_9549 = (cppVar_9549 & cppMask_un_16_);
	BIT_VEC cppVar_9550 = ROM.rd(cppVar_9549);
	bool cppVar_9552 = (cppVar_9550 == 131);
	BIT_VEC cppVar_9553 = PC + 1;
	cppVar_9553 = (cppVar_9553 & cppMask_un_16_);
	BIT_VEC cppVar_9554 = ROM.rd(cppVar_9553);
	BIT_VEC cppVar_9555 = (cppVar_9554 >> 7) & cppMask_un_1_;
	bool cppVar_9557 = (cppVar_9555 == 0);
	BIT_VEC cppVar_9558 = PC + 1;
	cppVar_9558 = (cppVar_9558 & cppMask_un_16_);
	BIT_VEC cppVar_9559 = ROM.rd(cppVar_9558);
	BIT_VEC cppVar_9560 = IRAM.rd(cppVar_9559);
	BIT_VEC cppVar_9561 = PC + 1;
	cppVar_9561 = (cppVar_9561 & cppMask_un_16_);
	BIT_VEC cppVar_9562 = ROM.rd(cppVar_9561);
	bool cppVar_9564 = (cppVar_9562 == 128);
	BIT_VEC cppVar_9565 = PC + 1;
	cppVar_9565 = (cppVar_9565 & cppMask_un_16_);
	BIT_VEC cppVar_9566 = ROM.rd(cppVar_9565);
	bool cppVar_9568 = (cppVar_9566 == 129);
	BIT_VEC cppVar_9569 = PC + 1;
	cppVar_9569 = (cppVar_9569 & cppMask_un_16_);
	BIT_VEC cppVar_9570 = ROM.rd(cppVar_9569);
	bool cppVar_9572 = (cppVar_9570 == 130);
	BIT_VEC cppVar_9573 = PC + 1;
	cppVar_9573 = (cppVar_9573 & cppMask_un_16_);
	BIT_VEC cppVar_9574 = ROM.rd(cppVar_9573);
	bool cppVar_9576 = (cppVar_9574 == 131);
	BIT_VEC cppVar_9577 = PC + 1;
	cppVar_9577 = (cppVar_9577 & cppMask_un_16_);
	BIT_VEC cppVar_9578 = ROM.rd(cppVar_9577);
	bool cppVar_9580 = (cppVar_9578 == 135);
	BIT_VEC cppVar_9581 = PC + 1;
	cppVar_9581 = (cppVar_9581 & cppMask_un_16_);
	BIT_VEC cppVar_9582 = ROM.rd(cppVar_9581);
	bool cppVar_9584 = (cppVar_9582 == 136);
	BIT_VEC cppVar_9585 = PC + 1;
	cppVar_9585 = (cppVar_9585 & cppMask_un_16_);
	BIT_VEC cppVar_9586 = ROM.rd(cppVar_9585);
	bool cppVar_9588 = (cppVar_9586 == 137);
	BIT_VEC cppVar_9589 = PC + 1;
	cppVar_9589 = (cppVar_9589 & cppMask_un_16_);
	BIT_VEC cppVar_9590 = ROM.rd(cppVar_9589);
	bool cppVar_9592 = (cppVar_9590 == 138);
	BIT_VEC cppVar_9593 = PC + 1;
	cppVar_9593 = (cppVar_9593 & cppMask_un_16_);
	BIT_VEC cppVar_9594 = ROM.rd(cppVar_9593);
	bool cppVar_9596 = (cppVar_9594 == 140);
	BIT_VEC cppVar_9597 = PC + 1;
	cppVar_9597 = (cppVar_9597 & cppMask_un_16_);
	BIT_VEC cppVar_9598 = ROM.rd(cppVar_9597);
	bool cppVar_9600 = (cppVar_9598 == 139);
	BIT_VEC cppVar_9601 = PC + 1;
	cppVar_9601 = (cppVar_9601 & cppMask_un_16_);
	BIT_VEC cppVar_9602 = ROM.rd(cppVar_9601);
	bool cppVar_9604 = (cppVar_9602 == 141);
	BIT_VEC cppVar_9605 = PC + 1;
	cppVar_9605 = (cppVar_9605 & cppMask_un_16_);
	BIT_VEC cppVar_9606 = ROM.rd(cppVar_9605);
	bool cppVar_9608 = (cppVar_9606 == 144);
	BIT_VEC cppVar_9609 = PC + 1;
	cppVar_9609 = (cppVar_9609 & cppMask_un_16_);
	BIT_VEC cppVar_9610 = ROM.rd(cppVar_9609);
	bool cppVar_9612 = (cppVar_9610 == 152);
	BIT_VEC cppVar_9613 = PC + 1;
	cppVar_9613 = (cppVar_9613 & cppMask_un_16_);
	BIT_VEC cppVar_9614 = ROM.rd(cppVar_9613);
	bool cppVar_9616 = (cppVar_9614 == 153);
	BIT_VEC cppVar_9617 = PC + 1;
	cppVar_9617 = (cppVar_9617 & cppMask_un_16_);
	BIT_VEC cppVar_9618 = ROM.rd(cppVar_9617);
	bool cppVar_9620 = (cppVar_9618 == 160);
	BIT_VEC cppVar_9621 = PC + 1;
	cppVar_9621 = (cppVar_9621 & cppMask_un_16_);
	BIT_VEC cppVar_9622 = ROM.rd(cppVar_9621);
	bool cppVar_9624 = (cppVar_9622 == 168);
	BIT_VEC cppVar_9625 = PC + 1;
	cppVar_9625 = (cppVar_9625 & cppMask_un_16_);
	BIT_VEC cppVar_9626 = ROM.rd(cppVar_9625);
	bool cppVar_9628 = (cppVar_9626 == 176);
	BIT_VEC cppVar_9629 = PC + 1;
	cppVar_9629 = (cppVar_9629 & cppMask_un_16_);
	BIT_VEC cppVar_9630 = ROM.rd(cppVar_9629);
	bool cppVar_9632 = (cppVar_9630 == 184);
	BIT_VEC cppVar_9633 = PC + 1;
	cppVar_9633 = (cppVar_9633 & cppMask_un_16_);
	BIT_VEC cppVar_9634 = ROM.rd(cppVar_9633);
	bool cppVar_9636 = (cppVar_9634 == 208);
	BIT_VEC cppVar_9637 = PC + 1;
	cppVar_9637 = (cppVar_9637 & cppMask_un_16_);
	BIT_VEC cppVar_9638 = ROM.rd(cppVar_9637);
	bool cppVar_9640 = (cppVar_9638 == 224);
	BIT_VEC cppVar_9641 = PC + 1;
	cppVar_9641 = (cppVar_9641 & cppMask_un_16_);
	BIT_VEC cppVar_9642 = ROM.rd(cppVar_9641);
	bool cppVar_9644 = (cppVar_9642 == 240);
	BIT_VEC cppVar_9646 = (cppVar_9644) ? B : 0;
	BIT_VEC cppVar_9647 = (cppVar_9640) ? ACC : cppVar_9646;
	BIT_VEC cppVar_9648 = (cppVar_9636) ? PSW : cppVar_9647;
	BIT_VEC cppVar_9649 = (cppVar_9632) ? IP : cppVar_9648;
	BIT_VEC cppVar_9650 = (cppVar_9628) ? P3 : cppVar_9649;
	BIT_VEC cppVar_9651 = (cppVar_9624) ? IE : cppVar_9650;
	BIT_VEC cppVar_9652 = (cppVar_9620) ? P2 : cppVar_9651;
	BIT_VEC cppVar_9653 = (cppVar_9616) ? SBUF : cppVar_9652;
	BIT_VEC cppVar_9654 = (cppVar_9612) ? SCON : cppVar_9653;
	BIT_VEC cppVar_9655 = (cppVar_9608) ? P1 : cppVar_9654;
	BIT_VEC cppVar_9656 = (cppVar_9604) ? TH1 : cppVar_9655;
	BIT_VEC cppVar_9657 = (cppVar_9600) ? TL1 : cppVar_9656;
	BIT_VEC cppVar_9658 = (cppVar_9596) ? TH0 : cppVar_9657;
	BIT_VEC cppVar_9659 = (cppVar_9592) ? TL0 : cppVar_9658;
	BIT_VEC cppVar_9660 = (cppVar_9588) ? TMOD : cppVar_9659;
	BIT_VEC cppVar_9661 = (cppVar_9584) ? TCON : cppVar_9660;
	BIT_VEC cppVar_9662 = (cppVar_9580) ? PCON : cppVar_9661;
	BIT_VEC cppVar_9663 = (cppVar_9576) ? DPH : cppVar_9662;
	BIT_VEC cppVar_9664 = (cppVar_9572) ? DPL : cppVar_9663;
	BIT_VEC cppVar_9665 = (cppVar_9568) ? SP : cppVar_9664;
	BIT_VEC cppVar_9666 = (cppVar_9564) ? P0 : cppVar_9665;
	BIT_VEC cppVar_9667 = (cppVar_9557) ? cppVar_9560 : cppVar_9666;
	BIT_VEC cppVar_9668 = cppVar_9667 | ACC;
	BIT_VEC cppVar_9669 = (cppVar_9552) ? cppVar_9668 : DPH;
	BIT_VEC cppVar_9670 = ROM.rd(PC);
	bool cppVar_9672 = (cppVar_9670 == 213);
	BIT_VEC cppVar_9673 = ROM.rd(PC);
	bool cppVar_9675 = (cppVar_9673 == 21);
	bool cppVar_9676 = cppVar_9672 || cppVar_9675;
	BIT_VEC cppVar_9678 = PC + 1;
	cppVar_9678 = (cppVar_9678 & cppMask_un_16_);
	BIT_VEC cppVar_9679 = ROM.rd(cppVar_9678);
	bool cppVar_9681 = (cppVar_9679 == 131);
	BIT_VEC cppVar_9682 = PC + 1;
	cppVar_9682 = (cppVar_9682 & cppMask_un_16_);
	BIT_VEC cppVar_9683 = ROM.rd(cppVar_9682);
	BIT_VEC cppVar_9684 = (cppVar_9683 >> 7) & cppMask_un_1_;
	bool cppVar_9686 = (cppVar_9684 == 0);
	BIT_VEC cppVar_9687 = PC + 1;
	cppVar_9687 = (cppVar_9687 & cppMask_un_16_);
	BIT_VEC cppVar_9688 = ROM.rd(cppVar_9687);
	BIT_VEC cppVar_9689 = IRAM.rd(cppVar_9688);
	BIT_VEC cppVar_9690 = PC + 1;
	cppVar_9690 = (cppVar_9690 & cppMask_un_16_);
	BIT_VEC cppVar_9691 = ROM.rd(cppVar_9690);
	bool cppVar_9693 = (cppVar_9691 == 128);
	BIT_VEC cppVar_9694 = PC + 1;
	cppVar_9694 = (cppVar_9694 & cppMask_un_16_);
	BIT_VEC cppVar_9695 = ROM.rd(cppVar_9694);
	bool cppVar_9697 = (cppVar_9695 == 129);
	BIT_VEC cppVar_9698 = PC + 1;
	cppVar_9698 = (cppVar_9698 & cppMask_un_16_);
	BIT_VEC cppVar_9699 = ROM.rd(cppVar_9698);
	bool cppVar_9701 = (cppVar_9699 == 130);
	BIT_VEC cppVar_9702 = PC + 1;
	cppVar_9702 = (cppVar_9702 & cppMask_un_16_);
	BIT_VEC cppVar_9703 = ROM.rd(cppVar_9702);
	bool cppVar_9705 = (cppVar_9703 == 131);
	BIT_VEC cppVar_9706 = PC + 1;
	cppVar_9706 = (cppVar_9706 & cppMask_un_16_);
	BIT_VEC cppVar_9707 = ROM.rd(cppVar_9706);
	bool cppVar_9709 = (cppVar_9707 == 135);
	BIT_VEC cppVar_9710 = PC + 1;
	cppVar_9710 = (cppVar_9710 & cppMask_un_16_);
	BIT_VEC cppVar_9711 = ROM.rd(cppVar_9710);
	bool cppVar_9713 = (cppVar_9711 == 136);
	BIT_VEC cppVar_9714 = PC + 1;
	cppVar_9714 = (cppVar_9714 & cppMask_un_16_);
	BIT_VEC cppVar_9715 = ROM.rd(cppVar_9714);
	bool cppVar_9717 = (cppVar_9715 == 137);
	BIT_VEC cppVar_9718 = PC + 1;
	cppVar_9718 = (cppVar_9718 & cppMask_un_16_);
	BIT_VEC cppVar_9719 = ROM.rd(cppVar_9718);
	bool cppVar_9721 = (cppVar_9719 == 138);
	BIT_VEC cppVar_9722 = PC + 1;
	cppVar_9722 = (cppVar_9722 & cppMask_un_16_);
	BIT_VEC cppVar_9723 = ROM.rd(cppVar_9722);
	bool cppVar_9725 = (cppVar_9723 == 140);
	BIT_VEC cppVar_9726 = PC + 1;
	cppVar_9726 = (cppVar_9726 & cppMask_un_16_);
	BIT_VEC cppVar_9727 = ROM.rd(cppVar_9726);
	bool cppVar_9729 = (cppVar_9727 == 139);
	BIT_VEC cppVar_9730 = PC + 1;
	cppVar_9730 = (cppVar_9730 & cppMask_un_16_);
	BIT_VEC cppVar_9731 = ROM.rd(cppVar_9730);
	bool cppVar_9733 = (cppVar_9731 == 141);
	BIT_VEC cppVar_9734 = PC + 1;
	cppVar_9734 = (cppVar_9734 & cppMask_un_16_);
	BIT_VEC cppVar_9735 = ROM.rd(cppVar_9734);
	bool cppVar_9737 = (cppVar_9735 == 144);
	BIT_VEC cppVar_9738 = PC + 1;
	cppVar_9738 = (cppVar_9738 & cppMask_un_16_);
	BIT_VEC cppVar_9739 = ROM.rd(cppVar_9738);
	bool cppVar_9741 = (cppVar_9739 == 152);
	BIT_VEC cppVar_9742 = PC + 1;
	cppVar_9742 = (cppVar_9742 & cppMask_un_16_);
	BIT_VEC cppVar_9743 = ROM.rd(cppVar_9742);
	bool cppVar_9745 = (cppVar_9743 == 153);
	BIT_VEC cppVar_9746 = PC + 1;
	cppVar_9746 = (cppVar_9746 & cppMask_un_16_);
	BIT_VEC cppVar_9747 = ROM.rd(cppVar_9746);
	bool cppVar_9749 = (cppVar_9747 == 160);
	BIT_VEC cppVar_9750 = PC + 1;
	cppVar_9750 = (cppVar_9750 & cppMask_un_16_);
	BIT_VEC cppVar_9751 = ROM.rd(cppVar_9750);
	bool cppVar_9753 = (cppVar_9751 == 168);
	BIT_VEC cppVar_9754 = PC + 1;
	cppVar_9754 = (cppVar_9754 & cppMask_un_16_);
	BIT_VEC cppVar_9755 = ROM.rd(cppVar_9754);
	bool cppVar_9757 = (cppVar_9755 == 176);
	BIT_VEC cppVar_9758 = PC + 1;
	cppVar_9758 = (cppVar_9758 & cppMask_un_16_);
	BIT_VEC cppVar_9759 = ROM.rd(cppVar_9758);
	bool cppVar_9761 = (cppVar_9759 == 184);
	BIT_VEC cppVar_9762 = PC + 1;
	cppVar_9762 = (cppVar_9762 & cppMask_un_16_);
	BIT_VEC cppVar_9763 = ROM.rd(cppVar_9762);
	bool cppVar_9765 = (cppVar_9763 == 208);
	BIT_VEC cppVar_9766 = PC + 1;
	cppVar_9766 = (cppVar_9766 & cppMask_un_16_);
	BIT_VEC cppVar_9767 = ROM.rd(cppVar_9766);
	bool cppVar_9769 = (cppVar_9767 == 224);
	BIT_VEC cppVar_9770 = PC + 1;
	cppVar_9770 = (cppVar_9770 & cppMask_un_16_);
	BIT_VEC cppVar_9771 = ROM.rd(cppVar_9770);
	bool cppVar_9773 = (cppVar_9771 == 240);
	BIT_VEC cppVar_9775 = (cppVar_9773) ? B : 0;
	BIT_VEC cppVar_9776 = (cppVar_9769) ? ACC : cppVar_9775;
	BIT_VEC cppVar_9777 = (cppVar_9765) ? PSW : cppVar_9776;
	BIT_VEC cppVar_9778 = (cppVar_9761) ? IP : cppVar_9777;
	BIT_VEC cppVar_9779 = (cppVar_9757) ? P3 : cppVar_9778;
	BIT_VEC cppVar_9780 = (cppVar_9753) ? IE : cppVar_9779;
	BIT_VEC cppVar_9781 = (cppVar_9749) ? P2 : cppVar_9780;
	BIT_VEC cppVar_9782 = (cppVar_9745) ? SBUF : cppVar_9781;
	BIT_VEC cppVar_9783 = (cppVar_9741) ? SCON : cppVar_9782;
	BIT_VEC cppVar_9784 = (cppVar_9737) ? P1 : cppVar_9783;
	BIT_VEC cppVar_9785 = (cppVar_9733) ? TH1 : cppVar_9784;
	BIT_VEC cppVar_9786 = (cppVar_9729) ? TL1 : cppVar_9785;
	BIT_VEC cppVar_9787 = (cppVar_9725) ? TH0 : cppVar_9786;
	BIT_VEC cppVar_9788 = (cppVar_9721) ? TL0 : cppVar_9787;
	BIT_VEC cppVar_9789 = (cppVar_9717) ? TMOD : cppVar_9788;
	BIT_VEC cppVar_9790 = (cppVar_9713) ? TCON : cppVar_9789;
	BIT_VEC cppVar_9791 = (cppVar_9709) ? PCON : cppVar_9790;
	BIT_VEC cppVar_9792 = (cppVar_9705) ? DPH : cppVar_9791;
	BIT_VEC cppVar_9793 = (cppVar_9701) ? DPL : cppVar_9792;
	BIT_VEC cppVar_9794 = (cppVar_9697) ? SP : cppVar_9793;
	BIT_VEC cppVar_9795 = (cppVar_9693) ? P0 : cppVar_9794;
	BIT_VEC cppVar_9796 = (cppVar_9686) ? cppVar_9689 : cppVar_9795;
	BIT_VEC cppVar_9798 = cppVar_9796 - 1;
	cppVar_9798 = (cppVar_9798 & cppMask_un_8_);
	BIT_VEC cppVar_9799 = (cppVar_9681) ? cppVar_9798 : DPH;
	BIT_VEC cppVar_9800 = ROM.rd(PC);
	bool cppVar_9802 = (cppVar_9800 == 5);
	BIT_VEC cppVar_9804 = PC + 1;
	cppVar_9804 = (cppVar_9804 & cppMask_un_16_);
	BIT_VEC cppVar_9805 = ROM.rd(cppVar_9804);
	bool cppVar_9807 = (cppVar_9805 == 131);
	BIT_VEC cppVar_9808 = PC + 1;
	cppVar_9808 = (cppVar_9808 & cppMask_un_16_);
	BIT_VEC cppVar_9809 = ROM.rd(cppVar_9808);
	BIT_VEC cppVar_9810 = (cppVar_9809 >> 7) & cppMask_un_1_;
	bool cppVar_9812 = (cppVar_9810 == 0);
	BIT_VEC cppVar_9813 = PC + 1;
	cppVar_9813 = (cppVar_9813 & cppMask_un_16_);
	BIT_VEC cppVar_9814 = ROM.rd(cppVar_9813);
	BIT_VEC cppVar_9815 = IRAM.rd(cppVar_9814);
	BIT_VEC cppVar_9816 = PC + 1;
	cppVar_9816 = (cppVar_9816 & cppMask_un_16_);
	BIT_VEC cppVar_9817 = ROM.rd(cppVar_9816);
	bool cppVar_9819 = (cppVar_9817 == 128);
	BIT_VEC cppVar_9820 = PC + 1;
	cppVar_9820 = (cppVar_9820 & cppMask_un_16_);
	BIT_VEC cppVar_9821 = ROM.rd(cppVar_9820);
	bool cppVar_9823 = (cppVar_9821 == 129);
	BIT_VEC cppVar_9824 = PC + 1;
	cppVar_9824 = (cppVar_9824 & cppMask_un_16_);
	BIT_VEC cppVar_9825 = ROM.rd(cppVar_9824);
	bool cppVar_9827 = (cppVar_9825 == 130);
	BIT_VEC cppVar_9828 = PC + 1;
	cppVar_9828 = (cppVar_9828 & cppMask_un_16_);
	BIT_VEC cppVar_9829 = ROM.rd(cppVar_9828);
	bool cppVar_9831 = (cppVar_9829 == 131);
	BIT_VEC cppVar_9832 = PC + 1;
	cppVar_9832 = (cppVar_9832 & cppMask_un_16_);
	BIT_VEC cppVar_9833 = ROM.rd(cppVar_9832);
	bool cppVar_9835 = (cppVar_9833 == 135);
	BIT_VEC cppVar_9836 = PC + 1;
	cppVar_9836 = (cppVar_9836 & cppMask_un_16_);
	BIT_VEC cppVar_9837 = ROM.rd(cppVar_9836);
	bool cppVar_9839 = (cppVar_9837 == 136);
	BIT_VEC cppVar_9840 = PC + 1;
	cppVar_9840 = (cppVar_9840 & cppMask_un_16_);
	BIT_VEC cppVar_9841 = ROM.rd(cppVar_9840);
	bool cppVar_9843 = (cppVar_9841 == 137);
	BIT_VEC cppVar_9844 = PC + 1;
	cppVar_9844 = (cppVar_9844 & cppMask_un_16_);
	BIT_VEC cppVar_9845 = ROM.rd(cppVar_9844);
	bool cppVar_9847 = (cppVar_9845 == 138);
	BIT_VEC cppVar_9848 = PC + 1;
	cppVar_9848 = (cppVar_9848 & cppMask_un_16_);
	BIT_VEC cppVar_9849 = ROM.rd(cppVar_9848);
	bool cppVar_9851 = (cppVar_9849 == 140);
	BIT_VEC cppVar_9852 = PC + 1;
	cppVar_9852 = (cppVar_9852 & cppMask_un_16_);
	BIT_VEC cppVar_9853 = ROM.rd(cppVar_9852);
	bool cppVar_9855 = (cppVar_9853 == 139);
	BIT_VEC cppVar_9856 = PC + 1;
	cppVar_9856 = (cppVar_9856 & cppMask_un_16_);
	BIT_VEC cppVar_9857 = ROM.rd(cppVar_9856);
	bool cppVar_9859 = (cppVar_9857 == 141);
	BIT_VEC cppVar_9860 = PC + 1;
	cppVar_9860 = (cppVar_9860 & cppMask_un_16_);
	BIT_VEC cppVar_9861 = ROM.rd(cppVar_9860);
	bool cppVar_9863 = (cppVar_9861 == 144);
	BIT_VEC cppVar_9864 = PC + 1;
	cppVar_9864 = (cppVar_9864 & cppMask_un_16_);
	BIT_VEC cppVar_9865 = ROM.rd(cppVar_9864);
	bool cppVar_9867 = (cppVar_9865 == 152);
	BIT_VEC cppVar_9868 = PC + 1;
	cppVar_9868 = (cppVar_9868 & cppMask_un_16_);
	BIT_VEC cppVar_9869 = ROM.rd(cppVar_9868);
	bool cppVar_9871 = (cppVar_9869 == 153);
	BIT_VEC cppVar_9872 = PC + 1;
	cppVar_9872 = (cppVar_9872 & cppMask_un_16_);
	BIT_VEC cppVar_9873 = ROM.rd(cppVar_9872);
	bool cppVar_9875 = (cppVar_9873 == 160);
	BIT_VEC cppVar_9876 = PC + 1;
	cppVar_9876 = (cppVar_9876 & cppMask_un_16_);
	BIT_VEC cppVar_9877 = ROM.rd(cppVar_9876);
	bool cppVar_9879 = (cppVar_9877 == 168);
	BIT_VEC cppVar_9880 = PC + 1;
	cppVar_9880 = (cppVar_9880 & cppMask_un_16_);
	BIT_VEC cppVar_9881 = ROM.rd(cppVar_9880);
	bool cppVar_9883 = (cppVar_9881 == 176);
	BIT_VEC cppVar_9884 = PC + 1;
	cppVar_9884 = (cppVar_9884 & cppMask_un_16_);
	BIT_VEC cppVar_9885 = ROM.rd(cppVar_9884);
	bool cppVar_9887 = (cppVar_9885 == 184);
	BIT_VEC cppVar_9888 = PC + 1;
	cppVar_9888 = (cppVar_9888 & cppMask_un_16_);
	BIT_VEC cppVar_9889 = ROM.rd(cppVar_9888);
	bool cppVar_9891 = (cppVar_9889 == 208);
	BIT_VEC cppVar_9892 = PC + 1;
	cppVar_9892 = (cppVar_9892 & cppMask_un_16_);
	BIT_VEC cppVar_9893 = ROM.rd(cppVar_9892);
	bool cppVar_9895 = (cppVar_9893 == 224);
	BIT_VEC cppVar_9896 = PC + 1;
	cppVar_9896 = (cppVar_9896 & cppMask_un_16_);
	BIT_VEC cppVar_9897 = ROM.rd(cppVar_9896);
	bool cppVar_9899 = (cppVar_9897 == 240);
	BIT_VEC cppVar_9901 = (cppVar_9899) ? B : 0;
	BIT_VEC cppVar_9902 = (cppVar_9895) ? ACC : cppVar_9901;
	BIT_VEC cppVar_9903 = (cppVar_9891) ? PSW : cppVar_9902;
	BIT_VEC cppVar_9904 = (cppVar_9887) ? IP : cppVar_9903;
	BIT_VEC cppVar_9905 = (cppVar_9883) ? P3 : cppVar_9904;
	BIT_VEC cppVar_9906 = (cppVar_9879) ? IE : cppVar_9905;
	BIT_VEC cppVar_9907 = (cppVar_9875) ? P2 : cppVar_9906;
	BIT_VEC cppVar_9908 = (cppVar_9871) ? SBUF : cppVar_9907;
	BIT_VEC cppVar_9909 = (cppVar_9867) ? SCON : cppVar_9908;
	BIT_VEC cppVar_9910 = (cppVar_9863) ? P1 : cppVar_9909;
	BIT_VEC cppVar_9911 = (cppVar_9859) ? TH1 : cppVar_9910;
	BIT_VEC cppVar_9912 = (cppVar_9855) ? TL1 : cppVar_9911;
	BIT_VEC cppVar_9913 = (cppVar_9851) ? TH0 : cppVar_9912;
	BIT_VEC cppVar_9914 = (cppVar_9847) ? TL0 : cppVar_9913;
	BIT_VEC cppVar_9915 = (cppVar_9843) ? TMOD : cppVar_9914;
	BIT_VEC cppVar_9916 = (cppVar_9839) ? TCON : cppVar_9915;
	BIT_VEC cppVar_9917 = (cppVar_9835) ? PCON : cppVar_9916;
	BIT_VEC cppVar_9918 = (cppVar_9831) ? DPH : cppVar_9917;
	BIT_VEC cppVar_9919 = (cppVar_9827) ? DPL : cppVar_9918;
	BIT_VEC cppVar_9920 = (cppVar_9823) ? SP : cppVar_9919;
	BIT_VEC cppVar_9921 = (cppVar_9819) ? P0 : cppVar_9920;
	BIT_VEC cppVar_9922 = (cppVar_9812) ? cppVar_9815 : cppVar_9921;
	BIT_VEC cppVar_9924 = cppVar_9922 + 1;
	cppVar_9924 = (cppVar_9924 & cppMask_un_8_);
	BIT_VEC cppVar_9925 = (cppVar_9807) ? cppVar_9924 : DPH;
	BIT_VEC cppVar_9926 = (cppVar_9802) ? cppVar_9925 : DPH;
	BIT_VEC cppVar_9927 = (cppVar_9676) ? cppVar_9799 : cppVar_9926;
	BIT_VEC cppVar_9928 = (cppVar_9547) ? cppVar_9669 : cppVar_9927;
	BIT_VEC cppVar_9929 = (cppVar_9419) ? cppVar_9544 : cppVar_9928;
	BIT_VEC cppVar_9930 = (cppVar_9294) ? cppVar_9416 : cppVar_9929;
	BIT_VEC cppVar_9931 = (cppVar_9166) ? cppVar_9291 : cppVar_9930;
	BIT_VEC cppVar_9932 = (cppVar_9041) ? cppVar_9163 : cppVar_9931;
	BIT_VEC cppVar_9933 = (cppVar_8913) ? cppVar_9038 : cppVar_9932;
	BIT_VEC cppVar_9934 = (cppVar_8901) ? cppVar_8910 : cppVar_9933;
	BIT_VEC cppVar_9935 = (cppVar_8776) ? cppVar_8898 : cppVar_9934;
	BIT_VEC cppVar_9936 = (cppVar_8760) ? cppVar_8773 : cppVar_9935;
	BIT_VEC cppVar_9937 = (cppVar_8744) ? cppVar_8757 : cppVar_9936;
	BIT_VEC cppVar_9938 = (cppVar_8595) ? cppVar_8741 : cppVar_9937;
	BIT_VEC cppVar_9939 = (cppVar_8446) ? cppVar_8592 : cppVar_9938;
	BIT_VEC cppVar_9940 = (cppVar_8297) ? cppVar_8443 : cppVar_9939;
	BIT_VEC cppVar_9941 = (cppVar_8148) ? cppVar_8294 : cppVar_9940;
	BIT_VEC cppVar_9942 = (cppVar_7999) ? cppVar_8145 : cppVar_9941;
	BIT_VEC cppVar_9943 = (cppVar_7850) ? cppVar_7996 : cppVar_9942;
	BIT_VEC cppVar_9944 = (cppVar_7701) ? cppVar_7847 : cppVar_9943;
	BIT_VEC cppVar_9945 = (cppVar_7552) ? cppVar_7698 : cppVar_9944;
	BIT_VEC cppVar_9946 = (cppVar_7541) ? cppVar_7549 : cppVar_9945;
	BIT_VEC cppVar_9947 = (cppVar_7532) ? cppVar_7538 : cppVar_9946;
	BIT_VEC cppVar_9948 = (cppVar_7518) ? cppVar_7525 : cppVar_9947;
	return cppVar_9948;
}
