#include "common.hpp"
#include "model_oc8051_class.hpp"

BIT_VEC model_oc8051::cppUpdateFun_TH1()
{
	BIT_VEC cppVar_74848 = ROM.rd(PC);
	bool cppVar_74850 = (cppVar_74848 == 208);
	BIT_VEC cppVar_74852 = PC + 1;
	cppVar_74852 = (cppVar_74852 & cppMask_un_16_);
	BIT_VEC cppVar_74853 = ROM.rd(cppVar_74852);
	bool cppVar_74855 = (cppVar_74853 == 141);
	BIT_VEC cppVar_74856 = IRAM.rd(SP);
	BIT_VEC cppVar_74857 = (cppVar_74855) ? cppVar_74856 : TH1;
	BIT_VEC cppVar_74858 = ROM.rd(PC);
	bool cppVar_74860 = (cppVar_74858 == 245);
	BIT_VEC cppVar_74861 = ROM.rd(PC);
	bool cppVar_74863 = (cppVar_74861 == 197);
	bool cppVar_74864 = cppVar_74860 || cppVar_74863;
	BIT_VEC cppVar_74866 = PC + 1;
	cppVar_74866 = (cppVar_74866 & cppMask_un_16_);
	BIT_VEC cppVar_74867 = ROM.rd(cppVar_74866);
	bool cppVar_74869 = (cppVar_74867 == 141);
	BIT_VEC cppVar_74870 = (cppVar_74869) ? ACC : TH1;
	BIT_VEC cppVar_74871 = ROM.rd(PC);
	bool cppVar_74873 = (cppVar_74871 == 143);
	BIT_VEC cppVar_74875 = PC + 1;
	cppVar_74875 = (cppVar_74875 & cppMask_un_16_);
	BIT_VEC cppVar_74876 = ROM.rd(cppVar_74875);
	bool cppVar_74878 = (cppVar_74876 == 141);
	BIT_VEC cppVar_74880 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74882 = (cppVar_74880 << 3) | 7;
	cppVar_74882 = (cppVar_74882 & cppMask_un_5_);
	BIT_VEC cppVar_74883 = (0 << 5) | cppVar_74882;
	cppVar_74883 = (cppVar_74883 & cppMask_un_8_);
	BIT_VEC cppVar_74884 = (cppVar_74883 >> 7) & cppMask_un_1_;
	bool cppVar_74886 = (cppVar_74884 == 0);
	BIT_VEC cppVar_74887 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74888 = (cppVar_74887 << 3) | 7;
	cppVar_74888 = (cppVar_74888 & cppMask_un_5_);
	BIT_VEC cppVar_74889 = (0 << 5) | cppVar_74888;
	cppVar_74889 = (cppVar_74889 & cppMask_un_8_);
	BIT_VEC cppVar_74890 = IRAM.rd(cppVar_74889);
	BIT_VEC cppVar_74891 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74892 = (cppVar_74891 << 3) | 7;
	cppVar_74892 = (cppVar_74892 & cppMask_un_5_);
	BIT_VEC cppVar_74893 = (0 << 5) | cppVar_74892;
	cppVar_74893 = (cppVar_74893 & cppMask_un_8_);
	bool cppVar_74895 = (cppVar_74893 == 128);
	BIT_VEC cppVar_74896 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74897 = (cppVar_74896 << 3) | 7;
	cppVar_74897 = (cppVar_74897 & cppMask_un_5_);
	BIT_VEC cppVar_74898 = (0 << 5) | cppVar_74897;
	cppVar_74898 = (cppVar_74898 & cppMask_un_8_);
	bool cppVar_74900 = (cppVar_74898 == 129);
	BIT_VEC cppVar_74901 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74902 = (cppVar_74901 << 3) | 7;
	cppVar_74902 = (cppVar_74902 & cppMask_un_5_);
	BIT_VEC cppVar_74903 = (0 << 5) | cppVar_74902;
	cppVar_74903 = (cppVar_74903 & cppMask_un_8_);
	bool cppVar_74905 = (cppVar_74903 == 130);
	BIT_VEC cppVar_74906 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74907 = (cppVar_74906 << 3) | 7;
	cppVar_74907 = (cppVar_74907 & cppMask_un_5_);
	BIT_VEC cppVar_74908 = (0 << 5) | cppVar_74907;
	cppVar_74908 = (cppVar_74908 & cppMask_un_8_);
	bool cppVar_74910 = (cppVar_74908 == 131);
	BIT_VEC cppVar_74911 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74912 = (cppVar_74911 << 3) | 7;
	cppVar_74912 = (cppVar_74912 & cppMask_un_5_);
	BIT_VEC cppVar_74913 = (0 << 5) | cppVar_74912;
	cppVar_74913 = (cppVar_74913 & cppMask_un_8_);
	bool cppVar_74915 = (cppVar_74913 == 135);
	BIT_VEC cppVar_74916 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74917 = (cppVar_74916 << 3) | 7;
	cppVar_74917 = (cppVar_74917 & cppMask_un_5_);
	BIT_VEC cppVar_74918 = (0 << 5) | cppVar_74917;
	cppVar_74918 = (cppVar_74918 & cppMask_un_8_);
	bool cppVar_74920 = (cppVar_74918 == 136);
	BIT_VEC cppVar_74921 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74922 = (cppVar_74921 << 3) | 7;
	cppVar_74922 = (cppVar_74922 & cppMask_un_5_);
	BIT_VEC cppVar_74923 = (0 << 5) | cppVar_74922;
	cppVar_74923 = (cppVar_74923 & cppMask_un_8_);
	bool cppVar_74925 = (cppVar_74923 == 137);
	BIT_VEC cppVar_74926 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74927 = (cppVar_74926 << 3) | 7;
	cppVar_74927 = (cppVar_74927 & cppMask_un_5_);
	BIT_VEC cppVar_74928 = (0 << 5) | cppVar_74927;
	cppVar_74928 = (cppVar_74928 & cppMask_un_8_);
	bool cppVar_74930 = (cppVar_74928 == 138);
	BIT_VEC cppVar_74931 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74932 = (cppVar_74931 << 3) | 7;
	cppVar_74932 = (cppVar_74932 & cppMask_un_5_);
	BIT_VEC cppVar_74933 = (0 << 5) | cppVar_74932;
	cppVar_74933 = (cppVar_74933 & cppMask_un_8_);
	bool cppVar_74935 = (cppVar_74933 == 140);
	BIT_VEC cppVar_74936 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74937 = (cppVar_74936 << 3) | 7;
	cppVar_74937 = (cppVar_74937 & cppMask_un_5_);
	BIT_VEC cppVar_74938 = (0 << 5) | cppVar_74937;
	cppVar_74938 = (cppVar_74938 & cppMask_un_8_);
	bool cppVar_74940 = (cppVar_74938 == 139);
	BIT_VEC cppVar_74941 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74942 = (cppVar_74941 << 3) | 7;
	cppVar_74942 = (cppVar_74942 & cppMask_un_5_);
	BIT_VEC cppVar_74943 = (0 << 5) | cppVar_74942;
	cppVar_74943 = (cppVar_74943 & cppMask_un_8_);
	bool cppVar_74945 = (cppVar_74943 == 141);
	BIT_VEC cppVar_74946 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74947 = (cppVar_74946 << 3) | 7;
	cppVar_74947 = (cppVar_74947 & cppMask_un_5_);
	BIT_VEC cppVar_74948 = (0 << 5) | cppVar_74947;
	cppVar_74948 = (cppVar_74948 & cppMask_un_8_);
	bool cppVar_74950 = (cppVar_74948 == 144);
	BIT_VEC cppVar_74951 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74952 = (cppVar_74951 << 3) | 7;
	cppVar_74952 = (cppVar_74952 & cppMask_un_5_);
	BIT_VEC cppVar_74953 = (0 << 5) | cppVar_74952;
	cppVar_74953 = (cppVar_74953 & cppMask_un_8_);
	bool cppVar_74955 = (cppVar_74953 == 152);
	BIT_VEC cppVar_74956 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74957 = (cppVar_74956 << 3) | 7;
	cppVar_74957 = (cppVar_74957 & cppMask_un_5_);
	BIT_VEC cppVar_74958 = (0 << 5) | cppVar_74957;
	cppVar_74958 = (cppVar_74958 & cppMask_un_8_);
	bool cppVar_74960 = (cppVar_74958 == 153);
	BIT_VEC cppVar_74961 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74962 = (cppVar_74961 << 3) | 7;
	cppVar_74962 = (cppVar_74962 & cppMask_un_5_);
	BIT_VEC cppVar_74963 = (0 << 5) | cppVar_74962;
	cppVar_74963 = (cppVar_74963 & cppMask_un_8_);
	bool cppVar_74965 = (cppVar_74963 == 160);
	BIT_VEC cppVar_74966 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74967 = (cppVar_74966 << 3) | 7;
	cppVar_74967 = (cppVar_74967 & cppMask_un_5_);
	BIT_VEC cppVar_74968 = (0 << 5) | cppVar_74967;
	cppVar_74968 = (cppVar_74968 & cppMask_un_8_);
	bool cppVar_74970 = (cppVar_74968 == 168);
	BIT_VEC cppVar_74971 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74972 = (cppVar_74971 << 3) | 7;
	cppVar_74972 = (cppVar_74972 & cppMask_un_5_);
	BIT_VEC cppVar_74973 = (0 << 5) | cppVar_74972;
	cppVar_74973 = (cppVar_74973 & cppMask_un_8_);
	bool cppVar_74975 = (cppVar_74973 == 176);
	BIT_VEC cppVar_74976 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74977 = (cppVar_74976 << 3) | 7;
	cppVar_74977 = (cppVar_74977 & cppMask_un_5_);
	BIT_VEC cppVar_74978 = (0 << 5) | cppVar_74977;
	cppVar_74978 = (cppVar_74978 & cppMask_un_8_);
	bool cppVar_74980 = (cppVar_74978 == 184);
	BIT_VEC cppVar_74981 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74982 = (cppVar_74981 << 3) | 7;
	cppVar_74982 = (cppVar_74982 & cppMask_un_5_);
	BIT_VEC cppVar_74983 = (0 << 5) | cppVar_74982;
	cppVar_74983 = (cppVar_74983 & cppMask_un_8_);
	bool cppVar_74985 = (cppVar_74983 == 208);
	BIT_VEC cppVar_74986 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74987 = (cppVar_74986 << 3) | 7;
	cppVar_74987 = (cppVar_74987 & cppMask_un_5_);
	BIT_VEC cppVar_74988 = (0 << 5) | cppVar_74987;
	cppVar_74988 = (cppVar_74988 & cppMask_un_8_);
	bool cppVar_74990 = (cppVar_74988 == 224);
	BIT_VEC cppVar_74991 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_74992 = (cppVar_74991 << 3) | 7;
	cppVar_74992 = (cppVar_74992 & cppMask_un_5_);
	BIT_VEC cppVar_74993 = (0 << 5) | cppVar_74992;
	cppVar_74993 = (cppVar_74993 & cppMask_un_8_);
	bool cppVar_74995 = (cppVar_74993 == 240);
	BIT_VEC cppVar_74997 = (cppVar_74995) ? B : 0;
	BIT_VEC cppVar_74998 = (cppVar_74990) ? ACC : cppVar_74997;
	BIT_VEC cppVar_74999 = (cppVar_74985) ? PSW : cppVar_74998;
	BIT_VEC cppVar_75000 = (cppVar_74980) ? IP : cppVar_74999;
	BIT_VEC cppVar_75001 = (cppVar_74975) ? P3 : cppVar_75000;
	BIT_VEC cppVar_75002 = (cppVar_74970) ? IE : cppVar_75001;
	BIT_VEC cppVar_75003 = (cppVar_74965) ? P2 : cppVar_75002;
	BIT_VEC cppVar_75004 = (cppVar_74960) ? SBUF : cppVar_75003;
	BIT_VEC cppVar_75005 = (cppVar_74955) ? SCON : cppVar_75004;
	BIT_VEC cppVar_75006 = (cppVar_74950) ? P1 : cppVar_75005;
	BIT_VEC cppVar_75007 = (cppVar_74945) ? TH1 : cppVar_75006;
	BIT_VEC cppVar_75008 = (cppVar_74940) ? TL1 : cppVar_75007;
	BIT_VEC cppVar_75009 = (cppVar_74935) ? TH0 : cppVar_75008;
	BIT_VEC cppVar_75010 = (cppVar_74930) ? TL0 : cppVar_75009;
	BIT_VEC cppVar_75011 = (cppVar_74925) ? TMOD : cppVar_75010;
	BIT_VEC cppVar_75012 = (cppVar_74920) ? TCON : cppVar_75011;
	BIT_VEC cppVar_75013 = (cppVar_74915) ? PCON : cppVar_75012;
	BIT_VEC cppVar_75014 = (cppVar_74910) ? DPH : cppVar_75013;
	BIT_VEC cppVar_75015 = (cppVar_74905) ? DPL : cppVar_75014;
	BIT_VEC cppVar_75016 = (cppVar_74900) ? SP : cppVar_75015;
	BIT_VEC cppVar_75017 = (cppVar_74895) ? P0 : cppVar_75016;
	BIT_VEC cppVar_75018 = (cppVar_74886) ? cppVar_74890 : cppVar_75017;
	BIT_VEC cppVar_75019 = (cppVar_74878) ? cppVar_75018 : TH1;
	BIT_VEC cppVar_75020 = ROM.rd(PC);
	bool cppVar_75022 = (cppVar_75020 == 142);
	BIT_VEC cppVar_75024 = PC + 1;
	cppVar_75024 = (cppVar_75024 & cppMask_un_16_);
	BIT_VEC cppVar_75025 = ROM.rd(cppVar_75024);
	bool cppVar_75027 = (cppVar_75025 == 141);
	BIT_VEC cppVar_75029 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75031 = (cppVar_75029 << 3) | 6;
	cppVar_75031 = (cppVar_75031 & cppMask_un_5_);
	BIT_VEC cppVar_75032 = (0 << 5) | cppVar_75031;
	cppVar_75032 = (cppVar_75032 & cppMask_un_8_);
	BIT_VEC cppVar_75033 = (cppVar_75032 >> 7) & cppMask_un_1_;
	bool cppVar_75035 = (cppVar_75033 == 0);
	BIT_VEC cppVar_75036 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75037 = (cppVar_75036 << 3) | 6;
	cppVar_75037 = (cppVar_75037 & cppMask_un_5_);
	BIT_VEC cppVar_75038 = (0 << 5) | cppVar_75037;
	cppVar_75038 = (cppVar_75038 & cppMask_un_8_);
	BIT_VEC cppVar_75039 = IRAM.rd(cppVar_75038);
	BIT_VEC cppVar_75040 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75041 = (cppVar_75040 << 3) | 6;
	cppVar_75041 = (cppVar_75041 & cppMask_un_5_);
	BIT_VEC cppVar_75042 = (0 << 5) | cppVar_75041;
	cppVar_75042 = (cppVar_75042 & cppMask_un_8_);
	bool cppVar_75044 = (cppVar_75042 == 128);
	BIT_VEC cppVar_75045 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75046 = (cppVar_75045 << 3) | 6;
	cppVar_75046 = (cppVar_75046 & cppMask_un_5_);
	BIT_VEC cppVar_75047 = (0 << 5) | cppVar_75046;
	cppVar_75047 = (cppVar_75047 & cppMask_un_8_);
	bool cppVar_75049 = (cppVar_75047 == 129);
	BIT_VEC cppVar_75050 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75051 = (cppVar_75050 << 3) | 6;
	cppVar_75051 = (cppVar_75051 & cppMask_un_5_);
	BIT_VEC cppVar_75052 = (0 << 5) | cppVar_75051;
	cppVar_75052 = (cppVar_75052 & cppMask_un_8_);
	bool cppVar_75054 = (cppVar_75052 == 130);
	BIT_VEC cppVar_75055 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75056 = (cppVar_75055 << 3) | 6;
	cppVar_75056 = (cppVar_75056 & cppMask_un_5_);
	BIT_VEC cppVar_75057 = (0 << 5) | cppVar_75056;
	cppVar_75057 = (cppVar_75057 & cppMask_un_8_);
	bool cppVar_75059 = (cppVar_75057 == 131);
	BIT_VEC cppVar_75060 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75061 = (cppVar_75060 << 3) | 6;
	cppVar_75061 = (cppVar_75061 & cppMask_un_5_);
	BIT_VEC cppVar_75062 = (0 << 5) | cppVar_75061;
	cppVar_75062 = (cppVar_75062 & cppMask_un_8_);
	bool cppVar_75064 = (cppVar_75062 == 135);
	BIT_VEC cppVar_75065 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75066 = (cppVar_75065 << 3) | 6;
	cppVar_75066 = (cppVar_75066 & cppMask_un_5_);
	BIT_VEC cppVar_75067 = (0 << 5) | cppVar_75066;
	cppVar_75067 = (cppVar_75067 & cppMask_un_8_);
	bool cppVar_75069 = (cppVar_75067 == 136);
	BIT_VEC cppVar_75070 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75071 = (cppVar_75070 << 3) | 6;
	cppVar_75071 = (cppVar_75071 & cppMask_un_5_);
	BIT_VEC cppVar_75072 = (0 << 5) | cppVar_75071;
	cppVar_75072 = (cppVar_75072 & cppMask_un_8_);
	bool cppVar_75074 = (cppVar_75072 == 137);
	BIT_VEC cppVar_75075 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75076 = (cppVar_75075 << 3) | 6;
	cppVar_75076 = (cppVar_75076 & cppMask_un_5_);
	BIT_VEC cppVar_75077 = (0 << 5) | cppVar_75076;
	cppVar_75077 = (cppVar_75077 & cppMask_un_8_);
	bool cppVar_75079 = (cppVar_75077 == 138);
	BIT_VEC cppVar_75080 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75081 = (cppVar_75080 << 3) | 6;
	cppVar_75081 = (cppVar_75081 & cppMask_un_5_);
	BIT_VEC cppVar_75082 = (0 << 5) | cppVar_75081;
	cppVar_75082 = (cppVar_75082 & cppMask_un_8_);
	bool cppVar_75084 = (cppVar_75082 == 140);
	BIT_VEC cppVar_75085 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75086 = (cppVar_75085 << 3) | 6;
	cppVar_75086 = (cppVar_75086 & cppMask_un_5_);
	BIT_VEC cppVar_75087 = (0 << 5) | cppVar_75086;
	cppVar_75087 = (cppVar_75087 & cppMask_un_8_);
	bool cppVar_75089 = (cppVar_75087 == 139);
	BIT_VEC cppVar_75090 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75091 = (cppVar_75090 << 3) | 6;
	cppVar_75091 = (cppVar_75091 & cppMask_un_5_);
	BIT_VEC cppVar_75092 = (0 << 5) | cppVar_75091;
	cppVar_75092 = (cppVar_75092 & cppMask_un_8_);
	bool cppVar_75094 = (cppVar_75092 == 141);
	BIT_VEC cppVar_75095 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75096 = (cppVar_75095 << 3) | 6;
	cppVar_75096 = (cppVar_75096 & cppMask_un_5_);
	BIT_VEC cppVar_75097 = (0 << 5) | cppVar_75096;
	cppVar_75097 = (cppVar_75097 & cppMask_un_8_);
	bool cppVar_75099 = (cppVar_75097 == 144);
	BIT_VEC cppVar_75100 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75101 = (cppVar_75100 << 3) | 6;
	cppVar_75101 = (cppVar_75101 & cppMask_un_5_);
	BIT_VEC cppVar_75102 = (0 << 5) | cppVar_75101;
	cppVar_75102 = (cppVar_75102 & cppMask_un_8_);
	bool cppVar_75104 = (cppVar_75102 == 152);
	BIT_VEC cppVar_75105 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75106 = (cppVar_75105 << 3) | 6;
	cppVar_75106 = (cppVar_75106 & cppMask_un_5_);
	BIT_VEC cppVar_75107 = (0 << 5) | cppVar_75106;
	cppVar_75107 = (cppVar_75107 & cppMask_un_8_);
	bool cppVar_75109 = (cppVar_75107 == 153);
	BIT_VEC cppVar_75110 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75111 = (cppVar_75110 << 3) | 6;
	cppVar_75111 = (cppVar_75111 & cppMask_un_5_);
	BIT_VEC cppVar_75112 = (0 << 5) | cppVar_75111;
	cppVar_75112 = (cppVar_75112 & cppMask_un_8_);
	bool cppVar_75114 = (cppVar_75112 == 160);
	BIT_VEC cppVar_75115 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75116 = (cppVar_75115 << 3) | 6;
	cppVar_75116 = (cppVar_75116 & cppMask_un_5_);
	BIT_VEC cppVar_75117 = (0 << 5) | cppVar_75116;
	cppVar_75117 = (cppVar_75117 & cppMask_un_8_);
	bool cppVar_75119 = (cppVar_75117 == 168);
	BIT_VEC cppVar_75120 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75121 = (cppVar_75120 << 3) | 6;
	cppVar_75121 = (cppVar_75121 & cppMask_un_5_);
	BIT_VEC cppVar_75122 = (0 << 5) | cppVar_75121;
	cppVar_75122 = (cppVar_75122 & cppMask_un_8_);
	bool cppVar_75124 = (cppVar_75122 == 176);
	BIT_VEC cppVar_75125 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75126 = (cppVar_75125 << 3) | 6;
	cppVar_75126 = (cppVar_75126 & cppMask_un_5_);
	BIT_VEC cppVar_75127 = (0 << 5) | cppVar_75126;
	cppVar_75127 = (cppVar_75127 & cppMask_un_8_);
	bool cppVar_75129 = (cppVar_75127 == 184);
	BIT_VEC cppVar_75130 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75131 = (cppVar_75130 << 3) | 6;
	cppVar_75131 = (cppVar_75131 & cppMask_un_5_);
	BIT_VEC cppVar_75132 = (0 << 5) | cppVar_75131;
	cppVar_75132 = (cppVar_75132 & cppMask_un_8_);
	bool cppVar_75134 = (cppVar_75132 == 208);
	BIT_VEC cppVar_75135 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75136 = (cppVar_75135 << 3) | 6;
	cppVar_75136 = (cppVar_75136 & cppMask_un_5_);
	BIT_VEC cppVar_75137 = (0 << 5) | cppVar_75136;
	cppVar_75137 = (cppVar_75137 & cppMask_un_8_);
	bool cppVar_75139 = (cppVar_75137 == 224);
	BIT_VEC cppVar_75140 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75141 = (cppVar_75140 << 3) | 6;
	cppVar_75141 = (cppVar_75141 & cppMask_un_5_);
	BIT_VEC cppVar_75142 = (0 << 5) | cppVar_75141;
	cppVar_75142 = (cppVar_75142 & cppMask_un_8_);
	bool cppVar_75144 = (cppVar_75142 == 240);
	BIT_VEC cppVar_75146 = (cppVar_75144) ? B : 0;
	BIT_VEC cppVar_75147 = (cppVar_75139) ? ACC : cppVar_75146;
	BIT_VEC cppVar_75148 = (cppVar_75134) ? PSW : cppVar_75147;
	BIT_VEC cppVar_75149 = (cppVar_75129) ? IP : cppVar_75148;
	BIT_VEC cppVar_75150 = (cppVar_75124) ? P3 : cppVar_75149;
	BIT_VEC cppVar_75151 = (cppVar_75119) ? IE : cppVar_75150;
	BIT_VEC cppVar_75152 = (cppVar_75114) ? P2 : cppVar_75151;
	BIT_VEC cppVar_75153 = (cppVar_75109) ? SBUF : cppVar_75152;
	BIT_VEC cppVar_75154 = (cppVar_75104) ? SCON : cppVar_75153;
	BIT_VEC cppVar_75155 = (cppVar_75099) ? P1 : cppVar_75154;
	BIT_VEC cppVar_75156 = (cppVar_75094) ? TH1 : cppVar_75155;
	BIT_VEC cppVar_75157 = (cppVar_75089) ? TL1 : cppVar_75156;
	BIT_VEC cppVar_75158 = (cppVar_75084) ? TH0 : cppVar_75157;
	BIT_VEC cppVar_75159 = (cppVar_75079) ? TL0 : cppVar_75158;
	BIT_VEC cppVar_75160 = (cppVar_75074) ? TMOD : cppVar_75159;
	BIT_VEC cppVar_75161 = (cppVar_75069) ? TCON : cppVar_75160;
	BIT_VEC cppVar_75162 = (cppVar_75064) ? PCON : cppVar_75161;
	BIT_VEC cppVar_75163 = (cppVar_75059) ? DPH : cppVar_75162;
	BIT_VEC cppVar_75164 = (cppVar_75054) ? DPL : cppVar_75163;
	BIT_VEC cppVar_75165 = (cppVar_75049) ? SP : cppVar_75164;
	BIT_VEC cppVar_75166 = (cppVar_75044) ? P0 : cppVar_75165;
	BIT_VEC cppVar_75167 = (cppVar_75035) ? cppVar_75039 : cppVar_75166;
	BIT_VEC cppVar_75168 = (cppVar_75027) ? cppVar_75167 : TH1;
	BIT_VEC cppVar_75169 = ROM.rd(PC);
	bool cppVar_75171 = (cppVar_75169 == 141);
	BIT_VEC cppVar_75173 = PC + 1;
	cppVar_75173 = (cppVar_75173 & cppMask_un_16_);
	BIT_VEC cppVar_75174 = ROM.rd(cppVar_75173);
	bool cppVar_75176 = (cppVar_75174 == 141);
	BIT_VEC cppVar_75178 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75180 = (cppVar_75178 << 3) | 5;
	cppVar_75180 = (cppVar_75180 & cppMask_un_5_);
	BIT_VEC cppVar_75181 = (0 << 5) | cppVar_75180;
	cppVar_75181 = (cppVar_75181 & cppMask_un_8_);
	BIT_VEC cppVar_75182 = (cppVar_75181 >> 7) & cppMask_un_1_;
	bool cppVar_75184 = (cppVar_75182 == 0);
	BIT_VEC cppVar_75185 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75186 = (cppVar_75185 << 3) | 5;
	cppVar_75186 = (cppVar_75186 & cppMask_un_5_);
	BIT_VEC cppVar_75187 = (0 << 5) | cppVar_75186;
	cppVar_75187 = (cppVar_75187 & cppMask_un_8_);
	BIT_VEC cppVar_75188 = IRAM.rd(cppVar_75187);
	BIT_VEC cppVar_75189 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75190 = (cppVar_75189 << 3) | 5;
	cppVar_75190 = (cppVar_75190 & cppMask_un_5_);
	BIT_VEC cppVar_75191 = (0 << 5) | cppVar_75190;
	cppVar_75191 = (cppVar_75191 & cppMask_un_8_);
	bool cppVar_75193 = (cppVar_75191 == 128);
	BIT_VEC cppVar_75194 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75195 = (cppVar_75194 << 3) | 5;
	cppVar_75195 = (cppVar_75195 & cppMask_un_5_);
	BIT_VEC cppVar_75196 = (0 << 5) | cppVar_75195;
	cppVar_75196 = (cppVar_75196 & cppMask_un_8_);
	bool cppVar_75198 = (cppVar_75196 == 129);
	BIT_VEC cppVar_75199 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75200 = (cppVar_75199 << 3) | 5;
	cppVar_75200 = (cppVar_75200 & cppMask_un_5_);
	BIT_VEC cppVar_75201 = (0 << 5) | cppVar_75200;
	cppVar_75201 = (cppVar_75201 & cppMask_un_8_);
	bool cppVar_75203 = (cppVar_75201 == 130);
	BIT_VEC cppVar_75204 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75205 = (cppVar_75204 << 3) | 5;
	cppVar_75205 = (cppVar_75205 & cppMask_un_5_);
	BIT_VEC cppVar_75206 = (0 << 5) | cppVar_75205;
	cppVar_75206 = (cppVar_75206 & cppMask_un_8_);
	bool cppVar_75208 = (cppVar_75206 == 131);
	BIT_VEC cppVar_75209 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75210 = (cppVar_75209 << 3) | 5;
	cppVar_75210 = (cppVar_75210 & cppMask_un_5_);
	BIT_VEC cppVar_75211 = (0 << 5) | cppVar_75210;
	cppVar_75211 = (cppVar_75211 & cppMask_un_8_);
	bool cppVar_75213 = (cppVar_75211 == 135);
	BIT_VEC cppVar_75214 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75215 = (cppVar_75214 << 3) | 5;
	cppVar_75215 = (cppVar_75215 & cppMask_un_5_);
	BIT_VEC cppVar_75216 = (0 << 5) | cppVar_75215;
	cppVar_75216 = (cppVar_75216 & cppMask_un_8_);
	bool cppVar_75218 = (cppVar_75216 == 136);
	BIT_VEC cppVar_75219 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75220 = (cppVar_75219 << 3) | 5;
	cppVar_75220 = (cppVar_75220 & cppMask_un_5_);
	BIT_VEC cppVar_75221 = (0 << 5) | cppVar_75220;
	cppVar_75221 = (cppVar_75221 & cppMask_un_8_);
	bool cppVar_75223 = (cppVar_75221 == 137);
	BIT_VEC cppVar_75224 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75225 = (cppVar_75224 << 3) | 5;
	cppVar_75225 = (cppVar_75225 & cppMask_un_5_);
	BIT_VEC cppVar_75226 = (0 << 5) | cppVar_75225;
	cppVar_75226 = (cppVar_75226 & cppMask_un_8_);
	bool cppVar_75228 = (cppVar_75226 == 138);
	BIT_VEC cppVar_75229 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75230 = (cppVar_75229 << 3) | 5;
	cppVar_75230 = (cppVar_75230 & cppMask_un_5_);
	BIT_VEC cppVar_75231 = (0 << 5) | cppVar_75230;
	cppVar_75231 = (cppVar_75231 & cppMask_un_8_);
	bool cppVar_75233 = (cppVar_75231 == 140);
	BIT_VEC cppVar_75234 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75235 = (cppVar_75234 << 3) | 5;
	cppVar_75235 = (cppVar_75235 & cppMask_un_5_);
	BIT_VEC cppVar_75236 = (0 << 5) | cppVar_75235;
	cppVar_75236 = (cppVar_75236 & cppMask_un_8_);
	bool cppVar_75238 = (cppVar_75236 == 139);
	BIT_VEC cppVar_75239 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75240 = (cppVar_75239 << 3) | 5;
	cppVar_75240 = (cppVar_75240 & cppMask_un_5_);
	BIT_VEC cppVar_75241 = (0 << 5) | cppVar_75240;
	cppVar_75241 = (cppVar_75241 & cppMask_un_8_);
	bool cppVar_75243 = (cppVar_75241 == 141);
	BIT_VEC cppVar_75244 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75245 = (cppVar_75244 << 3) | 5;
	cppVar_75245 = (cppVar_75245 & cppMask_un_5_);
	BIT_VEC cppVar_75246 = (0 << 5) | cppVar_75245;
	cppVar_75246 = (cppVar_75246 & cppMask_un_8_);
	bool cppVar_75248 = (cppVar_75246 == 144);
	BIT_VEC cppVar_75249 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75250 = (cppVar_75249 << 3) | 5;
	cppVar_75250 = (cppVar_75250 & cppMask_un_5_);
	BIT_VEC cppVar_75251 = (0 << 5) | cppVar_75250;
	cppVar_75251 = (cppVar_75251 & cppMask_un_8_);
	bool cppVar_75253 = (cppVar_75251 == 152);
	BIT_VEC cppVar_75254 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75255 = (cppVar_75254 << 3) | 5;
	cppVar_75255 = (cppVar_75255 & cppMask_un_5_);
	BIT_VEC cppVar_75256 = (0 << 5) | cppVar_75255;
	cppVar_75256 = (cppVar_75256 & cppMask_un_8_);
	bool cppVar_75258 = (cppVar_75256 == 153);
	BIT_VEC cppVar_75259 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75260 = (cppVar_75259 << 3) | 5;
	cppVar_75260 = (cppVar_75260 & cppMask_un_5_);
	BIT_VEC cppVar_75261 = (0 << 5) | cppVar_75260;
	cppVar_75261 = (cppVar_75261 & cppMask_un_8_);
	bool cppVar_75263 = (cppVar_75261 == 160);
	BIT_VEC cppVar_75264 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75265 = (cppVar_75264 << 3) | 5;
	cppVar_75265 = (cppVar_75265 & cppMask_un_5_);
	BIT_VEC cppVar_75266 = (0 << 5) | cppVar_75265;
	cppVar_75266 = (cppVar_75266 & cppMask_un_8_);
	bool cppVar_75268 = (cppVar_75266 == 168);
	BIT_VEC cppVar_75269 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75270 = (cppVar_75269 << 3) | 5;
	cppVar_75270 = (cppVar_75270 & cppMask_un_5_);
	BIT_VEC cppVar_75271 = (0 << 5) | cppVar_75270;
	cppVar_75271 = (cppVar_75271 & cppMask_un_8_);
	bool cppVar_75273 = (cppVar_75271 == 176);
	BIT_VEC cppVar_75274 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75275 = (cppVar_75274 << 3) | 5;
	cppVar_75275 = (cppVar_75275 & cppMask_un_5_);
	BIT_VEC cppVar_75276 = (0 << 5) | cppVar_75275;
	cppVar_75276 = (cppVar_75276 & cppMask_un_8_);
	bool cppVar_75278 = (cppVar_75276 == 184);
	BIT_VEC cppVar_75279 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75280 = (cppVar_75279 << 3) | 5;
	cppVar_75280 = (cppVar_75280 & cppMask_un_5_);
	BIT_VEC cppVar_75281 = (0 << 5) | cppVar_75280;
	cppVar_75281 = (cppVar_75281 & cppMask_un_8_);
	bool cppVar_75283 = (cppVar_75281 == 208);
	BIT_VEC cppVar_75284 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75285 = (cppVar_75284 << 3) | 5;
	cppVar_75285 = (cppVar_75285 & cppMask_un_5_);
	BIT_VEC cppVar_75286 = (0 << 5) | cppVar_75285;
	cppVar_75286 = (cppVar_75286 & cppMask_un_8_);
	bool cppVar_75288 = (cppVar_75286 == 224);
	BIT_VEC cppVar_75289 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75290 = (cppVar_75289 << 3) | 5;
	cppVar_75290 = (cppVar_75290 & cppMask_un_5_);
	BIT_VEC cppVar_75291 = (0 << 5) | cppVar_75290;
	cppVar_75291 = (cppVar_75291 & cppMask_un_8_);
	bool cppVar_75293 = (cppVar_75291 == 240);
	BIT_VEC cppVar_75295 = (cppVar_75293) ? B : 0;
	BIT_VEC cppVar_75296 = (cppVar_75288) ? ACC : cppVar_75295;
	BIT_VEC cppVar_75297 = (cppVar_75283) ? PSW : cppVar_75296;
	BIT_VEC cppVar_75298 = (cppVar_75278) ? IP : cppVar_75297;
	BIT_VEC cppVar_75299 = (cppVar_75273) ? P3 : cppVar_75298;
	BIT_VEC cppVar_75300 = (cppVar_75268) ? IE : cppVar_75299;
	BIT_VEC cppVar_75301 = (cppVar_75263) ? P2 : cppVar_75300;
	BIT_VEC cppVar_75302 = (cppVar_75258) ? SBUF : cppVar_75301;
	BIT_VEC cppVar_75303 = (cppVar_75253) ? SCON : cppVar_75302;
	BIT_VEC cppVar_75304 = (cppVar_75248) ? P1 : cppVar_75303;
	BIT_VEC cppVar_75305 = (cppVar_75243) ? TH1 : cppVar_75304;
	BIT_VEC cppVar_75306 = (cppVar_75238) ? TL1 : cppVar_75305;
	BIT_VEC cppVar_75307 = (cppVar_75233) ? TH0 : cppVar_75306;
	BIT_VEC cppVar_75308 = (cppVar_75228) ? TL0 : cppVar_75307;
	BIT_VEC cppVar_75309 = (cppVar_75223) ? TMOD : cppVar_75308;
	BIT_VEC cppVar_75310 = (cppVar_75218) ? TCON : cppVar_75309;
	BIT_VEC cppVar_75311 = (cppVar_75213) ? PCON : cppVar_75310;
	BIT_VEC cppVar_75312 = (cppVar_75208) ? DPH : cppVar_75311;
	BIT_VEC cppVar_75313 = (cppVar_75203) ? DPL : cppVar_75312;
	BIT_VEC cppVar_75314 = (cppVar_75198) ? SP : cppVar_75313;
	BIT_VEC cppVar_75315 = (cppVar_75193) ? P0 : cppVar_75314;
	BIT_VEC cppVar_75316 = (cppVar_75184) ? cppVar_75188 : cppVar_75315;
	BIT_VEC cppVar_75317 = (cppVar_75176) ? cppVar_75316 : TH1;
	BIT_VEC cppVar_75318 = ROM.rd(PC);
	bool cppVar_75320 = (cppVar_75318 == 140);
	BIT_VEC cppVar_75322 = PC + 1;
	cppVar_75322 = (cppVar_75322 & cppMask_un_16_);
	BIT_VEC cppVar_75323 = ROM.rd(cppVar_75322);
	bool cppVar_75325 = (cppVar_75323 == 141);
	BIT_VEC cppVar_75327 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75329 = (cppVar_75327 << 3) | 4;
	cppVar_75329 = (cppVar_75329 & cppMask_un_5_);
	BIT_VEC cppVar_75330 = (0 << 5) | cppVar_75329;
	cppVar_75330 = (cppVar_75330 & cppMask_un_8_);
	BIT_VEC cppVar_75331 = (cppVar_75330 >> 7) & cppMask_un_1_;
	bool cppVar_75333 = (cppVar_75331 == 0);
	BIT_VEC cppVar_75334 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75335 = (cppVar_75334 << 3) | 4;
	cppVar_75335 = (cppVar_75335 & cppMask_un_5_);
	BIT_VEC cppVar_75336 = (0 << 5) | cppVar_75335;
	cppVar_75336 = (cppVar_75336 & cppMask_un_8_);
	BIT_VEC cppVar_75337 = IRAM.rd(cppVar_75336);
	BIT_VEC cppVar_75338 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75339 = (cppVar_75338 << 3) | 4;
	cppVar_75339 = (cppVar_75339 & cppMask_un_5_);
	BIT_VEC cppVar_75340 = (0 << 5) | cppVar_75339;
	cppVar_75340 = (cppVar_75340 & cppMask_un_8_);
	bool cppVar_75342 = (cppVar_75340 == 128);
	BIT_VEC cppVar_75343 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75344 = (cppVar_75343 << 3) | 4;
	cppVar_75344 = (cppVar_75344 & cppMask_un_5_);
	BIT_VEC cppVar_75345 = (0 << 5) | cppVar_75344;
	cppVar_75345 = (cppVar_75345 & cppMask_un_8_);
	bool cppVar_75347 = (cppVar_75345 == 129);
	BIT_VEC cppVar_75348 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75349 = (cppVar_75348 << 3) | 4;
	cppVar_75349 = (cppVar_75349 & cppMask_un_5_);
	BIT_VEC cppVar_75350 = (0 << 5) | cppVar_75349;
	cppVar_75350 = (cppVar_75350 & cppMask_un_8_);
	bool cppVar_75352 = (cppVar_75350 == 130);
	BIT_VEC cppVar_75353 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75354 = (cppVar_75353 << 3) | 4;
	cppVar_75354 = (cppVar_75354 & cppMask_un_5_);
	BIT_VEC cppVar_75355 = (0 << 5) | cppVar_75354;
	cppVar_75355 = (cppVar_75355 & cppMask_un_8_);
	bool cppVar_75357 = (cppVar_75355 == 131);
	BIT_VEC cppVar_75358 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75359 = (cppVar_75358 << 3) | 4;
	cppVar_75359 = (cppVar_75359 & cppMask_un_5_);
	BIT_VEC cppVar_75360 = (0 << 5) | cppVar_75359;
	cppVar_75360 = (cppVar_75360 & cppMask_un_8_);
	bool cppVar_75362 = (cppVar_75360 == 135);
	BIT_VEC cppVar_75363 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75364 = (cppVar_75363 << 3) | 4;
	cppVar_75364 = (cppVar_75364 & cppMask_un_5_);
	BIT_VEC cppVar_75365 = (0 << 5) | cppVar_75364;
	cppVar_75365 = (cppVar_75365 & cppMask_un_8_);
	bool cppVar_75367 = (cppVar_75365 == 136);
	BIT_VEC cppVar_75368 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75369 = (cppVar_75368 << 3) | 4;
	cppVar_75369 = (cppVar_75369 & cppMask_un_5_);
	BIT_VEC cppVar_75370 = (0 << 5) | cppVar_75369;
	cppVar_75370 = (cppVar_75370 & cppMask_un_8_);
	bool cppVar_75372 = (cppVar_75370 == 137);
	BIT_VEC cppVar_75373 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75374 = (cppVar_75373 << 3) | 4;
	cppVar_75374 = (cppVar_75374 & cppMask_un_5_);
	BIT_VEC cppVar_75375 = (0 << 5) | cppVar_75374;
	cppVar_75375 = (cppVar_75375 & cppMask_un_8_);
	bool cppVar_75377 = (cppVar_75375 == 138);
	BIT_VEC cppVar_75378 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75379 = (cppVar_75378 << 3) | 4;
	cppVar_75379 = (cppVar_75379 & cppMask_un_5_);
	BIT_VEC cppVar_75380 = (0 << 5) | cppVar_75379;
	cppVar_75380 = (cppVar_75380 & cppMask_un_8_);
	bool cppVar_75382 = (cppVar_75380 == 140);
	BIT_VEC cppVar_75383 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75384 = (cppVar_75383 << 3) | 4;
	cppVar_75384 = (cppVar_75384 & cppMask_un_5_);
	BIT_VEC cppVar_75385 = (0 << 5) | cppVar_75384;
	cppVar_75385 = (cppVar_75385 & cppMask_un_8_);
	bool cppVar_75387 = (cppVar_75385 == 139);
	BIT_VEC cppVar_75388 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75389 = (cppVar_75388 << 3) | 4;
	cppVar_75389 = (cppVar_75389 & cppMask_un_5_);
	BIT_VEC cppVar_75390 = (0 << 5) | cppVar_75389;
	cppVar_75390 = (cppVar_75390 & cppMask_un_8_);
	bool cppVar_75392 = (cppVar_75390 == 141);
	BIT_VEC cppVar_75393 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75394 = (cppVar_75393 << 3) | 4;
	cppVar_75394 = (cppVar_75394 & cppMask_un_5_);
	BIT_VEC cppVar_75395 = (0 << 5) | cppVar_75394;
	cppVar_75395 = (cppVar_75395 & cppMask_un_8_);
	bool cppVar_75397 = (cppVar_75395 == 144);
	BIT_VEC cppVar_75398 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75399 = (cppVar_75398 << 3) | 4;
	cppVar_75399 = (cppVar_75399 & cppMask_un_5_);
	BIT_VEC cppVar_75400 = (0 << 5) | cppVar_75399;
	cppVar_75400 = (cppVar_75400 & cppMask_un_8_);
	bool cppVar_75402 = (cppVar_75400 == 152);
	BIT_VEC cppVar_75403 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75404 = (cppVar_75403 << 3) | 4;
	cppVar_75404 = (cppVar_75404 & cppMask_un_5_);
	BIT_VEC cppVar_75405 = (0 << 5) | cppVar_75404;
	cppVar_75405 = (cppVar_75405 & cppMask_un_8_);
	bool cppVar_75407 = (cppVar_75405 == 153);
	BIT_VEC cppVar_75408 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75409 = (cppVar_75408 << 3) | 4;
	cppVar_75409 = (cppVar_75409 & cppMask_un_5_);
	BIT_VEC cppVar_75410 = (0 << 5) | cppVar_75409;
	cppVar_75410 = (cppVar_75410 & cppMask_un_8_);
	bool cppVar_75412 = (cppVar_75410 == 160);
	BIT_VEC cppVar_75413 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75414 = (cppVar_75413 << 3) | 4;
	cppVar_75414 = (cppVar_75414 & cppMask_un_5_);
	BIT_VEC cppVar_75415 = (0 << 5) | cppVar_75414;
	cppVar_75415 = (cppVar_75415 & cppMask_un_8_);
	bool cppVar_75417 = (cppVar_75415 == 168);
	BIT_VEC cppVar_75418 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75419 = (cppVar_75418 << 3) | 4;
	cppVar_75419 = (cppVar_75419 & cppMask_un_5_);
	BIT_VEC cppVar_75420 = (0 << 5) | cppVar_75419;
	cppVar_75420 = (cppVar_75420 & cppMask_un_8_);
	bool cppVar_75422 = (cppVar_75420 == 176);
	BIT_VEC cppVar_75423 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75424 = (cppVar_75423 << 3) | 4;
	cppVar_75424 = (cppVar_75424 & cppMask_un_5_);
	BIT_VEC cppVar_75425 = (0 << 5) | cppVar_75424;
	cppVar_75425 = (cppVar_75425 & cppMask_un_8_);
	bool cppVar_75427 = (cppVar_75425 == 184);
	BIT_VEC cppVar_75428 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75429 = (cppVar_75428 << 3) | 4;
	cppVar_75429 = (cppVar_75429 & cppMask_un_5_);
	BIT_VEC cppVar_75430 = (0 << 5) | cppVar_75429;
	cppVar_75430 = (cppVar_75430 & cppMask_un_8_);
	bool cppVar_75432 = (cppVar_75430 == 208);
	BIT_VEC cppVar_75433 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75434 = (cppVar_75433 << 3) | 4;
	cppVar_75434 = (cppVar_75434 & cppMask_un_5_);
	BIT_VEC cppVar_75435 = (0 << 5) | cppVar_75434;
	cppVar_75435 = (cppVar_75435 & cppMask_un_8_);
	bool cppVar_75437 = (cppVar_75435 == 224);
	BIT_VEC cppVar_75438 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75439 = (cppVar_75438 << 3) | 4;
	cppVar_75439 = (cppVar_75439 & cppMask_un_5_);
	BIT_VEC cppVar_75440 = (0 << 5) | cppVar_75439;
	cppVar_75440 = (cppVar_75440 & cppMask_un_8_);
	bool cppVar_75442 = (cppVar_75440 == 240);
	BIT_VEC cppVar_75444 = (cppVar_75442) ? B : 0;
	BIT_VEC cppVar_75445 = (cppVar_75437) ? ACC : cppVar_75444;
	BIT_VEC cppVar_75446 = (cppVar_75432) ? PSW : cppVar_75445;
	BIT_VEC cppVar_75447 = (cppVar_75427) ? IP : cppVar_75446;
	BIT_VEC cppVar_75448 = (cppVar_75422) ? P3 : cppVar_75447;
	BIT_VEC cppVar_75449 = (cppVar_75417) ? IE : cppVar_75448;
	BIT_VEC cppVar_75450 = (cppVar_75412) ? P2 : cppVar_75449;
	BIT_VEC cppVar_75451 = (cppVar_75407) ? SBUF : cppVar_75450;
	BIT_VEC cppVar_75452 = (cppVar_75402) ? SCON : cppVar_75451;
	BIT_VEC cppVar_75453 = (cppVar_75397) ? P1 : cppVar_75452;
	BIT_VEC cppVar_75454 = (cppVar_75392) ? TH1 : cppVar_75453;
	BIT_VEC cppVar_75455 = (cppVar_75387) ? TL1 : cppVar_75454;
	BIT_VEC cppVar_75456 = (cppVar_75382) ? TH0 : cppVar_75455;
	BIT_VEC cppVar_75457 = (cppVar_75377) ? TL0 : cppVar_75456;
	BIT_VEC cppVar_75458 = (cppVar_75372) ? TMOD : cppVar_75457;
	BIT_VEC cppVar_75459 = (cppVar_75367) ? TCON : cppVar_75458;
	BIT_VEC cppVar_75460 = (cppVar_75362) ? PCON : cppVar_75459;
	BIT_VEC cppVar_75461 = (cppVar_75357) ? DPH : cppVar_75460;
	BIT_VEC cppVar_75462 = (cppVar_75352) ? DPL : cppVar_75461;
	BIT_VEC cppVar_75463 = (cppVar_75347) ? SP : cppVar_75462;
	BIT_VEC cppVar_75464 = (cppVar_75342) ? P0 : cppVar_75463;
	BIT_VEC cppVar_75465 = (cppVar_75333) ? cppVar_75337 : cppVar_75464;
	BIT_VEC cppVar_75466 = (cppVar_75325) ? cppVar_75465 : TH1;
	BIT_VEC cppVar_75467 = ROM.rd(PC);
	bool cppVar_75469 = (cppVar_75467 == 139);
	BIT_VEC cppVar_75471 = PC + 1;
	cppVar_75471 = (cppVar_75471 & cppMask_un_16_);
	BIT_VEC cppVar_75472 = ROM.rd(cppVar_75471);
	bool cppVar_75474 = (cppVar_75472 == 141);
	BIT_VEC cppVar_75476 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75478 = (cppVar_75476 << 3) | 3;
	cppVar_75478 = (cppVar_75478 & cppMask_un_5_);
	BIT_VEC cppVar_75479 = (0 << 5) | cppVar_75478;
	cppVar_75479 = (cppVar_75479 & cppMask_un_8_);
	BIT_VEC cppVar_75480 = (cppVar_75479 >> 7) & cppMask_un_1_;
	bool cppVar_75482 = (cppVar_75480 == 0);
	BIT_VEC cppVar_75483 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75484 = (cppVar_75483 << 3) | 3;
	cppVar_75484 = (cppVar_75484 & cppMask_un_5_);
	BIT_VEC cppVar_75485 = (0 << 5) | cppVar_75484;
	cppVar_75485 = (cppVar_75485 & cppMask_un_8_);
	BIT_VEC cppVar_75486 = IRAM.rd(cppVar_75485);
	BIT_VEC cppVar_75487 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75488 = (cppVar_75487 << 3) | 3;
	cppVar_75488 = (cppVar_75488 & cppMask_un_5_);
	BIT_VEC cppVar_75489 = (0 << 5) | cppVar_75488;
	cppVar_75489 = (cppVar_75489 & cppMask_un_8_);
	bool cppVar_75491 = (cppVar_75489 == 128);
	BIT_VEC cppVar_75492 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75493 = (cppVar_75492 << 3) | 3;
	cppVar_75493 = (cppVar_75493 & cppMask_un_5_);
	BIT_VEC cppVar_75494 = (0 << 5) | cppVar_75493;
	cppVar_75494 = (cppVar_75494 & cppMask_un_8_);
	bool cppVar_75496 = (cppVar_75494 == 129);
	BIT_VEC cppVar_75497 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75498 = (cppVar_75497 << 3) | 3;
	cppVar_75498 = (cppVar_75498 & cppMask_un_5_);
	BIT_VEC cppVar_75499 = (0 << 5) | cppVar_75498;
	cppVar_75499 = (cppVar_75499 & cppMask_un_8_);
	bool cppVar_75501 = (cppVar_75499 == 130);
	BIT_VEC cppVar_75502 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75503 = (cppVar_75502 << 3) | 3;
	cppVar_75503 = (cppVar_75503 & cppMask_un_5_);
	BIT_VEC cppVar_75504 = (0 << 5) | cppVar_75503;
	cppVar_75504 = (cppVar_75504 & cppMask_un_8_);
	bool cppVar_75506 = (cppVar_75504 == 131);
	BIT_VEC cppVar_75507 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75508 = (cppVar_75507 << 3) | 3;
	cppVar_75508 = (cppVar_75508 & cppMask_un_5_);
	BIT_VEC cppVar_75509 = (0 << 5) | cppVar_75508;
	cppVar_75509 = (cppVar_75509 & cppMask_un_8_);
	bool cppVar_75511 = (cppVar_75509 == 135);
	BIT_VEC cppVar_75512 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75513 = (cppVar_75512 << 3) | 3;
	cppVar_75513 = (cppVar_75513 & cppMask_un_5_);
	BIT_VEC cppVar_75514 = (0 << 5) | cppVar_75513;
	cppVar_75514 = (cppVar_75514 & cppMask_un_8_);
	bool cppVar_75516 = (cppVar_75514 == 136);
	BIT_VEC cppVar_75517 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75518 = (cppVar_75517 << 3) | 3;
	cppVar_75518 = (cppVar_75518 & cppMask_un_5_);
	BIT_VEC cppVar_75519 = (0 << 5) | cppVar_75518;
	cppVar_75519 = (cppVar_75519 & cppMask_un_8_);
	bool cppVar_75521 = (cppVar_75519 == 137);
	BIT_VEC cppVar_75522 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75523 = (cppVar_75522 << 3) | 3;
	cppVar_75523 = (cppVar_75523 & cppMask_un_5_);
	BIT_VEC cppVar_75524 = (0 << 5) | cppVar_75523;
	cppVar_75524 = (cppVar_75524 & cppMask_un_8_);
	bool cppVar_75526 = (cppVar_75524 == 138);
	BIT_VEC cppVar_75527 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75528 = (cppVar_75527 << 3) | 3;
	cppVar_75528 = (cppVar_75528 & cppMask_un_5_);
	BIT_VEC cppVar_75529 = (0 << 5) | cppVar_75528;
	cppVar_75529 = (cppVar_75529 & cppMask_un_8_);
	bool cppVar_75531 = (cppVar_75529 == 140);
	BIT_VEC cppVar_75532 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75533 = (cppVar_75532 << 3) | 3;
	cppVar_75533 = (cppVar_75533 & cppMask_un_5_);
	BIT_VEC cppVar_75534 = (0 << 5) | cppVar_75533;
	cppVar_75534 = (cppVar_75534 & cppMask_un_8_);
	bool cppVar_75536 = (cppVar_75534 == 139);
	BIT_VEC cppVar_75537 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75538 = (cppVar_75537 << 3) | 3;
	cppVar_75538 = (cppVar_75538 & cppMask_un_5_);
	BIT_VEC cppVar_75539 = (0 << 5) | cppVar_75538;
	cppVar_75539 = (cppVar_75539 & cppMask_un_8_);
	bool cppVar_75541 = (cppVar_75539 == 141);
	BIT_VEC cppVar_75542 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75543 = (cppVar_75542 << 3) | 3;
	cppVar_75543 = (cppVar_75543 & cppMask_un_5_);
	BIT_VEC cppVar_75544 = (0 << 5) | cppVar_75543;
	cppVar_75544 = (cppVar_75544 & cppMask_un_8_);
	bool cppVar_75546 = (cppVar_75544 == 144);
	BIT_VEC cppVar_75547 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75548 = (cppVar_75547 << 3) | 3;
	cppVar_75548 = (cppVar_75548 & cppMask_un_5_);
	BIT_VEC cppVar_75549 = (0 << 5) | cppVar_75548;
	cppVar_75549 = (cppVar_75549 & cppMask_un_8_);
	bool cppVar_75551 = (cppVar_75549 == 152);
	BIT_VEC cppVar_75552 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75553 = (cppVar_75552 << 3) | 3;
	cppVar_75553 = (cppVar_75553 & cppMask_un_5_);
	BIT_VEC cppVar_75554 = (0 << 5) | cppVar_75553;
	cppVar_75554 = (cppVar_75554 & cppMask_un_8_);
	bool cppVar_75556 = (cppVar_75554 == 153);
	BIT_VEC cppVar_75557 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75558 = (cppVar_75557 << 3) | 3;
	cppVar_75558 = (cppVar_75558 & cppMask_un_5_);
	BIT_VEC cppVar_75559 = (0 << 5) | cppVar_75558;
	cppVar_75559 = (cppVar_75559 & cppMask_un_8_);
	bool cppVar_75561 = (cppVar_75559 == 160);
	BIT_VEC cppVar_75562 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75563 = (cppVar_75562 << 3) | 3;
	cppVar_75563 = (cppVar_75563 & cppMask_un_5_);
	BIT_VEC cppVar_75564 = (0 << 5) | cppVar_75563;
	cppVar_75564 = (cppVar_75564 & cppMask_un_8_);
	bool cppVar_75566 = (cppVar_75564 == 168);
	BIT_VEC cppVar_75567 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75568 = (cppVar_75567 << 3) | 3;
	cppVar_75568 = (cppVar_75568 & cppMask_un_5_);
	BIT_VEC cppVar_75569 = (0 << 5) | cppVar_75568;
	cppVar_75569 = (cppVar_75569 & cppMask_un_8_);
	bool cppVar_75571 = (cppVar_75569 == 176);
	BIT_VEC cppVar_75572 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75573 = (cppVar_75572 << 3) | 3;
	cppVar_75573 = (cppVar_75573 & cppMask_un_5_);
	BIT_VEC cppVar_75574 = (0 << 5) | cppVar_75573;
	cppVar_75574 = (cppVar_75574 & cppMask_un_8_);
	bool cppVar_75576 = (cppVar_75574 == 184);
	BIT_VEC cppVar_75577 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75578 = (cppVar_75577 << 3) | 3;
	cppVar_75578 = (cppVar_75578 & cppMask_un_5_);
	BIT_VEC cppVar_75579 = (0 << 5) | cppVar_75578;
	cppVar_75579 = (cppVar_75579 & cppMask_un_8_);
	bool cppVar_75581 = (cppVar_75579 == 208);
	BIT_VEC cppVar_75582 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75583 = (cppVar_75582 << 3) | 3;
	cppVar_75583 = (cppVar_75583 & cppMask_un_5_);
	BIT_VEC cppVar_75584 = (0 << 5) | cppVar_75583;
	cppVar_75584 = (cppVar_75584 & cppMask_un_8_);
	bool cppVar_75586 = (cppVar_75584 == 224);
	BIT_VEC cppVar_75587 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75588 = (cppVar_75587 << 3) | 3;
	cppVar_75588 = (cppVar_75588 & cppMask_un_5_);
	BIT_VEC cppVar_75589 = (0 << 5) | cppVar_75588;
	cppVar_75589 = (cppVar_75589 & cppMask_un_8_);
	bool cppVar_75591 = (cppVar_75589 == 240);
	BIT_VEC cppVar_75593 = (cppVar_75591) ? B : 0;
	BIT_VEC cppVar_75594 = (cppVar_75586) ? ACC : cppVar_75593;
	BIT_VEC cppVar_75595 = (cppVar_75581) ? PSW : cppVar_75594;
	BIT_VEC cppVar_75596 = (cppVar_75576) ? IP : cppVar_75595;
	BIT_VEC cppVar_75597 = (cppVar_75571) ? P3 : cppVar_75596;
	BIT_VEC cppVar_75598 = (cppVar_75566) ? IE : cppVar_75597;
	BIT_VEC cppVar_75599 = (cppVar_75561) ? P2 : cppVar_75598;
	BIT_VEC cppVar_75600 = (cppVar_75556) ? SBUF : cppVar_75599;
	BIT_VEC cppVar_75601 = (cppVar_75551) ? SCON : cppVar_75600;
	BIT_VEC cppVar_75602 = (cppVar_75546) ? P1 : cppVar_75601;
	BIT_VEC cppVar_75603 = (cppVar_75541) ? TH1 : cppVar_75602;
	BIT_VEC cppVar_75604 = (cppVar_75536) ? TL1 : cppVar_75603;
	BIT_VEC cppVar_75605 = (cppVar_75531) ? TH0 : cppVar_75604;
	BIT_VEC cppVar_75606 = (cppVar_75526) ? TL0 : cppVar_75605;
	BIT_VEC cppVar_75607 = (cppVar_75521) ? TMOD : cppVar_75606;
	BIT_VEC cppVar_75608 = (cppVar_75516) ? TCON : cppVar_75607;
	BIT_VEC cppVar_75609 = (cppVar_75511) ? PCON : cppVar_75608;
	BIT_VEC cppVar_75610 = (cppVar_75506) ? DPH : cppVar_75609;
	BIT_VEC cppVar_75611 = (cppVar_75501) ? DPL : cppVar_75610;
	BIT_VEC cppVar_75612 = (cppVar_75496) ? SP : cppVar_75611;
	BIT_VEC cppVar_75613 = (cppVar_75491) ? P0 : cppVar_75612;
	BIT_VEC cppVar_75614 = (cppVar_75482) ? cppVar_75486 : cppVar_75613;
	BIT_VEC cppVar_75615 = (cppVar_75474) ? cppVar_75614 : TH1;
	BIT_VEC cppVar_75616 = ROM.rd(PC);
	bool cppVar_75618 = (cppVar_75616 == 138);
	BIT_VEC cppVar_75620 = PC + 1;
	cppVar_75620 = (cppVar_75620 & cppMask_un_16_);
	BIT_VEC cppVar_75621 = ROM.rd(cppVar_75620);
	bool cppVar_75623 = (cppVar_75621 == 141);
	BIT_VEC cppVar_75625 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75627 = (cppVar_75625 << 3) | 2;
	cppVar_75627 = (cppVar_75627 & cppMask_un_5_);
	BIT_VEC cppVar_75628 = (0 << 5) | cppVar_75627;
	cppVar_75628 = (cppVar_75628 & cppMask_un_8_);
	BIT_VEC cppVar_75629 = (cppVar_75628 >> 7) & cppMask_un_1_;
	bool cppVar_75631 = (cppVar_75629 == 0);
	BIT_VEC cppVar_75632 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75633 = (cppVar_75632 << 3) | 2;
	cppVar_75633 = (cppVar_75633 & cppMask_un_5_);
	BIT_VEC cppVar_75634 = (0 << 5) | cppVar_75633;
	cppVar_75634 = (cppVar_75634 & cppMask_un_8_);
	BIT_VEC cppVar_75635 = IRAM.rd(cppVar_75634);
	BIT_VEC cppVar_75636 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75637 = (cppVar_75636 << 3) | 2;
	cppVar_75637 = (cppVar_75637 & cppMask_un_5_);
	BIT_VEC cppVar_75638 = (0 << 5) | cppVar_75637;
	cppVar_75638 = (cppVar_75638 & cppMask_un_8_);
	bool cppVar_75640 = (cppVar_75638 == 128);
	BIT_VEC cppVar_75641 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75642 = (cppVar_75641 << 3) | 2;
	cppVar_75642 = (cppVar_75642 & cppMask_un_5_);
	BIT_VEC cppVar_75643 = (0 << 5) | cppVar_75642;
	cppVar_75643 = (cppVar_75643 & cppMask_un_8_);
	bool cppVar_75645 = (cppVar_75643 == 129);
	BIT_VEC cppVar_75646 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75647 = (cppVar_75646 << 3) | 2;
	cppVar_75647 = (cppVar_75647 & cppMask_un_5_);
	BIT_VEC cppVar_75648 = (0 << 5) | cppVar_75647;
	cppVar_75648 = (cppVar_75648 & cppMask_un_8_);
	bool cppVar_75650 = (cppVar_75648 == 130);
	BIT_VEC cppVar_75651 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75652 = (cppVar_75651 << 3) | 2;
	cppVar_75652 = (cppVar_75652 & cppMask_un_5_);
	BIT_VEC cppVar_75653 = (0 << 5) | cppVar_75652;
	cppVar_75653 = (cppVar_75653 & cppMask_un_8_);
	bool cppVar_75655 = (cppVar_75653 == 131);
	BIT_VEC cppVar_75656 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75657 = (cppVar_75656 << 3) | 2;
	cppVar_75657 = (cppVar_75657 & cppMask_un_5_);
	BIT_VEC cppVar_75658 = (0 << 5) | cppVar_75657;
	cppVar_75658 = (cppVar_75658 & cppMask_un_8_);
	bool cppVar_75660 = (cppVar_75658 == 135);
	BIT_VEC cppVar_75661 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75662 = (cppVar_75661 << 3) | 2;
	cppVar_75662 = (cppVar_75662 & cppMask_un_5_);
	BIT_VEC cppVar_75663 = (0 << 5) | cppVar_75662;
	cppVar_75663 = (cppVar_75663 & cppMask_un_8_);
	bool cppVar_75665 = (cppVar_75663 == 136);
	BIT_VEC cppVar_75666 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75667 = (cppVar_75666 << 3) | 2;
	cppVar_75667 = (cppVar_75667 & cppMask_un_5_);
	BIT_VEC cppVar_75668 = (0 << 5) | cppVar_75667;
	cppVar_75668 = (cppVar_75668 & cppMask_un_8_);
	bool cppVar_75670 = (cppVar_75668 == 137);
	BIT_VEC cppVar_75671 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75672 = (cppVar_75671 << 3) | 2;
	cppVar_75672 = (cppVar_75672 & cppMask_un_5_);
	BIT_VEC cppVar_75673 = (0 << 5) | cppVar_75672;
	cppVar_75673 = (cppVar_75673 & cppMask_un_8_);
	bool cppVar_75675 = (cppVar_75673 == 138);
	BIT_VEC cppVar_75676 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75677 = (cppVar_75676 << 3) | 2;
	cppVar_75677 = (cppVar_75677 & cppMask_un_5_);
	BIT_VEC cppVar_75678 = (0 << 5) | cppVar_75677;
	cppVar_75678 = (cppVar_75678 & cppMask_un_8_);
	bool cppVar_75680 = (cppVar_75678 == 140);
	BIT_VEC cppVar_75681 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75682 = (cppVar_75681 << 3) | 2;
	cppVar_75682 = (cppVar_75682 & cppMask_un_5_);
	BIT_VEC cppVar_75683 = (0 << 5) | cppVar_75682;
	cppVar_75683 = (cppVar_75683 & cppMask_un_8_);
	bool cppVar_75685 = (cppVar_75683 == 139);
	BIT_VEC cppVar_75686 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75687 = (cppVar_75686 << 3) | 2;
	cppVar_75687 = (cppVar_75687 & cppMask_un_5_);
	BIT_VEC cppVar_75688 = (0 << 5) | cppVar_75687;
	cppVar_75688 = (cppVar_75688 & cppMask_un_8_);
	bool cppVar_75690 = (cppVar_75688 == 141);
	BIT_VEC cppVar_75691 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75692 = (cppVar_75691 << 3) | 2;
	cppVar_75692 = (cppVar_75692 & cppMask_un_5_);
	BIT_VEC cppVar_75693 = (0 << 5) | cppVar_75692;
	cppVar_75693 = (cppVar_75693 & cppMask_un_8_);
	bool cppVar_75695 = (cppVar_75693 == 144);
	BIT_VEC cppVar_75696 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75697 = (cppVar_75696 << 3) | 2;
	cppVar_75697 = (cppVar_75697 & cppMask_un_5_);
	BIT_VEC cppVar_75698 = (0 << 5) | cppVar_75697;
	cppVar_75698 = (cppVar_75698 & cppMask_un_8_);
	bool cppVar_75700 = (cppVar_75698 == 152);
	BIT_VEC cppVar_75701 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75702 = (cppVar_75701 << 3) | 2;
	cppVar_75702 = (cppVar_75702 & cppMask_un_5_);
	BIT_VEC cppVar_75703 = (0 << 5) | cppVar_75702;
	cppVar_75703 = (cppVar_75703 & cppMask_un_8_);
	bool cppVar_75705 = (cppVar_75703 == 153);
	BIT_VEC cppVar_75706 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75707 = (cppVar_75706 << 3) | 2;
	cppVar_75707 = (cppVar_75707 & cppMask_un_5_);
	BIT_VEC cppVar_75708 = (0 << 5) | cppVar_75707;
	cppVar_75708 = (cppVar_75708 & cppMask_un_8_);
	bool cppVar_75710 = (cppVar_75708 == 160);
	BIT_VEC cppVar_75711 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75712 = (cppVar_75711 << 3) | 2;
	cppVar_75712 = (cppVar_75712 & cppMask_un_5_);
	BIT_VEC cppVar_75713 = (0 << 5) | cppVar_75712;
	cppVar_75713 = (cppVar_75713 & cppMask_un_8_);
	bool cppVar_75715 = (cppVar_75713 == 168);
	BIT_VEC cppVar_75716 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75717 = (cppVar_75716 << 3) | 2;
	cppVar_75717 = (cppVar_75717 & cppMask_un_5_);
	BIT_VEC cppVar_75718 = (0 << 5) | cppVar_75717;
	cppVar_75718 = (cppVar_75718 & cppMask_un_8_);
	bool cppVar_75720 = (cppVar_75718 == 176);
	BIT_VEC cppVar_75721 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75722 = (cppVar_75721 << 3) | 2;
	cppVar_75722 = (cppVar_75722 & cppMask_un_5_);
	BIT_VEC cppVar_75723 = (0 << 5) | cppVar_75722;
	cppVar_75723 = (cppVar_75723 & cppMask_un_8_);
	bool cppVar_75725 = (cppVar_75723 == 184);
	BIT_VEC cppVar_75726 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75727 = (cppVar_75726 << 3) | 2;
	cppVar_75727 = (cppVar_75727 & cppMask_un_5_);
	BIT_VEC cppVar_75728 = (0 << 5) | cppVar_75727;
	cppVar_75728 = (cppVar_75728 & cppMask_un_8_);
	bool cppVar_75730 = (cppVar_75728 == 208);
	BIT_VEC cppVar_75731 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75732 = (cppVar_75731 << 3) | 2;
	cppVar_75732 = (cppVar_75732 & cppMask_un_5_);
	BIT_VEC cppVar_75733 = (0 << 5) | cppVar_75732;
	cppVar_75733 = (cppVar_75733 & cppMask_un_8_);
	bool cppVar_75735 = (cppVar_75733 == 224);
	BIT_VEC cppVar_75736 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75737 = (cppVar_75736 << 3) | 2;
	cppVar_75737 = (cppVar_75737 & cppMask_un_5_);
	BIT_VEC cppVar_75738 = (0 << 5) | cppVar_75737;
	cppVar_75738 = (cppVar_75738 & cppMask_un_8_);
	bool cppVar_75740 = (cppVar_75738 == 240);
	BIT_VEC cppVar_75742 = (cppVar_75740) ? B : 0;
	BIT_VEC cppVar_75743 = (cppVar_75735) ? ACC : cppVar_75742;
	BIT_VEC cppVar_75744 = (cppVar_75730) ? PSW : cppVar_75743;
	BIT_VEC cppVar_75745 = (cppVar_75725) ? IP : cppVar_75744;
	BIT_VEC cppVar_75746 = (cppVar_75720) ? P3 : cppVar_75745;
	BIT_VEC cppVar_75747 = (cppVar_75715) ? IE : cppVar_75746;
	BIT_VEC cppVar_75748 = (cppVar_75710) ? P2 : cppVar_75747;
	BIT_VEC cppVar_75749 = (cppVar_75705) ? SBUF : cppVar_75748;
	BIT_VEC cppVar_75750 = (cppVar_75700) ? SCON : cppVar_75749;
	BIT_VEC cppVar_75751 = (cppVar_75695) ? P1 : cppVar_75750;
	BIT_VEC cppVar_75752 = (cppVar_75690) ? TH1 : cppVar_75751;
	BIT_VEC cppVar_75753 = (cppVar_75685) ? TL1 : cppVar_75752;
	BIT_VEC cppVar_75754 = (cppVar_75680) ? TH0 : cppVar_75753;
	BIT_VEC cppVar_75755 = (cppVar_75675) ? TL0 : cppVar_75754;
	BIT_VEC cppVar_75756 = (cppVar_75670) ? TMOD : cppVar_75755;
	BIT_VEC cppVar_75757 = (cppVar_75665) ? TCON : cppVar_75756;
	BIT_VEC cppVar_75758 = (cppVar_75660) ? PCON : cppVar_75757;
	BIT_VEC cppVar_75759 = (cppVar_75655) ? DPH : cppVar_75758;
	BIT_VEC cppVar_75760 = (cppVar_75650) ? DPL : cppVar_75759;
	BIT_VEC cppVar_75761 = (cppVar_75645) ? SP : cppVar_75760;
	BIT_VEC cppVar_75762 = (cppVar_75640) ? P0 : cppVar_75761;
	BIT_VEC cppVar_75763 = (cppVar_75631) ? cppVar_75635 : cppVar_75762;
	BIT_VEC cppVar_75764 = (cppVar_75623) ? cppVar_75763 : TH1;
	BIT_VEC cppVar_75765 = ROM.rd(PC);
	bool cppVar_75767 = (cppVar_75765 == 137);
	BIT_VEC cppVar_75769 = PC + 1;
	cppVar_75769 = (cppVar_75769 & cppMask_un_16_);
	BIT_VEC cppVar_75770 = ROM.rd(cppVar_75769);
	bool cppVar_75772 = (cppVar_75770 == 141);
	BIT_VEC cppVar_75774 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75776 = (cppVar_75774 << 3) | 1;
	cppVar_75776 = (cppVar_75776 & cppMask_un_5_);
	BIT_VEC cppVar_75777 = (0 << 5) | cppVar_75776;
	cppVar_75777 = (cppVar_75777 & cppMask_un_8_);
	BIT_VEC cppVar_75778 = (cppVar_75777 >> 7) & cppMask_un_1_;
	bool cppVar_75780 = (cppVar_75778 == 0);
	BIT_VEC cppVar_75781 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75782 = (cppVar_75781 << 3) | 1;
	cppVar_75782 = (cppVar_75782 & cppMask_un_5_);
	BIT_VEC cppVar_75783 = (0 << 5) | cppVar_75782;
	cppVar_75783 = (cppVar_75783 & cppMask_un_8_);
	BIT_VEC cppVar_75784 = IRAM.rd(cppVar_75783);
	BIT_VEC cppVar_75785 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75786 = (cppVar_75785 << 3) | 1;
	cppVar_75786 = (cppVar_75786 & cppMask_un_5_);
	BIT_VEC cppVar_75787 = (0 << 5) | cppVar_75786;
	cppVar_75787 = (cppVar_75787 & cppMask_un_8_);
	bool cppVar_75789 = (cppVar_75787 == 128);
	BIT_VEC cppVar_75790 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75791 = (cppVar_75790 << 3) | 1;
	cppVar_75791 = (cppVar_75791 & cppMask_un_5_);
	BIT_VEC cppVar_75792 = (0 << 5) | cppVar_75791;
	cppVar_75792 = (cppVar_75792 & cppMask_un_8_);
	bool cppVar_75794 = (cppVar_75792 == 129);
	BIT_VEC cppVar_75795 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75796 = (cppVar_75795 << 3) | 1;
	cppVar_75796 = (cppVar_75796 & cppMask_un_5_);
	BIT_VEC cppVar_75797 = (0 << 5) | cppVar_75796;
	cppVar_75797 = (cppVar_75797 & cppMask_un_8_);
	bool cppVar_75799 = (cppVar_75797 == 130);
	BIT_VEC cppVar_75800 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75801 = (cppVar_75800 << 3) | 1;
	cppVar_75801 = (cppVar_75801 & cppMask_un_5_);
	BIT_VEC cppVar_75802 = (0 << 5) | cppVar_75801;
	cppVar_75802 = (cppVar_75802 & cppMask_un_8_);
	bool cppVar_75804 = (cppVar_75802 == 131);
	BIT_VEC cppVar_75805 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75806 = (cppVar_75805 << 3) | 1;
	cppVar_75806 = (cppVar_75806 & cppMask_un_5_);
	BIT_VEC cppVar_75807 = (0 << 5) | cppVar_75806;
	cppVar_75807 = (cppVar_75807 & cppMask_un_8_);
	bool cppVar_75809 = (cppVar_75807 == 135);
	BIT_VEC cppVar_75810 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75811 = (cppVar_75810 << 3) | 1;
	cppVar_75811 = (cppVar_75811 & cppMask_un_5_);
	BIT_VEC cppVar_75812 = (0 << 5) | cppVar_75811;
	cppVar_75812 = (cppVar_75812 & cppMask_un_8_);
	bool cppVar_75814 = (cppVar_75812 == 136);
	BIT_VEC cppVar_75815 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75816 = (cppVar_75815 << 3) | 1;
	cppVar_75816 = (cppVar_75816 & cppMask_un_5_);
	BIT_VEC cppVar_75817 = (0 << 5) | cppVar_75816;
	cppVar_75817 = (cppVar_75817 & cppMask_un_8_);
	bool cppVar_75819 = (cppVar_75817 == 137);
	BIT_VEC cppVar_75820 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75821 = (cppVar_75820 << 3) | 1;
	cppVar_75821 = (cppVar_75821 & cppMask_un_5_);
	BIT_VEC cppVar_75822 = (0 << 5) | cppVar_75821;
	cppVar_75822 = (cppVar_75822 & cppMask_un_8_);
	bool cppVar_75824 = (cppVar_75822 == 138);
	BIT_VEC cppVar_75825 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75826 = (cppVar_75825 << 3) | 1;
	cppVar_75826 = (cppVar_75826 & cppMask_un_5_);
	BIT_VEC cppVar_75827 = (0 << 5) | cppVar_75826;
	cppVar_75827 = (cppVar_75827 & cppMask_un_8_);
	bool cppVar_75829 = (cppVar_75827 == 140);
	BIT_VEC cppVar_75830 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75831 = (cppVar_75830 << 3) | 1;
	cppVar_75831 = (cppVar_75831 & cppMask_un_5_);
	BIT_VEC cppVar_75832 = (0 << 5) | cppVar_75831;
	cppVar_75832 = (cppVar_75832 & cppMask_un_8_);
	bool cppVar_75834 = (cppVar_75832 == 139);
	BIT_VEC cppVar_75835 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75836 = (cppVar_75835 << 3) | 1;
	cppVar_75836 = (cppVar_75836 & cppMask_un_5_);
	BIT_VEC cppVar_75837 = (0 << 5) | cppVar_75836;
	cppVar_75837 = (cppVar_75837 & cppMask_un_8_);
	bool cppVar_75839 = (cppVar_75837 == 141);
	BIT_VEC cppVar_75840 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75841 = (cppVar_75840 << 3) | 1;
	cppVar_75841 = (cppVar_75841 & cppMask_un_5_);
	BIT_VEC cppVar_75842 = (0 << 5) | cppVar_75841;
	cppVar_75842 = (cppVar_75842 & cppMask_un_8_);
	bool cppVar_75844 = (cppVar_75842 == 144);
	BIT_VEC cppVar_75845 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75846 = (cppVar_75845 << 3) | 1;
	cppVar_75846 = (cppVar_75846 & cppMask_un_5_);
	BIT_VEC cppVar_75847 = (0 << 5) | cppVar_75846;
	cppVar_75847 = (cppVar_75847 & cppMask_un_8_);
	bool cppVar_75849 = (cppVar_75847 == 152);
	BIT_VEC cppVar_75850 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75851 = (cppVar_75850 << 3) | 1;
	cppVar_75851 = (cppVar_75851 & cppMask_un_5_);
	BIT_VEC cppVar_75852 = (0 << 5) | cppVar_75851;
	cppVar_75852 = (cppVar_75852 & cppMask_un_8_);
	bool cppVar_75854 = (cppVar_75852 == 153);
	BIT_VEC cppVar_75855 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75856 = (cppVar_75855 << 3) | 1;
	cppVar_75856 = (cppVar_75856 & cppMask_un_5_);
	BIT_VEC cppVar_75857 = (0 << 5) | cppVar_75856;
	cppVar_75857 = (cppVar_75857 & cppMask_un_8_);
	bool cppVar_75859 = (cppVar_75857 == 160);
	BIT_VEC cppVar_75860 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75861 = (cppVar_75860 << 3) | 1;
	cppVar_75861 = (cppVar_75861 & cppMask_un_5_);
	BIT_VEC cppVar_75862 = (0 << 5) | cppVar_75861;
	cppVar_75862 = (cppVar_75862 & cppMask_un_8_);
	bool cppVar_75864 = (cppVar_75862 == 168);
	BIT_VEC cppVar_75865 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75866 = (cppVar_75865 << 3) | 1;
	cppVar_75866 = (cppVar_75866 & cppMask_un_5_);
	BIT_VEC cppVar_75867 = (0 << 5) | cppVar_75866;
	cppVar_75867 = (cppVar_75867 & cppMask_un_8_);
	bool cppVar_75869 = (cppVar_75867 == 176);
	BIT_VEC cppVar_75870 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75871 = (cppVar_75870 << 3) | 1;
	cppVar_75871 = (cppVar_75871 & cppMask_un_5_);
	BIT_VEC cppVar_75872 = (0 << 5) | cppVar_75871;
	cppVar_75872 = (cppVar_75872 & cppMask_un_8_);
	bool cppVar_75874 = (cppVar_75872 == 184);
	BIT_VEC cppVar_75875 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75876 = (cppVar_75875 << 3) | 1;
	cppVar_75876 = (cppVar_75876 & cppMask_un_5_);
	BIT_VEC cppVar_75877 = (0 << 5) | cppVar_75876;
	cppVar_75877 = (cppVar_75877 & cppMask_un_8_);
	bool cppVar_75879 = (cppVar_75877 == 208);
	BIT_VEC cppVar_75880 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75881 = (cppVar_75880 << 3) | 1;
	cppVar_75881 = (cppVar_75881 & cppMask_un_5_);
	BIT_VEC cppVar_75882 = (0 << 5) | cppVar_75881;
	cppVar_75882 = (cppVar_75882 & cppMask_un_8_);
	bool cppVar_75884 = (cppVar_75882 == 224);
	BIT_VEC cppVar_75885 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75886 = (cppVar_75885 << 3) | 1;
	cppVar_75886 = (cppVar_75886 & cppMask_un_5_);
	BIT_VEC cppVar_75887 = (0 << 5) | cppVar_75886;
	cppVar_75887 = (cppVar_75887 & cppMask_un_8_);
	bool cppVar_75889 = (cppVar_75887 == 240);
	BIT_VEC cppVar_75891 = (cppVar_75889) ? B : 0;
	BIT_VEC cppVar_75892 = (cppVar_75884) ? ACC : cppVar_75891;
	BIT_VEC cppVar_75893 = (cppVar_75879) ? PSW : cppVar_75892;
	BIT_VEC cppVar_75894 = (cppVar_75874) ? IP : cppVar_75893;
	BIT_VEC cppVar_75895 = (cppVar_75869) ? P3 : cppVar_75894;
	BIT_VEC cppVar_75896 = (cppVar_75864) ? IE : cppVar_75895;
	BIT_VEC cppVar_75897 = (cppVar_75859) ? P2 : cppVar_75896;
	BIT_VEC cppVar_75898 = (cppVar_75854) ? SBUF : cppVar_75897;
	BIT_VEC cppVar_75899 = (cppVar_75849) ? SCON : cppVar_75898;
	BIT_VEC cppVar_75900 = (cppVar_75844) ? P1 : cppVar_75899;
	BIT_VEC cppVar_75901 = (cppVar_75839) ? TH1 : cppVar_75900;
	BIT_VEC cppVar_75902 = (cppVar_75834) ? TL1 : cppVar_75901;
	BIT_VEC cppVar_75903 = (cppVar_75829) ? TH0 : cppVar_75902;
	BIT_VEC cppVar_75904 = (cppVar_75824) ? TL0 : cppVar_75903;
	BIT_VEC cppVar_75905 = (cppVar_75819) ? TMOD : cppVar_75904;
	BIT_VEC cppVar_75906 = (cppVar_75814) ? TCON : cppVar_75905;
	BIT_VEC cppVar_75907 = (cppVar_75809) ? PCON : cppVar_75906;
	BIT_VEC cppVar_75908 = (cppVar_75804) ? DPH : cppVar_75907;
	BIT_VEC cppVar_75909 = (cppVar_75799) ? DPL : cppVar_75908;
	BIT_VEC cppVar_75910 = (cppVar_75794) ? SP : cppVar_75909;
	BIT_VEC cppVar_75911 = (cppVar_75789) ? P0 : cppVar_75910;
	BIT_VEC cppVar_75912 = (cppVar_75780) ? cppVar_75784 : cppVar_75911;
	BIT_VEC cppVar_75913 = (cppVar_75772) ? cppVar_75912 : TH1;
	BIT_VEC cppVar_75914 = ROM.rd(PC);
	bool cppVar_75916 = (cppVar_75914 == 136);
	BIT_VEC cppVar_75918 = PC + 1;
	cppVar_75918 = (cppVar_75918 & cppMask_un_16_);
	BIT_VEC cppVar_75919 = ROM.rd(cppVar_75918);
	bool cppVar_75921 = (cppVar_75919 == 141);
	BIT_VEC cppVar_75923 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75925 = (cppVar_75923 << 3) | 0;
	cppVar_75925 = (cppVar_75925 & cppMask_un_5_);
	BIT_VEC cppVar_75926 = (0 << 5) | cppVar_75925;
	cppVar_75926 = (cppVar_75926 & cppMask_un_8_);
	BIT_VEC cppVar_75927 = (cppVar_75926 >> 7) & cppMask_un_1_;
	bool cppVar_75929 = (cppVar_75927 == 0);
	BIT_VEC cppVar_75930 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75931 = (cppVar_75930 << 3) | 0;
	cppVar_75931 = (cppVar_75931 & cppMask_un_5_);
	BIT_VEC cppVar_75932 = (0 << 5) | cppVar_75931;
	cppVar_75932 = (cppVar_75932 & cppMask_un_8_);
	BIT_VEC cppVar_75933 = IRAM.rd(cppVar_75932);
	BIT_VEC cppVar_75934 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75935 = (cppVar_75934 << 3) | 0;
	cppVar_75935 = (cppVar_75935 & cppMask_un_5_);
	BIT_VEC cppVar_75936 = (0 << 5) | cppVar_75935;
	cppVar_75936 = (cppVar_75936 & cppMask_un_8_);
	bool cppVar_75938 = (cppVar_75936 == 128);
	BIT_VEC cppVar_75939 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75940 = (cppVar_75939 << 3) | 0;
	cppVar_75940 = (cppVar_75940 & cppMask_un_5_);
	BIT_VEC cppVar_75941 = (0 << 5) | cppVar_75940;
	cppVar_75941 = (cppVar_75941 & cppMask_un_8_);
	bool cppVar_75943 = (cppVar_75941 == 129);
	BIT_VEC cppVar_75944 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75945 = (cppVar_75944 << 3) | 0;
	cppVar_75945 = (cppVar_75945 & cppMask_un_5_);
	BIT_VEC cppVar_75946 = (0 << 5) | cppVar_75945;
	cppVar_75946 = (cppVar_75946 & cppMask_un_8_);
	bool cppVar_75948 = (cppVar_75946 == 130);
	BIT_VEC cppVar_75949 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75950 = (cppVar_75949 << 3) | 0;
	cppVar_75950 = (cppVar_75950 & cppMask_un_5_);
	BIT_VEC cppVar_75951 = (0 << 5) | cppVar_75950;
	cppVar_75951 = (cppVar_75951 & cppMask_un_8_);
	bool cppVar_75953 = (cppVar_75951 == 131);
	BIT_VEC cppVar_75954 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75955 = (cppVar_75954 << 3) | 0;
	cppVar_75955 = (cppVar_75955 & cppMask_un_5_);
	BIT_VEC cppVar_75956 = (0 << 5) | cppVar_75955;
	cppVar_75956 = (cppVar_75956 & cppMask_un_8_);
	bool cppVar_75958 = (cppVar_75956 == 135);
	BIT_VEC cppVar_75959 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75960 = (cppVar_75959 << 3) | 0;
	cppVar_75960 = (cppVar_75960 & cppMask_un_5_);
	BIT_VEC cppVar_75961 = (0 << 5) | cppVar_75960;
	cppVar_75961 = (cppVar_75961 & cppMask_un_8_);
	bool cppVar_75963 = (cppVar_75961 == 136);
	BIT_VEC cppVar_75964 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75965 = (cppVar_75964 << 3) | 0;
	cppVar_75965 = (cppVar_75965 & cppMask_un_5_);
	BIT_VEC cppVar_75966 = (0 << 5) | cppVar_75965;
	cppVar_75966 = (cppVar_75966 & cppMask_un_8_);
	bool cppVar_75968 = (cppVar_75966 == 137);
	BIT_VEC cppVar_75969 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75970 = (cppVar_75969 << 3) | 0;
	cppVar_75970 = (cppVar_75970 & cppMask_un_5_);
	BIT_VEC cppVar_75971 = (0 << 5) | cppVar_75970;
	cppVar_75971 = (cppVar_75971 & cppMask_un_8_);
	bool cppVar_75973 = (cppVar_75971 == 138);
	BIT_VEC cppVar_75974 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75975 = (cppVar_75974 << 3) | 0;
	cppVar_75975 = (cppVar_75975 & cppMask_un_5_);
	BIT_VEC cppVar_75976 = (0 << 5) | cppVar_75975;
	cppVar_75976 = (cppVar_75976 & cppMask_un_8_);
	bool cppVar_75978 = (cppVar_75976 == 140);
	BIT_VEC cppVar_75979 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75980 = (cppVar_75979 << 3) | 0;
	cppVar_75980 = (cppVar_75980 & cppMask_un_5_);
	BIT_VEC cppVar_75981 = (0 << 5) | cppVar_75980;
	cppVar_75981 = (cppVar_75981 & cppMask_un_8_);
	bool cppVar_75983 = (cppVar_75981 == 139);
	BIT_VEC cppVar_75984 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75985 = (cppVar_75984 << 3) | 0;
	cppVar_75985 = (cppVar_75985 & cppMask_un_5_);
	BIT_VEC cppVar_75986 = (0 << 5) | cppVar_75985;
	cppVar_75986 = (cppVar_75986 & cppMask_un_8_);
	bool cppVar_75988 = (cppVar_75986 == 141);
	BIT_VEC cppVar_75989 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75990 = (cppVar_75989 << 3) | 0;
	cppVar_75990 = (cppVar_75990 & cppMask_un_5_);
	BIT_VEC cppVar_75991 = (0 << 5) | cppVar_75990;
	cppVar_75991 = (cppVar_75991 & cppMask_un_8_);
	bool cppVar_75993 = (cppVar_75991 == 144);
	BIT_VEC cppVar_75994 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_75995 = (cppVar_75994 << 3) | 0;
	cppVar_75995 = (cppVar_75995 & cppMask_un_5_);
	BIT_VEC cppVar_75996 = (0 << 5) | cppVar_75995;
	cppVar_75996 = (cppVar_75996 & cppMask_un_8_);
	bool cppVar_75998 = (cppVar_75996 == 152);
	BIT_VEC cppVar_75999 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_76000 = (cppVar_75999 << 3) | 0;
	cppVar_76000 = (cppVar_76000 & cppMask_un_5_);
	BIT_VEC cppVar_76001 = (0 << 5) | cppVar_76000;
	cppVar_76001 = (cppVar_76001 & cppMask_un_8_);
	bool cppVar_76003 = (cppVar_76001 == 153);
	BIT_VEC cppVar_76004 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_76005 = (cppVar_76004 << 3) | 0;
	cppVar_76005 = (cppVar_76005 & cppMask_un_5_);
	BIT_VEC cppVar_76006 = (0 << 5) | cppVar_76005;
	cppVar_76006 = (cppVar_76006 & cppMask_un_8_);
	bool cppVar_76008 = (cppVar_76006 == 160);
	BIT_VEC cppVar_76009 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_76010 = (cppVar_76009 << 3) | 0;
	cppVar_76010 = (cppVar_76010 & cppMask_un_5_);
	BIT_VEC cppVar_76011 = (0 << 5) | cppVar_76010;
	cppVar_76011 = (cppVar_76011 & cppMask_un_8_);
	bool cppVar_76013 = (cppVar_76011 == 168);
	BIT_VEC cppVar_76014 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_76015 = (cppVar_76014 << 3) | 0;
	cppVar_76015 = (cppVar_76015 & cppMask_un_5_);
	BIT_VEC cppVar_76016 = (0 << 5) | cppVar_76015;
	cppVar_76016 = (cppVar_76016 & cppMask_un_8_);
	bool cppVar_76018 = (cppVar_76016 == 176);
	BIT_VEC cppVar_76019 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_76020 = (cppVar_76019 << 3) | 0;
	cppVar_76020 = (cppVar_76020 & cppMask_un_5_);
	BIT_VEC cppVar_76021 = (0 << 5) | cppVar_76020;
	cppVar_76021 = (cppVar_76021 & cppMask_un_8_);
	bool cppVar_76023 = (cppVar_76021 == 184);
	BIT_VEC cppVar_76024 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_76025 = (cppVar_76024 << 3) | 0;
	cppVar_76025 = (cppVar_76025 & cppMask_un_5_);
	BIT_VEC cppVar_76026 = (0 << 5) | cppVar_76025;
	cppVar_76026 = (cppVar_76026 & cppMask_un_8_);
	bool cppVar_76028 = (cppVar_76026 == 208);
	BIT_VEC cppVar_76029 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_76030 = (cppVar_76029 << 3) | 0;
	cppVar_76030 = (cppVar_76030 & cppMask_un_5_);
	BIT_VEC cppVar_76031 = (0 << 5) | cppVar_76030;
	cppVar_76031 = (cppVar_76031 & cppMask_un_8_);
	bool cppVar_76033 = (cppVar_76031 == 224);
	BIT_VEC cppVar_76034 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_76035 = (cppVar_76034 << 3) | 0;
	cppVar_76035 = (cppVar_76035 & cppMask_un_5_);
	BIT_VEC cppVar_76036 = (0 << 5) | cppVar_76035;
	cppVar_76036 = (cppVar_76036 & cppMask_un_8_);
	bool cppVar_76038 = (cppVar_76036 == 240);
	BIT_VEC cppVar_76040 = (cppVar_76038) ? B : 0;
	BIT_VEC cppVar_76041 = (cppVar_76033) ? ACC : cppVar_76040;
	BIT_VEC cppVar_76042 = (cppVar_76028) ? PSW : cppVar_76041;
	BIT_VEC cppVar_76043 = (cppVar_76023) ? IP : cppVar_76042;
	BIT_VEC cppVar_76044 = (cppVar_76018) ? P3 : cppVar_76043;
	BIT_VEC cppVar_76045 = (cppVar_76013) ? IE : cppVar_76044;
	BIT_VEC cppVar_76046 = (cppVar_76008) ? P2 : cppVar_76045;
	BIT_VEC cppVar_76047 = (cppVar_76003) ? SBUF : cppVar_76046;
	BIT_VEC cppVar_76048 = (cppVar_75998) ? SCON : cppVar_76047;
	BIT_VEC cppVar_76049 = (cppVar_75993) ? P1 : cppVar_76048;
	BIT_VEC cppVar_76050 = (cppVar_75988) ? TH1 : cppVar_76049;
	BIT_VEC cppVar_76051 = (cppVar_75983) ? TL1 : cppVar_76050;
	BIT_VEC cppVar_76052 = (cppVar_75978) ? TH0 : cppVar_76051;
	BIT_VEC cppVar_76053 = (cppVar_75973) ? TL0 : cppVar_76052;
	BIT_VEC cppVar_76054 = (cppVar_75968) ? TMOD : cppVar_76053;
	BIT_VEC cppVar_76055 = (cppVar_75963) ? TCON : cppVar_76054;
	BIT_VEC cppVar_76056 = (cppVar_75958) ? PCON : cppVar_76055;
	BIT_VEC cppVar_76057 = (cppVar_75953) ? DPH : cppVar_76056;
	BIT_VEC cppVar_76058 = (cppVar_75948) ? DPL : cppVar_76057;
	BIT_VEC cppVar_76059 = (cppVar_75943) ? SP : cppVar_76058;
	BIT_VEC cppVar_76060 = (cppVar_75938) ? P0 : cppVar_76059;
	BIT_VEC cppVar_76061 = (cppVar_75929) ? cppVar_75933 : cppVar_76060;
	BIT_VEC cppVar_76062 = (cppVar_75921) ? cppVar_76061 : TH1;
	BIT_VEC cppVar_76063 = ROM.rd(PC);
	bool cppVar_76065 = (cppVar_76063 == 135);
	BIT_VEC cppVar_76067 = PC + 1;
	cppVar_76067 = (cppVar_76067 & cppMask_un_16_);
	BIT_VEC cppVar_76068 = ROM.rd(cppVar_76067);
	bool cppVar_76070 = (cppVar_76068 == 141);
	BIT_VEC cppVar_76072 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_76074 = (cppVar_76072 << 3) | 1;
	cppVar_76074 = (cppVar_76074 & cppMask_un_5_);
	BIT_VEC cppVar_76075 = (0 << 5) | cppVar_76074;
	cppVar_76075 = (cppVar_76075 & cppMask_un_8_);
	BIT_VEC cppVar_76076 = IRAM.rd(cppVar_76075);
	BIT_VEC cppVar_76077 = IRAM.rd(cppVar_76076);
	BIT_VEC cppVar_76078 = (cppVar_76070) ? cppVar_76077 : TH1;
	BIT_VEC cppVar_76079 = ROM.rd(PC);
	bool cppVar_76081 = (cppVar_76079 == 134);
	BIT_VEC cppVar_76083 = PC + 1;
	cppVar_76083 = (cppVar_76083 & cppMask_un_16_);
	BIT_VEC cppVar_76084 = ROM.rd(cppVar_76083);
	bool cppVar_76086 = (cppVar_76084 == 141);
	BIT_VEC cppVar_76088 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_76090 = (cppVar_76088 << 3) | 0;
	cppVar_76090 = (cppVar_76090 & cppMask_un_5_);
	BIT_VEC cppVar_76091 = (0 << 5) | cppVar_76090;
	cppVar_76091 = (cppVar_76091 & cppMask_un_8_);
	BIT_VEC cppVar_76092 = IRAM.rd(cppVar_76091);
	BIT_VEC cppVar_76093 = IRAM.rd(cppVar_76092);
	BIT_VEC cppVar_76094 = (cppVar_76086) ? cppVar_76093 : TH1;
	BIT_VEC cppVar_76095 = ROM.rd(PC);
	bool cppVar_76097 = (cppVar_76095 == 133);
	BIT_VEC cppVar_76099 = PC + 2;
	cppVar_76099 = (cppVar_76099 & cppMask_un_16_);
	BIT_VEC cppVar_76100 = ROM.rd(cppVar_76099);
	bool cppVar_76102 = (cppVar_76100 == 141);
	BIT_VEC cppVar_76104 = PC + 1;
	cppVar_76104 = (cppVar_76104 & cppMask_un_16_);
	BIT_VEC cppVar_76105 = ROM.rd(cppVar_76104);
	BIT_VEC cppVar_76106 = (cppVar_76105 >> 7) & cppMask_un_1_;
	bool cppVar_76108 = (cppVar_76106 == 0);
	BIT_VEC cppVar_76109 = PC + 1;
	cppVar_76109 = (cppVar_76109 & cppMask_un_16_);
	BIT_VEC cppVar_76110 = ROM.rd(cppVar_76109);
	BIT_VEC cppVar_76111 = IRAM.rd(cppVar_76110);
	BIT_VEC cppVar_76112 = PC + 1;
	cppVar_76112 = (cppVar_76112 & cppMask_un_16_);
	BIT_VEC cppVar_76113 = ROM.rd(cppVar_76112);
	bool cppVar_76115 = (cppVar_76113 == 128);
	BIT_VEC cppVar_76116 = PC + 1;
	cppVar_76116 = (cppVar_76116 & cppMask_un_16_);
	BIT_VEC cppVar_76117 = ROM.rd(cppVar_76116);
	bool cppVar_76119 = (cppVar_76117 == 129);
	BIT_VEC cppVar_76120 = PC + 1;
	cppVar_76120 = (cppVar_76120 & cppMask_un_16_);
	BIT_VEC cppVar_76121 = ROM.rd(cppVar_76120);
	bool cppVar_76123 = (cppVar_76121 == 130);
	BIT_VEC cppVar_76124 = PC + 1;
	cppVar_76124 = (cppVar_76124 & cppMask_un_16_);
	BIT_VEC cppVar_76125 = ROM.rd(cppVar_76124);
	bool cppVar_76127 = (cppVar_76125 == 131);
	BIT_VEC cppVar_76128 = PC + 1;
	cppVar_76128 = (cppVar_76128 & cppMask_un_16_);
	BIT_VEC cppVar_76129 = ROM.rd(cppVar_76128);
	bool cppVar_76131 = (cppVar_76129 == 135);
	BIT_VEC cppVar_76132 = PC + 1;
	cppVar_76132 = (cppVar_76132 & cppMask_un_16_);
	BIT_VEC cppVar_76133 = ROM.rd(cppVar_76132);
	bool cppVar_76135 = (cppVar_76133 == 136);
	BIT_VEC cppVar_76136 = PC + 1;
	cppVar_76136 = (cppVar_76136 & cppMask_un_16_);
	BIT_VEC cppVar_76137 = ROM.rd(cppVar_76136);
	bool cppVar_76139 = (cppVar_76137 == 137);
	BIT_VEC cppVar_76140 = PC + 1;
	cppVar_76140 = (cppVar_76140 & cppMask_un_16_);
	BIT_VEC cppVar_76141 = ROM.rd(cppVar_76140);
	bool cppVar_76143 = (cppVar_76141 == 138);
	BIT_VEC cppVar_76144 = PC + 1;
	cppVar_76144 = (cppVar_76144 & cppMask_un_16_);
	BIT_VEC cppVar_76145 = ROM.rd(cppVar_76144);
	bool cppVar_76147 = (cppVar_76145 == 140);
	BIT_VEC cppVar_76148 = PC + 1;
	cppVar_76148 = (cppVar_76148 & cppMask_un_16_);
	BIT_VEC cppVar_76149 = ROM.rd(cppVar_76148);
	bool cppVar_76151 = (cppVar_76149 == 139);
	BIT_VEC cppVar_76152 = PC + 1;
	cppVar_76152 = (cppVar_76152 & cppMask_un_16_);
	BIT_VEC cppVar_76153 = ROM.rd(cppVar_76152);
	bool cppVar_76155 = (cppVar_76153 == 141);
	BIT_VEC cppVar_76156 = PC + 1;
	cppVar_76156 = (cppVar_76156 & cppMask_un_16_);
	BIT_VEC cppVar_76157 = ROM.rd(cppVar_76156);
	bool cppVar_76159 = (cppVar_76157 == 144);
	BIT_VEC cppVar_76160 = PC + 1;
	cppVar_76160 = (cppVar_76160 & cppMask_un_16_);
	BIT_VEC cppVar_76161 = ROM.rd(cppVar_76160);
	bool cppVar_76163 = (cppVar_76161 == 152);
	BIT_VEC cppVar_76164 = PC + 1;
	cppVar_76164 = (cppVar_76164 & cppMask_un_16_);
	BIT_VEC cppVar_76165 = ROM.rd(cppVar_76164);
	bool cppVar_76167 = (cppVar_76165 == 153);
	BIT_VEC cppVar_76168 = PC + 1;
	cppVar_76168 = (cppVar_76168 & cppMask_un_16_);
	BIT_VEC cppVar_76169 = ROM.rd(cppVar_76168);
	bool cppVar_76171 = (cppVar_76169 == 160);
	BIT_VEC cppVar_76172 = PC + 1;
	cppVar_76172 = (cppVar_76172 & cppMask_un_16_);
	BIT_VEC cppVar_76173 = ROM.rd(cppVar_76172);
	bool cppVar_76175 = (cppVar_76173 == 168);
	BIT_VEC cppVar_76176 = PC + 1;
	cppVar_76176 = (cppVar_76176 & cppMask_un_16_);
	BIT_VEC cppVar_76177 = ROM.rd(cppVar_76176);
	bool cppVar_76179 = (cppVar_76177 == 176);
	BIT_VEC cppVar_76180 = PC + 1;
	cppVar_76180 = (cppVar_76180 & cppMask_un_16_);
	BIT_VEC cppVar_76181 = ROM.rd(cppVar_76180);
	bool cppVar_76183 = (cppVar_76181 == 184);
	BIT_VEC cppVar_76184 = PC + 1;
	cppVar_76184 = (cppVar_76184 & cppMask_un_16_);
	BIT_VEC cppVar_76185 = ROM.rd(cppVar_76184);
	bool cppVar_76187 = (cppVar_76185 == 208);
	BIT_VEC cppVar_76188 = PC + 1;
	cppVar_76188 = (cppVar_76188 & cppMask_un_16_);
	BIT_VEC cppVar_76189 = ROM.rd(cppVar_76188);
	bool cppVar_76191 = (cppVar_76189 == 224);
	BIT_VEC cppVar_76192 = PC + 1;
	cppVar_76192 = (cppVar_76192 & cppMask_un_16_);
	BIT_VEC cppVar_76193 = ROM.rd(cppVar_76192);
	bool cppVar_76195 = (cppVar_76193 == 240);
	BIT_VEC cppVar_76197 = (cppVar_76195) ? B : 0;
	BIT_VEC cppVar_76198 = (cppVar_76191) ? ACC : cppVar_76197;
	BIT_VEC cppVar_76199 = (cppVar_76187) ? PSW : cppVar_76198;
	BIT_VEC cppVar_76200 = (cppVar_76183) ? IP : cppVar_76199;
	BIT_VEC cppVar_76201 = (cppVar_76179) ? P3 : cppVar_76200;
	BIT_VEC cppVar_76202 = (cppVar_76175) ? IE : cppVar_76201;
	BIT_VEC cppVar_76203 = (cppVar_76171) ? P2 : cppVar_76202;
	BIT_VEC cppVar_76204 = (cppVar_76167) ? SBUF : cppVar_76203;
	BIT_VEC cppVar_76205 = (cppVar_76163) ? SCON : cppVar_76204;
	BIT_VEC cppVar_76206 = (cppVar_76159) ? P1 : cppVar_76205;
	BIT_VEC cppVar_76207 = (cppVar_76155) ? TH1 : cppVar_76206;
	BIT_VEC cppVar_76208 = (cppVar_76151) ? TL1 : cppVar_76207;
	BIT_VEC cppVar_76209 = (cppVar_76147) ? TH0 : cppVar_76208;
	BIT_VEC cppVar_76210 = (cppVar_76143) ? TL0 : cppVar_76209;
	BIT_VEC cppVar_76211 = (cppVar_76139) ? TMOD : cppVar_76210;
	BIT_VEC cppVar_76212 = (cppVar_76135) ? TCON : cppVar_76211;
	BIT_VEC cppVar_76213 = (cppVar_76131) ? PCON : cppVar_76212;
	BIT_VEC cppVar_76214 = (cppVar_76127) ? DPH : cppVar_76213;
	BIT_VEC cppVar_76215 = (cppVar_76123) ? DPL : cppVar_76214;
	BIT_VEC cppVar_76216 = (cppVar_76119) ? SP : cppVar_76215;
	BIT_VEC cppVar_76217 = (cppVar_76115) ? P0 : cppVar_76216;
	BIT_VEC cppVar_76218 = (cppVar_76108) ? cppVar_76111 : cppVar_76217;
	BIT_VEC cppVar_76219 = (cppVar_76102) ? cppVar_76218 : TH1;
	BIT_VEC cppVar_76220 = ROM.rd(PC);
	bool cppVar_76222 = (cppVar_76220 == 117);
	BIT_VEC cppVar_76224 = PC + 1;
	cppVar_76224 = (cppVar_76224 & cppMask_un_16_);
	BIT_VEC cppVar_76225 = ROM.rd(cppVar_76224);
	bool cppVar_76227 = (cppVar_76225 == 141);
	BIT_VEC cppVar_76229 = PC + 2;
	cppVar_76229 = (cppVar_76229 & cppMask_un_16_);
	BIT_VEC cppVar_76230 = ROM.rd(cppVar_76229);
	BIT_VEC cppVar_76231 = (cppVar_76227) ? cppVar_76230 : TH1;
	BIT_VEC cppVar_76232 = ROM.rd(PC);
	bool cppVar_76234 = (cppVar_76232 == 99);
	BIT_VEC cppVar_76236 = PC + 1;
	cppVar_76236 = (cppVar_76236 & cppMask_un_16_);
	BIT_VEC cppVar_76237 = ROM.rd(cppVar_76236);
	bool cppVar_76239 = (cppVar_76237 == 141);
	BIT_VEC cppVar_76240 = PC + 1;
	cppVar_76240 = (cppVar_76240 & cppMask_un_16_);
	BIT_VEC cppVar_76241 = ROM.rd(cppVar_76240);
	BIT_VEC cppVar_76242 = (cppVar_76241 >> 7) & cppMask_un_1_;
	bool cppVar_76244 = (cppVar_76242 == 0);
	BIT_VEC cppVar_76245 = PC + 1;
	cppVar_76245 = (cppVar_76245 & cppMask_un_16_);
	BIT_VEC cppVar_76246 = ROM.rd(cppVar_76245);
	BIT_VEC cppVar_76247 = IRAM.rd(cppVar_76246);
	BIT_VEC cppVar_76248 = PC + 1;
	cppVar_76248 = (cppVar_76248 & cppMask_un_16_);
	BIT_VEC cppVar_76249 = ROM.rd(cppVar_76248);
	bool cppVar_76251 = (cppVar_76249 == 128);
	BIT_VEC cppVar_76252 = PC + 1;
	cppVar_76252 = (cppVar_76252 & cppMask_un_16_);
	BIT_VEC cppVar_76253 = ROM.rd(cppVar_76252);
	bool cppVar_76255 = (cppVar_76253 == 129);
	BIT_VEC cppVar_76256 = PC + 1;
	cppVar_76256 = (cppVar_76256 & cppMask_un_16_);
	BIT_VEC cppVar_76257 = ROM.rd(cppVar_76256);
	bool cppVar_76259 = (cppVar_76257 == 130);
	BIT_VEC cppVar_76260 = PC + 1;
	cppVar_76260 = (cppVar_76260 & cppMask_un_16_);
	BIT_VEC cppVar_76261 = ROM.rd(cppVar_76260);
	bool cppVar_76263 = (cppVar_76261 == 131);
	BIT_VEC cppVar_76264 = PC + 1;
	cppVar_76264 = (cppVar_76264 & cppMask_un_16_);
	BIT_VEC cppVar_76265 = ROM.rd(cppVar_76264);
	bool cppVar_76267 = (cppVar_76265 == 135);
	BIT_VEC cppVar_76268 = PC + 1;
	cppVar_76268 = (cppVar_76268 & cppMask_un_16_);
	BIT_VEC cppVar_76269 = ROM.rd(cppVar_76268);
	bool cppVar_76271 = (cppVar_76269 == 136);
	BIT_VEC cppVar_76272 = PC + 1;
	cppVar_76272 = (cppVar_76272 & cppMask_un_16_);
	BIT_VEC cppVar_76273 = ROM.rd(cppVar_76272);
	bool cppVar_76275 = (cppVar_76273 == 137);
	BIT_VEC cppVar_76276 = PC + 1;
	cppVar_76276 = (cppVar_76276 & cppMask_un_16_);
	BIT_VEC cppVar_76277 = ROM.rd(cppVar_76276);
	bool cppVar_76279 = (cppVar_76277 == 138);
	BIT_VEC cppVar_76280 = PC + 1;
	cppVar_76280 = (cppVar_76280 & cppMask_un_16_);
	BIT_VEC cppVar_76281 = ROM.rd(cppVar_76280);
	bool cppVar_76283 = (cppVar_76281 == 140);
	BIT_VEC cppVar_76284 = PC + 1;
	cppVar_76284 = (cppVar_76284 & cppMask_un_16_);
	BIT_VEC cppVar_76285 = ROM.rd(cppVar_76284);
	bool cppVar_76287 = (cppVar_76285 == 139);
	BIT_VEC cppVar_76288 = PC + 1;
	cppVar_76288 = (cppVar_76288 & cppMask_un_16_);
	BIT_VEC cppVar_76289 = ROM.rd(cppVar_76288);
	bool cppVar_76291 = (cppVar_76289 == 141);
	BIT_VEC cppVar_76292 = PC + 1;
	cppVar_76292 = (cppVar_76292 & cppMask_un_16_);
	BIT_VEC cppVar_76293 = ROM.rd(cppVar_76292);
	bool cppVar_76295 = (cppVar_76293 == 144);
	BIT_VEC cppVar_76296 = PC + 1;
	cppVar_76296 = (cppVar_76296 & cppMask_un_16_);
	BIT_VEC cppVar_76297 = ROM.rd(cppVar_76296);
	bool cppVar_76299 = (cppVar_76297 == 152);
	BIT_VEC cppVar_76300 = PC + 1;
	cppVar_76300 = (cppVar_76300 & cppMask_un_16_);
	BIT_VEC cppVar_76301 = ROM.rd(cppVar_76300);
	bool cppVar_76303 = (cppVar_76301 == 153);
	BIT_VEC cppVar_76304 = PC + 1;
	cppVar_76304 = (cppVar_76304 & cppMask_un_16_);
	BIT_VEC cppVar_76305 = ROM.rd(cppVar_76304);
	bool cppVar_76307 = (cppVar_76305 == 160);
	BIT_VEC cppVar_76308 = PC + 1;
	cppVar_76308 = (cppVar_76308 & cppMask_un_16_);
	BIT_VEC cppVar_76309 = ROM.rd(cppVar_76308);
	bool cppVar_76311 = (cppVar_76309 == 168);
	BIT_VEC cppVar_76312 = PC + 1;
	cppVar_76312 = (cppVar_76312 & cppMask_un_16_);
	BIT_VEC cppVar_76313 = ROM.rd(cppVar_76312);
	bool cppVar_76315 = (cppVar_76313 == 176);
	BIT_VEC cppVar_76316 = PC + 1;
	cppVar_76316 = (cppVar_76316 & cppMask_un_16_);
	BIT_VEC cppVar_76317 = ROM.rd(cppVar_76316);
	bool cppVar_76319 = (cppVar_76317 == 184);
	BIT_VEC cppVar_76320 = PC + 1;
	cppVar_76320 = (cppVar_76320 & cppMask_un_16_);
	BIT_VEC cppVar_76321 = ROM.rd(cppVar_76320);
	bool cppVar_76323 = (cppVar_76321 == 208);
	BIT_VEC cppVar_76324 = PC + 1;
	cppVar_76324 = (cppVar_76324 & cppMask_un_16_);
	BIT_VEC cppVar_76325 = ROM.rd(cppVar_76324);
	bool cppVar_76327 = (cppVar_76325 == 224);
	BIT_VEC cppVar_76328 = PC + 1;
	cppVar_76328 = (cppVar_76328 & cppMask_un_16_);
	BIT_VEC cppVar_76329 = ROM.rd(cppVar_76328);
	bool cppVar_76331 = (cppVar_76329 == 240);
	BIT_VEC cppVar_76333 = (cppVar_76331) ? B : 0;
	BIT_VEC cppVar_76334 = (cppVar_76327) ? ACC : cppVar_76333;
	BIT_VEC cppVar_76335 = (cppVar_76323) ? PSW : cppVar_76334;
	BIT_VEC cppVar_76336 = (cppVar_76319) ? IP : cppVar_76335;
	BIT_VEC cppVar_76337 = (cppVar_76315) ? P3 : cppVar_76336;
	BIT_VEC cppVar_76338 = (cppVar_76311) ? IE : cppVar_76337;
	BIT_VEC cppVar_76339 = (cppVar_76307) ? P2 : cppVar_76338;
	BIT_VEC cppVar_76340 = (cppVar_76303) ? SBUF : cppVar_76339;
	BIT_VEC cppVar_76341 = (cppVar_76299) ? SCON : cppVar_76340;
	BIT_VEC cppVar_76342 = (cppVar_76295) ? P1 : cppVar_76341;
	BIT_VEC cppVar_76343 = (cppVar_76291) ? TH1 : cppVar_76342;
	BIT_VEC cppVar_76344 = (cppVar_76287) ? TL1 : cppVar_76343;
	BIT_VEC cppVar_76345 = (cppVar_76283) ? TH0 : cppVar_76344;
	BIT_VEC cppVar_76346 = (cppVar_76279) ? TL0 : cppVar_76345;
	BIT_VEC cppVar_76347 = (cppVar_76275) ? TMOD : cppVar_76346;
	BIT_VEC cppVar_76348 = (cppVar_76271) ? TCON : cppVar_76347;
	BIT_VEC cppVar_76349 = (cppVar_76267) ? PCON : cppVar_76348;
	BIT_VEC cppVar_76350 = (cppVar_76263) ? DPH : cppVar_76349;
	BIT_VEC cppVar_76351 = (cppVar_76259) ? DPL : cppVar_76350;
	BIT_VEC cppVar_76352 = (cppVar_76255) ? SP : cppVar_76351;
	BIT_VEC cppVar_76353 = (cppVar_76251) ? P0 : cppVar_76352;
	BIT_VEC cppVar_76354 = (cppVar_76244) ? cppVar_76247 : cppVar_76353;
	BIT_VEC cppVar_76356 = PC + 2;
	cppVar_76356 = (cppVar_76356 & cppMask_un_16_);
	BIT_VEC cppVar_76357 = ROM.rd(cppVar_76356);
	BIT_VEC cppVar_76358 = cppVar_76354 ^ cppVar_76357;
	BIT_VEC cppVar_76359 = (cppVar_76239) ? cppVar_76358 : TH1;
	BIT_VEC cppVar_76360 = ROM.rd(PC);
	bool cppVar_76362 = (cppVar_76360 == 98);
	BIT_VEC cppVar_76364 = PC + 1;
	cppVar_76364 = (cppVar_76364 & cppMask_un_16_);
	BIT_VEC cppVar_76365 = ROM.rd(cppVar_76364);
	bool cppVar_76367 = (cppVar_76365 == 141);
	BIT_VEC cppVar_76368 = PC + 1;
	cppVar_76368 = (cppVar_76368 & cppMask_un_16_);
	BIT_VEC cppVar_76369 = ROM.rd(cppVar_76368);
	BIT_VEC cppVar_76370 = (cppVar_76369 >> 7) & cppMask_un_1_;
	bool cppVar_76372 = (cppVar_76370 == 0);
	BIT_VEC cppVar_76373 = PC + 1;
	cppVar_76373 = (cppVar_76373 & cppMask_un_16_);
	BIT_VEC cppVar_76374 = ROM.rd(cppVar_76373);
	BIT_VEC cppVar_76375 = IRAM.rd(cppVar_76374);
	BIT_VEC cppVar_76376 = PC + 1;
	cppVar_76376 = (cppVar_76376 & cppMask_un_16_);
	BIT_VEC cppVar_76377 = ROM.rd(cppVar_76376);
	bool cppVar_76379 = (cppVar_76377 == 128);
	BIT_VEC cppVar_76380 = PC + 1;
	cppVar_76380 = (cppVar_76380 & cppMask_un_16_);
	BIT_VEC cppVar_76381 = ROM.rd(cppVar_76380);
	bool cppVar_76383 = (cppVar_76381 == 129);
	BIT_VEC cppVar_76384 = PC + 1;
	cppVar_76384 = (cppVar_76384 & cppMask_un_16_);
	BIT_VEC cppVar_76385 = ROM.rd(cppVar_76384);
	bool cppVar_76387 = (cppVar_76385 == 130);
	BIT_VEC cppVar_76388 = PC + 1;
	cppVar_76388 = (cppVar_76388 & cppMask_un_16_);
	BIT_VEC cppVar_76389 = ROM.rd(cppVar_76388);
	bool cppVar_76391 = (cppVar_76389 == 131);
	BIT_VEC cppVar_76392 = PC + 1;
	cppVar_76392 = (cppVar_76392 & cppMask_un_16_);
	BIT_VEC cppVar_76393 = ROM.rd(cppVar_76392);
	bool cppVar_76395 = (cppVar_76393 == 135);
	BIT_VEC cppVar_76396 = PC + 1;
	cppVar_76396 = (cppVar_76396 & cppMask_un_16_);
	BIT_VEC cppVar_76397 = ROM.rd(cppVar_76396);
	bool cppVar_76399 = (cppVar_76397 == 136);
	BIT_VEC cppVar_76400 = PC + 1;
	cppVar_76400 = (cppVar_76400 & cppMask_un_16_);
	BIT_VEC cppVar_76401 = ROM.rd(cppVar_76400);
	bool cppVar_76403 = (cppVar_76401 == 137);
	BIT_VEC cppVar_76404 = PC + 1;
	cppVar_76404 = (cppVar_76404 & cppMask_un_16_);
	BIT_VEC cppVar_76405 = ROM.rd(cppVar_76404);
	bool cppVar_76407 = (cppVar_76405 == 138);
	BIT_VEC cppVar_76408 = PC + 1;
	cppVar_76408 = (cppVar_76408 & cppMask_un_16_);
	BIT_VEC cppVar_76409 = ROM.rd(cppVar_76408);
	bool cppVar_76411 = (cppVar_76409 == 140);
	BIT_VEC cppVar_76412 = PC + 1;
	cppVar_76412 = (cppVar_76412 & cppMask_un_16_);
	BIT_VEC cppVar_76413 = ROM.rd(cppVar_76412);
	bool cppVar_76415 = (cppVar_76413 == 139);
	BIT_VEC cppVar_76416 = PC + 1;
	cppVar_76416 = (cppVar_76416 & cppMask_un_16_);
	BIT_VEC cppVar_76417 = ROM.rd(cppVar_76416);
	bool cppVar_76419 = (cppVar_76417 == 141);
	BIT_VEC cppVar_76420 = PC + 1;
	cppVar_76420 = (cppVar_76420 & cppMask_un_16_);
	BIT_VEC cppVar_76421 = ROM.rd(cppVar_76420);
	bool cppVar_76423 = (cppVar_76421 == 144);
	BIT_VEC cppVar_76424 = PC + 1;
	cppVar_76424 = (cppVar_76424 & cppMask_un_16_);
	BIT_VEC cppVar_76425 = ROM.rd(cppVar_76424);
	bool cppVar_76427 = (cppVar_76425 == 152);
	BIT_VEC cppVar_76428 = PC + 1;
	cppVar_76428 = (cppVar_76428 & cppMask_un_16_);
	BIT_VEC cppVar_76429 = ROM.rd(cppVar_76428);
	bool cppVar_76431 = (cppVar_76429 == 153);
	BIT_VEC cppVar_76432 = PC + 1;
	cppVar_76432 = (cppVar_76432 & cppMask_un_16_);
	BIT_VEC cppVar_76433 = ROM.rd(cppVar_76432);
	bool cppVar_76435 = (cppVar_76433 == 160);
	BIT_VEC cppVar_76436 = PC + 1;
	cppVar_76436 = (cppVar_76436 & cppMask_un_16_);
	BIT_VEC cppVar_76437 = ROM.rd(cppVar_76436);
	bool cppVar_76439 = (cppVar_76437 == 168);
	BIT_VEC cppVar_76440 = PC + 1;
	cppVar_76440 = (cppVar_76440 & cppMask_un_16_);
	BIT_VEC cppVar_76441 = ROM.rd(cppVar_76440);
	bool cppVar_76443 = (cppVar_76441 == 176);
	BIT_VEC cppVar_76444 = PC + 1;
	cppVar_76444 = (cppVar_76444 & cppMask_un_16_);
	BIT_VEC cppVar_76445 = ROM.rd(cppVar_76444);
	bool cppVar_76447 = (cppVar_76445 == 184);
	BIT_VEC cppVar_76448 = PC + 1;
	cppVar_76448 = (cppVar_76448 & cppMask_un_16_);
	BIT_VEC cppVar_76449 = ROM.rd(cppVar_76448);
	bool cppVar_76451 = (cppVar_76449 == 208);
	BIT_VEC cppVar_76452 = PC + 1;
	cppVar_76452 = (cppVar_76452 & cppMask_un_16_);
	BIT_VEC cppVar_76453 = ROM.rd(cppVar_76452);
	bool cppVar_76455 = (cppVar_76453 == 224);
	BIT_VEC cppVar_76456 = PC + 1;
	cppVar_76456 = (cppVar_76456 & cppMask_un_16_);
	BIT_VEC cppVar_76457 = ROM.rd(cppVar_76456);
	bool cppVar_76459 = (cppVar_76457 == 240);
	BIT_VEC cppVar_76461 = (cppVar_76459) ? B : 0;
	BIT_VEC cppVar_76462 = (cppVar_76455) ? ACC : cppVar_76461;
	BIT_VEC cppVar_76463 = (cppVar_76451) ? PSW : cppVar_76462;
	BIT_VEC cppVar_76464 = (cppVar_76447) ? IP : cppVar_76463;
	BIT_VEC cppVar_76465 = (cppVar_76443) ? P3 : cppVar_76464;
	BIT_VEC cppVar_76466 = (cppVar_76439) ? IE : cppVar_76465;
	BIT_VEC cppVar_76467 = (cppVar_76435) ? P2 : cppVar_76466;
	BIT_VEC cppVar_76468 = (cppVar_76431) ? SBUF : cppVar_76467;
	BIT_VEC cppVar_76469 = (cppVar_76427) ? SCON : cppVar_76468;
	BIT_VEC cppVar_76470 = (cppVar_76423) ? P1 : cppVar_76469;
	BIT_VEC cppVar_76471 = (cppVar_76419) ? TH1 : cppVar_76470;
	BIT_VEC cppVar_76472 = (cppVar_76415) ? TL1 : cppVar_76471;
	BIT_VEC cppVar_76473 = (cppVar_76411) ? TH0 : cppVar_76472;
	BIT_VEC cppVar_76474 = (cppVar_76407) ? TL0 : cppVar_76473;
	BIT_VEC cppVar_76475 = (cppVar_76403) ? TMOD : cppVar_76474;
	BIT_VEC cppVar_76476 = (cppVar_76399) ? TCON : cppVar_76475;
	BIT_VEC cppVar_76477 = (cppVar_76395) ? PCON : cppVar_76476;
	BIT_VEC cppVar_76478 = (cppVar_76391) ? DPH : cppVar_76477;
	BIT_VEC cppVar_76479 = (cppVar_76387) ? DPL : cppVar_76478;
	BIT_VEC cppVar_76480 = (cppVar_76383) ? SP : cppVar_76479;
	BIT_VEC cppVar_76481 = (cppVar_76379) ? P0 : cppVar_76480;
	BIT_VEC cppVar_76482 = (cppVar_76372) ? cppVar_76375 : cppVar_76481;
	BIT_VEC cppVar_76483 = cppVar_76482 ^ ACC;
	BIT_VEC cppVar_76484 = (cppVar_76367) ? cppVar_76483 : TH1;
	BIT_VEC cppVar_76485 = ROM.rd(PC);
	bool cppVar_76487 = (cppVar_76485 == 83);
	BIT_VEC cppVar_76489 = PC + 1;
	cppVar_76489 = (cppVar_76489 & cppMask_un_16_);
	BIT_VEC cppVar_76490 = ROM.rd(cppVar_76489);
	bool cppVar_76492 = (cppVar_76490 == 141);
	BIT_VEC cppVar_76493 = PC + 1;
	cppVar_76493 = (cppVar_76493 & cppMask_un_16_);
	BIT_VEC cppVar_76494 = ROM.rd(cppVar_76493);
	BIT_VEC cppVar_76495 = (cppVar_76494 >> 7) & cppMask_un_1_;
	bool cppVar_76497 = (cppVar_76495 == 0);
	BIT_VEC cppVar_76498 = PC + 1;
	cppVar_76498 = (cppVar_76498 & cppMask_un_16_);
	BIT_VEC cppVar_76499 = ROM.rd(cppVar_76498);
	BIT_VEC cppVar_76500 = IRAM.rd(cppVar_76499);
	BIT_VEC cppVar_76501 = PC + 1;
	cppVar_76501 = (cppVar_76501 & cppMask_un_16_);
	BIT_VEC cppVar_76502 = ROM.rd(cppVar_76501);
	bool cppVar_76504 = (cppVar_76502 == 128);
	BIT_VEC cppVar_76505 = PC + 1;
	cppVar_76505 = (cppVar_76505 & cppMask_un_16_);
	BIT_VEC cppVar_76506 = ROM.rd(cppVar_76505);
	bool cppVar_76508 = (cppVar_76506 == 129);
	BIT_VEC cppVar_76509 = PC + 1;
	cppVar_76509 = (cppVar_76509 & cppMask_un_16_);
	BIT_VEC cppVar_76510 = ROM.rd(cppVar_76509);
	bool cppVar_76512 = (cppVar_76510 == 130);
	BIT_VEC cppVar_76513 = PC + 1;
	cppVar_76513 = (cppVar_76513 & cppMask_un_16_);
	BIT_VEC cppVar_76514 = ROM.rd(cppVar_76513);
	bool cppVar_76516 = (cppVar_76514 == 131);
	BIT_VEC cppVar_76517 = PC + 1;
	cppVar_76517 = (cppVar_76517 & cppMask_un_16_);
	BIT_VEC cppVar_76518 = ROM.rd(cppVar_76517);
	bool cppVar_76520 = (cppVar_76518 == 135);
	BIT_VEC cppVar_76521 = PC + 1;
	cppVar_76521 = (cppVar_76521 & cppMask_un_16_);
	BIT_VEC cppVar_76522 = ROM.rd(cppVar_76521);
	bool cppVar_76524 = (cppVar_76522 == 136);
	BIT_VEC cppVar_76525 = PC + 1;
	cppVar_76525 = (cppVar_76525 & cppMask_un_16_);
	BIT_VEC cppVar_76526 = ROM.rd(cppVar_76525);
	bool cppVar_76528 = (cppVar_76526 == 137);
	BIT_VEC cppVar_76529 = PC + 1;
	cppVar_76529 = (cppVar_76529 & cppMask_un_16_);
	BIT_VEC cppVar_76530 = ROM.rd(cppVar_76529);
	bool cppVar_76532 = (cppVar_76530 == 138);
	BIT_VEC cppVar_76533 = PC + 1;
	cppVar_76533 = (cppVar_76533 & cppMask_un_16_);
	BIT_VEC cppVar_76534 = ROM.rd(cppVar_76533);
	bool cppVar_76536 = (cppVar_76534 == 140);
	BIT_VEC cppVar_76537 = PC + 1;
	cppVar_76537 = (cppVar_76537 & cppMask_un_16_);
	BIT_VEC cppVar_76538 = ROM.rd(cppVar_76537);
	bool cppVar_76540 = (cppVar_76538 == 139);
	BIT_VEC cppVar_76541 = PC + 1;
	cppVar_76541 = (cppVar_76541 & cppMask_un_16_);
	BIT_VEC cppVar_76542 = ROM.rd(cppVar_76541);
	bool cppVar_76544 = (cppVar_76542 == 141);
	BIT_VEC cppVar_76545 = PC + 1;
	cppVar_76545 = (cppVar_76545 & cppMask_un_16_);
	BIT_VEC cppVar_76546 = ROM.rd(cppVar_76545);
	bool cppVar_76548 = (cppVar_76546 == 144);
	BIT_VEC cppVar_76549 = PC + 1;
	cppVar_76549 = (cppVar_76549 & cppMask_un_16_);
	BIT_VEC cppVar_76550 = ROM.rd(cppVar_76549);
	bool cppVar_76552 = (cppVar_76550 == 152);
	BIT_VEC cppVar_76553 = PC + 1;
	cppVar_76553 = (cppVar_76553 & cppMask_un_16_);
	BIT_VEC cppVar_76554 = ROM.rd(cppVar_76553);
	bool cppVar_76556 = (cppVar_76554 == 153);
	BIT_VEC cppVar_76557 = PC + 1;
	cppVar_76557 = (cppVar_76557 & cppMask_un_16_);
	BIT_VEC cppVar_76558 = ROM.rd(cppVar_76557);
	bool cppVar_76560 = (cppVar_76558 == 160);
	BIT_VEC cppVar_76561 = PC + 1;
	cppVar_76561 = (cppVar_76561 & cppMask_un_16_);
	BIT_VEC cppVar_76562 = ROM.rd(cppVar_76561);
	bool cppVar_76564 = (cppVar_76562 == 168);
	BIT_VEC cppVar_76565 = PC + 1;
	cppVar_76565 = (cppVar_76565 & cppMask_un_16_);
	BIT_VEC cppVar_76566 = ROM.rd(cppVar_76565);
	bool cppVar_76568 = (cppVar_76566 == 176);
	BIT_VEC cppVar_76569 = PC + 1;
	cppVar_76569 = (cppVar_76569 & cppMask_un_16_);
	BIT_VEC cppVar_76570 = ROM.rd(cppVar_76569);
	bool cppVar_76572 = (cppVar_76570 == 184);
	BIT_VEC cppVar_76573 = PC + 1;
	cppVar_76573 = (cppVar_76573 & cppMask_un_16_);
	BIT_VEC cppVar_76574 = ROM.rd(cppVar_76573);
	bool cppVar_76576 = (cppVar_76574 == 208);
	BIT_VEC cppVar_76577 = PC + 1;
	cppVar_76577 = (cppVar_76577 & cppMask_un_16_);
	BIT_VEC cppVar_76578 = ROM.rd(cppVar_76577);
	bool cppVar_76580 = (cppVar_76578 == 224);
	BIT_VEC cppVar_76581 = PC + 1;
	cppVar_76581 = (cppVar_76581 & cppMask_un_16_);
	BIT_VEC cppVar_76582 = ROM.rd(cppVar_76581);
	bool cppVar_76584 = (cppVar_76582 == 240);
	BIT_VEC cppVar_76586 = (cppVar_76584) ? B : 0;
	BIT_VEC cppVar_76587 = (cppVar_76580) ? ACC : cppVar_76586;
	BIT_VEC cppVar_76588 = (cppVar_76576) ? PSW : cppVar_76587;
	BIT_VEC cppVar_76589 = (cppVar_76572) ? IP : cppVar_76588;
	BIT_VEC cppVar_76590 = (cppVar_76568) ? P3 : cppVar_76589;
	BIT_VEC cppVar_76591 = (cppVar_76564) ? IE : cppVar_76590;
	BIT_VEC cppVar_76592 = (cppVar_76560) ? P2 : cppVar_76591;
	BIT_VEC cppVar_76593 = (cppVar_76556) ? SBUF : cppVar_76592;
	BIT_VEC cppVar_76594 = (cppVar_76552) ? SCON : cppVar_76593;
	BIT_VEC cppVar_76595 = (cppVar_76548) ? P1 : cppVar_76594;
	BIT_VEC cppVar_76596 = (cppVar_76544) ? TH1 : cppVar_76595;
	BIT_VEC cppVar_76597 = (cppVar_76540) ? TL1 : cppVar_76596;
	BIT_VEC cppVar_76598 = (cppVar_76536) ? TH0 : cppVar_76597;
	BIT_VEC cppVar_76599 = (cppVar_76532) ? TL0 : cppVar_76598;
	BIT_VEC cppVar_76600 = (cppVar_76528) ? TMOD : cppVar_76599;
	BIT_VEC cppVar_76601 = (cppVar_76524) ? TCON : cppVar_76600;
	BIT_VEC cppVar_76602 = (cppVar_76520) ? PCON : cppVar_76601;
	BIT_VEC cppVar_76603 = (cppVar_76516) ? DPH : cppVar_76602;
	BIT_VEC cppVar_76604 = (cppVar_76512) ? DPL : cppVar_76603;
	BIT_VEC cppVar_76605 = (cppVar_76508) ? SP : cppVar_76604;
	BIT_VEC cppVar_76606 = (cppVar_76504) ? P0 : cppVar_76605;
	BIT_VEC cppVar_76607 = (cppVar_76497) ? cppVar_76500 : cppVar_76606;
	BIT_VEC cppVar_76609 = PC + 2;
	cppVar_76609 = (cppVar_76609 & cppMask_un_16_);
	BIT_VEC cppVar_76610 = ROM.rd(cppVar_76609);
	BIT_VEC cppVar_76611 = cppVar_76607 & cppVar_76610;
	BIT_VEC cppVar_76612 = (cppVar_76492) ? cppVar_76611 : TH1;
	BIT_VEC cppVar_76613 = ROM.rd(PC);
	bool cppVar_76615 = (cppVar_76613 == 82);
	BIT_VEC cppVar_76617 = PC + 1;
	cppVar_76617 = (cppVar_76617 & cppMask_un_16_);
	BIT_VEC cppVar_76618 = ROM.rd(cppVar_76617);
	bool cppVar_76620 = (cppVar_76618 == 141);
	BIT_VEC cppVar_76621 = PC + 1;
	cppVar_76621 = (cppVar_76621 & cppMask_un_16_);
	BIT_VEC cppVar_76622 = ROM.rd(cppVar_76621);
	BIT_VEC cppVar_76623 = (cppVar_76622 >> 7) & cppMask_un_1_;
	bool cppVar_76625 = (cppVar_76623 == 0);
	BIT_VEC cppVar_76626 = PC + 1;
	cppVar_76626 = (cppVar_76626 & cppMask_un_16_);
	BIT_VEC cppVar_76627 = ROM.rd(cppVar_76626);
	BIT_VEC cppVar_76628 = IRAM.rd(cppVar_76627);
	BIT_VEC cppVar_76629 = PC + 1;
	cppVar_76629 = (cppVar_76629 & cppMask_un_16_);
	BIT_VEC cppVar_76630 = ROM.rd(cppVar_76629);
	bool cppVar_76632 = (cppVar_76630 == 128);
	BIT_VEC cppVar_76633 = PC + 1;
	cppVar_76633 = (cppVar_76633 & cppMask_un_16_);
	BIT_VEC cppVar_76634 = ROM.rd(cppVar_76633);
	bool cppVar_76636 = (cppVar_76634 == 129);
	BIT_VEC cppVar_76637 = PC + 1;
	cppVar_76637 = (cppVar_76637 & cppMask_un_16_);
	BIT_VEC cppVar_76638 = ROM.rd(cppVar_76637);
	bool cppVar_76640 = (cppVar_76638 == 130);
	BIT_VEC cppVar_76641 = PC + 1;
	cppVar_76641 = (cppVar_76641 & cppMask_un_16_);
	BIT_VEC cppVar_76642 = ROM.rd(cppVar_76641);
	bool cppVar_76644 = (cppVar_76642 == 131);
	BIT_VEC cppVar_76645 = PC + 1;
	cppVar_76645 = (cppVar_76645 & cppMask_un_16_);
	BIT_VEC cppVar_76646 = ROM.rd(cppVar_76645);
	bool cppVar_76648 = (cppVar_76646 == 135);
	BIT_VEC cppVar_76649 = PC + 1;
	cppVar_76649 = (cppVar_76649 & cppMask_un_16_);
	BIT_VEC cppVar_76650 = ROM.rd(cppVar_76649);
	bool cppVar_76652 = (cppVar_76650 == 136);
	BIT_VEC cppVar_76653 = PC + 1;
	cppVar_76653 = (cppVar_76653 & cppMask_un_16_);
	BIT_VEC cppVar_76654 = ROM.rd(cppVar_76653);
	bool cppVar_76656 = (cppVar_76654 == 137);
	BIT_VEC cppVar_76657 = PC + 1;
	cppVar_76657 = (cppVar_76657 & cppMask_un_16_);
	BIT_VEC cppVar_76658 = ROM.rd(cppVar_76657);
	bool cppVar_76660 = (cppVar_76658 == 138);
	BIT_VEC cppVar_76661 = PC + 1;
	cppVar_76661 = (cppVar_76661 & cppMask_un_16_);
	BIT_VEC cppVar_76662 = ROM.rd(cppVar_76661);
	bool cppVar_76664 = (cppVar_76662 == 140);
	BIT_VEC cppVar_76665 = PC + 1;
	cppVar_76665 = (cppVar_76665 & cppMask_un_16_);
	BIT_VEC cppVar_76666 = ROM.rd(cppVar_76665);
	bool cppVar_76668 = (cppVar_76666 == 139);
	BIT_VEC cppVar_76669 = PC + 1;
	cppVar_76669 = (cppVar_76669 & cppMask_un_16_);
	BIT_VEC cppVar_76670 = ROM.rd(cppVar_76669);
	bool cppVar_76672 = (cppVar_76670 == 141);
	BIT_VEC cppVar_76673 = PC + 1;
	cppVar_76673 = (cppVar_76673 & cppMask_un_16_);
	BIT_VEC cppVar_76674 = ROM.rd(cppVar_76673);
	bool cppVar_76676 = (cppVar_76674 == 144);
	BIT_VEC cppVar_76677 = PC + 1;
	cppVar_76677 = (cppVar_76677 & cppMask_un_16_);
	BIT_VEC cppVar_76678 = ROM.rd(cppVar_76677);
	bool cppVar_76680 = (cppVar_76678 == 152);
	BIT_VEC cppVar_76681 = PC + 1;
	cppVar_76681 = (cppVar_76681 & cppMask_un_16_);
	BIT_VEC cppVar_76682 = ROM.rd(cppVar_76681);
	bool cppVar_76684 = (cppVar_76682 == 153);
	BIT_VEC cppVar_76685 = PC + 1;
	cppVar_76685 = (cppVar_76685 & cppMask_un_16_);
	BIT_VEC cppVar_76686 = ROM.rd(cppVar_76685);
	bool cppVar_76688 = (cppVar_76686 == 160);
	BIT_VEC cppVar_76689 = PC + 1;
	cppVar_76689 = (cppVar_76689 & cppMask_un_16_);
	BIT_VEC cppVar_76690 = ROM.rd(cppVar_76689);
	bool cppVar_76692 = (cppVar_76690 == 168);
	BIT_VEC cppVar_76693 = PC + 1;
	cppVar_76693 = (cppVar_76693 & cppMask_un_16_);
	BIT_VEC cppVar_76694 = ROM.rd(cppVar_76693);
	bool cppVar_76696 = (cppVar_76694 == 176);
	BIT_VEC cppVar_76697 = PC + 1;
	cppVar_76697 = (cppVar_76697 & cppMask_un_16_);
	BIT_VEC cppVar_76698 = ROM.rd(cppVar_76697);
	bool cppVar_76700 = (cppVar_76698 == 184);
	BIT_VEC cppVar_76701 = PC + 1;
	cppVar_76701 = (cppVar_76701 & cppMask_un_16_);
	BIT_VEC cppVar_76702 = ROM.rd(cppVar_76701);
	bool cppVar_76704 = (cppVar_76702 == 208);
	BIT_VEC cppVar_76705 = PC + 1;
	cppVar_76705 = (cppVar_76705 & cppMask_un_16_);
	BIT_VEC cppVar_76706 = ROM.rd(cppVar_76705);
	bool cppVar_76708 = (cppVar_76706 == 224);
	BIT_VEC cppVar_76709 = PC + 1;
	cppVar_76709 = (cppVar_76709 & cppMask_un_16_);
	BIT_VEC cppVar_76710 = ROM.rd(cppVar_76709);
	bool cppVar_76712 = (cppVar_76710 == 240);
	BIT_VEC cppVar_76714 = (cppVar_76712) ? B : 0;
	BIT_VEC cppVar_76715 = (cppVar_76708) ? ACC : cppVar_76714;
	BIT_VEC cppVar_76716 = (cppVar_76704) ? PSW : cppVar_76715;
	BIT_VEC cppVar_76717 = (cppVar_76700) ? IP : cppVar_76716;
	BIT_VEC cppVar_76718 = (cppVar_76696) ? P3 : cppVar_76717;
	BIT_VEC cppVar_76719 = (cppVar_76692) ? IE : cppVar_76718;
	BIT_VEC cppVar_76720 = (cppVar_76688) ? P2 : cppVar_76719;
	BIT_VEC cppVar_76721 = (cppVar_76684) ? SBUF : cppVar_76720;
	BIT_VEC cppVar_76722 = (cppVar_76680) ? SCON : cppVar_76721;
	BIT_VEC cppVar_76723 = (cppVar_76676) ? P1 : cppVar_76722;
	BIT_VEC cppVar_76724 = (cppVar_76672) ? TH1 : cppVar_76723;
	BIT_VEC cppVar_76725 = (cppVar_76668) ? TL1 : cppVar_76724;
	BIT_VEC cppVar_76726 = (cppVar_76664) ? TH0 : cppVar_76725;
	BIT_VEC cppVar_76727 = (cppVar_76660) ? TL0 : cppVar_76726;
	BIT_VEC cppVar_76728 = (cppVar_76656) ? TMOD : cppVar_76727;
	BIT_VEC cppVar_76729 = (cppVar_76652) ? TCON : cppVar_76728;
	BIT_VEC cppVar_76730 = (cppVar_76648) ? PCON : cppVar_76729;
	BIT_VEC cppVar_76731 = (cppVar_76644) ? DPH : cppVar_76730;
	BIT_VEC cppVar_76732 = (cppVar_76640) ? DPL : cppVar_76731;
	BIT_VEC cppVar_76733 = (cppVar_76636) ? SP : cppVar_76732;
	BIT_VEC cppVar_76734 = (cppVar_76632) ? P0 : cppVar_76733;
	BIT_VEC cppVar_76735 = (cppVar_76625) ? cppVar_76628 : cppVar_76734;
	BIT_VEC cppVar_76736 = cppVar_76735 & ACC;
	BIT_VEC cppVar_76737 = (cppVar_76620) ? cppVar_76736 : TH1;
	BIT_VEC cppVar_76738 = ROM.rd(PC);
	bool cppVar_76740 = (cppVar_76738 == 67);
	BIT_VEC cppVar_76742 = PC + 1;
	cppVar_76742 = (cppVar_76742 & cppMask_un_16_);
	BIT_VEC cppVar_76743 = ROM.rd(cppVar_76742);
	bool cppVar_76745 = (cppVar_76743 == 141);
	BIT_VEC cppVar_76746 = PC + 1;
	cppVar_76746 = (cppVar_76746 & cppMask_un_16_);
	BIT_VEC cppVar_76747 = ROM.rd(cppVar_76746);
	BIT_VEC cppVar_76748 = (cppVar_76747 >> 7) & cppMask_un_1_;
	bool cppVar_76750 = (cppVar_76748 == 0);
	BIT_VEC cppVar_76751 = PC + 1;
	cppVar_76751 = (cppVar_76751 & cppMask_un_16_);
	BIT_VEC cppVar_76752 = ROM.rd(cppVar_76751);
	BIT_VEC cppVar_76753 = IRAM.rd(cppVar_76752);
	BIT_VEC cppVar_76754 = PC + 1;
	cppVar_76754 = (cppVar_76754 & cppMask_un_16_);
	BIT_VEC cppVar_76755 = ROM.rd(cppVar_76754);
	bool cppVar_76757 = (cppVar_76755 == 128);
	BIT_VEC cppVar_76758 = PC + 1;
	cppVar_76758 = (cppVar_76758 & cppMask_un_16_);
	BIT_VEC cppVar_76759 = ROM.rd(cppVar_76758);
	bool cppVar_76761 = (cppVar_76759 == 129);
	BIT_VEC cppVar_76762 = PC + 1;
	cppVar_76762 = (cppVar_76762 & cppMask_un_16_);
	BIT_VEC cppVar_76763 = ROM.rd(cppVar_76762);
	bool cppVar_76765 = (cppVar_76763 == 130);
	BIT_VEC cppVar_76766 = PC + 1;
	cppVar_76766 = (cppVar_76766 & cppMask_un_16_);
	BIT_VEC cppVar_76767 = ROM.rd(cppVar_76766);
	bool cppVar_76769 = (cppVar_76767 == 131);
	BIT_VEC cppVar_76770 = PC + 1;
	cppVar_76770 = (cppVar_76770 & cppMask_un_16_);
	BIT_VEC cppVar_76771 = ROM.rd(cppVar_76770);
	bool cppVar_76773 = (cppVar_76771 == 135);
	BIT_VEC cppVar_76774 = PC + 1;
	cppVar_76774 = (cppVar_76774 & cppMask_un_16_);
	BIT_VEC cppVar_76775 = ROM.rd(cppVar_76774);
	bool cppVar_76777 = (cppVar_76775 == 136);
	BIT_VEC cppVar_76778 = PC + 1;
	cppVar_76778 = (cppVar_76778 & cppMask_un_16_);
	BIT_VEC cppVar_76779 = ROM.rd(cppVar_76778);
	bool cppVar_76781 = (cppVar_76779 == 137);
	BIT_VEC cppVar_76782 = PC + 1;
	cppVar_76782 = (cppVar_76782 & cppMask_un_16_);
	BIT_VEC cppVar_76783 = ROM.rd(cppVar_76782);
	bool cppVar_76785 = (cppVar_76783 == 138);
	BIT_VEC cppVar_76786 = PC + 1;
	cppVar_76786 = (cppVar_76786 & cppMask_un_16_);
	BIT_VEC cppVar_76787 = ROM.rd(cppVar_76786);
	bool cppVar_76789 = (cppVar_76787 == 140);
	BIT_VEC cppVar_76790 = PC + 1;
	cppVar_76790 = (cppVar_76790 & cppMask_un_16_);
	BIT_VEC cppVar_76791 = ROM.rd(cppVar_76790);
	bool cppVar_76793 = (cppVar_76791 == 139);
	BIT_VEC cppVar_76794 = PC + 1;
	cppVar_76794 = (cppVar_76794 & cppMask_un_16_);
	BIT_VEC cppVar_76795 = ROM.rd(cppVar_76794);
	bool cppVar_76797 = (cppVar_76795 == 141);
	BIT_VEC cppVar_76798 = PC + 1;
	cppVar_76798 = (cppVar_76798 & cppMask_un_16_);
	BIT_VEC cppVar_76799 = ROM.rd(cppVar_76798);
	bool cppVar_76801 = (cppVar_76799 == 144);
	BIT_VEC cppVar_76802 = PC + 1;
	cppVar_76802 = (cppVar_76802 & cppMask_un_16_);
	BIT_VEC cppVar_76803 = ROM.rd(cppVar_76802);
	bool cppVar_76805 = (cppVar_76803 == 152);
	BIT_VEC cppVar_76806 = PC + 1;
	cppVar_76806 = (cppVar_76806 & cppMask_un_16_);
	BIT_VEC cppVar_76807 = ROM.rd(cppVar_76806);
	bool cppVar_76809 = (cppVar_76807 == 153);
	BIT_VEC cppVar_76810 = PC + 1;
	cppVar_76810 = (cppVar_76810 & cppMask_un_16_);
	BIT_VEC cppVar_76811 = ROM.rd(cppVar_76810);
	bool cppVar_76813 = (cppVar_76811 == 160);
	BIT_VEC cppVar_76814 = PC + 1;
	cppVar_76814 = (cppVar_76814 & cppMask_un_16_);
	BIT_VEC cppVar_76815 = ROM.rd(cppVar_76814);
	bool cppVar_76817 = (cppVar_76815 == 168);
	BIT_VEC cppVar_76818 = PC + 1;
	cppVar_76818 = (cppVar_76818 & cppMask_un_16_);
	BIT_VEC cppVar_76819 = ROM.rd(cppVar_76818);
	bool cppVar_76821 = (cppVar_76819 == 176);
	BIT_VEC cppVar_76822 = PC + 1;
	cppVar_76822 = (cppVar_76822 & cppMask_un_16_);
	BIT_VEC cppVar_76823 = ROM.rd(cppVar_76822);
	bool cppVar_76825 = (cppVar_76823 == 184);
	BIT_VEC cppVar_76826 = PC + 1;
	cppVar_76826 = (cppVar_76826 & cppMask_un_16_);
	BIT_VEC cppVar_76827 = ROM.rd(cppVar_76826);
	bool cppVar_76829 = (cppVar_76827 == 208);
	BIT_VEC cppVar_76830 = PC + 1;
	cppVar_76830 = (cppVar_76830 & cppMask_un_16_);
	BIT_VEC cppVar_76831 = ROM.rd(cppVar_76830);
	bool cppVar_76833 = (cppVar_76831 == 224);
	BIT_VEC cppVar_76834 = PC + 1;
	cppVar_76834 = (cppVar_76834 & cppMask_un_16_);
	BIT_VEC cppVar_76835 = ROM.rd(cppVar_76834);
	bool cppVar_76837 = (cppVar_76835 == 240);
	BIT_VEC cppVar_76839 = (cppVar_76837) ? B : 0;
	BIT_VEC cppVar_76840 = (cppVar_76833) ? ACC : cppVar_76839;
	BIT_VEC cppVar_76841 = (cppVar_76829) ? PSW : cppVar_76840;
	BIT_VEC cppVar_76842 = (cppVar_76825) ? IP : cppVar_76841;
	BIT_VEC cppVar_76843 = (cppVar_76821) ? P3 : cppVar_76842;
	BIT_VEC cppVar_76844 = (cppVar_76817) ? IE : cppVar_76843;
	BIT_VEC cppVar_76845 = (cppVar_76813) ? P2 : cppVar_76844;
	BIT_VEC cppVar_76846 = (cppVar_76809) ? SBUF : cppVar_76845;
	BIT_VEC cppVar_76847 = (cppVar_76805) ? SCON : cppVar_76846;
	BIT_VEC cppVar_76848 = (cppVar_76801) ? P1 : cppVar_76847;
	BIT_VEC cppVar_76849 = (cppVar_76797) ? TH1 : cppVar_76848;
	BIT_VEC cppVar_76850 = (cppVar_76793) ? TL1 : cppVar_76849;
	BIT_VEC cppVar_76851 = (cppVar_76789) ? TH0 : cppVar_76850;
	BIT_VEC cppVar_76852 = (cppVar_76785) ? TL0 : cppVar_76851;
	BIT_VEC cppVar_76853 = (cppVar_76781) ? TMOD : cppVar_76852;
	BIT_VEC cppVar_76854 = (cppVar_76777) ? TCON : cppVar_76853;
	BIT_VEC cppVar_76855 = (cppVar_76773) ? PCON : cppVar_76854;
	BIT_VEC cppVar_76856 = (cppVar_76769) ? DPH : cppVar_76855;
	BIT_VEC cppVar_76857 = (cppVar_76765) ? DPL : cppVar_76856;
	BIT_VEC cppVar_76858 = (cppVar_76761) ? SP : cppVar_76857;
	BIT_VEC cppVar_76859 = (cppVar_76757) ? P0 : cppVar_76858;
	BIT_VEC cppVar_76860 = (cppVar_76750) ? cppVar_76753 : cppVar_76859;
	BIT_VEC cppVar_76862 = PC + 2;
	cppVar_76862 = (cppVar_76862 & cppMask_un_16_);
	BIT_VEC cppVar_76863 = ROM.rd(cppVar_76862);
	BIT_VEC cppVar_76864 = cppVar_76860 | cppVar_76863;
	BIT_VEC cppVar_76865 = (cppVar_76745) ? cppVar_76864 : TH1;
	BIT_VEC cppVar_76866 = ROM.rd(PC);
	bool cppVar_76868 = (cppVar_76866 == 66);
	BIT_VEC cppVar_76870 = PC + 1;
	cppVar_76870 = (cppVar_76870 & cppMask_un_16_);
	BIT_VEC cppVar_76871 = ROM.rd(cppVar_76870);
	bool cppVar_76873 = (cppVar_76871 == 141);
	BIT_VEC cppVar_76874 = PC + 1;
	cppVar_76874 = (cppVar_76874 & cppMask_un_16_);
	BIT_VEC cppVar_76875 = ROM.rd(cppVar_76874);
	BIT_VEC cppVar_76876 = (cppVar_76875 >> 7) & cppMask_un_1_;
	bool cppVar_76878 = (cppVar_76876 == 0);
	BIT_VEC cppVar_76879 = PC + 1;
	cppVar_76879 = (cppVar_76879 & cppMask_un_16_);
	BIT_VEC cppVar_76880 = ROM.rd(cppVar_76879);
	BIT_VEC cppVar_76881 = IRAM.rd(cppVar_76880);
	BIT_VEC cppVar_76882 = PC + 1;
	cppVar_76882 = (cppVar_76882 & cppMask_un_16_);
	BIT_VEC cppVar_76883 = ROM.rd(cppVar_76882);
	bool cppVar_76885 = (cppVar_76883 == 128);
	BIT_VEC cppVar_76886 = PC + 1;
	cppVar_76886 = (cppVar_76886 & cppMask_un_16_);
	BIT_VEC cppVar_76887 = ROM.rd(cppVar_76886);
	bool cppVar_76889 = (cppVar_76887 == 129);
	BIT_VEC cppVar_76890 = PC + 1;
	cppVar_76890 = (cppVar_76890 & cppMask_un_16_);
	BIT_VEC cppVar_76891 = ROM.rd(cppVar_76890);
	bool cppVar_76893 = (cppVar_76891 == 130);
	BIT_VEC cppVar_76894 = PC + 1;
	cppVar_76894 = (cppVar_76894 & cppMask_un_16_);
	BIT_VEC cppVar_76895 = ROM.rd(cppVar_76894);
	bool cppVar_76897 = (cppVar_76895 == 131);
	BIT_VEC cppVar_76898 = PC + 1;
	cppVar_76898 = (cppVar_76898 & cppMask_un_16_);
	BIT_VEC cppVar_76899 = ROM.rd(cppVar_76898);
	bool cppVar_76901 = (cppVar_76899 == 135);
	BIT_VEC cppVar_76902 = PC + 1;
	cppVar_76902 = (cppVar_76902 & cppMask_un_16_);
	BIT_VEC cppVar_76903 = ROM.rd(cppVar_76902);
	bool cppVar_76905 = (cppVar_76903 == 136);
	BIT_VEC cppVar_76906 = PC + 1;
	cppVar_76906 = (cppVar_76906 & cppMask_un_16_);
	BIT_VEC cppVar_76907 = ROM.rd(cppVar_76906);
	bool cppVar_76909 = (cppVar_76907 == 137);
	BIT_VEC cppVar_76910 = PC + 1;
	cppVar_76910 = (cppVar_76910 & cppMask_un_16_);
	BIT_VEC cppVar_76911 = ROM.rd(cppVar_76910);
	bool cppVar_76913 = (cppVar_76911 == 138);
	BIT_VEC cppVar_76914 = PC + 1;
	cppVar_76914 = (cppVar_76914 & cppMask_un_16_);
	BIT_VEC cppVar_76915 = ROM.rd(cppVar_76914);
	bool cppVar_76917 = (cppVar_76915 == 140);
	BIT_VEC cppVar_76918 = PC + 1;
	cppVar_76918 = (cppVar_76918 & cppMask_un_16_);
	BIT_VEC cppVar_76919 = ROM.rd(cppVar_76918);
	bool cppVar_76921 = (cppVar_76919 == 139);
	BIT_VEC cppVar_76922 = PC + 1;
	cppVar_76922 = (cppVar_76922 & cppMask_un_16_);
	BIT_VEC cppVar_76923 = ROM.rd(cppVar_76922);
	bool cppVar_76925 = (cppVar_76923 == 141);
	BIT_VEC cppVar_76926 = PC + 1;
	cppVar_76926 = (cppVar_76926 & cppMask_un_16_);
	BIT_VEC cppVar_76927 = ROM.rd(cppVar_76926);
	bool cppVar_76929 = (cppVar_76927 == 144);
	BIT_VEC cppVar_76930 = PC + 1;
	cppVar_76930 = (cppVar_76930 & cppMask_un_16_);
	BIT_VEC cppVar_76931 = ROM.rd(cppVar_76930);
	bool cppVar_76933 = (cppVar_76931 == 152);
	BIT_VEC cppVar_76934 = PC + 1;
	cppVar_76934 = (cppVar_76934 & cppMask_un_16_);
	BIT_VEC cppVar_76935 = ROM.rd(cppVar_76934);
	bool cppVar_76937 = (cppVar_76935 == 153);
	BIT_VEC cppVar_76938 = PC + 1;
	cppVar_76938 = (cppVar_76938 & cppMask_un_16_);
	BIT_VEC cppVar_76939 = ROM.rd(cppVar_76938);
	bool cppVar_76941 = (cppVar_76939 == 160);
	BIT_VEC cppVar_76942 = PC + 1;
	cppVar_76942 = (cppVar_76942 & cppMask_un_16_);
	BIT_VEC cppVar_76943 = ROM.rd(cppVar_76942);
	bool cppVar_76945 = (cppVar_76943 == 168);
	BIT_VEC cppVar_76946 = PC + 1;
	cppVar_76946 = (cppVar_76946 & cppMask_un_16_);
	BIT_VEC cppVar_76947 = ROM.rd(cppVar_76946);
	bool cppVar_76949 = (cppVar_76947 == 176);
	BIT_VEC cppVar_76950 = PC + 1;
	cppVar_76950 = (cppVar_76950 & cppMask_un_16_);
	BIT_VEC cppVar_76951 = ROM.rd(cppVar_76950);
	bool cppVar_76953 = (cppVar_76951 == 184);
	BIT_VEC cppVar_76954 = PC + 1;
	cppVar_76954 = (cppVar_76954 & cppMask_un_16_);
	BIT_VEC cppVar_76955 = ROM.rd(cppVar_76954);
	bool cppVar_76957 = (cppVar_76955 == 208);
	BIT_VEC cppVar_76958 = PC + 1;
	cppVar_76958 = (cppVar_76958 & cppMask_un_16_);
	BIT_VEC cppVar_76959 = ROM.rd(cppVar_76958);
	bool cppVar_76961 = (cppVar_76959 == 224);
	BIT_VEC cppVar_76962 = PC + 1;
	cppVar_76962 = (cppVar_76962 & cppMask_un_16_);
	BIT_VEC cppVar_76963 = ROM.rd(cppVar_76962);
	bool cppVar_76965 = (cppVar_76963 == 240);
	BIT_VEC cppVar_76967 = (cppVar_76965) ? B : 0;
	BIT_VEC cppVar_76968 = (cppVar_76961) ? ACC : cppVar_76967;
	BIT_VEC cppVar_76969 = (cppVar_76957) ? PSW : cppVar_76968;
	BIT_VEC cppVar_76970 = (cppVar_76953) ? IP : cppVar_76969;
	BIT_VEC cppVar_76971 = (cppVar_76949) ? P3 : cppVar_76970;
	BIT_VEC cppVar_76972 = (cppVar_76945) ? IE : cppVar_76971;
	BIT_VEC cppVar_76973 = (cppVar_76941) ? P2 : cppVar_76972;
	BIT_VEC cppVar_76974 = (cppVar_76937) ? SBUF : cppVar_76973;
	BIT_VEC cppVar_76975 = (cppVar_76933) ? SCON : cppVar_76974;
	BIT_VEC cppVar_76976 = (cppVar_76929) ? P1 : cppVar_76975;
	BIT_VEC cppVar_76977 = (cppVar_76925) ? TH1 : cppVar_76976;
	BIT_VEC cppVar_76978 = (cppVar_76921) ? TL1 : cppVar_76977;
	BIT_VEC cppVar_76979 = (cppVar_76917) ? TH0 : cppVar_76978;
	BIT_VEC cppVar_76980 = (cppVar_76913) ? TL0 : cppVar_76979;
	BIT_VEC cppVar_76981 = (cppVar_76909) ? TMOD : cppVar_76980;
	BIT_VEC cppVar_76982 = (cppVar_76905) ? TCON : cppVar_76981;
	BIT_VEC cppVar_76983 = (cppVar_76901) ? PCON : cppVar_76982;
	BIT_VEC cppVar_76984 = (cppVar_76897) ? DPH : cppVar_76983;
	BIT_VEC cppVar_76985 = (cppVar_76893) ? DPL : cppVar_76984;
	BIT_VEC cppVar_76986 = (cppVar_76889) ? SP : cppVar_76985;
	BIT_VEC cppVar_76987 = (cppVar_76885) ? P0 : cppVar_76986;
	BIT_VEC cppVar_76988 = (cppVar_76878) ? cppVar_76881 : cppVar_76987;
	BIT_VEC cppVar_76989 = cppVar_76988 | ACC;
	BIT_VEC cppVar_76990 = (cppVar_76873) ? cppVar_76989 : TH1;
	BIT_VEC cppVar_76991 = ROM.rd(PC);
	bool cppVar_76993 = (cppVar_76991 == 213);
	BIT_VEC cppVar_76994 = ROM.rd(PC);
	bool cppVar_76996 = (cppVar_76994 == 21);
	bool cppVar_76997 = cppVar_76993 || cppVar_76996;
	BIT_VEC cppVar_76999 = PC + 1;
	cppVar_76999 = (cppVar_76999 & cppMask_un_16_);
	BIT_VEC cppVar_77000 = ROM.rd(cppVar_76999);
	bool cppVar_77002 = (cppVar_77000 == 141);
	BIT_VEC cppVar_77003 = PC + 1;
	cppVar_77003 = (cppVar_77003 & cppMask_un_16_);
	BIT_VEC cppVar_77004 = ROM.rd(cppVar_77003);
	BIT_VEC cppVar_77005 = (cppVar_77004 >> 7) & cppMask_un_1_;
	bool cppVar_77007 = (cppVar_77005 == 0);
	BIT_VEC cppVar_77008 = PC + 1;
	cppVar_77008 = (cppVar_77008 & cppMask_un_16_);
	BIT_VEC cppVar_77009 = ROM.rd(cppVar_77008);
	BIT_VEC cppVar_77010 = IRAM.rd(cppVar_77009);
	BIT_VEC cppVar_77011 = PC + 1;
	cppVar_77011 = (cppVar_77011 & cppMask_un_16_);
	BIT_VEC cppVar_77012 = ROM.rd(cppVar_77011);
	bool cppVar_77014 = (cppVar_77012 == 128);
	BIT_VEC cppVar_77015 = PC + 1;
	cppVar_77015 = (cppVar_77015 & cppMask_un_16_);
	BIT_VEC cppVar_77016 = ROM.rd(cppVar_77015);
	bool cppVar_77018 = (cppVar_77016 == 129);
	BIT_VEC cppVar_77019 = PC + 1;
	cppVar_77019 = (cppVar_77019 & cppMask_un_16_);
	BIT_VEC cppVar_77020 = ROM.rd(cppVar_77019);
	bool cppVar_77022 = (cppVar_77020 == 130);
	BIT_VEC cppVar_77023 = PC + 1;
	cppVar_77023 = (cppVar_77023 & cppMask_un_16_);
	BIT_VEC cppVar_77024 = ROM.rd(cppVar_77023);
	bool cppVar_77026 = (cppVar_77024 == 131);
	BIT_VEC cppVar_77027 = PC + 1;
	cppVar_77027 = (cppVar_77027 & cppMask_un_16_);
	BIT_VEC cppVar_77028 = ROM.rd(cppVar_77027);
	bool cppVar_77030 = (cppVar_77028 == 135);
	BIT_VEC cppVar_77031 = PC + 1;
	cppVar_77031 = (cppVar_77031 & cppMask_un_16_);
	BIT_VEC cppVar_77032 = ROM.rd(cppVar_77031);
	bool cppVar_77034 = (cppVar_77032 == 136);
	BIT_VEC cppVar_77035 = PC + 1;
	cppVar_77035 = (cppVar_77035 & cppMask_un_16_);
	BIT_VEC cppVar_77036 = ROM.rd(cppVar_77035);
	bool cppVar_77038 = (cppVar_77036 == 137);
	BIT_VEC cppVar_77039 = PC + 1;
	cppVar_77039 = (cppVar_77039 & cppMask_un_16_);
	BIT_VEC cppVar_77040 = ROM.rd(cppVar_77039);
	bool cppVar_77042 = (cppVar_77040 == 138);
	BIT_VEC cppVar_77043 = PC + 1;
	cppVar_77043 = (cppVar_77043 & cppMask_un_16_);
	BIT_VEC cppVar_77044 = ROM.rd(cppVar_77043);
	bool cppVar_77046 = (cppVar_77044 == 140);
	BIT_VEC cppVar_77047 = PC + 1;
	cppVar_77047 = (cppVar_77047 & cppMask_un_16_);
	BIT_VEC cppVar_77048 = ROM.rd(cppVar_77047);
	bool cppVar_77050 = (cppVar_77048 == 139);
	BIT_VEC cppVar_77051 = PC + 1;
	cppVar_77051 = (cppVar_77051 & cppMask_un_16_);
	BIT_VEC cppVar_77052 = ROM.rd(cppVar_77051);
	bool cppVar_77054 = (cppVar_77052 == 141);
	BIT_VEC cppVar_77055 = PC + 1;
	cppVar_77055 = (cppVar_77055 & cppMask_un_16_);
	BIT_VEC cppVar_77056 = ROM.rd(cppVar_77055);
	bool cppVar_77058 = (cppVar_77056 == 144);
	BIT_VEC cppVar_77059 = PC + 1;
	cppVar_77059 = (cppVar_77059 & cppMask_un_16_);
	BIT_VEC cppVar_77060 = ROM.rd(cppVar_77059);
	bool cppVar_77062 = (cppVar_77060 == 152);
	BIT_VEC cppVar_77063 = PC + 1;
	cppVar_77063 = (cppVar_77063 & cppMask_un_16_);
	BIT_VEC cppVar_77064 = ROM.rd(cppVar_77063);
	bool cppVar_77066 = (cppVar_77064 == 153);
	BIT_VEC cppVar_77067 = PC + 1;
	cppVar_77067 = (cppVar_77067 & cppMask_un_16_);
	BIT_VEC cppVar_77068 = ROM.rd(cppVar_77067);
	bool cppVar_77070 = (cppVar_77068 == 160);
	BIT_VEC cppVar_77071 = PC + 1;
	cppVar_77071 = (cppVar_77071 & cppMask_un_16_);
	BIT_VEC cppVar_77072 = ROM.rd(cppVar_77071);
	bool cppVar_77074 = (cppVar_77072 == 168);
	BIT_VEC cppVar_77075 = PC + 1;
	cppVar_77075 = (cppVar_77075 & cppMask_un_16_);
	BIT_VEC cppVar_77076 = ROM.rd(cppVar_77075);
	bool cppVar_77078 = (cppVar_77076 == 176);
	BIT_VEC cppVar_77079 = PC + 1;
	cppVar_77079 = (cppVar_77079 & cppMask_un_16_);
	BIT_VEC cppVar_77080 = ROM.rd(cppVar_77079);
	bool cppVar_77082 = (cppVar_77080 == 184);
	BIT_VEC cppVar_77083 = PC + 1;
	cppVar_77083 = (cppVar_77083 & cppMask_un_16_);
	BIT_VEC cppVar_77084 = ROM.rd(cppVar_77083);
	bool cppVar_77086 = (cppVar_77084 == 208);
	BIT_VEC cppVar_77087 = PC + 1;
	cppVar_77087 = (cppVar_77087 & cppMask_un_16_);
	BIT_VEC cppVar_77088 = ROM.rd(cppVar_77087);
	bool cppVar_77090 = (cppVar_77088 == 224);
	BIT_VEC cppVar_77091 = PC + 1;
	cppVar_77091 = (cppVar_77091 & cppMask_un_16_);
	BIT_VEC cppVar_77092 = ROM.rd(cppVar_77091);
	bool cppVar_77094 = (cppVar_77092 == 240);
	BIT_VEC cppVar_77096 = (cppVar_77094) ? B : 0;
	BIT_VEC cppVar_77097 = (cppVar_77090) ? ACC : cppVar_77096;
	BIT_VEC cppVar_77098 = (cppVar_77086) ? PSW : cppVar_77097;
	BIT_VEC cppVar_77099 = (cppVar_77082) ? IP : cppVar_77098;
	BIT_VEC cppVar_77100 = (cppVar_77078) ? P3 : cppVar_77099;
	BIT_VEC cppVar_77101 = (cppVar_77074) ? IE : cppVar_77100;
	BIT_VEC cppVar_77102 = (cppVar_77070) ? P2 : cppVar_77101;
	BIT_VEC cppVar_77103 = (cppVar_77066) ? SBUF : cppVar_77102;
	BIT_VEC cppVar_77104 = (cppVar_77062) ? SCON : cppVar_77103;
	BIT_VEC cppVar_77105 = (cppVar_77058) ? P1 : cppVar_77104;
	BIT_VEC cppVar_77106 = (cppVar_77054) ? TH1 : cppVar_77105;
	BIT_VEC cppVar_77107 = (cppVar_77050) ? TL1 : cppVar_77106;
	BIT_VEC cppVar_77108 = (cppVar_77046) ? TH0 : cppVar_77107;
	BIT_VEC cppVar_77109 = (cppVar_77042) ? TL0 : cppVar_77108;
	BIT_VEC cppVar_77110 = (cppVar_77038) ? TMOD : cppVar_77109;
	BIT_VEC cppVar_77111 = (cppVar_77034) ? TCON : cppVar_77110;
	BIT_VEC cppVar_77112 = (cppVar_77030) ? PCON : cppVar_77111;
	BIT_VEC cppVar_77113 = (cppVar_77026) ? DPH : cppVar_77112;
	BIT_VEC cppVar_77114 = (cppVar_77022) ? DPL : cppVar_77113;
	BIT_VEC cppVar_77115 = (cppVar_77018) ? SP : cppVar_77114;
	BIT_VEC cppVar_77116 = (cppVar_77014) ? P0 : cppVar_77115;
	BIT_VEC cppVar_77117 = (cppVar_77007) ? cppVar_77010 : cppVar_77116;
	BIT_VEC cppVar_77119 = cppVar_77117 - 1;
	cppVar_77119 = (cppVar_77119 & cppMask_un_8_);
	BIT_VEC cppVar_77120 = (cppVar_77002) ? cppVar_77119 : TH1;
	BIT_VEC cppVar_77121 = ROM.rd(PC);
	bool cppVar_77123 = (cppVar_77121 == 5);
	BIT_VEC cppVar_77125 = PC + 1;
	cppVar_77125 = (cppVar_77125 & cppMask_un_16_);
	BIT_VEC cppVar_77126 = ROM.rd(cppVar_77125);
	bool cppVar_77128 = (cppVar_77126 == 141);
	BIT_VEC cppVar_77129 = PC + 1;
	cppVar_77129 = (cppVar_77129 & cppMask_un_16_);
	BIT_VEC cppVar_77130 = ROM.rd(cppVar_77129);
	BIT_VEC cppVar_77131 = (cppVar_77130 >> 7) & cppMask_un_1_;
	bool cppVar_77133 = (cppVar_77131 == 0);
	BIT_VEC cppVar_77134 = PC + 1;
	cppVar_77134 = (cppVar_77134 & cppMask_un_16_);
	BIT_VEC cppVar_77135 = ROM.rd(cppVar_77134);
	BIT_VEC cppVar_77136 = IRAM.rd(cppVar_77135);
	BIT_VEC cppVar_77137 = PC + 1;
	cppVar_77137 = (cppVar_77137 & cppMask_un_16_);
	BIT_VEC cppVar_77138 = ROM.rd(cppVar_77137);
	bool cppVar_77140 = (cppVar_77138 == 128);
	BIT_VEC cppVar_77141 = PC + 1;
	cppVar_77141 = (cppVar_77141 & cppMask_un_16_);
	BIT_VEC cppVar_77142 = ROM.rd(cppVar_77141);
	bool cppVar_77144 = (cppVar_77142 == 129);
	BIT_VEC cppVar_77145 = PC + 1;
	cppVar_77145 = (cppVar_77145 & cppMask_un_16_);
	BIT_VEC cppVar_77146 = ROM.rd(cppVar_77145);
	bool cppVar_77148 = (cppVar_77146 == 130);
	BIT_VEC cppVar_77149 = PC + 1;
	cppVar_77149 = (cppVar_77149 & cppMask_un_16_);
	BIT_VEC cppVar_77150 = ROM.rd(cppVar_77149);
	bool cppVar_77152 = (cppVar_77150 == 131);
	BIT_VEC cppVar_77153 = PC + 1;
	cppVar_77153 = (cppVar_77153 & cppMask_un_16_);
	BIT_VEC cppVar_77154 = ROM.rd(cppVar_77153);
	bool cppVar_77156 = (cppVar_77154 == 135);
	BIT_VEC cppVar_77157 = PC + 1;
	cppVar_77157 = (cppVar_77157 & cppMask_un_16_);
	BIT_VEC cppVar_77158 = ROM.rd(cppVar_77157);
	bool cppVar_77160 = (cppVar_77158 == 136);
	BIT_VEC cppVar_77161 = PC + 1;
	cppVar_77161 = (cppVar_77161 & cppMask_un_16_);
	BIT_VEC cppVar_77162 = ROM.rd(cppVar_77161);
	bool cppVar_77164 = (cppVar_77162 == 137);
	BIT_VEC cppVar_77165 = PC + 1;
	cppVar_77165 = (cppVar_77165 & cppMask_un_16_);
	BIT_VEC cppVar_77166 = ROM.rd(cppVar_77165);
	bool cppVar_77168 = (cppVar_77166 == 138);
	BIT_VEC cppVar_77169 = PC + 1;
	cppVar_77169 = (cppVar_77169 & cppMask_un_16_);
	BIT_VEC cppVar_77170 = ROM.rd(cppVar_77169);
	bool cppVar_77172 = (cppVar_77170 == 140);
	BIT_VEC cppVar_77173 = PC + 1;
	cppVar_77173 = (cppVar_77173 & cppMask_un_16_);
	BIT_VEC cppVar_77174 = ROM.rd(cppVar_77173);
	bool cppVar_77176 = (cppVar_77174 == 139);
	BIT_VEC cppVar_77177 = PC + 1;
	cppVar_77177 = (cppVar_77177 & cppMask_un_16_);
	BIT_VEC cppVar_77178 = ROM.rd(cppVar_77177);
	bool cppVar_77180 = (cppVar_77178 == 141);
	BIT_VEC cppVar_77181 = PC + 1;
	cppVar_77181 = (cppVar_77181 & cppMask_un_16_);
	BIT_VEC cppVar_77182 = ROM.rd(cppVar_77181);
	bool cppVar_77184 = (cppVar_77182 == 144);
	BIT_VEC cppVar_77185 = PC + 1;
	cppVar_77185 = (cppVar_77185 & cppMask_un_16_);
	BIT_VEC cppVar_77186 = ROM.rd(cppVar_77185);
	bool cppVar_77188 = (cppVar_77186 == 152);
	BIT_VEC cppVar_77189 = PC + 1;
	cppVar_77189 = (cppVar_77189 & cppMask_un_16_);
	BIT_VEC cppVar_77190 = ROM.rd(cppVar_77189);
	bool cppVar_77192 = (cppVar_77190 == 153);
	BIT_VEC cppVar_77193 = PC + 1;
	cppVar_77193 = (cppVar_77193 & cppMask_un_16_);
	BIT_VEC cppVar_77194 = ROM.rd(cppVar_77193);
	bool cppVar_77196 = (cppVar_77194 == 160);
	BIT_VEC cppVar_77197 = PC + 1;
	cppVar_77197 = (cppVar_77197 & cppMask_un_16_);
	BIT_VEC cppVar_77198 = ROM.rd(cppVar_77197);
	bool cppVar_77200 = (cppVar_77198 == 168);
	BIT_VEC cppVar_77201 = PC + 1;
	cppVar_77201 = (cppVar_77201 & cppMask_un_16_);
	BIT_VEC cppVar_77202 = ROM.rd(cppVar_77201);
	bool cppVar_77204 = (cppVar_77202 == 176);
	BIT_VEC cppVar_77205 = PC + 1;
	cppVar_77205 = (cppVar_77205 & cppMask_un_16_);
	BIT_VEC cppVar_77206 = ROM.rd(cppVar_77205);
	bool cppVar_77208 = (cppVar_77206 == 184);
	BIT_VEC cppVar_77209 = PC + 1;
	cppVar_77209 = (cppVar_77209 & cppMask_un_16_);
	BIT_VEC cppVar_77210 = ROM.rd(cppVar_77209);
	bool cppVar_77212 = (cppVar_77210 == 208);
	BIT_VEC cppVar_77213 = PC + 1;
	cppVar_77213 = (cppVar_77213 & cppMask_un_16_);
	BIT_VEC cppVar_77214 = ROM.rd(cppVar_77213);
	bool cppVar_77216 = (cppVar_77214 == 224);
	BIT_VEC cppVar_77217 = PC + 1;
	cppVar_77217 = (cppVar_77217 & cppMask_un_16_);
	BIT_VEC cppVar_77218 = ROM.rd(cppVar_77217);
	bool cppVar_77220 = (cppVar_77218 == 240);
	BIT_VEC cppVar_77222 = (cppVar_77220) ? B : 0;
	BIT_VEC cppVar_77223 = (cppVar_77216) ? ACC : cppVar_77222;
	BIT_VEC cppVar_77224 = (cppVar_77212) ? PSW : cppVar_77223;
	BIT_VEC cppVar_77225 = (cppVar_77208) ? IP : cppVar_77224;
	BIT_VEC cppVar_77226 = (cppVar_77204) ? P3 : cppVar_77225;
	BIT_VEC cppVar_77227 = (cppVar_77200) ? IE : cppVar_77226;
	BIT_VEC cppVar_77228 = (cppVar_77196) ? P2 : cppVar_77227;
	BIT_VEC cppVar_77229 = (cppVar_77192) ? SBUF : cppVar_77228;
	BIT_VEC cppVar_77230 = (cppVar_77188) ? SCON : cppVar_77229;
	BIT_VEC cppVar_77231 = (cppVar_77184) ? P1 : cppVar_77230;
	BIT_VEC cppVar_77232 = (cppVar_77180) ? TH1 : cppVar_77231;
	BIT_VEC cppVar_77233 = (cppVar_77176) ? TL1 : cppVar_77232;
	BIT_VEC cppVar_77234 = (cppVar_77172) ? TH0 : cppVar_77233;
	BIT_VEC cppVar_77235 = (cppVar_77168) ? TL0 : cppVar_77234;
	BIT_VEC cppVar_77236 = (cppVar_77164) ? TMOD : cppVar_77235;
	BIT_VEC cppVar_77237 = (cppVar_77160) ? TCON : cppVar_77236;
	BIT_VEC cppVar_77238 = (cppVar_77156) ? PCON : cppVar_77237;
	BIT_VEC cppVar_77239 = (cppVar_77152) ? DPH : cppVar_77238;
	BIT_VEC cppVar_77240 = (cppVar_77148) ? DPL : cppVar_77239;
	BIT_VEC cppVar_77241 = (cppVar_77144) ? SP : cppVar_77240;
	BIT_VEC cppVar_77242 = (cppVar_77140) ? P0 : cppVar_77241;
	BIT_VEC cppVar_77243 = (cppVar_77133) ? cppVar_77136 : cppVar_77242;
	BIT_VEC cppVar_77245 = cppVar_77243 + 1;
	cppVar_77245 = (cppVar_77245 & cppMask_un_8_);
	BIT_VEC cppVar_77246 = (cppVar_77128) ? cppVar_77245 : TH1;
	BIT_VEC cppVar_77247 = (cppVar_77123) ? cppVar_77246 : TH1;
	BIT_VEC cppVar_77248 = (cppVar_76997) ? cppVar_77120 : cppVar_77247;
	BIT_VEC cppVar_77249 = (cppVar_76868) ? cppVar_76990 : cppVar_77248;
	BIT_VEC cppVar_77250 = (cppVar_76740) ? cppVar_76865 : cppVar_77249;
	BIT_VEC cppVar_77251 = (cppVar_76615) ? cppVar_76737 : cppVar_77250;
	BIT_VEC cppVar_77252 = (cppVar_76487) ? cppVar_76612 : cppVar_77251;
	BIT_VEC cppVar_77253 = (cppVar_76362) ? cppVar_76484 : cppVar_77252;
	BIT_VEC cppVar_77254 = (cppVar_76234) ? cppVar_76359 : cppVar_77253;
	BIT_VEC cppVar_77255 = (cppVar_76222) ? cppVar_76231 : cppVar_77254;
	BIT_VEC cppVar_77256 = (cppVar_76097) ? cppVar_76219 : cppVar_77255;
	BIT_VEC cppVar_77257 = (cppVar_76081) ? cppVar_76094 : cppVar_77256;
	BIT_VEC cppVar_77258 = (cppVar_76065) ? cppVar_76078 : cppVar_77257;
	BIT_VEC cppVar_77259 = (cppVar_75916) ? cppVar_76062 : cppVar_77258;
	BIT_VEC cppVar_77260 = (cppVar_75767) ? cppVar_75913 : cppVar_77259;
	BIT_VEC cppVar_77261 = (cppVar_75618) ? cppVar_75764 : cppVar_77260;
	BIT_VEC cppVar_77262 = (cppVar_75469) ? cppVar_75615 : cppVar_77261;
	BIT_VEC cppVar_77263 = (cppVar_75320) ? cppVar_75466 : cppVar_77262;
	BIT_VEC cppVar_77264 = (cppVar_75171) ? cppVar_75317 : cppVar_77263;
	BIT_VEC cppVar_77265 = (cppVar_75022) ? cppVar_75168 : cppVar_77264;
	BIT_VEC cppVar_77266 = (cppVar_74873) ? cppVar_75019 : cppVar_77265;
	BIT_VEC cppVar_77267 = (cppVar_74864) ? cppVar_74870 : cppVar_77266;
	BIT_VEC cppVar_77268 = (cppVar_74850) ? cppVar_74857 : cppVar_77267;
	return cppVar_77268;
}
