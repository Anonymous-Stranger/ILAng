#include "common.hpp"
#include "model_oc8051_class.hpp"

BIT_VEC model_oc8051::cppUpdateFun_SCON()
{
	BIT_VEC cppVar_59531 = ROM.rd(PC);
	bool cppVar_59533 = (cppVar_59531 == 210);
	BIT_VEC cppVar_59535 = PC + 1;
	cppVar_59535 = (cppVar_59535 & cppMask_un_16_);
	BIT_VEC cppVar_59536 = ROM.rd(cppVar_59535);
	BIT_VEC cppVar_59537 = (cppVar_59536 >> 7) & cppMask_un_1_;
	bool cppVar_59539 = (cppVar_59537 == 1);
	BIT_VEC cppVar_59540 = PC + 1;
	cppVar_59540 = (cppVar_59540 & cppMask_un_16_);
	BIT_VEC cppVar_59541 = ROM.rd(cppVar_59540);
	BIT_VEC cppVar_59542 = (cppVar_59541 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59544 = (cppVar_59542 << 3) | 0;
	cppVar_59544 = (cppVar_59544 & cppMask_un_8_);
	BIT_VEC cppVar_59545 = PC + 1;
	cppVar_59545 = (cppVar_59545 & cppMask_un_16_);
	BIT_VEC cppVar_59546 = ROM.rd(cppVar_59545);
	BIT_VEC cppVar_59547 = (cppVar_59546 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59548 = (cppVar_59547 & cppMask_un_5_);
	BIT_VEC cppVar_59550 = cppVar_59548 + 32;
	cppVar_59550 = (cppVar_59550 & cppMask_un_8_);
	BIT_VEC cppVar_59551 = (cppVar_59539) ? cppVar_59544 : cppVar_59550;
	bool cppVar_59553 = (cppVar_59551 == 152);
	BIT_VEC cppVar_59555 = PC + 1;
	cppVar_59555 = (cppVar_59555 & cppMask_un_16_);
	BIT_VEC cppVar_59556 = ROM.rd(cppVar_59555);
	BIT_VEC cppVar_59557 = (cppVar_59556 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_59558 = (cppVar_59557 & cppMask_un_3_);
	BIT_VEC cppVar_59559 = 1 << static_cast<unsigned>(cppVar_59558);
	cppVar_59559 = (cppVar_59559 & cppMask_un_8_);
	BIT_VEC cppVar_59560 = ~cppVar_59559;
	BIT_VEC cppVar_59561 = PC + 1;
	cppVar_59561 = (cppVar_59561 & cppMask_un_16_);
	BIT_VEC cppVar_59562 = ROM.rd(cppVar_59561);
	BIT_VEC cppVar_59563 = (cppVar_59562 >> 7) & cppMask_un_1_;
	bool cppVar_59564 = (cppVar_59563 == 1);
	BIT_VEC cppVar_59565 = PC + 1;
	cppVar_59565 = (cppVar_59565 & cppMask_un_16_);
	BIT_VEC cppVar_59566 = ROM.rd(cppVar_59565);
	BIT_VEC cppVar_59567 = (cppVar_59566 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59568 = (cppVar_59567 << 3) | 0;
	cppVar_59568 = (cppVar_59568 & cppMask_un_8_);
	BIT_VEC cppVar_59569 = PC + 1;
	cppVar_59569 = (cppVar_59569 & cppMask_un_16_);
	BIT_VEC cppVar_59570 = ROM.rd(cppVar_59569);
	BIT_VEC cppVar_59571 = (cppVar_59570 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59572 = (cppVar_59571 & cppMask_un_5_);
	BIT_VEC cppVar_59573 = cppVar_59572 + 32;
	cppVar_59573 = (cppVar_59573 & cppMask_un_8_);
	BIT_VEC cppVar_59574 = (cppVar_59564) ? cppVar_59568 : cppVar_59573;
	BIT_VEC cppVar_59575 = (cppVar_59574 >> 7) & cppMask_un_1_;
	bool cppVar_59577 = (cppVar_59575 == 0);
	BIT_VEC cppVar_59578 = PC + 1;
	cppVar_59578 = (cppVar_59578 & cppMask_un_16_);
	BIT_VEC cppVar_59579 = ROM.rd(cppVar_59578);
	BIT_VEC cppVar_59580 = (cppVar_59579 >> 7) & cppMask_un_1_;
	bool cppVar_59581 = (cppVar_59580 == 1);
	BIT_VEC cppVar_59582 = PC + 1;
	cppVar_59582 = (cppVar_59582 & cppMask_un_16_);
	BIT_VEC cppVar_59583 = ROM.rd(cppVar_59582);
	BIT_VEC cppVar_59584 = (cppVar_59583 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59585 = (cppVar_59584 << 3) | 0;
	cppVar_59585 = (cppVar_59585 & cppMask_un_8_);
	BIT_VEC cppVar_59586 = PC + 1;
	cppVar_59586 = (cppVar_59586 & cppMask_un_16_);
	BIT_VEC cppVar_59587 = ROM.rd(cppVar_59586);
	BIT_VEC cppVar_59588 = (cppVar_59587 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59589 = (cppVar_59588 & cppMask_un_5_);
	BIT_VEC cppVar_59590 = cppVar_59589 + 32;
	cppVar_59590 = (cppVar_59590 & cppMask_un_8_);
	BIT_VEC cppVar_59591 = (cppVar_59581) ? cppVar_59585 : cppVar_59590;
	BIT_VEC cppVar_59592 = IRAM.rd(cppVar_59591);
	BIT_VEC cppVar_59593 = PC + 1;
	cppVar_59593 = (cppVar_59593 & cppMask_un_16_);
	BIT_VEC cppVar_59594 = ROM.rd(cppVar_59593);
	BIT_VEC cppVar_59595 = (cppVar_59594 >> 7) & cppMask_un_1_;
	bool cppVar_59596 = (cppVar_59595 == 1);
	BIT_VEC cppVar_59597 = PC + 1;
	cppVar_59597 = (cppVar_59597 & cppMask_un_16_);
	BIT_VEC cppVar_59598 = ROM.rd(cppVar_59597);
	BIT_VEC cppVar_59599 = (cppVar_59598 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59600 = (cppVar_59599 << 3) | 0;
	cppVar_59600 = (cppVar_59600 & cppMask_un_8_);
	BIT_VEC cppVar_59601 = PC + 1;
	cppVar_59601 = (cppVar_59601 & cppMask_un_16_);
	BIT_VEC cppVar_59602 = ROM.rd(cppVar_59601);
	BIT_VEC cppVar_59603 = (cppVar_59602 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59604 = (cppVar_59603 & cppMask_un_5_);
	BIT_VEC cppVar_59605 = cppVar_59604 + 32;
	cppVar_59605 = (cppVar_59605 & cppMask_un_8_);
	BIT_VEC cppVar_59606 = (cppVar_59596) ? cppVar_59600 : cppVar_59605;
	bool cppVar_59608 = (cppVar_59606 == 128);
	BIT_VEC cppVar_59609 = PC + 1;
	cppVar_59609 = (cppVar_59609 & cppMask_un_16_);
	BIT_VEC cppVar_59610 = ROM.rd(cppVar_59609);
	BIT_VEC cppVar_59611 = (cppVar_59610 >> 7) & cppMask_un_1_;
	bool cppVar_59612 = (cppVar_59611 == 1);
	BIT_VEC cppVar_59613 = PC + 1;
	cppVar_59613 = (cppVar_59613 & cppMask_un_16_);
	BIT_VEC cppVar_59614 = ROM.rd(cppVar_59613);
	BIT_VEC cppVar_59615 = (cppVar_59614 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59616 = (cppVar_59615 << 3) | 0;
	cppVar_59616 = (cppVar_59616 & cppMask_un_8_);
	BIT_VEC cppVar_59617 = PC + 1;
	cppVar_59617 = (cppVar_59617 & cppMask_un_16_);
	BIT_VEC cppVar_59618 = ROM.rd(cppVar_59617);
	BIT_VEC cppVar_59619 = (cppVar_59618 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59620 = (cppVar_59619 & cppMask_un_5_);
	BIT_VEC cppVar_59621 = cppVar_59620 + 32;
	cppVar_59621 = (cppVar_59621 & cppMask_un_8_);
	BIT_VEC cppVar_59622 = (cppVar_59612) ? cppVar_59616 : cppVar_59621;
	bool cppVar_59624 = (cppVar_59622 == 129);
	BIT_VEC cppVar_59625 = PC + 1;
	cppVar_59625 = (cppVar_59625 & cppMask_un_16_);
	BIT_VEC cppVar_59626 = ROM.rd(cppVar_59625);
	BIT_VEC cppVar_59627 = (cppVar_59626 >> 7) & cppMask_un_1_;
	bool cppVar_59628 = (cppVar_59627 == 1);
	BIT_VEC cppVar_59629 = PC + 1;
	cppVar_59629 = (cppVar_59629 & cppMask_un_16_);
	BIT_VEC cppVar_59630 = ROM.rd(cppVar_59629);
	BIT_VEC cppVar_59631 = (cppVar_59630 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59632 = (cppVar_59631 << 3) | 0;
	cppVar_59632 = (cppVar_59632 & cppMask_un_8_);
	BIT_VEC cppVar_59633 = PC + 1;
	cppVar_59633 = (cppVar_59633 & cppMask_un_16_);
	BIT_VEC cppVar_59634 = ROM.rd(cppVar_59633);
	BIT_VEC cppVar_59635 = (cppVar_59634 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59636 = (cppVar_59635 & cppMask_un_5_);
	BIT_VEC cppVar_59637 = cppVar_59636 + 32;
	cppVar_59637 = (cppVar_59637 & cppMask_un_8_);
	BIT_VEC cppVar_59638 = (cppVar_59628) ? cppVar_59632 : cppVar_59637;
	bool cppVar_59640 = (cppVar_59638 == 130);
	BIT_VEC cppVar_59641 = PC + 1;
	cppVar_59641 = (cppVar_59641 & cppMask_un_16_);
	BIT_VEC cppVar_59642 = ROM.rd(cppVar_59641);
	BIT_VEC cppVar_59643 = (cppVar_59642 >> 7) & cppMask_un_1_;
	bool cppVar_59644 = (cppVar_59643 == 1);
	BIT_VEC cppVar_59645 = PC + 1;
	cppVar_59645 = (cppVar_59645 & cppMask_un_16_);
	BIT_VEC cppVar_59646 = ROM.rd(cppVar_59645);
	BIT_VEC cppVar_59647 = (cppVar_59646 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59648 = (cppVar_59647 << 3) | 0;
	cppVar_59648 = (cppVar_59648 & cppMask_un_8_);
	BIT_VEC cppVar_59649 = PC + 1;
	cppVar_59649 = (cppVar_59649 & cppMask_un_16_);
	BIT_VEC cppVar_59650 = ROM.rd(cppVar_59649);
	BIT_VEC cppVar_59651 = (cppVar_59650 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59652 = (cppVar_59651 & cppMask_un_5_);
	BIT_VEC cppVar_59653 = cppVar_59652 + 32;
	cppVar_59653 = (cppVar_59653 & cppMask_un_8_);
	BIT_VEC cppVar_59654 = (cppVar_59644) ? cppVar_59648 : cppVar_59653;
	bool cppVar_59656 = (cppVar_59654 == 131);
	BIT_VEC cppVar_59657 = PC + 1;
	cppVar_59657 = (cppVar_59657 & cppMask_un_16_);
	BIT_VEC cppVar_59658 = ROM.rd(cppVar_59657);
	BIT_VEC cppVar_59659 = (cppVar_59658 >> 7) & cppMask_un_1_;
	bool cppVar_59660 = (cppVar_59659 == 1);
	BIT_VEC cppVar_59661 = PC + 1;
	cppVar_59661 = (cppVar_59661 & cppMask_un_16_);
	BIT_VEC cppVar_59662 = ROM.rd(cppVar_59661);
	BIT_VEC cppVar_59663 = (cppVar_59662 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59664 = (cppVar_59663 << 3) | 0;
	cppVar_59664 = (cppVar_59664 & cppMask_un_8_);
	BIT_VEC cppVar_59665 = PC + 1;
	cppVar_59665 = (cppVar_59665 & cppMask_un_16_);
	BIT_VEC cppVar_59666 = ROM.rd(cppVar_59665);
	BIT_VEC cppVar_59667 = (cppVar_59666 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59668 = (cppVar_59667 & cppMask_un_5_);
	BIT_VEC cppVar_59669 = cppVar_59668 + 32;
	cppVar_59669 = (cppVar_59669 & cppMask_un_8_);
	BIT_VEC cppVar_59670 = (cppVar_59660) ? cppVar_59664 : cppVar_59669;
	bool cppVar_59672 = (cppVar_59670 == 135);
	BIT_VEC cppVar_59673 = PC + 1;
	cppVar_59673 = (cppVar_59673 & cppMask_un_16_);
	BIT_VEC cppVar_59674 = ROM.rd(cppVar_59673);
	BIT_VEC cppVar_59675 = (cppVar_59674 >> 7) & cppMask_un_1_;
	bool cppVar_59676 = (cppVar_59675 == 1);
	BIT_VEC cppVar_59677 = PC + 1;
	cppVar_59677 = (cppVar_59677 & cppMask_un_16_);
	BIT_VEC cppVar_59678 = ROM.rd(cppVar_59677);
	BIT_VEC cppVar_59679 = (cppVar_59678 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59680 = (cppVar_59679 << 3) | 0;
	cppVar_59680 = (cppVar_59680 & cppMask_un_8_);
	BIT_VEC cppVar_59681 = PC + 1;
	cppVar_59681 = (cppVar_59681 & cppMask_un_16_);
	BIT_VEC cppVar_59682 = ROM.rd(cppVar_59681);
	BIT_VEC cppVar_59683 = (cppVar_59682 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59684 = (cppVar_59683 & cppMask_un_5_);
	BIT_VEC cppVar_59685 = cppVar_59684 + 32;
	cppVar_59685 = (cppVar_59685 & cppMask_un_8_);
	BIT_VEC cppVar_59686 = (cppVar_59676) ? cppVar_59680 : cppVar_59685;
	bool cppVar_59688 = (cppVar_59686 == 136);
	BIT_VEC cppVar_59689 = PC + 1;
	cppVar_59689 = (cppVar_59689 & cppMask_un_16_);
	BIT_VEC cppVar_59690 = ROM.rd(cppVar_59689);
	BIT_VEC cppVar_59691 = (cppVar_59690 >> 7) & cppMask_un_1_;
	bool cppVar_59692 = (cppVar_59691 == 1);
	BIT_VEC cppVar_59693 = PC + 1;
	cppVar_59693 = (cppVar_59693 & cppMask_un_16_);
	BIT_VEC cppVar_59694 = ROM.rd(cppVar_59693);
	BIT_VEC cppVar_59695 = (cppVar_59694 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59696 = (cppVar_59695 << 3) | 0;
	cppVar_59696 = (cppVar_59696 & cppMask_un_8_);
	BIT_VEC cppVar_59697 = PC + 1;
	cppVar_59697 = (cppVar_59697 & cppMask_un_16_);
	BIT_VEC cppVar_59698 = ROM.rd(cppVar_59697);
	BIT_VEC cppVar_59699 = (cppVar_59698 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59700 = (cppVar_59699 & cppMask_un_5_);
	BIT_VEC cppVar_59701 = cppVar_59700 + 32;
	cppVar_59701 = (cppVar_59701 & cppMask_un_8_);
	BIT_VEC cppVar_59702 = (cppVar_59692) ? cppVar_59696 : cppVar_59701;
	bool cppVar_59704 = (cppVar_59702 == 137);
	BIT_VEC cppVar_59705 = PC + 1;
	cppVar_59705 = (cppVar_59705 & cppMask_un_16_);
	BIT_VEC cppVar_59706 = ROM.rd(cppVar_59705);
	BIT_VEC cppVar_59707 = (cppVar_59706 >> 7) & cppMask_un_1_;
	bool cppVar_59708 = (cppVar_59707 == 1);
	BIT_VEC cppVar_59709 = PC + 1;
	cppVar_59709 = (cppVar_59709 & cppMask_un_16_);
	BIT_VEC cppVar_59710 = ROM.rd(cppVar_59709);
	BIT_VEC cppVar_59711 = (cppVar_59710 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59712 = (cppVar_59711 << 3) | 0;
	cppVar_59712 = (cppVar_59712 & cppMask_un_8_);
	BIT_VEC cppVar_59713 = PC + 1;
	cppVar_59713 = (cppVar_59713 & cppMask_un_16_);
	BIT_VEC cppVar_59714 = ROM.rd(cppVar_59713);
	BIT_VEC cppVar_59715 = (cppVar_59714 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59716 = (cppVar_59715 & cppMask_un_5_);
	BIT_VEC cppVar_59717 = cppVar_59716 + 32;
	cppVar_59717 = (cppVar_59717 & cppMask_un_8_);
	BIT_VEC cppVar_59718 = (cppVar_59708) ? cppVar_59712 : cppVar_59717;
	bool cppVar_59720 = (cppVar_59718 == 138);
	BIT_VEC cppVar_59721 = PC + 1;
	cppVar_59721 = (cppVar_59721 & cppMask_un_16_);
	BIT_VEC cppVar_59722 = ROM.rd(cppVar_59721);
	BIT_VEC cppVar_59723 = (cppVar_59722 >> 7) & cppMask_un_1_;
	bool cppVar_59724 = (cppVar_59723 == 1);
	BIT_VEC cppVar_59725 = PC + 1;
	cppVar_59725 = (cppVar_59725 & cppMask_un_16_);
	BIT_VEC cppVar_59726 = ROM.rd(cppVar_59725);
	BIT_VEC cppVar_59727 = (cppVar_59726 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59728 = (cppVar_59727 << 3) | 0;
	cppVar_59728 = (cppVar_59728 & cppMask_un_8_);
	BIT_VEC cppVar_59729 = PC + 1;
	cppVar_59729 = (cppVar_59729 & cppMask_un_16_);
	BIT_VEC cppVar_59730 = ROM.rd(cppVar_59729);
	BIT_VEC cppVar_59731 = (cppVar_59730 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59732 = (cppVar_59731 & cppMask_un_5_);
	BIT_VEC cppVar_59733 = cppVar_59732 + 32;
	cppVar_59733 = (cppVar_59733 & cppMask_un_8_);
	BIT_VEC cppVar_59734 = (cppVar_59724) ? cppVar_59728 : cppVar_59733;
	bool cppVar_59736 = (cppVar_59734 == 140);
	BIT_VEC cppVar_59737 = PC + 1;
	cppVar_59737 = (cppVar_59737 & cppMask_un_16_);
	BIT_VEC cppVar_59738 = ROM.rd(cppVar_59737);
	BIT_VEC cppVar_59739 = (cppVar_59738 >> 7) & cppMask_un_1_;
	bool cppVar_59740 = (cppVar_59739 == 1);
	BIT_VEC cppVar_59741 = PC + 1;
	cppVar_59741 = (cppVar_59741 & cppMask_un_16_);
	BIT_VEC cppVar_59742 = ROM.rd(cppVar_59741);
	BIT_VEC cppVar_59743 = (cppVar_59742 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59744 = (cppVar_59743 << 3) | 0;
	cppVar_59744 = (cppVar_59744 & cppMask_un_8_);
	BIT_VEC cppVar_59745 = PC + 1;
	cppVar_59745 = (cppVar_59745 & cppMask_un_16_);
	BIT_VEC cppVar_59746 = ROM.rd(cppVar_59745);
	BIT_VEC cppVar_59747 = (cppVar_59746 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59748 = (cppVar_59747 & cppMask_un_5_);
	BIT_VEC cppVar_59749 = cppVar_59748 + 32;
	cppVar_59749 = (cppVar_59749 & cppMask_un_8_);
	BIT_VEC cppVar_59750 = (cppVar_59740) ? cppVar_59744 : cppVar_59749;
	bool cppVar_59752 = (cppVar_59750 == 139);
	BIT_VEC cppVar_59753 = PC + 1;
	cppVar_59753 = (cppVar_59753 & cppMask_un_16_);
	BIT_VEC cppVar_59754 = ROM.rd(cppVar_59753);
	BIT_VEC cppVar_59755 = (cppVar_59754 >> 7) & cppMask_un_1_;
	bool cppVar_59756 = (cppVar_59755 == 1);
	BIT_VEC cppVar_59757 = PC + 1;
	cppVar_59757 = (cppVar_59757 & cppMask_un_16_);
	BIT_VEC cppVar_59758 = ROM.rd(cppVar_59757);
	BIT_VEC cppVar_59759 = (cppVar_59758 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59760 = (cppVar_59759 << 3) | 0;
	cppVar_59760 = (cppVar_59760 & cppMask_un_8_);
	BIT_VEC cppVar_59761 = PC + 1;
	cppVar_59761 = (cppVar_59761 & cppMask_un_16_);
	BIT_VEC cppVar_59762 = ROM.rd(cppVar_59761);
	BIT_VEC cppVar_59763 = (cppVar_59762 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59764 = (cppVar_59763 & cppMask_un_5_);
	BIT_VEC cppVar_59765 = cppVar_59764 + 32;
	cppVar_59765 = (cppVar_59765 & cppMask_un_8_);
	BIT_VEC cppVar_59766 = (cppVar_59756) ? cppVar_59760 : cppVar_59765;
	bool cppVar_59768 = (cppVar_59766 == 141);
	BIT_VEC cppVar_59769 = PC + 1;
	cppVar_59769 = (cppVar_59769 & cppMask_un_16_);
	BIT_VEC cppVar_59770 = ROM.rd(cppVar_59769);
	BIT_VEC cppVar_59771 = (cppVar_59770 >> 7) & cppMask_un_1_;
	bool cppVar_59772 = (cppVar_59771 == 1);
	BIT_VEC cppVar_59773 = PC + 1;
	cppVar_59773 = (cppVar_59773 & cppMask_un_16_);
	BIT_VEC cppVar_59774 = ROM.rd(cppVar_59773);
	BIT_VEC cppVar_59775 = (cppVar_59774 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59776 = (cppVar_59775 << 3) | 0;
	cppVar_59776 = (cppVar_59776 & cppMask_un_8_);
	BIT_VEC cppVar_59777 = PC + 1;
	cppVar_59777 = (cppVar_59777 & cppMask_un_16_);
	BIT_VEC cppVar_59778 = ROM.rd(cppVar_59777);
	BIT_VEC cppVar_59779 = (cppVar_59778 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59780 = (cppVar_59779 & cppMask_un_5_);
	BIT_VEC cppVar_59781 = cppVar_59780 + 32;
	cppVar_59781 = (cppVar_59781 & cppMask_un_8_);
	BIT_VEC cppVar_59782 = (cppVar_59772) ? cppVar_59776 : cppVar_59781;
	bool cppVar_59784 = (cppVar_59782 == 144);
	BIT_VEC cppVar_59785 = PC + 1;
	cppVar_59785 = (cppVar_59785 & cppMask_un_16_);
	BIT_VEC cppVar_59786 = ROM.rd(cppVar_59785);
	BIT_VEC cppVar_59787 = (cppVar_59786 >> 7) & cppMask_un_1_;
	bool cppVar_59788 = (cppVar_59787 == 1);
	BIT_VEC cppVar_59789 = PC + 1;
	cppVar_59789 = (cppVar_59789 & cppMask_un_16_);
	BIT_VEC cppVar_59790 = ROM.rd(cppVar_59789);
	BIT_VEC cppVar_59791 = (cppVar_59790 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59792 = (cppVar_59791 << 3) | 0;
	cppVar_59792 = (cppVar_59792 & cppMask_un_8_);
	BIT_VEC cppVar_59793 = PC + 1;
	cppVar_59793 = (cppVar_59793 & cppMask_un_16_);
	BIT_VEC cppVar_59794 = ROM.rd(cppVar_59793);
	BIT_VEC cppVar_59795 = (cppVar_59794 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59796 = (cppVar_59795 & cppMask_un_5_);
	BIT_VEC cppVar_59797 = cppVar_59796 + 32;
	cppVar_59797 = (cppVar_59797 & cppMask_un_8_);
	BIT_VEC cppVar_59798 = (cppVar_59788) ? cppVar_59792 : cppVar_59797;
	bool cppVar_59800 = (cppVar_59798 == 152);
	BIT_VEC cppVar_59801 = PC + 1;
	cppVar_59801 = (cppVar_59801 & cppMask_un_16_);
	BIT_VEC cppVar_59802 = ROM.rd(cppVar_59801);
	BIT_VEC cppVar_59803 = (cppVar_59802 >> 7) & cppMask_un_1_;
	bool cppVar_59804 = (cppVar_59803 == 1);
	BIT_VEC cppVar_59805 = PC + 1;
	cppVar_59805 = (cppVar_59805 & cppMask_un_16_);
	BIT_VEC cppVar_59806 = ROM.rd(cppVar_59805);
	BIT_VEC cppVar_59807 = (cppVar_59806 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59808 = (cppVar_59807 << 3) | 0;
	cppVar_59808 = (cppVar_59808 & cppMask_un_8_);
	BIT_VEC cppVar_59809 = PC + 1;
	cppVar_59809 = (cppVar_59809 & cppMask_un_16_);
	BIT_VEC cppVar_59810 = ROM.rd(cppVar_59809);
	BIT_VEC cppVar_59811 = (cppVar_59810 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59812 = (cppVar_59811 & cppMask_un_5_);
	BIT_VEC cppVar_59813 = cppVar_59812 + 32;
	cppVar_59813 = (cppVar_59813 & cppMask_un_8_);
	BIT_VEC cppVar_59814 = (cppVar_59804) ? cppVar_59808 : cppVar_59813;
	bool cppVar_59816 = (cppVar_59814 == 153);
	BIT_VEC cppVar_59817 = PC + 1;
	cppVar_59817 = (cppVar_59817 & cppMask_un_16_);
	BIT_VEC cppVar_59818 = ROM.rd(cppVar_59817);
	BIT_VEC cppVar_59819 = (cppVar_59818 >> 7) & cppMask_un_1_;
	bool cppVar_59820 = (cppVar_59819 == 1);
	BIT_VEC cppVar_59821 = PC + 1;
	cppVar_59821 = (cppVar_59821 & cppMask_un_16_);
	BIT_VEC cppVar_59822 = ROM.rd(cppVar_59821);
	BIT_VEC cppVar_59823 = (cppVar_59822 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59824 = (cppVar_59823 << 3) | 0;
	cppVar_59824 = (cppVar_59824 & cppMask_un_8_);
	BIT_VEC cppVar_59825 = PC + 1;
	cppVar_59825 = (cppVar_59825 & cppMask_un_16_);
	BIT_VEC cppVar_59826 = ROM.rd(cppVar_59825);
	BIT_VEC cppVar_59827 = (cppVar_59826 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59828 = (cppVar_59827 & cppMask_un_5_);
	BIT_VEC cppVar_59829 = cppVar_59828 + 32;
	cppVar_59829 = (cppVar_59829 & cppMask_un_8_);
	BIT_VEC cppVar_59830 = (cppVar_59820) ? cppVar_59824 : cppVar_59829;
	bool cppVar_59832 = (cppVar_59830 == 160);
	BIT_VEC cppVar_59833 = PC + 1;
	cppVar_59833 = (cppVar_59833 & cppMask_un_16_);
	BIT_VEC cppVar_59834 = ROM.rd(cppVar_59833);
	BIT_VEC cppVar_59835 = (cppVar_59834 >> 7) & cppMask_un_1_;
	bool cppVar_59836 = (cppVar_59835 == 1);
	BIT_VEC cppVar_59837 = PC + 1;
	cppVar_59837 = (cppVar_59837 & cppMask_un_16_);
	BIT_VEC cppVar_59838 = ROM.rd(cppVar_59837);
	BIT_VEC cppVar_59839 = (cppVar_59838 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59840 = (cppVar_59839 << 3) | 0;
	cppVar_59840 = (cppVar_59840 & cppMask_un_8_);
	BIT_VEC cppVar_59841 = PC + 1;
	cppVar_59841 = (cppVar_59841 & cppMask_un_16_);
	BIT_VEC cppVar_59842 = ROM.rd(cppVar_59841);
	BIT_VEC cppVar_59843 = (cppVar_59842 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59844 = (cppVar_59843 & cppMask_un_5_);
	BIT_VEC cppVar_59845 = cppVar_59844 + 32;
	cppVar_59845 = (cppVar_59845 & cppMask_un_8_);
	BIT_VEC cppVar_59846 = (cppVar_59836) ? cppVar_59840 : cppVar_59845;
	bool cppVar_59848 = (cppVar_59846 == 168);
	BIT_VEC cppVar_59849 = PC + 1;
	cppVar_59849 = (cppVar_59849 & cppMask_un_16_);
	BIT_VEC cppVar_59850 = ROM.rd(cppVar_59849);
	BIT_VEC cppVar_59851 = (cppVar_59850 >> 7) & cppMask_un_1_;
	bool cppVar_59852 = (cppVar_59851 == 1);
	BIT_VEC cppVar_59853 = PC + 1;
	cppVar_59853 = (cppVar_59853 & cppMask_un_16_);
	BIT_VEC cppVar_59854 = ROM.rd(cppVar_59853);
	BIT_VEC cppVar_59855 = (cppVar_59854 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59856 = (cppVar_59855 << 3) | 0;
	cppVar_59856 = (cppVar_59856 & cppMask_un_8_);
	BIT_VEC cppVar_59857 = PC + 1;
	cppVar_59857 = (cppVar_59857 & cppMask_un_16_);
	BIT_VEC cppVar_59858 = ROM.rd(cppVar_59857);
	BIT_VEC cppVar_59859 = (cppVar_59858 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59860 = (cppVar_59859 & cppMask_un_5_);
	BIT_VEC cppVar_59861 = cppVar_59860 + 32;
	cppVar_59861 = (cppVar_59861 & cppMask_un_8_);
	BIT_VEC cppVar_59862 = (cppVar_59852) ? cppVar_59856 : cppVar_59861;
	bool cppVar_59864 = (cppVar_59862 == 176);
	BIT_VEC cppVar_59865 = PC + 1;
	cppVar_59865 = (cppVar_59865 & cppMask_un_16_);
	BIT_VEC cppVar_59866 = ROM.rd(cppVar_59865);
	BIT_VEC cppVar_59867 = (cppVar_59866 >> 7) & cppMask_un_1_;
	bool cppVar_59868 = (cppVar_59867 == 1);
	BIT_VEC cppVar_59869 = PC + 1;
	cppVar_59869 = (cppVar_59869 & cppMask_un_16_);
	BIT_VEC cppVar_59870 = ROM.rd(cppVar_59869);
	BIT_VEC cppVar_59871 = (cppVar_59870 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59872 = (cppVar_59871 << 3) | 0;
	cppVar_59872 = (cppVar_59872 & cppMask_un_8_);
	BIT_VEC cppVar_59873 = PC + 1;
	cppVar_59873 = (cppVar_59873 & cppMask_un_16_);
	BIT_VEC cppVar_59874 = ROM.rd(cppVar_59873);
	BIT_VEC cppVar_59875 = (cppVar_59874 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59876 = (cppVar_59875 & cppMask_un_5_);
	BIT_VEC cppVar_59877 = cppVar_59876 + 32;
	cppVar_59877 = (cppVar_59877 & cppMask_un_8_);
	BIT_VEC cppVar_59878 = (cppVar_59868) ? cppVar_59872 : cppVar_59877;
	bool cppVar_59880 = (cppVar_59878 == 184);
	BIT_VEC cppVar_59881 = PC + 1;
	cppVar_59881 = (cppVar_59881 & cppMask_un_16_);
	BIT_VEC cppVar_59882 = ROM.rd(cppVar_59881);
	BIT_VEC cppVar_59883 = (cppVar_59882 >> 7) & cppMask_un_1_;
	bool cppVar_59884 = (cppVar_59883 == 1);
	BIT_VEC cppVar_59885 = PC + 1;
	cppVar_59885 = (cppVar_59885 & cppMask_un_16_);
	BIT_VEC cppVar_59886 = ROM.rd(cppVar_59885);
	BIT_VEC cppVar_59887 = (cppVar_59886 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59888 = (cppVar_59887 << 3) | 0;
	cppVar_59888 = (cppVar_59888 & cppMask_un_8_);
	BIT_VEC cppVar_59889 = PC + 1;
	cppVar_59889 = (cppVar_59889 & cppMask_un_16_);
	BIT_VEC cppVar_59890 = ROM.rd(cppVar_59889);
	BIT_VEC cppVar_59891 = (cppVar_59890 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59892 = (cppVar_59891 & cppMask_un_5_);
	BIT_VEC cppVar_59893 = cppVar_59892 + 32;
	cppVar_59893 = (cppVar_59893 & cppMask_un_8_);
	BIT_VEC cppVar_59894 = (cppVar_59884) ? cppVar_59888 : cppVar_59893;
	bool cppVar_59896 = (cppVar_59894 == 208);
	BIT_VEC cppVar_59897 = PC + 1;
	cppVar_59897 = (cppVar_59897 & cppMask_un_16_);
	BIT_VEC cppVar_59898 = ROM.rd(cppVar_59897);
	BIT_VEC cppVar_59899 = (cppVar_59898 >> 7) & cppMask_un_1_;
	bool cppVar_59900 = (cppVar_59899 == 1);
	BIT_VEC cppVar_59901 = PC + 1;
	cppVar_59901 = (cppVar_59901 & cppMask_un_16_);
	BIT_VEC cppVar_59902 = ROM.rd(cppVar_59901);
	BIT_VEC cppVar_59903 = (cppVar_59902 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59904 = (cppVar_59903 << 3) | 0;
	cppVar_59904 = (cppVar_59904 & cppMask_un_8_);
	BIT_VEC cppVar_59905 = PC + 1;
	cppVar_59905 = (cppVar_59905 & cppMask_un_16_);
	BIT_VEC cppVar_59906 = ROM.rd(cppVar_59905);
	BIT_VEC cppVar_59907 = (cppVar_59906 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59908 = (cppVar_59907 & cppMask_un_5_);
	BIT_VEC cppVar_59909 = cppVar_59908 + 32;
	cppVar_59909 = (cppVar_59909 & cppMask_un_8_);
	BIT_VEC cppVar_59910 = (cppVar_59900) ? cppVar_59904 : cppVar_59909;
	bool cppVar_59912 = (cppVar_59910 == 224);
	BIT_VEC cppVar_59913 = PC + 1;
	cppVar_59913 = (cppVar_59913 & cppMask_un_16_);
	BIT_VEC cppVar_59914 = ROM.rd(cppVar_59913);
	BIT_VEC cppVar_59915 = (cppVar_59914 >> 7) & cppMask_un_1_;
	bool cppVar_59916 = (cppVar_59915 == 1);
	BIT_VEC cppVar_59917 = PC + 1;
	cppVar_59917 = (cppVar_59917 & cppMask_un_16_);
	BIT_VEC cppVar_59918 = ROM.rd(cppVar_59917);
	BIT_VEC cppVar_59919 = (cppVar_59918 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59920 = (cppVar_59919 << 3) | 0;
	cppVar_59920 = (cppVar_59920 & cppMask_un_8_);
	BIT_VEC cppVar_59921 = PC + 1;
	cppVar_59921 = (cppVar_59921 & cppMask_un_16_);
	BIT_VEC cppVar_59922 = ROM.rd(cppVar_59921);
	BIT_VEC cppVar_59923 = (cppVar_59922 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59924 = (cppVar_59923 & cppMask_un_5_);
	BIT_VEC cppVar_59925 = cppVar_59924 + 32;
	cppVar_59925 = (cppVar_59925 & cppMask_un_8_);
	BIT_VEC cppVar_59926 = (cppVar_59916) ? cppVar_59920 : cppVar_59925;
	bool cppVar_59928 = (cppVar_59926 == 240);
	BIT_VEC cppVar_59930 = (cppVar_59928) ? B : 0;
	BIT_VEC cppVar_59931 = (cppVar_59912) ? ACC : cppVar_59930;
	BIT_VEC cppVar_59932 = (cppVar_59896) ? PSW : cppVar_59931;
	BIT_VEC cppVar_59933 = (cppVar_59880) ? IP : cppVar_59932;
	BIT_VEC cppVar_59934 = (cppVar_59864) ? P3 : cppVar_59933;
	BIT_VEC cppVar_59935 = (cppVar_59848) ? IE : cppVar_59934;
	BIT_VEC cppVar_59936 = (cppVar_59832) ? P2 : cppVar_59935;
	BIT_VEC cppVar_59937 = (cppVar_59816) ? SBUF : cppVar_59936;
	BIT_VEC cppVar_59938 = (cppVar_59800) ? SCON : cppVar_59937;
	BIT_VEC cppVar_59939 = (cppVar_59784) ? P1 : cppVar_59938;
	BIT_VEC cppVar_59940 = (cppVar_59768) ? TH1 : cppVar_59939;
	BIT_VEC cppVar_59941 = (cppVar_59752) ? TL1 : cppVar_59940;
	BIT_VEC cppVar_59942 = (cppVar_59736) ? TH0 : cppVar_59941;
	BIT_VEC cppVar_59943 = (cppVar_59720) ? TL0 : cppVar_59942;
	BIT_VEC cppVar_59944 = (cppVar_59704) ? TMOD : cppVar_59943;
	BIT_VEC cppVar_59945 = (cppVar_59688) ? TCON : cppVar_59944;
	BIT_VEC cppVar_59946 = (cppVar_59672) ? PCON : cppVar_59945;
	BIT_VEC cppVar_59947 = (cppVar_59656) ? DPH : cppVar_59946;
	BIT_VEC cppVar_59948 = (cppVar_59640) ? DPL : cppVar_59947;
	BIT_VEC cppVar_59949 = (cppVar_59624) ? SP : cppVar_59948;
	BIT_VEC cppVar_59950 = (cppVar_59608) ? P0 : cppVar_59949;
	BIT_VEC cppVar_59951 = (cppVar_59577) ? cppVar_59592 : cppVar_59950;
	BIT_VEC cppVar_59952 = cppVar_59560 & cppVar_59951;
	BIT_VEC cppVar_59954 = 1;
	BIT_VEC cppVar_59955 = PC + 1;
	cppVar_59955 = (cppVar_59955 & cppMask_un_16_);
	BIT_VEC cppVar_59956 = ROM.rd(cppVar_59955);
	BIT_VEC cppVar_59957 = (cppVar_59956 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_59958 = (cppVar_59957 & cppMask_un_3_);
	BIT_VEC cppVar_59959 = cppVar_59954 << static_cast<unsigned>(cppVar_59958);
	cppVar_59959 = (cppVar_59959 & cppMask_un_8_);
	BIT_VEC cppVar_59960 = cppVar_59952 | cppVar_59959;
	BIT_VEC cppVar_59961 = (cppVar_59553) ? cppVar_59960 : SCON;
	BIT_VEC cppVar_59962 = ROM.rd(PC);
	bool cppVar_59964 = (cppVar_59962 == 208);
	BIT_VEC cppVar_59966 = PC + 1;
	cppVar_59966 = (cppVar_59966 & cppMask_un_16_);
	BIT_VEC cppVar_59967 = ROM.rd(cppVar_59966);
	bool cppVar_59969 = (cppVar_59967 == 152);
	BIT_VEC cppVar_59970 = IRAM.rd(SP);
	BIT_VEC cppVar_59971 = (cppVar_59969) ? cppVar_59970 : SCON;
	BIT_VEC cppVar_59972 = ROM.rd(PC);
	bool cppVar_59974 = (cppVar_59972 == 245);
	BIT_VEC cppVar_59975 = ROM.rd(PC);
	bool cppVar_59977 = (cppVar_59975 == 197);
	bool cppVar_59978 = cppVar_59974 || cppVar_59977;
	BIT_VEC cppVar_59980 = PC + 1;
	cppVar_59980 = (cppVar_59980 & cppMask_un_16_);
	BIT_VEC cppVar_59981 = ROM.rd(cppVar_59980);
	bool cppVar_59983 = (cppVar_59981 == 152);
	BIT_VEC cppVar_59984 = (cppVar_59983) ? ACC : SCON;
	BIT_VEC cppVar_59985 = ROM.rd(PC);
	bool cppVar_59987 = (cppVar_59985 == 178);
	BIT_VEC cppVar_59989 = PC + 1;
	cppVar_59989 = (cppVar_59989 & cppMask_un_16_);
	BIT_VEC cppVar_59990 = ROM.rd(cppVar_59989);
	BIT_VEC cppVar_59991 = (cppVar_59990 >> 7) & cppMask_un_1_;
	bool cppVar_59993 = (cppVar_59991 == 1);
	BIT_VEC cppVar_59994 = PC + 1;
	cppVar_59994 = (cppVar_59994 & cppMask_un_16_);
	BIT_VEC cppVar_59995 = ROM.rd(cppVar_59994);
	BIT_VEC cppVar_59996 = (cppVar_59995 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_59998 = (cppVar_59996 << 3) | 0;
	cppVar_59998 = (cppVar_59998 & cppMask_un_8_);
	BIT_VEC cppVar_59999 = PC + 1;
	cppVar_59999 = (cppVar_59999 & cppMask_un_16_);
	BIT_VEC cppVar_60000 = ROM.rd(cppVar_59999);
	BIT_VEC cppVar_60001 = (cppVar_60000 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60002 = (cppVar_60001 & cppMask_un_5_);
	BIT_VEC cppVar_60004 = cppVar_60002 + 32;
	cppVar_60004 = (cppVar_60004 & cppMask_un_8_);
	BIT_VEC cppVar_60005 = (cppVar_59993) ? cppVar_59998 : cppVar_60004;
	bool cppVar_60007 = (cppVar_60005 == 152);
	BIT_VEC cppVar_60009 = PC + 1;
	cppVar_60009 = (cppVar_60009 & cppMask_un_16_);
	BIT_VEC cppVar_60010 = ROM.rd(cppVar_60009);
	BIT_VEC cppVar_60011 = (cppVar_60010 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_60012 = (cppVar_60011 & cppMask_un_3_);
	BIT_VEC cppVar_60013 = 1 << static_cast<unsigned>(cppVar_60012);
	cppVar_60013 = (cppVar_60013 & cppMask_un_8_);
	BIT_VEC cppVar_60014 = ~cppVar_60013;
	BIT_VEC cppVar_60015 = PC + 1;
	cppVar_60015 = (cppVar_60015 & cppMask_un_16_);
	BIT_VEC cppVar_60016 = ROM.rd(cppVar_60015);
	BIT_VEC cppVar_60017 = (cppVar_60016 >> 7) & cppMask_un_1_;
	bool cppVar_60018 = (cppVar_60017 == 1);
	BIT_VEC cppVar_60019 = PC + 1;
	cppVar_60019 = (cppVar_60019 & cppMask_un_16_);
	BIT_VEC cppVar_60020 = ROM.rd(cppVar_60019);
	BIT_VEC cppVar_60021 = (cppVar_60020 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60022 = (cppVar_60021 << 3) | 0;
	cppVar_60022 = (cppVar_60022 & cppMask_un_8_);
	BIT_VEC cppVar_60023 = PC + 1;
	cppVar_60023 = (cppVar_60023 & cppMask_un_16_);
	BIT_VEC cppVar_60024 = ROM.rd(cppVar_60023);
	BIT_VEC cppVar_60025 = (cppVar_60024 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60026 = (cppVar_60025 & cppMask_un_5_);
	BIT_VEC cppVar_60027 = cppVar_60026 + 32;
	cppVar_60027 = (cppVar_60027 & cppMask_un_8_);
	BIT_VEC cppVar_60028 = (cppVar_60018) ? cppVar_60022 : cppVar_60027;
	BIT_VEC cppVar_60029 = (cppVar_60028 >> 7) & cppMask_un_1_;
	bool cppVar_60031 = (cppVar_60029 == 0);
	BIT_VEC cppVar_60032 = PC + 1;
	cppVar_60032 = (cppVar_60032 & cppMask_un_16_);
	BIT_VEC cppVar_60033 = ROM.rd(cppVar_60032);
	BIT_VEC cppVar_60034 = (cppVar_60033 >> 7) & cppMask_un_1_;
	bool cppVar_60035 = (cppVar_60034 == 1);
	BIT_VEC cppVar_60036 = PC + 1;
	cppVar_60036 = (cppVar_60036 & cppMask_un_16_);
	BIT_VEC cppVar_60037 = ROM.rd(cppVar_60036);
	BIT_VEC cppVar_60038 = (cppVar_60037 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60039 = (cppVar_60038 << 3) | 0;
	cppVar_60039 = (cppVar_60039 & cppMask_un_8_);
	BIT_VEC cppVar_60040 = PC + 1;
	cppVar_60040 = (cppVar_60040 & cppMask_un_16_);
	BIT_VEC cppVar_60041 = ROM.rd(cppVar_60040);
	BIT_VEC cppVar_60042 = (cppVar_60041 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60043 = (cppVar_60042 & cppMask_un_5_);
	BIT_VEC cppVar_60044 = cppVar_60043 + 32;
	cppVar_60044 = (cppVar_60044 & cppMask_un_8_);
	BIT_VEC cppVar_60045 = (cppVar_60035) ? cppVar_60039 : cppVar_60044;
	BIT_VEC cppVar_60046 = IRAM.rd(cppVar_60045);
	BIT_VEC cppVar_60047 = PC + 1;
	cppVar_60047 = (cppVar_60047 & cppMask_un_16_);
	BIT_VEC cppVar_60048 = ROM.rd(cppVar_60047);
	BIT_VEC cppVar_60049 = (cppVar_60048 >> 7) & cppMask_un_1_;
	bool cppVar_60050 = (cppVar_60049 == 1);
	BIT_VEC cppVar_60051 = PC + 1;
	cppVar_60051 = (cppVar_60051 & cppMask_un_16_);
	BIT_VEC cppVar_60052 = ROM.rd(cppVar_60051);
	BIT_VEC cppVar_60053 = (cppVar_60052 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60054 = (cppVar_60053 << 3) | 0;
	cppVar_60054 = (cppVar_60054 & cppMask_un_8_);
	BIT_VEC cppVar_60055 = PC + 1;
	cppVar_60055 = (cppVar_60055 & cppMask_un_16_);
	BIT_VEC cppVar_60056 = ROM.rd(cppVar_60055);
	BIT_VEC cppVar_60057 = (cppVar_60056 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60058 = (cppVar_60057 & cppMask_un_5_);
	BIT_VEC cppVar_60059 = cppVar_60058 + 32;
	cppVar_60059 = (cppVar_60059 & cppMask_un_8_);
	BIT_VEC cppVar_60060 = (cppVar_60050) ? cppVar_60054 : cppVar_60059;
	bool cppVar_60062 = (cppVar_60060 == 128);
	BIT_VEC cppVar_60063 = PC + 1;
	cppVar_60063 = (cppVar_60063 & cppMask_un_16_);
	BIT_VEC cppVar_60064 = ROM.rd(cppVar_60063);
	BIT_VEC cppVar_60065 = (cppVar_60064 >> 7) & cppMask_un_1_;
	bool cppVar_60066 = (cppVar_60065 == 1);
	BIT_VEC cppVar_60067 = PC + 1;
	cppVar_60067 = (cppVar_60067 & cppMask_un_16_);
	BIT_VEC cppVar_60068 = ROM.rd(cppVar_60067);
	BIT_VEC cppVar_60069 = (cppVar_60068 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60070 = (cppVar_60069 << 3) | 0;
	cppVar_60070 = (cppVar_60070 & cppMask_un_8_);
	BIT_VEC cppVar_60071 = PC + 1;
	cppVar_60071 = (cppVar_60071 & cppMask_un_16_);
	BIT_VEC cppVar_60072 = ROM.rd(cppVar_60071);
	BIT_VEC cppVar_60073 = (cppVar_60072 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60074 = (cppVar_60073 & cppMask_un_5_);
	BIT_VEC cppVar_60075 = cppVar_60074 + 32;
	cppVar_60075 = (cppVar_60075 & cppMask_un_8_);
	BIT_VEC cppVar_60076 = (cppVar_60066) ? cppVar_60070 : cppVar_60075;
	bool cppVar_60078 = (cppVar_60076 == 129);
	BIT_VEC cppVar_60079 = PC + 1;
	cppVar_60079 = (cppVar_60079 & cppMask_un_16_);
	BIT_VEC cppVar_60080 = ROM.rd(cppVar_60079);
	BIT_VEC cppVar_60081 = (cppVar_60080 >> 7) & cppMask_un_1_;
	bool cppVar_60082 = (cppVar_60081 == 1);
	BIT_VEC cppVar_60083 = PC + 1;
	cppVar_60083 = (cppVar_60083 & cppMask_un_16_);
	BIT_VEC cppVar_60084 = ROM.rd(cppVar_60083);
	BIT_VEC cppVar_60085 = (cppVar_60084 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60086 = (cppVar_60085 << 3) | 0;
	cppVar_60086 = (cppVar_60086 & cppMask_un_8_);
	BIT_VEC cppVar_60087 = PC + 1;
	cppVar_60087 = (cppVar_60087 & cppMask_un_16_);
	BIT_VEC cppVar_60088 = ROM.rd(cppVar_60087);
	BIT_VEC cppVar_60089 = (cppVar_60088 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60090 = (cppVar_60089 & cppMask_un_5_);
	BIT_VEC cppVar_60091 = cppVar_60090 + 32;
	cppVar_60091 = (cppVar_60091 & cppMask_un_8_);
	BIT_VEC cppVar_60092 = (cppVar_60082) ? cppVar_60086 : cppVar_60091;
	bool cppVar_60094 = (cppVar_60092 == 130);
	BIT_VEC cppVar_60095 = PC + 1;
	cppVar_60095 = (cppVar_60095 & cppMask_un_16_);
	BIT_VEC cppVar_60096 = ROM.rd(cppVar_60095);
	BIT_VEC cppVar_60097 = (cppVar_60096 >> 7) & cppMask_un_1_;
	bool cppVar_60098 = (cppVar_60097 == 1);
	BIT_VEC cppVar_60099 = PC + 1;
	cppVar_60099 = (cppVar_60099 & cppMask_un_16_);
	BIT_VEC cppVar_60100 = ROM.rd(cppVar_60099);
	BIT_VEC cppVar_60101 = (cppVar_60100 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60102 = (cppVar_60101 << 3) | 0;
	cppVar_60102 = (cppVar_60102 & cppMask_un_8_);
	BIT_VEC cppVar_60103 = PC + 1;
	cppVar_60103 = (cppVar_60103 & cppMask_un_16_);
	BIT_VEC cppVar_60104 = ROM.rd(cppVar_60103);
	BIT_VEC cppVar_60105 = (cppVar_60104 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60106 = (cppVar_60105 & cppMask_un_5_);
	BIT_VEC cppVar_60107 = cppVar_60106 + 32;
	cppVar_60107 = (cppVar_60107 & cppMask_un_8_);
	BIT_VEC cppVar_60108 = (cppVar_60098) ? cppVar_60102 : cppVar_60107;
	bool cppVar_60110 = (cppVar_60108 == 131);
	BIT_VEC cppVar_60111 = PC + 1;
	cppVar_60111 = (cppVar_60111 & cppMask_un_16_);
	BIT_VEC cppVar_60112 = ROM.rd(cppVar_60111);
	BIT_VEC cppVar_60113 = (cppVar_60112 >> 7) & cppMask_un_1_;
	bool cppVar_60114 = (cppVar_60113 == 1);
	BIT_VEC cppVar_60115 = PC + 1;
	cppVar_60115 = (cppVar_60115 & cppMask_un_16_);
	BIT_VEC cppVar_60116 = ROM.rd(cppVar_60115);
	BIT_VEC cppVar_60117 = (cppVar_60116 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60118 = (cppVar_60117 << 3) | 0;
	cppVar_60118 = (cppVar_60118 & cppMask_un_8_);
	BIT_VEC cppVar_60119 = PC + 1;
	cppVar_60119 = (cppVar_60119 & cppMask_un_16_);
	BIT_VEC cppVar_60120 = ROM.rd(cppVar_60119);
	BIT_VEC cppVar_60121 = (cppVar_60120 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60122 = (cppVar_60121 & cppMask_un_5_);
	BIT_VEC cppVar_60123 = cppVar_60122 + 32;
	cppVar_60123 = (cppVar_60123 & cppMask_un_8_);
	BIT_VEC cppVar_60124 = (cppVar_60114) ? cppVar_60118 : cppVar_60123;
	bool cppVar_60126 = (cppVar_60124 == 135);
	BIT_VEC cppVar_60127 = PC + 1;
	cppVar_60127 = (cppVar_60127 & cppMask_un_16_);
	BIT_VEC cppVar_60128 = ROM.rd(cppVar_60127);
	BIT_VEC cppVar_60129 = (cppVar_60128 >> 7) & cppMask_un_1_;
	bool cppVar_60130 = (cppVar_60129 == 1);
	BIT_VEC cppVar_60131 = PC + 1;
	cppVar_60131 = (cppVar_60131 & cppMask_un_16_);
	BIT_VEC cppVar_60132 = ROM.rd(cppVar_60131);
	BIT_VEC cppVar_60133 = (cppVar_60132 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60134 = (cppVar_60133 << 3) | 0;
	cppVar_60134 = (cppVar_60134 & cppMask_un_8_);
	BIT_VEC cppVar_60135 = PC + 1;
	cppVar_60135 = (cppVar_60135 & cppMask_un_16_);
	BIT_VEC cppVar_60136 = ROM.rd(cppVar_60135);
	BIT_VEC cppVar_60137 = (cppVar_60136 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60138 = (cppVar_60137 & cppMask_un_5_);
	BIT_VEC cppVar_60139 = cppVar_60138 + 32;
	cppVar_60139 = (cppVar_60139 & cppMask_un_8_);
	BIT_VEC cppVar_60140 = (cppVar_60130) ? cppVar_60134 : cppVar_60139;
	bool cppVar_60142 = (cppVar_60140 == 136);
	BIT_VEC cppVar_60143 = PC + 1;
	cppVar_60143 = (cppVar_60143 & cppMask_un_16_);
	BIT_VEC cppVar_60144 = ROM.rd(cppVar_60143);
	BIT_VEC cppVar_60145 = (cppVar_60144 >> 7) & cppMask_un_1_;
	bool cppVar_60146 = (cppVar_60145 == 1);
	BIT_VEC cppVar_60147 = PC + 1;
	cppVar_60147 = (cppVar_60147 & cppMask_un_16_);
	BIT_VEC cppVar_60148 = ROM.rd(cppVar_60147);
	BIT_VEC cppVar_60149 = (cppVar_60148 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60150 = (cppVar_60149 << 3) | 0;
	cppVar_60150 = (cppVar_60150 & cppMask_un_8_);
	BIT_VEC cppVar_60151 = PC + 1;
	cppVar_60151 = (cppVar_60151 & cppMask_un_16_);
	BIT_VEC cppVar_60152 = ROM.rd(cppVar_60151);
	BIT_VEC cppVar_60153 = (cppVar_60152 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60154 = (cppVar_60153 & cppMask_un_5_);
	BIT_VEC cppVar_60155 = cppVar_60154 + 32;
	cppVar_60155 = (cppVar_60155 & cppMask_un_8_);
	BIT_VEC cppVar_60156 = (cppVar_60146) ? cppVar_60150 : cppVar_60155;
	bool cppVar_60158 = (cppVar_60156 == 137);
	BIT_VEC cppVar_60159 = PC + 1;
	cppVar_60159 = (cppVar_60159 & cppMask_un_16_);
	BIT_VEC cppVar_60160 = ROM.rd(cppVar_60159);
	BIT_VEC cppVar_60161 = (cppVar_60160 >> 7) & cppMask_un_1_;
	bool cppVar_60162 = (cppVar_60161 == 1);
	BIT_VEC cppVar_60163 = PC + 1;
	cppVar_60163 = (cppVar_60163 & cppMask_un_16_);
	BIT_VEC cppVar_60164 = ROM.rd(cppVar_60163);
	BIT_VEC cppVar_60165 = (cppVar_60164 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60166 = (cppVar_60165 << 3) | 0;
	cppVar_60166 = (cppVar_60166 & cppMask_un_8_);
	BIT_VEC cppVar_60167 = PC + 1;
	cppVar_60167 = (cppVar_60167 & cppMask_un_16_);
	BIT_VEC cppVar_60168 = ROM.rd(cppVar_60167);
	BIT_VEC cppVar_60169 = (cppVar_60168 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60170 = (cppVar_60169 & cppMask_un_5_);
	BIT_VEC cppVar_60171 = cppVar_60170 + 32;
	cppVar_60171 = (cppVar_60171 & cppMask_un_8_);
	BIT_VEC cppVar_60172 = (cppVar_60162) ? cppVar_60166 : cppVar_60171;
	bool cppVar_60174 = (cppVar_60172 == 138);
	BIT_VEC cppVar_60175 = PC + 1;
	cppVar_60175 = (cppVar_60175 & cppMask_un_16_);
	BIT_VEC cppVar_60176 = ROM.rd(cppVar_60175);
	BIT_VEC cppVar_60177 = (cppVar_60176 >> 7) & cppMask_un_1_;
	bool cppVar_60178 = (cppVar_60177 == 1);
	BIT_VEC cppVar_60179 = PC + 1;
	cppVar_60179 = (cppVar_60179 & cppMask_un_16_);
	BIT_VEC cppVar_60180 = ROM.rd(cppVar_60179);
	BIT_VEC cppVar_60181 = (cppVar_60180 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60182 = (cppVar_60181 << 3) | 0;
	cppVar_60182 = (cppVar_60182 & cppMask_un_8_);
	BIT_VEC cppVar_60183 = PC + 1;
	cppVar_60183 = (cppVar_60183 & cppMask_un_16_);
	BIT_VEC cppVar_60184 = ROM.rd(cppVar_60183);
	BIT_VEC cppVar_60185 = (cppVar_60184 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60186 = (cppVar_60185 & cppMask_un_5_);
	BIT_VEC cppVar_60187 = cppVar_60186 + 32;
	cppVar_60187 = (cppVar_60187 & cppMask_un_8_);
	BIT_VEC cppVar_60188 = (cppVar_60178) ? cppVar_60182 : cppVar_60187;
	bool cppVar_60190 = (cppVar_60188 == 140);
	BIT_VEC cppVar_60191 = PC + 1;
	cppVar_60191 = (cppVar_60191 & cppMask_un_16_);
	BIT_VEC cppVar_60192 = ROM.rd(cppVar_60191);
	BIT_VEC cppVar_60193 = (cppVar_60192 >> 7) & cppMask_un_1_;
	bool cppVar_60194 = (cppVar_60193 == 1);
	BIT_VEC cppVar_60195 = PC + 1;
	cppVar_60195 = (cppVar_60195 & cppMask_un_16_);
	BIT_VEC cppVar_60196 = ROM.rd(cppVar_60195);
	BIT_VEC cppVar_60197 = (cppVar_60196 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60198 = (cppVar_60197 << 3) | 0;
	cppVar_60198 = (cppVar_60198 & cppMask_un_8_);
	BIT_VEC cppVar_60199 = PC + 1;
	cppVar_60199 = (cppVar_60199 & cppMask_un_16_);
	BIT_VEC cppVar_60200 = ROM.rd(cppVar_60199);
	BIT_VEC cppVar_60201 = (cppVar_60200 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60202 = (cppVar_60201 & cppMask_un_5_);
	BIT_VEC cppVar_60203 = cppVar_60202 + 32;
	cppVar_60203 = (cppVar_60203 & cppMask_un_8_);
	BIT_VEC cppVar_60204 = (cppVar_60194) ? cppVar_60198 : cppVar_60203;
	bool cppVar_60206 = (cppVar_60204 == 139);
	BIT_VEC cppVar_60207 = PC + 1;
	cppVar_60207 = (cppVar_60207 & cppMask_un_16_);
	BIT_VEC cppVar_60208 = ROM.rd(cppVar_60207);
	BIT_VEC cppVar_60209 = (cppVar_60208 >> 7) & cppMask_un_1_;
	bool cppVar_60210 = (cppVar_60209 == 1);
	BIT_VEC cppVar_60211 = PC + 1;
	cppVar_60211 = (cppVar_60211 & cppMask_un_16_);
	BIT_VEC cppVar_60212 = ROM.rd(cppVar_60211);
	BIT_VEC cppVar_60213 = (cppVar_60212 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60214 = (cppVar_60213 << 3) | 0;
	cppVar_60214 = (cppVar_60214 & cppMask_un_8_);
	BIT_VEC cppVar_60215 = PC + 1;
	cppVar_60215 = (cppVar_60215 & cppMask_un_16_);
	BIT_VEC cppVar_60216 = ROM.rd(cppVar_60215);
	BIT_VEC cppVar_60217 = (cppVar_60216 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60218 = (cppVar_60217 & cppMask_un_5_);
	BIT_VEC cppVar_60219 = cppVar_60218 + 32;
	cppVar_60219 = (cppVar_60219 & cppMask_un_8_);
	BIT_VEC cppVar_60220 = (cppVar_60210) ? cppVar_60214 : cppVar_60219;
	bool cppVar_60222 = (cppVar_60220 == 141);
	BIT_VEC cppVar_60223 = PC + 1;
	cppVar_60223 = (cppVar_60223 & cppMask_un_16_);
	BIT_VEC cppVar_60224 = ROM.rd(cppVar_60223);
	BIT_VEC cppVar_60225 = (cppVar_60224 >> 7) & cppMask_un_1_;
	bool cppVar_60226 = (cppVar_60225 == 1);
	BIT_VEC cppVar_60227 = PC + 1;
	cppVar_60227 = (cppVar_60227 & cppMask_un_16_);
	BIT_VEC cppVar_60228 = ROM.rd(cppVar_60227);
	BIT_VEC cppVar_60229 = (cppVar_60228 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60230 = (cppVar_60229 << 3) | 0;
	cppVar_60230 = (cppVar_60230 & cppMask_un_8_);
	BIT_VEC cppVar_60231 = PC + 1;
	cppVar_60231 = (cppVar_60231 & cppMask_un_16_);
	BIT_VEC cppVar_60232 = ROM.rd(cppVar_60231);
	BIT_VEC cppVar_60233 = (cppVar_60232 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60234 = (cppVar_60233 & cppMask_un_5_);
	BIT_VEC cppVar_60235 = cppVar_60234 + 32;
	cppVar_60235 = (cppVar_60235 & cppMask_un_8_);
	BIT_VEC cppVar_60236 = (cppVar_60226) ? cppVar_60230 : cppVar_60235;
	bool cppVar_60238 = (cppVar_60236 == 144);
	BIT_VEC cppVar_60239 = PC + 1;
	cppVar_60239 = (cppVar_60239 & cppMask_un_16_);
	BIT_VEC cppVar_60240 = ROM.rd(cppVar_60239);
	BIT_VEC cppVar_60241 = (cppVar_60240 >> 7) & cppMask_un_1_;
	bool cppVar_60242 = (cppVar_60241 == 1);
	BIT_VEC cppVar_60243 = PC + 1;
	cppVar_60243 = (cppVar_60243 & cppMask_un_16_);
	BIT_VEC cppVar_60244 = ROM.rd(cppVar_60243);
	BIT_VEC cppVar_60245 = (cppVar_60244 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60246 = (cppVar_60245 << 3) | 0;
	cppVar_60246 = (cppVar_60246 & cppMask_un_8_);
	BIT_VEC cppVar_60247 = PC + 1;
	cppVar_60247 = (cppVar_60247 & cppMask_un_16_);
	BIT_VEC cppVar_60248 = ROM.rd(cppVar_60247);
	BIT_VEC cppVar_60249 = (cppVar_60248 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60250 = (cppVar_60249 & cppMask_un_5_);
	BIT_VEC cppVar_60251 = cppVar_60250 + 32;
	cppVar_60251 = (cppVar_60251 & cppMask_un_8_);
	BIT_VEC cppVar_60252 = (cppVar_60242) ? cppVar_60246 : cppVar_60251;
	bool cppVar_60254 = (cppVar_60252 == 152);
	BIT_VEC cppVar_60255 = PC + 1;
	cppVar_60255 = (cppVar_60255 & cppMask_un_16_);
	BIT_VEC cppVar_60256 = ROM.rd(cppVar_60255);
	BIT_VEC cppVar_60257 = (cppVar_60256 >> 7) & cppMask_un_1_;
	bool cppVar_60258 = (cppVar_60257 == 1);
	BIT_VEC cppVar_60259 = PC + 1;
	cppVar_60259 = (cppVar_60259 & cppMask_un_16_);
	BIT_VEC cppVar_60260 = ROM.rd(cppVar_60259);
	BIT_VEC cppVar_60261 = (cppVar_60260 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60262 = (cppVar_60261 << 3) | 0;
	cppVar_60262 = (cppVar_60262 & cppMask_un_8_);
	BIT_VEC cppVar_60263 = PC + 1;
	cppVar_60263 = (cppVar_60263 & cppMask_un_16_);
	BIT_VEC cppVar_60264 = ROM.rd(cppVar_60263);
	BIT_VEC cppVar_60265 = (cppVar_60264 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60266 = (cppVar_60265 & cppMask_un_5_);
	BIT_VEC cppVar_60267 = cppVar_60266 + 32;
	cppVar_60267 = (cppVar_60267 & cppMask_un_8_);
	BIT_VEC cppVar_60268 = (cppVar_60258) ? cppVar_60262 : cppVar_60267;
	bool cppVar_60270 = (cppVar_60268 == 153);
	BIT_VEC cppVar_60271 = PC + 1;
	cppVar_60271 = (cppVar_60271 & cppMask_un_16_);
	BIT_VEC cppVar_60272 = ROM.rd(cppVar_60271);
	BIT_VEC cppVar_60273 = (cppVar_60272 >> 7) & cppMask_un_1_;
	bool cppVar_60274 = (cppVar_60273 == 1);
	BIT_VEC cppVar_60275 = PC + 1;
	cppVar_60275 = (cppVar_60275 & cppMask_un_16_);
	BIT_VEC cppVar_60276 = ROM.rd(cppVar_60275);
	BIT_VEC cppVar_60277 = (cppVar_60276 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60278 = (cppVar_60277 << 3) | 0;
	cppVar_60278 = (cppVar_60278 & cppMask_un_8_);
	BIT_VEC cppVar_60279 = PC + 1;
	cppVar_60279 = (cppVar_60279 & cppMask_un_16_);
	BIT_VEC cppVar_60280 = ROM.rd(cppVar_60279);
	BIT_VEC cppVar_60281 = (cppVar_60280 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60282 = (cppVar_60281 & cppMask_un_5_);
	BIT_VEC cppVar_60283 = cppVar_60282 + 32;
	cppVar_60283 = (cppVar_60283 & cppMask_un_8_);
	BIT_VEC cppVar_60284 = (cppVar_60274) ? cppVar_60278 : cppVar_60283;
	bool cppVar_60286 = (cppVar_60284 == 160);
	BIT_VEC cppVar_60287 = PC + 1;
	cppVar_60287 = (cppVar_60287 & cppMask_un_16_);
	BIT_VEC cppVar_60288 = ROM.rd(cppVar_60287);
	BIT_VEC cppVar_60289 = (cppVar_60288 >> 7) & cppMask_un_1_;
	bool cppVar_60290 = (cppVar_60289 == 1);
	BIT_VEC cppVar_60291 = PC + 1;
	cppVar_60291 = (cppVar_60291 & cppMask_un_16_);
	BIT_VEC cppVar_60292 = ROM.rd(cppVar_60291);
	BIT_VEC cppVar_60293 = (cppVar_60292 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60294 = (cppVar_60293 << 3) | 0;
	cppVar_60294 = (cppVar_60294 & cppMask_un_8_);
	BIT_VEC cppVar_60295 = PC + 1;
	cppVar_60295 = (cppVar_60295 & cppMask_un_16_);
	BIT_VEC cppVar_60296 = ROM.rd(cppVar_60295);
	BIT_VEC cppVar_60297 = (cppVar_60296 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60298 = (cppVar_60297 & cppMask_un_5_);
	BIT_VEC cppVar_60299 = cppVar_60298 + 32;
	cppVar_60299 = (cppVar_60299 & cppMask_un_8_);
	BIT_VEC cppVar_60300 = (cppVar_60290) ? cppVar_60294 : cppVar_60299;
	bool cppVar_60302 = (cppVar_60300 == 168);
	BIT_VEC cppVar_60303 = PC + 1;
	cppVar_60303 = (cppVar_60303 & cppMask_un_16_);
	BIT_VEC cppVar_60304 = ROM.rd(cppVar_60303);
	BIT_VEC cppVar_60305 = (cppVar_60304 >> 7) & cppMask_un_1_;
	bool cppVar_60306 = (cppVar_60305 == 1);
	BIT_VEC cppVar_60307 = PC + 1;
	cppVar_60307 = (cppVar_60307 & cppMask_un_16_);
	BIT_VEC cppVar_60308 = ROM.rd(cppVar_60307);
	BIT_VEC cppVar_60309 = (cppVar_60308 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60310 = (cppVar_60309 << 3) | 0;
	cppVar_60310 = (cppVar_60310 & cppMask_un_8_);
	BIT_VEC cppVar_60311 = PC + 1;
	cppVar_60311 = (cppVar_60311 & cppMask_un_16_);
	BIT_VEC cppVar_60312 = ROM.rd(cppVar_60311);
	BIT_VEC cppVar_60313 = (cppVar_60312 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60314 = (cppVar_60313 & cppMask_un_5_);
	BIT_VEC cppVar_60315 = cppVar_60314 + 32;
	cppVar_60315 = (cppVar_60315 & cppMask_un_8_);
	BIT_VEC cppVar_60316 = (cppVar_60306) ? cppVar_60310 : cppVar_60315;
	bool cppVar_60318 = (cppVar_60316 == 176);
	BIT_VEC cppVar_60319 = PC + 1;
	cppVar_60319 = (cppVar_60319 & cppMask_un_16_);
	BIT_VEC cppVar_60320 = ROM.rd(cppVar_60319);
	BIT_VEC cppVar_60321 = (cppVar_60320 >> 7) & cppMask_un_1_;
	bool cppVar_60322 = (cppVar_60321 == 1);
	BIT_VEC cppVar_60323 = PC + 1;
	cppVar_60323 = (cppVar_60323 & cppMask_un_16_);
	BIT_VEC cppVar_60324 = ROM.rd(cppVar_60323);
	BIT_VEC cppVar_60325 = (cppVar_60324 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60326 = (cppVar_60325 << 3) | 0;
	cppVar_60326 = (cppVar_60326 & cppMask_un_8_);
	BIT_VEC cppVar_60327 = PC + 1;
	cppVar_60327 = (cppVar_60327 & cppMask_un_16_);
	BIT_VEC cppVar_60328 = ROM.rd(cppVar_60327);
	BIT_VEC cppVar_60329 = (cppVar_60328 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60330 = (cppVar_60329 & cppMask_un_5_);
	BIT_VEC cppVar_60331 = cppVar_60330 + 32;
	cppVar_60331 = (cppVar_60331 & cppMask_un_8_);
	BIT_VEC cppVar_60332 = (cppVar_60322) ? cppVar_60326 : cppVar_60331;
	bool cppVar_60334 = (cppVar_60332 == 184);
	BIT_VEC cppVar_60335 = PC + 1;
	cppVar_60335 = (cppVar_60335 & cppMask_un_16_);
	BIT_VEC cppVar_60336 = ROM.rd(cppVar_60335);
	BIT_VEC cppVar_60337 = (cppVar_60336 >> 7) & cppMask_un_1_;
	bool cppVar_60338 = (cppVar_60337 == 1);
	BIT_VEC cppVar_60339 = PC + 1;
	cppVar_60339 = (cppVar_60339 & cppMask_un_16_);
	BIT_VEC cppVar_60340 = ROM.rd(cppVar_60339);
	BIT_VEC cppVar_60341 = (cppVar_60340 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60342 = (cppVar_60341 << 3) | 0;
	cppVar_60342 = (cppVar_60342 & cppMask_un_8_);
	BIT_VEC cppVar_60343 = PC + 1;
	cppVar_60343 = (cppVar_60343 & cppMask_un_16_);
	BIT_VEC cppVar_60344 = ROM.rd(cppVar_60343);
	BIT_VEC cppVar_60345 = (cppVar_60344 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60346 = (cppVar_60345 & cppMask_un_5_);
	BIT_VEC cppVar_60347 = cppVar_60346 + 32;
	cppVar_60347 = (cppVar_60347 & cppMask_un_8_);
	BIT_VEC cppVar_60348 = (cppVar_60338) ? cppVar_60342 : cppVar_60347;
	bool cppVar_60350 = (cppVar_60348 == 208);
	BIT_VEC cppVar_60351 = PC + 1;
	cppVar_60351 = (cppVar_60351 & cppMask_un_16_);
	BIT_VEC cppVar_60352 = ROM.rd(cppVar_60351);
	BIT_VEC cppVar_60353 = (cppVar_60352 >> 7) & cppMask_un_1_;
	bool cppVar_60354 = (cppVar_60353 == 1);
	BIT_VEC cppVar_60355 = PC + 1;
	cppVar_60355 = (cppVar_60355 & cppMask_un_16_);
	BIT_VEC cppVar_60356 = ROM.rd(cppVar_60355);
	BIT_VEC cppVar_60357 = (cppVar_60356 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60358 = (cppVar_60357 << 3) | 0;
	cppVar_60358 = (cppVar_60358 & cppMask_un_8_);
	BIT_VEC cppVar_60359 = PC + 1;
	cppVar_60359 = (cppVar_60359 & cppMask_un_16_);
	BIT_VEC cppVar_60360 = ROM.rd(cppVar_60359);
	BIT_VEC cppVar_60361 = (cppVar_60360 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60362 = (cppVar_60361 & cppMask_un_5_);
	BIT_VEC cppVar_60363 = cppVar_60362 + 32;
	cppVar_60363 = (cppVar_60363 & cppMask_un_8_);
	BIT_VEC cppVar_60364 = (cppVar_60354) ? cppVar_60358 : cppVar_60363;
	bool cppVar_60366 = (cppVar_60364 == 224);
	BIT_VEC cppVar_60367 = PC + 1;
	cppVar_60367 = (cppVar_60367 & cppMask_un_16_);
	BIT_VEC cppVar_60368 = ROM.rd(cppVar_60367);
	BIT_VEC cppVar_60369 = (cppVar_60368 >> 7) & cppMask_un_1_;
	bool cppVar_60370 = (cppVar_60369 == 1);
	BIT_VEC cppVar_60371 = PC + 1;
	cppVar_60371 = (cppVar_60371 & cppMask_un_16_);
	BIT_VEC cppVar_60372 = ROM.rd(cppVar_60371);
	BIT_VEC cppVar_60373 = (cppVar_60372 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60374 = (cppVar_60373 << 3) | 0;
	cppVar_60374 = (cppVar_60374 & cppMask_un_8_);
	BIT_VEC cppVar_60375 = PC + 1;
	cppVar_60375 = (cppVar_60375 & cppMask_un_16_);
	BIT_VEC cppVar_60376 = ROM.rd(cppVar_60375);
	BIT_VEC cppVar_60377 = (cppVar_60376 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60378 = (cppVar_60377 & cppMask_un_5_);
	BIT_VEC cppVar_60379 = cppVar_60378 + 32;
	cppVar_60379 = (cppVar_60379 & cppMask_un_8_);
	BIT_VEC cppVar_60380 = (cppVar_60370) ? cppVar_60374 : cppVar_60379;
	bool cppVar_60382 = (cppVar_60380 == 240);
	BIT_VEC cppVar_60384 = (cppVar_60382) ? B : 0;
	BIT_VEC cppVar_60385 = (cppVar_60366) ? ACC : cppVar_60384;
	BIT_VEC cppVar_60386 = (cppVar_60350) ? PSW : cppVar_60385;
	BIT_VEC cppVar_60387 = (cppVar_60334) ? IP : cppVar_60386;
	BIT_VEC cppVar_60388 = (cppVar_60318) ? P3 : cppVar_60387;
	BIT_VEC cppVar_60389 = (cppVar_60302) ? IE : cppVar_60388;
	BIT_VEC cppVar_60390 = (cppVar_60286) ? P2 : cppVar_60389;
	BIT_VEC cppVar_60391 = (cppVar_60270) ? SBUF : cppVar_60390;
	BIT_VEC cppVar_60392 = (cppVar_60254) ? SCON : cppVar_60391;
	BIT_VEC cppVar_60393 = (cppVar_60238) ? P1 : cppVar_60392;
	BIT_VEC cppVar_60394 = (cppVar_60222) ? TH1 : cppVar_60393;
	BIT_VEC cppVar_60395 = (cppVar_60206) ? TL1 : cppVar_60394;
	BIT_VEC cppVar_60396 = (cppVar_60190) ? TH0 : cppVar_60395;
	BIT_VEC cppVar_60397 = (cppVar_60174) ? TL0 : cppVar_60396;
	BIT_VEC cppVar_60398 = (cppVar_60158) ? TMOD : cppVar_60397;
	BIT_VEC cppVar_60399 = (cppVar_60142) ? TCON : cppVar_60398;
	BIT_VEC cppVar_60400 = (cppVar_60126) ? PCON : cppVar_60399;
	BIT_VEC cppVar_60401 = (cppVar_60110) ? DPH : cppVar_60400;
	BIT_VEC cppVar_60402 = (cppVar_60094) ? DPL : cppVar_60401;
	BIT_VEC cppVar_60403 = (cppVar_60078) ? SP : cppVar_60402;
	BIT_VEC cppVar_60404 = (cppVar_60062) ? P0 : cppVar_60403;
	BIT_VEC cppVar_60405 = (cppVar_60031) ? cppVar_60046 : cppVar_60404;
	BIT_VEC cppVar_60406 = cppVar_60014 & cppVar_60405;
	BIT_VEC cppVar_60407 = PC + 1;
	cppVar_60407 = (cppVar_60407 & cppMask_un_16_);
	BIT_VEC cppVar_60408 = ROM.rd(cppVar_60407);
	BIT_VEC cppVar_60409 = (cppVar_60408 >> 7) & cppMask_un_1_;
	bool cppVar_60411 = (cppVar_60409 == 1);
	BIT_VEC cppVar_60412 = PC + 1;
	cppVar_60412 = (cppVar_60412 & cppMask_un_16_);
	BIT_VEC cppVar_60413 = ROM.rd(cppVar_60412);
	BIT_VEC cppVar_60414 = (cppVar_60413 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60416 = (cppVar_60414 << 3) | 0;
	cppVar_60416 = (cppVar_60416 & cppMask_un_8_);
	BIT_VEC cppVar_60417 = PC + 1;
	cppVar_60417 = (cppVar_60417 & cppMask_un_16_);
	BIT_VEC cppVar_60418 = ROM.rd(cppVar_60417);
	BIT_VEC cppVar_60419 = (cppVar_60418 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60420 = (cppVar_60419 & cppMask_un_5_);
	BIT_VEC cppVar_60422 = cppVar_60420 + 32;
	cppVar_60422 = (cppVar_60422 & cppMask_un_8_);
	BIT_VEC cppVar_60423 = (cppVar_60411) ? cppVar_60416 : cppVar_60422;
	BIT_VEC cppVar_60424 = (cppVar_60423 >> 7) & cppMask_un_1_;
	bool cppVar_60426 = (cppVar_60424 == 0);
	BIT_VEC cppVar_60427 = PC + 1;
	cppVar_60427 = (cppVar_60427 & cppMask_un_16_);
	BIT_VEC cppVar_60428 = ROM.rd(cppVar_60427);
	BIT_VEC cppVar_60429 = (cppVar_60428 >> 7) & cppMask_un_1_;
	bool cppVar_60430 = (cppVar_60429 == 1);
	BIT_VEC cppVar_60431 = PC + 1;
	cppVar_60431 = (cppVar_60431 & cppMask_un_16_);
	BIT_VEC cppVar_60432 = ROM.rd(cppVar_60431);
	BIT_VEC cppVar_60433 = (cppVar_60432 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60434 = (cppVar_60433 << 3) | 0;
	cppVar_60434 = (cppVar_60434 & cppMask_un_8_);
	BIT_VEC cppVar_60435 = PC + 1;
	cppVar_60435 = (cppVar_60435 & cppMask_un_16_);
	BIT_VEC cppVar_60436 = ROM.rd(cppVar_60435);
	BIT_VEC cppVar_60437 = (cppVar_60436 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60438 = (cppVar_60437 & cppMask_un_5_);
	BIT_VEC cppVar_60439 = cppVar_60438 + 32;
	cppVar_60439 = (cppVar_60439 & cppMask_un_8_);
	BIT_VEC cppVar_60440 = (cppVar_60430) ? cppVar_60434 : cppVar_60439;
	BIT_VEC cppVar_60441 = IRAM.rd(cppVar_60440);
	BIT_VEC cppVar_60442 = PC + 1;
	cppVar_60442 = (cppVar_60442 & cppMask_un_16_);
	BIT_VEC cppVar_60443 = ROM.rd(cppVar_60442);
	BIT_VEC cppVar_60444 = (cppVar_60443 >> 7) & cppMask_un_1_;
	bool cppVar_60445 = (cppVar_60444 == 1);
	BIT_VEC cppVar_60446 = PC + 1;
	cppVar_60446 = (cppVar_60446 & cppMask_un_16_);
	BIT_VEC cppVar_60447 = ROM.rd(cppVar_60446);
	BIT_VEC cppVar_60448 = (cppVar_60447 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60449 = (cppVar_60448 << 3) | 0;
	cppVar_60449 = (cppVar_60449 & cppMask_un_8_);
	BIT_VEC cppVar_60450 = PC + 1;
	cppVar_60450 = (cppVar_60450 & cppMask_un_16_);
	BIT_VEC cppVar_60451 = ROM.rd(cppVar_60450);
	BIT_VEC cppVar_60452 = (cppVar_60451 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60453 = (cppVar_60452 & cppMask_un_5_);
	BIT_VEC cppVar_60454 = cppVar_60453 + 32;
	cppVar_60454 = (cppVar_60454 & cppMask_un_8_);
	BIT_VEC cppVar_60455 = (cppVar_60445) ? cppVar_60449 : cppVar_60454;
	bool cppVar_60457 = (cppVar_60455 == 128);
	BIT_VEC cppVar_60458 = PC + 1;
	cppVar_60458 = (cppVar_60458 & cppMask_un_16_);
	BIT_VEC cppVar_60459 = ROM.rd(cppVar_60458);
	BIT_VEC cppVar_60460 = (cppVar_60459 >> 7) & cppMask_un_1_;
	bool cppVar_60461 = (cppVar_60460 == 1);
	BIT_VEC cppVar_60462 = PC + 1;
	cppVar_60462 = (cppVar_60462 & cppMask_un_16_);
	BIT_VEC cppVar_60463 = ROM.rd(cppVar_60462);
	BIT_VEC cppVar_60464 = (cppVar_60463 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60465 = (cppVar_60464 << 3) | 0;
	cppVar_60465 = (cppVar_60465 & cppMask_un_8_);
	BIT_VEC cppVar_60466 = PC + 1;
	cppVar_60466 = (cppVar_60466 & cppMask_un_16_);
	BIT_VEC cppVar_60467 = ROM.rd(cppVar_60466);
	BIT_VEC cppVar_60468 = (cppVar_60467 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60469 = (cppVar_60468 & cppMask_un_5_);
	BIT_VEC cppVar_60470 = cppVar_60469 + 32;
	cppVar_60470 = (cppVar_60470 & cppMask_un_8_);
	BIT_VEC cppVar_60471 = (cppVar_60461) ? cppVar_60465 : cppVar_60470;
	bool cppVar_60473 = (cppVar_60471 == 129);
	BIT_VEC cppVar_60474 = PC + 1;
	cppVar_60474 = (cppVar_60474 & cppMask_un_16_);
	BIT_VEC cppVar_60475 = ROM.rd(cppVar_60474);
	BIT_VEC cppVar_60476 = (cppVar_60475 >> 7) & cppMask_un_1_;
	bool cppVar_60477 = (cppVar_60476 == 1);
	BIT_VEC cppVar_60478 = PC + 1;
	cppVar_60478 = (cppVar_60478 & cppMask_un_16_);
	BIT_VEC cppVar_60479 = ROM.rd(cppVar_60478);
	BIT_VEC cppVar_60480 = (cppVar_60479 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60481 = (cppVar_60480 << 3) | 0;
	cppVar_60481 = (cppVar_60481 & cppMask_un_8_);
	BIT_VEC cppVar_60482 = PC + 1;
	cppVar_60482 = (cppVar_60482 & cppMask_un_16_);
	BIT_VEC cppVar_60483 = ROM.rd(cppVar_60482);
	BIT_VEC cppVar_60484 = (cppVar_60483 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60485 = (cppVar_60484 & cppMask_un_5_);
	BIT_VEC cppVar_60486 = cppVar_60485 + 32;
	cppVar_60486 = (cppVar_60486 & cppMask_un_8_);
	BIT_VEC cppVar_60487 = (cppVar_60477) ? cppVar_60481 : cppVar_60486;
	bool cppVar_60489 = (cppVar_60487 == 130);
	BIT_VEC cppVar_60490 = PC + 1;
	cppVar_60490 = (cppVar_60490 & cppMask_un_16_);
	BIT_VEC cppVar_60491 = ROM.rd(cppVar_60490);
	BIT_VEC cppVar_60492 = (cppVar_60491 >> 7) & cppMask_un_1_;
	bool cppVar_60493 = (cppVar_60492 == 1);
	BIT_VEC cppVar_60494 = PC + 1;
	cppVar_60494 = (cppVar_60494 & cppMask_un_16_);
	BIT_VEC cppVar_60495 = ROM.rd(cppVar_60494);
	BIT_VEC cppVar_60496 = (cppVar_60495 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60497 = (cppVar_60496 << 3) | 0;
	cppVar_60497 = (cppVar_60497 & cppMask_un_8_);
	BIT_VEC cppVar_60498 = PC + 1;
	cppVar_60498 = (cppVar_60498 & cppMask_un_16_);
	BIT_VEC cppVar_60499 = ROM.rd(cppVar_60498);
	BIT_VEC cppVar_60500 = (cppVar_60499 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60501 = (cppVar_60500 & cppMask_un_5_);
	BIT_VEC cppVar_60502 = cppVar_60501 + 32;
	cppVar_60502 = (cppVar_60502 & cppMask_un_8_);
	BIT_VEC cppVar_60503 = (cppVar_60493) ? cppVar_60497 : cppVar_60502;
	bool cppVar_60505 = (cppVar_60503 == 131);
	BIT_VEC cppVar_60506 = PC + 1;
	cppVar_60506 = (cppVar_60506 & cppMask_un_16_);
	BIT_VEC cppVar_60507 = ROM.rd(cppVar_60506);
	BIT_VEC cppVar_60508 = (cppVar_60507 >> 7) & cppMask_un_1_;
	bool cppVar_60509 = (cppVar_60508 == 1);
	BIT_VEC cppVar_60510 = PC + 1;
	cppVar_60510 = (cppVar_60510 & cppMask_un_16_);
	BIT_VEC cppVar_60511 = ROM.rd(cppVar_60510);
	BIT_VEC cppVar_60512 = (cppVar_60511 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60513 = (cppVar_60512 << 3) | 0;
	cppVar_60513 = (cppVar_60513 & cppMask_un_8_);
	BIT_VEC cppVar_60514 = PC + 1;
	cppVar_60514 = (cppVar_60514 & cppMask_un_16_);
	BIT_VEC cppVar_60515 = ROM.rd(cppVar_60514);
	BIT_VEC cppVar_60516 = (cppVar_60515 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60517 = (cppVar_60516 & cppMask_un_5_);
	BIT_VEC cppVar_60518 = cppVar_60517 + 32;
	cppVar_60518 = (cppVar_60518 & cppMask_un_8_);
	BIT_VEC cppVar_60519 = (cppVar_60509) ? cppVar_60513 : cppVar_60518;
	bool cppVar_60521 = (cppVar_60519 == 135);
	BIT_VEC cppVar_60522 = PC + 1;
	cppVar_60522 = (cppVar_60522 & cppMask_un_16_);
	BIT_VEC cppVar_60523 = ROM.rd(cppVar_60522);
	BIT_VEC cppVar_60524 = (cppVar_60523 >> 7) & cppMask_un_1_;
	bool cppVar_60525 = (cppVar_60524 == 1);
	BIT_VEC cppVar_60526 = PC + 1;
	cppVar_60526 = (cppVar_60526 & cppMask_un_16_);
	BIT_VEC cppVar_60527 = ROM.rd(cppVar_60526);
	BIT_VEC cppVar_60528 = (cppVar_60527 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60529 = (cppVar_60528 << 3) | 0;
	cppVar_60529 = (cppVar_60529 & cppMask_un_8_);
	BIT_VEC cppVar_60530 = PC + 1;
	cppVar_60530 = (cppVar_60530 & cppMask_un_16_);
	BIT_VEC cppVar_60531 = ROM.rd(cppVar_60530);
	BIT_VEC cppVar_60532 = (cppVar_60531 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60533 = (cppVar_60532 & cppMask_un_5_);
	BIT_VEC cppVar_60534 = cppVar_60533 + 32;
	cppVar_60534 = (cppVar_60534 & cppMask_un_8_);
	BIT_VEC cppVar_60535 = (cppVar_60525) ? cppVar_60529 : cppVar_60534;
	bool cppVar_60537 = (cppVar_60535 == 136);
	BIT_VEC cppVar_60538 = PC + 1;
	cppVar_60538 = (cppVar_60538 & cppMask_un_16_);
	BIT_VEC cppVar_60539 = ROM.rd(cppVar_60538);
	BIT_VEC cppVar_60540 = (cppVar_60539 >> 7) & cppMask_un_1_;
	bool cppVar_60541 = (cppVar_60540 == 1);
	BIT_VEC cppVar_60542 = PC + 1;
	cppVar_60542 = (cppVar_60542 & cppMask_un_16_);
	BIT_VEC cppVar_60543 = ROM.rd(cppVar_60542);
	BIT_VEC cppVar_60544 = (cppVar_60543 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60545 = (cppVar_60544 << 3) | 0;
	cppVar_60545 = (cppVar_60545 & cppMask_un_8_);
	BIT_VEC cppVar_60546 = PC + 1;
	cppVar_60546 = (cppVar_60546 & cppMask_un_16_);
	BIT_VEC cppVar_60547 = ROM.rd(cppVar_60546);
	BIT_VEC cppVar_60548 = (cppVar_60547 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60549 = (cppVar_60548 & cppMask_un_5_);
	BIT_VEC cppVar_60550 = cppVar_60549 + 32;
	cppVar_60550 = (cppVar_60550 & cppMask_un_8_);
	BIT_VEC cppVar_60551 = (cppVar_60541) ? cppVar_60545 : cppVar_60550;
	bool cppVar_60553 = (cppVar_60551 == 137);
	BIT_VEC cppVar_60554 = PC + 1;
	cppVar_60554 = (cppVar_60554 & cppMask_un_16_);
	BIT_VEC cppVar_60555 = ROM.rd(cppVar_60554);
	BIT_VEC cppVar_60556 = (cppVar_60555 >> 7) & cppMask_un_1_;
	bool cppVar_60557 = (cppVar_60556 == 1);
	BIT_VEC cppVar_60558 = PC + 1;
	cppVar_60558 = (cppVar_60558 & cppMask_un_16_);
	BIT_VEC cppVar_60559 = ROM.rd(cppVar_60558);
	BIT_VEC cppVar_60560 = (cppVar_60559 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60561 = (cppVar_60560 << 3) | 0;
	cppVar_60561 = (cppVar_60561 & cppMask_un_8_);
	BIT_VEC cppVar_60562 = PC + 1;
	cppVar_60562 = (cppVar_60562 & cppMask_un_16_);
	BIT_VEC cppVar_60563 = ROM.rd(cppVar_60562);
	BIT_VEC cppVar_60564 = (cppVar_60563 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60565 = (cppVar_60564 & cppMask_un_5_);
	BIT_VEC cppVar_60566 = cppVar_60565 + 32;
	cppVar_60566 = (cppVar_60566 & cppMask_un_8_);
	BIT_VEC cppVar_60567 = (cppVar_60557) ? cppVar_60561 : cppVar_60566;
	bool cppVar_60569 = (cppVar_60567 == 138);
	BIT_VEC cppVar_60570 = PC + 1;
	cppVar_60570 = (cppVar_60570 & cppMask_un_16_);
	BIT_VEC cppVar_60571 = ROM.rd(cppVar_60570);
	BIT_VEC cppVar_60572 = (cppVar_60571 >> 7) & cppMask_un_1_;
	bool cppVar_60573 = (cppVar_60572 == 1);
	BIT_VEC cppVar_60574 = PC + 1;
	cppVar_60574 = (cppVar_60574 & cppMask_un_16_);
	BIT_VEC cppVar_60575 = ROM.rd(cppVar_60574);
	BIT_VEC cppVar_60576 = (cppVar_60575 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60577 = (cppVar_60576 << 3) | 0;
	cppVar_60577 = (cppVar_60577 & cppMask_un_8_);
	BIT_VEC cppVar_60578 = PC + 1;
	cppVar_60578 = (cppVar_60578 & cppMask_un_16_);
	BIT_VEC cppVar_60579 = ROM.rd(cppVar_60578);
	BIT_VEC cppVar_60580 = (cppVar_60579 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60581 = (cppVar_60580 & cppMask_un_5_);
	BIT_VEC cppVar_60582 = cppVar_60581 + 32;
	cppVar_60582 = (cppVar_60582 & cppMask_un_8_);
	BIT_VEC cppVar_60583 = (cppVar_60573) ? cppVar_60577 : cppVar_60582;
	bool cppVar_60585 = (cppVar_60583 == 140);
	BIT_VEC cppVar_60586 = PC + 1;
	cppVar_60586 = (cppVar_60586 & cppMask_un_16_);
	BIT_VEC cppVar_60587 = ROM.rd(cppVar_60586);
	BIT_VEC cppVar_60588 = (cppVar_60587 >> 7) & cppMask_un_1_;
	bool cppVar_60589 = (cppVar_60588 == 1);
	BIT_VEC cppVar_60590 = PC + 1;
	cppVar_60590 = (cppVar_60590 & cppMask_un_16_);
	BIT_VEC cppVar_60591 = ROM.rd(cppVar_60590);
	BIT_VEC cppVar_60592 = (cppVar_60591 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60593 = (cppVar_60592 << 3) | 0;
	cppVar_60593 = (cppVar_60593 & cppMask_un_8_);
	BIT_VEC cppVar_60594 = PC + 1;
	cppVar_60594 = (cppVar_60594 & cppMask_un_16_);
	BIT_VEC cppVar_60595 = ROM.rd(cppVar_60594);
	BIT_VEC cppVar_60596 = (cppVar_60595 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60597 = (cppVar_60596 & cppMask_un_5_);
	BIT_VEC cppVar_60598 = cppVar_60597 + 32;
	cppVar_60598 = (cppVar_60598 & cppMask_un_8_);
	BIT_VEC cppVar_60599 = (cppVar_60589) ? cppVar_60593 : cppVar_60598;
	bool cppVar_60601 = (cppVar_60599 == 139);
	BIT_VEC cppVar_60602 = PC + 1;
	cppVar_60602 = (cppVar_60602 & cppMask_un_16_);
	BIT_VEC cppVar_60603 = ROM.rd(cppVar_60602);
	BIT_VEC cppVar_60604 = (cppVar_60603 >> 7) & cppMask_un_1_;
	bool cppVar_60605 = (cppVar_60604 == 1);
	BIT_VEC cppVar_60606 = PC + 1;
	cppVar_60606 = (cppVar_60606 & cppMask_un_16_);
	BIT_VEC cppVar_60607 = ROM.rd(cppVar_60606);
	BIT_VEC cppVar_60608 = (cppVar_60607 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60609 = (cppVar_60608 << 3) | 0;
	cppVar_60609 = (cppVar_60609 & cppMask_un_8_);
	BIT_VEC cppVar_60610 = PC + 1;
	cppVar_60610 = (cppVar_60610 & cppMask_un_16_);
	BIT_VEC cppVar_60611 = ROM.rd(cppVar_60610);
	BIT_VEC cppVar_60612 = (cppVar_60611 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60613 = (cppVar_60612 & cppMask_un_5_);
	BIT_VEC cppVar_60614 = cppVar_60613 + 32;
	cppVar_60614 = (cppVar_60614 & cppMask_un_8_);
	BIT_VEC cppVar_60615 = (cppVar_60605) ? cppVar_60609 : cppVar_60614;
	bool cppVar_60617 = (cppVar_60615 == 141);
	BIT_VEC cppVar_60618 = PC + 1;
	cppVar_60618 = (cppVar_60618 & cppMask_un_16_);
	BIT_VEC cppVar_60619 = ROM.rd(cppVar_60618);
	BIT_VEC cppVar_60620 = (cppVar_60619 >> 7) & cppMask_un_1_;
	bool cppVar_60621 = (cppVar_60620 == 1);
	BIT_VEC cppVar_60622 = PC + 1;
	cppVar_60622 = (cppVar_60622 & cppMask_un_16_);
	BIT_VEC cppVar_60623 = ROM.rd(cppVar_60622);
	BIT_VEC cppVar_60624 = (cppVar_60623 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60625 = (cppVar_60624 << 3) | 0;
	cppVar_60625 = (cppVar_60625 & cppMask_un_8_);
	BIT_VEC cppVar_60626 = PC + 1;
	cppVar_60626 = (cppVar_60626 & cppMask_un_16_);
	BIT_VEC cppVar_60627 = ROM.rd(cppVar_60626);
	BIT_VEC cppVar_60628 = (cppVar_60627 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60629 = (cppVar_60628 & cppMask_un_5_);
	BIT_VEC cppVar_60630 = cppVar_60629 + 32;
	cppVar_60630 = (cppVar_60630 & cppMask_un_8_);
	BIT_VEC cppVar_60631 = (cppVar_60621) ? cppVar_60625 : cppVar_60630;
	bool cppVar_60633 = (cppVar_60631 == 144);
	BIT_VEC cppVar_60634 = PC + 1;
	cppVar_60634 = (cppVar_60634 & cppMask_un_16_);
	BIT_VEC cppVar_60635 = ROM.rd(cppVar_60634);
	BIT_VEC cppVar_60636 = (cppVar_60635 >> 7) & cppMask_un_1_;
	bool cppVar_60637 = (cppVar_60636 == 1);
	BIT_VEC cppVar_60638 = PC + 1;
	cppVar_60638 = (cppVar_60638 & cppMask_un_16_);
	BIT_VEC cppVar_60639 = ROM.rd(cppVar_60638);
	BIT_VEC cppVar_60640 = (cppVar_60639 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60641 = (cppVar_60640 << 3) | 0;
	cppVar_60641 = (cppVar_60641 & cppMask_un_8_);
	BIT_VEC cppVar_60642 = PC + 1;
	cppVar_60642 = (cppVar_60642 & cppMask_un_16_);
	BIT_VEC cppVar_60643 = ROM.rd(cppVar_60642);
	BIT_VEC cppVar_60644 = (cppVar_60643 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60645 = (cppVar_60644 & cppMask_un_5_);
	BIT_VEC cppVar_60646 = cppVar_60645 + 32;
	cppVar_60646 = (cppVar_60646 & cppMask_un_8_);
	BIT_VEC cppVar_60647 = (cppVar_60637) ? cppVar_60641 : cppVar_60646;
	bool cppVar_60649 = (cppVar_60647 == 152);
	BIT_VEC cppVar_60650 = PC + 1;
	cppVar_60650 = (cppVar_60650 & cppMask_un_16_);
	BIT_VEC cppVar_60651 = ROM.rd(cppVar_60650);
	BIT_VEC cppVar_60652 = (cppVar_60651 >> 7) & cppMask_un_1_;
	bool cppVar_60653 = (cppVar_60652 == 1);
	BIT_VEC cppVar_60654 = PC + 1;
	cppVar_60654 = (cppVar_60654 & cppMask_un_16_);
	BIT_VEC cppVar_60655 = ROM.rd(cppVar_60654);
	BIT_VEC cppVar_60656 = (cppVar_60655 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60657 = (cppVar_60656 << 3) | 0;
	cppVar_60657 = (cppVar_60657 & cppMask_un_8_);
	BIT_VEC cppVar_60658 = PC + 1;
	cppVar_60658 = (cppVar_60658 & cppMask_un_16_);
	BIT_VEC cppVar_60659 = ROM.rd(cppVar_60658);
	BIT_VEC cppVar_60660 = (cppVar_60659 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60661 = (cppVar_60660 & cppMask_un_5_);
	BIT_VEC cppVar_60662 = cppVar_60661 + 32;
	cppVar_60662 = (cppVar_60662 & cppMask_un_8_);
	BIT_VEC cppVar_60663 = (cppVar_60653) ? cppVar_60657 : cppVar_60662;
	bool cppVar_60665 = (cppVar_60663 == 153);
	BIT_VEC cppVar_60666 = PC + 1;
	cppVar_60666 = (cppVar_60666 & cppMask_un_16_);
	BIT_VEC cppVar_60667 = ROM.rd(cppVar_60666);
	BIT_VEC cppVar_60668 = (cppVar_60667 >> 7) & cppMask_un_1_;
	bool cppVar_60669 = (cppVar_60668 == 1);
	BIT_VEC cppVar_60670 = PC + 1;
	cppVar_60670 = (cppVar_60670 & cppMask_un_16_);
	BIT_VEC cppVar_60671 = ROM.rd(cppVar_60670);
	BIT_VEC cppVar_60672 = (cppVar_60671 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60673 = (cppVar_60672 << 3) | 0;
	cppVar_60673 = (cppVar_60673 & cppMask_un_8_);
	BIT_VEC cppVar_60674 = PC + 1;
	cppVar_60674 = (cppVar_60674 & cppMask_un_16_);
	BIT_VEC cppVar_60675 = ROM.rd(cppVar_60674);
	BIT_VEC cppVar_60676 = (cppVar_60675 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60677 = (cppVar_60676 & cppMask_un_5_);
	BIT_VEC cppVar_60678 = cppVar_60677 + 32;
	cppVar_60678 = (cppVar_60678 & cppMask_un_8_);
	BIT_VEC cppVar_60679 = (cppVar_60669) ? cppVar_60673 : cppVar_60678;
	bool cppVar_60681 = (cppVar_60679 == 160);
	BIT_VEC cppVar_60682 = PC + 1;
	cppVar_60682 = (cppVar_60682 & cppMask_un_16_);
	BIT_VEC cppVar_60683 = ROM.rd(cppVar_60682);
	BIT_VEC cppVar_60684 = (cppVar_60683 >> 7) & cppMask_un_1_;
	bool cppVar_60685 = (cppVar_60684 == 1);
	BIT_VEC cppVar_60686 = PC + 1;
	cppVar_60686 = (cppVar_60686 & cppMask_un_16_);
	BIT_VEC cppVar_60687 = ROM.rd(cppVar_60686);
	BIT_VEC cppVar_60688 = (cppVar_60687 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60689 = (cppVar_60688 << 3) | 0;
	cppVar_60689 = (cppVar_60689 & cppMask_un_8_);
	BIT_VEC cppVar_60690 = PC + 1;
	cppVar_60690 = (cppVar_60690 & cppMask_un_16_);
	BIT_VEC cppVar_60691 = ROM.rd(cppVar_60690);
	BIT_VEC cppVar_60692 = (cppVar_60691 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60693 = (cppVar_60692 & cppMask_un_5_);
	BIT_VEC cppVar_60694 = cppVar_60693 + 32;
	cppVar_60694 = (cppVar_60694 & cppMask_un_8_);
	BIT_VEC cppVar_60695 = (cppVar_60685) ? cppVar_60689 : cppVar_60694;
	bool cppVar_60697 = (cppVar_60695 == 168);
	BIT_VEC cppVar_60698 = PC + 1;
	cppVar_60698 = (cppVar_60698 & cppMask_un_16_);
	BIT_VEC cppVar_60699 = ROM.rd(cppVar_60698);
	BIT_VEC cppVar_60700 = (cppVar_60699 >> 7) & cppMask_un_1_;
	bool cppVar_60701 = (cppVar_60700 == 1);
	BIT_VEC cppVar_60702 = PC + 1;
	cppVar_60702 = (cppVar_60702 & cppMask_un_16_);
	BIT_VEC cppVar_60703 = ROM.rd(cppVar_60702);
	BIT_VEC cppVar_60704 = (cppVar_60703 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60705 = (cppVar_60704 << 3) | 0;
	cppVar_60705 = (cppVar_60705 & cppMask_un_8_);
	BIT_VEC cppVar_60706 = PC + 1;
	cppVar_60706 = (cppVar_60706 & cppMask_un_16_);
	BIT_VEC cppVar_60707 = ROM.rd(cppVar_60706);
	BIT_VEC cppVar_60708 = (cppVar_60707 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60709 = (cppVar_60708 & cppMask_un_5_);
	BIT_VEC cppVar_60710 = cppVar_60709 + 32;
	cppVar_60710 = (cppVar_60710 & cppMask_un_8_);
	BIT_VEC cppVar_60711 = (cppVar_60701) ? cppVar_60705 : cppVar_60710;
	bool cppVar_60713 = (cppVar_60711 == 176);
	BIT_VEC cppVar_60714 = PC + 1;
	cppVar_60714 = (cppVar_60714 & cppMask_un_16_);
	BIT_VEC cppVar_60715 = ROM.rd(cppVar_60714);
	BIT_VEC cppVar_60716 = (cppVar_60715 >> 7) & cppMask_un_1_;
	bool cppVar_60717 = (cppVar_60716 == 1);
	BIT_VEC cppVar_60718 = PC + 1;
	cppVar_60718 = (cppVar_60718 & cppMask_un_16_);
	BIT_VEC cppVar_60719 = ROM.rd(cppVar_60718);
	BIT_VEC cppVar_60720 = (cppVar_60719 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60721 = (cppVar_60720 << 3) | 0;
	cppVar_60721 = (cppVar_60721 & cppMask_un_8_);
	BIT_VEC cppVar_60722 = PC + 1;
	cppVar_60722 = (cppVar_60722 & cppMask_un_16_);
	BIT_VEC cppVar_60723 = ROM.rd(cppVar_60722);
	BIT_VEC cppVar_60724 = (cppVar_60723 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60725 = (cppVar_60724 & cppMask_un_5_);
	BIT_VEC cppVar_60726 = cppVar_60725 + 32;
	cppVar_60726 = (cppVar_60726 & cppMask_un_8_);
	BIT_VEC cppVar_60727 = (cppVar_60717) ? cppVar_60721 : cppVar_60726;
	bool cppVar_60729 = (cppVar_60727 == 184);
	BIT_VEC cppVar_60730 = PC + 1;
	cppVar_60730 = (cppVar_60730 & cppMask_un_16_);
	BIT_VEC cppVar_60731 = ROM.rd(cppVar_60730);
	BIT_VEC cppVar_60732 = (cppVar_60731 >> 7) & cppMask_un_1_;
	bool cppVar_60733 = (cppVar_60732 == 1);
	BIT_VEC cppVar_60734 = PC + 1;
	cppVar_60734 = (cppVar_60734 & cppMask_un_16_);
	BIT_VEC cppVar_60735 = ROM.rd(cppVar_60734);
	BIT_VEC cppVar_60736 = (cppVar_60735 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60737 = (cppVar_60736 << 3) | 0;
	cppVar_60737 = (cppVar_60737 & cppMask_un_8_);
	BIT_VEC cppVar_60738 = PC + 1;
	cppVar_60738 = (cppVar_60738 & cppMask_un_16_);
	BIT_VEC cppVar_60739 = ROM.rd(cppVar_60738);
	BIT_VEC cppVar_60740 = (cppVar_60739 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60741 = (cppVar_60740 & cppMask_un_5_);
	BIT_VEC cppVar_60742 = cppVar_60741 + 32;
	cppVar_60742 = (cppVar_60742 & cppMask_un_8_);
	BIT_VEC cppVar_60743 = (cppVar_60733) ? cppVar_60737 : cppVar_60742;
	bool cppVar_60745 = (cppVar_60743 == 208);
	BIT_VEC cppVar_60746 = PC + 1;
	cppVar_60746 = (cppVar_60746 & cppMask_un_16_);
	BIT_VEC cppVar_60747 = ROM.rd(cppVar_60746);
	BIT_VEC cppVar_60748 = (cppVar_60747 >> 7) & cppMask_un_1_;
	bool cppVar_60749 = (cppVar_60748 == 1);
	BIT_VEC cppVar_60750 = PC + 1;
	cppVar_60750 = (cppVar_60750 & cppMask_un_16_);
	BIT_VEC cppVar_60751 = ROM.rd(cppVar_60750);
	BIT_VEC cppVar_60752 = (cppVar_60751 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60753 = (cppVar_60752 << 3) | 0;
	cppVar_60753 = (cppVar_60753 & cppMask_un_8_);
	BIT_VEC cppVar_60754 = PC + 1;
	cppVar_60754 = (cppVar_60754 & cppMask_un_16_);
	BIT_VEC cppVar_60755 = ROM.rd(cppVar_60754);
	BIT_VEC cppVar_60756 = (cppVar_60755 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60757 = (cppVar_60756 & cppMask_un_5_);
	BIT_VEC cppVar_60758 = cppVar_60757 + 32;
	cppVar_60758 = (cppVar_60758 & cppMask_un_8_);
	BIT_VEC cppVar_60759 = (cppVar_60749) ? cppVar_60753 : cppVar_60758;
	bool cppVar_60761 = (cppVar_60759 == 224);
	BIT_VEC cppVar_60762 = PC + 1;
	cppVar_60762 = (cppVar_60762 & cppMask_un_16_);
	BIT_VEC cppVar_60763 = ROM.rd(cppVar_60762);
	BIT_VEC cppVar_60764 = (cppVar_60763 >> 7) & cppMask_un_1_;
	bool cppVar_60765 = (cppVar_60764 == 1);
	BIT_VEC cppVar_60766 = PC + 1;
	cppVar_60766 = (cppVar_60766 & cppMask_un_16_);
	BIT_VEC cppVar_60767 = ROM.rd(cppVar_60766);
	BIT_VEC cppVar_60768 = (cppVar_60767 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60769 = (cppVar_60768 << 3) | 0;
	cppVar_60769 = (cppVar_60769 & cppMask_un_8_);
	BIT_VEC cppVar_60770 = PC + 1;
	cppVar_60770 = (cppVar_60770 & cppMask_un_16_);
	BIT_VEC cppVar_60771 = ROM.rd(cppVar_60770);
	BIT_VEC cppVar_60772 = (cppVar_60771 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60773 = (cppVar_60772 & cppMask_un_5_);
	BIT_VEC cppVar_60774 = cppVar_60773 + 32;
	cppVar_60774 = (cppVar_60774 & cppMask_un_8_);
	BIT_VEC cppVar_60775 = (cppVar_60765) ? cppVar_60769 : cppVar_60774;
	bool cppVar_60777 = (cppVar_60775 == 240);
	BIT_VEC cppVar_60779 = (cppVar_60777) ? B : 0;
	BIT_VEC cppVar_60780 = (cppVar_60761) ? ACC : cppVar_60779;
	BIT_VEC cppVar_60781 = (cppVar_60745) ? PSW : cppVar_60780;
	BIT_VEC cppVar_60782 = (cppVar_60729) ? IP : cppVar_60781;
	BIT_VEC cppVar_60783 = (cppVar_60713) ? P3 : cppVar_60782;
	BIT_VEC cppVar_60784 = (cppVar_60697) ? IE : cppVar_60783;
	BIT_VEC cppVar_60785 = (cppVar_60681) ? P2 : cppVar_60784;
	BIT_VEC cppVar_60786 = (cppVar_60665) ? SBUF : cppVar_60785;
	BIT_VEC cppVar_60787 = (cppVar_60649) ? SCON : cppVar_60786;
	BIT_VEC cppVar_60788 = (cppVar_60633) ? P1 : cppVar_60787;
	BIT_VEC cppVar_60789 = (cppVar_60617) ? TH1 : cppVar_60788;
	BIT_VEC cppVar_60790 = (cppVar_60601) ? TL1 : cppVar_60789;
	BIT_VEC cppVar_60791 = (cppVar_60585) ? TH0 : cppVar_60790;
	BIT_VEC cppVar_60792 = (cppVar_60569) ? TL0 : cppVar_60791;
	BIT_VEC cppVar_60793 = (cppVar_60553) ? TMOD : cppVar_60792;
	BIT_VEC cppVar_60794 = (cppVar_60537) ? TCON : cppVar_60793;
	BIT_VEC cppVar_60795 = (cppVar_60521) ? PCON : cppVar_60794;
	BIT_VEC cppVar_60796 = (cppVar_60505) ? DPH : cppVar_60795;
	BIT_VEC cppVar_60797 = (cppVar_60489) ? DPL : cppVar_60796;
	BIT_VEC cppVar_60798 = (cppVar_60473) ? SP : cppVar_60797;
	BIT_VEC cppVar_60799 = (cppVar_60457) ? P0 : cppVar_60798;
	BIT_VEC cppVar_60800 = (cppVar_60426) ? cppVar_60441 : cppVar_60799;
	BIT_VEC cppVar_60801 = PC + 1;
	cppVar_60801 = (cppVar_60801 & cppMask_un_16_);
	BIT_VEC cppVar_60802 = ROM.rd(cppVar_60801);
	BIT_VEC cppVar_60803 = (cppVar_60802 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_60804 = (cppVar_60800 >> static_cast<unsigned>(cppVar_60803)) & 0x1;
	BIT_VEC cppVar_60805 = ~cppVar_60804;
	BIT_VEC cppVar_60806 = (cppVar_60805 & cppMask_un_1_);
	BIT_VEC cppVar_60807 = PC + 1;
	cppVar_60807 = (cppVar_60807 & cppMask_un_16_);
	BIT_VEC cppVar_60808 = ROM.rd(cppVar_60807);
	BIT_VEC cppVar_60809 = (cppVar_60808 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_60810 = (cppVar_60809 & cppMask_un_3_);
	BIT_VEC cppVar_60811 = cppVar_60806 << static_cast<unsigned>(cppVar_60810);
	cppVar_60811 = (cppVar_60811 & cppMask_un_8_);
	BIT_VEC cppVar_60812 = cppVar_60406 | cppVar_60811;
	BIT_VEC cppVar_60813 = (cppVar_60007) ? cppVar_60812 : SCON;
	BIT_VEC cppVar_60814 = ROM.rd(PC);
	bool cppVar_60816 = (cppVar_60814 == 146);
	BIT_VEC cppVar_60818 = PC + 1;
	cppVar_60818 = (cppVar_60818 & cppMask_un_16_);
	BIT_VEC cppVar_60819 = ROM.rd(cppVar_60818);
	BIT_VEC cppVar_60820 = (cppVar_60819 >> 7) & cppMask_un_1_;
	bool cppVar_60822 = (cppVar_60820 == 1);
	BIT_VEC cppVar_60823 = PC + 1;
	cppVar_60823 = (cppVar_60823 & cppMask_un_16_);
	BIT_VEC cppVar_60824 = ROM.rd(cppVar_60823);
	BIT_VEC cppVar_60825 = (cppVar_60824 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60827 = (cppVar_60825 << 3) | 0;
	cppVar_60827 = (cppVar_60827 & cppMask_un_8_);
	BIT_VEC cppVar_60828 = PC + 1;
	cppVar_60828 = (cppVar_60828 & cppMask_un_16_);
	BIT_VEC cppVar_60829 = ROM.rd(cppVar_60828);
	BIT_VEC cppVar_60830 = (cppVar_60829 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60831 = (cppVar_60830 & cppMask_un_5_);
	BIT_VEC cppVar_60833 = cppVar_60831 + 32;
	cppVar_60833 = (cppVar_60833 & cppMask_un_8_);
	BIT_VEC cppVar_60834 = (cppVar_60822) ? cppVar_60827 : cppVar_60833;
	bool cppVar_60836 = (cppVar_60834 == 152);
	BIT_VEC cppVar_60838 = PC + 1;
	cppVar_60838 = (cppVar_60838 & cppMask_un_16_);
	BIT_VEC cppVar_60839 = ROM.rd(cppVar_60838);
	BIT_VEC cppVar_60840 = (cppVar_60839 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_60841 = (cppVar_60840 & cppMask_un_3_);
	BIT_VEC cppVar_60842 = 1 << static_cast<unsigned>(cppVar_60841);
	cppVar_60842 = (cppVar_60842 & cppMask_un_8_);
	BIT_VEC cppVar_60843 = ~cppVar_60842;
	BIT_VEC cppVar_60844 = PC + 1;
	cppVar_60844 = (cppVar_60844 & cppMask_un_16_);
	BIT_VEC cppVar_60845 = ROM.rd(cppVar_60844);
	BIT_VEC cppVar_60846 = (cppVar_60845 >> 7) & cppMask_un_1_;
	bool cppVar_60847 = (cppVar_60846 == 1);
	BIT_VEC cppVar_60848 = PC + 1;
	cppVar_60848 = (cppVar_60848 & cppMask_un_16_);
	BIT_VEC cppVar_60849 = ROM.rd(cppVar_60848);
	BIT_VEC cppVar_60850 = (cppVar_60849 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60851 = (cppVar_60850 << 3) | 0;
	cppVar_60851 = (cppVar_60851 & cppMask_un_8_);
	BIT_VEC cppVar_60852 = PC + 1;
	cppVar_60852 = (cppVar_60852 & cppMask_un_16_);
	BIT_VEC cppVar_60853 = ROM.rd(cppVar_60852);
	BIT_VEC cppVar_60854 = (cppVar_60853 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60855 = (cppVar_60854 & cppMask_un_5_);
	BIT_VEC cppVar_60856 = cppVar_60855 + 32;
	cppVar_60856 = (cppVar_60856 & cppMask_un_8_);
	BIT_VEC cppVar_60857 = (cppVar_60847) ? cppVar_60851 : cppVar_60856;
	BIT_VEC cppVar_60858 = (cppVar_60857 >> 7) & cppMask_un_1_;
	bool cppVar_60860 = (cppVar_60858 == 0);
	BIT_VEC cppVar_60861 = PC + 1;
	cppVar_60861 = (cppVar_60861 & cppMask_un_16_);
	BIT_VEC cppVar_60862 = ROM.rd(cppVar_60861);
	BIT_VEC cppVar_60863 = (cppVar_60862 >> 7) & cppMask_un_1_;
	bool cppVar_60864 = (cppVar_60863 == 1);
	BIT_VEC cppVar_60865 = PC + 1;
	cppVar_60865 = (cppVar_60865 & cppMask_un_16_);
	BIT_VEC cppVar_60866 = ROM.rd(cppVar_60865);
	BIT_VEC cppVar_60867 = (cppVar_60866 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60868 = (cppVar_60867 << 3) | 0;
	cppVar_60868 = (cppVar_60868 & cppMask_un_8_);
	BIT_VEC cppVar_60869 = PC + 1;
	cppVar_60869 = (cppVar_60869 & cppMask_un_16_);
	BIT_VEC cppVar_60870 = ROM.rd(cppVar_60869);
	BIT_VEC cppVar_60871 = (cppVar_60870 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60872 = (cppVar_60871 & cppMask_un_5_);
	BIT_VEC cppVar_60873 = cppVar_60872 + 32;
	cppVar_60873 = (cppVar_60873 & cppMask_un_8_);
	BIT_VEC cppVar_60874 = (cppVar_60864) ? cppVar_60868 : cppVar_60873;
	BIT_VEC cppVar_60875 = IRAM.rd(cppVar_60874);
	BIT_VEC cppVar_60876 = PC + 1;
	cppVar_60876 = (cppVar_60876 & cppMask_un_16_);
	BIT_VEC cppVar_60877 = ROM.rd(cppVar_60876);
	BIT_VEC cppVar_60878 = (cppVar_60877 >> 7) & cppMask_un_1_;
	bool cppVar_60879 = (cppVar_60878 == 1);
	BIT_VEC cppVar_60880 = PC + 1;
	cppVar_60880 = (cppVar_60880 & cppMask_un_16_);
	BIT_VEC cppVar_60881 = ROM.rd(cppVar_60880);
	BIT_VEC cppVar_60882 = (cppVar_60881 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60883 = (cppVar_60882 << 3) | 0;
	cppVar_60883 = (cppVar_60883 & cppMask_un_8_);
	BIT_VEC cppVar_60884 = PC + 1;
	cppVar_60884 = (cppVar_60884 & cppMask_un_16_);
	BIT_VEC cppVar_60885 = ROM.rd(cppVar_60884);
	BIT_VEC cppVar_60886 = (cppVar_60885 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60887 = (cppVar_60886 & cppMask_un_5_);
	BIT_VEC cppVar_60888 = cppVar_60887 + 32;
	cppVar_60888 = (cppVar_60888 & cppMask_un_8_);
	BIT_VEC cppVar_60889 = (cppVar_60879) ? cppVar_60883 : cppVar_60888;
	bool cppVar_60891 = (cppVar_60889 == 128);
	BIT_VEC cppVar_60892 = PC + 1;
	cppVar_60892 = (cppVar_60892 & cppMask_un_16_);
	BIT_VEC cppVar_60893 = ROM.rd(cppVar_60892);
	BIT_VEC cppVar_60894 = (cppVar_60893 >> 7) & cppMask_un_1_;
	bool cppVar_60895 = (cppVar_60894 == 1);
	BIT_VEC cppVar_60896 = PC + 1;
	cppVar_60896 = (cppVar_60896 & cppMask_un_16_);
	BIT_VEC cppVar_60897 = ROM.rd(cppVar_60896);
	BIT_VEC cppVar_60898 = (cppVar_60897 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60899 = (cppVar_60898 << 3) | 0;
	cppVar_60899 = (cppVar_60899 & cppMask_un_8_);
	BIT_VEC cppVar_60900 = PC + 1;
	cppVar_60900 = (cppVar_60900 & cppMask_un_16_);
	BIT_VEC cppVar_60901 = ROM.rd(cppVar_60900);
	BIT_VEC cppVar_60902 = (cppVar_60901 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60903 = (cppVar_60902 & cppMask_un_5_);
	BIT_VEC cppVar_60904 = cppVar_60903 + 32;
	cppVar_60904 = (cppVar_60904 & cppMask_un_8_);
	BIT_VEC cppVar_60905 = (cppVar_60895) ? cppVar_60899 : cppVar_60904;
	bool cppVar_60907 = (cppVar_60905 == 129);
	BIT_VEC cppVar_60908 = PC + 1;
	cppVar_60908 = (cppVar_60908 & cppMask_un_16_);
	BIT_VEC cppVar_60909 = ROM.rd(cppVar_60908);
	BIT_VEC cppVar_60910 = (cppVar_60909 >> 7) & cppMask_un_1_;
	bool cppVar_60911 = (cppVar_60910 == 1);
	BIT_VEC cppVar_60912 = PC + 1;
	cppVar_60912 = (cppVar_60912 & cppMask_un_16_);
	BIT_VEC cppVar_60913 = ROM.rd(cppVar_60912);
	BIT_VEC cppVar_60914 = (cppVar_60913 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60915 = (cppVar_60914 << 3) | 0;
	cppVar_60915 = (cppVar_60915 & cppMask_un_8_);
	BIT_VEC cppVar_60916 = PC + 1;
	cppVar_60916 = (cppVar_60916 & cppMask_un_16_);
	BIT_VEC cppVar_60917 = ROM.rd(cppVar_60916);
	BIT_VEC cppVar_60918 = (cppVar_60917 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60919 = (cppVar_60918 & cppMask_un_5_);
	BIT_VEC cppVar_60920 = cppVar_60919 + 32;
	cppVar_60920 = (cppVar_60920 & cppMask_un_8_);
	BIT_VEC cppVar_60921 = (cppVar_60911) ? cppVar_60915 : cppVar_60920;
	bool cppVar_60923 = (cppVar_60921 == 130);
	BIT_VEC cppVar_60924 = PC + 1;
	cppVar_60924 = (cppVar_60924 & cppMask_un_16_);
	BIT_VEC cppVar_60925 = ROM.rd(cppVar_60924);
	BIT_VEC cppVar_60926 = (cppVar_60925 >> 7) & cppMask_un_1_;
	bool cppVar_60927 = (cppVar_60926 == 1);
	BIT_VEC cppVar_60928 = PC + 1;
	cppVar_60928 = (cppVar_60928 & cppMask_un_16_);
	BIT_VEC cppVar_60929 = ROM.rd(cppVar_60928);
	BIT_VEC cppVar_60930 = (cppVar_60929 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60931 = (cppVar_60930 << 3) | 0;
	cppVar_60931 = (cppVar_60931 & cppMask_un_8_);
	BIT_VEC cppVar_60932 = PC + 1;
	cppVar_60932 = (cppVar_60932 & cppMask_un_16_);
	BIT_VEC cppVar_60933 = ROM.rd(cppVar_60932);
	BIT_VEC cppVar_60934 = (cppVar_60933 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60935 = (cppVar_60934 & cppMask_un_5_);
	BIT_VEC cppVar_60936 = cppVar_60935 + 32;
	cppVar_60936 = (cppVar_60936 & cppMask_un_8_);
	BIT_VEC cppVar_60937 = (cppVar_60927) ? cppVar_60931 : cppVar_60936;
	bool cppVar_60939 = (cppVar_60937 == 131);
	BIT_VEC cppVar_60940 = PC + 1;
	cppVar_60940 = (cppVar_60940 & cppMask_un_16_);
	BIT_VEC cppVar_60941 = ROM.rd(cppVar_60940);
	BIT_VEC cppVar_60942 = (cppVar_60941 >> 7) & cppMask_un_1_;
	bool cppVar_60943 = (cppVar_60942 == 1);
	BIT_VEC cppVar_60944 = PC + 1;
	cppVar_60944 = (cppVar_60944 & cppMask_un_16_);
	BIT_VEC cppVar_60945 = ROM.rd(cppVar_60944);
	BIT_VEC cppVar_60946 = (cppVar_60945 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60947 = (cppVar_60946 << 3) | 0;
	cppVar_60947 = (cppVar_60947 & cppMask_un_8_);
	BIT_VEC cppVar_60948 = PC + 1;
	cppVar_60948 = (cppVar_60948 & cppMask_un_16_);
	BIT_VEC cppVar_60949 = ROM.rd(cppVar_60948);
	BIT_VEC cppVar_60950 = (cppVar_60949 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60951 = (cppVar_60950 & cppMask_un_5_);
	BIT_VEC cppVar_60952 = cppVar_60951 + 32;
	cppVar_60952 = (cppVar_60952 & cppMask_un_8_);
	BIT_VEC cppVar_60953 = (cppVar_60943) ? cppVar_60947 : cppVar_60952;
	bool cppVar_60955 = (cppVar_60953 == 135);
	BIT_VEC cppVar_60956 = PC + 1;
	cppVar_60956 = (cppVar_60956 & cppMask_un_16_);
	BIT_VEC cppVar_60957 = ROM.rd(cppVar_60956);
	BIT_VEC cppVar_60958 = (cppVar_60957 >> 7) & cppMask_un_1_;
	bool cppVar_60959 = (cppVar_60958 == 1);
	BIT_VEC cppVar_60960 = PC + 1;
	cppVar_60960 = (cppVar_60960 & cppMask_un_16_);
	BIT_VEC cppVar_60961 = ROM.rd(cppVar_60960);
	BIT_VEC cppVar_60962 = (cppVar_60961 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60963 = (cppVar_60962 << 3) | 0;
	cppVar_60963 = (cppVar_60963 & cppMask_un_8_);
	BIT_VEC cppVar_60964 = PC + 1;
	cppVar_60964 = (cppVar_60964 & cppMask_un_16_);
	BIT_VEC cppVar_60965 = ROM.rd(cppVar_60964);
	BIT_VEC cppVar_60966 = (cppVar_60965 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60967 = (cppVar_60966 & cppMask_un_5_);
	BIT_VEC cppVar_60968 = cppVar_60967 + 32;
	cppVar_60968 = (cppVar_60968 & cppMask_un_8_);
	BIT_VEC cppVar_60969 = (cppVar_60959) ? cppVar_60963 : cppVar_60968;
	bool cppVar_60971 = (cppVar_60969 == 136);
	BIT_VEC cppVar_60972 = PC + 1;
	cppVar_60972 = (cppVar_60972 & cppMask_un_16_);
	BIT_VEC cppVar_60973 = ROM.rd(cppVar_60972);
	BIT_VEC cppVar_60974 = (cppVar_60973 >> 7) & cppMask_un_1_;
	bool cppVar_60975 = (cppVar_60974 == 1);
	BIT_VEC cppVar_60976 = PC + 1;
	cppVar_60976 = (cppVar_60976 & cppMask_un_16_);
	BIT_VEC cppVar_60977 = ROM.rd(cppVar_60976);
	BIT_VEC cppVar_60978 = (cppVar_60977 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60979 = (cppVar_60978 << 3) | 0;
	cppVar_60979 = (cppVar_60979 & cppMask_un_8_);
	BIT_VEC cppVar_60980 = PC + 1;
	cppVar_60980 = (cppVar_60980 & cppMask_un_16_);
	BIT_VEC cppVar_60981 = ROM.rd(cppVar_60980);
	BIT_VEC cppVar_60982 = (cppVar_60981 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60983 = (cppVar_60982 & cppMask_un_5_);
	BIT_VEC cppVar_60984 = cppVar_60983 + 32;
	cppVar_60984 = (cppVar_60984 & cppMask_un_8_);
	BIT_VEC cppVar_60985 = (cppVar_60975) ? cppVar_60979 : cppVar_60984;
	bool cppVar_60987 = (cppVar_60985 == 137);
	BIT_VEC cppVar_60988 = PC + 1;
	cppVar_60988 = (cppVar_60988 & cppMask_un_16_);
	BIT_VEC cppVar_60989 = ROM.rd(cppVar_60988);
	BIT_VEC cppVar_60990 = (cppVar_60989 >> 7) & cppMask_un_1_;
	bool cppVar_60991 = (cppVar_60990 == 1);
	BIT_VEC cppVar_60992 = PC + 1;
	cppVar_60992 = (cppVar_60992 & cppMask_un_16_);
	BIT_VEC cppVar_60993 = ROM.rd(cppVar_60992);
	BIT_VEC cppVar_60994 = (cppVar_60993 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60995 = (cppVar_60994 << 3) | 0;
	cppVar_60995 = (cppVar_60995 & cppMask_un_8_);
	BIT_VEC cppVar_60996 = PC + 1;
	cppVar_60996 = (cppVar_60996 & cppMask_un_16_);
	BIT_VEC cppVar_60997 = ROM.rd(cppVar_60996);
	BIT_VEC cppVar_60998 = (cppVar_60997 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_60999 = (cppVar_60998 & cppMask_un_5_);
	BIT_VEC cppVar_61000 = cppVar_60999 + 32;
	cppVar_61000 = (cppVar_61000 & cppMask_un_8_);
	BIT_VEC cppVar_61001 = (cppVar_60991) ? cppVar_60995 : cppVar_61000;
	bool cppVar_61003 = (cppVar_61001 == 138);
	BIT_VEC cppVar_61004 = PC + 1;
	cppVar_61004 = (cppVar_61004 & cppMask_un_16_);
	BIT_VEC cppVar_61005 = ROM.rd(cppVar_61004);
	BIT_VEC cppVar_61006 = (cppVar_61005 >> 7) & cppMask_un_1_;
	bool cppVar_61007 = (cppVar_61006 == 1);
	BIT_VEC cppVar_61008 = PC + 1;
	cppVar_61008 = (cppVar_61008 & cppMask_un_16_);
	BIT_VEC cppVar_61009 = ROM.rd(cppVar_61008);
	BIT_VEC cppVar_61010 = (cppVar_61009 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61011 = (cppVar_61010 << 3) | 0;
	cppVar_61011 = (cppVar_61011 & cppMask_un_8_);
	BIT_VEC cppVar_61012 = PC + 1;
	cppVar_61012 = (cppVar_61012 & cppMask_un_16_);
	BIT_VEC cppVar_61013 = ROM.rd(cppVar_61012);
	BIT_VEC cppVar_61014 = (cppVar_61013 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61015 = (cppVar_61014 & cppMask_un_5_);
	BIT_VEC cppVar_61016 = cppVar_61015 + 32;
	cppVar_61016 = (cppVar_61016 & cppMask_un_8_);
	BIT_VEC cppVar_61017 = (cppVar_61007) ? cppVar_61011 : cppVar_61016;
	bool cppVar_61019 = (cppVar_61017 == 140);
	BIT_VEC cppVar_61020 = PC + 1;
	cppVar_61020 = (cppVar_61020 & cppMask_un_16_);
	BIT_VEC cppVar_61021 = ROM.rd(cppVar_61020);
	BIT_VEC cppVar_61022 = (cppVar_61021 >> 7) & cppMask_un_1_;
	bool cppVar_61023 = (cppVar_61022 == 1);
	BIT_VEC cppVar_61024 = PC + 1;
	cppVar_61024 = (cppVar_61024 & cppMask_un_16_);
	BIT_VEC cppVar_61025 = ROM.rd(cppVar_61024);
	BIT_VEC cppVar_61026 = (cppVar_61025 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61027 = (cppVar_61026 << 3) | 0;
	cppVar_61027 = (cppVar_61027 & cppMask_un_8_);
	BIT_VEC cppVar_61028 = PC + 1;
	cppVar_61028 = (cppVar_61028 & cppMask_un_16_);
	BIT_VEC cppVar_61029 = ROM.rd(cppVar_61028);
	BIT_VEC cppVar_61030 = (cppVar_61029 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61031 = (cppVar_61030 & cppMask_un_5_);
	BIT_VEC cppVar_61032 = cppVar_61031 + 32;
	cppVar_61032 = (cppVar_61032 & cppMask_un_8_);
	BIT_VEC cppVar_61033 = (cppVar_61023) ? cppVar_61027 : cppVar_61032;
	bool cppVar_61035 = (cppVar_61033 == 139);
	BIT_VEC cppVar_61036 = PC + 1;
	cppVar_61036 = (cppVar_61036 & cppMask_un_16_);
	BIT_VEC cppVar_61037 = ROM.rd(cppVar_61036);
	BIT_VEC cppVar_61038 = (cppVar_61037 >> 7) & cppMask_un_1_;
	bool cppVar_61039 = (cppVar_61038 == 1);
	BIT_VEC cppVar_61040 = PC + 1;
	cppVar_61040 = (cppVar_61040 & cppMask_un_16_);
	BIT_VEC cppVar_61041 = ROM.rd(cppVar_61040);
	BIT_VEC cppVar_61042 = (cppVar_61041 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61043 = (cppVar_61042 << 3) | 0;
	cppVar_61043 = (cppVar_61043 & cppMask_un_8_);
	BIT_VEC cppVar_61044 = PC + 1;
	cppVar_61044 = (cppVar_61044 & cppMask_un_16_);
	BIT_VEC cppVar_61045 = ROM.rd(cppVar_61044);
	BIT_VEC cppVar_61046 = (cppVar_61045 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61047 = (cppVar_61046 & cppMask_un_5_);
	BIT_VEC cppVar_61048 = cppVar_61047 + 32;
	cppVar_61048 = (cppVar_61048 & cppMask_un_8_);
	BIT_VEC cppVar_61049 = (cppVar_61039) ? cppVar_61043 : cppVar_61048;
	bool cppVar_61051 = (cppVar_61049 == 141);
	BIT_VEC cppVar_61052 = PC + 1;
	cppVar_61052 = (cppVar_61052 & cppMask_un_16_);
	BIT_VEC cppVar_61053 = ROM.rd(cppVar_61052);
	BIT_VEC cppVar_61054 = (cppVar_61053 >> 7) & cppMask_un_1_;
	bool cppVar_61055 = (cppVar_61054 == 1);
	BIT_VEC cppVar_61056 = PC + 1;
	cppVar_61056 = (cppVar_61056 & cppMask_un_16_);
	BIT_VEC cppVar_61057 = ROM.rd(cppVar_61056);
	BIT_VEC cppVar_61058 = (cppVar_61057 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61059 = (cppVar_61058 << 3) | 0;
	cppVar_61059 = (cppVar_61059 & cppMask_un_8_);
	BIT_VEC cppVar_61060 = PC + 1;
	cppVar_61060 = (cppVar_61060 & cppMask_un_16_);
	BIT_VEC cppVar_61061 = ROM.rd(cppVar_61060);
	BIT_VEC cppVar_61062 = (cppVar_61061 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61063 = (cppVar_61062 & cppMask_un_5_);
	BIT_VEC cppVar_61064 = cppVar_61063 + 32;
	cppVar_61064 = (cppVar_61064 & cppMask_un_8_);
	BIT_VEC cppVar_61065 = (cppVar_61055) ? cppVar_61059 : cppVar_61064;
	bool cppVar_61067 = (cppVar_61065 == 144);
	BIT_VEC cppVar_61068 = PC + 1;
	cppVar_61068 = (cppVar_61068 & cppMask_un_16_);
	BIT_VEC cppVar_61069 = ROM.rd(cppVar_61068);
	BIT_VEC cppVar_61070 = (cppVar_61069 >> 7) & cppMask_un_1_;
	bool cppVar_61071 = (cppVar_61070 == 1);
	BIT_VEC cppVar_61072 = PC + 1;
	cppVar_61072 = (cppVar_61072 & cppMask_un_16_);
	BIT_VEC cppVar_61073 = ROM.rd(cppVar_61072);
	BIT_VEC cppVar_61074 = (cppVar_61073 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61075 = (cppVar_61074 << 3) | 0;
	cppVar_61075 = (cppVar_61075 & cppMask_un_8_);
	BIT_VEC cppVar_61076 = PC + 1;
	cppVar_61076 = (cppVar_61076 & cppMask_un_16_);
	BIT_VEC cppVar_61077 = ROM.rd(cppVar_61076);
	BIT_VEC cppVar_61078 = (cppVar_61077 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61079 = (cppVar_61078 & cppMask_un_5_);
	BIT_VEC cppVar_61080 = cppVar_61079 + 32;
	cppVar_61080 = (cppVar_61080 & cppMask_un_8_);
	BIT_VEC cppVar_61081 = (cppVar_61071) ? cppVar_61075 : cppVar_61080;
	bool cppVar_61083 = (cppVar_61081 == 152);
	BIT_VEC cppVar_61084 = PC + 1;
	cppVar_61084 = (cppVar_61084 & cppMask_un_16_);
	BIT_VEC cppVar_61085 = ROM.rd(cppVar_61084);
	BIT_VEC cppVar_61086 = (cppVar_61085 >> 7) & cppMask_un_1_;
	bool cppVar_61087 = (cppVar_61086 == 1);
	BIT_VEC cppVar_61088 = PC + 1;
	cppVar_61088 = (cppVar_61088 & cppMask_un_16_);
	BIT_VEC cppVar_61089 = ROM.rd(cppVar_61088);
	BIT_VEC cppVar_61090 = (cppVar_61089 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61091 = (cppVar_61090 << 3) | 0;
	cppVar_61091 = (cppVar_61091 & cppMask_un_8_);
	BIT_VEC cppVar_61092 = PC + 1;
	cppVar_61092 = (cppVar_61092 & cppMask_un_16_);
	BIT_VEC cppVar_61093 = ROM.rd(cppVar_61092);
	BIT_VEC cppVar_61094 = (cppVar_61093 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61095 = (cppVar_61094 & cppMask_un_5_);
	BIT_VEC cppVar_61096 = cppVar_61095 + 32;
	cppVar_61096 = (cppVar_61096 & cppMask_un_8_);
	BIT_VEC cppVar_61097 = (cppVar_61087) ? cppVar_61091 : cppVar_61096;
	bool cppVar_61099 = (cppVar_61097 == 153);
	BIT_VEC cppVar_61100 = PC + 1;
	cppVar_61100 = (cppVar_61100 & cppMask_un_16_);
	BIT_VEC cppVar_61101 = ROM.rd(cppVar_61100);
	BIT_VEC cppVar_61102 = (cppVar_61101 >> 7) & cppMask_un_1_;
	bool cppVar_61103 = (cppVar_61102 == 1);
	BIT_VEC cppVar_61104 = PC + 1;
	cppVar_61104 = (cppVar_61104 & cppMask_un_16_);
	BIT_VEC cppVar_61105 = ROM.rd(cppVar_61104);
	BIT_VEC cppVar_61106 = (cppVar_61105 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61107 = (cppVar_61106 << 3) | 0;
	cppVar_61107 = (cppVar_61107 & cppMask_un_8_);
	BIT_VEC cppVar_61108 = PC + 1;
	cppVar_61108 = (cppVar_61108 & cppMask_un_16_);
	BIT_VEC cppVar_61109 = ROM.rd(cppVar_61108);
	BIT_VEC cppVar_61110 = (cppVar_61109 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61111 = (cppVar_61110 & cppMask_un_5_);
	BIT_VEC cppVar_61112 = cppVar_61111 + 32;
	cppVar_61112 = (cppVar_61112 & cppMask_un_8_);
	BIT_VEC cppVar_61113 = (cppVar_61103) ? cppVar_61107 : cppVar_61112;
	bool cppVar_61115 = (cppVar_61113 == 160);
	BIT_VEC cppVar_61116 = PC + 1;
	cppVar_61116 = (cppVar_61116 & cppMask_un_16_);
	BIT_VEC cppVar_61117 = ROM.rd(cppVar_61116);
	BIT_VEC cppVar_61118 = (cppVar_61117 >> 7) & cppMask_un_1_;
	bool cppVar_61119 = (cppVar_61118 == 1);
	BIT_VEC cppVar_61120 = PC + 1;
	cppVar_61120 = (cppVar_61120 & cppMask_un_16_);
	BIT_VEC cppVar_61121 = ROM.rd(cppVar_61120);
	BIT_VEC cppVar_61122 = (cppVar_61121 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61123 = (cppVar_61122 << 3) | 0;
	cppVar_61123 = (cppVar_61123 & cppMask_un_8_);
	BIT_VEC cppVar_61124 = PC + 1;
	cppVar_61124 = (cppVar_61124 & cppMask_un_16_);
	BIT_VEC cppVar_61125 = ROM.rd(cppVar_61124);
	BIT_VEC cppVar_61126 = (cppVar_61125 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61127 = (cppVar_61126 & cppMask_un_5_);
	BIT_VEC cppVar_61128 = cppVar_61127 + 32;
	cppVar_61128 = (cppVar_61128 & cppMask_un_8_);
	BIT_VEC cppVar_61129 = (cppVar_61119) ? cppVar_61123 : cppVar_61128;
	bool cppVar_61131 = (cppVar_61129 == 168);
	BIT_VEC cppVar_61132 = PC + 1;
	cppVar_61132 = (cppVar_61132 & cppMask_un_16_);
	BIT_VEC cppVar_61133 = ROM.rd(cppVar_61132);
	BIT_VEC cppVar_61134 = (cppVar_61133 >> 7) & cppMask_un_1_;
	bool cppVar_61135 = (cppVar_61134 == 1);
	BIT_VEC cppVar_61136 = PC + 1;
	cppVar_61136 = (cppVar_61136 & cppMask_un_16_);
	BIT_VEC cppVar_61137 = ROM.rd(cppVar_61136);
	BIT_VEC cppVar_61138 = (cppVar_61137 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61139 = (cppVar_61138 << 3) | 0;
	cppVar_61139 = (cppVar_61139 & cppMask_un_8_);
	BIT_VEC cppVar_61140 = PC + 1;
	cppVar_61140 = (cppVar_61140 & cppMask_un_16_);
	BIT_VEC cppVar_61141 = ROM.rd(cppVar_61140);
	BIT_VEC cppVar_61142 = (cppVar_61141 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61143 = (cppVar_61142 & cppMask_un_5_);
	BIT_VEC cppVar_61144 = cppVar_61143 + 32;
	cppVar_61144 = (cppVar_61144 & cppMask_un_8_);
	BIT_VEC cppVar_61145 = (cppVar_61135) ? cppVar_61139 : cppVar_61144;
	bool cppVar_61147 = (cppVar_61145 == 176);
	BIT_VEC cppVar_61148 = PC + 1;
	cppVar_61148 = (cppVar_61148 & cppMask_un_16_);
	BIT_VEC cppVar_61149 = ROM.rd(cppVar_61148);
	BIT_VEC cppVar_61150 = (cppVar_61149 >> 7) & cppMask_un_1_;
	bool cppVar_61151 = (cppVar_61150 == 1);
	BIT_VEC cppVar_61152 = PC + 1;
	cppVar_61152 = (cppVar_61152 & cppMask_un_16_);
	BIT_VEC cppVar_61153 = ROM.rd(cppVar_61152);
	BIT_VEC cppVar_61154 = (cppVar_61153 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61155 = (cppVar_61154 << 3) | 0;
	cppVar_61155 = (cppVar_61155 & cppMask_un_8_);
	BIT_VEC cppVar_61156 = PC + 1;
	cppVar_61156 = (cppVar_61156 & cppMask_un_16_);
	BIT_VEC cppVar_61157 = ROM.rd(cppVar_61156);
	BIT_VEC cppVar_61158 = (cppVar_61157 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61159 = (cppVar_61158 & cppMask_un_5_);
	BIT_VEC cppVar_61160 = cppVar_61159 + 32;
	cppVar_61160 = (cppVar_61160 & cppMask_un_8_);
	BIT_VEC cppVar_61161 = (cppVar_61151) ? cppVar_61155 : cppVar_61160;
	bool cppVar_61163 = (cppVar_61161 == 184);
	BIT_VEC cppVar_61164 = PC + 1;
	cppVar_61164 = (cppVar_61164 & cppMask_un_16_);
	BIT_VEC cppVar_61165 = ROM.rd(cppVar_61164);
	BIT_VEC cppVar_61166 = (cppVar_61165 >> 7) & cppMask_un_1_;
	bool cppVar_61167 = (cppVar_61166 == 1);
	BIT_VEC cppVar_61168 = PC + 1;
	cppVar_61168 = (cppVar_61168 & cppMask_un_16_);
	BIT_VEC cppVar_61169 = ROM.rd(cppVar_61168);
	BIT_VEC cppVar_61170 = (cppVar_61169 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61171 = (cppVar_61170 << 3) | 0;
	cppVar_61171 = (cppVar_61171 & cppMask_un_8_);
	BIT_VEC cppVar_61172 = PC + 1;
	cppVar_61172 = (cppVar_61172 & cppMask_un_16_);
	BIT_VEC cppVar_61173 = ROM.rd(cppVar_61172);
	BIT_VEC cppVar_61174 = (cppVar_61173 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61175 = (cppVar_61174 & cppMask_un_5_);
	BIT_VEC cppVar_61176 = cppVar_61175 + 32;
	cppVar_61176 = (cppVar_61176 & cppMask_un_8_);
	BIT_VEC cppVar_61177 = (cppVar_61167) ? cppVar_61171 : cppVar_61176;
	bool cppVar_61179 = (cppVar_61177 == 208);
	BIT_VEC cppVar_61180 = PC + 1;
	cppVar_61180 = (cppVar_61180 & cppMask_un_16_);
	BIT_VEC cppVar_61181 = ROM.rd(cppVar_61180);
	BIT_VEC cppVar_61182 = (cppVar_61181 >> 7) & cppMask_un_1_;
	bool cppVar_61183 = (cppVar_61182 == 1);
	BIT_VEC cppVar_61184 = PC + 1;
	cppVar_61184 = (cppVar_61184 & cppMask_un_16_);
	BIT_VEC cppVar_61185 = ROM.rd(cppVar_61184);
	BIT_VEC cppVar_61186 = (cppVar_61185 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61187 = (cppVar_61186 << 3) | 0;
	cppVar_61187 = (cppVar_61187 & cppMask_un_8_);
	BIT_VEC cppVar_61188 = PC + 1;
	cppVar_61188 = (cppVar_61188 & cppMask_un_16_);
	BIT_VEC cppVar_61189 = ROM.rd(cppVar_61188);
	BIT_VEC cppVar_61190 = (cppVar_61189 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61191 = (cppVar_61190 & cppMask_un_5_);
	BIT_VEC cppVar_61192 = cppVar_61191 + 32;
	cppVar_61192 = (cppVar_61192 & cppMask_un_8_);
	BIT_VEC cppVar_61193 = (cppVar_61183) ? cppVar_61187 : cppVar_61192;
	bool cppVar_61195 = (cppVar_61193 == 224);
	BIT_VEC cppVar_61196 = PC + 1;
	cppVar_61196 = (cppVar_61196 & cppMask_un_16_);
	BIT_VEC cppVar_61197 = ROM.rd(cppVar_61196);
	BIT_VEC cppVar_61198 = (cppVar_61197 >> 7) & cppMask_un_1_;
	bool cppVar_61199 = (cppVar_61198 == 1);
	BIT_VEC cppVar_61200 = PC + 1;
	cppVar_61200 = (cppVar_61200 & cppMask_un_16_);
	BIT_VEC cppVar_61201 = ROM.rd(cppVar_61200);
	BIT_VEC cppVar_61202 = (cppVar_61201 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61203 = (cppVar_61202 << 3) | 0;
	cppVar_61203 = (cppVar_61203 & cppMask_un_8_);
	BIT_VEC cppVar_61204 = PC + 1;
	cppVar_61204 = (cppVar_61204 & cppMask_un_16_);
	BIT_VEC cppVar_61205 = ROM.rd(cppVar_61204);
	BIT_VEC cppVar_61206 = (cppVar_61205 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_61207 = (cppVar_61206 & cppMask_un_5_);
	BIT_VEC cppVar_61208 = cppVar_61207 + 32;
	cppVar_61208 = (cppVar_61208 & cppMask_un_8_);
	BIT_VEC cppVar_61209 = (cppVar_61199) ? cppVar_61203 : cppVar_61208;
	bool cppVar_61211 = (cppVar_61209 == 240);
	BIT_VEC cppVar_61213 = (cppVar_61211) ? B : 0;
	BIT_VEC cppVar_61214 = (cppVar_61195) ? ACC : cppVar_61213;
	BIT_VEC cppVar_61215 = (cppVar_61179) ? PSW : cppVar_61214;
	BIT_VEC cppVar_61216 = (cppVar_61163) ? IP : cppVar_61215;
	BIT_VEC cppVar_61217 = (cppVar_61147) ? P3 : cppVar_61216;
	BIT_VEC cppVar_61218 = (cppVar_61131) ? IE : cppVar_61217;
	BIT_VEC cppVar_61219 = (cppVar_61115) ? P2 : cppVar_61218;
	BIT_VEC cppVar_61220 = (cppVar_61099) ? SBUF : cppVar_61219;
	BIT_VEC cppVar_61221 = (cppVar_61083) ? SCON : cppVar_61220;
	BIT_VEC cppVar_61222 = (cppVar_61067) ? P1 : cppVar_61221;
	BIT_VEC cppVar_61223 = (cppVar_61051) ? TH1 : cppVar_61222;
	BIT_VEC cppVar_61224 = (cppVar_61035) ? TL1 : cppVar_61223;
	BIT_VEC cppVar_61225 = (cppVar_61019) ? TH0 : cppVar_61224;
	BIT_VEC cppVar_61226 = (cppVar_61003) ? TL0 : cppVar_61225;
	BIT_VEC cppVar_61227 = (cppVar_60987) ? TMOD : cppVar_61226;
	BIT_VEC cppVar_61228 = (cppVar_60971) ? TCON : cppVar_61227;
	BIT_VEC cppVar_61229 = (cppVar_60955) ? PCON : cppVar_61228;
	BIT_VEC cppVar_61230 = (cppVar_60939) ? DPH : cppVar_61229;
	BIT_VEC cppVar_61231 = (cppVar_60923) ? DPL : cppVar_61230;
	BIT_VEC cppVar_61232 = (cppVar_60907) ? SP : cppVar_61231;
	BIT_VEC cppVar_61233 = (cppVar_60891) ? P0 : cppVar_61232;
	BIT_VEC cppVar_61234 = (cppVar_60860) ? cppVar_60875 : cppVar_61233;
	BIT_VEC cppVar_61235 = cppVar_60843 & cppVar_61234;
	BIT_VEC cppVar_61236 = (PSW >> 7) & cppMask_un_1_;
	BIT_VEC cppVar_61237 = (cppVar_61236 & cppMask_un_1_);
	BIT_VEC cppVar_61238 = PC + 1;
	cppVar_61238 = (cppVar_61238 & cppMask_un_16_);
	BIT_VEC cppVar_61239 = ROM.rd(cppVar_61238);
	BIT_VEC cppVar_61240 = (cppVar_61239 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_61241 = (cppVar_61240 & cppMask_un_3_);
	BIT_VEC cppVar_61242 = cppVar_61237 << static_cast<unsigned>(cppVar_61241);
	cppVar_61242 = (cppVar_61242 & cppMask_un_8_);
	BIT_VEC cppVar_61243 = cppVar_61235 | cppVar_61242;
	BIT_VEC cppVar_61244 = (cppVar_60836) ? cppVar_61243 : SCON;
	BIT_VEC cppVar_61245 = ROM.rd(PC);
	bool cppVar_61247 = (cppVar_61245 == 143);
	BIT_VEC cppVar_61249 = PC + 1;
	cppVar_61249 = (cppVar_61249 & cppMask_un_16_);
	BIT_VEC cppVar_61250 = ROM.rd(cppVar_61249);
	bool cppVar_61252 = (cppVar_61250 == 152);
	BIT_VEC cppVar_61254 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61256 = (cppVar_61254 << 3) | 7;
	cppVar_61256 = (cppVar_61256 & cppMask_un_5_);
	BIT_VEC cppVar_61257 = (0 << 5) | cppVar_61256;
	cppVar_61257 = (cppVar_61257 & cppMask_un_8_);
	BIT_VEC cppVar_61258 = (cppVar_61257 >> 7) & cppMask_un_1_;
	bool cppVar_61260 = (cppVar_61258 == 0);
	BIT_VEC cppVar_61261 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61262 = (cppVar_61261 << 3) | 7;
	cppVar_61262 = (cppVar_61262 & cppMask_un_5_);
	BIT_VEC cppVar_61263 = (0 << 5) | cppVar_61262;
	cppVar_61263 = (cppVar_61263 & cppMask_un_8_);
	BIT_VEC cppVar_61264 = IRAM.rd(cppVar_61263);
	BIT_VEC cppVar_61265 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61266 = (cppVar_61265 << 3) | 7;
	cppVar_61266 = (cppVar_61266 & cppMask_un_5_);
	BIT_VEC cppVar_61267 = (0 << 5) | cppVar_61266;
	cppVar_61267 = (cppVar_61267 & cppMask_un_8_);
	bool cppVar_61269 = (cppVar_61267 == 128);
	BIT_VEC cppVar_61270 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61271 = (cppVar_61270 << 3) | 7;
	cppVar_61271 = (cppVar_61271 & cppMask_un_5_);
	BIT_VEC cppVar_61272 = (0 << 5) | cppVar_61271;
	cppVar_61272 = (cppVar_61272 & cppMask_un_8_);
	bool cppVar_61274 = (cppVar_61272 == 129);
	BIT_VEC cppVar_61275 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61276 = (cppVar_61275 << 3) | 7;
	cppVar_61276 = (cppVar_61276 & cppMask_un_5_);
	BIT_VEC cppVar_61277 = (0 << 5) | cppVar_61276;
	cppVar_61277 = (cppVar_61277 & cppMask_un_8_);
	bool cppVar_61279 = (cppVar_61277 == 130);
	BIT_VEC cppVar_61280 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61281 = (cppVar_61280 << 3) | 7;
	cppVar_61281 = (cppVar_61281 & cppMask_un_5_);
	BIT_VEC cppVar_61282 = (0 << 5) | cppVar_61281;
	cppVar_61282 = (cppVar_61282 & cppMask_un_8_);
	bool cppVar_61284 = (cppVar_61282 == 131);
	BIT_VEC cppVar_61285 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61286 = (cppVar_61285 << 3) | 7;
	cppVar_61286 = (cppVar_61286 & cppMask_un_5_);
	BIT_VEC cppVar_61287 = (0 << 5) | cppVar_61286;
	cppVar_61287 = (cppVar_61287 & cppMask_un_8_);
	bool cppVar_61289 = (cppVar_61287 == 135);
	BIT_VEC cppVar_61290 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61291 = (cppVar_61290 << 3) | 7;
	cppVar_61291 = (cppVar_61291 & cppMask_un_5_);
	BIT_VEC cppVar_61292 = (0 << 5) | cppVar_61291;
	cppVar_61292 = (cppVar_61292 & cppMask_un_8_);
	bool cppVar_61294 = (cppVar_61292 == 136);
	BIT_VEC cppVar_61295 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61296 = (cppVar_61295 << 3) | 7;
	cppVar_61296 = (cppVar_61296 & cppMask_un_5_);
	BIT_VEC cppVar_61297 = (0 << 5) | cppVar_61296;
	cppVar_61297 = (cppVar_61297 & cppMask_un_8_);
	bool cppVar_61299 = (cppVar_61297 == 137);
	BIT_VEC cppVar_61300 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61301 = (cppVar_61300 << 3) | 7;
	cppVar_61301 = (cppVar_61301 & cppMask_un_5_);
	BIT_VEC cppVar_61302 = (0 << 5) | cppVar_61301;
	cppVar_61302 = (cppVar_61302 & cppMask_un_8_);
	bool cppVar_61304 = (cppVar_61302 == 138);
	BIT_VEC cppVar_61305 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61306 = (cppVar_61305 << 3) | 7;
	cppVar_61306 = (cppVar_61306 & cppMask_un_5_);
	BIT_VEC cppVar_61307 = (0 << 5) | cppVar_61306;
	cppVar_61307 = (cppVar_61307 & cppMask_un_8_);
	bool cppVar_61309 = (cppVar_61307 == 140);
	BIT_VEC cppVar_61310 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61311 = (cppVar_61310 << 3) | 7;
	cppVar_61311 = (cppVar_61311 & cppMask_un_5_);
	BIT_VEC cppVar_61312 = (0 << 5) | cppVar_61311;
	cppVar_61312 = (cppVar_61312 & cppMask_un_8_);
	bool cppVar_61314 = (cppVar_61312 == 139);
	BIT_VEC cppVar_61315 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61316 = (cppVar_61315 << 3) | 7;
	cppVar_61316 = (cppVar_61316 & cppMask_un_5_);
	BIT_VEC cppVar_61317 = (0 << 5) | cppVar_61316;
	cppVar_61317 = (cppVar_61317 & cppMask_un_8_);
	bool cppVar_61319 = (cppVar_61317 == 141);
	BIT_VEC cppVar_61320 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61321 = (cppVar_61320 << 3) | 7;
	cppVar_61321 = (cppVar_61321 & cppMask_un_5_);
	BIT_VEC cppVar_61322 = (0 << 5) | cppVar_61321;
	cppVar_61322 = (cppVar_61322 & cppMask_un_8_);
	bool cppVar_61324 = (cppVar_61322 == 144);
	BIT_VEC cppVar_61325 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61326 = (cppVar_61325 << 3) | 7;
	cppVar_61326 = (cppVar_61326 & cppMask_un_5_);
	BIT_VEC cppVar_61327 = (0 << 5) | cppVar_61326;
	cppVar_61327 = (cppVar_61327 & cppMask_un_8_);
	bool cppVar_61329 = (cppVar_61327 == 152);
	BIT_VEC cppVar_61330 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61331 = (cppVar_61330 << 3) | 7;
	cppVar_61331 = (cppVar_61331 & cppMask_un_5_);
	BIT_VEC cppVar_61332 = (0 << 5) | cppVar_61331;
	cppVar_61332 = (cppVar_61332 & cppMask_un_8_);
	bool cppVar_61334 = (cppVar_61332 == 153);
	BIT_VEC cppVar_61335 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61336 = (cppVar_61335 << 3) | 7;
	cppVar_61336 = (cppVar_61336 & cppMask_un_5_);
	BIT_VEC cppVar_61337 = (0 << 5) | cppVar_61336;
	cppVar_61337 = (cppVar_61337 & cppMask_un_8_);
	bool cppVar_61339 = (cppVar_61337 == 160);
	BIT_VEC cppVar_61340 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61341 = (cppVar_61340 << 3) | 7;
	cppVar_61341 = (cppVar_61341 & cppMask_un_5_);
	BIT_VEC cppVar_61342 = (0 << 5) | cppVar_61341;
	cppVar_61342 = (cppVar_61342 & cppMask_un_8_);
	bool cppVar_61344 = (cppVar_61342 == 168);
	BIT_VEC cppVar_61345 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61346 = (cppVar_61345 << 3) | 7;
	cppVar_61346 = (cppVar_61346 & cppMask_un_5_);
	BIT_VEC cppVar_61347 = (0 << 5) | cppVar_61346;
	cppVar_61347 = (cppVar_61347 & cppMask_un_8_);
	bool cppVar_61349 = (cppVar_61347 == 176);
	BIT_VEC cppVar_61350 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61351 = (cppVar_61350 << 3) | 7;
	cppVar_61351 = (cppVar_61351 & cppMask_un_5_);
	BIT_VEC cppVar_61352 = (0 << 5) | cppVar_61351;
	cppVar_61352 = (cppVar_61352 & cppMask_un_8_);
	bool cppVar_61354 = (cppVar_61352 == 184);
	BIT_VEC cppVar_61355 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61356 = (cppVar_61355 << 3) | 7;
	cppVar_61356 = (cppVar_61356 & cppMask_un_5_);
	BIT_VEC cppVar_61357 = (0 << 5) | cppVar_61356;
	cppVar_61357 = (cppVar_61357 & cppMask_un_8_);
	bool cppVar_61359 = (cppVar_61357 == 208);
	BIT_VEC cppVar_61360 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61361 = (cppVar_61360 << 3) | 7;
	cppVar_61361 = (cppVar_61361 & cppMask_un_5_);
	BIT_VEC cppVar_61362 = (0 << 5) | cppVar_61361;
	cppVar_61362 = (cppVar_61362 & cppMask_un_8_);
	bool cppVar_61364 = (cppVar_61362 == 224);
	BIT_VEC cppVar_61365 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61366 = (cppVar_61365 << 3) | 7;
	cppVar_61366 = (cppVar_61366 & cppMask_un_5_);
	BIT_VEC cppVar_61367 = (0 << 5) | cppVar_61366;
	cppVar_61367 = (cppVar_61367 & cppMask_un_8_);
	bool cppVar_61369 = (cppVar_61367 == 240);
	BIT_VEC cppVar_61371 = (cppVar_61369) ? B : 0;
	BIT_VEC cppVar_61372 = (cppVar_61364) ? ACC : cppVar_61371;
	BIT_VEC cppVar_61373 = (cppVar_61359) ? PSW : cppVar_61372;
	BIT_VEC cppVar_61374 = (cppVar_61354) ? IP : cppVar_61373;
	BIT_VEC cppVar_61375 = (cppVar_61349) ? P3 : cppVar_61374;
	BIT_VEC cppVar_61376 = (cppVar_61344) ? IE : cppVar_61375;
	BIT_VEC cppVar_61377 = (cppVar_61339) ? P2 : cppVar_61376;
	BIT_VEC cppVar_61378 = (cppVar_61334) ? SBUF : cppVar_61377;
	BIT_VEC cppVar_61379 = (cppVar_61329) ? SCON : cppVar_61378;
	BIT_VEC cppVar_61380 = (cppVar_61324) ? P1 : cppVar_61379;
	BIT_VEC cppVar_61381 = (cppVar_61319) ? TH1 : cppVar_61380;
	BIT_VEC cppVar_61382 = (cppVar_61314) ? TL1 : cppVar_61381;
	BIT_VEC cppVar_61383 = (cppVar_61309) ? TH0 : cppVar_61382;
	BIT_VEC cppVar_61384 = (cppVar_61304) ? TL0 : cppVar_61383;
	BIT_VEC cppVar_61385 = (cppVar_61299) ? TMOD : cppVar_61384;
	BIT_VEC cppVar_61386 = (cppVar_61294) ? TCON : cppVar_61385;
	BIT_VEC cppVar_61387 = (cppVar_61289) ? PCON : cppVar_61386;
	BIT_VEC cppVar_61388 = (cppVar_61284) ? DPH : cppVar_61387;
	BIT_VEC cppVar_61389 = (cppVar_61279) ? DPL : cppVar_61388;
	BIT_VEC cppVar_61390 = (cppVar_61274) ? SP : cppVar_61389;
	BIT_VEC cppVar_61391 = (cppVar_61269) ? P0 : cppVar_61390;
	BIT_VEC cppVar_61392 = (cppVar_61260) ? cppVar_61264 : cppVar_61391;
	BIT_VEC cppVar_61393 = (cppVar_61252) ? cppVar_61392 : SCON;
	BIT_VEC cppVar_61394 = ROM.rd(PC);
	bool cppVar_61396 = (cppVar_61394 == 142);
	BIT_VEC cppVar_61398 = PC + 1;
	cppVar_61398 = (cppVar_61398 & cppMask_un_16_);
	BIT_VEC cppVar_61399 = ROM.rd(cppVar_61398);
	bool cppVar_61401 = (cppVar_61399 == 152);
	BIT_VEC cppVar_61403 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61405 = (cppVar_61403 << 3) | 6;
	cppVar_61405 = (cppVar_61405 & cppMask_un_5_);
	BIT_VEC cppVar_61406 = (0 << 5) | cppVar_61405;
	cppVar_61406 = (cppVar_61406 & cppMask_un_8_);
	BIT_VEC cppVar_61407 = (cppVar_61406 >> 7) & cppMask_un_1_;
	bool cppVar_61409 = (cppVar_61407 == 0);
	BIT_VEC cppVar_61410 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61411 = (cppVar_61410 << 3) | 6;
	cppVar_61411 = (cppVar_61411 & cppMask_un_5_);
	BIT_VEC cppVar_61412 = (0 << 5) | cppVar_61411;
	cppVar_61412 = (cppVar_61412 & cppMask_un_8_);
	BIT_VEC cppVar_61413 = IRAM.rd(cppVar_61412);
	BIT_VEC cppVar_61414 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61415 = (cppVar_61414 << 3) | 6;
	cppVar_61415 = (cppVar_61415 & cppMask_un_5_);
	BIT_VEC cppVar_61416 = (0 << 5) | cppVar_61415;
	cppVar_61416 = (cppVar_61416 & cppMask_un_8_);
	bool cppVar_61418 = (cppVar_61416 == 128);
	BIT_VEC cppVar_61419 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61420 = (cppVar_61419 << 3) | 6;
	cppVar_61420 = (cppVar_61420 & cppMask_un_5_);
	BIT_VEC cppVar_61421 = (0 << 5) | cppVar_61420;
	cppVar_61421 = (cppVar_61421 & cppMask_un_8_);
	bool cppVar_61423 = (cppVar_61421 == 129);
	BIT_VEC cppVar_61424 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61425 = (cppVar_61424 << 3) | 6;
	cppVar_61425 = (cppVar_61425 & cppMask_un_5_);
	BIT_VEC cppVar_61426 = (0 << 5) | cppVar_61425;
	cppVar_61426 = (cppVar_61426 & cppMask_un_8_);
	bool cppVar_61428 = (cppVar_61426 == 130);
	BIT_VEC cppVar_61429 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61430 = (cppVar_61429 << 3) | 6;
	cppVar_61430 = (cppVar_61430 & cppMask_un_5_);
	BIT_VEC cppVar_61431 = (0 << 5) | cppVar_61430;
	cppVar_61431 = (cppVar_61431 & cppMask_un_8_);
	bool cppVar_61433 = (cppVar_61431 == 131);
	BIT_VEC cppVar_61434 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61435 = (cppVar_61434 << 3) | 6;
	cppVar_61435 = (cppVar_61435 & cppMask_un_5_);
	BIT_VEC cppVar_61436 = (0 << 5) | cppVar_61435;
	cppVar_61436 = (cppVar_61436 & cppMask_un_8_);
	bool cppVar_61438 = (cppVar_61436 == 135);
	BIT_VEC cppVar_61439 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61440 = (cppVar_61439 << 3) | 6;
	cppVar_61440 = (cppVar_61440 & cppMask_un_5_);
	BIT_VEC cppVar_61441 = (0 << 5) | cppVar_61440;
	cppVar_61441 = (cppVar_61441 & cppMask_un_8_);
	bool cppVar_61443 = (cppVar_61441 == 136);
	BIT_VEC cppVar_61444 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61445 = (cppVar_61444 << 3) | 6;
	cppVar_61445 = (cppVar_61445 & cppMask_un_5_);
	BIT_VEC cppVar_61446 = (0 << 5) | cppVar_61445;
	cppVar_61446 = (cppVar_61446 & cppMask_un_8_);
	bool cppVar_61448 = (cppVar_61446 == 137);
	BIT_VEC cppVar_61449 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61450 = (cppVar_61449 << 3) | 6;
	cppVar_61450 = (cppVar_61450 & cppMask_un_5_);
	BIT_VEC cppVar_61451 = (0 << 5) | cppVar_61450;
	cppVar_61451 = (cppVar_61451 & cppMask_un_8_);
	bool cppVar_61453 = (cppVar_61451 == 138);
	BIT_VEC cppVar_61454 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61455 = (cppVar_61454 << 3) | 6;
	cppVar_61455 = (cppVar_61455 & cppMask_un_5_);
	BIT_VEC cppVar_61456 = (0 << 5) | cppVar_61455;
	cppVar_61456 = (cppVar_61456 & cppMask_un_8_);
	bool cppVar_61458 = (cppVar_61456 == 140);
	BIT_VEC cppVar_61459 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61460 = (cppVar_61459 << 3) | 6;
	cppVar_61460 = (cppVar_61460 & cppMask_un_5_);
	BIT_VEC cppVar_61461 = (0 << 5) | cppVar_61460;
	cppVar_61461 = (cppVar_61461 & cppMask_un_8_);
	bool cppVar_61463 = (cppVar_61461 == 139);
	BIT_VEC cppVar_61464 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61465 = (cppVar_61464 << 3) | 6;
	cppVar_61465 = (cppVar_61465 & cppMask_un_5_);
	BIT_VEC cppVar_61466 = (0 << 5) | cppVar_61465;
	cppVar_61466 = (cppVar_61466 & cppMask_un_8_);
	bool cppVar_61468 = (cppVar_61466 == 141);
	BIT_VEC cppVar_61469 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61470 = (cppVar_61469 << 3) | 6;
	cppVar_61470 = (cppVar_61470 & cppMask_un_5_);
	BIT_VEC cppVar_61471 = (0 << 5) | cppVar_61470;
	cppVar_61471 = (cppVar_61471 & cppMask_un_8_);
	bool cppVar_61473 = (cppVar_61471 == 144);
	BIT_VEC cppVar_61474 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61475 = (cppVar_61474 << 3) | 6;
	cppVar_61475 = (cppVar_61475 & cppMask_un_5_);
	BIT_VEC cppVar_61476 = (0 << 5) | cppVar_61475;
	cppVar_61476 = (cppVar_61476 & cppMask_un_8_);
	bool cppVar_61478 = (cppVar_61476 == 152);
	BIT_VEC cppVar_61479 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61480 = (cppVar_61479 << 3) | 6;
	cppVar_61480 = (cppVar_61480 & cppMask_un_5_);
	BIT_VEC cppVar_61481 = (0 << 5) | cppVar_61480;
	cppVar_61481 = (cppVar_61481 & cppMask_un_8_);
	bool cppVar_61483 = (cppVar_61481 == 153);
	BIT_VEC cppVar_61484 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61485 = (cppVar_61484 << 3) | 6;
	cppVar_61485 = (cppVar_61485 & cppMask_un_5_);
	BIT_VEC cppVar_61486 = (0 << 5) | cppVar_61485;
	cppVar_61486 = (cppVar_61486 & cppMask_un_8_);
	bool cppVar_61488 = (cppVar_61486 == 160);
	BIT_VEC cppVar_61489 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61490 = (cppVar_61489 << 3) | 6;
	cppVar_61490 = (cppVar_61490 & cppMask_un_5_);
	BIT_VEC cppVar_61491 = (0 << 5) | cppVar_61490;
	cppVar_61491 = (cppVar_61491 & cppMask_un_8_);
	bool cppVar_61493 = (cppVar_61491 == 168);
	BIT_VEC cppVar_61494 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61495 = (cppVar_61494 << 3) | 6;
	cppVar_61495 = (cppVar_61495 & cppMask_un_5_);
	BIT_VEC cppVar_61496 = (0 << 5) | cppVar_61495;
	cppVar_61496 = (cppVar_61496 & cppMask_un_8_);
	bool cppVar_61498 = (cppVar_61496 == 176);
	BIT_VEC cppVar_61499 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61500 = (cppVar_61499 << 3) | 6;
	cppVar_61500 = (cppVar_61500 & cppMask_un_5_);
	BIT_VEC cppVar_61501 = (0 << 5) | cppVar_61500;
	cppVar_61501 = (cppVar_61501 & cppMask_un_8_);
	bool cppVar_61503 = (cppVar_61501 == 184);
	BIT_VEC cppVar_61504 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61505 = (cppVar_61504 << 3) | 6;
	cppVar_61505 = (cppVar_61505 & cppMask_un_5_);
	BIT_VEC cppVar_61506 = (0 << 5) | cppVar_61505;
	cppVar_61506 = (cppVar_61506 & cppMask_un_8_);
	bool cppVar_61508 = (cppVar_61506 == 208);
	BIT_VEC cppVar_61509 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61510 = (cppVar_61509 << 3) | 6;
	cppVar_61510 = (cppVar_61510 & cppMask_un_5_);
	BIT_VEC cppVar_61511 = (0 << 5) | cppVar_61510;
	cppVar_61511 = (cppVar_61511 & cppMask_un_8_);
	bool cppVar_61513 = (cppVar_61511 == 224);
	BIT_VEC cppVar_61514 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61515 = (cppVar_61514 << 3) | 6;
	cppVar_61515 = (cppVar_61515 & cppMask_un_5_);
	BIT_VEC cppVar_61516 = (0 << 5) | cppVar_61515;
	cppVar_61516 = (cppVar_61516 & cppMask_un_8_);
	bool cppVar_61518 = (cppVar_61516 == 240);
	BIT_VEC cppVar_61520 = (cppVar_61518) ? B : 0;
	BIT_VEC cppVar_61521 = (cppVar_61513) ? ACC : cppVar_61520;
	BIT_VEC cppVar_61522 = (cppVar_61508) ? PSW : cppVar_61521;
	BIT_VEC cppVar_61523 = (cppVar_61503) ? IP : cppVar_61522;
	BIT_VEC cppVar_61524 = (cppVar_61498) ? P3 : cppVar_61523;
	BIT_VEC cppVar_61525 = (cppVar_61493) ? IE : cppVar_61524;
	BIT_VEC cppVar_61526 = (cppVar_61488) ? P2 : cppVar_61525;
	BIT_VEC cppVar_61527 = (cppVar_61483) ? SBUF : cppVar_61526;
	BIT_VEC cppVar_61528 = (cppVar_61478) ? SCON : cppVar_61527;
	BIT_VEC cppVar_61529 = (cppVar_61473) ? P1 : cppVar_61528;
	BIT_VEC cppVar_61530 = (cppVar_61468) ? TH1 : cppVar_61529;
	BIT_VEC cppVar_61531 = (cppVar_61463) ? TL1 : cppVar_61530;
	BIT_VEC cppVar_61532 = (cppVar_61458) ? TH0 : cppVar_61531;
	BIT_VEC cppVar_61533 = (cppVar_61453) ? TL0 : cppVar_61532;
	BIT_VEC cppVar_61534 = (cppVar_61448) ? TMOD : cppVar_61533;
	BIT_VEC cppVar_61535 = (cppVar_61443) ? TCON : cppVar_61534;
	BIT_VEC cppVar_61536 = (cppVar_61438) ? PCON : cppVar_61535;
	BIT_VEC cppVar_61537 = (cppVar_61433) ? DPH : cppVar_61536;
	BIT_VEC cppVar_61538 = (cppVar_61428) ? DPL : cppVar_61537;
	BIT_VEC cppVar_61539 = (cppVar_61423) ? SP : cppVar_61538;
	BIT_VEC cppVar_61540 = (cppVar_61418) ? P0 : cppVar_61539;
	BIT_VEC cppVar_61541 = (cppVar_61409) ? cppVar_61413 : cppVar_61540;
	BIT_VEC cppVar_61542 = (cppVar_61401) ? cppVar_61541 : SCON;
	BIT_VEC cppVar_61543 = ROM.rd(PC);
	bool cppVar_61545 = (cppVar_61543 == 141);
	BIT_VEC cppVar_61547 = PC + 1;
	cppVar_61547 = (cppVar_61547 & cppMask_un_16_);
	BIT_VEC cppVar_61548 = ROM.rd(cppVar_61547);
	bool cppVar_61550 = (cppVar_61548 == 152);
	BIT_VEC cppVar_61552 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61554 = (cppVar_61552 << 3) | 5;
	cppVar_61554 = (cppVar_61554 & cppMask_un_5_);
	BIT_VEC cppVar_61555 = (0 << 5) | cppVar_61554;
	cppVar_61555 = (cppVar_61555 & cppMask_un_8_);
	BIT_VEC cppVar_61556 = (cppVar_61555 >> 7) & cppMask_un_1_;
	bool cppVar_61558 = (cppVar_61556 == 0);
	BIT_VEC cppVar_61559 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61560 = (cppVar_61559 << 3) | 5;
	cppVar_61560 = (cppVar_61560 & cppMask_un_5_);
	BIT_VEC cppVar_61561 = (0 << 5) | cppVar_61560;
	cppVar_61561 = (cppVar_61561 & cppMask_un_8_);
	BIT_VEC cppVar_61562 = IRAM.rd(cppVar_61561);
	BIT_VEC cppVar_61563 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61564 = (cppVar_61563 << 3) | 5;
	cppVar_61564 = (cppVar_61564 & cppMask_un_5_);
	BIT_VEC cppVar_61565 = (0 << 5) | cppVar_61564;
	cppVar_61565 = (cppVar_61565 & cppMask_un_8_);
	bool cppVar_61567 = (cppVar_61565 == 128);
	BIT_VEC cppVar_61568 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61569 = (cppVar_61568 << 3) | 5;
	cppVar_61569 = (cppVar_61569 & cppMask_un_5_);
	BIT_VEC cppVar_61570 = (0 << 5) | cppVar_61569;
	cppVar_61570 = (cppVar_61570 & cppMask_un_8_);
	bool cppVar_61572 = (cppVar_61570 == 129);
	BIT_VEC cppVar_61573 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61574 = (cppVar_61573 << 3) | 5;
	cppVar_61574 = (cppVar_61574 & cppMask_un_5_);
	BIT_VEC cppVar_61575 = (0 << 5) | cppVar_61574;
	cppVar_61575 = (cppVar_61575 & cppMask_un_8_);
	bool cppVar_61577 = (cppVar_61575 == 130);
	BIT_VEC cppVar_61578 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61579 = (cppVar_61578 << 3) | 5;
	cppVar_61579 = (cppVar_61579 & cppMask_un_5_);
	BIT_VEC cppVar_61580 = (0 << 5) | cppVar_61579;
	cppVar_61580 = (cppVar_61580 & cppMask_un_8_);
	bool cppVar_61582 = (cppVar_61580 == 131);
	BIT_VEC cppVar_61583 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61584 = (cppVar_61583 << 3) | 5;
	cppVar_61584 = (cppVar_61584 & cppMask_un_5_);
	BIT_VEC cppVar_61585 = (0 << 5) | cppVar_61584;
	cppVar_61585 = (cppVar_61585 & cppMask_un_8_);
	bool cppVar_61587 = (cppVar_61585 == 135);
	BIT_VEC cppVar_61588 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61589 = (cppVar_61588 << 3) | 5;
	cppVar_61589 = (cppVar_61589 & cppMask_un_5_);
	BIT_VEC cppVar_61590 = (0 << 5) | cppVar_61589;
	cppVar_61590 = (cppVar_61590 & cppMask_un_8_);
	bool cppVar_61592 = (cppVar_61590 == 136);
	BIT_VEC cppVar_61593 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61594 = (cppVar_61593 << 3) | 5;
	cppVar_61594 = (cppVar_61594 & cppMask_un_5_);
	BIT_VEC cppVar_61595 = (0 << 5) | cppVar_61594;
	cppVar_61595 = (cppVar_61595 & cppMask_un_8_);
	bool cppVar_61597 = (cppVar_61595 == 137);
	BIT_VEC cppVar_61598 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61599 = (cppVar_61598 << 3) | 5;
	cppVar_61599 = (cppVar_61599 & cppMask_un_5_);
	BIT_VEC cppVar_61600 = (0 << 5) | cppVar_61599;
	cppVar_61600 = (cppVar_61600 & cppMask_un_8_);
	bool cppVar_61602 = (cppVar_61600 == 138);
	BIT_VEC cppVar_61603 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61604 = (cppVar_61603 << 3) | 5;
	cppVar_61604 = (cppVar_61604 & cppMask_un_5_);
	BIT_VEC cppVar_61605 = (0 << 5) | cppVar_61604;
	cppVar_61605 = (cppVar_61605 & cppMask_un_8_);
	bool cppVar_61607 = (cppVar_61605 == 140);
	BIT_VEC cppVar_61608 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61609 = (cppVar_61608 << 3) | 5;
	cppVar_61609 = (cppVar_61609 & cppMask_un_5_);
	BIT_VEC cppVar_61610 = (0 << 5) | cppVar_61609;
	cppVar_61610 = (cppVar_61610 & cppMask_un_8_);
	bool cppVar_61612 = (cppVar_61610 == 139);
	BIT_VEC cppVar_61613 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61614 = (cppVar_61613 << 3) | 5;
	cppVar_61614 = (cppVar_61614 & cppMask_un_5_);
	BIT_VEC cppVar_61615 = (0 << 5) | cppVar_61614;
	cppVar_61615 = (cppVar_61615 & cppMask_un_8_);
	bool cppVar_61617 = (cppVar_61615 == 141);
	BIT_VEC cppVar_61618 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61619 = (cppVar_61618 << 3) | 5;
	cppVar_61619 = (cppVar_61619 & cppMask_un_5_);
	BIT_VEC cppVar_61620 = (0 << 5) | cppVar_61619;
	cppVar_61620 = (cppVar_61620 & cppMask_un_8_);
	bool cppVar_61622 = (cppVar_61620 == 144);
	BIT_VEC cppVar_61623 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61624 = (cppVar_61623 << 3) | 5;
	cppVar_61624 = (cppVar_61624 & cppMask_un_5_);
	BIT_VEC cppVar_61625 = (0 << 5) | cppVar_61624;
	cppVar_61625 = (cppVar_61625 & cppMask_un_8_);
	bool cppVar_61627 = (cppVar_61625 == 152);
	BIT_VEC cppVar_61628 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61629 = (cppVar_61628 << 3) | 5;
	cppVar_61629 = (cppVar_61629 & cppMask_un_5_);
	BIT_VEC cppVar_61630 = (0 << 5) | cppVar_61629;
	cppVar_61630 = (cppVar_61630 & cppMask_un_8_);
	bool cppVar_61632 = (cppVar_61630 == 153);
	BIT_VEC cppVar_61633 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61634 = (cppVar_61633 << 3) | 5;
	cppVar_61634 = (cppVar_61634 & cppMask_un_5_);
	BIT_VEC cppVar_61635 = (0 << 5) | cppVar_61634;
	cppVar_61635 = (cppVar_61635 & cppMask_un_8_);
	bool cppVar_61637 = (cppVar_61635 == 160);
	BIT_VEC cppVar_61638 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61639 = (cppVar_61638 << 3) | 5;
	cppVar_61639 = (cppVar_61639 & cppMask_un_5_);
	BIT_VEC cppVar_61640 = (0 << 5) | cppVar_61639;
	cppVar_61640 = (cppVar_61640 & cppMask_un_8_);
	bool cppVar_61642 = (cppVar_61640 == 168);
	BIT_VEC cppVar_61643 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61644 = (cppVar_61643 << 3) | 5;
	cppVar_61644 = (cppVar_61644 & cppMask_un_5_);
	BIT_VEC cppVar_61645 = (0 << 5) | cppVar_61644;
	cppVar_61645 = (cppVar_61645 & cppMask_un_8_);
	bool cppVar_61647 = (cppVar_61645 == 176);
	BIT_VEC cppVar_61648 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61649 = (cppVar_61648 << 3) | 5;
	cppVar_61649 = (cppVar_61649 & cppMask_un_5_);
	BIT_VEC cppVar_61650 = (0 << 5) | cppVar_61649;
	cppVar_61650 = (cppVar_61650 & cppMask_un_8_);
	bool cppVar_61652 = (cppVar_61650 == 184);
	BIT_VEC cppVar_61653 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61654 = (cppVar_61653 << 3) | 5;
	cppVar_61654 = (cppVar_61654 & cppMask_un_5_);
	BIT_VEC cppVar_61655 = (0 << 5) | cppVar_61654;
	cppVar_61655 = (cppVar_61655 & cppMask_un_8_);
	bool cppVar_61657 = (cppVar_61655 == 208);
	BIT_VEC cppVar_61658 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61659 = (cppVar_61658 << 3) | 5;
	cppVar_61659 = (cppVar_61659 & cppMask_un_5_);
	BIT_VEC cppVar_61660 = (0 << 5) | cppVar_61659;
	cppVar_61660 = (cppVar_61660 & cppMask_un_8_);
	bool cppVar_61662 = (cppVar_61660 == 224);
	BIT_VEC cppVar_61663 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61664 = (cppVar_61663 << 3) | 5;
	cppVar_61664 = (cppVar_61664 & cppMask_un_5_);
	BIT_VEC cppVar_61665 = (0 << 5) | cppVar_61664;
	cppVar_61665 = (cppVar_61665 & cppMask_un_8_);
	bool cppVar_61667 = (cppVar_61665 == 240);
	BIT_VEC cppVar_61669 = (cppVar_61667) ? B : 0;
	BIT_VEC cppVar_61670 = (cppVar_61662) ? ACC : cppVar_61669;
	BIT_VEC cppVar_61671 = (cppVar_61657) ? PSW : cppVar_61670;
	BIT_VEC cppVar_61672 = (cppVar_61652) ? IP : cppVar_61671;
	BIT_VEC cppVar_61673 = (cppVar_61647) ? P3 : cppVar_61672;
	BIT_VEC cppVar_61674 = (cppVar_61642) ? IE : cppVar_61673;
	BIT_VEC cppVar_61675 = (cppVar_61637) ? P2 : cppVar_61674;
	BIT_VEC cppVar_61676 = (cppVar_61632) ? SBUF : cppVar_61675;
	BIT_VEC cppVar_61677 = (cppVar_61627) ? SCON : cppVar_61676;
	BIT_VEC cppVar_61678 = (cppVar_61622) ? P1 : cppVar_61677;
	BIT_VEC cppVar_61679 = (cppVar_61617) ? TH1 : cppVar_61678;
	BIT_VEC cppVar_61680 = (cppVar_61612) ? TL1 : cppVar_61679;
	BIT_VEC cppVar_61681 = (cppVar_61607) ? TH0 : cppVar_61680;
	BIT_VEC cppVar_61682 = (cppVar_61602) ? TL0 : cppVar_61681;
	BIT_VEC cppVar_61683 = (cppVar_61597) ? TMOD : cppVar_61682;
	BIT_VEC cppVar_61684 = (cppVar_61592) ? TCON : cppVar_61683;
	BIT_VEC cppVar_61685 = (cppVar_61587) ? PCON : cppVar_61684;
	BIT_VEC cppVar_61686 = (cppVar_61582) ? DPH : cppVar_61685;
	BIT_VEC cppVar_61687 = (cppVar_61577) ? DPL : cppVar_61686;
	BIT_VEC cppVar_61688 = (cppVar_61572) ? SP : cppVar_61687;
	BIT_VEC cppVar_61689 = (cppVar_61567) ? P0 : cppVar_61688;
	BIT_VEC cppVar_61690 = (cppVar_61558) ? cppVar_61562 : cppVar_61689;
	BIT_VEC cppVar_61691 = (cppVar_61550) ? cppVar_61690 : SCON;
	BIT_VEC cppVar_61692 = ROM.rd(PC);
	bool cppVar_61694 = (cppVar_61692 == 140);
	BIT_VEC cppVar_61696 = PC + 1;
	cppVar_61696 = (cppVar_61696 & cppMask_un_16_);
	BIT_VEC cppVar_61697 = ROM.rd(cppVar_61696);
	bool cppVar_61699 = (cppVar_61697 == 152);
	BIT_VEC cppVar_61701 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61703 = (cppVar_61701 << 3) | 4;
	cppVar_61703 = (cppVar_61703 & cppMask_un_5_);
	BIT_VEC cppVar_61704 = (0 << 5) | cppVar_61703;
	cppVar_61704 = (cppVar_61704 & cppMask_un_8_);
	BIT_VEC cppVar_61705 = (cppVar_61704 >> 7) & cppMask_un_1_;
	bool cppVar_61707 = (cppVar_61705 == 0);
	BIT_VEC cppVar_61708 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61709 = (cppVar_61708 << 3) | 4;
	cppVar_61709 = (cppVar_61709 & cppMask_un_5_);
	BIT_VEC cppVar_61710 = (0 << 5) | cppVar_61709;
	cppVar_61710 = (cppVar_61710 & cppMask_un_8_);
	BIT_VEC cppVar_61711 = IRAM.rd(cppVar_61710);
	BIT_VEC cppVar_61712 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61713 = (cppVar_61712 << 3) | 4;
	cppVar_61713 = (cppVar_61713 & cppMask_un_5_);
	BIT_VEC cppVar_61714 = (0 << 5) | cppVar_61713;
	cppVar_61714 = (cppVar_61714 & cppMask_un_8_);
	bool cppVar_61716 = (cppVar_61714 == 128);
	BIT_VEC cppVar_61717 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61718 = (cppVar_61717 << 3) | 4;
	cppVar_61718 = (cppVar_61718 & cppMask_un_5_);
	BIT_VEC cppVar_61719 = (0 << 5) | cppVar_61718;
	cppVar_61719 = (cppVar_61719 & cppMask_un_8_);
	bool cppVar_61721 = (cppVar_61719 == 129);
	BIT_VEC cppVar_61722 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61723 = (cppVar_61722 << 3) | 4;
	cppVar_61723 = (cppVar_61723 & cppMask_un_5_);
	BIT_VEC cppVar_61724 = (0 << 5) | cppVar_61723;
	cppVar_61724 = (cppVar_61724 & cppMask_un_8_);
	bool cppVar_61726 = (cppVar_61724 == 130);
	BIT_VEC cppVar_61727 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61728 = (cppVar_61727 << 3) | 4;
	cppVar_61728 = (cppVar_61728 & cppMask_un_5_);
	BIT_VEC cppVar_61729 = (0 << 5) | cppVar_61728;
	cppVar_61729 = (cppVar_61729 & cppMask_un_8_);
	bool cppVar_61731 = (cppVar_61729 == 131);
	BIT_VEC cppVar_61732 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61733 = (cppVar_61732 << 3) | 4;
	cppVar_61733 = (cppVar_61733 & cppMask_un_5_);
	BIT_VEC cppVar_61734 = (0 << 5) | cppVar_61733;
	cppVar_61734 = (cppVar_61734 & cppMask_un_8_);
	bool cppVar_61736 = (cppVar_61734 == 135);
	BIT_VEC cppVar_61737 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61738 = (cppVar_61737 << 3) | 4;
	cppVar_61738 = (cppVar_61738 & cppMask_un_5_);
	BIT_VEC cppVar_61739 = (0 << 5) | cppVar_61738;
	cppVar_61739 = (cppVar_61739 & cppMask_un_8_);
	bool cppVar_61741 = (cppVar_61739 == 136);
	BIT_VEC cppVar_61742 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61743 = (cppVar_61742 << 3) | 4;
	cppVar_61743 = (cppVar_61743 & cppMask_un_5_);
	BIT_VEC cppVar_61744 = (0 << 5) | cppVar_61743;
	cppVar_61744 = (cppVar_61744 & cppMask_un_8_);
	bool cppVar_61746 = (cppVar_61744 == 137);
	BIT_VEC cppVar_61747 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61748 = (cppVar_61747 << 3) | 4;
	cppVar_61748 = (cppVar_61748 & cppMask_un_5_);
	BIT_VEC cppVar_61749 = (0 << 5) | cppVar_61748;
	cppVar_61749 = (cppVar_61749 & cppMask_un_8_);
	bool cppVar_61751 = (cppVar_61749 == 138);
	BIT_VEC cppVar_61752 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61753 = (cppVar_61752 << 3) | 4;
	cppVar_61753 = (cppVar_61753 & cppMask_un_5_);
	BIT_VEC cppVar_61754 = (0 << 5) | cppVar_61753;
	cppVar_61754 = (cppVar_61754 & cppMask_un_8_);
	bool cppVar_61756 = (cppVar_61754 == 140);
	BIT_VEC cppVar_61757 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61758 = (cppVar_61757 << 3) | 4;
	cppVar_61758 = (cppVar_61758 & cppMask_un_5_);
	BIT_VEC cppVar_61759 = (0 << 5) | cppVar_61758;
	cppVar_61759 = (cppVar_61759 & cppMask_un_8_);
	bool cppVar_61761 = (cppVar_61759 == 139);
	BIT_VEC cppVar_61762 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61763 = (cppVar_61762 << 3) | 4;
	cppVar_61763 = (cppVar_61763 & cppMask_un_5_);
	BIT_VEC cppVar_61764 = (0 << 5) | cppVar_61763;
	cppVar_61764 = (cppVar_61764 & cppMask_un_8_);
	bool cppVar_61766 = (cppVar_61764 == 141);
	BIT_VEC cppVar_61767 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61768 = (cppVar_61767 << 3) | 4;
	cppVar_61768 = (cppVar_61768 & cppMask_un_5_);
	BIT_VEC cppVar_61769 = (0 << 5) | cppVar_61768;
	cppVar_61769 = (cppVar_61769 & cppMask_un_8_);
	bool cppVar_61771 = (cppVar_61769 == 144);
	BIT_VEC cppVar_61772 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61773 = (cppVar_61772 << 3) | 4;
	cppVar_61773 = (cppVar_61773 & cppMask_un_5_);
	BIT_VEC cppVar_61774 = (0 << 5) | cppVar_61773;
	cppVar_61774 = (cppVar_61774 & cppMask_un_8_);
	bool cppVar_61776 = (cppVar_61774 == 152);
	BIT_VEC cppVar_61777 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61778 = (cppVar_61777 << 3) | 4;
	cppVar_61778 = (cppVar_61778 & cppMask_un_5_);
	BIT_VEC cppVar_61779 = (0 << 5) | cppVar_61778;
	cppVar_61779 = (cppVar_61779 & cppMask_un_8_);
	bool cppVar_61781 = (cppVar_61779 == 153);
	BIT_VEC cppVar_61782 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61783 = (cppVar_61782 << 3) | 4;
	cppVar_61783 = (cppVar_61783 & cppMask_un_5_);
	BIT_VEC cppVar_61784 = (0 << 5) | cppVar_61783;
	cppVar_61784 = (cppVar_61784 & cppMask_un_8_);
	bool cppVar_61786 = (cppVar_61784 == 160);
	BIT_VEC cppVar_61787 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61788 = (cppVar_61787 << 3) | 4;
	cppVar_61788 = (cppVar_61788 & cppMask_un_5_);
	BIT_VEC cppVar_61789 = (0 << 5) | cppVar_61788;
	cppVar_61789 = (cppVar_61789 & cppMask_un_8_);
	bool cppVar_61791 = (cppVar_61789 == 168);
	BIT_VEC cppVar_61792 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61793 = (cppVar_61792 << 3) | 4;
	cppVar_61793 = (cppVar_61793 & cppMask_un_5_);
	BIT_VEC cppVar_61794 = (0 << 5) | cppVar_61793;
	cppVar_61794 = (cppVar_61794 & cppMask_un_8_);
	bool cppVar_61796 = (cppVar_61794 == 176);
	BIT_VEC cppVar_61797 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61798 = (cppVar_61797 << 3) | 4;
	cppVar_61798 = (cppVar_61798 & cppMask_un_5_);
	BIT_VEC cppVar_61799 = (0 << 5) | cppVar_61798;
	cppVar_61799 = (cppVar_61799 & cppMask_un_8_);
	bool cppVar_61801 = (cppVar_61799 == 184);
	BIT_VEC cppVar_61802 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61803 = (cppVar_61802 << 3) | 4;
	cppVar_61803 = (cppVar_61803 & cppMask_un_5_);
	BIT_VEC cppVar_61804 = (0 << 5) | cppVar_61803;
	cppVar_61804 = (cppVar_61804 & cppMask_un_8_);
	bool cppVar_61806 = (cppVar_61804 == 208);
	BIT_VEC cppVar_61807 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61808 = (cppVar_61807 << 3) | 4;
	cppVar_61808 = (cppVar_61808 & cppMask_un_5_);
	BIT_VEC cppVar_61809 = (0 << 5) | cppVar_61808;
	cppVar_61809 = (cppVar_61809 & cppMask_un_8_);
	bool cppVar_61811 = (cppVar_61809 == 224);
	BIT_VEC cppVar_61812 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61813 = (cppVar_61812 << 3) | 4;
	cppVar_61813 = (cppVar_61813 & cppMask_un_5_);
	BIT_VEC cppVar_61814 = (0 << 5) | cppVar_61813;
	cppVar_61814 = (cppVar_61814 & cppMask_un_8_);
	bool cppVar_61816 = (cppVar_61814 == 240);
	BIT_VEC cppVar_61818 = (cppVar_61816) ? B : 0;
	BIT_VEC cppVar_61819 = (cppVar_61811) ? ACC : cppVar_61818;
	BIT_VEC cppVar_61820 = (cppVar_61806) ? PSW : cppVar_61819;
	BIT_VEC cppVar_61821 = (cppVar_61801) ? IP : cppVar_61820;
	BIT_VEC cppVar_61822 = (cppVar_61796) ? P3 : cppVar_61821;
	BIT_VEC cppVar_61823 = (cppVar_61791) ? IE : cppVar_61822;
	BIT_VEC cppVar_61824 = (cppVar_61786) ? P2 : cppVar_61823;
	BIT_VEC cppVar_61825 = (cppVar_61781) ? SBUF : cppVar_61824;
	BIT_VEC cppVar_61826 = (cppVar_61776) ? SCON : cppVar_61825;
	BIT_VEC cppVar_61827 = (cppVar_61771) ? P1 : cppVar_61826;
	BIT_VEC cppVar_61828 = (cppVar_61766) ? TH1 : cppVar_61827;
	BIT_VEC cppVar_61829 = (cppVar_61761) ? TL1 : cppVar_61828;
	BIT_VEC cppVar_61830 = (cppVar_61756) ? TH0 : cppVar_61829;
	BIT_VEC cppVar_61831 = (cppVar_61751) ? TL0 : cppVar_61830;
	BIT_VEC cppVar_61832 = (cppVar_61746) ? TMOD : cppVar_61831;
	BIT_VEC cppVar_61833 = (cppVar_61741) ? TCON : cppVar_61832;
	BIT_VEC cppVar_61834 = (cppVar_61736) ? PCON : cppVar_61833;
	BIT_VEC cppVar_61835 = (cppVar_61731) ? DPH : cppVar_61834;
	BIT_VEC cppVar_61836 = (cppVar_61726) ? DPL : cppVar_61835;
	BIT_VEC cppVar_61837 = (cppVar_61721) ? SP : cppVar_61836;
	BIT_VEC cppVar_61838 = (cppVar_61716) ? P0 : cppVar_61837;
	BIT_VEC cppVar_61839 = (cppVar_61707) ? cppVar_61711 : cppVar_61838;
	BIT_VEC cppVar_61840 = (cppVar_61699) ? cppVar_61839 : SCON;
	BIT_VEC cppVar_61841 = ROM.rd(PC);
	bool cppVar_61843 = (cppVar_61841 == 139);
	BIT_VEC cppVar_61845 = PC + 1;
	cppVar_61845 = (cppVar_61845 & cppMask_un_16_);
	BIT_VEC cppVar_61846 = ROM.rd(cppVar_61845);
	bool cppVar_61848 = (cppVar_61846 == 152);
	BIT_VEC cppVar_61850 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61852 = (cppVar_61850 << 3) | 3;
	cppVar_61852 = (cppVar_61852 & cppMask_un_5_);
	BIT_VEC cppVar_61853 = (0 << 5) | cppVar_61852;
	cppVar_61853 = (cppVar_61853 & cppMask_un_8_);
	BIT_VEC cppVar_61854 = (cppVar_61853 >> 7) & cppMask_un_1_;
	bool cppVar_61856 = (cppVar_61854 == 0);
	BIT_VEC cppVar_61857 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61858 = (cppVar_61857 << 3) | 3;
	cppVar_61858 = (cppVar_61858 & cppMask_un_5_);
	BIT_VEC cppVar_61859 = (0 << 5) | cppVar_61858;
	cppVar_61859 = (cppVar_61859 & cppMask_un_8_);
	BIT_VEC cppVar_61860 = IRAM.rd(cppVar_61859);
	BIT_VEC cppVar_61861 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61862 = (cppVar_61861 << 3) | 3;
	cppVar_61862 = (cppVar_61862 & cppMask_un_5_);
	BIT_VEC cppVar_61863 = (0 << 5) | cppVar_61862;
	cppVar_61863 = (cppVar_61863 & cppMask_un_8_);
	bool cppVar_61865 = (cppVar_61863 == 128);
	BIT_VEC cppVar_61866 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61867 = (cppVar_61866 << 3) | 3;
	cppVar_61867 = (cppVar_61867 & cppMask_un_5_);
	BIT_VEC cppVar_61868 = (0 << 5) | cppVar_61867;
	cppVar_61868 = (cppVar_61868 & cppMask_un_8_);
	bool cppVar_61870 = (cppVar_61868 == 129);
	BIT_VEC cppVar_61871 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61872 = (cppVar_61871 << 3) | 3;
	cppVar_61872 = (cppVar_61872 & cppMask_un_5_);
	BIT_VEC cppVar_61873 = (0 << 5) | cppVar_61872;
	cppVar_61873 = (cppVar_61873 & cppMask_un_8_);
	bool cppVar_61875 = (cppVar_61873 == 130);
	BIT_VEC cppVar_61876 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61877 = (cppVar_61876 << 3) | 3;
	cppVar_61877 = (cppVar_61877 & cppMask_un_5_);
	BIT_VEC cppVar_61878 = (0 << 5) | cppVar_61877;
	cppVar_61878 = (cppVar_61878 & cppMask_un_8_);
	bool cppVar_61880 = (cppVar_61878 == 131);
	BIT_VEC cppVar_61881 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61882 = (cppVar_61881 << 3) | 3;
	cppVar_61882 = (cppVar_61882 & cppMask_un_5_);
	BIT_VEC cppVar_61883 = (0 << 5) | cppVar_61882;
	cppVar_61883 = (cppVar_61883 & cppMask_un_8_);
	bool cppVar_61885 = (cppVar_61883 == 135);
	BIT_VEC cppVar_61886 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61887 = (cppVar_61886 << 3) | 3;
	cppVar_61887 = (cppVar_61887 & cppMask_un_5_);
	BIT_VEC cppVar_61888 = (0 << 5) | cppVar_61887;
	cppVar_61888 = (cppVar_61888 & cppMask_un_8_);
	bool cppVar_61890 = (cppVar_61888 == 136);
	BIT_VEC cppVar_61891 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61892 = (cppVar_61891 << 3) | 3;
	cppVar_61892 = (cppVar_61892 & cppMask_un_5_);
	BIT_VEC cppVar_61893 = (0 << 5) | cppVar_61892;
	cppVar_61893 = (cppVar_61893 & cppMask_un_8_);
	bool cppVar_61895 = (cppVar_61893 == 137);
	BIT_VEC cppVar_61896 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61897 = (cppVar_61896 << 3) | 3;
	cppVar_61897 = (cppVar_61897 & cppMask_un_5_);
	BIT_VEC cppVar_61898 = (0 << 5) | cppVar_61897;
	cppVar_61898 = (cppVar_61898 & cppMask_un_8_);
	bool cppVar_61900 = (cppVar_61898 == 138);
	BIT_VEC cppVar_61901 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61902 = (cppVar_61901 << 3) | 3;
	cppVar_61902 = (cppVar_61902 & cppMask_un_5_);
	BIT_VEC cppVar_61903 = (0 << 5) | cppVar_61902;
	cppVar_61903 = (cppVar_61903 & cppMask_un_8_);
	bool cppVar_61905 = (cppVar_61903 == 140);
	BIT_VEC cppVar_61906 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61907 = (cppVar_61906 << 3) | 3;
	cppVar_61907 = (cppVar_61907 & cppMask_un_5_);
	BIT_VEC cppVar_61908 = (0 << 5) | cppVar_61907;
	cppVar_61908 = (cppVar_61908 & cppMask_un_8_);
	bool cppVar_61910 = (cppVar_61908 == 139);
	BIT_VEC cppVar_61911 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61912 = (cppVar_61911 << 3) | 3;
	cppVar_61912 = (cppVar_61912 & cppMask_un_5_);
	BIT_VEC cppVar_61913 = (0 << 5) | cppVar_61912;
	cppVar_61913 = (cppVar_61913 & cppMask_un_8_);
	bool cppVar_61915 = (cppVar_61913 == 141);
	BIT_VEC cppVar_61916 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61917 = (cppVar_61916 << 3) | 3;
	cppVar_61917 = (cppVar_61917 & cppMask_un_5_);
	BIT_VEC cppVar_61918 = (0 << 5) | cppVar_61917;
	cppVar_61918 = (cppVar_61918 & cppMask_un_8_);
	bool cppVar_61920 = (cppVar_61918 == 144);
	BIT_VEC cppVar_61921 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61922 = (cppVar_61921 << 3) | 3;
	cppVar_61922 = (cppVar_61922 & cppMask_un_5_);
	BIT_VEC cppVar_61923 = (0 << 5) | cppVar_61922;
	cppVar_61923 = (cppVar_61923 & cppMask_un_8_);
	bool cppVar_61925 = (cppVar_61923 == 152);
	BIT_VEC cppVar_61926 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61927 = (cppVar_61926 << 3) | 3;
	cppVar_61927 = (cppVar_61927 & cppMask_un_5_);
	BIT_VEC cppVar_61928 = (0 << 5) | cppVar_61927;
	cppVar_61928 = (cppVar_61928 & cppMask_un_8_);
	bool cppVar_61930 = (cppVar_61928 == 153);
	BIT_VEC cppVar_61931 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61932 = (cppVar_61931 << 3) | 3;
	cppVar_61932 = (cppVar_61932 & cppMask_un_5_);
	BIT_VEC cppVar_61933 = (0 << 5) | cppVar_61932;
	cppVar_61933 = (cppVar_61933 & cppMask_un_8_);
	bool cppVar_61935 = (cppVar_61933 == 160);
	BIT_VEC cppVar_61936 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61937 = (cppVar_61936 << 3) | 3;
	cppVar_61937 = (cppVar_61937 & cppMask_un_5_);
	BIT_VEC cppVar_61938 = (0 << 5) | cppVar_61937;
	cppVar_61938 = (cppVar_61938 & cppMask_un_8_);
	bool cppVar_61940 = (cppVar_61938 == 168);
	BIT_VEC cppVar_61941 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61942 = (cppVar_61941 << 3) | 3;
	cppVar_61942 = (cppVar_61942 & cppMask_un_5_);
	BIT_VEC cppVar_61943 = (0 << 5) | cppVar_61942;
	cppVar_61943 = (cppVar_61943 & cppMask_un_8_);
	bool cppVar_61945 = (cppVar_61943 == 176);
	BIT_VEC cppVar_61946 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61947 = (cppVar_61946 << 3) | 3;
	cppVar_61947 = (cppVar_61947 & cppMask_un_5_);
	BIT_VEC cppVar_61948 = (0 << 5) | cppVar_61947;
	cppVar_61948 = (cppVar_61948 & cppMask_un_8_);
	bool cppVar_61950 = (cppVar_61948 == 184);
	BIT_VEC cppVar_61951 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61952 = (cppVar_61951 << 3) | 3;
	cppVar_61952 = (cppVar_61952 & cppMask_un_5_);
	BIT_VEC cppVar_61953 = (0 << 5) | cppVar_61952;
	cppVar_61953 = (cppVar_61953 & cppMask_un_8_);
	bool cppVar_61955 = (cppVar_61953 == 208);
	BIT_VEC cppVar_61956 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61957 = (cppVar_61956 << 3) | 3;
	cppVar_61957 = (cppVar_61957 & cppMask_un_5_);
	BIT_VEC cppVar_61958 = (0 << 5) | cppVar_61957;
	cppVar_61958 = (cppVar_61958 & cppMask_un_8_);
	bool cppVar_61960 = (cppVar_61958 == 224);
	BIT_VEC cppVar_61961 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_61962 = (cppVar_61961 << 3) | 3;
	cppVar_61962 = (cppVar_61962 & cppMask_un_5_);
	BIT_VEC cppVar_61963 = (0 << 5) | cppVar_61962;
	cppVar_61963 = (cppVar_61963 & cppMask_un_8_);
	bool cppVar_61965 = (cppVar_61963 == 240);
	BIT_VEC cppVar_61967 = (cppVar_61965) ? B : 0;
	BIT_VEC cppVar_61968 = (cppVar_61960) ? ACC : cppVar_61967;
	BIT_VEC cppVar_61969 = (cppVar_61955) ? PSW : cppVar_61968;
	BIT_VEC cppVar_61970 = (cppVar_61950) ? IP : cppVar_61969;
	BIT_VEC cppVar_61971 = (cppVar_61945) ? P3 : cppVar_61970;
	BIT_VEC cppVar_61972 = (cppVar_61940) ? IE : cppVar_61971;
	BIT_VEC cppVar_61973 = (cppVar_61935) ? P2 : cppVar_61972;
	BIT_VEC cppVar_61974 = (cppVar_61930) ? SBUF : cppVar_61973;
	BIT_VEC cppVar_61975 = (cppVar_61925) ? SCON : cppVar_61974;
	BIT_VEC cppVar_61976 = (cppVar_61920) ? P1 : cppVar_61975;
	BIT_VEC cppVar_61977 = (cppVar_61915) ? TH1 : cppVar_61976;
	BIT_VEC cppVar_61978 = (cppVar_61910) ? TL1 : cppVar_61977;
	BIT_VEC cppVar_61979 = (cppVar_61905) ? TH0 : cppVar_61978;
	BIT_VEC cppVar_61980 = (cppVar_61900) ? TL0 : cppVar_61979;
	BIT_VEC cppVar_61981 = (cppVar_61895) ? TMOD : cppVar_61980;
	BIT_VEC cppVar_61982 = (cppVar_61890) ? TCON : cppVar_61981;
	BIT_VEC cppVar_61983 = (cppVar_61885) ? PCON : cppVar_61982;
	BIT_VEC cppVar_61984 = (cppVar_61880) ? DPH : cppVar_61983;
	BIT_VEC cppVar_61985 = (cppVar_61875) ? DPL : cppVar_61984;
	BIT_VEC cppVar_61986 = (cppVar_61870) ? SP : cppVar_61985;
	BIT_VEC cppVar_61987 = (cppVar_61865) ? P0 : cppVar_61986;
	BIT_VEC cppVar_61988 = (cppVar_61856) ? cppVar_61860 : cppVar_61987;
	BIT_VEC cppVar_61989 = (cppVar_61848) ? cppVar_61988 : SCON;
	BIT_VEC cppVar_61990 = ROM.rd(PC);
	bool cppVar_61992 = (cppVar_61990 == 138);
	BIT_VEC cppVar_61994 = PC + 1;
	cppVar_61994 = (cppVar_61994 & cppMask_un_16_);
	BIT_VEC cppVar_61995 = ROM.rd(cppVar_61994);
	bool cppVar_61997 = (cppVar_61995 == 152);
	BIT_VEC cppVar_61999 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62001 = (cppVar_61999 << 3) | 2;
	cppVar_62001 = (cppVar_62001 & cppMask_un_5_);
	BIT_VEC cppVar_62002 = (0 << 5) | cppVar_62001;
	cppVar_62002 = (cppVar_62002 & cppMask_un_8_);
	BIT_VEC cppVar_62003 = (cppVar_62002 >> 7) & cppMask_un_1_;
	bool cppVar_62005 = (cppVar_62003 == 0);
	BIT_VEC cppVar_62006 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62007 = (cppVar_62006 << 3) | 2;
	cppVar_62007 = (cppVar_62007 & cppMask_un_5_);
	BIT_VEC cppVar_62008 = (0 << 5) | cppVar_62007;
	cppVar_62008 = (cppVar_62008 & cppMask_un_8_);
	BIT_VEC cppVar_62009 = IRAM.rd(cppVar_62008);
	BIT_VEC cppVar_62010 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62011 = (cppVar_62010 << 3) | 2;
	cppVar_62011 = (cppVar_62011 & cppMask_un_5_);
	BIT_VEC cppVar_62012 = (0 << 5) | cppVar_62011;
	cppVar_62012 = (cppVar_62012 & cppMask_un_8_);
	bool cppVar_62014 = (cppVar_62012 == 128);
	BIT_VEC cppVar_62015 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62016 = (cppVar_62015 << 3) | 2;
	cppVar_62016 = (cppVar_62016 & cppMask_un_5_);
	BIT_VEC cppVar_62017 = (0 << 5) | cppVar_62016;
	cppVar_62017 = (cppVar_62017 & cppMask_un_8_);
	bool cppVar_62019 = (cppVar_62017 == 129);
	BIT_VEC cppVar_62020 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62021 = (cppVar_62020 << 3) | 2;
	cppVar_62021 = (cppVar_62021 & cppMask_un_5_);
	BIT_VEC cppVar_62022 = (0 << 5) | cppVar_62021;
	cppVar_62022 = (cppVar_62022 & cppMask_un_8_);
	bool cppVar_62024 = (cppVar_62022 == 130);
	BIT_VEC cppVar_62025 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62026 = (cppVar_62025 << 3) | 2;
	cppVar_62026 = (cppVar_62026 & cppMask_un_5_);
	BIT_VEC cppVar_62027 = (0 << 5) | cppVar_62026;
	cppVar_62027 = (cppVar_62027 & cppMask_un_8_);
	bool cppVar_62029 = (cppVar_62027 == 131);
	BIT_VEC cppVar_62030 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62031 = (cppVar_62030 << 3) | 2;
	cppVar_62031 = (cppVar_62031 & cppMask_un_5_);
	BIT_VEC cppVar_62032 = (0 << 5) | cppVar_62031;
	cppVar_62032 = (cppVar_62032 & cppMask_un_8_);
	bool cppVar_62034 = (cppVar_62032 == 135);
	BIT_VEC cppVar_62035 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62036 = (cppVar_62035 << 3) | 2;
	cppVar_62036 = (cppVar_62036 & cppMask_un_5_);
	BIT_VEC cppVar_62037 = (0 << 5) | cppVar_62036;
	cppVar_62037 = (cppVar_62037 & cppMask_un_8_);
	bool cppVar_62039 = (cppVar_62037 == 136);
	BIT_VEC cppVar_62040 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62041 = (cppVar_62040 << 3) | 2;
	cppVar_62041 = (cppVar_62041 & cppMask_un_5_);
	BIT_VEC cppVar_62042 = (0 << 5) | cppVar_62041;
	cppVar_62042 = (cppVar_62042 & cppMask_un_8_);
	bool cppVar_62044 = (cppVar_62042 == 137);
	BIT_VEC cppVar_62045 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62046 = (cppVar_62045 << 3) | 2;
	cppVar_62046 = (cppVar_62046 & cppMask_un_5_);
	BIT_VEC cppVar_62047 = (0 << 5) | cppVar_62046;
	cppVar_62047 = (cppVar_62047 & cppMask_un_8_);
	bool cppVar_62049 = (cppVar_62047 == 138);
	BIT_VEC cppVar_62050 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62051 = (cppVar_62050 << 3) | 2;
	cppVar_62051 = (cppVar_62051 & cppMask_un_5_);
	BIT_VEC cppVar_62052 = (0 << 5) | cppVar_62051;
	cppVar_62052 = (cppVar_62052 & cppMask_un_8_);
	bool cppVar_62054 = (cppVar_62052 == 140);
	BIT_VEC cppVar_62055 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62056 = (cppVar_62055 << 3) | 2;
	cppVar_62056 = (cppVar_62056 & cppMask_un_5_);
	BIT_VEC cppVar_62057 = (0 << 5) | cppVar_62056;
	cppVar_62057 = (cppVar_62057 & cppMask_un_8_);
	bool cppVar_62059 = (cppVar_62057 == 139);
	BIT_VEC cppVar_62060 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62061 = (cppVar_62060 << 3) | 2;
	cppVar_62061 = (cppVar_62061 & cppMask_un_5_);
	BIT_VEC cppVar_62062 = (0 << 5) | cppVar_62061;
	cppVar_62062 = (cppVar_62062 & cppMask_un_8_);
	bool cppVar_62064 = (cppVar_62062 == 141);
	BIT_VEC cppVar_62065 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62066 = (cppVar_62065 << 3) | 2;
	cppVar_62066 = (cppVar_62066 & cppMask_un_5_);
	BIT_VEC cppVar_62067 = (0 << 5) | cppVar_62066;
	cppVar_62067 = (cppVar_62067 & cppMask_un_8_);
	bool cppVar_62069 = (cppVar_62067 == 144);
	BIT_VEC cppVar_62070 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62071 = (cppVar_62070 << 3) | 2;
	cppVar_62071 = (cppVar_62071 & cppMask_un_5_);
	BIT_VEC cppVar_62072 = (0 << 5) | cppVar_62071;
	cppVar_62072 = (cppVar_62072 & cppMask_un_8_);
	bool cppVar_62074 = (cppVar_62072 == 152);
	BIT_VEC cppVar_62075 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62076 = (cppVar_62075 << 3) | 2;
	cppVar_62076 = (cppVar_62076 & cppMask_un_5_);
	BIT_VEC cppVar_62077 = (0 << 5) | cppVar_62076;
	cppVar_62077 = (cppVar_62077 & cppMask_un_8_);
	bool cppVar_62079 = (cppVar_62077 == 153);
	BIT_VEC cppVar_62080 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62081 = (cppVar_62080 << 3) | 2;
	cppVar_62081 = (cppVar_62081 & cppMask_un_5_);
	BIT_VEC cppVar_62082 = (0 << 5) | cppVar_62081;
	cppVar_62082 = (cppVar_62082 & cppMask_un_8_);
	bool cppVar_62084 = (cppVar_62082 == 160);
	BIT_VEC cppVar_62085 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62086 = (cppVar_62085 << 3) | 2;
	cppVar_62086 = (cppVar_62086 & cppMask_un_5_);
	BIT_VEC cppVar_62087 = (0 << 5) | cppVar_62086;
	cppVar_62087 = (cppVar_62087 & cppMask_un_8_);
	bool cppVar_62089 = (cppVar_62087 == 168);
	BIT_VEC cppVar_62090 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62091 = (cppVar_62090 << 3) | 2;
	cppVar_62091 = (cppVar_62091 & cppMask_un_5_);
	BIT_VEC cppVar_62092 = (0 << 5) | cppVar_62091;
	cppVar_62092 = (cppVar_62092 & cppMask_un_8_);
	bool cppVar_62094 = (cppVar_62092 == 176);
	BIT_VEC cppVar_62095 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62096 = (cppVar_62095 << 3) | 2;
	cppVar_62096 = (cppVar_62096 & cppMask_un_5_);
	BIT_VEC cppVar_62097 = (0 << 5) | cppVar_62096;
	cppVar_62097 = (cppVar_62097 & cppMask_un_8_);
	bool cppVar_62099 = (cppVar_62097 == 184);
	BIT_VEC cppVar_62100 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62101 = (cppVar_62100 << 3) | 2;
	cppVar_62101 = (cppVar_62101 & cppMask_un_5_);
	BIT_VEC cppVar_62102 = (0 << 5) | cppVar_62101;
	cppVar_62102 = (cppVar_62102 & cppMask_un_8_);
	bool cppVar_62104 = (cppVar_62102 == 208);
	BIT_VEC cppVar_62105 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62106 = (cppVar_62105 << 3) | 2;
	cppVar_62106 = (cppVar_62106 & cppMask_un_5_);
	BIT_VEC cppVar_62107 = (0 << 5) | cppVar_62106;
	cppVar_62107 = (cppVar_62107 & cppMask_un_8_);
	bool cppVar_62109 = (cppVar_62107 == 224);
	BIT_VEC cppVar_62110 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62111 = (cppVar_62110 << 3) | 2;
	cppVar_62111 = (cppVar_62111 & cppMask_un_5_);
	BIT_VEC cppVar_62112 = (0 << 5) | cppVar_62111;
	cppVar_62112 = (cppVar_62112 & cppMask_un_8_);
	bool cppVar_62114 = (cppVar_62112 == 240);
	BIT_VEC cppVar_62116 = (cppVar_62114) ? B : 0;
	BIT_VEC cppVar_62117 = (cppVar_62109) ? ACC : cppVar_62116;
	BIT_VEC cppVar_62118 = (cppVar_62104) ? PSW : cppVar_62117;
	BIT_VEC cppVar_62119 = (cppVar_62099) ? IP : cppVar_62118;
	BIT_VEC cppVar_62120 = (cppVar_62094) ? P3 : cppVar_62119;
	BIT_VEC cppVar_62121 = (cppVar_62089) ? IE : cppVar_62120;
	BIT_VEC cppVar_62122 = (cppVar_62084) ? P2 : cppVar_62121;
	BIT_VEC cppVar_62123 = (cppVar_62079) ? SBUF : cppVar_62122;
	BIT_VEC cppVar_62124 = (cppVar_62074) ? SCON : cppVar_62123;
	BIT_VEC cppVar_62125 = (cppVar_62069) ? P1 : cppVar_62124;
	BIT_VEC cppVar_62126 = (cppVar_62064) ? TH1 : cppVar_62125;
	BIT_VEC cppVar_62127 = (cppVar_62059) ? TL1 : cppVar_62126;
	BIT_VEC cppVar_62128 = (cppVar_62054) ? TH0 : cppVar_62127;
	BIT_VEC cppVar_62129 = (cppVar_62049) ? TL0 : cppVar_62128;
	BIT_VEC cppVar_62130 = (cppVar_62044) ? TMOD : cppVar_62129;
	BIT_VEC cppVar_62131 = (cppVar_62039) ? TCON : cppVar_62130;
	BIT_VEC cppVar_62132 = (cppVar_62034) ? PCON : cppVar_62131;
	BIT_VEC cppVar_62133 = (cppVar_62029) ? DPH : cppVar_62132;
	BIT_VEC cppVar_62134 = (cppVar_62024) ? DPL : cppVar_62133;
	BIT_VEC cppVar_62135 = (cppVar_62019) ? SP : cppVar_62134;
	BIT_VEC cppVar_62136 = (cppVar_62014) ? P0 : cppVar_62135;
	BIT_VEC cppVar_62137 = (cppVar_62005) ? cppVar_62009 : cppVar_62136;
	BIT_VEC cppVar_62138 = (cppVar_61997) ? cppVar_62137 : SCON;
	BIT_VEC cppVar_62139 = ROM.rd(PC);
	bool cppVar_62141 = (cppVar_62139 == 137);
	BIT_VEC cppVar_62143 = PC + 1;
	cppVar_62143 = (cppVar_62143 & cppMask_un_16_);
	BIT_VEC cppVar_62144 = ROM.rd(cppVar_62143);
	bool cppVar_62146 = (cppVar_62144 == 152);
	BIT_VEC cppVar_62148 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62150 = (cppVar_62148 << 3) | 1;
	cppVar_62150 = (cppVar_62150 & cppMask_un_5_);
	BIT_VEC cppVar_62151 = (0 << 5) | cppVar_62150;
	cppVar_62151 = (cppVar_62151 & cppMask_un_8_);
	BIT_VEC cppVar_62152 = (cppVar_62151 >> 7) & cppMask_un_1_;
	bool cppVar_62154 = (cppVar_62152 == 0);
	BIT_VEC cppVar_62155 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62156 = (cppVar_62155 << 3) | 1;
	cppVar_62156 = (cppVar_62156 & cppMask_un_5_);
	BIT_VEC cppVar_62157 = (0 << 5) | cppVar_62156;
	cppVar_62157 = (cppVar_62157 & cppMask_un_8_);
	BIT_VEC cppVar_62158 = IRAM.rd(cppVar_62157);
	BIT_VEC cppVar_62159 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62160 = (cppVar_62159 << 3) | 1;
	cppVar_62160 = (cppVar_62160 & cppMask_un_5_);
	BIT_VEC cppVar_62161 = (0 << 5) | cppVar_62160;
	cppVar_62161 = (cppVar_62161 & cppMask_un_8_);
	bool cppVar_62163 = (cppVar_62161 == 128);
	BIT_VEC cppVar_62164 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62165 = (cppVar_62164 << 3) | 1;
	cppVar_62165 = (cppVar_62165 & cppMask_un_5_);
	BIT_VEC cppVar_62166 = (0 << 5) | cppVar_62165;
	cppVar_62166 = (cppVar_62166 & cppMask_un_8_);
	bool cppVar_62168 = (cppVar_62166 == 129);
	BIT_VEC cppVar_62169 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62170 = (cppVar_62169 << 3) | 1;
	cppVar_62170 = (cppVar_62170 & cppMask_un_5_);
	BIT_VEC cppVar_62171 = (0 << 5) | cppVar_62170;
	cppVar_62171 = (cppVar_62171 & cppMask_un_8_);
	bool cppVar_62173 = (cppVar_62171 == 130);
	BIT_VEC cppVar_62174 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62175 = (cppVar_62174 << 3) | 1;
	cppVar_62175 = (cppVar_62175 & cppMask_un_5_);
	BIT_VEC cppVar_62176 = (0 << 5) | cppVar_62175;
	cppVar_62176 = (cppVar_62176 & cppMask_un_8_);
	bool cppVar_62178 = (cppVar_62176 == 131);
	BIT_VEC cppVar_62179 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62180 = (cppVar_62179 << 3) | 1;
	cppVar_62180 = (cppVar_62180 & cppMask_un_5_);
	BIT_VEC cppVar_62181 = (0 << 5) | cppVar_62180;
	cppVar_62181 = (cppVar_62181 & cppMask_un_8_);
	bool cppVar_62183 = (cppVar_62181 == 135);
	BIT_VEC cppVar_62184 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62185 = (cppVar_62184 << 3) | 1;
	cppVar_62185 = (cppVar_62185 & cppMask_un_5_);
	BIT_VEC cppVar_62186 = (0 << 5) | cppVar_62185;
	cppVar_62186 = (cppVar_62186 & cppMask_un_8_);
	bool cppVar_62188 = (cppVar_62186 == 136);
	BIT_VEC cppVar_62189 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62190 = (cppVar_62189 << 3) | 1;
	cppVar_62190 = (cppVar_62190 & cppMask_un_5_);
	BIT_VEC cppVar_62191 = (0 << 5) | cppVar_62190;
	cppVar_62191 = (cppVar_62191 & cppMask_un_8_);
	bool cppVar_62193 = (cppVar_62191 == 137);
	BIT_VEC cppVar_62194 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62195 = (cppVar_62194 << 3) | 1;
	cppVar_62195 = (cppVar_62195 & cppMask_un_5_);
	BIT_VEC cppVar_62196 = (0 << 5) | cppVar_62195;
	cppVar_62196 = (cppVar_62196 & cppMask_un_8_);
	bool cppVar_62198 = (cppVar_62196 == 138);
	BIT_VEC cppVar_62199 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62200 = (cppVar_62199 << 3) | 1;
	cppVar_62200 = (cppVar_62200 & cppMask_un_5_);
	BIT_VEC cppVar_62201 = (0 << 5) | cppVar_62200;
	cppVar_62201 = (cppVar_62201 & cppMask_un_8_);
	bool cppVar_62203 = (cppVar_62201 == 140);
	BIT_VEC cppVar_62204 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62205 = (cppVar_62204 << 3) | 1;
	cppVar_62205 = (cppVar_62205 & cppMask_un_5_);
	BIT_VEC cppVar_62206 = (0 << 5) | cppVar_62205;
	cppVar_62206 = (cppVar_62206 & cppMask_un_8_);
	bool cppVar_62208 = (cppVar_62206 == 139);
	BIT_VEC cppVar_62209 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62210 = (cppVar_62209 << 3) | 1;
	cppVar_62210 = (cppVar_62210 & cppMask_un_5_);
	BIT_VEC cppVar_62211 = (0 << 5) | cppVar_62210;
	cppVar_62211 = (cppVar_62211 & cppMask_un_8_);
	bool cppVar_62213 = (cppVar_62211 == 141);
	BIT_VEC cppVar_62214 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62215 = (cppVar_62214 << 3) | 1;
	cppVar_62215 = (cppVar_62215 & cppMask_un_5_);
	BIT_VEC cppVar_62216 = (0 << 5) | cppVar_62215;
	cppVar_62216 = (cppVar_62216 & cppMask_un_8_);
	bool cppVar_62218 = (cppVar_62216 == 144);
	BIT_VEC cppVar_62219 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62220 = (cppVar_62219 << 3) | 1;
	cppVar_62220 = (cppVar_62220 & cppMask_un_5_);
	BIT_VEC cppVar_62221 = (0 << 5) | cppVar_62220;
	cppVar_62221 = (cppVar_62221 & cppMask_un_8_);
	bool cppVar_62223 = (cppVar_62221 == 152);
	BIT_VEC cppVar_62224 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62225 = (cppVar_62224 << 3) | 1;
	cppVar_62225 = (cppVar_62225 & cppMask_un_5_);
	BIT_VEC cppVar_62226 = (0 << 5) | cppVar_62225;
	cppVar_62226 = (cppVar_62226 & cppMask_un_8_);
	bool cppVar_62228 = (cppVar_62226 == 153);
	BIT_VEC cppVar_62229 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62230 = (cppVar_62229 << 3) | 1;
	cppVar_62230 = (cppVar_62230 & cppMask_un_5_);
	BIT_VEC cppVar_62231 = (0 << 5) | cppVar_62230;
	cppVar_62231 = (cppVar_62231 & cppMask_un_8_);
	bool cppVar_62233 = (cppVar_62231 == 160);
	BIT_VEC cppVar_62234 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62235 = (cppVar_62234 << 3) | 1;
	cppVar_62235 = (cppVar_62235 & cppMask_un_5_);
	BIT_VEC cppVar_62236 = (0 << 5) | cppVar_62235;
	cppVar_62236 = (cppVar_62236 & cppMask_un_8_);
	bool cppVar_62238 = (cppVar_62236 == 168);
	BIT_VEC cppVar_62239 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62240 = (cppVar_62239 << 3) | 1;
	cppVar_62240 = (cppVar_62240 & cppMask_un_5_);
	BIT_VEC cppVar_62241 = (0 << 5) | cppVar_62240;
	cppVar_62241 = (cppVar_62241 & cppMask_un_8_);
	bool cppVar_62243 = (cppVar_62241 == 176);
	BIT_VEC cppVar_62244 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62245 = (cppVar_62244 << 3) | 1;
	cppVar_62245 = (cppVar_62245 & cppMask_un_5_);
	BIT_VEC cppVar_62246 = (0 << 5) | cppVar_62245;
	cppVar_62246 = (cppVar_62246 & cppMask_un_8_);
	bool cppVar_62248 = (cppVar_62246 == 184);
	BIT_VEC cppVar_62249 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62250 = (cppVar_62249 << 3) | 1;
	cppVar_62250 = (cppVar_62250 & cppMask_un_5_);
	BIT_VEC cppVar_62251 = (0 << 5) | cppVar_62250;
	cppVar_62251 = (cppVar_62251 & cppMask_un_8_);
	bool cppVar_62253 = (cppVar_62251 == 208);
	BIT_VEC cppVar_62254 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62255 = (cppVar_62254 << 3) | 1;
	cppVar_62255 = (cppVar_62255 & cppMask_un_5_);
	BIT_VEC cppVar_62256 = (0 << 5) | cppVar_62255;
	cppVar_62256 = (cppVar_62256 & cppMask_un_8_);
	bool cppVar_62258 = (cppVar_62256 == 224);
	BIT_VEC cppVar_62259 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62260 = (cppVar_62259 << 3) | 1;
	cppVar_62260 = (cppVar_62260 & cppMask_un_5_);
	BIT_VEC cppVar_62261 = (0 << 5) | cppVar_62260;
	cppVar_62261 = (cppVar_62261 & cppMask_un_8_);
	bool cppVar_62263 = (cppVar_62261 == 240);
	BIT_VEC cppVar_62265 = (cppVar_62263) ? B : 0;
	BIT_VEC cppVar_62266 = (cppVar_62258) ? ACC : cppVar_62265;
	BIT_VEC cppVar_62267 = (cppVar_62253) ? PSW : cppVar_62266;
	BIT_VEC cppVar_62268 = (cppVar_62248) ? IP : cppVar_62267;
	BIT_VEC cppVar_62269 = (cppVar_62243) ? P3 : cppVar_62268;
	BIT_VEC cppVar_62270 = (cppVar_62238) ? IE : cppVar_62269;
	BIT_VEC cppVar_62271 = (cppVar_62233) ? P2 : cppVar_62270;
	BIT_VEC cppVar_62272 = (cppVar_62228) ? SBUF : cppVar_62271;
	BIT_VEC cppVar_62273 = (cppVar_62223) ? SCON : cppVar_62272;
	BIT_VEC cppVar_62274 = (cppVar_62218) ? P1 : cppVar_62273;
	BIT_VEC cppVar_62275 = (cppVar_62213) ? TH1 : cppVar_62274;
	BIT_VEC cppVar_62276 = (cppVar_62208) ? TL1 : cppVar_62275;
	BIT_VEC cppVar_62277 = (cppVar_62203) ? TH0 : cppVar_62276;
	BIT_VEC cppVar_62278 = (cppVar_62198) ? TL0 : cppVar_62277;
	BIT_VEC cppVar_62279 = (cppVar_62193) ? TMOD : cppVar_62278;
	BIT_VEC cppVar_62280 = (cppVar_62188) ? TCON : cppVar_62279;
	BIT_VEC cppVar_62281 = (cppVar_62183) ? PCON : cppVar_62280;
	BIT_VEC cppVar_62282 = (cppVar_62178) ? DPH : cppVar_62281;
	BIT_VEC cppVar_62283 = (cppVar_62173) ? DPL : cppVar_62282;
	BIT_VEC cppVar_62284 = (cppVar_62168) ? SP : cppVar_62283;
	BIT_VEC cppVar_62285 = (cppVar_62163) ? P0 : cppVar_62284;
	BIT_VEC cppVar_62286 = (cppVar_62154) ? cppVar_62158 : cppVar_62285;
	BIT_VEC cppVar_62287 = (cppVar_62146) ? cppVar_62286 : SCON;
	BIT_VEC cppVar_62288 = ROM.rd(PC);
	bool cppVar_62290 = (cppVar_62288 == 136);
	BIT_VEC cppVar_62292 = PC + 1;
	cppVar_62292 = (cppVar_62292 & cppMask_un_16_);
	BIT_VEC cppVar_62293 = ROM.rd(cppVar_62292);
	bool cppVar_62295 = (cppVar_62293 == 152);
	BIT_VEC cppVar_62297 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62299 = (cppVar_62297 << 3) | 0;
	cppVar_62299 = (cppVar_62299 & cppMask_un_5_);
	BIT_VEC cppVar_62300 = (0 << 5) | cppVar_62299;
	cppVar_62300 = (cppVar_62300 & cppMask_un_8_);
	BIT_VEC cppVar_62301 = (cppVar_62300 >> 7) & cppMask_un_1_;
	bool cppVar_62303 = (cppVar_62301 == 0);
	BIT_VEC cppVar_62304 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62305 = (cppVar_62304 << 3) | 0;
	cppVar_62305 = (cppVar_62305 & cppMask_un_5_);
	BIT_VEC cppVar_62306 = (0 << 5) | cppVar_62305;
	cppVar_62306 = (cppVar_62306 & cppMask_un_8_);
	BIT_VEC cppVar_62307 = IRAM.rd(cppVar_62306);
	BIT_VEC cppVar_62308 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62309 = (cppVar_62308 << 3) | 0;
	cppVar_62309 = (cppVar_62309 & cppMask_un_5_);
	BIT_VEC cppVar_62310 = (0 << 5) | cppVar_62309;
	cppVar_62310 = (cppVar_62310 & cppMask_un_8_);
	bool cppVar_62312 = (cppVar_62310 == 128);
	BIT_VEC cppVar_62313 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62314 = (cppVar_62313 << 3) | 0;
	cppVar_62314 = (cppVar_62314 & cppMask_un_5_);
	BIT_VEC cppVar_62315 = (0 << 5) | cppVar_62314;
	cppVar_62315 = (cppVar_62315 & cppMask_un_8_);
	bool cppVar_62317 = (cppVar_62315 == 129);
	BIT_VEC cppVar_62318 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62319 = (cppVar_62318 << 3) | 0;
	cppVar_62319 = (cppVar_62319 & cppMask_un_5_);
	BIT_VEC cppVar_62320 = (0 << 5) | cppVar_62319;
	cppVar_62320 = (cppVar_62320 & cppMask_un_8_);
	bool cppVar_62322 = (cppVar_62320 == 130);
	BIT_VEC cppVar_62323 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62324 = (cppVar_62323 << 3) | 0;
	cppVar_62324 = (cppVar_62324 & cppMask_un_5_);
	BIT_VEC cppVar_62325 = (0 << 5) | cppVar_62324;
	cppVar_62325 = (cppVar_62325 & cppMask_un_8_);
	bool cppVar_62327 = (cppVar_62325 == 131);
	BIT_VEC cppVar_62328 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62329 = (cppVar_62328 << 3) | 0;
	cppVar_62329 = (cppVar_62329 & cppMask_un_5_);
	BIT_VEC cppVar_62330 = (0 << 5) | cppVar_62329;
	cppVar_62330 = (cppVar_62330 & cppMask_un_8_);
	bool cppVar_62332 = (cppVar_62330 == 135);
	BIT_VEC cppVar_62333 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62334 = (cppVar_62333 << 3) | 0;
	cppVar_62334 = (cppVar_62334 & cppMask_un_5_);
	BIT_VEC cppVar_62335 = (0 << 5) | cppVar_62334;
	cppVar_62335 = (cppVar_62335 & cppMask_un_8_);
	bool cppVar_62337 = (cppVar_62335 == 136);
	BIT_VEC cppVar_62338 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62339 = (cppVar_62338 << 3) | 0;
	cppVar_62339 = (cppVar_62339 & cppMask_un_5_);
	BIT_VEC cppVar_62340 = (0 << 5) | cppVar_62339;
	cppVar_62340 = (cppVar_62340 & cppMask_un_8_);
	bool cppVar_62342 = (cppVar_62340 == 137);
	BIT_VEC cppVar_62343 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62344 = (cppVar_62343 << 3) | 0;
	cppVar_62344 = (cppVar_62344 & cppMask_un_5_);
	BIT_VEC cppVar_62345 = (0 << 5) | cppVar_62344;
	cppVar_62345 = (cppVar_62345 & cppMask_un_8_);
	bool cppVar_62347 = (cppVar_62345 == 138);
	BIT_VEC cppVar_62348 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62349 = (cppVar_62348 << 3) | 0;
	cppVar_62349 = (cppVar_62349 & cppMask_un_5_);
	BIT_VEC cppVar_62350 = (0 << 5) | cppVar_62349;
	cppVar_62350 = (cppVar_62350 & cppMask_un_8_);
	bool cppVar_62352 = (cppVar_62350 == 140);
	BIT_VEC cppVar_62353 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62354 = (cppVar_62353 << 3) | 0;
	cppVar_62354 = (cppVar_62354 & cppMask_un_5_);
	BIT_VEC cppVar_62355 = (0 << 5) | cppVar_62354;
	cppVar_62355 = (cppVar_62355 & cppMask_un_8_);
	bool cppVar_62357 = (cppVar_62355 == 139);
	BIT_VEC cppVar_62358 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62359 = (cppVar_62358 << 3) | 0;
	cppVar_62359 = (cppVar_62359 & cppMask_un_5_);
	BIT_VEC cppVar_62360 = (0 << 5) | cppVar_62359;
	cppVar_62360 = (cppVar_62360 & cppMask_un_8_);
	bool cppVar_62362 = (cppVar_62360 == 141);
	BIT_VEC cppVar_62363 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62364 = (cppVar_62363 << 3) | 0;
	cppVar_62364 = (cppVar_62364 & cppMask_un_5_);
	BIT_VEC cppVar_62365 = (0 << 5) | cppVar_62364;
	cppVar_62365 = (cppVar_62365 & cppMask_un_8_);
	bool cppVar_62367 = (cppVar_62365 == 144);
	BIT_VEC cppVar_62368 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62369 = (cppVar_62368 << 3) | 0;
	cppVar_62369 = (cppVar_62369 & cppMask_un_5_);
	BIT_VEC cppVar_62370 = (0 << 5) | cppVar_62369;
	cppVar_62370 = (cppVar_62370 & cppMask_un_8_);
	bool cppVar_62372 = (cppVar_62370 == 152);
	BIT_VEC cppVar_62373 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62374 = (cppVar_62373 << 3) | 0;
	cppVar_62374 = (cppVar_62374 & cppMask_un_5_);
	BIT_VEC cppVar_62375 = (0 << 5) | cppVar_62374;
	cppVar_62375 = (cppVar_62375 & cppMask_un_8_);
	bool cppVar_62377 = (cppVar_62375 == 153);
	BIT_VEC cppVar_62378 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62379 = (cppVar_62378 << 3) | 0;
	cppVar_62379 = (cppVar_62379 & cppMask_un_5_);
	BIT_VEC cppVar_62380 = (0 << 5) | cppVar_62379;
	cppVar_62380 = (cppVar_62380 & cppMask_un_8_);
	bool cppVar_62382 = (cppVar_62380 == 160);
	BIT_VEC cppVar_62383 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62384 = (cppVar_62383 << 3) | 0;
	cppVar_62384 = (cppVar_62384 & cppMask_un_5_);
	BIT_VEC cppVar_62385 = (0 << 5) | cppVar_62384;
	cppVar_62385 = (cppVar_62385 & cppMask_un_8_);
	bool cppVar_62387 = (cppVar_62385 == 168);
	BIT_VEC cppVar_62388 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62389 = (cppVar_62388 << 3) | 0;
	cppVar_62389 = (cppVar_62389 & cppMask_un_5_);
	BIT_VEC cppVar_62390 = (0 << 5) | cppVar_62389;
	cppVar_62390 = (cppVar_62390 & cppMask_un_8_);
	bool cppVar_62392 = (cppVar_62390 == 176);
	BIT_VEC cppVar_62393 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62394 = (cppVar_62393 << 3) | 0;
	cppVar_62394 = (cppVar_62394 & cppMask_un_5_);
	BIT_VEC cppVar_62395 = (0 << 5) | cppVar_62394;
	cppVar_62395 = (cppVar_62395 & cppMask_un_8_);
	bool cppVar_62397 = (cppVar_62395 == 184);
	BIT_VEC cppVar_62398 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62399 = (cppVar_62398 << 3) | 0;
	cppVar_62399 = (cppVar_62399 & cppMask_un_5_);
	BIT_VEC cppVar_62400 = (0 << 5) | cppVar_62399;
	cppVar_62400 = (cppVar_62400 & cppMask_un_8_);
	bool cppVar_62402 = (cppVar_62400 == 208);
	BIT_VEC cppVar_62403 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62404 = (cppVar_62403 << 3) | 0;
	cppVar_62404 = (cppVar_62404 & cppMask_un_5_);
	BIT_VEC cppVar_62405 = (0 << 5) | cppVar_62404;
	cppVar_62405 = (cppVar_62405 & cppMask_un_8_);
	bool cppVar_62407 = (cppVar_62405 == 224);
	BIT_VEC cppVar_62408 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62409 = (cppVar_62408 << 3) | 0;
	cppVar_62409 = (cppVar_62409 & cppMask_un_5_);
	BIT_VEC cppVar_62410 = (0 << 5) | cppVar_62409;
	cppVar_62410 = (cppVar_62410 & cppMask_un_8_);
	bool cppVar_62412 = (cppVar_62410 == 240);
	BIT_VEC cppVar_62414 = (cppVar_62412) ? B : 0;
	BIT_VEC cppVar_62415 = (cppVar_62407) ? ACC : cppVar_62414;
	BIT_VEC cppVar_62416 = (cppVar_62402) ? PSW : cppVar_62415;
	BIT_VEC cppVar_62417 = (cppVar_62397) ? IP : cppVar_62416;
	BIT_VEC cppVar_62418 = (cppVar_62392) ? P3 : cppVar_62417;
	BIT_VEC cppVar_62419 = (cppVar_62387) ? IE : cppVar_62418;
	BIT_VEC cppVar_62420 = (cppVar_62382) ? P2 : cppVar_62419;
	BIT_VEC cppVar_62421 = (cppVar_62377) ? SBUF : cppVar_62420;
	BIT_VEC cppVar_62422 = (cppVar_62372) ? SCON : cppVar_62421;
	BIT_VEC cppVar_62423 = (cppVar_62367) ? P1 : cppVar_62422;
	BIT_VEC cppVar_62424 = (cppVar_62362) ? TH1 : cppVar_62423;
	BIT_VEC cppVar_62425 = (cppVar_62357) ? TL1 : cppVar_62424;
	BIT_VEC cppVar_62426 = (cppVar_62352) ? TH0 : cppVar_62425;
	BIT_VEC cppVar_62427 = (cppVar_62347) ? TL0 : cppVar_62426;
	BIT_VEC cppVar_62428 = (cppVar_62342) ? TMOD : cppVar_62427;
	BIT_VEC cppVar_62429 = (cppVar_62337) ? TCON : cppVar_62428;
	BIT_VEC cppVar_62430 = (cppVar_62332) ? PCON : cppVar_62429;
	BIT_VEC cppVar_62431 = (cppVar_62327) ? DPH : cppVar_62430;
	BIT_VEC cppVar_62432 = (cppVar_62322) ? DPL : cppVar_62431;
	BIT_VEC cppVar_62433 = (cppVar_62317) ? SP : cppVar_62432;
	BIT_VEC cppVar_62434 = (cppVar_62312) ? P0 : cppVar_62433;
	BIT_VEC cppVar_62435 = (cppVar_62303) ? cppVar_62307 : cppVar_62434;
	BIT_VEC cppVar_62436 = (cppVar_62295) ? cppVar_62435 : SCON;
	BIT_VEC cppVar_62437 = ROM.rd(PC);
	bool cppVar_62439 = (cppVar_62437 == 135);
	BIT_VEC cppVar_62441 = PC + 1;
	cppVar_62441 = (cppVar_62441 & cppMask_un_16_);
	BIT_VEC cppVar_62442 = ROM.rd(cppVar_62441);
	bool cppVar_62444 = (cppVar_62442 == 152);
	BIT_VEC cppVar_62446 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62448 = (cppVar_62446 << 3) | 1;
	cppVar_62448 = (cppVar_62448 & cppMask_un_5_);
	BIT_VEC cppVar_62449 = (0 << 5) | cppVar_62448;
	cppVar_62449 = (cppVar_62449 & cppMask_un_8_);
	BIT_VEC cppVar_62450 = IRAM.rd(cppVar_62449);
	BIT_VEC cppVar_62451 = IRAM.rd(cppVar_62450);
	BIT_VEC cppVar_62452 = (cppVar_62444) ? cppVar_62451 : SCON;
	BIT_VEC cppVar_62453 = ROM.rd(PC);
	bool cppVar_62455 = (cppVar_62453 == 134);
	BIT_VEC cppVar_62457 = PC + 1;
	cppVar_62457 = (cppVar_62457 & cppMask_un_16_);
	BIT_VEC cppVar_62458 = ROM.rd(cppVar_62457);
	bool cppVar_62460 = (cppVar_62458 == 152);
	BIT_VEC cppVar_62462 = (PSW >> 3) & cppMask_un_2_;
	BIT_VEC cppVar_62464 = (cppVar_62462 << 3) | 0;
	cppVar_62464 = (cppVar_62464 & cppMask_un_5_);
	BIT_VEC cppVar_62465 = (0 << 5) | cppVar_62464;
	cppVar_62465 = (cppVar_62465 & cppMask_un_8_);
	BIT_VEC cppVar_62466 = IRAM.rd(cppVar_62465);
	BIT_VEC cppVar_62467 = IRAM.rd(cppVar_62466);
	BIT_VEC cppVar_62468 = (cppVar_62460) ? cppVar_62467 : SCON;
	BIT_VEC cppVar_62469 = ROM.rd(PC);
	bool cppVar_62471 = (cppVar_62469 == 133);
	BIT_VEC cppVar_62473 = PC + 2;
	cppVar_62473 = (cppVar_62473 & cppMask_un_16_);
	BIT_VEC cppVar_62474 = ROM.rd(cppVar_62473);
	bool cppVar_62476 = (cppVar_62474 == 152);
	BIT_VEC cppVar_62478 = PC + 1;
	cppVar_62478 = (cppVar_62478 & cppMask_un_16_);
	BIT_VEC cppVar_62479 = ROM.rd(cppVar_62478);
	BIT_VEC cppVar_62480 = (cppVar_62479 >> 7) & cppMask_un_1_;
	bool cppVar_62482 = (cppVar_62480 == 0);
	BIT_VEC cppVar_62483 = PC + 1;
	cppVar_62483 = (cppVar_62483 & cppMask_un_16_);
	BIT_VEC cppVar_62484 = ROM.rd(cppVar_62483);
	BIT_VEC cppVar_62485 = IRAM.rd(cppVar_62484);
	BIT_VEC cppVar_62486 = PC + 1;
	cppVar_62486 = (cppVar_62486 & cppMask_un_16_);
	BIT_VEC cppVar_62487 = ROM.rd(cppVar_62486);
	bool cppVar_62489 = (cppVar_62487 == 128);
	BIT_VEC cppVar_62490 = PC + 1;
	cppVar_62490 = (cppVar_62490 & cppMask_un_16_);
	BIT_VEC cppVar_62491 = ROM.rd(cppVar_62490);
	bool cppVar_62493 = (cppVar_62491 == 129);
	BIT_VEC cppVar_62494 = PC + 1;
	cppVar_62494 = (cppVar_62494 & cppMask_un_16_);
	BIT_VEC cppVar_62495 = ROM.rd(cppVar_62494);
	bool cppVar_62497 = (cppVar_62495 == 130);
	BIT_VEC cppVar_62498 = PC + 1;
	cppVar_62498 = (cppVar_62498 & cppMask_un_16_);
	BIT_VEC cppVar_62499 = ROM.rd(cppVar_62498);
	bool cppVar_62501 = (cppVar_62499 == 131);
	BIT_VEC cppVar_62502 = PC + 1;
	cppVar_62502 = (cppVar_62502 & cppMask_un_16_);
	BIT_VEC cppVar_62503 = ROM.rd(cppVar_62502);
	bool cppVar_62505 = (cppVar_62503 == 135);
	BIT_VEC cppVar_62506 = PC + 1;
	cppVar_62506 = (cppVar_62506 & cppMask_un_16_);
	BIT_VEC cppVar_62507 = ROM.rd(cppVar_62506);
	bool cppVar_62509 = (cppVar_62507 == 136);
	BIT_VEC cppVar_62510 = PC + 1;
	cppVar_62510 = (cppVar_62510 & cppMask_un_16_);
	BIT_VEC cppVar_62511 = ROM.rd(cppVar_62510);
	bool cppVar_62513 = (cppVar_62511 == 137);
	BIT_VEC cppVar_62514 = PC + 1;
	cppVar_62514 = (cppVar_62514 & cppMask_un_16_);
	BIT_VEC cppVar_62515 = ROM.rd(cppVar_62514);
	bool cppVar_62517 = (cppVar_62515 == 138);
	BIT_VEC cppVar_62518 = PC + 1;
	cppVar_62518 = (cppVar_62518 & cppMask_un_16_);
	BIT_VEC cppVar_62519 = ROM.rd(cppVar_62518);
	bool cppVar_62521 = (cppVar_62519 == 140);
	BIT_VEC cppVar_62522 = PC + 1;
	cppVar_62522 = (cppVar_62522 & cppMask_un_16_);
	BIT_VEC cppVar_62523 = ROM.rd(cppVar_62522);
	bool cppVar_62525 = (cppVar_62523 == 139);
	BIT_VEC cppVar_62526 = PC + 1;
	cppVar_62526 = (cppVar_62526 & cppMask_un_16_);
	BIT_VEC cppVar_62527 = ROM.rd(cppVar_62526);
	bool cppVar_62529 = (cppVar_62527 == 141);
	BIT_VEC cppVar_62530 = PC + 1;
	cppVar_62530 = (cppVar_62530 & cppMask_un_16_);
	BIT_VEC cppVar_62531 = ROM.rd(cppVar_62530);
	bool cppVar_62533 = (cppVar_62531 == 144);
	BIT_VEC cppVar_62534 = PC + 1;
	cppVar_62534 = (cppVar_62534 & cppMask_un_16_);
	BIT_VEC cppVar_62535 = ROM.rd(cppVar_62534);
	bool cppVar_62537 = (cppVar_62535 == 152);
	BIT_VEC cppVar_62538 = PC + 1;
	cppVar_62538 = (cppVar_62538 & cppMask_un_16_);
	BIT_VEC cppVar_62539 = ROM.rd(cppVar_62538);
	bool cppVar_62541 = (cppVar_62539 == 153);
	BIT_VEC cppVar_62542 = PC + 1;
	cppVar_62542 = (cppVar_62542 & cppMask_un_16_);
	BIT_VEC cppVar_62543 = ROM.rd(cppVar_62542);
	bool cppVar_62545 = (cppVar_62543 == 160);
	BIT_VEC cppVar_62546 = PC + 1;
	cppVar_62546 = (cppVar_62546 & cppMask_un_16_);
	BIT_VEC cppVar_62547 = ROM.rd(cppVar_62546);
	bool cppVar_62549 = (cppVar_62547 == 168);
	BIT_VEC cppVar_62550 = PC + 1;
	cppVar_62550 = (cppVar_62550 & cppMask_un_16_);
	BIT_VEC cppVar_62551 = ROM.rd(cppVar_62550);
	bool cppVar_62553 = (cppVar_62551 == 176);
	BIT_VEC cppVar_62554 = PC + 1;
	cppVar_62554 = (cppVar_62554 & cppMask_un_16_);
	BIT_VEC cppVar_62555 = ROM.rd(cppVar_62554);
	bool cppVar_62557 = (cppVar_62555 == 184);
	BIT_VEC cppVar_62558 = PC + 1;
	cppVar_62558 = (cppVar_62558 & cppMask_un_16_);
	BIT_VEC cppVar_62559 = ROM.rd(cppVar_62558);
	bool cppVar_62561 = (cppVar_62559 == 208);
	BIT_VEC cppVar_62562 = PC + 1;
	cppVar_62562 = (cppVar_62562 & cppMask_un_16_);
	BIT_VEC cppVar_62563 = ROM.rd(cppVar_62562);
	bool cppVar_62565 = (cppVar_62563 == 224);
	BIT_VEC cppVar_62566 = PC + 1;
	cppVar_62566 = (cppVar_62566 & cppMask_un_16_);
	BIT_VEC cppVar_62567 = ROM.rd(cppVar_62566);
	bool cppVar_62569 = (cppVar_62567 == 240);
	BIT_VEC cppVar_62571 = (cppVar_62569) ? B : 0;
	BIT_VEC cppVar_62572 = (cppVar_62565) ? ACC : cppVar_62571;
	BIT_VEC cppVar_62573 = (cppVar_62561) ? PSW : cppVar_62572;
	BIT_VEC cppVar_62574 = (cppVar_62557) ? IP : cppVar_62573;
	BIT_VEC cppVar_62575 = (cppVar_62553) ? P3 : cppVar_62574;
	BIT_VEC cppVar_62576 = (cppVar_62549) ? IE : cppVar_62575;
	BIT_VEC cppVar_62577 = (cppVar_62545) ? P2 : cppVar_62576;
	BIT_VEC cppVar_62578 = (cppVar_62541) ? SBUF : cppVar_62577;
	BIT_VEC cppVar_62579 = (cppVar_62537) ? SCON : cppVar_62578;
	BIT_VEC cppVar_62580 = (cppVar_62533) ? P1 : cppVar_62579;
	BIT_VEC cppVar_62581 = (cppVar_62529) ? TH1 : cppVar_62580;
	BIT_VEC cppVar_62582 = (cppVar_62525) ? TL1 : cppVar_62581;
	BIT_VEC cppVar_62583 = (cppVar_62521) ? TH0 : cppVar_62582;
	BIT_VEC cppVar_62584 = (cppVar_62517) ? TL0 : cppVar_62583;
	BIT_VEC cppVar_62585 = (cppVar_62513) ? TMOD : cppVar_62584;
	BIT_VEC cppVar_62586 = (cppVar_62509) ? TCON : cppVar_62585;
	BIT_VEC cppVar_62587 = (cppVar_62505) ? PCON : cppVar_62586;
	BIT_VEC cppVar_62588 = (cppVar_62501) ? DPH : cppVar_62587;
	BIT_VEC cppVar_62589 = (cppVar_62497) ? DPL : cppVar_62588;
	BIT_VEC cppVar_62590 = (cppVar_62493) ? SP : cppVar_62589;
	BIT_VEC cppVar_62591 = (cppVar_62489) ? P0 : cppVar_62590;
	BIT_VEC cppVar_62592 = (cppVar_62482) ? cppVar_62485 : cppVar_62591;
	BIT_VEC cppVar_62593 = (cppVar_62476) ? cppVar_62592 : SCON;
	BIT_VEC cppVar_62594 = ROM.rd(PC);
	bool cppVar_62596 = (cppVar_62594 == 117);
	BIT_VEC cppVar_62598 = PC + 1;
	cppVar_62598 = (cppVar_62598 & cppMask_un_16_);
	BIT_VEC cppVar_62599 = ROM.rd(cppVar_62598);
	bool cppVar_62601 = (cppVar_62599 == 152);
	BIT_VEC cppVar_62603 = PC + 2;
	cppVar_62603 = (cppVar_62603 & cppMask_un_16_);
	BIT_VEC cppVar_62604 = ROM.rd(cppVar_62603);
	BIT_VEC cppVar_62605 = (cppVar_62601) ? cppVar_62604 : SCON;
	BIT_VEC cppVar_62606 = ROM.rd(PC);
	bool cppVar_62608 = (cppVar_62606 == 99);
	BIT_VEC cppVar_62610 = PC + 1;
	cppVar_62610 = (cppVar_62610 & cppMask_un_16_);
	BIT_VEC cppVar_62611 = ROM.rd(cppVar_62610);
	bool cppVar_62613 = (cppVar_62611 == 152);
	BIT_VEC cppVar_62614 = PC + 1;
	cppVar_62614 = (cppVar_62614 & cppMask_un_16_);
	BIT_VEC cppVar_62615 = ROM.rd(cppVar_62614);
	BIT_VEC cppVar_62616 = (cppVar_62615 >> 7) & cppMask_un_1_;
	bool cppVar_62618 = (cppVar_62616 == 0);
	BIT_VEC cppVar_62619 = PC + 1;
	cppVar_62619 = (cppVar_62619 & cppMask_un_16_);
	BIT_VEC cppVar_62620 = ROM.rd(cppVar_62619);
	BIT_VEC cppVar_62621 = IRAM.rd(cppVar_62620);
	BIT_VEC cppVar_62622 = PC + 1;
	cppVar_62622 = (cppVar_62622 & cppMask_un_16_);
	BIT_VEC cppVar_62623 = ROM.rd(cppVar_62622);
	bool cppVar_62625 = (cppVar_62623 == 128);
	BIT_VEC cppVar_62626 = PC + 1;
	cppVar_62626 = (cppVar_62626 & cppMask_un_16_);
	BIT_VEC cppVar_62627 = ROM.rd(cppVar_62626);
	bool cppVar_62629 = (cppVar_62627 == 129);
	BIT_VEC cppVar_62630 = PC + 1;
	cppVar_62630 = (cppVar_62630 & cppMask_un_16_);
	BIT_VEC cppVar_62631 = ROM.rd(cppVar_62630);
	bool cppVar_62633 = (cppVar_62631 == 130);
	BIT_VEC cppVar_62634 = PC + 1;
	cppVar_62634 = (cppVar_62634 & cppMask_un_16_);
	BIT_VEC cppVar_62635 = ROM.rd(cppVar_62634);
	bool cppVar_62637 = (cppVar_62635 == 131);
	BIT_VEC cppVar_62638 = PC + 1;
	cppVar_62638 = (cppVar_62638 & cppMask_un_16_);
	BIT_VEC cppVar_62639 = ROM.rd(cppVar_62638);
	bool cppVar_62641 = (cppVar_62639 == 135);
	BIT_VEC cppVar_62642 = PC + 1;
	cppVar_62642 = (cppVar_62642 & cppMask_un_16_);
	BIT_VEC cppVar_62643 = ROM.rd(cppVar_62642);
	bool cppVar_62645 = (cppVar_62643 == 136);
	BIT_VEC cppVar_62646 = PC + 1;
	cppVar_62646 = (cppVar_62646 & cppMask_un_16_);
	BIT_VEC cppVar_62647 = ROM.rd(cppVar_62646);
	bool cppVar_62649 = (cppVar_62647 == 137);
	BIT_VEC cppVar_62650 = PC + 1;
	cppVar_62650 = (cppVar_62650 & cppMask_un_16_);
	BIT_VEC cppVar_62651 = ROM.rd(cppVar_62650);
	bool cppVar_62653 = (cppVar_62651 == 138);
	BIT_VEC cppVar_62654 = PC + 1;
	cppVar_62654 = (cppVar_62654 & cppMask_un_16_);
	BIT_VEC cppVar_62655 = ROM.rd(cppVar_62654);
	bool cppVar_62657 = (cppVar_62655 == 140);
	BIT_VEC cppVar_62658 = PC + 1;
	cppVar_62658 = (cppVar_62658 & cppMask_un_16_);
	BIT_VEC cppVar_62659 = ROM.rd(cppVar_62658);
	bool cppVar_62661 = (cppVar_62659 == 139);
	BIT_VEC cppVar_62662 = PC + 1;
	cppVar_62662 = (cppVar_62662 & cppMask_un_16_);
	BIT_VEC cppVar_62663 = ROM.rd(cppVar_62662);
	bool cppVar_62665 = (cppVar_62663 == 141);
	BIT_VEC cppVar_62666 = PC + 1;
	cppVar_62666 = (cppVar_62666 & cppMask_un_16_);
	BIT_VEC cppVar_62667 = ROM.rd(cppVar_62666);
	bool cppVar_62669 = (cppVar_62667 == 144);
	BIT_VEC cppVar_62670 = PC + 1;
	cppVar_62670 = (cppVar_62670 & cppMask_un_16_);
	BIT_VEC cppVar_62671 = ROM.rd(cppVar_62670);
	bool cppVar_62673 = (cppVar_62671 == 152);
	BIT_VEC cppVar_62674 = PC + 1;
	cppVar_62674 = (cppVar_62674 & cppMask_un_16_);
	BIT_VEC cppVar_62675 = ROM.rd(cppVar_62674);
	bool cppVar_62677 = (cppVar_62675 == 153);
	BIT_VEC cppVar_62678 = PC + 1;
	cppVar_62678 = (cppVar_62678 & cppMask_un_16_);
	BIT_VEC cppVar_62679 = ROM.rd(cppVar_62678);
	bool cppVar_62681 = (cppVar_62679 == 160);
	BIT_VEC cppVar_62682 = PC + 1;
	cppVar_62682 = (cppVar_62682 & cppMask_un_16_);
	BIT_VEC cppVar_62683 = ROM.rd(cppVar_62682);
	bool cppVar_62685 = (cppVar_62683 == 168);
	BIT_VEC cppVar_62686 = PC + 1;
	cppVar_62686 = (cppVar_62686 & cppMask_un_16_);
	BIT_VEC cppVar_62687 = ROM.rd(cppVar_62686);
	bool cppVar_62689 = (cppVar_62687 == 176);
	BIT_VEC cppVar_62690 = PC + 1;
	cppVar_62690 = (cppVar_62690 & cppMask_un_16_);
	BIT_VEC cppVar_62691 = ROM.rd(cppVar_62690);
	bool cppVar_62693 = (cppVar_62691 == 184);
	BIT_VEC cppVar_62694 = PC + 1;
	cppVar_62694 = (cppVar_62694 & cppMask_un_16_);
	BIT_VEC cppVar_62695 = ROM.rd(cppVar_62694);
	bool cppVar_62697 = (cppVar_62695 == 208);
	BIT_VEC cppVar_62698 = PC + 1;
	cppVar_62698 = (cppVar_62698 & cppMask_un_16_);
	BIT_VEC cppVar_62699 = ROM.rd(cppVar_62698);
	bool cppVar_62701 = (cppVar_62699 == 224);
	BIT_VEC cppVar_62702 = PC + 1;
	cppVar_62702 = (cppVar_62702 & cppMask_un_16_);
	BIT_VEC cppVar_62703 = ROM.rd(cppVar_62702);
	bool cppVar_62705 = (cppVar_62703 == 240);
	BIT_VEC cppVar_62707 = (cppVar_62705) ? B : 0;
	BIT_VEC cppVar_62708 = (cppVar_62701) ? ACC : cppVar_62707;
	BIT_VEC cppVar_62709 = (cppVar_62697) ? PSW : cppVar_62708;
	BIT_VEC cppVar_62710 = (cppVar_62693) ? IP : cppVar_62709;
	BIT_VEC cppVar_62711 = (cppVar_62689) ? P3 : cppVar_62710;
	BIT_VEC cppVar_62712 = (cppVar_62685) ? IE : cppVar_62711;
	BIT_VEC cppVar_62713 = (cppVar_62681) ? P2 : cppVar_62712;
	BIT_VEC cppVar_62714 = (cppVar_62677) ? SBUF : cppVar_62713;
	BIT_VEC cppVar_62715 = (cppVar_62673) ? SCON : cppVar_62714;
	BIT_VEC cppVar_62716 = (cppVar_62669) ? P1 : cppVar_62715;
	BIT_VEC cppVar_62717 = (cppVar_62665) ? TH1 : cppVar_62716;
	BIT_VEC cppVar_62718 = (cppVar_62661) ? TL1 : cppVar_62717;
	BIT_VEC cppVar_62719 = (cppVar_62657) ? TH0 : cppVar_62718;
	BIT_VEC cppVar_62720 = (cppVar_62653) ? TL0 : cppVar_62719;
	BIT_VEC cppVar_62721 = (cppVar_62649) ? TMOD : cppVar_62720;
	BIT_VEC cppVar_62722 = (cppVar_62645) ? TCON : cppVar_62721;
	BIT_VEC cppVar_62723 = (cppVar_62641) ? PCON : cppVar_62722;
	BIT_VEC cppVar_62724 = (cppVar_62637) ? DPH : cppVar_62723;
	BIT_VEC cppVar_62725 = (cppVar_62633) ? DPL : cppVar_62724;
	BIT_VEC cppVar_62726 = (cppVar_62629) ? SP : cppVar_62725;
	BIT_VEC cppVar_62727 = (cppVar_62625) ? P0 : cppVar_62726;
	BIT_VEC cppVar_62728 = (cppVar_62618) ? cppVar_62621 : cppVar_62727;
	BIT_VEC cppVar_62730 = PC + 2;
	cppVar_62730 = (cppVar_62730 & cppMask_un_16_);
	BIT_VEC cppVar_62731 = ROM.rd(cppVar_62730);
	BIT_VEC cppVar_62732 = cppVar_62728 ^ cppVar_62731;
	BIT_VEC cppVar_62733 = (cppVar_62613) ? cppVar_62732 : SCON;
	BIT_VEC cppVar_62734 = ROM.rd(PC);
	bool cppVar_62736 = (cppVar_62734 == 98);
	BIT_VEC cppVar_62738 = PC + 1;
	cppVar_62738 = (cppVar_62738 & cppMask_un_16_);
	BIT_VEC cppVar_62739 = ROM.rd(cppVar_62738);
	bool cppVar_62741 = (cppVar_62739 == 152);
	BIT_VEC cppVar_62742 = PC + 1;
	cppVar_62742 = (cppVar_62742 & cppMask_un_16_);
	BIT_VEC cppVar_62743 = ROM.rd(cppVar_62742);
	BIT_VEC cppVar_62744 = (cppVar_62743 >> 7) & cppMask_un_1_;
	bool cppVar_62746 = (cppVar_62744 == 0);
	BIT_VEC cppVar_62747 = PC + 1;
	cppVar_62747 = (cppVar_62747 & cppMask_un_16_);
	BIT_VEC cppVar_62748 = ROM.rd(cppVar_62747);
	BIT_VEC cppVar_62749 = IRAM.rd(cppVar_62748);
	BIT_VEC cppVar_62750 = PC + 1;
	cppVar_62750 = (cppVar_62750 & cppMask_un_16_);
	BIT_VEC cppVar_62751 = ROM.rd(cppVar_62750);
	bool cppVar_62753 = (cppVar_62751 == 128);
	BIT_VEC cppVar_62754 = PC + 1;
	cppVar_62754 = (cppVar_62754 & cppMask_un_16_);
	BIT_VEC cppVar_62755 = ROM.rd(cppVar_62754);
	bool cppVar_62757 = (cppVar_62755 == 129);
	BIT_VEC cppVar_62758 = PC + 1;
	cppVar_62758 = (cppVar_62758 & cppMask_un_16_);
	BIT_VEC cppVar_62759 = ROM.rd(cppVar_62758);
	bool cppVar_62761 = (cppVar_62759 == 130);
	BIT_VEC cppVar_62762 = PC + 1;
	cppVar_62762 = (cppVar_62762 & cppMask_un_16_);
	BIT_VEC cppVar_62763 = ROM.rd(cppVar_62762);
	bool cppVar_62765 = (cppVar_62763 == 131);
	BIT_VEC cppVar_62766 = PC + 1;
	cppVar_62766 = (cppVar_62766 & cppMask_un_16_);
	BIT_VEC cppVar_62767 = ROM.rd(cppVar_62766);
	bool cppVar_62769 = (cppVar_62767 == 135);
	BIT_VEC cppVar_62770 = PC + 1;
	cppVar_62770 = (cppVar_62770 & cppMask_un_16_);
	BIT_VEC cppVar_62771 = ROM.rd(cppVar_62770);
	bool cppVar_62773 = (cppVar_62771 == 136);
	BIT_VEC cppVar_62774 = PC + 1;
	cppVar_62774 = (cppVar_62774 & cppMask_un_16_);
	BIT_VEC cppVar_62775 = ROM.rd(cppVar_62774);
	bool cppVar_62777 = (cppVar_62775 == 137);
	BIT_VEC cppVar_62778 = PC + 1;
	cppVar_62778 = (cppVar_62778 & cppMask_un_16_);
	BIT_VEC cppVar_62779 = ROM.rd(cppVar_62778);
	bool cppVar_62781 = (cppVar_62779 == 138);
	BIT_VEC cppVar_62782 = PC + 1;
	cppVar_62782 = (cppVar_62782 & cppMask_un_16_);
	BIT_VEC cppVar_62783 = ROM.rd(cppVar_62782);
	bool cppVar_62785 = (cppVar_62783 == 140);
	BIT_VEC cppVar_62786 = PC + 1;
	cppVar_62786 = (cppVar_62786 & cppMask_un_16_);
	BIT_VEC cppVar_62787 = ROM.rd(cppVar_62786);
	bool cppVar_62789 = (cppVar_62787 == 139);
	BIT_VEC cppVar_62790 = PC + 1;
	cppVar_62790 = (cppVar_62790 & cppMask_un_16_);
	BIT_VEC cppVar_62791 = ROM.rd(cppVar_62790);
	bool cppVar_62793 = (cppVar_62791 == 141);
	BIT_VEC cppVar_62794 = PC + 1;
	cppVar_62794 = (cppVar_62794 & cppMask_un_16_);
	BIT_VEC cppVar_62795 = ROM.rd(cppVar_62794);
	bool cppVar_62797 = (cppVar_62795 == 144);
	BIT_VEC cppVar_62798 = PC + 1;
	cppVar_62798 = (cppVar_62798 & cppMask_un_16_);
	BIT_VEC cppVar_62799 = ROM.rd(cppVar_62798);
	bool cppVar_62801 = (cppVar_62799 == 152);
	BIT_VEC cppVar_62802 = PC + 1;
	cppVar_62802 = (cppVar_62802 & cppMask_un_16_);
	BIT_VEC cppVar_62803 = ROM.rd(cppVar_62802);
	bool cppVar_62805 = (cppVar_62803 == 153);
	BIT_VEC cppVar_62806 = PC + 1;
	cppVar_62806 = (cppVar_62806 & cppMask_un_16_);
	BIT_VEC cppVar_62807 = ROM.rd(cppVar_62806);
	bool cppVar_62809 = (cppVar_62807 == 160);
	BIT_VEC cppVar_62810 = PC + 1;
	cppVar_62810 = (cppVar_62810 & cppMask_un_16_);
	BIT_VEC cppVar_62811 = ROM.rd(cppVar_62810);
	bool cppVar_62813 = (cppVar_62811 == 168);
	BIT_VEC cppVar_62814 = PC + 1;
	cppVar_62814 = (cppVar_62814 & cppMask_un_16_);
	BIT_VEC cppVar_62815 = ROM.rd(cppVar_62814);
	bool cppVar_62817 = (cppVar_62815 == 176);
	BIT_VEC cppVar_62818 = PC + 1;
	cppVar_62818 = (cppVar_62818 & cppMask_un_16_);
	BIT_VEC cppVar_62819 = ROM.rd(cppVar_62818);
	bool cppVar_62821 = (cppVar_62819 == 184);
	BIT_VEC cppVar_62822 = PC + 1;
	cppVar_62822 = (cppVar_62822 & cppMask_un_16_);
	BIT_VEC cppVar_62823 = ROM.rd(cppVar_62822);
	bool cppVar_62825 = (cppVar_62823 == 208);
	BIT_VEC cppVar_62826 = PC + 1;
	cppVar_62826 = (cppVar_62826 & cppMask_un_16_);
	BIT_VEC cppVar_62827 = ROM.rd(cppVar_62826);
	bool cppVar_62829 = (cppVar_62827 == 224);
	BIT_VEC cppVar_62830 = PC + 1;
	cppVar_62830 = (cppVar_62830 & cppMask_un_16_);
	BIT_VEC cppVar_62831 = ROM.rd(cppVar_62830);
	bool cppVar_62833 = (cppVar_62831 == 240);
	BIT_VEC cppVar_62835 = (cppVar_62833) ? B : 0;
	BIT_VEC cppVar_62836 = (cppVar_62829) ? ACC : cppVar_62835;
	BIT_VEC cppVar_62837 = (cppVar_62825) ? PSW : cppVar_62836;
	BIT_VEC cppVar_62838 = (cppVar_62821) ? IP : cppVar_62837;
	BIT_VEC cppVar_62839 = (cppVar_62817) ? P3 : cppVar_62838;
	BIT_VEC cppVar_62840 = (cppVar_62813) ? IE : cppVar_62839;
	BIT_VEC cppVar_62841 = (cppVar_62809) ? P2 : cppVar_62840;
	BIT_VEC cppVar_62842 = (cppVar_62805) ? SBUF : cppVar_62841;
	BIT_VEC cppVar_62843 = (cppVar_62801) ? SCON : cppVar_62842;
	BIT_VEC cppVar_62844 = (cppVar_62797) ? P1 : cppVar_62843;
	BIT_VEC cppVar_62845 = (cppVar_62793) ? TH1 : cppVar_62844;
	BIT_VEC cppVar_62846 = (cppVar_62789) ? TL1 : cppVar_62845;
	BIT_VEC cppVar_62847 = (cppVar_62785) ? TH0 : cppVar_62846;
	BIT_VEC cppVar_62848 = (cppVar_62781) ? TL0 : cppVar_62847;
	BIT_VEC cppVar_62849 = (cppVar_62777) ? TMOD : cppVar_62848;
	BIT_VEC cppVar_62850 = (cppVar_62773) ? TCON : cppVar_62849;
	BIT_VEC cppVar_62851 = (cppVar_62769) ? PCON : cppVar_62850;
	BIT_VEC cppVar_62852 = (cppVar_62765) ? DPH : cppVar_62851;
	BIT_VEC cppVar_62853 = (cppVar_62761) ? DPL : cppVar_62852;
	BIT_VEC cppVar_62854 = (cppVar_62757) ? SP : cppVar_62853;
	BIT_VEC cppVar_62855 = (cppVar_62753) ? P0 : cppVar_62854;
	BIT_VEC cppVar_62856 = (cppVar_62746) ? cppVar_62749 : cppVar_62855;
	BIT_VEC cppVar_62857 = cppVar_62856 ^ ACC;
	BIT_VEC cppVar_62858 = (cppVar_62741) ? cppVar_62857 : SCON;
	BIT_VEC cppVar_62859 = ROM.rd(PC);
	bool cppVar_62861 = (cppVar_62859 == 83);
	BIT_VEC cppVar_62863 = PC + 1;
	cppVar_62863 = (cppVar_62863 & cppMask_un_16_);
	BIT_VEC cppVar_62864 = ROM.rd(cppVar_62863);
	bool cppVar_62866 = (cppVar_62864 == 152);
	BIT_VEC cppVar_62867 = PC + 1;
	cppVar_62867 = (cppVar_62867 & cppMask_un_16_);
	BIT_VEC cppVar_62868 = ROM.rd(cppVar_62867);
	BIT_VEC cppVar_62869 = (cppVar_62868 >> 7) & cppMask_un_1_;
	bool cppVar_62871 = (cppVar_62869 == 0);
	BIT_VEC cppVar_62872 = PC + 1;
	cppVar_62872 = (cppVar_62872 & cppMask_un_16_);
	BIT_VEC cppVar_62873 = ROM.rd(cppVar_62872);
	BIT_VEC cppVar_62874 = IRAM.rd(cppVar_62873);
	BIT_VEC cppVar_62875 = PC + 1;
	cppVar_62875 = (cppVar_62875 & cppMask_un_16_);
	BIT_VEC cppVar_62876 = ROM.rd(cppVar_62875);
	bool cppVar_62878 = (cppVar_62876 == 128);
	BIT_VEC cppVar_62879 = PC + 1;
	cppVar_62879 = (cppVar_62879 & cppMask_un_16_);
	BIT_VEC cppVar_62880 = ROM.rd(cppVar_62879);
	bool cppVar_62882 = (cppVar_62880 == 129);
	BIT_VEC cppVar_62883 = PC + 1;
	cppVar_62883 = (cppVar_62883 & cppMask_un_16_);
	BIT_VEC cppVar_62884 = ROM.rd(cppVar_62883);
	bool cppVar_62886 = (cppVar_62884 == 130);
	BIT_VEC cppVar_62887 = PC + 1;
	cppVar_62887 = (cppVar_62887 & cppMask_un_16_);
	BIT_VEC cppVar_62888 = ROM.rd(cppVar_62887);
	bool cppVar_62890 = (cppVar_62888 == 131);
	BIT_VEC cppVar_62891 = PC + 1;
	cppVar_62891 = (cppVar_62891 & cppMask_un_16_);
	BIT_VEC cppVar_62892 = ROM.rd(cppVar_62891);
	bool cppVar_62894 = (cppVar_62892 == 135);
	BIT_VEC cppVar_62895 = PC + 1;
	cppVar_62895 = (cppVar_62895 & cppMask_un_16_);
	BIT_VEC cppVar_62896 = ROM.rd(cppVar_62895);
	bool cppVar_62898 = (cppVar_62896 == 136);
	BIT_VEC cppVar_62899 = PC + 1;
	cppVar_62899 = (cppVar_62899 & cppMask_un_16_);
	BIT_VEC cppVar_62900 = ROM.rd(cppVar_62899);
	bool cppVar_62902 = (cppVar_62900 == 137);
	BIT_VEC cppVar_62903 = PC + 1;
	cppVar_62903 = (cppVar_62903 & cppMask_un_16_);
	BIT_VEC cppVar_62904 = ROM.rd(cppVar_62903);
	bool cppVar_62906 = (cppVar_62904 == 138);
	BIT_VEC cppVar_62907 = PC + 1;
	cppVar_62907 = (cppVar_62907 & cppMask_un_16_);
	BIT_VEC cppVar_62908 = ROM.rd(cppVar_62907);
	bool cppVar_62910 = (cppVar_62908 == 140);
	BIT_VEC cppVar_62911 = PC + 1;
	cppVar_62911 = (cppVar_62911 & cppMask_un_16_);
	BIT_VEC cppVar_62912 = ROM.rd(cppVar_62911);
	bool cppVar_62914 = (cppVar_62912 == 139);
	BIT_VEC cppVar_62915 = PC + 1;
	cppVar_62915 = (cppVar_62915 & cppMask_un_16_);
	BIT_VEC cppVar_62916 = ROM.rd(cppVar_62915);
	bool cppVar_62918 = (cppVar_62916 == 141);
	BIT_VEC cppVar_62919 = PC + 1;
	cppVar_62919 = (cppVar_62919 & cppMask_un_16_);
	BIT_VEC cppVar_62920 = ROM.rd(cppVar_62919);
	bool cppVar_62922 = (cppVar_62920 == 144);
	BIT_VEC cppVar_62923 = PC + 1;
	cppVar_62923 = (cppVar_62923 & cppMask_un_16_);
	BIT_VEC cppVar_62924 = ROM.rd(cppVar_62923);
	bool cppVar_62926 = (cppVar_62924 == 152);
	BIT_VEC cppVar_62927 = PC + 1;
	cppVar_62927 = (cppVar_62927 & cppMask_un_16_);
	BIT_VEC cppVar_62928 = ROM.rd(cppVar_62927);
	bool cppVar_62930 = (cppVar_62928 == 153);
	BIT_VEC cppVar_62931 = PC + 1;
	cppVar_62931 = (cppVar_62931 & cppMask_un_16_);
	BIT_VEC cppVar_62932 = ROM.rd(cppVar_62931);
	bool cppVar_62934 = (cppVar_62932 == 160);
	BIT_VEC cppVar_62935 = PC + 1;
	cppVar_62935 = (cppVar_62935 & cppMask_un_16_);
	BIT_VEC cppVar_62936 = ROM.rd(cppVar_62935);
	bool cppVar_62938 = (cppVar_62936 == 168);
	BIT_VEC cppVar_62939 = PC + 1;
	cppVar_62939 = (cppVar_62939 & cppMask_un_16_);
	BIT_VEC cppVar_62940 = ROM.rd(cppVar_62939);
	bool cppVar_62942 = (cppVar_62940 == 176);
	BIT_VEC cppVar_62943 = PC + 1;
	cppVar_62943 = (cppVar_62943 & cppMask_un_16_);
	BIT_VEC cppVar_62944 = ROM.rd(cppVar_62943);
	bool cppVar_62946 = (cppVar_62944 == 184);
	BIT_VEC cppVar_62947 = PC + 1;
	cppVar_62947 = (cppVar_62947 & cppMask_un_16_);
	BIT_VEC cppVar_62948 = ROM.rd(cppVar_62947);
	bool cppVar_62950 = (cppVar_62948 == 208);
	BIT_VEC cppVar_62951 = PC + 1;
	cppVar_62951 = (cppVar_62951 & cppMask_un_16_);
	BIT_VEC cppVar_62952 = ROM.rd(cppVar_62951);
	bool cppVar_62954 = (cppVar_62952 == 224);
	BIT_VEC cppVar_62955 = PC + 1;
	cppVar_62955 = (cppVar_62955 & cppMask_un_16_);
	BIT_VEC cppVar_62956 = ROM.rd(cppVar_62955);
	bool cppVar_62958 = (cppVar_62956 == 240);
	BIT_VEC cppVar_62960 = (cppVar_62958) ? B : 0;
	BIT_VEC cppVar_62961 = (cppVar_62954) ? ACC : cppVar_62960;
	BIT_VEC cppVar_62962 = (cppVar_62950) ? PSW : cppVar_62961;
	BIT_VEC cppVar_62963 = (cppVar_62946) ? IP : cppVar_62962;
	BIT_VEC cppVar_62964 = (cppVar_62942) ? P3 : cppVar_62963;
	BIT_VEC cppVar_62965 = (cppVar_62938) ? IE : cppVar_62964;
	BIT_VEC cppVar_62966 = (cppVar_62934) ? P2 : cppVar_62965;
	BIT_VEC cppVar_62967 = (cppVar_62930) ? SBUF : cppVar_62966;
	BIT_VEC cppVar_62968 = (cppVar_62926) ? SCON : cppVar_62967;
	BIT_VEC cppVar_62969 = (cppVar_62922) ? P1 : cppVar_62968;
	BIT_VEC cppVar_62970 = (cppVar_62918) ? TH1 : cppVar_62969;
	BIT_VEC cppVar_62971 = (cppVar_62914) ? TL1 : cppVar_62970;
	BIT_VEC cppVar_62972 = (cppVar_62910) ? TH0 : cppVar_62971;
	BIT_VEC cppVar_62973 = (cppVar_62906) ? TL0 : cppVar_62972;
	BIT_VEC cppVar_62974 = (cppVar_62902) ? TMOD : cppVar_62973;
	BIT_VEC cppVar_62975 = (cppVar_62898) ? TCON : cppVar_62974;
	BIT_VEC cppVar_62976 = (cppVar_62894) ? PCON : cppVar_62975;
	BIT_VEC cppVar_62977 = (cppVar_62890) ? DPH : cppVar_62976;
	BIT_VEC cppVar_62978 = (cppVar_62886) ? DPL : cppVar_62977;
	BIT_VEC cppVar_62979 = (cppVar_62882) ? SP : cppVar_62978;
	BIT_VEC cppVar_62980 = (cppVar_62878) ? P0 : cppVar_62979;
	BIT_VEC cppVar_62981 = (cppVar_62871) ? cppVar_62874 : cppVar_62980;
	BIT_VEC cppVar_62983 = PC + 2;
	cppVar_62983 = (cppVar_62983 & cppMask_un_16_);
	BIT_VEC cppVar_62984 = ROM.rd(cppVar_62983);
	BIT_VEC cppVar_62985 = cppVar_62981 & cppVar_62984;
	BIT_VEC cppVar_62986 = (cppVar_62866) ? cppVar_62985 : SCON;
	BIT_VEC cppVar_62987 = ROM.rd(PC);
	bool cppVar_62989 = (cppVar_62987 == 82);
	BIT_VEC cppVar_62991 = PC + 1;
	cppVar_62991 = (cppVar_62991 & cppMask_un_16_);
	BIT_VEC cppVar_62992 = ROM.rd(cppVar_62991);
	bool cppVar_62994 = (cppVar_62992 == 152);
	BIT_VEC cppVar_62995 = PC + 1;
	cppVar_62995 = (cppVar_62995 & cppMask_un_16_);
	BIT_VEC cppVar_62996 = ROM.rd(cppVar_62995);
	BIT_VEC cppVar_62997 = (cppVar_62996 >> 7) & cppMask_un_1_;
	bool cppVar_62999 = (cppVar_62997 == 0);
	BIT_VEC cppVar_63000 = PC + 1;
	cppVar_63000 = (cppVar_63000 & cppMask_un_16_);
	BIT_VEC cppVar_63001 = ROM.rd(cppVar_63000);
	BIT_VEC cppVar_63002 = IRAM.rd(cppVar_63001);
	BIT_VEC cppVar_63003 = PC + 1;
	cppVar_63003 = (cppVar_63003 & cppMask_un_16_);
	BIT_VEC cppVar_63004 = ROM.rd(cppVar_63003);
	bool cppVar_63006 = (cppVar_63004 == 128);
	BIT_VEC cppVar_63007 = PC + 1;
	cppVar_63007 = (cppVar_63007 & cppMask_un_16_);
	BIT_VEC cppVar_63008 = ROM.rd(cppVar_63007);
	bool cppVar_63010 = (cppVar_63008 == 129);
	BIT_VEC cppVar_63011 = PC + 1;
	cppVar_63011 = (cppVar_63011 & cppMask_un_16_);
	BIT_VEC cppVar_63012 = ROM.rd(cppVar_63011);
	bool cppVar_63014 = (cppVar_63012 == 130);
	BIT_VEC cppVar_63015 = PC + 1;
	cppVar_63015 = (cppVar_63015 & cppMask_un_16_);
	BIT_VEC cppVar_63016 = ROM.rd(cppVar_63015);
	bool cppVar_63018 = (cppVar_63016 == 131);
	BIT_VEC cppVar_63019 = PC + 1;
	cppVar_63019 = (cppVar_63019 & cppMask_un_16_);
	BIT_VEC cppVar_63020 = ROM.rd(cppVar_63019);
	bool cppVar_63022 = (cppVar_63020 == 135);
	BIT_VEC cppVar_63023 = PC + 1;
	cppVar_63023 = (cppVar_63023 & cppMask_un_16_);
	BIT_VEC cppVar_63024 = ROM.rd(cppVar_63023);
	bool cppVar_63026 = (cppVar_63024 == 136);
	BIT_VEC cppVar_63027 = PC + 1;
	cppVar_63027 = (cppVar_63027 & cppMask_un_16_);
	BIT_VEC cppVar_63028 = ROM.rd(cppVar_63027);
	bool cppVar_63030 = (cppVar_63028 == 137);
	BIT_VEC cppVar_63031 = PC + 1;
	cppVar_63031 = (cppVar_63031 & cppMask_un_16_);
	BIT_VEC cppVar_63032 = ROM.rd(cppVar_63031);
	bool cppVar_63034 = (cppVar_63032 == 138);
	BIT_VEC cppVar_63035 = PC + 1;
	cppVar_63035 = (cppVar_63035 & cppMask_un_16_);
	BIT_VEC cppVar_63036 = ROM.rd(cppVar_63035);
	bool cppVar_63038 = (cppVar_63036 == 140);
	BIT_VEC cppVar_63039 = PC + 1;
	cppVar_63039 = (cppVar_63039 & cppMask_un_16_);
	BIT_VEC cppVar_63040 = ROM.rd(cppVar_63039);
	bool cppVar_63042 = (cppVar_63040 == 139);
	BIT_VEC cppVar_63043 = PC + 1;
	cppVar_63043 = (cppVar_63043 & cppMask_un_16_);
	BIT_VEC cppVar_63044 = ROM.rd(cppVar_63043);
	bool cppVar_63046 = (cppVar_63044 == 141);
	BIT_VEC cppVar_63047 = PC + 1;
	cppVar_63047 = (cppVar_63047 & cppMask_un_16_);
	BIT_VEC cppVar_63048 = ROM.rd(cppVar_63047);
	bool cppVar_63050 = (cppVar_63048 == 144);
	BIT_VEC cppVar_63051 = PC + 1;
	cppVar_63051 = (cppVar_63051 & cppMask_un_16_);
	BIT_VEC cppVar_63052 = ROM.rd(cppVar_63051);
	bool cppVar_63054 = (cppVar_63052 == 152);
	BIT_VEC cppVar_63055 = PC + 1;
	cppVar_63055 = (cppVar_63055 & cppMask_un_16_);
	BIT_VEC cppVar_63056 = ROM.rd(cppVar_63055);
	bool cppVar_63058 = (cppVar_63056 == 153);
	BIT_VEC cppVar_63059 = PC + 1;
	cppVar_63059 = (cppVar_63059 & cppMask_un_16_);
	BIT_VEC cppVar_63060 = ROM.rd(cppVar_63059);
	bool cppVar_63062 = (cppVar_63060 == 160);
	BIT_VEC cppVar_63063 = PC + 1;
	cppVar_63063 = (cppVar_63063 & cppMask_un_16_);
	BIT_VEC cppVar_63064 = ROM.rd(cppVar_63063);
	bool cppVar_63066 = (cppVar_63064 == 168);
	BIT_VEC cppVar_63067 = PC + 1;
	cppVar_63067 = (cppVar_63067 & cppMask_un_16_);
	BIT_VEC cppVar_63068 = ROM.rd(cppVar_63067);
	bool cppVar_63070 = (cppVar_63068 == 176);
	BIT_VEC cppVar_63071 = PC + 1;
	cppVar_63071 = (cppVar_63071 & cppMask_un_16_);
	BIT_VEC cppVar_63072 = ROM.rd(cppVar_63071);
	bool cppVar_63074 = (cppVar_63072 == 184);
	BIT_VEC cppVar_63075 = PC + 1;
	cppVar_63075 = (cppVar_63075 & cppMask_un_16_);
	BIT_VEC cppVar_63076 = ROM.rd(cppVar_63075);
	bool cppVar_63078 = (cppVar_63076 == 208);
	BIT_VEC cppVar_63079 = PC + 1;
	cppVar_63079 = (cppVar_63079 & cppMask_un_16_);
	BIT_VEC cppVar_63080 = ROM.rd(cppVar_63079);
	bool cppVar_63082 = (cppVar_63080 == 224);
	BIT_VEC cppVar_63083 = PC + 1;
	cppVar_63083 = (cppVar_63083 & cppMask_un_16_);
	BIT_VEC cppVar_63084 = ROM.rd(cppVar_63083);
	bool cppVar_63086 = (cppVar_63084 == 240);
	BIT_VEC cppVar_63088 = (cppVar_63086) ? B : 0;
	BIT_VEC cppVar_63089 = (cppVar_63082) ? ACC : cppVar_63088;
	BIT_VEC cppVar_63090 = (cppVar_63078) ? PSW : cppVar_63089;
	BIT_VEC cppVar_63091 = (cppVar_63074) ? IP : cppVar_63090;
	BIT_VEC cppVar_63092 = (cppVar_63070) ? P3 : cppVar_63091;
	BIT_VEC cppVar_63093 = (cppVar_63066) ? IE : cppVar_63092;
	BIT_VEC cppVar_63094 = (cppVar_63062) ? P2 : cppVar_63093;
	BIT_VEC cppVar_63095 = (cppVar_63058) ? SBUF : cppVar_63094;
	BIT_VEC cppVar_63096 = (cppVar_63054) ? SCON : cppVar_63095;
	BIT_VEC cppVar_63097 = (cppVar_63050) ? P1 : cppVar_63096;
	BIT_VEC cppVar_63098 = (cppVar_63046) ? TH1 : cppVar_63097;
	BIT_VEC cppVar_63099 = (cppVar_63042) ? TL1 : cppVar_63098;
	BIT_VEC cppVar_63100 = (cppVar_63038) ? TH0 : cppVar_63099;
	BIT_VEC cppVar_63101 = (cppVar_63034) ? TL0 : cppVar_63100;
	BIT_VEC cppVar_63102 = (cppVar_63030) ? TMOD : cppVar_63101;
	BIT_VEC cppVar_63103 = (cppVar_63026) ? TCON : cppVar_63102;
	BIT_VEC cppVar_63104 = (cppVar_63022) ? PCON : cppVar_63103;
	BIT_VEC cppVar_63105 = (cppVar_63018) ? DPH : cppVar_63104;
	BIT_VEC cppVar_63106 = (cppVar_63014) ? DPL : cppVar_63105;
	BIT_VEC cppVar_63107 = (cppVar_63010) ? SP : cppVar_63106;
	BIT_VEC cppVar_63108 = (cppVar_63006) ? P0 : cppVar_63107;
	BIT_VEC cppVar_63109 = (cppVar_62999) ? cppVar_63002 : cppVar_63108;
	BIT_VEC cppVar_63110 = cppVar_63109 & ACC;
	BIT_VEC cppVar_63111 = (cppVar_62994) ? cppVar_63110 : SCON;
	BIT_VEC cppVar_63112 = ROM.rd(PC);
	bool cppVar_63114 = (cppVar_63112 == 67);
	BIT_VEC cppVar_63116 = PC + 1;
	cppVar_63116 = (cppVar_63116 & cppMask_un_16_);
	BIT_VEC cppVar_63117 = ROM.rd(cppVar_63116);
	bool cppVar_63119 = (cppVar_63117 == 152);
	BIT_VEC cppVar_63120 = PC + 1;
	cppVar_63120 = (cppVar_63120 & cppMask_un_16_);
	BIT_VEC cppVar_63121 = ROM.rd(cppVar_63120);
	BIT_VEC cppVar_63122 = (cppVar_63121 >> 7) & cppMask_un_1_;
	bool cppVar_63124 = (cppVar_63122 == 0);
	BIT_VEC cppVar_63125 = PC + 1;
	cppVar_63125 = (cppVar_63125 & cppMask_un_16_);
	BIT_VEC cppVar_63126 = ROM.rd(cppVar_63125);
	BIT_VEC cppVar_63127 = IRAM.rd(cppVar_63126);
	BIT_VEC cppVar_63128 = PC + 1;
	cppVar_63128 = (cppVar_63128 & cppMask_un_16_);
	BIT_VEC cppVar_63129 = ROM.rd(cppVar_63128);
	bool cppVar_63131 = (cppVar_63129 == 128);
	BIT_VEC cppVar_63132 = PC + 1;
	cppVar_63132 = (cppVar_63132 & cppMask_un_16_);
	BIT_VEC cppVar_63133 = ROM.rd(cppVar_63132);
	bool cppVar_63135 = (cppVar_63133 == 129);
	BIT_VEC cppVar_63136 = PC + 1;
	cppVar_63136 = (cppVar_63136 & cppMask_un_16_);
	BIT_VEC cppVar_63137 = ROM.rd(cppVar_63136);
	bool cppVar_63139 = (cppVar_63137 == 130);
	BIT_VEC cppVar_63140 = PC + 1;
	cppVar_63140 = (cppVar_63140 & cppMask_un_16_);
	BIT_VEC cppVar_63141 = ROM.rd(cppVar_63140);
	bool cppVar_63143 = (cppVar_63141 == 131);
	BIT_VEC cppVar_63144 = PC + 1;
	cppVar_63144 = (cppVar_63144 & cppMask_un_16_);
	BIT_VEC cppVar_63145 = ROM.rd(cppVar_63144);
	bool cppVar_63147 = (cppVar_63145 == 135);
	BIT_VEC cppVar_63148 = PC + 1;
	cppVar_63148 = (cppVar_63148 & cppMask_un_16_);
	BIT_VEC cppVar_63149 = ROM.rd(cppVar_63148);
	bool cppVar_63151 = (cppVar_63149 == 136);
	BIT_VEC cppVar_63152 = PC + 1;
	cppVar_63152 = (cppVar_63152 & cppMask_un_16_);
	BIT_VEC cppVar_63153 = ROM.rd(cppVar_63152);
	bool cppVar_63155 = (cppVar_63153 == 137);
	BIT_VEC cppVar_63156 = PC + 1;
	cppVar_63156 = (cppVar_63156 & cppMask_un_16_);
	BIT_VEC cppVar_63157 = ROM.rd(cppVar_63156);
	bool cppVar_63159 = (cppVar_63157 == 138);
	BIT_VEC cppVar_63160 = PC + 1;
	cppVar_63160 = (cppVar_63160 & cppMask_un_16_);
	BIT_VEC cppVar_63161 = ROM.rd(cppVar_63160);
	bool cppVar_63163 = (cppVar_63161 == 140);
	BIT_VEC cppVar_63164 = PC + 1;
	cppVar_63164 = (cppVar_63164 & cppMask_un_16_);
	BIT_VEC cppVar_63165 = ROM.rd(cppVar_63164);
	bool cppVar_63167 = (cppVar_63165 == 139);
	BIT_VEC cppVar_63168 = PC + 1;
	cppVar_63168 = (cppVar_63168 & cppMask_un_16_);
	BIT_VEC cppVar_63169 = ROM.rd(cppVar_63168);
	bool cppVar_63171 = (cppVar_63169 == 141);
	BIT_VEC cppVar_63172 = PC + 1;
	cppVar_63172 = (cppVar_63172 & cppMask_un_16_);
	BIT_VEC cppVar_63173 = ROM.rd(cppVar_63172);
	bool cppVar_63175 = (cppVar_63173 == 144);
	BIT_VEC cppVar_63176 = PC + 1;
	cppVar_63176 = (cppVar_63176 & cppMask_un_16_);
	BIT_VEC cppVar_63177 = ROM.rd(cppVar_63176);
	bool cppVar_63179 = (cppVar_63177 == 152);
	BIT_VEC cppVar_63180 = PC + 1;
	cppVar_63180 = (cppVar_63180 & cppMask_un_16_);
	BIT_VEC cppVar_63181 = ROM.rd(cppVar_63180);
	bool cppVar_63183 = (cppVar_63181 == 153);
	BIT_VEC cppVar_63184 = PC + 1;
	cppVar_63184 = (cppVar_63184 & cppMask_un_16_);
	BIT_VEC cppVar_63185 = ROM.rd(cppVar_63184);
	bool cppVar_63187 = (cppVar_63185 == 160);
	BIT_VEC cppVar_63188 = PC + 1;
	cppVar_63188 = (cppVar_63188 & cppMask_un_16_);
	BIT_VEC cppVar_63189 = ROM.rd(cppVar_63188);
	bool cppVar_63191 = (cppVar_63189 == 168);
	BIT_VEC cppVar_63192 = PC + 1;
	cppVar_63192 = (cppVar_63192 & cppMask_un_16_);
	BIT_VEC cppVar_63193 = ROM.rd(cppVar_63192);
	bool cppVar_63195 = (cppVar_63193 == 176);
	BIT_VEC cppVar_63196 = PC + 1;
	cppVar_63196 = (cppVar_63196 & cppMask_un_16_);
	BIT_VEC cppVar_63197 = ROM.rd(cppVar_63196);
	bool cppVar_63199 = (cppVar_63197 == 184);
	BIT_VEC cppVar_63200 = PC + 1;
	cppVar_63200 = (cppVar_63200 & cppMask_un_16_);
	BIT_VEC cppVar_63201 = ROM.rd(cppVar_63200);
	bool cppVar_63203 = (cppVar_63201 == 208);
	BIT_VEC cppVar_63204 = PC + 1;
	cppVar_63204 = (cppVar_63204 & cppMask_un_16_);
	BIT_VEC cppVar_63205 = ROM.rd(cppVar_63204);
	bool cppVar_63207 = (cppVar_63205 == 224);
	BIT_VEC cppVar_63208 = PC + 1;
	cppVar_63208 = (cppVar_63208 & cppMask_un_16_);
	BIT_VEC cppVar_63209 = ROM.rd(cppVar_63208);
	bool cppVar_63211 = (cppVar_63209 == 240);
	BIT_VEC cppVar_63213 = (cppVar_63211) ? B : 0;
	BIT_VEC cppVar_63214 = (cppVar_63207) ? ACC : cppVar_63213;
	BIT_VEC cppVar_63215 = (cppVar_63203) ? PSW : cppVar_63214;
	BIT_VEC cppVar_63216 = (cppVar_63199) ? IP : cppVar_63215;
	BIT_VEC cppVar_63217 = (cppVar_63195) ? P3 : cppVar_63216;
	BIT_VEC cppVar_63218 = (cppVar_63191) ? IE : cppVar_63217;
	BIT_VEC cppVar_63219 = (cppVar_63187) ? P2 : cppVar_63218;
	BIT_VEC cppVar_63220 = (cppVar_63183) ? SBUF : cppVar_63219;
	BIT_VEC cppVar_63221 = (cppVar_63179) ? SCON : cppVar_63220;
	BIT_VEC cppVar_63222 = (cppVar_63175) ? P1 : cppVar_63221;
	BIT_VEC cppVar_63223 = (cppVar_63171) ? TH1 : cppVar_63222;
	BIT_VEC cppVar_63224 = (cppVar_63167) ? TL1 : cppVar_63223;
	BIT_VEC cppVar_63225 = (cppVar_63163) ? TH0 : cppVar_63224;
	BIT_VEC cppVar_63226 = (cppVar_63159) ? TL0 : cppVar_63225;
	BIT_VEC cppVar_63227 = (cppVar_63155) ? TMOD : cppVar_63226;
	BIT_VEC cppVar_63228 = (cppVar_63151) ? TCON : cppVar_63227;
	BIT_VEC cppVar_63229 = (cppVar_63147) ? PCON : cppVar_63228;
	BIT_VEC cppVar_63230 = (cppVar_63143) ? DPH : cppVar_63229;
	BIT_VEC cppVar_63231 = (cppVar_63139) ? DPL : cppVar_63230;
	BIT_VEC cppVar_63232 = (cppVar_63135) ? SP : cppVar_63231;
	BIT_VEC cppVar_63233 = (cppVar_63131) ? P0 : cppVar_63232;
	BIT_VEC cppVar_63234 = (cppVar_63124) ? cppVar_63127 : cppVar_63233;
	BIT_VEC cppVar_63236 = PC + 2;
	cppVar_63236 = (cppVar_63236 & cppMask_un_16_);
	BIT_VEC cppVar_63237 = ROM.rd(cppVar_63236);
	BIT_VEC cppVar_63238 = cppVar_63234 | cppVar_63237;
	BIT_VEC cppVar_63239 = (cppVar_63119) ? cppVar_63238 : SCON;
	BIT_VEC cppVar_63240 = ROM.rd(PC);
	bool cppVar_63242 = (cppVar_63240 == 66);
	BIT_VEC cppVar_63244 = PC + 1;
	cppVar_63244 = (cppVar_63244 & cppMask_un_16_);
	BIT_VEC cppVar_63245 = ROM.rd(cppVar_63244);
	bool cppVar_63247 = (cppVar_63245 == 152);
	BIT_VEC cppVar_63248 = PC + 1;
	cppVar_63248 = (cppVar_63248 & cppMask_un_16_);
	BIT_VEC cppVar_63249 = ROM.rd(cppVar_63248);
	BIT_VEC cppVar_63250 = (cppVar_63249 >> 7) & cppMask_un_1_;
	bool cppVar_63252 = (cppVar_63250 == 0);
	BIT_VEC cppVar_63253 = PC + 1;
	cppVar_63253 = (cppVar_63253 & cppMask_un_16_);
	BIT_VEC cppVar_63254 = ROM.rd(cppVar_63253);
	BIT_VEC cppVar_63255 = IRAM.rd(cppVar_63254);
	BIT_VEC cppVar_63256 = PC + 1;
	cppVar_63256 = (cppVar_63256 & cppMask_un_16_);
	BIT_VEC cppVar_63257 = ROM.rd(cppVar_63256);
	bool cppVar_63259 = (cppVar_63257 == 128);
	BIT_VEC cppVar_63260 = PC + 1;
	cppVar_63260 = (cppVar_63260 & cppMask_un_16_);
	BIT_VEC cppVar_63261 = ROM.rd(cppVar_63260);
	bool cppVar_63263 = (cppVar_63261 == 129);
	BIT_VEC cppVar_63264 = PC + 1;
	cppVar_63264 = (cppVar_63264 & cppMask_un_16_);
	BIT_VEC cppVar_63265 = ROM.rd(cppVar_63264);
	bool cppVar_63267 = (cppVar_63265 == 130);
	BIT_VEC cppVar_63268 = PC + 1;
	cppVar_63268 = (cppVar_63268 & cppMask_un_16_);
	BIT_VEC cppVar_63269 = ROM.rd(cppVar_63268);
	bool cppVar_63271 = (cppVar_63269 == 131);
	BIT_VEC cppVar_63272 = PC + 1;
	cppVar_63272 = (cppVar_63272 & cppMask_un_16_);
	BIT_VEC cppVar_63273 = ROM.rd(cppVar_63272);
	bool cppVar_63275 = (cppVar_63273 == 135);
	BIT_VEC cppVar_63276 = PC + 1;
	cppVar_63276 = (cppVar_63276 & cppMask_un_16_);
	BIT_VEC cppVar_63277 = ROM.rd(cppVar_63276);
	bool cppVar_63279 = (cppVar_63277 == 136);
	BIT_VEC cppVar_63280 = PC + 1;
	cppVar_63280 = (cppVar_63280 & cppMask_un_16_);
	BIT_VEC cppVar_63281 = ROM.rd(cppVar_63280);
	bool cppVar_63283 = (cppVar_63281 == 137);
	BIT_VEC cppVar_63284 = PC + 1;
	cppVar_63284 = (cppVar_63284 & cppMask_un_16_);
	BIT_VEC cppVar_63285 = ROM.rd(cppVar_63284);
	bool cppVar_63287 = (cppVar_63285 == 138);
	BIT_VEC cppVar_63288 = PC + 1;
	cppVar_63288 = (cppVar_63288 & cppMask_un_16_);
	BIT_VEC cppVar_63289 = ROM.rd(cppVar_63288);
	bool cppVar_63291 = (cppVar_63289 == 140);
	BIT_VEC cppVar_63292 = PC + 1;
	cppVar_63292 = (cppVar_63292 & cppMask_un_16_);
	BIT_VEC cppVar_63293 = ROM.rd(cppVar_63292);
	bool cppVar_63295 = (cppVar_63293 == 139);
	BIT_VEC cppVar_63296 = PC + 1;
	cppVar_63296 = (cppVar_63296 & cppMask_un_16_);
	BIT_VEC cppVar_63297 = ROM.rd(cppVar_63296);
	bool cppVar_63299 = (cppVar_63297 == 141);
	BIT_VEC cppVar_63300 = PC + 1;
	cppVar_63300 = (cppVar_63300 & cppMask_un_16_);
	BIT_VEC cppVar_63301 = ROM.rd(cppVar_63300);
	bool cppVar_63303 = (cppVar_63301 == 144);
	BIT_VEC cppVar_63304 = PC + 1;
	cppVar_63304 = (cppVar_63304 & cppMask_un_16_);
	BIT_VEC cppVar_63305 = ROM.rd(cppVar_63304);
	bool cppVar_63307 = (cppVar_63305 == 152);
	BIT_VEC cppVar_63308 = PC + 1;
	cppVar_63308 = (cppVar_63308 & cppMask_un_16_);
	BIT_VEC cppVar_63309 = ROM.rd(cppVar_63308);
	bool cppVar_63311 = (cppVar_63309 == 153);
	BIT_VEC cppVar_63312 = PC + 1;
	cppVar_63312 = (cppVar_63312 & cppMask_un_16_);
	BIT_VEC cppVar_63313 = ROM.rd(cppVar_63312);
	bool cppVar_63315 = (cppVar_63313 == 160);
	BIT_VEC cppVar_63316 = PC + 1;
	cppVar_63316 = (cppVar_63316 & cppMask_un_16_);
	BIT_VEC cppVar_63317 = ROM.rd(cppVar_63316);
	bool cppVar_63319 = (cppVar_63317 == 168);
	BIT_VEC cppVar_63320 = PC + 1;
	cppVar_63320 = (cppVar_63320 & cppMask_un_16_);
	BIT_VEC cppVar_63321 = ROM.rd(cppVar_63320);
	bool cppVar_63323 = (cppVar_63321 == 176);
	BIT_VEC cppVar_63324 = PC + 1;
	cppVar_63324 = (cppVar_63324 & cppMask_un_16_);
	BIT_VEC cppVar_63325 = ROM.rd(cppVar_63324);
	bool cppVar_63327 = (cppVar_63325 == 184);
	BIT_VEC cppVar_63328 = PC + 1;
	cppVar_63328 = (cppVar_63328 & cppMask_un_16_);
	BIT_VEC cppVar_63329 = ROM.rd(cppVar_63328);
	bool cppVar_63331 = (cppVar_63329 == 208);
	BIT_VEC cppVar_63332 = PC + 1;
	cppVar_63332 = (cppVar_63332 & cppMask_un_16_);
	BIT_VEC cppVar_63333 = ROM.rd(cppVar_63332);
	bool cppVar_63335 = (cppVar_63333 == 224);
	BIT_VEC cppVar_63336 = PC + 1;
	cppVar_63336 = (cppVar_63336 & cppMask_un_16_);
	BIT_VEC cppVar_63337 = ROM.rd(cppVar_63336);
	bool cppVar_63339 = (cppVar_63337 == 240);
	BIT_VEC cppVar_63341 = (cppVar_63339) ? B : 0;
	BIT_VEC cppVar_63342 = (cppVar_63335) ? ACC : cppVar_63341;
	BIT_VEC cppVar_63343 = (cppVar_63331) ? PSW : cppVar_63342;
	BIT_VEC cppVar_63344 = (cppVar_63327) ? IP : cppVar_63343;
	BIT_VEC cppVar_63345 = (cppVar_63323) ? P3 : cppVar_63344;
	BIT_VEC cppVar_63346 = (cppVar_63319) ? IE : cppVar_63345;
	BIT_VEC cppVar_63347 = (cppVar_63315) ? P2 : cppVar_63346;
	BIT_VEC cppVar_63348 = (cppVar_63311) ? SBUF : cppVar_63347;
	BIT_VEC cppVar_63349 = (cppVar_63307) ? SCON : cppVar_63348;
	BIT_VEC cppVar_63350 = (cppVar_63303) ? P1 : cppVar_63349;
	BIT_VEC cppVar_63351 = (cppVar_63299) ? TH1 : cppVar_63350;
	BIT_VEC cppVar_63352 = (cppVar_63295) ? TL1 : cppVar_63351;
	BIT_VEC cppVar_63353 = (cppVar_63291) ? TH0 : cppVar_63352;
	BIT_VEC cppVar_63354 = (cppVar_63287) ? TL0 : cppVar_63353;
	BIT_VEC cppVar_63355 = (cppVar_63283) ? TMOD : cppVar_63354;
	BIT_VEC cppVar_63356 = (cppVar_63279) ? TCON : cppVar_63355;
	BIT_VEC cppVar_63357 = (cppVar_63275) ? PCON : cppVar_63356;
	BIT_VEC cppVar_63358 = (cppVar_63271) ? DPH : cppVar_63357;
	BIT_VEC cppVar_63359 = (cppVar_63267) ? DPL : cppVar_63358;
	BIT_VEC cppVar_63360 = (cppVar_63263) ? SP : cppVar_63359;
	BIT_VEC cppVar_63361 = (cppVar_63259) ? P0 : cppVar_63360;
	BIT_VEC cppVar_63362 = (cppVar_63252) ? cppVar_63255 : cppVar_63361;
	BIT_VEC cppVar_63363 = cppVar_63362 | ACC;
	BIT_VEC cppVar_63364 = (cppVar_63247) ? cppVar_63363 : SCON;
	BIT_VEC cppVar_63365 = ROM.rd(PC);
	bool cppVar_63367 = (cppVar_63365 == 213);
	BIT_VEC cppVar_63368 = ROM.rd(PC);
	bool cppVar_63370 = (cppVar_63368 == 21);
	bool cppVar_63371 = cppVar_63367 || cppVar_63370;
	BIT_VEC cppVar_63373 = PC + 1;
	cppVar_63373 = (cppVar_63373 & cppMask_un_16_);
	BIT_VEC cppVar_63374 = ROM.rd(cppVar_63373);
	bool cppVar_63376 = (cppVar_63374 == 152);
	BIT_VEC cppVar_63377 = PC + 1;
	cppVar_63377 = (cppVar_63377 & cppMask_un_16_);
	BIT_VEC cppVar_63378 = ROM.rd(cppVar_63377);
	BIT_VEC cppVar_63379 = (cppVar_63378 >> 7) & cppMask_un_1_;
	bool cppVar_63381 = (cppVar_63379 == 0);
	BIT_VEC cppVar_63382 = PC + 1;
	cppVar_63382 = (cppVar_63382 & cppMask_un_16_);
	BIT_VEC cppVar_63383 = ROM.rd(cppVar_63382);
	BIT_VEC cppVar_63384 = IRAM.rd(cppVar_63383);
	BIT_VEC cppVar_63385 = PC + 1;
	cppVar_63385 = (cppVar_63385 & cppMask_un_16_);
	BIT_VEC cppVar_63386 = ROM.rd(cppVar_63385);
	bool cppVar_63388 = (cppVar_63386 == 128);
	BIT_VEC cppVar_63389 = PC + 1;
	cppVar_63389 = (cppVar_63389 & cppMask_un_16_);
	BIT_VEC cppVar_63390 = ROM.rd(cppVar_63389);
	bool cppVar_63392 = (cppVar_63390 == 129);
	BIT_VEC cppVar_63393 = PC + 1;
	cppVar_63393 = (cppVar_63393 & cppMask_un_16_);
	BIT_VEC cppVar_63394 = ROM.rd(cppVar_63393);
	bool cppVar_63396 = (cppVar_63394 == 130);
	BIT_VEC cppVar_63397 = PC + 1;
	cppVar_63397 = (cppVar_63397 & cppMask_un_16_);
	BIT_VEC cppVar_63398 = ROM.rd(cppVar_63397);
	bool cppVar_63400 = (cppVar_63398 == 131);
	BIT_VEC cppVar_63401 = PC + 1;
	cppVar_63401 = (cppVar_63401 & cppMask_un_16_);
	BIT_VEC cppVar_63402 = ROM.rd(cppVar_63401);
	bool cppVar_63404 = (cppVar_63402 == 135);
	BIT_VEC cppVar_63405 = PC + 1;
	cppVar_63405 = (cppVar_63405 & cppMask_un_16_);
	BIT_VEC cppVar_63406 = ROM.rd(cppVar_63405);
	bool cppVar_63408 = (cppVar_63406 == 136);
	BIT_VEC cppVar_63409 = PC + 1;
	cppVar_63409 = (cppVar_63409 & cppMask_un_16_);
	BIT_VEC cppVar_63410 = ROM.rd(cppVar_63409);
	bool cppVar_63412 = (cppVar_63410 == 137);
	BIT_VEC cppVar_63413 = PC + 1;
	cppVar_63413 = (cppVar_63413 & cppMask_un_16_);
	BIT_VEC cppVar_63414 = ROM.rd(cppVar_63413);
	bool cppVar_63416 = (cppVar_63414 == 138);
	BIT_VEC cppVar_63417 = PC + 1;
	cppVar_63417 = (cppVar_63417 & cppMask_un_16_);
	BIT_VEC cppVar_63418 = ROM.rd(cppVar_63417);
	bool cppVar_63420 = (cppVar_63418 == 140);
	BIT_VEC cppVar_63421 = PC + 1;
	cppVar_63421 = (cppVar_63421 & cppMask_un_16_);
	BIT_VEC cppVar_63422 = ROM.rd(cppVar_63421);
	bool cppVar_63424 = (cppVar_63422 == 139);
	BIT_VEC cppVar_63425 = PC + 1;
	cppVar_63425 = (cppVar_63425 & cppMask_un_16_);
	BIT_VEC cppVar_63426 = ROM.rd(cppVar_63425);
	bool cppVar_63428 = (cppVar_63426 == 141);
	BIT_VEC cppVar_63429 = PC + 1;
	cppVar_63429 = (cppVar_63429 & cppMask_un_16_);
	BIT_VEC cppVar_63430 = ROM.rd(cppVar_63429);
	bool cppVar_63432 = (cppVar_63430 == 144);
	BIT_VEC cppVar_63433 = PC + 1;
	cppVar_63433 = (cppVar_63433 & cppMask_un_16_);
	BIT_VEC cppVar_63434 = ROM.rd(cppVar_63433);
	bool cppVar_63436 = (cppVar_63434 == 152);
	BIT_VEC cppVar_63437 = PC + 1;
	cppVar_63437 = (cppVar_63437 & cppMask_un_16_);
	BIT_VEC cppVar_63438 = ROM.rd(cppVar_63437);
	bool cppVar_63440 = (cppVar_63438 == 153);
	BIT_VEC cppVar_63441 = PC + 1;
	cppVar_63441 = (cppVar_63441 & cppMask_un_16_);
	BIT_VEC cppVar_63442 = ROM.rd(cppVar_63441);
	bool cppVar_63444 = (cppVar_63442 == 160);
	BIT_VEC cppVar_63445 = PC + 1;
	cppVar_63445 = (cppVar_63445 & cppMask_un_16_);
	BIT_VEC cppVar_63446 = ROM.rd(cppVar_63445);
	bool cppVar_63448 = (cppVar_63446 == 168);
	BIT_VEC cppVar_63449 = PC + 1;
	cppVar_63449 = (cppVar_63449 & cppMask_un_16_);
	BIT_VEC cppVar_63450 = ROM.rd(cppVar_63449);
	bool cppVar_63452 = (cppVar_63450 == 176);
	BIT_VEC cppVar_63453 = PC + 1;
	cppVar_63453 = (cppVar_63453 & cppMask_un_16_);
	BIT_VEC cppVar_63454 = ROM.rd(cppVar_63453);
	bool cppVar_63456 = (cppVar_63454 == 184);
	BIT_VEC cppVar_63457 = PC + 1;
	cppVar_63457 = (cppVar_63457 & cppMask_un_16_);
	BIT_VEC cppVar_63458 = ROM.rd(cppVar_63457);
	bool cppVar_63460 = (cppVar_63458 == 208);
	BIT_VEC cppVar_63461 = PC + 1;
	cppVar_63461 = (cppVar_63461 & cppMask_un_16_);
	BIT_VEC cppVar_63462 = ROM.rd(cppVar_63461);
	bool cppVar_63464 = (cppVar_63462 == 224);
	BIT_VEC cppVar_63465 = PC + 1;
	cppVar_63465 = (cppVar_63465 & cppMask_un_16_);
	BIT_VEC cppVar_63466 = ROM.rd(cppVar_63465);
	bool cppVar_63468 = (cppVar_63466 == 240);
	BIT_VEC cppVar_63470 = (cppVar_63468) ? B : 0;
	BIT_VEC cppVar_63471 = (cppVar_63464) ? ACC : cppVar_63470;
	BIT_VEC cppVar_63472 = (cppVar_63460) ? PSW : cppVar_63471;
	BIT_VEC cppVar_63473 = (cppVar_63456) ? IP : cppVar_63472;
	BIT_VEC cppVar_63474 = (cppVar_63452) ? P3 : cppVar_63473;
	BIT_VEC cppVar_63475 = (cppVar_63448) ? IE : cppVar_63474;
	BIT_VEC cppVar_63476 = (cppVar_63444) ? P2 : cppVar_63475;
	BIT_VEC cppVar_63477 = (cppVar_63440) ? SBUF : cppVar_63476;
	BIT_VEC cppVar_63478 = (cppVar_63436) ? SCON : cppVar_63477;
	BIT_VEC cppVar_63479 = (cppVar_63432) ? P1 : cppVar_63478;
	BIT_VEC cppVar_63480 = (cppVar_63428) ? TH1 : cppVar_63479;
	BIT_VEC cppVar_63481 = (cppVar_63424) ? TL1 : cppVar_63480;
	BIT_VEC cppVar_63482 = (cppVar_63420) ? TH0 : cppVar_63481;
	BIT_VEC cppVar_63483 = (cppVar_63416) ? TL0 : cppVar_63482;
	BIT_VEC cppVar_63484 = (cppVar_63412) ? TMOD : cppVar_63483;
	BIT_VEC cppVar_63485 = (cppVar_63408) ? TCON : cppVar_63484;
	BIT_VEC cppVar_63486 = (cppVar_63404) ? PCON : cppVar_63485;
	BIT_VEC cppVar_63487 = (cppVar_63400) ? DPH : cppVar_63486;
	BIT_VEC cppVar_63488 = (cppVar_63396) ? DPL : cppVar_63487;
	BIT_VEC cppVar_63489 = (cppVar_63392) ? SP : cppVar_63488;
	BIT_VEC cppVar_63490 = (cppVar_63388) ? P0 : cppVar_63489;
	BIT_VEC cppVar_63491 = (cppVar_63381) ? cppVar_63384 : cppVar_63490;
	BIT_VEC cppVar_63493 = cppVar_63491 - 1;
	cppVar_63493 = (cppVar_63493 & cppMask_un_8_);
	BIT_VEC cppVar_63494 = (cppVar_63376) ? cppVar_63493 : SCON;
	BIT_VEC cppVar_63495 = ROM.rd(PC);
	bool cppVar_63497 = (cppVar_63495 == 194);
	BIT_VEC cppVar_63498 = ROM.rd(PC);
	bool cppVar_63500 = (cppVar_63498 == 16);
	bool cppVar_63501 = cppVar_63497 || cppVar_63500;
	BIT_VEC cppVar_63503 = PC + 1;
	cppVar_63503 = (cppVar_63503 & cppMask_un_16_);
	BIT_VEC cppVar_63504 = ROM.rd(cppVar_63503);
	BIT_VEC cppVar_63505 = (cppVar_63504 >> 7) & cppMask_un_1_;
	bool cppVar_63507 = (cppVar_63505 == 1);
	BIT_VEC cppVar_63508 = PC + 1;
	cppVar_63508 = (cppVar_63508 & cppMask_un_16_);
	BIT_VEC cppVar_63509 = ROM.rd(cppVar_63508);
	BIT_VEC cppVar_63510 = (cppVar_63509 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63512 = (cppVar_63510 << 3) | 0;
	cppVar_63512 = (cppVar_63512 & cppMask_un_8_);
	BIT_VEC cppVar_63513 = PC + 1;
	cppVar_63513 = (cppVar_63513 & cppMask_un_16_);
	BIT_VEC cppVar_63514 = ROM.rd(cppVar_63513);
	BIT_VEC cppVar_63515 = (cppVar_63514 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63516 = (cppVar_63515 & cppMask_un_5_);
	BIT_VEC cppVar_63518 = cppVar_63516 + 32;
	cppVar_63518 = (cppVar_63518 & cppMask_un_8_);
	BIT_VEC cppVar_63519 = (cppVar_63507) ? cppVar_63512 : cppVar_63518;
	bool cppVar_63521 = (cppVar_63519 == 152);
	BIT_VEC cppVar_63523 = PC + 1;
	cppVar_63523 = (cppVar_63523 & cppMask_un_16_);
	BIT_VEC cppVar_63524 = ROM.rd(cppVar_63523);
	BIT_VEC cppVar_63525 = (cppVar_63524 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_63526 = (cppVar_63525 & cppMask_un_3_);
	BIT_VEC cppVar_63527 = 1 << static_cast<unsigned>(cppVar_63526);
	cppVar_63527 = (cppVar_63527 & cppMask_un_8_);
	BIT_VEC cppVar_63528 = ~cppVar_63527;
	BIT_VEC cppVar_63529 = PC + 1;
	cppVar_63529 = (cppVar_63529 & cppMask_un_16_);
	BIT_VEC cppVar_63530 = ROM.rd(cppVar_63529);
	BIT_VEC cppVar_63531 = (cppVar_63530 >> 7) & cppMask_un_1_;
	bool cppVar_63532 = (cppVar_63531 == 1);
	BIT_VEC cppVar_63533 = PC + 1;
	cppVar_63533 = (cppVar_63533 & cppMask_un_16_);
	BIT_VEC cppVar_63534 = ROM.rd(cppVar_63533);
	BIT_VEC cppVar_63535 = (cppVar_63534 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63536 = (cppVar_63535 << 3) | 0;
	cppVar_63536 = (cppVar_63536 & cppMask_un_8_);
	BIT_VEC cppVar_63537 = PC + 1;
	cppVar_63537 = (cppVar_63537 & cppMask_un_16_);
	BIT_VEC cppVar_63538 = ROM.rd(cppVar_63537);
	BIT_VEC cppVar_63539 = (cppVar_63538 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63540 = (cppVar_63539 & cppMask_un_5_);
	BIT_VEC cppVar_63541 = cppVar_63540 + 32;
	cppVar_63541 = (cppVar_63541 & cppMask_un_8_);
	BIT_VEC cppVar_63542 = (cppVar_63532) ? cppVar_63536 : cppVar_63541;
	BIT_VEC cppVar_63543 = (cppVar_63542 >> 7) & cppMask_un_1_;
	bool cppVar_63545 = (cppVar_63543 == 0);
	BIT_VEC cppVar_63546 = PC + 1;
	cppVar_63546 = (cppVar_63546 & cppMask_un_16_);
	BIT_VEC cppVar_63547 = ROM.rd(cppVar_63546);
	BIT_VEC cppVar_63548 = (cppVar_63547 >> 7) & cppMask_un_1_;
	bool cppVar_63549 = (cppVar_63548 == 1);
	BIT_VEC cppVar_63550 = PC + 1;
	cppVar_63550 = (cppVar_63550 & cppMask_un_16_);
	BIT_VEC cppVar_63551 = ROM.rd(cppVar_63550);
	BIT_VEC cppVar_63552 = (cppVar_63551 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63553 = (cppVar_63552 << 3) | 0;
	cppVar_63553 = (cppVar_63553 & cppMask_un_8_);
	BIT_VEC cppVar_63554 = PC + 1;
	cppVar_63554 = (cppVar_63554 & cppMask_un_16_);
	BIT_VEC cppVar_63555 = ROM.rd(cppVar_63554);
	BIT_VEC cppVar_63556 = (cppVar_63555 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63557 = (cppVar_63556 & cppMask_un_5_);
	BIT_VEC cppVar_63558 = cppVar_63557 + 32;
	cppVar_63558 = (cppVar_63558 & cppMask_un_8_);
	BIT_VEC cppVar_63559 = (cppVar_63549) ? cppVar_63553 : cppVar_63558;
	BIT_VEC cppVar_63560 = IRAM.rd(cppVar_63559);
	BIT_VEC cppVar_63561 = PC + 1;
	cppVar_63561 = (cppVar_63561 & cppMask_un_16_);
	BIT_VEC cppVar_63562 = ROM.rd(cppVar_63561);
	BIT_VEC cppVar_63563 = (cppVar_63562 >> 7) & cppMask_un_1_;
	bool cppVar_63564 = (cppVar_63563 == 1);
	BIT_VEC cppVar_63565 = PC + 1;
	cppVar_63565 = (cppVar_63565 & cppMask_un_16_);
	BIT_VEC cppVar_63566 = ROM.rd(cppVar_63565);
	BIT_VEC cppVar_63567 = (cppVar_63566 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63568 = (cppVar_63567 << 3) | 0;
	cppVar_63568 = (cppVar_63568 & cppMask_un_8_);
	BIT_VEC cppVar_63569 = PC + 1;
	cppVar_63569 = (cppVar_63569 & cppMask_un_16_);
	BIT_VEC cppVar_63570 = ROM.rd(cppVar_63569);
	BIT_VEC cppVar_63571 = (cppVar_63570 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63572 = (cppVar_63571 & cppMask_un_5_);
	BIT_VEC cppVar_63573 = cppVar_63572 + 32;
	cppVar_63573 = (cppVar_63573 & cppMask_un_8_);
	BIT_VEC cppVar_63574 = (cppVar_63564) ? cppVar_63568 : cppVar_63573;
	bool cppVar_63576 = (cppVar_63574 == 128);
	BIT_VEC cppVar_63577 = PC + 1;
	cppVar_63577 = (cppVar_63577 & cppMask_un_16_);
	BIT_VEC cppVar_63578 = ROM.rd(cppVar_63577);
	BIT_VEC cppVar_63579 = (cppVar_63578 >> 7) & cppMask_un_1_;
	bool cppVar_63580 = (cppVar_63579 == 1);
	BIT_VEC cppVar_63581 = PC + 1;
	cppVar_63581 = (cppVar_63581 & cppMask_un_16_);
	BIT_VEC cppVar_63582 = ROM.rd(cppVar_63581);
	BIT_VEC cppVar_63583 = (cppVar_63582 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63584 = (cppVar_63583 << 3) | 0;
	cppVar_63584 = (cppVar_63584 & cppMask_un_8_);
	BIT_VEC cppVar_63585 = PC + 1;
	cppVar_63585 = (cppVar_63585 & cppMask_un_16_);
	BIT_VEC cppVar_63586 = ROM.rd(cppVar_63585);
	BIT_VEC cppVar_63587 = (cppVar_63586 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63588 = (cppVar_63587 & cppMask_un_5_);
	BIT_VEC cppVar_63589 = cppVar_63588 + 32;
	cppVar_63589 = (cppVar_63589 & cppMask_un_8_);
	BIT_VEC cppVar_63590 = (cppVar_63580) ? cppVar_63584 : cppVar_63589;
	bool cppVar_63592 = (cppVar_63590 == 129);
	BIT_VEC cppVar_63593 = PC + 1;
	cppVar_63593 = (cppVar_63593 & cppMask_un_16_);
	BIT_VEC cppVar_63594 = ROM.rd(cppVar_63593);
	BIT_VEC cppVar_63595 = (cppVar_63594 >> 7) & cppMask_un_1_;
	bool cppVar_63596 = (cppVar_63595 == 1);
	BIT_VEC cppVar_63597 = PC + 1;
	cppVar_63597 = (cppVar_63597 & cppMask_un_16_);
	BIT_VEC cppVar_63598 = ROM.rd(cppVar_63597);
	BIT_VEC cppVar_63599 = (cppVar_63598 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63600 = (cppVar_63599 << 3) | 0;
	cppVar_63600 = (cppVar_63600 & cppMask_un_8_);
	BIT_VEC cppVar_63601 = PC + 1;
	cppVar_63601 = (cppVar_63601 & cppMask_un_16_);
	BIT_VEC cppVar_63602 = ROM.rd(cppVar_63601);
	BIT_VEC cppVar_63603 = (cppVar_63602 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63604 = (cppVar_63603 & cppMask_un_5_);
	BIT_VEC cppVar_63605 = cppVar_63604 + 32;
	cppVar_63605 = (cppVar_63605 & cppMask_un_8_);
	BIT_VEC cppVar_63606 = (cppVar_63596) ? cppVar_63600 : cppVar_63605;
	bool cppVar_63608 = (cppVar_63606 == 130);
	BIT_VEC cppVar_63609 = PC + 1;
	cppVar_63609 = (cppVar_63609 & cppMask_un_16_);
	BIT_VEC cppVar_63610 = ROM.rd(cppVar_63609);
	BIT_VEC cppVar_63611 = (cppVar_63610 >> 7) & cppMask_un_1_;
	bool cppVar_63612 = (cppVar_63611 == 1);
	BIT_VEC cppVar_63613 = PC + 1;
	cppVar_63613 = (cppVar_63613 & cppMask_un_16_);
	BIT_VEC cppVar_63614 = ROM.rd(cppVar_63613);
	BIT_VEC cppVar_63615 = (cppVar_63614 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63616 = (cppVar_63615 << 3) | 0;
	cppVar_63616 = (cppVar_63616 & cppMask_un_8_);
	BIT_VEC cppVar_63617 = PC + 1;
	cppVar_63617 = (cppVar_63617 & cppMask_un_16_);
	BIT_VEC cppVar_63618 = ROM.rd(cppVar_63617);
	BIT_VEC cppVar_63619 = (cppVar_63618 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63620 = (cppVar_63619 & cppMask_un_5_);
	BIT_VEC cppVar_63621 = cppVar_63620 + 32;
	cppVar_63621 = (cppVar_63621 & cppMask_un_8_);
	BIT_VEC cppVar_63622 = (cppVar_63612) ? cppVar_63616 : cppVar_63621;
	bool cppVar_63624 = (cppVar_63622 == 131);
	BIT_VEC cppVar_63625 = PC + 1;
	cppVar_63625 = (cppVar_63625 & cppMask_un_16_);
	BIT_VEC cppVar_63626 = ROM.rd(cppVar_63625);
	BIT_VEC cppVar_63627 = (cppVar_63626 >> 7) & cppMask_un_1_;
	bool cppVar_63628 = (cppVar_63627 == 1);
	BIT_VEC cppVar_63629 = PC + 1;
	cppVar_63629 = (cppVar_63629 & cppMask_un_16_);
	BIT_VEC cppVar_63630 = ROM.rd(cppVar_63629);
	BIT_VEC cppVar_63631 = (cppVar_63630 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63632 = (cppVar_63631 << 3) | 0;
	cppVar_63632 = (cppVar_63632 & cppMask_un_8_);
	BIT_VEC cppVar_63633 = PC + 1;
	cppVar_63633 = (cppVar_63633 & cppMask_un_16_);
	BIT_VEC cppVar_63634 = ROM.rd(cppVar_63633);
	BIT_VEC cppVar_63635 = (cppVar_63634 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63636 = (cppVar_63635 & cppMask_un_5_);
	BIT_VEC cppVar_63637 = cppVar_63636 + 32;
	cppVar_63637 = (cppVar_63637 & cppMask_un_8_);
	BIT_VEC cppVar_63638 = (cppVar_63628) ? cppVar_63632 : cppVar_63637;
	bool cppVar_63640 = (cppVar_63638 == 135);
	BIT_VEC cppVar_63641 = PC + 1;
	cppVar_63641 = (cppVar_63641 & cppMask_un_16_);
	BIT_VEC cppVar_63642 = ROM.rd(cppVar_63641);
	BIT_VEC cppVar_63643 = (cppVar_63642 >> 7) & cppMask_un_1_;
	bool cppVar_63644 = (cppVar_63643 == 1);
	BIT_VEC cppVar_63645 = PC + 1;
	cppVar_63645 = (cppVar_63645 & cppMask_un_16_);
	BIT_VEC cppVar_63646 = ROM.rd(cppVar_63645);
	BIT_VEC cppVar_63647 = (cppVar_63646 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63648 = (cppVar_63647 << 3) | 0;
	cppVar_63648 = (cppVar_63648 & cppMask_un_8_);
	BIT_VEC cppVar_63649 = PC + 1;
	cppVar_63649 = (cppVar_63649 & cppMask_un_16_);
	BIT_VEC cppVar_63650 = ROM.rd(cppVar_63649);
	BIT_VEC cppVar_63651 = (cppVar_63650 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63652 = (cppVar_63651 & cppMask_un_5_);
	BIT_VEC cppVar_63653 = cppVar_63652 + 32;
	cppVar_63653 = (cppVar_63653 & cppMask_un_8_);
	BIT_VEC cppVar_63654 = (cppVar_63644) ? cppVar_63648 : cppVar_63653;
	bool cppVar_63656 = (cppVar_63654 == 136);
	BIT_VEC cppVar_63657 = PC + 1;
	cppVar_63657 = (cppVar_63657 & cppMask_un_16_);
	BIT_VEC cppVar_63658 = ROM.rd(cppVar_63657);
	BIT_VEC cppVar_63659 = (cppVar_63658 >> 7) & cppMask_un_1_;
	bool cppVar_63660 = (cppVar_63659 == 1);
	BIT_VEC cppVar_63661 = PC + 1;
	cppVar_63661 = (cppVar_63661 & cppMask_un_16_);
	BIT_VEC cppVar_63662 = ROM.rd(cppVar_63661);
	BIT_VEC cppVar_63663 = (cppVar_63662 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63664 = (cppVar_63663 << 3) | 0;
	cppVar_63664 = (cppVar_63664 & cppMask_un_8_);
	BIT_VEC cppVar_63665 = PC + 1;
	cppVar_63665 = (cppVar_63665 & cppMask_un_16_);
	BIT_VEC cppVar_63666 = ROM.rd(cppVar_63665);
	BIT_VEC cppVar_63667 = (cppVar_63666 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63668 = (cppVar_63667 & cppMask_un_5_);
	BIT_VEC cppVar_63669 = cppVar_63668 + 32;
	cppVar_63669 = (cppVar_63669 & cppMask_un_8_);
	BIT_VEC cppVar_63670 = (cppVar_63660) ? cppVar_63664 : cppVar_63669;
	bool cppVar_63672 = (cppVar_63670 == 137);
	BIT_VEC cppVar_63673 = PC + 1;
	cppVar_63673 = (cppVar_63673 & cppMask_un_16_);
	BIT_VEC cppVar_63674 = ROM.rd(cppVar_63673);
	BIT_VEC cppVar_63675 = (cppVar_63674 >> 7) & cppMask_un_1_;
	bool cppVar_63676 = (cppVar_63675 == 1);
	BIT_VEC cppVar_63677 = PC + 1;
	cppVar_63677 = (cppVar_63677 & cppMask_un_16_);
	BIT_VEC cppVar_63678 = ROM.rd(cppVar_63677);
	BIT_VEC cppVar_63679 = (cppVar_63678 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63680 = (cppVar_63679 << 3) | 0;
	cppVar_63680 = (cppVar_63680 & cppMask_un_8_);
	BIT_VEC cppVar_63681 = PC + 1;
	cppVar_63681 = (cppVar_63681 & cppMask_un_16_);
	BIT_VEC cppVar_63682 = ROM.rd(cppVar_63681);
	BIT_VEC cppVar_63683 = (cppVar_63682 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63684 = (cppVar_63683 & cppMask_un_5_);
	BIT_VEC cppVar_63685 = cppVar_63684 + 32;
	cppVar_63685 = (cppVar_63685 & cppMask_un_8_);
	BIT_VEC cppVar_63686 = (cppVar_63676) ? cppVar_63680 : cppVar_63685;
	bool cppVar_63688 = (cppVar_63686 == 138);
	BIT_VEC cppVar_63689 = PC + 1;
	cppVar_63689 = (cppVar_63689 & cppMask_un_16_);
	BIT_VEC cppVar_63690 = ROM.rd(cppVar_63689);
	BIT_VEC cppVar_63691 = (cppVar_63690 >> 7) & cppMask_un_1_;
	bool cppVar_63692 = (cppVar_63691 == 1);
	BIT_VEC cppVar_63693 = PC + 1;
	cppVar_63693 = (cppVar_63693 & cppMask_un_16_);
	BIT_VEC cppVar_63694 = ROM.rd(cppVar_63693);
	BIT_VEC cppVar_63695 = (cppVar_63694 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63696 = (cppVar_63695 << 3) | 0;
	cppVar_63696 = (cppVar_63696 & cppMask_un_8_);
	BIT_VEC cppVar_63697 = PC + 1;
	cppVar_63697 = (cppVar_63697 & cppMask_un_16_);
	BIT_VEC cppVar_63698 = ROM.rd(cppVar_63697);
	BIT_VEC cppVar_63699 = (cppVar_63698 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63700 = (cppVar_63699 & cppMask_un_5_);
	BIT_VEC cppVar_63701 = cppVar_63700 + 32;
	cppVar_63701 = (cppVar_63701 & cppMask_un_8_);
	BIT_VEC cppVar_63702 = (cppVar_63692) ? cppVar_63696 : cppVar_63701;
	bool cppVar_63704 = (cppVar_63702 == 140);
	BIT_VEC cppVar_63705 = PC + 1;
	cppVar_63705 = (cppVar_63705 & cppMask_un_16_);
	BIT_VEC cppVar_63706 = ROM.rd(cppVar_63705);
	BIT_VEC cppVar_63707 = (cppVar_63706 >> 7) & cppMask_un_1_;
	bool cppVar_63708 = (cppVar_63707 == 1);
	BIT_VEC cppVar_63709 = PC + 1;
	cppVar_63709 = (cppVar_63709 & cppMask_un_16_);
	BIT_VEC cppVar_63710 = ROM.rd(cppVar_63709);
	BIT_VEC cppVar_63711 = (cppVar_63710 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63712 = (cppVar_63711 << 3) | 0;
	cppVar_63712 = (cppVar_63712 & cppMask_un_8_);
	BIT_VEC cppVar_63713 = PC + 1;
	cppVar_63713 = (cppVar_63713 & cppMask_un_16_);
	BIT_VEC cppVar_63714 = ROM.rd(cppVar_63713);
	BIT_VEC cppVar_63715 = (cppVar_63714 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63716 = (cppVar_63715 & cppMask_un_5_);
	BIT_VEC cppVar_63717 = cppVar_63716 + 32;
	cppVar_63717 = (cppVar_63717 & cppMask_un_8_);
	BIT_VEC cppVar_63718 = (cppVar_63708) ? cppVar_63712 : cppVar_63717;
	bool cppVar_63720 = (cppVar_63718 == 139);
	BIT_VEC cppVar_63721 = PC + 1;
	cppVar_63721 = (cppVar_63721 & cppMask_un_16_);
	BIT_VEC cppVar_63722 = ROM.rd(cppVar_63721);
	BIT_VEC cppVar_63723 = (cppVar_63722 >> 7) & cppMask_un_1_;
	bool cppVar_63724 = (cppVar_63723 == 1);
	BIT_VEC cppVar_63725 = PC + 1;
	cppVar_63725 = (cppVar_63725 & cppMask_un_16_);
	BIT_VEC cppVar_63726 = ROM.rd(cppVar_63725);
	BIT_VEC cppVar_63727 = (cppVar_63726 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63728 = (cppVar_63727 << 3) | 0;
	cppVar_63728 = (cppVar_63728 & cppMask_un_8_);
	BIT_VEC cppVar_63729 = PC + 1;
	cppVar_63729 = (cppVar_63729 & cppMask_un_16_);
	BIT_VEC cppVar_63730 = ROM.rd(cppVar_63729);
	BIT_VEC cppVar_63731 = (cppVar_63730 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63732 = (cppVar_63731 & cppMask_un_5_);
	BIT_VEC cppVar_63733 = cppVar_63732 + 32;
	cppVar_63733 = (cppVar_63733 & cppMask_un_8_);
	BIT_VEC cppVar_63734 = (cppVar_63724) ? cppVar_63728 : cppVar_63733;
	bool cppVar_63736 = (cppVar_63734 == 141);
	BIT_VEC cppVar_63737 = PC + 1;
	cppVar_63737 = (cppVar_63737 & cppMask_un_16_);
	BIT_VEC cppVar_63738 = ROM.rd(cppVar_63737);
	BIT_VEC cppVar_63739 = (cppVar_63738 >> 7) & cppMask_un_1_;
	bool cppVar_63740 = (cppVar_63739 == 1);
	BIT_VEC cppVar_63741 = PC + 1;
	cppVar_63741 = (cppVar_63741 & cppMask_un_16_);
	BIT_VEC cppVar_63742 = ROM.rd(cppVar_63741);
	BIT_VEC cppVar_63743 = (cppVar_63742 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63744 = (cppVar_63743 << 3) | 0;
	cppVar_63744 = (cppVar_63744 & cppMask_un_8_);
	BIT_VEC cppVar_63745 = PC + 1;
	cppVar_63745 = (cppVar_63745 & cppMask_un_16_);
	BIT_VEC cppVar_63746 = ROM.rd(cppVar_63745);
	BIT_VEC cppVar_63747 = (cppVar_63746 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63748 = (cppVar_63747 & cppMask_un_5_);
	BIT_VEC cppVar_63749 = cppVar_63748 + 32;
	cppVar_63749 = (cppVar_63749 & cppMask_un_8_);
	BIT_VEC cppVar_63750 = (cppVar_63740) ? cppVar_63744 : cppVar_63749;
	bool cppVar_63752 = (cppVar_63750 == 144);
	BIT_VEC cppVar_63753 = PC + 1;
	cppVar_63753 = (cppVar_63753 & cppMask_un_16_);
	BIT_VEC cppVar_63754 = ROM.rd(cppVar_63753);
	BIT_VEC cppVar_63755 = (cppVar_63754 >> 7) & cppMask_un_1_;
	bool cppVar_63756 = (cppVar_63755 == 1);
	BIT_VEC cppVar_63757 = PC + 1;
	cppVar_63757 = (cppVar_63757 & cppMask_un_16_);
	BIT_VEC cppVar_63758 = ROM.rd(cppVar_63757);
	BIT_VEC cppVar_63759 = (cppVar_63758 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63760 = (cppVar_63759 << 3) | 0;
	cppVar_63760 = (cppVar_63760 & cppMask_un_8_);
	BIT_VEC cppVar_63761 = PC + 1;
	cppVar_63761 = (cppVar_63761 & cppMask_un_16_);
	BIT_VEC cppVar_63762 = ROM.rd(cppVar_63761);
	BIT_VEC cppVar_63763 = (cppVar_63762 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63764 = (cppVar_63763 & cppMask_un_5_);
	BIT_VEC cppVar_63765 = cppVar_63764 + 32;
	cppVar_63765 = (cppVar_63765 & cppMask_un_8_);
	BIT_VEC cppVar_63766 = (cppVar_63756) ? cppVar_63760 : cppVar_63765;
	bool cppVar_63768 = (cppVar_63766 == 152);
	BIT_VEC cppVar_63769 = PC + 1;
	cppVar_63769 = (cppVar_63769 & cppMask_un_16_);
	BIT_VEC cppVar_63770 = ROM.rd(cppVar_63769);
	BIT_VEC cppVar_63771 = (cppVar_63770 >> 7) & cppMask_un_1_;
	bool cppVar_63772 = (cppVar_63771 == 1);
	BIT_VEC cppVar_63773 = PC + 1;
	cppVar_63773 = (cppVar_63773 & cppMask_un_16_);
	BIT_VEC cppVar_63774 = ROM.rd(cppVar_63773);
	BIT_VEC cppVar_63775 = (cppVar_63774 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63776 = (cppVar_63775 << 3) | 0;
	cppVar_63776 = (cppVar_63776 & cppMask_un_8_);
	BIT_VEC cppVar_63777 = PC + 1;
	cppVar_63777 = (cppVar_63777 & cppMask_un_16_);
	BIT_VEC cppVar_63778 = ROM.rd(cppVar_63777);
	BIT_VEC cppVar_63779 = (cppVar_63778 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63780 = (cppVar_63779 & cppMask_un_5_);
	BIT_VEC cppVar_63781 = cppVar_63780 + 32;
	cppVar_63781 = (cppVar_63781 & cppMask_un_8_);
	BIT_VEC cppVar_63782 = (cppVar_63772) ? cppVar_63776 : cppVar_63781;
	bool cppVar_63784 = (cppVar_63782 == 153);
	BIT_VEC cppVar_63785 = PC + 1;
	cppVar_63785 = (cppVar_63785 & cppMask_un_16_);
	BIT_VEC cppVar_63786 = ROM.rd(cppVar_63785);
	BIT_VEC cppVar_63787 = (cppVar_63786 >> 7) & cppMask_un_1_;
	bool cppVar_63788 = (cppVar_63787 == 1);
	BIT_VEC cppVar_63789 = PC + 1;
	cppVar_63789 = (cppVar_63789 & cppMask_un_16_);
	BIT_VEC cppVar_63790 = ROM.rd(cppVar_63789);
	BIT_VEC cppVar_63791 = (cppVar_63790 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63792 = (cppVar_63791 << 3) | 0;
	cppVar_63792 = (cppVar_63792 & cppMask_un_8_);
	BIT_VEC cppVar_63793 = PC + 1;
	cppVar_63793 = (cppVar_63793 & cppMask_un_16_);
	BIT_VEC cppVar_63794 = ROM.rd(cppVar_63793);
	BIT_VEC cppVar_63795 = (cppVar_63794 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63796 = (cppVar_63795 & cppMask_un_5_);
	BIT_VEC cppVar_63797 = cppVar_63796 + 32;
	cppVar_63797 = (cppVar_63797 & cppMask_un_8_);
	BIT_VEC cppVar_63798 = (cppVar_63788) ? cppVar_63792 : cppVar_63797;
	bool cppVar_63800 = (cppVar_63798 == 160);
	BIT_VEC cppVar_63801 = PC + 1;
	cppVar_63801 = (cppVar_63801 & cppMask_un_16_);
	BIT_VEC cppVar_63802 = ROM.rd(cppVar_63801);
	BIT_VEC cppVar_63803 = (cppVar_63802 >> 7) & cppMask_un_1_;
	bool cppVar_63804 = (cppVar_63803 == 1);
	BIT_VEC cppVar_63805 = PC + 1;
	cppVar_63805 = (cppVar_63805 & cppMask_un_16_);
	BIT_VEC cppVar_63806 = ROM.rd(cppVar_63805);
	BIT_VEC cppVar_63807 = (cppVar_63806 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63808 = (cppVar_63807 << 3) | 0;
	cppVar_63808 = (cppVar_63808 & cppMask_un_8_);
	BIT_VEC cppVar_63809 = PC + 1;
	cppVar_63809 = (cppVar_63809 & cppMask_un_16_);
	BIT_VEC cppVar_63810 = ROM.rd(cppVar_63809);
	BIT_VEC cppVar_63811 = (cppVar_63810 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63812 = (cppVar_63811 & cppMask_un_5_);
	BIT_VEC cppVar_63813 = cppVar_63812 + 32;
	cppVar_63813 = (cppVar_63813 & cppMask_un_8_);
	BIT_VEC cppVar_63814 = (cppVar_63804) ? cppVar_63808 : cppVar_63813;
	bool cppVar_63816 = (cppVar_63814 == 168);
	BIT_VEC cppVar_63817 = PC + 1;
	cppVar_63817 = (cppVar_63817 & cppMask_un_16_);
	BIT_VEC cppVar_63818 = ROM.rd(cppVar_63817);
	BIT_VEC cppVar_63819 = (cppVar_63818 >> 7) & cppMask_un_1_;
	bool cppVar_63820 = (cppVar_63819 == 1);
	BIT_VEC cppVar_63821 = PC + 1;
	cppVar_63821 = (cppVar_63821 & cppMask_un_16_);
	BIT_VEC cppVar_63822 = ROM.rd(cppVar_63821);
	BIT_VEC cppVar_63823 = (cppVar_63822 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63824 = (cppVar_63823 << 3) | 0;
	cppVar_63824 = (cppVar_63824 & cppMask_un_8_);
	BIT_VEC cppVar_63825 = PC + 1;
	cppVar_63825 = (cppVar_63825 & cppMask_un_16_);
	BIT_VEC cppVar_63826 = ROM.rd(cppVar_63825);
	BIT_VEC cppVar_63827 = (cppVar_63826 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63828 = (cppVar_63827 & cppMask_un_5_);
	BIT_VEC cppVar_63829 = cppVar_63828 + 32;
	cppVar_63829 = (cppVar_63829 & cppMask_un_8_);
	BIT_VEC cppVar_63830 = (cppVar_63820) ? cppVar_63824 : cppVar_63829;
	bool cppVar_63832 = (cppVar_63830 == 176);
	BIT_VEC cppVar_63833 = PC + 1;
	cppVar_63833 = (cppVar_63833 & cppMask_un_16_);
	BIT_VEC cppVar_63834 = ROM.rd(cppVar_63833);
	BIT_VEC cppVar_63835 = (cppVar_63834 >> 7) & cppMask_un_1_;
	bool cppVar_63836 = (cppVar_63835 == 1);
	BIT_VEC cppVar_63837 = PC + 1;
	cppVar_63837 = (cppVar_63837 & cppMask_un_16_);
	BIT_VEC cppVar_63838 = ROM.rd(cppVar_63837);
	BIT_VEC cppVar_63839 = (cppVar_63838 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63840 = (cppVar_63839 << 3) | 0;
	cppVar_63840 = (cppVar_63840 & cppMask_un_8_);
	BIT_VEC cppVar_63841 = PC + 1;
	cppVar_63841 = (cppVar_63841 & cppMask_un_16_);
	BIT_VEC cppVar_63842 = ROM.rd(cppVar_63841);
	BIT_VEC cppVar_63843 = (cppVar_63842 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63844 = (cppVar_63843 & cppMask_un_5_);
	BIT_VEC cppVar_63845 = cppVar_63844 + 32;
	cppVar_63845 = (cppVar_63845 & cppMask_un_8_);
	BIT_VEC cppVar_63846 = (cppVar_63836) ? cppVar_63840 : cppVar_63845;
	bool cppVar_63848 = (cppVar_63846 == 184);
	BIT_VEC cppVar_63849 = PC + 1;
	cppVar_63849 = (cppVar_63849 & cppMask_un_16_);
	BIT_VEC cppVar_63850 = ROM.rd(cppVar_63849);
	BIT_VEC cppVar_63851 = (cppVar_63850 >> 7) & cppMask_un_1_;
	bool cppVar_63852 = (cppVar_63851 == 1);
	BIT_VEC cppVar_63853 = PC + 1;
	cppVar_63853 = (cppVar_63853 & cppMask_un_16_);
	BIT_VEC cppVar_63854 = ROM.rd(cppVar_63853);
	BIT_VEC cppVar_63855 = (cppVar_63854 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63856 = (cppVar_63855 << 3) | 0;
	cppVar_63856 = (cppVar_63856 & cppMask_un_8_);
	BIT_VEC cppVar_63857 = PC + 1;
	cppVar_63857 = (cppVar_63857 & cppMask_un_16_);
	BIT_VEC cppVar_63858 = ROM.rd(cppVar_63857);
	BIT_VEC cppVar_63859 = (cppVar_63858 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63860 = (cppVar_63859 & cppMask_un_5_);
	BIT_VEC cppVar_63861 = cppVar_63860 + 32;
	cppVar_63861 = (cppVar_63861 & cppMask_un_8_);
	BIT_VEC cppVar_63862 = (cppVar_63852) ? cppVar_63856 : cppVar_63861;
	bool cppVar_63864 = (cppVar_63862 == 208);
	BIT_VEC cppVar_63865 = PC + 1;
	cppVar_63865 = (cppVar_63865 & cppMask_un_16_);
	BIT_VEC cppVar_63866 = ROM.rd(cppVar_63865);
	BIT_VEC cppVar_63867 = (cppVar_63866 >> 7) & cppMask_un_1_;
	bool cppVar_63868 = (cppVar_63867 == 1);
	BIT_VEC cppVar_63869 = PC + 1;
	cppVar_63869 = (cppVar_63869 & cppMask_un_16_);
	BIT_VEC cppVar_63870 = ROM.rd(cppVar_63869);
	BIT_VEC cppVar_63871 = (cppVar_63870 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63872 = (cppVar_63871 << 3) | 0;
	cppVar_63872 = (cppVar_63872 & cppMask_un_8_);
	BIT_VEC cppVar_63873 = PC + 1;
	cppVar_63873 = (cppVar_63873 & cppMask_un_16_);
	BIT_VEC cppVar_63874 = ROM.rd(cppVar_63873);
	BIT_VEC cppVar_63875 = (cppVar_63874 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63876 = (cppVar_63875 & cppMask_un_5_);
	BIT_VEC cppVar_63877 = cppVar_63876 + 32;
	cppVar_63877 = (cppVar_63877 & cppMask_un_8_);
	BIT_VEC cppVar_63878 = (cppVar_63868) ? cppVar_63872 : cppVar_63877;
	bool cppVar_63880 = (cppVar_63878 == 224);
	BIT_VEC cppVar_63881 = PC + 1;
	cppVar_63881 = (cppVar_63881 & cppMask_un_16_);
	BIT_VEC cppVar_63882 = ROM.rd(cppVar_63881);
	BIT_VEC cppVar_63883 = (cppVar_63882 >> 7) & cppMask_un_1_;
	bool cppVar_63884 = (cppVar_63883 == 1);
	BIT_VEC cppVar_63885 = PC + 1;
	cppVar_63885 = (cppVar_63885 & cppMask_un_16_);
	BIT_VEC cppVar_63886 = ROM.rd(cppVar_63885);
	BIT_VEC cppVar_63887 = (cppVar_63886 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63888 = (cppVar_63887 << 3) | 0;
	cppVar_63888 = (cppVar_63888 & cppMask_un_8_);
	BIT_VEC cppVar_63889 = PC + 1;
	cppVar_63889 = (cppVar_63889 & cppMask_un_16_);
	BIT_VEC cppVar_63890 = ROM.rd(cppVar_63889);
	BIT_VEC cppVar_63891 = (cppVar_63890 >> 3) & cppMask_un_5_;
	BIT_VEC cppVar_63892 = (cppVar_63891 & cppMask_un_5_);
	BIT_VEC cppVar_63893 = cppVar_63892 + 32;
	cppVar_63893 = (cppVar_63893 & cppMask_un_8_);
	BIT_VEC cppVar_63894 = (cppVar_63884) ? cppVar_63888 : cppVar_63893;
	bool cppVar_63896 = (cppVar_63894 == 240);
	BIT_VEC cppVar_63898 = (cppVar_63896) ? B : 0;
	BIT_VEC cppVar_63899 = (cppVar_63880) ? ACC : cppVar_63898;
	BIT_VEC cppVar_63900 = (cppVar_63864) ? PSW : cppVar_63899;
	BIT_VEC cppVar_63901 = (cppVar_63848) ? IP : cppVar_63900;
	BIT_VEC cppVar_63902 = (cppVar_63832) ? P3 : cppVar_63901;
	BIT_VEC cppVar_63903 = (cppVar_63816) ? IE : cppVar_63902;
	BIT_VEC cppVar_63904 = (cppVar_63800) ? P2 : cppVar_63903;
	BIT_VEC cppVar_63905 = (cppVar_63784) ? SBUF : cppVar_63904;
	BIT_VEC cppVar_63906 = (cppVar_63768) ? SCON : cppVar_63905;
	BIT_VEC cppVar_63907 = (cppVar_63752) ? P1 : cppVar_63906;
	BIT_VEC cppVar_63908 = (cppVar_63736) ? TH1 : cppVar_63907;
	BIT_VEC cppVar_63909 = (cppVar_63720) ? TL1 : cppVar_63908;
	BIT_VEC cppVar_63910 = (cppVar_63704) ? TH0 : cppVar_63909;
	BIT_VEC cppVar_63911 = (cppVar_63688) ? TL0 : cppVar_63910;
	BIT_VEC cppVar_63912 = (cppVar_63672) ? TMOD : cppVar_63911;
	BIT_VEC cppVar_63913 = (cppVar_63656) ? TCON : cppVar_63912;
	BIT_VEC cppVar_63914 = (cppVar_63640) ? PCON : cppVar_63913;
	BIT_VEC cppVar_63915 = (cppVar_63624) ? DPH : cppVar_63914;
	BIT_VEC cppVar_63916 = (cppVar_63608) ? DPL : cppVar_63915;
	BIT_VEC cppVar_63917 = (cppVar_63592) ? SP : cppVar_63916;
	BIT_VEC cppVar_63918 = (cppVar_63576) ? P0 : cppVar_63917;
	BIT_VEC cppVar_63919 = (cppVar_63545) ? cppVar_63560 : cppVar_63918;
	BIT_VEC cppVar_63920 = cppVar_63528 & cppVar_63919;
	BIT_VEC cppVar_63922 = 0;
	BIT_VEC cppVar_63923 = PC + 1;
	cppVar_63923 = (cppVar_63923 & cppMask_un_16_);
	BIT_VEC cppVar_63924 = ROM.rd(cppVar_63923);
	BIT_VEC cppVar_63925 = (cppVar_63924 >> 0) & cppMask_un_3_;
	BIT_VEC cppVar_63926 = (cppVar_63925 & cppMask_un_3_);
	BIT_VEC cppVar_63927 = cppVar_63922 << static_cast<unsigned>(cppVar_63926);
	cppVar_63927 = (cppVar_63927 & cppMask_un_8_);
	BIT_VEC cppVar_63928 = cppVar_63920 | cppVar_63927;
	BIT_VEC cppVar_63929 = (cppVar_63521) ? cppVar_63928 : SCON;
	BIT_VEC cppVar_63930 = ROM.rd(PC);
	bool cppVar_63932 = (cppVar_63930 == 5);
	BIT_VEC cppVar_63934 = PC + 1;
	cppVar_63934 = (cppVar_63934 & cppMask_un_16_);
	BIT_VEC cppVar_63935 = ROM.rd(cppVar_63934);
	bool cppVar_63937 = (cppVar_63935 == 152);
	BIT_VEC cppVar_63938 = PC + 1;
	cppVar_63938 = (cppVar_63938 & cppMask_un_16_);
	BIT_VEC cppVar_63939 = ROM.rd(cppVar_63938);
	BIT_VEC cppVar_63940 = (cppVar_63939 >> 7) & cppMask_un_1_;
	bool cppVar_63942 = (cppVar_63940 == 0);
	BIT_VEC cppVar_63943 = PC + 1;
	cppVar_63943 = (cppVar_63943 & cppMask_un_16_);
	BIT_VEC cppVar_63944 = ROM.rd(cppVar_63943);
	BIT_VEC cppVar_63945 = IRAM.rd(cppVar_63944);
	BIT_VEC cppVar_63946 = PC + 1;
	cppVar_63946 = (cppVar_63946 & cppMask_un_16_);
	BIT_VEC cppVar_63947 = ROM.rd(cppVar_63946);
	bool cppVar_63949 = (cppVar_63947 == 128);
	BIT_VEC cppVar_63950 = PC + 1;
	cppVar_63950 = (cppVar_63950 & cppMask_un_16_);
	BIT_VEC cppVar_63951 = ROM.rd(cppVar_63950);
	bool cppVar_63953 = (cppVar_63951 == 129);
	BIT_VEC cppVar_63954 = PC + 1;
	cppVar_63954 = (cppVar_63954 & cppMask_un_16_);
	BIT_VEC cppVar_63955 = ROM.rd(cppVar_63954);
	bool cppVar_63957 = (cppVar_63955 == 130);
	BIT_VEC cppVar_63958 = PC + 1;
	cppVar_63958 = (cppVar_63958 & cppMask_un_16_);
	BIT_VEC cppVar_63959 = ROM.rd(cppVar_63958);
	bool cppVar_63961 = (cppVar_63959 == 131);
	BIT_VEC cppVar_63962 = PC + 1;
	cppVar_63962 = (cppVar_63962 & cppMask_un_16_);
	BIT_VEC cppVar_63963 = ROM.rd(cppVar_63962);
	bool cppVar_63965 = (cppVar_63963 == 135);
	BIT_VEC cppVar_63966 = PC + 1;
	cppVar_63966 = (cppVar_63966 & cppMask_un_16_);
	BIT_VEC cppVar_63967 = ROM.rd(cppVar_63966);
	bool cppVar_63969 = (cppVar_63967 == 136);
	BIT_VEC cppVar_63970 = PC + 1;
	cppVar_63970 = (cppVar_63970 & cppMask_un_16_);
	BIT_VEC cppVar_63971 = ROM.rd(cppVar_63970);
	bool cppVar_63973 = (cppVar_63971 == 137);
	BIT_VEC cppVar_63974 = PC + 1;
	cppVar_63974 = (cppVar_63974 & cppMask_un_16_);
	BIT_VEC cppVar_63975 = ROM.rd(cppVar_63974);
	bool cppVar_63977 = (cppVar_63975 == 138);
	BIT_VEC cppVar_63978 = PC + 1;
	cppVar_63978 = (cppVar_63978 & cppMask_un_16_);
	BIT_VEC cppVar_63979 = ROM.rd(cppVar_63978);
	bool cppVar_63981 = (cppVar_63979 == 140);
	BIT_VEC cppVar_63982 = PC + 1;
	cppVar_63982 = (cppVar_63982 & cppMask_un_16_);
	BIT_VEC cppVar_63983 = ROM.rd(cppVar_63982);
	bool cppVar_63985 = (cppVar_63983 == 139);
	BIT_VEC cppVar_63986 = PC + 1;
	cppVar_63986 = (cppVar_63986 & cppMask_un_16_);
	BIT_VEC cppVar_63987 = ROM.rd(cppVar_63986);
	bool cppVar_63989 = (cppVar_63987 == 141);
	BIT_VEC cppVar_63990 = PC + 1;
	cppVar_63990 = (cppVar_63990 & cppMask_un_16_);
	BIT_VEC cppVar_63991 = ROM.rd(cppVar_63990);
	bool cppVar_63993 = (cppVar_63991 == 144);
	BIT_VEC cppVar_63994 = PC + 1;
	cppVar_63994 = (cppVar_63994 & cppMask_un_16_);
	BIT_VEC cppVar_63995 = ROM.rd(cppVar_63994);
	bool cppVar_63997 = (cppVar_63995 == 152);
	BIT_VEC cppVar_63998 = PC + 1;
	cppVar_63998 = (cppVar_63998 & cppMask_un_16_);
	BIT_VEC cppVar_63999 = ROM.rd(cppVar_63998);
	bool cppVar_64001 = (cppVar_63999 == 153);
	BIT_VEC cppVar_64002 = PC + 1;
	cppVar_64002 = (cppVar_64002 & cppMask_un_16_);
	BIT_VEC cppVar_64003 = ROM.rd(cppVar_64002);
	bool cppVar_64005 = (cppVar_64003 == 160);
	BIT_VEC cppVar_64006 = PC + 1;
	cppVar_64006 = (cppVar_64006 & cppMask_un_16_);
	BIT_VEC cppVar_64007 = ROM.rd(cppVar_64006);
	bool cppVar_64009 = (cppVar_64007 == 168);
	BIT_VEC cppVar_64010 = PC + 1;
	cppVar_64010 = (cppVar_64010 & cppMask_un_16_);
	BIT_VEC cppVar_64011 = ROM.rd(cppVar_64010);
	bool cppVar_64013 = (cppVar_64011 == 176);
	BIT_VEC cppVar_64014 = PC + 1;
	cppVar_64014 = (cppVar_64014 & cppMask_un_16_);
	BIT_VEC cppVar_64015 = ROM.rd(cppVar_64014);
	bool cppVar_64017 = (cppVar_64015 == 184);
	BIT_VEC cppVar_64018 = PC + 1;
	cppVar_64018 = (cppVar_64018 & cppMask_un_16_);
	BIT_VEC cppVar_64019 = ROM.rd(cppVar_64018);
	bool cppVar_64021 = (cppVar_64019 == 208);
	BIT_VEC cppVar_64022 = PC + 1;
	cppVar_64022 = (cppVar_64022 & cppMask_un_16_);
	BIT_VEC cppVar_64023 = ROM.rd(cppVar_64022);
	bool cppVar_64025 = (cppVar_64023 == 224);
	BIT_VEC cppVar_64026 = PC + 1;
	cppVar_64026 = (cppVar_64026 & cppMask_un_16_);
	BIT_VEC cppVar_64027 = ROM.rd(cppVar_64026);
	bool cppVar_64029 = (cppVar_64027 == 240);
	BIT_VEC cppVar_64031 = (cppVar_64029) ? B : 0;
	BIT_VEC cppVar_64032 = (cppVar_64025) ? ACC : cppVar_64031;
	BIT_VEC cppVar_64033 = (cppVar_64021) ? PSW : cppVar_64032;
	BIT_VEC cppVar_64034 = (cppVar_64017) ? IP : cppVar_64033;
	BIT_VEC cppVar_64035 = (cppVar_64013) ? P3 : cppVar_64034;
	BIT_VEC cppVar_64036 = (cppVar_64009) ? IE : cppVar_64035;
	BIT_VEC cppVar_64037 = (cppVar_64005) ? P2 : cppVar_64036;
	BIT_VEC cppVar_64038 = (cppVar_64001) ? SBUF : cppVar_64037;
	BIT_VEC cppVar_64039 = (cppVar_63997) ? SCON : cppVar_64038;
	BIT_VEC cppVar_64040 = (cppVar_63993) ? P1 : cppVar_64039;
	BIT_VEC cppVar_64041 = (cppVar_63989) ? TH1 : cppVar_64040;
	BIT_VEC cppVar_64042 = (cppVar_63985) ? TL1 : cppVar_64041;
	BIT_VEC cppVar_64043 = (cppVar_63981) ? TH0 : cppVar_64042;
	BIT_VEC cppVar_64044 = (cppVar_63977) ? TL0 : cppVar_64043;
	BIT_VEC cppVar_64045 = (cppVar_63973) ? TMOD : cppVar_64044;
	BIT_VEC cppVar_64046 = (cppVar_63969) ? TCON : cppVar_64045;
	BIT_VEC cppVar_64047 = (cppVar_63965) ? PCON : cppVar_64046;
	BIT_VEC cppVar_64048 = (cppVar_63961) ? DPH : cppVar_64047;
	BIT_VEC cppVar_64049 = (cppVar_63957) ? DPL : cppVar_64048;
	BIT_VEC cppVar_64050 = (cppVar_63953) ? SP : cppVar_64049;
	BIT_VEC cppVar_64051 = (cppVar_63949) ? P0 : cppVar_64050;
	BIT_VEC cppVar_64052 = (cppVar_63942) ? cppVar_63945 : cppVar_64051;
	BIT_VEC cppVar_64054 = cppVar_64052 + 1;
	cppVar_64054 = (cppVar_64054 & cppMask_un_8_);
	BIT_VEC cppVar_64055 = (cppVar_63937) ? cppVar_64054 : SCON;
	BIT_VEC cppVar_64056 = (cppVar_63932) ? cppVar_64055 : SCON;
	BIT_VEC cppVar_64057 = (cppVar_63501) ? cppVar_63929 : cppVar_64056;
	BIT_VEC cppVar_64058 = (cppVar_63371) ? cppVar_63494 : cppVar_64057;
	BIT_VEC cppVar_64059 = (cppVar_63242) ? cppVar_63364 : cppVar_64058;
	BIT_VEC cppVar_64060 = (cppVar_63114) ? cppVar_63239 : cppVar_64059;
	BIT_VEC cppVar_64061 = (cppVar_62989) ? cppVar_63111 : cppVar_64060;
	BIT_VEC cppVar_64062 = (cppVar_62861) ? cppVar_62986 : cppVar_64061;
	BIT_VEC cppVar_64063 = (cppVar_62736) ? cppVar_62858 : cppVar_64062;
	BIT_VEC cppVar_64064 = (cppVar_62608) ? cppVar_62733 : cppVar_64063;
	BIT_VEC cppVar_64065 = (cppVar_62596) ? cppVar_62605 : cppVar_64064;
	BIT_VEC cppVar_64066 = (cppVar_62471) ? cppVar_62593 : cppVar_64065;
	BIT_VEC cppVar_64067 = (cppVar_62455) ? cppVar_62468 : cppVar_64066;
	BIT_VEC cppVar_64068 = (cppVar_62439) ? cppVar_62452 : cppVar_64067;
	BIT_VEC cppVar_64069 = (cppVar_62290) ? cppVar_62436 : cppVar_64068;
	BIT_VEC cppVar_64070 = (cppVar_62141) ? cppVar_62287 : cppVar_64069;
	BIT_VEC cppVar_64071 = (cppVar_61992) ? cppVar_62138 : cppVar_64070;
	BIT_VEC cppVar_64072 = (cppVar_61843) ? cppVar_61989 : cppVar_64071;
	BIT_VEC cppVar_64073 = (cppVar_61694) ? cppVar_61840 : cppVar_64072;
	BIT_VEC cppVar_64074 = (cppVar_61545) ? cppVar_61691 : cppVar_64073;
	BIT_VEC cppVar_64075 = (cppVar_61396) ? cppVar_61542 : cppVar_64074;
	BIT_VEC cppVar_64076 = (cppVar_61247) ? cppVar_61393 : cppVar_64075;
	BIT_VEC cppVar_64077 = (cppVar_60816) ? cppVar_61244 : cppVar_64076;
	BIT_VEC cppVar_64078 = (cppVar_59987) ? cppVar_60813 : cppVar_64077;
	BIT_VEC cppVar_64079 = (cppVar_59978) ? cppVar_59984 : cppVar_64078;
	BIT_VEC cppVar_64080 = (cppVar_59964) ? cppVar_59971 : cppVar_64079;
	BIT_VEC cppVar_64081 = (cppVar_59533) ? cppVar_59961 : cppVar_64080;
	return cppVar_64081;
}
