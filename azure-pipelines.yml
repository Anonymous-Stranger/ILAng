trigger:
- master

pr:
- master

# File: azure-pipelines.yml

jobs:
- job: macOS
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - script: |
      brew update
      brew install bison
      brew install boost
      brew install boost-python
      brew install z3
    displayName: 'package'
  - script: |
      export PATH="/usr/local/opt/bison/bin:$PATH"
      export LDFLAGS="-L/usr/local/opt/bison/lib"
      mkdir -p build 
      cd build
      cmake ..
      cmake --build .
      cmake --build . --target install 
      cmake --build . --target test
    displayName: 'build'

- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: |
      sudo apt-get update
      sudo apt-get install bison
      sudo apt-get install flex
      sudo apt-get install libboost-all-dev
      sudo apt-get install z3
      sudo apt-get install libz3-dev
    displayName: 'package'
  - script: |
      mkdir -p build 
      cd build
      cmake ..
      cmake --build .
      sudo cmake --build . --target install 
      cmake --build . --target test
    displayName: 'build'

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - script: |
      choco install winflexbison3
      choco install wget
      md local-install
    displayName: 'package'

  - script: |
      git clone https://github.com/Z3Prover/z3.git 
      cd z3
      md build
      cd build
      call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
      cmake .. -DCMAKE_INSTALL_PREFIX=../../local-install
      cmake --build .
      cmake --build . --target install
    displayName: 'z3'

  - script: |
      cd extern 
      cd glog
      md build 
      cd build
      cmake .. 
      cmake --build . --target install
    displayName: 'glog'

  - script: |
      cd extern 
      cd json
      md build 
      cd build
      cmake .. -DJSON_BuildTests=OFF
      cmake --build . --target install
    displayName: 'json'

  - script: |
      git submodule update --init --recursive
    displayName: 'submodule'

  - script: |
      cd extern 
      cd vlog-parser
      md build 
      cd build
      cmake .. 
      cmake --build . --target install
    displayName: 'vlog-parser'

  - script: |
      md build
      cd build
      cmake .. -DILANG_BUILD_SYNTH=OFF -DILANG_BUILD_TEST=OFF -DZ3_DIR=../local-install/lib/cmake/z3 
      cmake --build .
      cmake --build . --target install
    displayName: 'build'

  - script: |
      cd starter
      md build
      cd build
      cmake .. -DZ3_DIR=../../local-install/lib/cmake/z3 
      cmake --build . 
    displayName: 'starter'
