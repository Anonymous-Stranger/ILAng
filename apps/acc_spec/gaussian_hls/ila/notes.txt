This note describes the ILA of the gaussian blur (GB) accelerator synthesized 
through Vivaldo high level synthesis from Halide compiled C++ code.

Note that in this experiment, we only check the equivalence when an instruction
starts after previous instructions complete.

Fetch function: concat (arg_1_TVALID, arg_0_TREADY, 
                        arg_1_TREADY, arg_0_VALID,
                        in_stream_full, in_stream_empty,
                        slice_stream_full, slice_stream_empty,
                        stencil_stream_full, stencil_stream_empty)

Fetch valid: (arg_1_TREADY & arg_1_TVALID) | 
             (arg_0_TREADY & arg_0_TVALID) | 
             (~arg_1_TREADY & ~in_stream_full) | 
             (~in_stream_empty & ~slice_stream_full) |
             (~slice_stream_empty & ~stencil_stream_full) | 
             (~stencil_stream_empty & ~arg_0_TVALID)

Inputs:
 - arg_1_TVALID
 - arg_1_TDATA
 - arg_0_TREADY

States:
 - arg_1_TREADY
 - arg_0_TVALID
 - arg_0_TDATA

 - LB1D
 - LB2D_buff_[0:7]
 - LB2D_buff_x
 - LB2D_buff_y
 - LB2D_buff_w
 - LB2D_shift_[0:7]
 - LB2D_shift_x
 - LB2D_shift_y
 - in_stream_buff_[0:1]
 - in_stream_full
 - in_stream_empty
 - slice_stream_buff_[0:1]
 - slice_stream_full
 - slice_stream_empty
 - stencil_stream_buff_[0:1]
 - stencil_stream_full
 - stencil_stream_empty

Write instruction (WRI):
    Decode: arg_1_TREADY & arg_1_TVALID ( & ~arg_0_TREADY )
    Next:
        arg_1_TREADY <= 0
        LB1D         <= if (cond) arg_1_TDATA ...

    Child-ILA:
        Vu = (~arg_1_TREADY & ~in_stream_full) | 
             (~in_stream_empty & ~slice_stream_full) |
             (~slice_stream_empty & ~stencil_stream_full) | 
             (~stencil_stream_empty & ~arg_0_TVALID)

        4 child-instructions: wu1, wu2, wu3, wu4


