;; variables
(declare-var acc_len (_ BitVec 16))
(declare-var acc_state (_ BitVec 3))
(declare-var b0 Bool)
(declare-var b1 Bool)
(declare-var b10 Bool)
(declare-var b100 Bool)
(declare-var b104 Bool)
(declare-var b11 Bool)
(declare-var b13 Bool)
(declare-var b15 Bool)
(declare-var b19 Bool)
(declare-var b26 Bool)
(declare-var b27 Bool)
(declare-var b28 Bool)
(declare-var b30 Bool)
(declare-var b32 Bool)
(declare-var b35 Bool)
(declare-var b4 Bool)
(declare-var b40 Bool)
(declare-var b41 Bool)
(declare-var b43 Bool)
(declare-var b48 Bool)
(declare-var b49 Bool)
(declare-var b51 Bool)
(declare-var b56 Bool)
(declare-var b57 Bool)
(declare-var b59 Bool)
(declare-var b64 Bool)
(declare-var b68 Bool)
(declare-var b73 Bool)
(declare-var b78 Bool)
(declare-var b82 Bool)
(declare-var b87 Bool)
(declare-var b9 Bool)
(declare-var b91 Bool)
(declare-var b94 Bool)
(declare-var bv103 (_ BitVec 3))
(declare-var bv18 (_ BitVec 3))
(declare-var bv25 (_ BitVec 16))
(declare-var bv34 (_ BitVec 16))
(declare-var bv67 (_ BitVec 3))
(declare-var bv72 (_ BitVec 16))
(declare-var bv75 (_ BitVec 16))
(declare-var bv8 (_ BitVec 3))
(declare-var bv81 (_ BitVec 3))
(declare-var bv90 (_ BitVec 3))
(declare-var bv93 (_ BitVec 3))
(declare-var bytes_read (_ BitVec 16))
(declare-var child_1_acc_state_nxt (_ BitVec 3))
(declare-var child_1_bytes_read_nxt (_ BitVec 16))
(declare-var child_2_acc_state_nxt (_ BitVec 3))
(declare-var child_2_bytes_read_nxt (_ BitVec 16))
(declare-var child_3_acc_state_nxt (_ BitVec 3))
(declare-var child_3_bytes_read_nxt (_ BitVec 16))
(declare-var child_4_acc_state_nxt (_ BitVec 3))
(declare-var child_4_bytes_read_nxt (_ BitVec 16))
(declare-var cmd (_ BitVec 2))
(declare-var cmdaddr (_ BitVec 16))
(declare-var cmddata (_ BitVec 8))
(declare-var decode_fe00 Bool)
(declare-var decode_fe01 Bool)
(declare-var decode_fe02 Bool)
(declare-var decode_fe03 Bool)
(declare-var decode_st1 Bool)
(declare-var decode_st2 Bool)
(declare-var decode_st3 Bool)
(declare-var decode_st4 Bool)
(declare-var instr_fe00_acc_state_nxt (_ BitVec 3))
(declare-var instr_fe00_bytes_read_nxt (_ BitVec 16))
(declare-var instr_fe01_acc_state_nxt (_ BitVec 3))
(declare-var instr_fe01_bytes_read_nxt (_ BitVec 16))
(declare-var instr_fe02_acc_state_nxt (_ BitVec 3))
(declare-var instr_fe02_bytes_read_nxt (_ BitVec 16))
(declare-var instr_fe03_acc_state_nxt (_ BitVec 3))
(declare-var instr_fe03_bytes_read_nxt (_ BitVec 16))
;; relations
(declare-rel rel.instr_fe02_acc_state_nxt ((_ BitVec 3) (_ BitVec 3)))
(declare-rel rel.decode_fe02 ((_ BitVec 2) (_ BitVec 16) Bool))
(declare-rel rel.instr_fe02_bytes_read_nxt ((_ BitVec 16) (_ BitVec 16)))
(declare-rel rel.instr_fe03_acc_state_nxt ((_ BitVec 3) (_ BitVec 3)))
(declare-rel rel.decode_fe03 ((_ BitVec 2) (_ BitVec 16) Bool))
(declare-rel rel.instr_fe03_bytes_read_nxt ((_ BitVec 16) (_ BitVec 16)))
(declare-rel rel.decode_st1 ((_ BitVec 3) Bool))
(declare-rel rel.child_1_acc_state_nxt ((_ BitVec 3) (_ BitVec 3)))
(declare-rel rel.decode_st2 ((_ BitVec 3) Bool))
(declare-rel rel.child_1_bytes_read_nxt ((_ BitVec 3) (_ BitVec 16) (_ BitVec 16)))
(declare-rel rel.child_2_acc_state_nxt ((_ BitVec 3) (_ BitVec 3)))
(declare-rel rel.child_2_bytes_read_nxt ((_ BitVec 16) (_ BitVec 16)))
(declare-rel rel.decode_st3 ((_ BitVec 3) Bool))
(declare-rel rel.child_3_bytes_read_nxt ((_ BitVec 16) (_ BitVec 16)))
(declare-rel rel.child_3_acc_state_nxt ((_ BitVec 16) (_ BitVec 3) (_ BitVec 16) (_ BitVec 3)))
(declare-rel rel.decode_st4 ((_ BitVec 3) Bool))
(declare-rel rel.child_4_acc_state_nxt ((_ BitVec 3) (_ BitVec 3)))
(declare-rel rel.child_4_bytes_read_nxt ((_ BitVec 16) (_ BitVec 16)))
(declare-rel rel.decode_fe00 ((_ BitVec 2) (_ BitVec 16) Bool))
(declare-rel rel.instr_fe00_acc_state_nxt ((_ BitVec 3) (_ BitVec 2) (_ BitVec 16) (_ BitVec 8) (_ BitVec 3)))
(declare-rel rel.instr_fe00_bytes_read_nxt ((_ BitVec 3) (_ BitVec 16) (_ BitVec 2) (_ BitVec 16) (_ BitVec 8) (_ BitVec 16)))
(declare-rel rel.decode_fe01 ((_ BitVec 2) (_ BitVec 16) Bool))
(declare-rel rel.instr_fe01_acc_state_nxt ((_ BitVec 3) (_ BitVec 3)))
(declare-rel rel.instr_fe01_bytes_read_nxt ((_ BitVec 16) (_ BitVec 16)))
;; clauses
(rule (=> (and (= b48 (and b49 b51))
               (= b49 (= cmd #b10))
               (= b51 (= cmdaddr #b1111111000000010)))
          (rel.decode_fe02 cmd cmdaddr b48)))
(rule (=> (and true)
          (rel.instr_fe02_acc_state_nxt acc_state acc_state)))
(rule (=> (and true)
          (rel.instr_fe02_bytes_read_nxt bytes_read bytes_read)))
(rule (=> (and (= b56 (and b57 b59))
               (= b57 (= cmd #b10))
               (= b59 (= cmdaddr #b1111111000000011)))
          (rel.decode_fe03 cmd cmdaddr b56)))
(rule (=> (and true)
          (rel.instr_fe03_acc_state_nxt acc_state acc_state)))
(rule (=> (and true)
          (rel.instr_fe03_bytes_read_nxt bytes_read bytes_read)))
(rule (=> (and (= b64 (= acc_state #b001)))
          (rel.decode_st1 acc_state b64)))
(rule (=> (and (= b68 (= acc_state #b001))
               (= bv67 (ite b68 #b010 acc_state)))
          (rel.child_1_acc_state_nxt acc_state bv67)))
(rule (=> (and (= b78 (= acc_state #b010)))
          (rel.decode_st2 acc_state b78)))
(rule (=> (and (= b73 (= acc_state #b001))
               (= bv72 (ite b73 bv75 bytes_read))
               (= bv75 (bvadd bytes_read #b0000000000000001)))
          (rel.child_1_bytes_read_nxt acc_state bytes_read bv72)))
(rule (=> (and (= b82 (= acc_state #b010))
               (= bv81 (ite b82 #b011 acc_state)))
          (rel.child_2_acc_state_nxt acc_state bv81)))
(rule (=> (and true)
          (rel.child_2_bytes_read_nxt bytes_read bytes_read)))
(rule (=> (and (= b87 (= acc_state #b011)))
          (rel.decode_st3 acc_state b87)))
(rule (=> (and (= b91 (= acc_state #b011))
               (= b94 (bvult bytes_read acc_len))
               (= bv90 (ite b91 bv93 acc_state))
               (= bv93 (ite b94 #b001 #b100)))
          (rel.child_3_acc_state_nxt acc_len acc_state bytes_read bv90)))
(rule (=> (and true)
          (rel.child_3_bytes_read_nxt bytes_read bytes_read)))
(rule (=> (and (= b100 (= acc_state #b100)))
          (rel.decode_st4 acc_state b100)))
(rule (=> (and (= b104 (= acc_state #b100))
               (= bv103 (ite b104 #b000 acc_state)))
          (rel.child_4_acc_state_nxt acc_state bv103)))
(rule (=> (and true)
          (rel.child_4_bytes_read_nxt bytes_read bytes_read)))
(rule (=> (and (= b0 (and b1 b4))
               (= b1 (= cmd #b10))
               (= b4 (= cmdaddr #b1111111000000000)))
          (rel.decode_fe00 cmd cmdaddr b0)))
(rule (=> (and (= b10 (and b11 b13))
               (= b11 (= cmd #b10))
               (= b13 (= cmdaddr #b1111111000000000))
               (= b15 (= acc_state #b000))
               (= b19 (= cmddata #b00000001))
               (= b9 (and b10 b15))
               (= bv18 (ite b19 #b001 #b000))
               (= bv8 (ite b9 bv18 acc_state)))
          (rel.instr_fe00_acc_state_nxt acc_state cmd cmdaddr cmddata bv8)))
(rule (=> (and (= b26 (and b27 b32))
               (= b27 (and b28 b30))
               (= b28 (= cmd #b10))
               (= b30 (= cmdaddr #b1111111000000000))
               (= b32 (= acc_state #b000))
               (= b35 (= cmddata #b00000001))
               (= bv25 (ite b26 bv34 bytes_read))
               (= bv34 (ite b35 #b0000000000000000 bytes_read)))
          (rel.instr_fe00_bytes_read_nxt acc_state bytes_read cmd cmdaddr cmddata bv25)))
(rule (=> (and (= b40 (and b41 b43))
               (= b41 (= cmd #b10))
               (= b43 (= cmdaddr #b1111111000000001)))
          (rel.decode_fe01 cmd cmdaddr b40)))
(rule (=> (and true)
          (rel.instr_fe01_acc_state_nxt acc_state acc_state)))
(rule (=> (and true)
          (rel.instr_fe01_bytes_read_nxt bytes_read bytes_read)))
